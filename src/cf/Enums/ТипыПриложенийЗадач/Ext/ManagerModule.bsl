#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует доступность назначений по типу приложения.
// 
// Параметры:
//  ТипПриложения - ПеречислениеСсылка.ТипыПриложенийЗадач
// 
// Возвращаемое значение:
//  см. Перечисления.ТипыПриложенийЗадач.НоваяДоступностьНазначений
// 
Функция ДоступностьНазначений(ТипПриложения) Экспорт
	
	ДоступностьНазначений = НоваяДоступностьНазначений();
	
	Если ТипПриложения = Документы Тогда
		
		ДоступностьНазначений.ВидПриложения = Истина;
		ДоступностьНазначений.Тематика = Истина;
		ДоступностьНазначений.Важность = Истина;
		ДоступностьНазначений.ГрифДоступа = Истина;
		ДоступностьНазначений.Организация = Истина;
		ДоступностьНазначений.Подразделение = Истина;
		ДоступностьНазначений.ФормаДокумента = Истина;
		ДоступностьНазначений.ВидДействияОбработки = Истина;
		ДоступностьНазначений.ФункцияУчастникаДействия = Истина;
		ДоступностьНазначений.ДополнительноеУсловие = Истина;
		
	ИначеЕсли ТипПриложения = Контрагенты Тогда
		
		ДоступностьНазначений.ДополнительноеУсловие = Истина;
		
	ИначеЕсли ТипПриложения = Мероприятия Тогда
		
		ДоступностьНазначений.ВидПриложения = Истина;
		ДоступностьНазначений.Важность = Истина;
		ДоступностьНазначений.ГрифДоступа = Истина;
		ДоступностьНазначений.Организация = Истина;
		ДоступностьНазначений.Подразделение = Истина;
		ДоступностьНазначений.ВидДействияОбработки = Истина;
		ДоступностьНазначений.ФункцияУчастникаДействия = Истина;
		ДоступностьНазначений.ДополнительноеУсловие = Истина;
		
	ИначеЕсли ТипПриложения = Письма Тогда
		
		ДоступностьНазначений.Важность = Истина;
		
	ИначеЕсли ТипПриложения = ПроектныеЗадачи Тогда
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьВидыПроектов") Тогда
			ДоступностьНазначений.ВидПриложения = Истина;
		КонецЕсли;
		ДоступностьНазначений.ГрифДоступа = Истина;
		ДоступностьНазначений.Организация = Истина;
		ДоступностьНазначений.Подразделение = Истина;
		ДоступностьНазначений.ДополнительноеУсловие = Истина;
		
	ИначеЕсли ТипПриложения = Проекты Тогда
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьВидыПроектов") Тогда
			ДоступностьНазначений.ВидПриложения = Истина;
		КонецЕсли;
		ДоступностьНазначений.ГрифДоступа = Истина;
		ДоступностьНазначений.Организация = Истина;
		ДоступностьНазначений.Подразделение = Истина;
		ДоступностьНазначений.ДополнительноеУсловие = Истина;
		
	ИначеЕсли ТипПриложения = ПротоколыМероприятий Тогда
		
		ДоступностьНазначений.ВидПриложения = Истина;
		ДоступностьНазначений.Важность = Истина;
		ДоступностьНазначений.ГрифДоступа = Истина;
		ДоступностьНазначений.Организация = Истина;
		ДоступностьНазначений.Подразделение = Истина;
		ДоступностьНазначений.ДополнительноеУсловие = Истина;
		
	ИначеЕсли ТипПриложения = Сотрудники Тогда
		
		ДоступностьНазначений.Подразделение = Истина;
		
	ИначеЕсли ТипПриложения = Файлы Тогда
		
		ДоступностьНазначений.ДополнительноеУсловие = Истина;
		
	КонецЕсли;
	
	Возврат ДоступностьНазначений;
	
КонецФункции

// Определяет тип приложения задачи.
// Если тип единственного приложения неизвестен, то будет исключение.
// 
// Параметры:
//  ВсеПриложения - Массив из ОпределяемыйТип.ПриложениеЗадач
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.ТипыПриложенийЗадач
// 
Функция ТипПриложения(ВсеПриложения) Экспорт
	
	Если ВсеПриложения.Количество() = 0 Тогда
		
		ТипПриложения = БезПриложений;
		
	ИначеЕсли ВсеПриложения.Количество() > 1 Тогда
		
		ТипПриложения = НесколькоПриложений;
		
	ИначеЕсли ВсеПриложения.Количество() = 1 Тогда
		
		ЕдинственноеПриложение = ВсеПриложения[0];
		Если ТипЗнч(ЕдинственноеПриложение) = Тип("ДокументСсылка.Бронь") Тогда
			
			ТипПриложения = Брони;
			
		ИначеЕсли ТипЗнч(ЕдинственноеПриложение) = Тип("СправочникСсылка.ДокументыПредприятия") Тогда
			
			ТипПриложения = Документы;
			
		ИначеЕсли ТипЗнч(ЕдинственноеПриложение) = Тип("СправочникСсылка.Контрагенты") Тогда
			
			ТипПриложения = Контрагенты;
			
		ИначеЕсли ТипЗнч(ЕдинственноеПриложение) = Тип("СправочникСсылка.Мероприятия") Тогда
			
			ТипПриложения = Мероприятия;
			
		ИначеЕсли ТипЗнч(ЕдинственноеПриложение) = Тип("ДокументСсылка.ВходящееПисьмо") Тогда
			
			ТипПриложения = Письма;
			
		ИначеЕсли ТипЗнч(ЕдинственноеПриложение) = Тип("ДокументСсылка.ИсходящееПисьмо") Тогда
			
			ТипПриложения = Письма;
			
		ИначеЕсли ТипЗнч(ЕдинственноеПриложение) = Тип("СправочникСсылка.ПроектныеЗадачи") Тогда
			
			ТипПриложения = ПроектныеЗадачи;
			
		ИначеЕсли ТипЗнч(ЕдинственноеПриложение) = Тип("СправочникСсылка.Проекты") Тогда
			
			ТипПриложения = Проекты;
			
		ИначеЕсли ТипЗнч(ЕдинственноеПриложение) = Тип("СправочникСсылка.ПротоколыМероприятий") Тогда
			
			ТипПриложения = ПротоколыМероприятий;
			
		ИначеЕсли ТипЗнч(ЕдинственноеПриложение) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
			
			ТипПриложения = СообщенияФорума;
			
		ИначеЕсли ТипЗнч(ЕдинственноеПриложение) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
			
			ТипПриложения = ТемыФорума;
			
		ИначеЕсли ТипЗнч(ЕдинственноеПриложение) = Тип("СправочникСсылка.Файлы") Тогда
			
			ТипПриложения = Файлы;
			
		ИначеЕсли ТипЗнч(ЕдинственноеПриложение) = Тип("СправочникСсылка.Сотрудники") Тогда
			
			ТипПриложения = Сотрудники;
			
		Иначе
			
			ВызватьИсключение СтрШаблон(
				НСтр("ru = 'Неизвестный тип приложения задачи %1 (%2)'"),
				ЕдинственноеПриложение,
				ТипЗнч(ЕдинственноеПриложение));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТипПриложения;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Стандартные") И Параметры.Стандартные Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Параметры.Вставить("Стандартные", Истина);
	ДанныеВыбора = ПолучитьДанныеВыбора(Параметры);
	
	КоличествоЭлементов = ДанныеВыбора.Количество();
	Для Индекс = 1 По КоличествоЭлементов Цикл
		
		ОбратныйИндекс = КоличествоЭлементов - Индекс;
		ЭлементДанныхВыбора = ДанныеВыбора[ОбратныйИндекс];
		
		Если ЭлементДанныхВыбора.Значение.Значение = Брони
			И Не ПолучитьФункциональнуюОпцию("ИспользоватьБронированиеПомещений") Тогда
			ДанныеВыбора.Удалить(ОбратныйИндекс);
			Продолжить;
		КонецЕсли;
		
		Если ЭлементДанныхВыбора.Значение.Значение = Мероприятия
			И Не ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеМероприятиями") Тогда
			ДанныеВыбора.Удалить(ОбратныйИндекс);
			Продолжить;
		КонецЕсли;
		
		Если ЭлементДанныхВыбора.Значение.Значение = Письма
			И Не ПолучитьФункциональнуюОпцию("ИспользоватьВстроеннуюПочту") Тогда
			ДанныеВыбора.Удалить(ОбратныйИндекс);
			Продолжить;
		КонецЕсли;
		
		Если ЭлементДанныхВыбора.Значение.Значение = ПроектныеЗадачи
			И Не ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда
			ДанныеВыбора.Удалить(ОбратныйИндекс);
			Продолжить;
		КонецЕсли;
		
		Если ЭлементДанныхВыбора.Значение.Значение = Проекты
			И Не ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда
			ДанныеВыбора.Удалить(ОбратныйИндекс);
			Продолжить;
		КонецЕсли;
		
		Если ЭлементДанныхВыбора.Значение.Значение = ПротоколыМероприятий
			И Не ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеМероприятиями") Тогда
			ДанныеВыбора.Удалить(ОбратныйИндекс);
			Продолжить;
		КонецЕсли;
		
		Если ЭлементДанныхВыбора.Значение.Значение = СообщенияФорума
			И Не ПолучитьФункциональнуюОпцию("ИспользоватьОбсуждения") Тогда
			ДанныеВыбора.Удалить(ОбратныйИндекс);
			Продолжить;
		КонецЕсли;
		
		Если ЭлементДанныхВыбора.Значение.Значение = ТемыФорума
			И Не ПолучитьФункциональнуюОпцию("ИспользоватьОбсуждения") Тогда
			ДанныеВыбора.Удалить(ОбратныйИндекс);
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует новую структуру доступности назначений.
// 
// Возвращаемое значение:
//  Структура:
//   * ВидПриложения - Булево
//   * Важность - Булево
//   * ГрифДоступа - Булево
//   * Организация - Булево
//   * Подразделение - Булево
//   * Тематика - Булево
//   * ФормаДокумента - Булево
//   * ВидДействияОбработки - Булево
//   * ФункцияУчастникаДействия - Булево
//   * ДополнительноеУсловие - Булево
// 
Функция НоваяДоступностьНазначений() Экспорт
	
	ДоступностьНазначений = Новый Структура;
	ДоступностьНазначений.Вставить("ВидПриложения", Ложь);
	ДоступностьНазначений.Вставить("Важность", Ложь);
	ДоступностьНазначений.Вставить("ГрифДоступа", Ложь);
	ДоступностьНазначений.Вставить("Организация", Ложь);
	ДоступностьНазначений.Вставить("Подразделение", Ложь);
	ДоступностьНазначений.Вставить("Тематика", Ложь);
	ДоступностьНазначений.Вставить("ФормаДокумента", Ложь);
	ДоступностьНазначений.Вставить("ВидДействияОбработки", Ложь);
	ДоступностьНазначений.Вставить("ФункцияУчастникаДействия", Ложь);
	ДоступностьНазначений.Вставить("ДополнительноеУсловие", Ложь);
	
	Возврат ДоступностьНазначений;
	
КонецФункции

#КонецОбласти

#КонецЕсли