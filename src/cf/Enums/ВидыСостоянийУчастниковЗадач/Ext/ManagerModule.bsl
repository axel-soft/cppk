#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает индекс картинки состояния из коллекции "КоллекцияСостоянияЗадач".
//
// Параметры:
//  ВидСостоянияУчастниковЗадач - ПеречислениеСсылка.ВидыСостоянийУчастниковЗадач - Состояние действия задачи.
// 
// Возвращаемое значение:
//  Число - Индекс картинки состояния.
//
Функция ИндексКартинкиСостояния(ВидСостоянияУчастниковЗадач) Экспорт
	
	Если ВидСостоянияУчастниковЗадач = ВРаботе Тогда
		
		Возврат -1;
		
	ИначеЕсли ВидСостоянияУчастниковЗадач = Выполнена Тогда
		
		Возврат 6;
		
	ИначеЕсли ВидСостоянияУчастниковЗадач = НаОбработкеРезультата Тогда
		
		Возврат 6;
		
	ИначеЕсли ВидСостоянияУчастниковЗадач = Новая Тогда
		
		Возврат -1;
		
	ИначеЕсли ВидСостоянияУчастниковЗадач = Отложена Тогда
		
		Возврат -1;
		
	ИначеЕсли ВидСостоянияУчастниковЗадач = Отменена Тогда
		
		Возврат 3;
		
	Иначе
		
		Возврат -1;
		
	КонецЕсли;
	
КонецФункции

// Определяет, какие виды действий являются ожидаемыми.
// 
// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.ВидыСостоянийУчастниковЗадач.
// 	
Функция ОжидаемыеДействия() Экспорт
	
	ОжидаемыеДействия = Новый Массив;
	ОжидаемыеДействия.Добавить(Новая);
	ОжидаемыеДействия.Добавить(ВРаботе);
	
	Возврат ОжидаемыеДействия;
	
КонецФункции

// Определяет, какие виды действий являются начатыми и ожидаемыми.
// 
// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.ВидыСостоянийУчастниковЗадач.
// 	
Функция НачатыеИОжидаемыеДействия() Экспорт
	
	НачатыеИОжидаемыеДействия = Новый Массив;
	НачатыеИОжидаемыеДействия.Добавить(Новая);
	НачатыеИОжидаемыеДействия.Добавить(ВРаботе);
	НачатыеИОжидаемыеДействия.Добавить(НаОбработкеРезультата);
	НачатыеИОжидаемыеДействия.Добавить(Выполнена);
	
	Возврат НачатыеИОжидаемыеДействия;
	
КонецФункции

// Определяет, является ли указанное состояние действие состоянием совершенного действия.
//
// Параметры:
//  ВидСостоянияУчастниковЗадач - ПеречислениеСсылка.ВидыСостоянийУчастниковЗадач - Состояние.
// 
// Возвращаемое значение:
//  Булево - Это совершенное действие.
//
Функция ЭтоВыполненноеДействие(ВидСостоянияУчастниковЗадач) Экспорт
	
	Возврат ВидСостоянияУчастниковЗадач = Выполнена;
	
КонецФункции

// Определяет, является ли указанное состоянием действие, по которое находится в работе.
//
// Параметры:
//  ВидСостоянияУчастниковЗадач - ПеречислениеСсылка.ВидыСостоянийУчастниковЗадач - Состояние.
// 
// Возвращаемое значение:
//  Булево - Это действие в работе.
//
Функция ЭтоДействиеВРаботе(ВидСостоянияУчастниковЗадач) Экспорт
	
	Возврат ВидСостоянияУчастниковЗадач = ВРаботе;
	
КонецФункции

// Определяет, является ли указанное состоянием действие, по которому уже была начата работа.
//
// Параметры:
//  ВидСостоянияУчастниковЗадач - ПеречислениеСсылка.ВидыСостоянийУчастниковЗадач - Состояние.
// 
// Возвращаемое значение:
//  Булево - Это начатое действие.
//
Функция ЭтоНачатоеДействие(ВидСостоянияУчастниковЗадач) Экспорт
	
	Возврат ВидСостоянияУчастниковЗадач = ВРаботе
		Или ВидСостоянияУчастниковЗадач = НаОбработкеРезультата
		Или ВидСостоянияУчастниковЗадач = Выполнена;
	
КонецФункции

// Определяет, является ли указанное состояние действие состоянием нового действия.
//
// Параметры:
//  ВидСостоянияУчастниковЗадач - ПеречислениеСсылка.ВидыСостоянийУчастниковЗадач - Состояние.
// 
// Возвращаемое значение:
//  Булево - Это новое действие.
//
Функция ЭтоНовоеДействие(ВидСостоянияУчастниковЗадач) Экспорт
	
	Возврат ВидСостоянияУчастниковЗадач = Новая;
	
КонецФункции

// Определяет, является ли указанное состояние действие состоянием ожидаемого действия.
//
// Параметры:
//  ВидСостоянияУчастниковЗадач - ПеречислениеСсылка.ВидыСостоянийУчастниковЗадач - Состояние.
// 
// Возвращаемое значение:
//  Булево - Это ожидаемое действие.
//
Функция ЭтоОжидаемоеДействие(ВидСостоянияУчастниковЗадач) Экспорт
	
	ОжидаемыеДействия = ОжидаемыеДействия();
	ЭтоОжидаемоеДействие = ОжидаемыеДействия.Найти(ВидСостоянияУчастниковЗадач) <> Неопределено;
	
	Возврат ЭтоОжидаемоеДействие;
	
КонецФункции

// Определяет, является ли указанное состояние действия состоянием отмененного действия.
//
// Параметры:
//  ВидСостоянияУчастниковЗадач - ПеречислениеСсылка.ВидыСостоянийУчастниковЗадач - Вид состояния участников задач.
// 
// Возвращаемое значение:
//  Булево - Это отмененное действие.
//
Функция ЭтоОтмененноеДействие(ВидСостоянияУчастниковЗадач) Экспорт
	
	Возврат ВидСостоянияУчастниковЗадач = Отменена;
	
КонецФункции

// Определяет, является ли указанное состояние действия состоянием отложенного действия.
//
// Параметры:
//  ВидСостоянияУчастниковЗадач - ПеречислениеСсылка.ВидыСостоянийУчастниковЗадач - Вид состояния участников задач.
// 
// Возвращаемое значение:
//  Булево - Это отмененное действие.
//
Функция ЭтоОтложенноеДействие(ВидСостоянияУчастниковЗадач) Экспорт
	
	Возврат ВидСостоянияУчастниковЗадач = Отложена;
	
КонецФункции

// Определяет, что это ожидающее проверки действие.
//
// Параметры:
//  ВидСостоянияУчастниковЗадач - ПеречислениеСсылка.ВидыСостоянийУчастниковЗадач - Вид состояние.
// 
// Возвращаемое значение:
//  Булево - Это ожидающая проверки действие.
//
Функция ЭтоОжидающееПроверкиДействие(ВидСостоянияУчастниковЗадач) Экспорт
	
	Возврат ВидСостоянияУчастниковЗадач = НаОбработкеРезультата;
	
КонецФункции

#КонецОбласти

#КонецЕсли