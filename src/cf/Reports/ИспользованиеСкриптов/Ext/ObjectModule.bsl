#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
		КомпоновщикНастроек.ПолучитьНастройки(),
		ДанныеРасшифровки);
	
	Скрипт = Неопределено;
	Для Каждого ЭлементОтбора Из КомпоновщикНастроек.ПолучитьНастройки().Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Скрипт") Тогда
			Скрипт = ЭлементОтбора.ПравоеЗначение;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Скрипт) Тогда
		Скрипт = Справочники.АвтоподстановкиДляОбъектов.АдресатДокумента;
	КонецЕсли;	
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса(Скрипт);
	Запрос.УстановитьПараметр("Скрипт", Скрипт);
	
	ВнешниеНаборыДанных = Новый Структура();
	ВнешниеНаборыДанных.Вставить("ВнешниеДанные", Запрос.Выполнить().Выгрузить());
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапроса(Скрипт)
	
	ЧастиЗапроса = Новый Массив();
	
	ТипСкрипта = Скрипт.Метаданные().ПолноеИмя();
	Макет = ПолучитьМакет("ОбластиДанныхИспользующиеСкрипты");
	ОбластьДляЗапроса = Макет.Область("C1:C4");
	Построитель = Новый ПостроительЗапроса;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьДляЗапроса);
	Построитель.Выполнить();
	Выборка = Построитель.Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если СтрНачинаетсяС(Выборка.ТипСкрипта, ТипСкрипта) Тогда
			ЧастиЗапроса.Добавить(ТекстЗапросаПоОбласти(
				Выборка.ТипСкрипта, Выборка.ОбластьДанных, Выборка.ИмяТаблицы, Выборка.ИмяРеквизита));
		КонецЕсли;
	КонецЦикла;
	
	// Рабочие группы используют ссылку на алгоритм вместо вызова строкой
	ЧастиЗапроса.Добавить("ВЫБРАТЬ
		|	""Автозаполняемые рабочие группы"" КАК ОбластьДанных,
		|	Таблица.Ссылка КАК Данные,
		|	""Алгоритм автозаполнения"" КАК ИмяРеквизита,
		|	&Скрипт КАК Скрипт
		|ИЗ
		|	Справочник.РабочиеГруппы КАК Таблица
		|ГДЕ
		|	Таблица.АлгоритмАвтозаполнения = &Скрипт");
	
	Возврат СтрСоединить(ЧастиЗапроса, Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС);
	
КонецФункции

Функция ТекстЗапросаПоОбласти(ТипСкрипта, ОбластьДанных, ИмяТаблицы, ИмяРеквизита)
	
	Если ТипСкрипта = Метаданные.Справочники.Алгоритмы.ПолноеИмя() Тогда
		Возврат СтрШаблон(
			"ВЫБРАТЬ
			|	""%1"" КАК ОбластьДанных,
			|	Таблица.Ссылка КАК Данные,
			|	""%2"" КАК ИмяРеквизита,
			|	&Скрипт КАК Скрипт
			|ИЗ
			|	Справочник.%3 КАК Таблица
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Алгоритмы КАК Алгоритмы
			|		ПО Таблица.%2 ПОДОБНО ""%4Справочники.Алгоритмы.Вызвать("""""" + Алгоритмы.КлючДляВызова + """"""%4""
			|ГДЕ
			|	Алгоритмы.Ссылка = &Скрипт",
			ОбластьДанных, ИмяРеквизита, ИмяТаблицы, "%");
	
	ИначеЕсли ТипСкрипта = "Справочник.АвтоподстановкиДляОбъектовПоРС" Тогда
		Возврат СтрШаблон(
			"ВЫБРАТЬ
			|	""%1"" КАК ОбластьДанных,
			|	Таблица.ВидДействия КАК Данные,
			|	""%2"" КАК ИмяРеквизита,
			|	&Скрипт КАК Скрипт
			|ИЗ
			|	РегистрСведений.%3 КАК Таблица
			|ГДЕ
			|	Таблица.%2 = &Скрипт",
			ОбластьДанных, ИмяРеквизита, ИмяТаблицы);
	Иначе
		Возврат СтрШаблон(
			"ВЫБРАТЬ
			|	""%1"" КАК ОбластьДанных,
			|	Таблица.Ссылка КАК Данные,
			|	""%2"" КАК ИмяРеквизита,
			|	&Скрипт КАК Скрипт
			|ИЗ
			|	Справочник.%3 КАК Таблица
			|ГДЕ
			|	Таблица.%2 = &Скрипт",
			ОбластьДанных, ИмяРеквизита, ИмяТаблицы);
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли