
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПриСозданииНаСервереРедакцииКонфигурации();
	
	Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	ИспользоватьУчетПоОрганизациям = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям");
	Если Не ИспользоватьУчетПоОрганизациям Тогда
		Элементы.Организация.Видимость = Ложь;
	Иначе	
		Элементы.Организация.Видимость = Истина;
	КонецЕсли;
	
	Период.Вариант = ВариантСтандартногоПериода.ЭтотМесяц;
	
	Отчеты.РегламентированныйОтчетПоРезультатамРассмотренияОбращений.ЗаполнитьСписокВыбораСостоянияВыгрузки(
		Элементы.СостояниеВыгрузкиССТУ);
	СостояниеВыгрузкиССТУ = РаботаСОбращениямиКлиентСервер.ВсеОбращения();
	
	Элементы.СостояниеГотовности.СписокВыбора.Добавить(
		РаботаСОбращениямиКлиентСервер.ГотовыеКВыгрузке(), НСтр("ru = 'Установлен'"));
	Элементы.СостояниеГотовности.СписокВыбора.Добавить(
		РаботаСОбращениямиКлиентСервер.НеГотовыеКВыгрузке(), НСтр("ru = 'Не установлен'"));
	Элементы.СостояниеГотовности.СписокВыбора.Добавить(
		РаботаСОбращениямиКлиентСервер.ВсеОбращения(), НСтр("ru = 'Оба (без отбора)'"), , );
	СостояниеГотовности = РаботаСОбращениямиКлиентСервер.ВсеОбращения();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "УстановкаСнятиеФлагаГотовности" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		ИзменилосьСостояниеВыгрузкиССТУ = ОбщегоНазначенияДокументооборотКлиентСервер.ПрисвоитьОтличающееся(
			СостояниеВыгрузкиССТУ, Параметр.СостояниеВыгрузкиССТУ);
		ИзменилосьСостояниеГотовности = ОбщегоНазначенияДокументооборотКлиентСервер.ПрисвоитьОтличающееся(
			СостояниеГотовности, Параметр.СостояниеГотовности);
		Если ИзменилосьСостояниеВыгрузкиССТУ Или ИзменилосьСостояниеГотовности Тогда
			СформироватьНаСервере(); // Если изменилось состояние в форме массовой установки, то переформируем заново.
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	Если Не ЗначениеЗаполнено(Расшифровка) Тогда 
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Расшифровка) = Тип("СправочникСсылка.Файлы") Тогда
		
		СтандартнаяОбработка = Ложь;
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляОткрытия(Расшифровка,,УникальныйИдентификатор,,ПредыдущийАдресФайла);
		РаботаСФайламиКлиент.Открыть(ДанныеФайла, УникальныйИдентификатор);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ВыгрузитьВССТУ(Команда)
	
	Фраза = СтрШаблон(НСтр("ru = 'Будет создана ""Выгрузка в ССТУ"" для последующей выгрузки в файл.
		|В нее войдут документы за период, указанный в отчете.
		|По %1 - ""%2"".
		|В выгрузку войдут только документы с признаком ""Готово к выгрузке в ССТУ"" на закладке ""Вопросы"".
		|Продолжить?'"),
		РедакцииКонфигурацииКлиентСервер.ОрганизацииДательный(),
		Организация);
	Если Ждать ВопросАсинх(Фраза, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЭтоСозданиеИзОтчета", Истина);
	ПараметрыФормы.Вставить("Период", Новый СтандартныйПериод());
	ПараметрыФормы.Период.ДатаНачала = Период.ДатаНачала;
	ПараметрыФормы.Период.ДатаОкончания = Период.ДатаОкончания;
	ПараметрыФормы.Вставить("Организация", Организация);
	ОткрытьФорму("Документ.ВыгрузкаВССТУ.Форма.ФормаДокумента", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОчиститьСообщения();
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокВыгрузок(Команда)
	
	ОткрытьФорму("Документ.ВыгрузкаВССТУ.Форма.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура СохранитьКак(Команда)
	
	ИмяФайла = "";
	Если ИспользоватьУчетПоОрганизациям И ЗначениеЗаполнено(Организация) Тогда 
		ИмяФайла = СтрШаблон(
			НСтр("ru = 'Регламентированный отчет %1 за период с %2 по %3'"), 
			СокрЛП(Организация),
			Формат(Период.ДатаНачала, "ДФ=dd.MM.yyyy"),
			Формат(Период.ДатаОкончания, "ДФ=dd.MM.yyyy"));
	Иначе
		ИмяФайла = СтрШаблон(
			НСтр("ru = 'Регламентированный отчет за период с %1 по %2'"), 
			Формат(Период.ДатаНачала, "ДФ=dd.MM.yyyy"),
			Формат(Период.ДатаОкончания, "ДФ=dd.MM.yyyy"));
	КонецЕсли;
	
	ИмяФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИмяФайла, "");
	
	ПолноеИмяФайла = Ждать РаботаСОбращениямиКлиент.ФайлВыбранныйВДиалоге_Асинх(
		РежимДиалогаВыбораФайла.Сохранение,
		ИмяФайла,
		"Файл Excel (*.xls;*.xlsx)|*.xlsx;*.xls");
	Если Не ЗначениеЗаполнено(ПолноеИмяФайла) Тогда
		Возврат;
	КонецЕсли;
	
	ТипСохранения = ТипФайлаТабличногоДокумента.XLS;
	Файл = Новый Файл(ПолноеИмяФайла);
	Если СтрНайти(НРег(Файл.Расширение), "xlsx") > 0 Тогда
		ТипСохранения = ТипФайлаТабличногоДокумента.XLSX;
	КонецЕсли;
	
	Результат.ЗаписатьАсинх(ПолноеИмяФайла, ТипСохранения);

КонецПроцедуры

&НаКлиенте
Процедура МассоваяУстановкаГотовности(Команда)
	
	ОчиститьСообщения();
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("Организация", Организация);
	ПараметрыОткрытия.Вставить("Период", Период);
	ПараметрыОткрытия.Вставить("СостояниеВыгрузкиССТУ", СостояниеВыгрузкиССТУ);
	ОткрытьФорму(
		"Отчет.РегламентированныйОтчетПоРезультатамРассмотренияОбращений.Форма.МассоваяУстановкаПризнакаГотовности",
		ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьНаСервере()
	
	Результат.Очистить();
	
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетОтчета");
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.ОрганизацияНаименованиеПолное = 
		Справочники.Организации.ПредставлениеОрганизацииНаДату(Организация, Период.ДатаОкончания);
	Область.Параметры.ДатаНачала = Формат(Период.ДатаНачала, "ДФ=dd.MM.yyyy");
	Область.Параметры.ДатаОкончания = Формат(Период.ДатаОкончания, "ДФ=dd.MM.yyyy");
	Область.Параметры.ДатаЗаполнения = Формат(ТекущаяДата, "ДФ=dd.MM.yyyy");
	
	Результат.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("ТаблицаШапка");
	Результат.Вывести(Область);
	
	//Кэш имен перечислений.
	ИменаРезультатов = Новый Соответствие;
	Для Каждого Элемент Из Метаданные.Перечисления.РезультатыРассмотренияОбращений.ЗначенияПеречисления Цикл
		Если Элемент.Имя <> "НаправленоВИнойОрган" Тогда
			ИменаРезультатов.Вставить(Перечисления.РезультатыРассмотренияОбращений[Элемент.Имя], Элемент.Имя);
		КонецЕсли;
	КонецЦикла;
	
	ИменаРезультатов.Вставить(Истина, "НаходитсяНаРассмотренииСПродлением");
	ИменаРезультатов.Вставить(Ложь, "НаходитсяНаРассмотренииБезПродления");
	
	ПараметрыОтчета = Отчеты.РегламентированныйОтчетПоРезультатамРассмотренияОбращений.НовыйПараметрыОтчета();
	ЗаполнитьЗначенияСвойств(
		ПараметрыОтчета, ЭтотОбъект, "Организация, Период, СостояниеВыгрузкиССТУ, СостояниеГотовности");
	РезультатыЗапроса = Отчеты.РегламентированныйОтчетПоРезультатамРассмотренияОбращений.РезультатыЗапросаДляОтчета(
		ПараметрыОтчета);
	
	ФайлыОтветов = РезультатыЗапроса[8].Выгрузить();
	ФайлыОтветов.Индексы.Добавить("Обращение, Вопрос");
	ФайлыОтветовОтбор = Новый Структура("Обращение, Вопрос");
	КонтактнаяИнформация = Новый Соответствие;
	
	ВыбИтог = РезультатыЗапроса[6].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыбИтог.Следующий() Цикл
		
		ВыбДокумент = ВыбИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыбДокумент.Следующий() Цикл
			
			КолВопросов = 0;
			ВыбВопрос = ВыбДокумент.Выбрать();
			Пока ВыбВопрос.Следующий() Цикл
				КолВопросов = КолВопросов + 1;
				
				Файлы = Новый Массив;
				Если ВыбВопрос.РезультатРассмотрения <> Перечисления.РезультатыРассмотренияОбращений.ОставленоБезОтвета
					Тогда
					ФайлыОтветовОтбор.Обращение = ВыбВопрос.ДокументСсылка;
					ФайлыОтветовОтбор.Вопрос = ВыбВопрос.Вопрос;
					ФайлыСтроки = ФайлыОтветов.НайтиСтроки(ФайлыОтветовОтбор);
					Для Каждого Строка Из ФайлыСтроки Цикл
						Файлы.Добавить(Строка.ПолноеИмя);
					КонецЦикла;
				КонецЕсли;
				
				СтрФайлы = СтрСоединить(Файлы, ";" + Символы.ПС);
			
				Область = Макет.ПолучитьОбласть("ТаблицаСтрока");
				ЗаполнитьЗначенияСвойств(Область.Параметры, ВыбВопрос);
				
				Если ВыбВопрос.ЭтоОрганИсполнительнойВласти = Истина Тогда
					Область.Параметры.НаправленоГосУчреждениеПредставление = ВыбВопрос.НаправленоОрганПредставление;
				Иначе
					Область.Параметры.НаправленоИнойОгранПредставление = ВыбВопрос.НаправленоОрганПредставление;
				КонецЕсли;
				
				Если ПустаяСтрока(ВыбВопрос.ДокументНомер) Тогда
					Область.Параметры.ДокументНомер = "-";
				КонецЕсли;
				Если СтрФайлы <> "" Тогда
					Если ЗначениеЗаполнено(Область.Параметры.РезультатДанОтветАвторуДата) Тогда
						Область.Параметры.РезультатДанОтветАвторуДата = Формат(
							Область.Параметры.РезультатДанОтветАвторуДата, "ДФ=dd.MM.yyyy") +
							Символы.ПС + СтрФайлы;
					Иначе
						Область.Параметры.РезультатДанОтветАвторуДата = СтрФайлы;
					КонецЕсли;
					Область.Параметры.РезультатФайлОтвета = ФайлыСтроки.Получить(0).Ссылка;
				КонецЕсли;
				
				//Транспонирование результатов по колонкам.
				Если ЗначениеЗаполнено(ВыбВопрос.РезультатРассмотрения) Тогда 
					ИмяРезультата = ИменаРезультатов.Получить(ВыбВопрос.РезультатРассмотрения);
				Иначе 
					ИмяРезультата = ИменаРезультатов.Получить(ВыбВопрос.СрокИсполненияПродлен);
				КонецЕсли;
				Если ИмяРезультата <> Неопределено Тогда
					Область.Параметры["Результат" + ИмяРезультата] = Истина;
					Если ИмяРезультата = "ВТомЧислеМерыПриняты" Тогда
						//Подчиненное значение.
						Область.Параметры.РезультатПоддержано = Истина;
					КонецЕсли;
				КонецЕсли;
				
				Если КолВопросов = 1 Тогда
					//Заполнение данных заявителя. Только в первой строке.
					Заявитель = "";
					Если ЗначениеЗаполнено(ВыбВопрос.ПоступлениеДатаРегистрации) Тогда
						Область.Параметры.ПоступлениеДатаРегистрации = Формат(
							ВыбВопрос.ПоступлениеДатаРегистрации, "ДФ=dd.MM.yyyy");
						Заявитель = Символы.ПС;
					КонецЕсли;
					Если ЗначениеЗаполнено(ВыбВопрос.Заявитель) Тогда
						
						КИЗаявителя = КонтактнаяИнформация.Получить(ВыбВопрос.Заявитель);
						Если КИЗаявителя = Неопределено Тогда 
							ДанныеОтправителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
								ВыбВопрос.Заявитель, "ЮрФизЛицо, ФизЛицо");
							Если ДанныеОтправителя.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо
								Или ДанныеОтправителя.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель
								Тогда 
								АдресЭлектроннойПочты = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
									ДанныеОтправителя.ФизЛицо,
									Справочники.ВидыКонтактнойИнформации.EmailФизическогоЛица,,
									ТекущаяДатаСеанса());
								ПочтовыйАдрес = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
									ДанныеОтправителя.ФизЛицо,
									Справочники.ВидыКонтактнойИнформации.ДомашнийАдресФизическогоЛица,,
									ТекущаяДатаСеанса());
							Иначе 
								АдресЭлектроннойПочты = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
									ВыбВопрос.Заявитель,
									Справочники.ВидыКонтактнойИнформации.EmailКонтрагента,,
									ТекущаяДатаСеанса());
								ПочтовыйАдрес = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
									ВыбВопрос.Заявитель,
									Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента,,
									ТекущаяДатаСеанса());
							КонецЕсли;
							
							КонтактнаяИнформация.Вставить(ВыбВопрос.Заявитель, 
								Новый Структура("АдресЭлектроннойПочты, ПочтовыйАдрес", 
								АдресЭлектроннойПочты, ПочтовыйАдрес));
						Иначе 
							АдресЭлектроннойПочты = КИЗаявителя.АдресЭлектроннойПочты;
							ПочтовыйАдрес = КИЗаявителя.ПочтовыйАдрес;
						КонецЕсли;
						
						Заявитель = Заявитель +
							"Автор: " + Строка(ВыбВопрос.ЗаявительНаименование);
						Если ЗначениеЗаполнено(АдресЭлектроннойПочты)
							Или ЗначениеЗаполнено(ПочтовыйАдрес) Тогда
							Заявитель = Заявитель + "
								|Адрес для ответа:" +
								?(ЗначениеЗаполнено(ПочтовыйАдрес), "
								|почтовый: " + ПочтовыйАдрес, "") +
								?(ЗначениеЗаполнено(АдресЭлектроннойПочты), "
								|e-mail: " + АдресЭлектроннойПочты, "");
						КонецЕсли;
						Область.Параметры.ЗаявительПредставление = Заявитель;
					КонецЕсли;
				КонецЕсли;
				
				Результат.Вывести(Область);
			КонецЦикла; //Вопрос
			
			Если КолВопросов > 1 Тогда
				//Объединение строк в колонках по документу в целом.
				КолСтрок = Результат.ВысотаТаблицы;
				НомерНач = КолСтрок - КолВопросов + 1;
				Результат.Область(НомерНач, 1, КолСтрок, 2).Объединить();
				Для НК = 3 По 5 Цикл
					Результат.Область(НомерНач, НК, КолСтрок, НК).Объединить();
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла; //Документ
		
		// Итоги таблицы.
		Область = Макет.ПолучитьОбласть("ТаблицаИтог");
		ЗаполнитьЗначенияСвойств(Область.Параметры, ВыбИтог);
		
		ВыбВопрос = РезультатыЗапроса[7].Выбрать();
		Пока ВыбВопрос.Следующий() Цикл
			// Транспонирование результатов по колонкам.
			ИмяРезультата = ИменаРезультатов.Получить(ВыбВопрос.РезультатРассмотрения);
			Если ИмяРезультата <> Неопределено Тогда
				Область.Параметры["Результат" + ИмяРезультата] = ВыбВопрос.Количество;
			КонецЕсли;
		КонецЦикла;
		
		Результат.Вывести(Область);
	
	КонецЦикла;
	
	Результат.ТолькоПросмотр = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервереРедакцииКонфигурации()
	
	Элементы.Организация.Заголовок = РедакцииКонфигурацииКлиентСервер.Организация();
	
КонецПроцедуры

#КонецОбласти