#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Процедура-обработчик события ПриКомпоновкеРезультата. Устанавливает цвета диаграмм.
//
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДокументРезультат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	Фонд = ФондРабочегоВремениСогласноНастройкам(Настройки);
	ВнешниеНаборы = Новый Структура("Фонд", Фонд);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборы, ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ОбщегоНазначенияДокументооборот.УстановитьЦветаДиаграмм(ДокументРезультат);

КонецПроцедуры

// Возвращает таблицу фонда рабочего времени согласно настройкам компоновки данных.
//
Функция ФондРабочегоВремениСогласноНастройкам(Настройки)
	
	Фонд = Новый ТаблицаЗначений;
	Фонд.Колонки.Добавить("Пользователь", Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	Фонд.Колонки.Добавить("День", Новый ОписаниеТипов("Дата"));
	Фонд.Колонки.Добавить("Фонд", Новый ОписаниеТипов("Число"));
	
	ПоляФонда = Новый Массив;
	ПоляФонда.Добавить(Новый ПолеКомпоновкиДанных("Фонд"));
	ПоляФонда.Добавить(Новый ПолеКомпоновкиДанных("ПроцентФонда"));
	
	Для Каждого ВыбранноеПоле Из Настройки.Выбор.Элементы Цикл
		Если ВыбранноеПоле.Использование
			И ПоляФонда.Найти(ВыбранноеПоле.Поле) <> Неопределено Тогда
			Фонд = ФондРабочегоВремениСогласноПараметрам(Настройки.ПараметрыДанных.Элементы);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Фонд;
	
КонецФункции

// Возвращает таблицу фонда рабочего времени согласно параметрам настройки компоновки данных.
//
Функция ФондРабочегоВремениСогласноПараметрам(ЗначенияПараметров)
	
	Параметры = Новый Структура("Период, Сотрудник, Подразделение",
		Новый СтандартныйПериод(Дата(1, 1, 1), КонецДня(ТекущаяДатаСеанса())),
		Справочники.Сотрудники.ПустаяСсылка(),
		Справочники.СтруктураПредприятия.ПустаяСсылка());
	Для Каждого КлючИЗначение Из Параметры Цикл
		ПараметрКД = Новый ПараметрКомпоновкиДанных(КлючИЗначение.Ключ);
		Для Каждого ЗначениеПараметра Из ЗначенияПараметров Цикл
			Если ЗначениеПараметра.Параметр = ПараметрКД
				И ЗначениеПараметра.Использование Тогда
				Параметры[КлючИЗначение.Ключ] = ЗначениеПараметра.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Параметры.Вставить("НачалоПериода", НачалоДня(Параметры.Период.ДатаНачала));
	Параметры.Вставить("КонецПериода", КонецДня(Параметры.Период.ДатаОкончания));
	
	Если ТипЗнч(Параметры.Сотрудник) = Тип("ПолеКомпоновкиДанных")
		И Параметры.Сотрудник = Новый ПолеКомпоновкиДанных("ПараметрыДанных.ТекущийПользователь") Тогда
		ТекущийПользователь = ЗначенияПараметров.Найти("ТекущийПользователь");
		Параметры.Сотрудник = ТекущийПользователь.Значение;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.НачалоПериода) Тогда
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	ФактическиеТрудозатраты.ДатаДобавления КАК ДатаДобавления
			|ИЗ
			|	РегистрСведений.ФактическиеТрудозатраты КАК ФактическиеТрудозатраты
			|ГДЕ
			|	ФактическиеТрудозатраты.ДатаДобавления <> ДАТАВРЕМЯ(1, 1, 1)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаДобавления");
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Параметры.НачалоПериода = Выборка.ДатаДобавления;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Сотрудник) Тогда
		СотрудникиМассивом = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Параметры.Сотрудник);
	ИначеЕсли ЗначениеЗаполнено(Параметры.Подразделение) Тогда
		СотрудникиМассивом = Сотрудники.СотрудникиПодразделения(Параметры.Подразделение);
	Иначе
		СотрудникиМассивом = Сотрудники.ВсеСотрудники();
	КонецЕсли;
	
	Фонд = УчетВремени.ФондРабочегоВремени(СотрудникиМассивом, Параметры.НачалоПериода, Параметры.КонецПериода);
	Фонд.Колонки.Добавить("День", Новый ОписаниеТипов("Дата"));
	Фонд.Колонки.Длительность.Имя = "Фонд";
	
	Для Каждого Строка Из Фонд Цикл
		Строка.День = НачалоДня(Строка.ДатаНачала);
		Строка.Фонд = Строка.Фонд / 3600;
	КонецЦикла;
	Фонд.Свернуть("Сотрудник, День", "Фонд");
	
	Возврат Фонд;
	
КонецФункции

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли