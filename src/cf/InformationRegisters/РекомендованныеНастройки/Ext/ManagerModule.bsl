#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записывает рекомендованные настройки в базу данных.
//
// Параметры:
//  ИмяФормы                    - Строка    - Полное имя формы.
//  КлючНазначенияИспользования - Строка    - Ключ назначения использования.
//  РекомендованныеНастройки    - Структура - Рекомендованные настройки.
//                                            См. РаботаСРекомендованнымиНастройками.РекомендованныеНастройки().
// 
// Возвращаемое значение:
//  УникальныйИдентификатор - Версия записанных рекомендованных настроек.
//
Функция ЗаписатьНастройки(ИмяФормы, КлючНазначенияИспользования, РекомендованныеНастройки) Экспорт
	
	СокращенноеИмяФормы = СокращенноеИмяФормы(ИмяФормы);
	СокращенныйКлючНазначенияИспользования = СокращенныйКлючНазначенияИспользования(КлючНазначенияИспользования);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.СокращенноеИмяФормы.Установить(СокращенноеИмяФормы);
	НаборЗаписей.Отбор.СокращенныйКлючНазначенияИспользования.Установить(СокращенныйКлючНазначенияИспользования);
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.СокращенноеИмяФормы = СокращенноеИмяФормы;
	НоваяЗапись.СокращенныйКлючНазначенияИспользования = СокращенныйКлючНазначенияИспользования;
	НоваяЗапись.Настройки = Новый ХранилищеЗначения(РекомендованныеНастройки);
	НоваяЗапись.ВерсияНастроек = Новый УникальныйИдентификатор;
	НоваяЗапись.ИмяФормы = ИмяФормы;
	НоваяЗапись.КлючНазначенияИспользования = КлючНазначенияИспользования;
	
	НаборЗаписей.Записать();
	
	Возврат НоваяЗапись.ВерсияНастроек;
	
КонецФункции

// Получает данные рекомедованных настроек из базы данных.
//
// Параметры:
//  ИмяФормы                    - Строка - Полное имя формы.
//  КлючНазначенияИспользования - Строка - Ключ назначения использования.
// 
// Возвращаемое значение:
//  Структура - Данные рекомендованных настроек.
//   * РекомендованныеНастройки - Структура, Неопределено - Рекомендованные настройки.
//                                                          См. РаботаСРекомендованнымиНастройками.РекомендованныеНастройки().
//   * ВерсияНастроек           - УникальныйИдентификатор - Версия рекомендованных настроек.
//
Функция ПолучитьНастройки(ИмяФормы, КлючНазначенияИспользования) Экспорт
	
	СокращенноеИмяФормы = СокращенноеИмяФормы(ИмяФормы);
	СокращенныйКлючНазначенияИспользования = СокращенныйКлючНазначенияИспользования(КлючНазначенияИспользования);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	РекомендованныеНастройки.Настройки КАК Настройки,
		|	РекомендованныеНастройки.ВерсияНастроек КАК ВерсияНастроек
		|ИЗ
		|	РегистрСведений.РекомендованныеНастройки КАК РекомендованныеНастройки
		|ГДЕ
		|	РекомендованныеНастройки.СокращенноеИмяФормы = &СокращенноеИмяФормы
		|	И РекомендованныеНастройки.СокращенныйКлючНазначенияИспользования = &СокращенныйКлючНазначенияИспользования");
	
	Запрос.УстановитьПараметр("СокращенноеИмяФормы", СокращенноеИмяФормы);
	Запрос.УстановитьПараметр("СокращенныйКлючНазначенияИспользования", СокращенныйКлючНазначенияИспользования);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ДанныеРекомендованныхНастроек = Новый Структура("РекомендованныеНастройки, ВерсияНастроек");
	Если Выборка.Следующий() Тогда
		ДанныеРекомендованныхНастроек.РекомендованныеНастройки = Выборка.Настройки.Получить();
		ДанныеРекомендованныхНастроек.ВерсияНастроек = Выборка.ВерсияНастроек;
	Иначе
		ДанныеРекомендованныхНастроек.РекомендованныеНастройки = Неопределено;
		ДанныеРекомендованныхНастроек.ВерсияНастроек = УникальныйИдентификаторПустой();
	КонецЕсли;
	
	Возврат ДанныеРекомендованныхНастроек;
	
КонецФункции

// Преобразует полное имя формы в сокращенное, для хранения в базе данных.
//
// Параметры:
//  ИмяФормы - Строка - Полное имя формы.
// 
// Возвращаемое значение:
//  Строка - Сокращенное имя формы для хранения в базе даннных.
//
Функция СокращенноеИмяФормы(ИмяФормы) Экспорт
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.РекомендованныеНастройки;
	СокращенноеИмяФормы = ОбщегоНазначенияДокументооборот.СтрХеш(
		ИмяФормы,
		МетаданныеРегистра.Измерения.СокращенноеИмяФормы.Тип.КвалификаторыСтроки.Длина);
	
	Возврат СокращенноеИмяФормы;
	
КонецФункции

// Преобразует ключ назначения использования в сокращенный, для хранения в базе данных.
//
// Параметры:
//  КлючНазначенияИспользования - Строка - Ключ назначения использования.
// 
// Возвращаемое значение:
//  Строка - Сокращенный ключ назначения использования для хранения в базе данных.
//
Функция СокращенныйКлючНазначенияИспользования(КлючНазначенияИспользования) Экспорт
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.РекомендованныеНастройки;
	СокращенныйКлючНазначенияИспользования = ОбщегоНазначенияДокументооборот.СтрХеш(
		КлючНазначенияИспользования,
		МетаданныеРегистра.Измерения.СокращенныйКлючНазначенияИспользования.Тип.КвалификаторыСтроки.Длина);
	
	Возврат СокращенныйКлючНазначенияИспользования;
	
КонецФункции

// Возвращает текущую версию рекомендованных настроек формы.
//
// Параметры:
//  ИмяФормы                    - Строка - Полное имя формы.
//  КлючНазначенияИспользования - Строка - Ключ назначения использования.
// 
// Возвращаемое значение:
//  УникальныйИдентификатор - Текущая версия рекомендованных настроек формы.
//
Функция ТекущаяВерсияНастроек(ИмяФормы, КлючНазначенияИспользования) Экспорт
	
	СокращенноеИмяФормы = СокращенноеИмяФормы(ИмяФормы);
	СокращенныйКлючНазначенияИспользования = СокращенныйКлючНазначенияИспользования(КлючНазначенияИспользования);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	РекомендованныеНастройки.ВерсияНастроек КАК ВерсияНастроек
		|ИЗ
		|	РегистрСведений.РекомендованныеНастройки КАК РекомендованныеНастройки
		|ГДЕ
		|	РекомендованныеНастройки.СокращенноеИмяФормы = &СокращенноеИмяФормы
		|	И РекомендованныеНастройки.СокращенныйКлючНазначенияИспользования = &СокращенныйКлючНазначенияИспользования");
	
	Запрос.УстановитьПараметр("СокращенноеИмяФормы", СокращенноеИмяФормы);
	Запрос.УстановитьПараметр("СокращенныйКлючНазначенияИспользования", СокращенныйКлючНазначенияИспользования);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ТекущаяВерсияНастроек = ?(Выборка.Следующий(), Выборка.ВерсияНастроек, УникальныйИдентификаторПустой());
	
	Возврат ТекущаяВерсияНастроек;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

#КонецОбласти

#КонецОбласти

#КонецЕсли