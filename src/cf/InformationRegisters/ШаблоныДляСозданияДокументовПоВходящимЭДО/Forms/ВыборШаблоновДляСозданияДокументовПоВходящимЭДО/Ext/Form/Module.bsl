#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидДокумента = Параметры.ВидДокумента;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныДляСозданияДокументовПоВходящимЭДО.Шаблон КАК ШаблонДокумента,
		|	ШаблоныДляСозданияДокументовПоВходящимЭДО.Тематика КАК ТематикаДокумента
		|ИЗ
		|	РегистрСведений.ШаблоныДляСозданияДокументовПоВходящимЭДО КАК ШаблоныДляСозданияДокументовПоВходящимЭДО
		|ГДЕ
		|	ШаблоныДляСозданияДокументовПоВходящимЭДО.Получатель = &Получатель
		|	И ШаблоныДляСозданияДокументовПоВходящимЭДО.Отправитель = &Отправитель
		|	И ШаблоныДляСозданияДокументовПоВходящимЭДО.ИдентификаторОтправителя = &ИдентификаторОтправителя
		|	И ШаблоныДляСозданияДокументовПоВходящимЭДО.ИдентификаторПолучателя = &ИдентификаторПолучателя
		|	И ШаблоныДляСозданияДокументовПоВходящимЭДО.ВидЭДО = &ВидЭДО";
	
	Запрос.УстановитьПараметр("ВидЭДО", ВидДокумента);
	Запрос.УстановитьПараметр("ИдентификаторОтправителя", Параметры.ИдентификаторОтправителя);
	Запрос.УстановитьПараметр("ИдентификаторПолучателя", Параметры.ИдентификаторПолучателя);
	Запрос.УстановитьПараметр("Отправитель", Параметры.Отправитель);
	Запрос.УстановитьПараметр("Получатель", Параметры.Получатель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаШаблон = Шаблоны.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаШаблон, Выборка);
		СтрокаШаблон.ПредставлениеШаблона = 
			РаботаСШаблонамиДокументовКлиентСервер.ПредставлениеШаблона(Выборка.ШаблонДокумента, Выборка.ТематикаДокумента);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		Если ЗавершениеРаботы Тогда
			ТекстПредупреждения = НСтр("ru = 'Список шаблонов для ручного создания не сохранен. Завершить работу с программой?'")
		Иначе
			ЗадатьВопросПередЗакрытием();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Добавить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьШаблонПродолжение",
		ЭтотОбъект);
	
	ОтражениеВУчетеДОКлиент.ВыбратьШаблон(Новый СписокЗначений, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		ПараметрыЗакрытия = ПараметрыЗакрытияПослеСохранения();
		Модифицированность = Ложь;
		Закрыть(ПараметрыЗакрытия);
		
	Иначе
		
		Закрыть(Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыШаблоны

&НаКлиенте
Процедура ШаблоныПослеУдаления(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныПредставлениеШаблонаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ИдентификаторСтроки", Элементы.Шаблоны.ТекущаяСтрока);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьШаблонПродолжение", ЭтотОбъект, ПараметрыОповещения);
	
	ОтражениеВУчетеДОКлиент.ВыбратьШаблон(Новый СписокЗначений, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныПредставлениеШаблонаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьЗначениеАсинх(Элементы.Шаблоны.ТекущиеДанные.ШаблонДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныПредставлениеШаблонаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если СтрДлина(Текст) > 1 Тогда
		
		СтандартнаяОбработка = Ложь;
		ОтражениеВУчетеДоВызовСервера.ЗаполнитьДанныеВыбораПриАвтоподбореШаблонов(Текст, ДанныеВыбора);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныПредставлениеШаблонаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если СтрДлина(Текст) > 1 Тогда
		
		СтандартнаяОбработка = Ложь;
		ОтражениеВУчетеДоВызовСервера.ЗаполнитьДанныеВыбораПриАвтоподбореШаблонов(Текст, ДанныеВыбора);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныПредставлениеШаблонаОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = Элементы.Шаблоны.ТекущиеДанные;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныПредставлениеШаблонаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если Текст = "" Тогда
		
		Элементы.Шаблоны.ТекущиеДанные.ШаблонДокумента = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Процедура ЗадатьВопросПередЗакрытием()
	
	ТекстВопроса = НСтр("ru = 'Список шаблонов для ручного создания изменен. Сохранить изменения?'");
	Результат = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если Не ПроверитьЗаполнение() Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыЗакрытия = ПараметрыЗакрытияПослеСохранения(); 
		Модифицированность = Ложь;
		Закрыть(ПараметрыЗакрытия);
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		
		Модифицированность = Ложь;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьШаблонПродолжение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НовыйШаблон = Результат.ШаблонДокумента;
	НоваяТематика = ПредопределенноеЗначение("Справочник.ТематикиДокументов.ПустаяСсылка");
	Если Результат.Свойство("ТематикаДокумента") Тогда
		НоваяТематика = Результат.ТематикаДокумента;
	КонецЕсли;
	
	ИдентификаторСтроки = -1;
	Если ЗначениеЗаполнено(Параметры) И Параметры.Свойство("ИдентификаторСтроки") Тогда
		ИдентификаторСтроки = Параметры.ИдентификаторСтроки;
	КонецЕсли;
	
	Для Каждого СтрокаШаблон Из Шаблоны Цикл
		
		ШаблонСтроки = СтрокаШаблон.ШаблонДокумента;
		ТематикаСтроки = СтрокаШаблон.ТематикаДокумента;
		
		Если ШаблонСтроки = НовыйШаблон И ТематикаСтроки = НоваяТематика
			И СтрокаШаблон.ПолучитьИдентификатор() <> ИдентификаторСтроки Тогда
			
			ПоказатьПредупреждение(, РаботаСШаблонамиДокументовКлиент.ТекстПредупрежденияДублированиеШаблонов());
			Возврат;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Модифицированность = Истина;
	
	Если ИдентификаторСтроки <> - 1 Тогда
		
		СтрокаШаблон = Шаблоны.НайтиПоИдентификатору(Параметры.ИдентификаторСтроки);
		
	Иначе
		
		СтрокаШаблон = Шаблоны.Добавить(); 
		
	КонецЕсли;
	
	СтрокаШаблон.ШаблонДокумента = НовыйШаблон;
	СтрокаШаблон.ТематикаДокумента = НоваяТематика;
	
	СтрокаШаблон.ПредставлениеШаблона = 
		РаботаСШаблонамиДокументовКлиентСервер.ПредставлениеШаблона(НовыйШаблон, НоваяТематика);
	
КонецПроцедуры

// Сохраняет настройки в РС и возвращает параметры для закрытия для изменения представления настроек ручного создания
// 
// Возвращаемое значение:
//  Структура - см. ОтражениеВУчетеДО.НовыеДанныеДляПредставленияНастройкиРучногоОтраженияВУчете;
//
&НаСервере
Функция ПараметрыЗакрытияПослеСохранения()
	
	РегистрыСведений.ШаблоныДляСозданияДокументовПоВходящимЭДО.ЗаписатьШаблоныДляСозданияДокументовПоВходящимЭДО(
		Параметры.Получатель,
		Параметры.Отправитель,
		Параметры.ИдентификаторПолучателя,
		Параметры.ИдентификаторОтправителя,
		ВидДокумента,
		Шаблоны.Выгрузить(Неопределено, "ШаблонДокумента,ТематикаДокумента"));
	
	КоличествоШаблонов = Шаблоны.Количество();
	ПервыйШаблон = Неопределено;
	ПерваяТематика = Неопределено;
	
	Если КоличествоШаблонов > 0 Тогда
		ПерваяСтрока = Шаблоны[0];
		ПервыйШаблон = ПерваяСтрока.ШаблонДокумента;
		ПерваяТематика = ПерваяСтрока.ТематикаДокумента;
	КонецЕсли;
	
	ПараметрыЗакрытия = ОтражениеВУчетеДО.НовыеДанныеДляПредставленияНастройкиРучногоОтраженияВУчете();
	
	ПараметрыЗакрытия.КоличествоШаблонов = КоличествоШаблонов;
	ПараметрыЗакрытия.ПервыйШаблон = ПервыйШаблон;
	ПараметрыЗакрытия.ПерваяТематика = ПерваяТематика;
	
	Возврат ПараметрыЗакрытия;
	
КонецФункции

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Шаблоны.ШаблонДокумента");
	
КонецПроцедуры

#КонецОбласти