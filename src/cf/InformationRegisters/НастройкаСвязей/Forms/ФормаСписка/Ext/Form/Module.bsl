
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СсылкаИз = РеквизитФормыВЗначение("СписокСсылкаИз");
	НоваяСтрока = СсылкаИз.Строки.Добавить();
	НоваяСтрока.Наименование = НСтр("ru = 'Все типы'");
	НоваяСтрока.Ссылка = Неопределено;
	 	
	НоваяСтрока = СсылкаИз.Строки.Добавить();
	НоваяСтрока.Наименование = НСтр("ru = 'Документы'");
	НоваяСтрока.Ссылка = Справочники.ВидыДокументов.ПустаяСсылка();
	ЗаполнитьДерево(НоваяСтрока, "ВидыДокументов");
	
	НоваяСтрока = СсылкаИз.Строки.Добавить();
	НоваяСтрока.Наименование = НСтр("ru = 'Файлы'");
	НоваяСтрока.Ссылка = Справочники.Файлы.ПустаяСсылка();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеМероприятиями") Тогда 
		НоваяСтрока = СсылкаИз.Строки.Добавить();
		НоваяСтрока.Наименование = НСтр("ru = 'Мероприятия'");
		НоваяСтрока.Ссылка = Справочники.Мероприятия.ПустаяСсылка();
	КонецЕсли;	
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда 
		НоваяСтрока = СсылкаИз.Строки.Добавить();
		НоваяСтрока.Наименование = НСтр("ru = 'Проекты'");
		НоваяСтрока.Ссылка = Справочники.Проекты.ПустаяСсылка();
	КонецЕсли;	
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВстроеннуюПочту") Тогда 
		НоваяСтрока = СсылкаИз.Строки.Добавить();
		НоваяСтрока.Наименование = НСтр("ru = 'Входящие письма'");
		НоваяСтрока.Ссылка = Документы.ВходящееПисьмо.ПустаяСсылка();
		
		НоваяСтрока = СсылкаИз.Строки.Добавить();
		НоваяСтрока.Наименование = НСтр("ru = 'Исходящие письма'");
		НоваяСтрока.Ссылка = Документы.ИсходящееПисьмо.ПустаяСсылка();
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(СсылкаИз, "СписокСсылкаИз");
	Элементы.СписокСсылкаИз.ТекущаяСтрока = СписокСсылкаИз.ПолучитьЭлементы().Получить(0).ПолучитьИдентификатор();
	Список.Параметры.УстановитьЗначениеПараметра("СсылкаИз", Неопределено);
	
	
	СсылкаНа = РеквизитФормыВЗначение("СписокСсылкаНа");
	НоваяСтрока = СсылкаНа.Строки.Добавить();
	НоваяСтрока.Наименование = НСтр("ru = 'Все типы'");
	НоваяСтрока.Ссылка = Неопределено;
	  	
	НоваяСтрока = СсылкаНа.Строки.Добавить();
	НоваяСтрока.Наименование = НСтр("ru = 'Документы'");
	НоваяСтрока.Ссылка = Справочники.ВидыДокументов.ПустаяСсылка();
	ЗаполнитьДерево(НоваяСтрока, "ВидыДокументов");
	
	НоваяСтрока = СсылкаНа.Строки.Добавить();
	НоваяСтрока.Наименование = НСтр("ru = 'Файлы'");
	НоваяСтрока.Ссылка = Справочники.Файлы.ПустаяСсылка();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеМероприятиями") Тогда 
		НоваяСтрока = СсылкаНа.Строки.Добавить();
		НоваяСтрока.Наименование = НСтр("ru = 'Мероприятия'");
		НоваяСтрока.Ссылка = Справочники.Мероприятия.ПустаяСсылка();
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда 
		НоваяСтрока = СсылкаНа.Строки.Добавить();
		НоваяСтрока.Наименование = НСтр("ru = 'Проекты'");
		НоваяСтрока.Ссылка = Справочники.Проекты.ПустаяСсылка();
	КонецЕсли;	
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВстроеннуюПочту") Тогда 
		НоваяСтрока = СсылкаНа.Строки.Добавить();
		НоваяСтрока.Наименование = НСтр("ru = 'Входящие письма'");
		НоваяСтрока.Ссылка = Документы.ВходящееПисьмо.ПустаяСсылка();
		
		НоваяСтрока = СсылкаНа.Строки.Добавить();
		НоваяСтрока.Наименование = НСтр("ru = 'Исходящие письма'");
		НоваяСтрока.Ссылка = Документы.ИсходящееПисьмо.ПустаяСсылка();
	КонецЕсли;
	
	НоваяСтрока = СсылкаНа.Строки.Добавить();
	НоваяСтрока.Наименование = НСтр("ru = 'Внешние ссылки'");
	НоваяСтрока.Ссылка = "";
	
	ЗначениеВРеквизитФормы(СсылкаНа, "СписокСсылкаНа");
	Элементы.СписокСсылкаНа.ТекущаяСтрока = СписокСсылкаНа.ПолучитьЭлементы().Получить(0).ПолучитьИдентификатор();
	Список.Параметры.УстановитьЗначениеПараметра("СсылкаНа", Неопределено);
	
	ЗаголовокСписка = НСтр("ru = 'Все связи'");
	
	ПоказатьПредопределенныеСвязи = Ложь;
	Список.Параметры.УстановитьЗначениеПараметра("ПоказатьПредопределенные", ПоказатьПредопределенныеСвязи);
	
	Список.Параметры.УстановитьЗначениеПараметра("ВнешняяСсылка", НСтр("ru = 'Внешняя ссылка'"));
	Список.Параметры.УстановитьЗначениеПараметра("ВходящаяКорреспонденция",
		НСтр("ru = 'Документ (Входящая корреспонденция)'"));
	Список.Параметры.УстановитьЗначениеПараметра("ВходящееПисьмо", НСтр("ru = 'Входящее письмо'"));
	Список.Параметры.УстановитьЗначениеПараметра("Документ", НСтр("ru = 'Документ'"));
	Список.Параметры.УстановитьЗначениеПараметра("ИсходящаяКорреспонденция",
		НСтр("ru = 'Документ (Исходящая корреспонденция)'"));
	Список.Параметры.УстановитьЗначениеПараметра("ИсходящееПисьмо", НСтр("ru = 'Исходящее письмо'"));
	Список.Параметры.УстановитьЗначениеПараметра("Мероприятие", НСтр("ru = 'Мероприятие'"));
	Список.Параметры.УстановитьЗначениеПараметра("Проект", НСтр("ru = 'Проект'"));
	Список.Параметры.УстановитьЗначениеПараметра("Файл", НСтр("ru = 'Файл'"));
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	 Список.Параметры.УстановитьЗначениеПараметра("ПоказатьПредопределенные", Настройки["ПоказатьПредопределенныеСвязи"]);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ПоказатьПредопределенныеСвязиПриИзменении(Элемент)
	
	Список.Параметры.УстановитьЗначениеПараметра("ПоказатьПредопределенные", ПоказатьПредопределенныеСвязи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокСсылкаНа

&НаКлиенте
Процедура СписокСсылкаНаПриАктивизацииСтроки(Элемент)
	
	Если Элементы.СписокСсылкаНа.ТекущаяСтрока <> Неопределено Тогда
		ПодключитьОбработчикОжидания("ОбработкаОжидания", 0.2, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокСсылкаИз

&НаКлиенте
Процедура СписокСсылкаИзПриАктивизацииСтроки(Элемент)
	
	Если Элементы.СписокСсылкаИз.ТекущаяСтрока <> Неопределено Тогда
		ПодключитьОбработчикОжидания("ОбработкаОжидания", 0.2, Истина);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		
		ПараметрыФормы = Новый Структура;
		Если Элементы.СписокСсылкаИз.ТекущаяСтрока <> Неопределено Тогда
			ПараметрыФормы.Вставить("СсылкаИз", Элементы.СписокСсылкаИз.ТекущиеДанные.Ссылка);
		КонецЕсли;
		Если Элементы.СписокСсылкаНа.ТекущаяСтрока <> Неопределено Тогда
			ПараметрыФормы.Вставить("СсылкаНа", Элементы.СписокСсылкаНа.ТекущиеДанные.Ссылка);
		КонецЕсли;
		
		Открытьформу("РегистрСведений.НастройкаСвязей.ФормаЗаписи", ПараметрыФормы, Элементы.Список);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные.Предопределенная Тогда 
		ПоказатьПредупреждение(, НСтр("ru = 'Нельзя удалить предопределенную настройку связей!'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СписокПередУдалениемПродолжение",
		ЭтотОбъект,
		Новый Структура("ТекущаяСтрока", ТекущаяСтрока));
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Удалить запись?'"), 
		РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалениемПродолжение(Результат, Параметры)Экспорт 

	Если Результат = КодВозвратаДиалога.Да Тогда 
		УдалитьЗаписи(Параметры.ТекущаяСтрока);
		Элементы.Список.Обновить();
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаОжидания()
	
	СсылкаИз = Элементы.СписокСсылкаИз.ТекущиеДанные.Ссылка;
	СсылкаНа = Элементы.СписокСсылкаНа.ТекущиеДанные.Ссылка;
	
	Если СсылкаИз <> Список.Параметры.Элементы.Найти("СсылкаИз").Значение
	 Или СсылкаНа <> Список.Параметры.Элементы.Найти("СсылкаНа").Значение Тогда 
		НаименованиеСсылкаИз = Элементы.СписокСсылкаИз.ТекущиеДанные.Наименование;
		НаименованиеСсылкаНа = Элементы.СписокСсылкаНа.ТекущиеДанные.Наименование;
		
		Если СсылкаИз = Неопределено И СсылкаНа = Неопределено Тогда 
			ЗаголовокСписка = НСтр("ru = 'Все связи'");
		ИначеЕсли СсылкаНа = Неопределено Тогда 
			ЗаголовокСписка = СтрШаблон(НСтр("ru = 'Связи из ""%1""'"), НаименованиеСсылкаИз);
		ИначеЕсли СсылкаИз = Неопределено Тогда 
			ЗаголовокСписка = СтрШаблон(НСтр("ru = 'Связи на ""%1""'"), НаименованиеСсылкаНа);
		Иначе
			ЗаголовокСписка = СтрШаблон(НСтр("ru = 'Связи из ""%1"" на ""%2""'"),
				 НаименованиеСсылкаИз, НаименованиеСсылкаНа);
		КонецЕсли;	
	КонецЕсли;	
	
	Если СсылкаИз <> Список.Параметры.Элементы.Найти("СсылкаИз").Значение Тогда
		Список.Параметры.УстановитьЗначениеПараметра("СсылкаИз", СсылкаИз);
	КонецЕсли;
	
	Если СсылкаНа <> Список.Параметры.Элементы.Найти("СсылкаНа").Значение Тогда
		Список.Параметры.УстановитьЗначениеПараметра("СсылкаНа", СсылкаНа);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(СтрокаРодитель, ВидСправочника)
	
	СправочникВыборка = Справочники[ВидСправочника].ВыбратьИерархически();
	Пока СправочникВыборка.Следующий() Цикл
		
		Родитель = СправочникВыборка.Родитель;
		Если Родитель.Пустая() Тогда
			НайденнаяСтрока = СтрокаРодитель;
		Иначе
			НайденнаяСтрока = СтрокаРодитель.Строки.Найти(Родитель, "Ссылка", Истина);
		КонецЕсли;	
		
		НоваяСтрока = НайденнаяСтрока.Строки.Добавить();
		НоваяСтрока.Наименование = СправочникВыборка.Наименование;
		НоваяСтрока.Ссылка = СправочникВыборка.Ссылка;
		
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере 
Процедура УдалитьЗаписи(ТекущаяСтрока)
	
	МенеджерЗаписи = РегистрыСведений.НастройкаСвязей.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ТипСвязи = ТекущаяСтрока.ТипСвязи;
	МенеджерЗаписи.СсылкаИз = ТекущаяСтрока.СсылкаИз;
	МенеджерЗаписи.СсылкаНа = ТекущаяСтрока.СсылкаНа;
	МенеджерЗаписи.ВидКорреспонденцииДокументИз = ТекущаяСтрока.ВидКорреспонденцииДокументИз;
	МенеджерЗаписи.ВидКорреспонденцииДокументНа = ТекущаяСтрока.ВидКорреспонденцииДокументНа;
	МенеджерЗаписи.Прочитать();
	
	Если ЗначениеЗаполнено(МенеджерЗаписи.ТипОбратнойСвязи) Тогда 
		МенеджерОбратнойЗаписи = РегистрыСведений.НастройкаСвязей.СоздатьМенеджерЗаписи();
		МенеджерОбратнойЗаписи.ТипСвязи = МенеджерЗаписи.ТипОбратнойСвязи;
		МенеджерОбратнойЗаписи.СсылкаИз = МенеджерЗаписи.СсылкаНа;
		МенеджерОбратнойЗаписи.СсылкаНа = МенеджерЗаписи.СсылкаИз;
		
		МенеджерОбратнойЗаписи.ВидКорреспонденцииДокументИз = МенеджерЗаписи.ВидКорреспонденцииДокументНа;
		МенеджерОбратнойЗаписи.ВидКорреспонденцииДокументНа = МенеджерЗаписи.ВидКорреспонденцииДокументИз;
		
		МенеджерОбратнойЗаписи.Удалить();
	КонецЕсли;	
	МенеджерЗаписи.Удалить();
	
КонецПроцедуры

#КонецОбласти 