#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
		
// Записать данные предпросмотра.
// 
// Параметры:
//  Файл -  СправочникССылка.Файлы
//  HTMLПредставление - Строка
//  ВерсияФайла - СправочникСсылка.ВерсииФайлов
//  ПредпросмотрУрезан  - Булево
Процедура Записать(Файл, HTMLПредставление, ВерсияФайла, ПредпросмотрУрезан) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Файл = Файл;
	МенеджерЗаписи.Прочитать();
	МенеджерЗаписи.Файл = Файл;
	МенеджерЗаписи.HTMLПредставлениеХранилище = Новый ХранилищеЗначения(HTMLПредставление, Новый СжатиеДанных);
	МенеджерЗаписи.ВерсияФайла = ВерсияФайла;
	МенеджерЗаписи.ПредпросмотрУрезан = ПредпросмотрУрезан;
	МенеджерЗаписи.ДатаСоздания = ТекущаяДатаСеанса();
	МенеджерЗаписи.Записать(Истина);

КонецПроцедуры

// Записать данные предпросмотра по массиву html.
// 
// Параметры:
//  Файл -  СправочникССылка.Файлы
//  МассивHTMLСтрок - Массив из Строка
//  ВерсияФайла - СправочникСсылка.ВерсииФайлов
//  ПредпросмотрУрезан  - Булево
Процедура ЗаписатьМассив(Файл, МассивHTMLСтрок, ВерсияФайла, ПредпросмотрУрезан) Экспорт

	УстановитьПривилегированныйРежим(Истина);    
	
	НомерБлока = 0;
	Для Каждого HTMLПредставление Из МассивHTMLСтрок Цикл
	
		МенеджерЗаписи = СоздатьМенеджерЗаписи();  
		
		МенеджерЗаписи.Файл = Файл;
		МенеджерЗаписи.HTMLПредставлениеХранилище = Новый ХранилищеЗначения(HTMLПредставление, Новый СжатиеДанных);
		МенеджерЗаписи.ВерсияФайла = ВерсияФайла;
		МенеджерЗаписи.ПредпросмотрУрезан = ПредпросмотрУрезан;
		МенеджерЗаписи.ДатаСоздания = ТекущаяДатаСеанса();
		
		МенеджерЗаписи.НомерБлока = НомерБлока;
		НомерБлока = НомерБлока + 1;
		
		МенеджерЗаписи.Записать(Истина);           
		
	КонецЦикла;

КонецПроцедуры

// Удаляет порцию устаревших данных.
// 
// Возвращаемое значение:
// Булево - Истина, если были найдены устаревшие данные, в противном случае Ложь.
// 
Функция УдалитьПорциюУстаревшихДанных() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИспользоватьПредпросмотрФайлов = ПолучитьФункциональнуюОпцию("ИспользоватьПредпросмотрФайлов");
	Если Не ИспользоватьПредпросмотрФайлов Тогда
		Возврат Ложь;
	КонецЕсли;		
	
	СрокХраненияПредпросмотраФайлов 
		= Константы.СрокХраненияПредпросмотраФайлов.Получить(); // в днях
	
	Если СрокХраненияПредпросмотраФайлов = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ГраницаОчисткиЗаписей = НачалоДня(ТекущаяДатаСеанса())
		- СрокХраненияПредпросмотраФайлов * 24 * 3600;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 50000
		|	ПредпросмотрФайлов.Файл КАК Файл
		|ИЗ
		|	РегистрСведений.ПредпросмотрФайлов КАК ПредпросмотрФайлов
		|ГДЕ
		|	ПредпросмотрФайлов.ДатаСоздания < &Дата
		|	И ПредпросмотрФайлов.НомерБлока = 0");
	
	Запрос.УстановитьПараметр("Дата", ГраницаОчисткиЗаписей);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Удалить(Выборка.Файл);
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Удаление устаревших данных'"), 
		УровеньЖурналаРегистрации.Информация,
		Метаданные.РегистрыСведений.ПредпросмотрФайлов,, 
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедура завершена успешно, обработано %1 записей'"), Выборка.Количество()));
	
	Возврат Выборка.Количество() > 0;
	
КонецФункции

// Очищает HTML представление файла
// 
// Параметры:
//  Файл - СправочникССылка.Файлы
Процедура Удалить(Файл) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Файл.Установить(Файл);
	
	НаборЗаписей.Записать(); // удалим все по отбору
	
КонецПроцедуры

// Обновить дату в момент просмотра, чтобы дольше не удалялась запись.
// 
// Параметры:
//  Файл - СправочникССылка.Файлы
Процедура ОбновитьДату(Файл) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	КлючЗаписиРС = СоздатьКлючЗаписи(Новый Структура("Файл", Файл));
	
	Попытка
		РегистрыСведений.ФайлыНаРаспознавании.ЗаблокироватьФайл(КлючЗаписиРС);
	Исключение
		// не ошибка
		Возврат;
	КонецПопытки;
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Файл = Файл;
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.Файл = Файл;
		МенеджерЗаписи.ДатаСоздания = ТекущаяДатаСеанса();
		МенеджерЗаписи.Записать(Истина);
	КонецЕсли;

	РазблокироватьДанныеДляРедактирования(КлючЗаписиРС);

КонецПроцедуры

#КонецОбласти

#КонецЕсли
