#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Одинарный;
		Элементы.КонтейнерВариантРабочегоСтола.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
		Элементы.ВариантРабочегоСтола.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
		Элементы.ГруппаВариантРабочегоСтола.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		
		Для Каждого Элемент Из Элементы Цикл
			Если Элемент.Вид = ВидДекорацииФормы.Картинка И СтрНайти(Элемент.Имя, "ВнешняяРамка") > 0 Тогда
				Элемент.Видимость = Ложь;
			КонецЕсли 
		КонецЦикла;
		
	КонецЕсли;
	
	ПрочитатьНастройкиРабочегаСтола();
	ОбновитьДанныеВариантаКомпоновки();
	
	ОбновитьБлокиНавигации();
	ОбновитьСписокВыбораВариантаРабочегоСтола();
	ОбновитьВариантыКомпоновкиРабочегоСтола();
	
	ПрочитатьВариантРабочегаСтола();
	
	ОбновитьЦветовуюСхему();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура БлокНавигацииПриИзменении(Элемент)
	
	ПриИзмененииВиджетаНаСервере();
	
	Оповестить("Запись_НастройкиРабочихСтолов");
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантКомпоновкиПриИзменении(Элемент)
	
	ВариантКомпоновкиПриИзмененииНаСервере();
	
	Оповестить("Запись_НастройкиРабочихСтолов");
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантРабочегоСтолаПриИзменении(Элемент)
	
	ЗаписатьВариантРабочегоСтола();
	
КонецПроцедуры

&НаКлиенте
Процедура Виджет1_1ПриИзменении(Элемент)
	
	ПриИзмененииВиджета();
	
КонецПроцедуры

&НаКлиенте
Процедура Виджет1_2ПриИзменении(Элемент)
	
	ПриИзмененииВиджета();
	
КонецПроцедуры

&НаКлиенте
Процедура Виджет1_3ПриИзменении(Элемент)
	
	ПриИзмененииВиджета();
	
КонецПроцедуры

&НаКлиенте
Процедура Виджет2_1ПриИзменении(Элемент)
	
	ПриИзмененииВиджета();
	
КонецПроцедуры

&НаКлиенте
Процедура Виджет2_2ПриИзменении(Элемент)
	
	ПриИзмененииВиджета();
	
КонецПроцедуры

&НаКлиенте
Процедура Виджет2_3ПриИзменении(Элемент)
	
	ПриИзмененииВиджета();
	
КонецПроцедуры

&НаКлиенте
Процедура Виджет3_1ПриИзменении(Элемент)
	
	ПриИзмененииВиджета();
	
КонецПроцедуры

&НаКлиенте
Процедура Виджет3_2ПриИзменении(Элемент)
	
	ПриИзмененииВиджета();
	
КонецПроцедуры

&НаКлиенте
Процедура Виджет3_3ПриИзменении(Элемент)
	
	ПриИзмененииВиджета();
	
КонецПроцедуры

&НаКлиенте
Процедура Виджет4_1ПриИзменении(Элемент)
	
	ПриИзмененииВиджета();
	
КонецПроцедуры

&НаКлиенте
Процедура Виджет4_2ПриИзменении(Элемент)
	
	ПриИзмененииВиджета();
	
КонецПроцедуры

&НаКлиенте
Процедура Виджет4_3ПриИзменении(Элемент)
	
	ПриИзмененииВиджета();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеНастройкиМасштабПриИзменении(Элемент)
	
	ЗаписатьНастройкиРабочегаСтола();
	
КонецПроцедуры

&НаКлиенте
Процедура ФоновоеОбновлениеПриИзменении(Элемент)
	
	ЗаписатьНастройкиРабочегаСтола();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦветоваяСхемаСераяНажатие(Элемент)
	
	УстановитьЦветовуюСхему(
		ПредопределенноеЗначение(
			"Перечисление.ЦветовыеСхемыРабочегоСтола.Серая"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЦветоваяСхемаЦветнаяНажатие(Элемент)
	
	УстановитьЦветовуюСхему(
		ПредопределенноеЗначение(
			"Перечисление.ЦветовыеСхемыРабочегоСтола.Цветная"));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьВиджет1_1(Команда)
	
	УдалитьВиджет("Виджет1_1");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВиджет1_2(Команда)
	
	УдалитьВиджет("Виджет1_2");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВиджет1_3(Команда)
	
	УдалитьВиджет("Виджет1_3");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВиджет2_1(Команда)
	
	УдалитьВиджет("Виджет2_1");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВиджет2_2(Команда)
	
	УдалитьВиджет("Виджет2_2");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВиджет2_3(Команда)
	
	УдалитьВиджет("Виджет2_3");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВиджет3_1(Команда)
	
	УдалитьВиджет("Виджет3_1");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВиджет3_2(Команда)
	
	УдалитьВиджет("Виджет3_2");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВиджет3_3(Команда)
	
	УдалитьВиджет("Виджет3_3");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВиджет4_1(Команда)
	
	УдалитьВиджет("Виджет4_1");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВиджет4_2(Команда)
	
	УдалитьВиджет("Виджет4_2");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВиджет4_3(Команда)
	
	УдалитьВиджет("Виджет4_3");
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьНастройкиПоУмолчанию(Команда)
	
	ВосстановитьНастройкиПоУмолчаниюНаСервере();
	
	Оповестить("Запись_НастройкиРабочихСтолов");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВиджет1(Команда)
	
	ДобавитьВиджет(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВиджет2(Команда)
	
	ДобавитьВиджет(2);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВиджет3(Команда)
	
	ДобавитьВиджет(3);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВиджет4(Команда)
	
	ДобавитьВиджет(4);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьБлокНавигации(Команда)
	
	ПерейтиПоНавигационнойСсылке(
		"e1cib/command/РегистрСведений.НастройкиБлоковНавигации.Команда.НастроитьБлокиНавигации");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВиджет1_1(Команда)
	
	НастроитьВиджет("Виджет1_1");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВиджет1_2(Команда)
	
	НастроитьВиджет("Виджет1_2");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВиджет1_3(Команда)
	
	НастроитьВиджет("Виджет1_3");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВиджет2_1(Команда)
	
	НастроитьВиджет("Виджет2_1");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВиджет2_2(Команда)
	
	НастроитьВиджет("Виджет2_2");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВиджет2_3(Команда)
	
	НастроитьВиджет("Виджет2_3");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВиджет3_1(Команда)
	
	НастроитьВиджет("Виджет3_1");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВиджет3_2(Команда)
	
	НастроитьВиджет("Виджет3_2");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВиджет3_3(Команда)
	
	НастроитьВиджет("Виджет3_3");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВиджет4_1(Команда)
	
	НастроитьВиджет("Виджет4_1");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВиджет4_2(Команда)
	
	НастроитьВиджет("Виджет4_2");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВиджет4_3(Команда)
	
	НастроитьВиджет("Виджет4_3");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ВиджетПоместится(НомерКолонки, НомерСтроки, ДанныеВиджета)
	
	ВиджетПоместится = Истина;
	Для СдвигКолонки = 0 По ДанныеВиджета.ШиринаСхемы - 1 Цикл
		
		Для СдвигСтроки = 0 По ДанныеВиджета.ВысотаСхемы - 1 Цикл
			
			ПроверяемаяКолонка = НомерКолонки + СдвигКолонки;
			ПроверяемаяСтрока = НомерСтроки + СдвигСтроки;
			Если ПроверяемаяКолонка = НомерКолонки И ПроверяемаяСтрока = НомерСтроки Тогда
				Продолжить;
			КонецЕсли;
			
			// Для больших виджетов занимаемые позиции должны быть на экране.
			Если ПроверяемаяКолонка > КоличествоКолонок
				Или ПроверяемаяСтрока > КоличествоСтрок Тогда
				ВиджетПоместится = Ложь;
				Прервать;
			КонецЕсли;
			
			// Для больших виджетов занимаемые позиции должны быть пустыми.			
			ПроверяемыйВиджет = ДанныеВиджета(ПроверяемаяКолонка, ПроверяемаяСтрока);
			Если ПроверяемыйВиджет <> Неопределено Тогда
				ВиджетПоместится = Ложь;
				Прервать;
			КонецЕсли;
			
			// Для больших виджетов занимаемые колонки должны быть пустыми.
			Если ПроверяемаяКолонка <> НомерКолонки И Не ЭтоПустаяКолонка(ПроверяемаяКолонка) Тогда
				ВиджетПоместится = Ложь;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ВиджетПоместится = Ложь Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	// Для больших виджетов вся колонка должна быть одного размера.
	ШиринаКолонки = 0;
	ДанныеВсехВиджетов = РаботаСРабочимСтоломПовтИсп.ДанныеВсехВиджетов();
	Для Каждого ЭлементыВиджета Из ЭлементыВиджетов() Цикл
		
		Если ЭлементыВиджета.НомерКолонки <> НомерКолонки Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭлементыВиджета.НомерКолонки = НомерКолонки
			И ЭлементыВиджета.НомерСтроки = НомерСтроки Тогда
			Продолжить;
		КонецЕсли;
		
		ОчереднойВиджет = ЭтотОбъект[ЭлементыВиджета.ИмяРеквизита];
		ДанныеОчередногоВиджета = ДанныеВсехВиджетов[ОчереднойВиджет];
		ВиджетУказан = ДанныеОчередногоВиджета <> Неопределено;
		Если Не ВиджетУказан Тогда
			Продолжить;
		КонецЕсли;
		
		ШиринаКолонки =
			Макс(ШиринаКолонки, ДанныеОчередногоВиджета.ШиринаСхемы);
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ШиринаКолонки) И ДанныеВиджета.ШиринаСхемы <> ШиринаКолонки Тогда
		ВиджетПоместится = Ложь;
	КонецЕсли;
	
	Возврат ВиджетПоместится;
	
КонецФункции

&НаСервере
Процедура ВосстановитьНастройкиПоУмолчаниюНаСервере()
	
	РегистрыСведений.НастройкиРабочихСтолов.УстановитьЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		Перечисления.НастройкиРабочегоСтола.СхемаРабочегоСтола,
		Неопределено);
	ОбновитьПовторноИспользуемыеЗначения();
	
	ПрочитатьСхемуРабочегоСтола();
	
КонецПроцедуры

&НаСервере
Функция ВысотаКолонки(НомерКолонки)
	
	ВысотыКолонок = ВысотыКолонок();
	ВысотаКолонки = ВысотыКолонок[НомерКолонки];
	
	Если ВысотаКолонки = Неопределено Тогда
		ВысотаКолонки = 0;
	КонецЕсли;
	
	Возврат ВысотаКолонки;
	
КонецФункции

&НаСервере
Функция ВысотыКолонок()
	
	ДанныеВсехВиджетов = РаботаСРабочимСтоломПовтИсп.ДанныеВсехВиджетов();
	
	ВысотыКолонок = Новый Соответствие;
	Для НомерКолонки = 1 По КоличествоКолонок Цикл
		ВысотыКолонок[НомерКолонки] = 0;
	КонецЦикла;
	
	Для Каждого ЭлементыВиджета Из ЭлементыВиджетов() Цикл
		
		Если Не ЭлементыВиджета.ГруппаВиджета.Видимость Тогда
			Продолжить;
		КонецЕсли;
		
		ОчереднойВиджет = ЭтотОбъект[ЭлементыВиджета.ИмяРеквизита];
		ДанныеВиджета = ДанныеВсехВиджетов[ОчереднойВиджет];
		Если ДанныеВиджета <> Неопределено Тогда
			ВысотыКолонок[ЭлементыВиджета.НомерКолонки] =
				ВысотыКолонок[ЭлементыВиджета.НомерКолонки] + ДанныеВиджета.ВысотаСхемы;
		Иначе
			ВысотыКолонок[ЭлементыВиджета.НомерКолонки] =
				ВысотыКолонок[ЭлементыВиджета.НомерКолонки] + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВысотыКолонок;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьВиджет(НомерКолонки)
	
	ДобавитьВиджетНаСервере(НомерКолонки);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВиджетНаСервере(НомерКолонки)
	
	ВариантРабочегоСтолаИзменен = Истина;
	ОбновитьОтображениеСхемыРабочегоСтола();
	
	ЭлементыВиджетовКолонки = Новый СписокЗначений();
	
	НомераСдвинутыхСтрок = НомераСдвинутыхСтрок(НомерКолонки);
	Для Каждого ЭлементыВиджета Из ЭлементыВиджетов() Цикл
		
		Если ЭлементыВиджета.НомерКолонки <> НомерКолонки Тогда
			Продолжить;
		КонецЕсли;
		
		Если НомераСдвинутыхСтрок.Найти(ЭлементыВиджета.НомерСтроки) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЭлементыВиджетовКолонки.Добавить(ЭлементыВиджета, ЭлементыВиджета.НомерСтроки);
		
	КонецЦикла;
	
	ЭлементыВиджетовКолонки.СортироватьПоПредставлению();
	
	Для Каждого ЭлементыВиджета Из ЭлементыВиджетовКолонки.ВыгрузитьЗначения() Цикл
		
		Если Не ЭлементыВиджета.ГруппаВиджета.Видимость Тогда
			
			ЭлементыВиджета.ГруппаВиджета.Видимость = Истина;
			ЭлементыВиджета.КнопкаНастроить.Видимость = Ложь;
			
			ЭлементыКолонки = ЭлементыКолонки(НомерКолонки);
			ЭлементыКолонки.ГруппаДобавить.Видимость = Ложь;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСхемуРабочегоСтола()
	
	СхемаРабочегоСтола = РегистрыСведений.НастройкиРабочихСтолов.ЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		Перечисления.НастройкиРабочегоСтола.СхемаРабочегоСтола); 
	Если СхемаРабочегоСтола <> Неопределено Тогда
		ВариантРабочегоСтолаИзменен = Истина;
	Иначе
		ВариантРабочегоСтолаИзменен = Ложь;
		СхемаРабочегоСтола = Справочники.РабочиеСтолы.СхемаРабочегоСтола(ВариантРабочегоСтола);
	КонецЕсли;
	
	Виджет1_1 = СхемаРабочегоСтола.Виджет1_1;
	Виджет1_2 = СхемаРабочегоСтола.Виджет1_2;
	Виджет1_3 = СхемаРабочегоСтола.Виджет1_3;
	Виджет2_1 = СхемаРабочегоСтола.Виджет2_1;
	Виджет2_2 = СхемаРабочегоСтола.Виджет2_2;
	Виджет2_3 = СхемаРабочегоСтола.Виджет2_3;
	Виджет3_1 = СхемаРабочегоСтола.Виджет3_1;
	Виджет3_2 = СхемаРабочегоСтола.Виджет3_2;
	Виджет3_3 = СхемаРабочегоСтола.Виджет3_3;
	Виджет4_1 = СхемаРабочегоСтола.Виджет4_1;
	Виджет4_2 = СхемаРабочегоСтола.Виджет4_2;
	Виджет4_3 = СхемаРабочегоСтола.Виджет4_3;
	БлокНавигации = СхемаРабочегоСтола.БлокНавигации;
	
	ОбновитьОтображениеСхемыРабочегоСтола();
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНастройкиРабочегаСтола()
	
	ЦветоваяСхема = РегистрыСведений.НастройкиРабочихСтолов.ЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		Перечисления.НастройкиРабочегоСтола.ЦветоваяСхема);
	ЗначениеНастройкиМасштаб = РегистрыСведений.НастройкиРабочихСтолов.ЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		Перечисления.НастройкиРабочегоСтола.Масштаб);
	ФоновоеОбновление = РегистрыСведений.НастройкиРабочихСтолов.ЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		Перечисления.НастройкиРабочегоСтола.ФоновоеОбновление);
	ВариантКомпоновки = РегистрыСведений.НастройкиРабочихСтолов.ЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		Перечисления.НастройкиРабочегоСтола.ВариантКомпоновки);
		
КонецПроцедуры

&НаСервере
Процедура ПрочитатьВариантРабочегаСтола()
	
	ВариантРабочегоСтола = РаботаСРабочимСтолом.РабочийСтол();
	ПрочитатьСхемуРабочегоСтола();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНастройкиРабочегаСтола()
	
	ЗаписатьНастройкиРабочегаСтолаНаСервере();
	
	Оповестить("Запись_НастройкиРабочихСтолов");
	
КонецПроцедуры

&НаСервере
Процедура ВариантКомпоновкиПриИзмененииНаСервере()
	
	РегистрыСведений.НастройкиРабочихСтолов.УстановитьЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		Перечисления.НастройкиРабочегоСтола.ВариантКомпоновки,
		ВариантКомпоновки);
	ОбновитьПовторноИспользуемыеЗначения();
	
	ОбновитьДанныеВариантаКомпоновки();
	
	ОбновитьОтображениеСхемыРабочегоСтола();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиРабочегаСтолаНаСервере()
	
	РегистрыСведений.НастройкиРабочихСтолов.УстановитьЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		Перечисления.НастройкиРабочегоСтола.ЦветоваяСхема,
		ЦветоваяСхема);
	РегистрыСведений.НастройкиРабочихСтолов.УстановитьЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		Перечисления.НастройкиРабочегоСтола.Масштаб,
		?(ЗначениеЗаполнено(ЗначениеНастройкиМасштаб), ЗначениеНастройкиМасштаб, Неопределено));
	РегистрыСведений.НастройкиРабочихСтолов.УстановитьЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		Перечисления.НастройкиРабочегоСтола.ФоновоеОбновление,
		ФоновоеОбновление);
	ОбновитьПовторноИспользуемыеЗначения();
	
	ОбновитьЦветовуюСхему();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВариантРабочегоСтола()
	
	ЗаписатьВариантРабочегоСтолаНаСервере();
	
	Оповестить("Запись_НастройкиРабочихСтолов");
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВариантРабочегоСтолаНаСервере()
	
	СтарыйВариантРабочегоСтола = РегистрыСведений.НастройкиРабочихСтолов.ЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		Перечисления.НастройкиРабочегоСтола.ВариантРабочегоСтола);
	Если СтарыйВариантРабочегоСтола <> ВариантРабочегоСтола Тогда
		
		РегистрыСведений.НастройкиРабочихСтолов.УстановитьЗначениеНастройки(
			Пользователи.ТекущийПользователь(),
			Перечисления.НастройкиРабочегоСтола.ВариантРабочегоСтола,
			ВариантРабочегоСтола);
		
		РегистрыСведений.НастройкиРабочихСтолов.УстановитьЗначениеНастройки(
			Пользователи.ТекущийПользователь(),
			Перечисления.НастройкиРабочегоСтола.СхемаРабочегоСтола,
			Неопределено);
		ОбновитьПовторноИспользуемыеЗначения();
		
	КонецЕсли;
	
	ПрочитатьСхемуРабочегоСтола();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСхемуРабочегоСтола()
	
	СхемаРабочегоСтола = Справочники.РабочиеСтолы.НоваяСхемаРабочегоСтола();
	
	СхемаРабочегоСтола.Виджет1_1 = Виджет1_1;
	СхемаРабочегоСтола.Виджет1_2 = Виджет1_2;
	СхемаРабочегоСтола.Виджет1_3 = Виджет1_3;
	СхемаРабочегоСтола.Виджет2_1 = Виджет2_1;
	СхемаРабочегоСтола.Виджет2_2 = Виджет2_2;
	СхемаРабочегоСтола.Виджет2_3 = Виджет2_3;
	СхемаРабочегоСтола.Виджет3_1 = Виджет3_1;
	СхемаРабочегоСтола.Виджет3_2 = Виджет3_2;
	СхемаРабочегоСтола.Виджет3_3 = Виджет3_3;
	СхемаРабочегоСтола.Виджет4_1 = Виджет4_1;
	СхемаРабочегоСтола.Виджет4_2 = Виджет4_2;
	СхемаРабочегоСтола.Виджет4_3 = Виджет4_3;
	СхемаРабочегоСтола.БлокНавигации = БлокНавигации;
	
	РегистрыСведений.НастройкиРабочихСтолов.УстановитьЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		Перечисления.НастройкиРабочегоСтола.СхемаРабочегоСтола,
		СхемаРабочегоСтола);
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаСервере
Функция ЭлементыКолонок()
	
	ЭлементыКолонок = Новый Массив;
	
	ЭлементыКолонки = НовыйЭлементыКолонки();
	ЭлементыКолонки.НомерКолонки = 1;
	ЭлементыКолонки.ГруппаКолонки = Элементы.Колонка1;
	ЭлементыКолонки.ГруппаДобавить = Элементы.Колонка1Добавить;
	ЭлементыКолонок.Добавить(ЭлементыКолонки);
	
	ЭлементыКолонки = НовыйЭлементыКолонки();
	ЭлементыКолонки.НомерКолонки = 2;
	ЭлементыКолонки.ГруппаКолонки = Элементы.Колонка2;
	ЭлементыКолонки.ГруппаДобавить = Элементы.Колонка2Добавить;
	ЭлементыКолонок.Добавить(ЭлементыКолонки);
	
	ЭлементыКолонки = НовыйЭлементыКолонки();
	ЭлементыКолонки.НомерКолонки = 3;
	ЭлементыКолонки.ГруппаКолонки = Элементы.Колонка3;
	ЭлементыКолонки.ГруппаДобавить = Элементы.Колонка3Добавить;
	ЭлементыКолонок.Добавить(ЭлементыКолонки);
	
	ЭлементыКолонки = НовыйЭлементыКолонки();
	ЭлементыКолонки.НомерКолонки = 4;
	ЭлементыКолонки.ГруппаКолонки = Элементы.Колонка4;
	ЭлементыКолонки.ГруппаДобавить = Элементы.Колонка4Добавить;
	ЭлементыКолонок.Добавить(ЭлементыКолонки);
	
	Возврат ЭлементыКолонок;
	
КонецФункции

&НаСервере
Функция ЭлементыКолонки(НомерКолонки)
	
	ЭлементыКолонки = Неопределено;
	Для Каждого ОчередныеЭлементыКолонки Из ЭлементыКолонок() Цикл
		
		Если ОчередныеЭлементыКолонки.НомерКолонки = НомерКолонки Тогда
			ЭлементыКолонки = ОчередныеЭлементыКолонки;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЭлементыКолонки = Неопределено Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Не найдены элементы колонки %1.'"),
			НомерКолонки);
	КонецЕсли;
	
	Возврат ЭлементыКолонки;
	
КонецФункции

&НаСервере
Функция НовыйЭлементыКолонки()
	
	ЭлементыКолонки = Новый Структура("НомерКолонки, ГруппаКолонки, ГруппаДобавить");
	
	Возврат ЭлементыКолонки;
	
КонецФункции

&НаСервере
Функция КомандаНастройки(ИмяРеквизита)
	
	ДанныеВсехВиджетов = РаботаСРабочимСтоломПовтИсп.ДанныеВсехВиджетов();
	ДанныеВиджета = ДанныеВсехВиджетов[ЭтотОбъект[ИмяРеквизита]];
	
	Если ДанныеВиджета = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат ДанныеВиджета.КомандаНастройки;
	
КонецФункции

&НаСервере
Функция ДанныеВиджета(НомерКолонки, НомерСтроки)
	
	ЭлементыВиджета = ЭлементыВиджета(НомерКолонки, НомерСтроки);
	
	ДанныеВсехВиджетов = РаботаСРабочимСтоломПовтИсп.ДанныеВсехВиджетов();
	ДанныеВиджета = ДанныеВсехВиджетов[ЭтотОбъект[ЭлементыВиджета.ИмяРеквизита]];
	
	Возврат ДанныеВиджета;
	
КонецФункции

&НаКлиенте
Процедура НастроитьВиджет(ИмяРеквизита)
	
	КомандаНастройки = КомандаНастройки(ИмяРеквизита);
	Если Не ЗначениеЗаполнено(КомандаНастройки) Тогда
		ВызватьИсключение НСтр("ru = 'Неизвестна команда настройки виджета.'");
	КонецЕсли;
	
	ПерейтиПоНавигационнойСсылке(КомандаНастройки);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НовыйЭлементыВиджета()
	
	ЭлементыВиджета = Новый Структура(
		"ИмяРеквизита, НомерКолонки, НомерСтроки,
		|ГруппаВиджета, КонтейнерВиджета, ВыборВиджета, КнопкаНастроить, КнопкаУдалить");
	ЭлементыВиджета.ИмяРеквизита = "";
	ЭлементыВиджета.НомерКолонки = 0;
	ЭлементыВиджета.НомерСтроки = 0;
	
	Возврат ЭлементыВиджета;
	
КонецФункции

&НаСервере
Функция НомераСдвинутыхСтрок(НомерКолонки)
	
	НомераСдвинутыхСтрока = Новый Массив;
	Для Каждого ЭлементыВиджета Из ЭлементыВиджетов() Цикл
		
		Если ЭлементыВиджета.НомерКолонки <> НомерКолонки Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеВиджета = ДанныеВиджета(
			ЭлементыВиджета.НомерКолонки,
			ЭлементыВиджета.НомерСтроки);
		Если ДанныеВиджета = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДанныеВиджета.ВысотаСхемы > 1 Тогда
			
			Для СдвигСтроки = 1 По ДанныеВиджета.ВысотаСхемы - 1 Цикл
				НомерСдвинутойСтроки = ЭлементыВиджета.НомерСтроки + СдвигСтроки; 
				НомераСдвинутыхСтрока.Добавить(НомерСдвинутойСтроки);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НомераСдвинутыхСтрока;
	
КонецФункции

&НаСервере
Функция НомераСдвинутыхКолонок()
	
	ШириныКолонок = ШириныКолонок();
	
	НомераСдвинутыхКолонок = Новый Массив;
	Для Каждого ЭлементыКолонки Из ЭлементыКолонок() Цикл
		
		Если ЭлементыКолонки.НомерКолонки > КоличествоКолонок Тогда
			Продолжить;
		КонецЕсли;
		
		ШиринаКолонки = ШириныКолонок[ЭлементыКолонки.НомерКолонки];
		Для СдвигКолонки = 1 По ШиринаКолонки - 1 Цикл
			
			НомерСдвинутойКолонки = ЭлементыКолонки.НомерКолонки + СдвигКолонки; 
			НомераСдвинутыхКолонок.Добавить(НомерСдвинутойКолонки);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат НомераСдвинутыхКолонок;
	
КонецФункции

&НаСервере
Процедура ОбновитьВидимостьДобавленияВКолонку()
	
	ВысотыКолонок = ВысотыКолонок();
	Для Каждого ЭлементыКолонки Из ЭлементыКолонок() Цикл
		
		Если ЭлементыКолонки.НомерКолонки > КоличествоКолонок Тогда
			Продолжить;
		КонецЕсли;
		
		ВысотаКолонки = ВысотыКолонок[ЭлементыКолонки.НомерКолонки];
		
		ДоступноДобавлениеВКолонку = ВысотаКолонки < КоличествоСтрок;
		ЭлементыКолонки.ГруппаДобавить.Видимость = ДоступноДобавлениеВКолонку;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеВариантаРабочегоСтола()
	
	Элементы.ВосстановитьНастройкиПоУмолчанию.Видимость = ВариантРабочегоСтолаИзменен;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеСхемыРабочегоСтола()
	
	ОбновитьОтображениеВариантаРабочегоСтола();
	
	ДанныеВсехВиджетов = РаботаСРабочимСтоломПовтИсп.ДанныеВсехВиджетов();
	Для Каждого ЭлементыВиджета Из ЭлементыВиджетов() Цикл
		
		ОчереднойВиджет = ЭтотОбъект[ЭлементыВиджета.ИмяРеквизита];
		ДанныеВиджета = ДанныеВсехВиджетов[ОчереднойВиджет];
		ВиджетУказан = ДанныеВиджета <> Неопределено;
		ЭлементыВиджета.ГруппаВиджета.Видимость = ВиджетУказан;
		
		Если Не ВиджетУказан Тогда
			ЭлементыВиджета.КонтейнерВиджета.Высота = ВысотаЭлемента(0);
			ЭлементыВиджета.КонтейнерВиджета.Ширина = ШиринаЭлемента(0);
			ЭлементыВиджета.КонтейнерВиджета.РастягиватьПоГоризонтали = Истина;
			ЭлементыВиджета.ГруппаВиджета.РастягиватьПоГоризонтали = Истина; 
			Продолжить;
		КонецЕсли;
		
		ЭлементыВиджета.КонтейнерВиджета.Высота = ВысотаЭлемента(ДанныеВиджета.ВысотаСхемы);
		ЭлементыВиджета.КонтейнерВиджета.Ширина = ШиринаЭлемента(ДанныеВиджета.ШиринаСхемы); 
		ЭлементыВиджета.КонтейнерВиджета.РастягиватьПоГоризонтали = Ложь;
		ЭлементыВиджета.ГруппаВиджета.РастягиватьПоГоризонтали = Ложь;
		
		ДоступнаНастройкаВиджета = ЗначениеЗаполнено(ДанныеВиджета.КомандаНастройки);
		ЭлементыВиджета.КнопкаНастроить.Видимость = ДоступнаНастройкаВиджета;
		
	КонецЦикла;
	
	ОбновитьВидимостьДобавленияВКолонку();
	
	// Настроим видимость колонок.
	ОбновитьВидимостьКолонок();
	
	// Обновим списки выбора виджетов.
	ОбновитьСпискиВыбораВиджетов();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьКолонок()

	Для Каждого ЭлементыКолонки Из ЭлементыКолонок() Цикл
		ЭлементыКолонки.ГруппаКолонки.Видимость = КоличествоКолонок >= ЭлементыКолонки.НомерКолонки;
	КонецЦикла;
	
	НомераСдвинутыхКолонок = НомераСдвинутыхКолонок();
	Для Каждого ЭлементыКолонки Из ЭлементыКолонок() Цикл
		
		Если НомераСдвинутыхКолонок.Найти(ЭлементыКолонки.НомерКолонки) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЭлементыКолонки.ГруппаКолонки.Видимость = Ложь;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСпискиВыбораВиджетов()
	
	ДанныеВсехВиджетов = РаботаСРабочимСтоломПовтИсп.ДанныеВсехВиджетов();
	
	Для Каждого ЭлементыВиджета Из ЭлементыВиджетов() Цикл
		
		ЭлементыВиджета.ВыборВиджета.СписокВыбора.Очистить();
		
		// Определим уже установленные виджеты, кроме этого.
		УжеУстановленныеВиджеты = Новый Массив;
		Для Каждого ЭлементыУстановленногоВиджета Из ЭлементыВиджетов() Цикл
			
			Если ЭлементыВиджета.ИмяРеквизита = ЭлементыУстановленногоВиджета.ИмяРеквизита Тогда
				Продолжить;
			КонецЕсли;
			
			ОчереднойВиджет = ЭтотОбъект[ЭлементыУстановленногоВиджета.ИмяРеквизита];
			Если Не ЗначениеЗаполнено(ОчереднойВиджет) Тогда
				Продолжить;
			КонецЕсли;
			
			УжеУстановленныеВиджеты.Добавить(ОчереднойВиджет);
			
			ДанныеВиджета = ДанныеВсехВиджетов[ОчереднойВиджет];
			Если ДанныеВиджета = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ДанныеВложенногоВиджета Из ДанныеВиджета.ВложенныеВиджеты Цикл
				
				УжеУстановленныеВиджеты.Добавить(ДанныеВложенногоВиджета.Ссылка);
				
			КонецЦикла;
			
			Для Каждого ЭлементКомлпексного Из ДанныеВиджета.ЭлементыКомплексногоВиджета Цикл
				
				Если ЭлементКомлпексного.Тип <> Перечисления.ТипыЭлементовРабочегоСтола.Виджет Тогда
					Продолжить;
				КонецЕсли;
				
				УжеУстановленныеВиджеты.Добавить(ЭлементКомлпексного.Виджет);
				
			КонецЦикла;
			
		КонецЦикла;
		
		// Добавим все доступные виджеты.
		Для Каждого КлючИЗначение Из ДанныеВсехВиджетов Цикл
			
			ДанныеВиджета = КлючИЗначение.Значение; 
			Если Не ДанныеВиджета.ДоступенДляВыбора Тогда
				Продолжить;
			КонецЕсли;
			
			// Проверяем, что виджет не используется.
			Если УжеУстановленныеВиджеты.Найти(ДанныеВиджета.Ссылка) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			// Проверяем, что части виджета не используются.
			ЧастьВиджетаУжеУстановлена = Ложь;
			
			Для Каждого ДанныеВложенногоВиджета Из ДанныеВиджета.ВложенныеВиджеты Цикл
				
				Если УжеУстановленныеВиджеты.Найти(ДанныеВложенногоВиджета.Ссылка) <> Неопределено Тогда
					ЧастьВиджетаУжеУстановлена = Истина;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;

			Для Каждого ЭлементКомлпексного Из ДанныеВиджета.ЭлементыКомплексногоВиджета Цикл
				
				Если ЭлементКомлпексного.Тип <> Перечисления.ТипыЭлементовРабочегоСтола.Виджет Тогда
					Продолжить;
				КонецЕсли;
				
				Если УжеУстановленныеВиджеты.Найти(ЭлементКомлпексного.Виджет) <> Неопределено Тогда
					ЧастьВиджетаУжеУстановлена = Истина;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ЧастьВиджетаУжеУстановлена Тогда
				Продолжить;
			КонецЕсли;
			
			// Проверяем размеры виджета.
			ВиджетПоместится = ВиджетПоместится(
				ЭлементыВиджета.НомерКолонки,
				ЭлементыВиджета.НомерСтроки,
				ДанныеВиджета);
			Если Не ВиджетПоместится Тогда
				Продолжить;
			КонецЕсли;
			
			ЭлементыВиджета.ВыборВиджета.СписокВыбора.Добавить(
				ДанныеВиджета.Ссылка,
				ДанныеВиджета.Наименование);
			
		КонецЦикла;
		
		// Добавим сам виджет, если он не включен.
		ТекущийВиджет = ЭтотОбъект[ЭлементыВиджета.ИмяРеквизита];
		Если ЗначениеЗаполнено(ТекущийВиджет)
			И ЭлементыВиджета.ВыборВиджета.СписокВыбора.НайтиПоЗначению(ТекущийВиджет) = Неопределено Тогда
			
			ДанныеВиджета = ДанныеВсехВиджетов[ТекущийВиджет];
			Если ДанныеВиджета <> Неопределено Тогда
				ЭлементыВиджета.ВыборВиджета.СписокВыбора.Добавить(
					ДанныеВиджета.Ссылка,
					ДанныеВиджета.Наименование);
			КонецЕсли;
			
		КонецЕсли;
		
		// Отсортируем по представлению.
		ЭлементыВиджета.ВыборВиджета.СписокВыбора.СортироватьПоПредставлению();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьБлокиНавигации()
	
	Элементы.БлокНавигации.СписокВыбора.Очистить();
	
	ДанныеВсехВиджетов = РаботаСРабочимСтоломПовтИсп.ДанныеВсехВиджетов();
	
	Для Каждого КлючИЗначение Из ДанныеВсехВиджетов Цикл
		
		ДанныеВиджета = КлючИЗначение.Значение;
		
		Если ДанныеВиджета.Вид <> Перечисления.ВидыВиджетов.БлокНавигации Тогда
			Продолжить;
		КонецЕсли;
		
		Элементы.БлокНавигации.СписокВыбора.Добавить(ДанныеВиджета.Ссылка, ДанныеВиджета.Наименование);
		
	КонецЦикла;
	
	Элементы.ГруппаБлокНавигации.Видимость = Элементы.БлокНавигации.СписокВыбора.Количество() > 0;
	
	Элементы.БлокНавигации.СписокВыбора.Добавить(
		Справочники.Виджеты.ПустаяСсылка(),
		НСтр("ru = 'Не использовать'"));
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокВыбораВариантаРабочегоСтола()
	
	Элементы.ВариантРабочегоСтола.СписокВыбора.Очистить();
	
	ВариантыРабочихСтолов = Справочники.РабочиеСтолы.ДоступныеДанные();
	Для Каждого ДанныеВарианта Из ВариантыРабочихСтолов Цикл
		Элементы.ВариантРабочегоСтола.СписокВыбора.Добавить(
			ДанныеВарианта.Значение,
			ДанныеВарианта.Представление);
	КонецЦикла;
	
	Элементы.ВариантРабочегоСтола.СписокВыбора.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВариантыКомпоновкиРабочегоСтола()
	
	Элементы.ВариантКомпоновки.СписокВыбора.Очистить();
	
	Элементы.ВариантКомпоновки.СписокВыбора.Добавить("", НСтр("ru = 'Автоматически'"));
	
	ВариантыРабочихСтолов = Справочники.РабочиеСтолы.ВариантыКомпоновки();
	Для Каждого ДанныеВарианта Из ВариантыРабочихСтолов Цикл
		Элементы.ВариантКомпоновки.СписокВыбора.Добавить(
			ДанныеВарианта.Значение,
			ДанныеВарианта.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеВариантаКомпоновки()
	
	ДанныеВариантаКомпоновки =
		Справочники.РабочиеСтолы.ДанныеВариантаКомпоновки(ВариантКомпоновки);
	
	КоличествоКолонок = ДанныеВариантаКомпоновки.КоличествоКолонок;
	КоличествоСтрок = ДанныеВариантаКомпоновки.КоличествоСтрок;
	
	// Обновим соотношение элементов на форме с компоновкой.
	ИменаСвойствВариантаКомпоновки.Очистить();
	МакетКомпоновки = Справочники.РабочиеСтолы.ПолучитьМакет(ДанныеВариантаКомпоновки.ИмяМакета); 
	ТаблицаКомпоновки = ОбщегоНазначенияДокументооборот.ТаблицаЗначенийИзМакета(
		МакетКомпоновки);
	ТаблицаКомпоновки.Сортировать("НомерСтроки");
	Для Каждого СтрокаКомпоновки Из ТаблицаКомпоновки Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаКомпоновки.НомерКолонки)
			И Не ЗначениеЗаполнено(СтрокаКомпоновки.НомерСтроки) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаИмениСвойства = ИменаСвойствВариантаКомпоновки.Добавить();
		СтрокаИмениСвойства.ИмяСвойства = СтрокаКомпоновки.Имя;
		СтрокаИмениСвойства.НомерКолонки = Число(СтрокаКомпоновки.НомерКолонки);
		СтрокаИмениСвойства.НомерСтроки = Число(СтрокаКомпоновки.НомерСтроки);		
		
	КонецЦикла;
	
	// Обновим видимость колонок.
	ОбновитьВидимостьКолонок();
	
	// Обновим расположение виджетов.
	Для Каждого СтрокаИмениСвойства Из ИменаСвойствВариантаКомпоновки Цикл
		
		НайденныеЭлементыВиджета = Неопределено;
		Для Каждого ЭлементыВиджета Из ЭлементыВиджетов() Цикл
			
			Если ЭлементыВиджета.ИмяРеквизита = СтрокаИмениСвойства.ИмяСвойства Тогда
				НайденныеЭлементыВиджета = ЭлементыВиджета;
				Прервать; 
			КонецЕсли;
			
		КонецЦикла;
		
		Если НайденныеЭлементыВиджета = Неопределено Тогда
			ВызватьИсключение СтрШаблон(
				НСтр("ru = 'Не найдены элементы виджета %1.'"),
				СтрокаИмениСвойства.ИмяСвойства);
		КонецЕсли;
		
		ЭлементыКолонки = ЭлементыКолонки(СтрокаИмениСвойства.НомерКолонки);
		
		Элементы.Переместить(
			ЭлементыВиджета.ГруппаВиджета,
			ЭлементыКолонки.ГруппаКолонки,
			ЭлементыКолонки.ГруппаДобавить);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЦветовуюСхему()
	
	Элементы.ЦветоваяСхемаЦветная.Картинка =
		?(ЦветоваяСхема = Перечисления.ЦветовыеСхемыРабочегоСтола.Цветная,
			БиблиотекаКартинок.ЦветоваяСхемаЦветнаяВыбрана,
			БиблиотекаКартинок.ЦветоваяСхемаЦветная);
	
	Элементы.ЦветоваяСхемаСерая.Картинка =
		?(ЦветоваяСхема = Перечисления.ЦветовыеСхемыРабочегоСтола.Серая,
			БиблиотекаКартинок.ЦветоваяСхемаСераяВыбрана,
			БиблиотекаКартинок.ЦветоваяСхемаСерая);
			
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииВиджета()
	
	ПриИзмененииВиджетаНаСервере();
	
	Оповестить("Запись_НастройкиРабочихСтолов");
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВиджетаНаСервере()
	
	ВариантРабочегоСтолаИзменен = Истина;
	
	ЗаписатьСхемуРабочегоСтола();
	ОбновитьОтображениеСхемыРабочегоСтола();
	
КонецПроцедуры

&НаСервере
Функция СтрокаИмениСвойства(ИмяСвойства)
	
	НайденныеСтроки =
		ИменаСвойствВариантаКомпоновки.НайтиСтроки(Новый Структура("ИмяСвойства", ИмяСвойства));
	Если НайденныеСтроки.Количество() <> 1 Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Не удалось найти строку имени свойств %1 - найдено %2.'"),
			ИмяСвойства,
			НайденныеСтроки.Количество());
	КонецЕсли;
	
	Возврат НайденныеСтроки[0];
	
КонецФункции

&НаКлиенте
Процедура УдалитьВиджет(ИмяРеквизита)
	
	УдалитьВиджетНаСервере(ИмяРеквизита);
	
	Оповестить("Запись_НастройкиРабочихСтолов");
	
КонецПроцедуры

&НаСервере
Процедура УдалитьВиджетНаСервере(ИмяРеквизита)
	
	ВариантРабочегоСтолаИзменен = Истина;
	
	// Удалим виджет.
	ЭлементыВиджета = ЭлементыВиджетаПоИмени(ИмяРеквизита);
	НомерКолонки = ЭлементыВиджета.НомерКолонки;
	НомерСтроки = ЭлементыВиджета.НомерСтроки;
	
	ВысотаКолонки = ВысотаКолонки(НомерКолонки);
	
	ЭтотОбъект[ЭлементыВиджета.ИмяРеквизита] = "";
	
	// Сместим виджеты в колонке.
	Если НомерСтроки < ВысотаКолонки Тогда
		
		Для ОчереднойНомерСтроки = НомерСтроки + 1 По ВысотаКолонки Цикл
			
			ОчереднаяСтрока = ЭлементыВиджета(НомерКолонки, ОчереднойНомерСтроки);
			Если ОчереднаяСтрока = Неопределено Тогда
				Прервать;
			КонецЕсли;
				
			ПредыдущаяСтрока = ЭлементыВиджета(НомерКолонки, ОчереднойНомерСтроки - 1);
			
			ЭтотОбъект[ПредыдущаяСтрока.ИмяРеквизита] = ЭтотОбъект[ОчереднаяСтрока.ИмяРеквизита];
			ЭтотОбъект[ОчереднаяСтрока.ИмяРеквизита] = "";
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Сохраним схему и обновим отображение.
	ЗаписатьСхемуРабочегоСтола();
		
	// Обновим отображение.
	ОбновитьОтображениеСхемыРабочегоСтола();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЦветовуюСхему(НоваяЦветоваяСхема)
	
	ЦветоваяСхема = НоваяЦветоваяСхема;
	
	ЗаписатьНастройкиРабочегаСтола();
	
КонецПроцедуры

&НаСервере
Функция ВысотаЭлемента(ВысотаСхемы)
	
	Если ВысотаСхемы = 0 Тогда
		ВысотаЭлемента = 7;
	ИначеЕсли ВысотаСхемы = 1 Тогда
		ВысотаЭлемента = 7;
	ИначеЕсли ВысотаСхемы = 2 Тогда
		ВысотаЭлемента = 15;
	ИначеЕсли ВысотаСхемы = 3 Тогда
		ВысотаЭлемента = 24;
	Иначе
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Неизвестная высота схемы %1'"),
			ВысотаСхемы);
	КонецЕсли;
	
	Возврат ВысотаЭлемента;
	
КонецФункции

&НаСервере
Функция ШириныКолонок()
	
	ДанныеВсехВиджетов = РаботаСРабочимСтоломПовтИсп.ДанныеВсехВиджетов();
	
	ШириныКолонок = Новый Соответствие;
	Для НомерКолонки = 1 По КоличествоКолонок Цикл
		ШириныКолонок[НомерКолонки] = 0;
	КонецЦикла;
	
	Для Каждого ЭлементыВиджета Из ЭлементыВиджетов() Цикл
		
		ОчереднойВиджет = ЭтотОбъект[ЭлементыВиджета.ИмяРеквизита];
		ДанныеВиджета = ДанныеВсехВиджетов[ОчереднойВиджет];
		ВиджетУказан = ДанныеВиджета <> Неопределено;
		Если Не ВиджетУказан Тогда
			Продолжить;
		КонецЕсли;
		
		ШириныКолонок[ЭлементыВиджета.НомерКолонки] =
			Макс(ШириныКолонок[ЭлементыВиджета.НомерКолонки], ДанныеВиджета.ШиринаСхемы);
	
	КонецЦикла;
	
	Возврат ШириныКолонок;
	
КонецФункции


&НаСервере
Функция ШиринаЭлемента(ШиринаСхемы)
	
	Если ШиринаСхемы = 0 Тогда
		ШиринаЭлемента = 25;
	ИначеЕсли ШиринаСхемы = 1 Тогда
		ШиринаЭлемента = 25;
	ИначеЕсли ШиринаСхемы = 2 Тогда
		ШиринаЭлемента = 50;
	Иначе
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Неизвестная ширина схемы %1'"),
			ШиринаСхемы);
	КонецЕсли;
	
	Возврат ШиринаЭлемента;
	
КонецФункции

&НаСервере
Функция ЭлементыВиджета(НомерКолонки, НомерСтроки)
	
	ЭлементыВиджета = Неопределено;
	
	ЭлементыВиджетов = ЭлементыВиджетов();
	Для Каждого ОчередныеЭлементыВиджета Из ЭлементыВиджетов Цикл
		
		Если ОчередныеЭлементыВиджета.НомерКолонки = НомерКолонки
			И ОчередныеЭлементыВиджета.НомерСтроки = НомерСтроки Тогда
			ЭлементыВиджета = ОчередныеЭлементыВиджета;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЭлементыВиджета;
	
КонецФункции

&НаСервере
Функция ЭлементыВиджетаПоИмени(ИмяРеквизита)
	
	ЭлементыВиджета = Неопределено;
	
	ЭлементыВиджетов = ЭлементыВиджетов();
	Для Каждого ОчередныеЭлементыВиджета Из ЭлементыВиджетов Цикл
		
		Если ОчередныеЭлементыВиджета.ИмяРеквизита = ИмяРеквизита Тогда
			ЭлементыВиджета = ОчередныеЭлементыВиджета;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЭлементыВиджета = Неопределено Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Не найдены элементы виджета %1.'"),
			ИмяРеквизита);
	КонецЕсли;
	
	Возврат ЭлементыВиджета;
	
КонецФункции

&НаСервере
Функция ЭлементыВиджетов()
	
	ЭлементыВиджетов = Новый Массив;
	
	СтрокаИмениСвойства = СтрокаИмениСвойства("Виджет1_1");
	ЭлементыВиджета = НовыйЭлементыВиджета();
	ЭлементыВиджета.ИмяРеквизита = СтрокаИмениСвойства.ИмяСвойства;
	ЭлементыВиджета.НомерКолонки = СтрокаИмениСвойства.НомерКолонки;
	ЭлементыВиджета.НомерСтроки = СтрокаИмениСвойства.НомерСтроки;
	ЭлементыВиджета.ГруппаВиджета = Элементы.Строка1_1;
	ЭлементыВиджета.КонтейнерВиджета = Элементы.ГруппаВиджет1_1;
	ЭлементыВиджета.ВыборВиджета = Элементы.Виджет1_1;
	ЭлементыВиджета.КнопкаНастроить = Элементы.НастроитьВиджет1_1;
	ЭлементыВиджета.КнопкаУдалить = Элементы.УдалитьВиджет1_1;
	ЭлементыВиджетов.Добавить(ЭлементыВиджета);
	
	СтрокаИмениСвойства = СтрокаИмениСвойства("Виджет1_2");
	ЭлементыВиджета = НовыйЭлементыВиджета();
	ЭлементыВиджета.ИмяРеквизита = СтрокаИмениСвойства.ИмяСвойства;
	ЭлементыВиджета.НомерКолонки = СтрокаИмениСвойства.НомерКолонки;
	ЭлементыВиджета.НомерСтроки = СтрокаИмениСвойства.НомерСтроки;
	ЭлементыВиджета.ГруппаВиджета = Элементы.Строка1_2;
	ЭлементыВиджета.КонтейнерВиджета = Элементы.ГруппаВиджет1_2;
	ЭлементыВиджета.ВыборВиджета = Элементы.Виджет1_2;
	ЭлементыВиджета.КнопкаНастроить = Элементы.НастроитьВиджет1_2;
	ЭлементыВиджета.КнопкаУдалить = Элементы.УдалитьВиджет1_2;
	ЭлементыВиджетов.Добавить(ЭлементыВиджета);
	
	СтрокаИмениСвойства = СтрокаИмениСвойства("Виджет1_3");
	ЭлементыВиджета = НовыйЭлементыВиджета();
	ЭлементыВиджета.ИмяРеквизита = СтрокаИмениСвойства.ИмяСвойства;
	ЭлементыВиджета.НомерКолонки = СтрокаИмениСвойства.НомерКолонки;
	ЭлементыВиджета.НомерСтроки = СтрокаИмениСвойства.НомерСтроки;
	ЭлементыВиджета.ГруппаВиджета = Элементы.Строка1_3;
	ЭлементыВиджета.КонтейнерВиджета = Элементы.ГруппаВиджет1_3;
	ЭлементыВиджета.ВыборВиджета = Элементы.Виджет1_3;
	ЭлементыВиджета.КнопкаНастроить = Элементы.НастроитьВиджет1_3;
	ЭлементыВиджета.КнопкаУдалить = Элементы.УдалитьВиджет1_3;
	ЭлементыВиджетов.Добавить(ЭлементыВиджета);
	
	СтрокаИмениСвойства = СтрокаИмениСвойства("Виджет2_1");
	ЭлементыВиджета = НовыйЭлементыВиджета();
	ЭлементыВиджета.ИмяРеквизита = СтрокаИмениСвойства.ИмяСвойства;
	ЭлементыВиджета.НомерКолонки = СтрокаИмениСвойства.НомерКолонки;
	ЭлементыВиджета.НомерСтроки = СтрокаИмениСвойства.НомерСтроки;
	ЭлементыВиджета.ГруппаВиджета = Элементы.Строка2_1;
	ЭлементыВиджета.КонтейнерВиджета = Элементы.ГруппаВиджет2_1;
	ЭлементыВиджета.ВыборВиджета = Элементы.Виджет2_1;
	ЭлементыВиджета.КнопкаНастроить = Элементы.НастроитьВиджет2_1;
	ЭлементыВиджета.КнопкаУдалить = Элементы.УдалитьВиджет2_1;
	ЭлементыВиджетов.Добавить(ЭлементыВиджета);
	
	СтрокаИмениСвойства = СтрокаИмениСвойства("Виджет2_2");
	ЭлементыВиджета = НовыйЭлементыВиджета();
	ЭлементыВиджета.ИмяРеквизита = СтрокаИмениСвойства.ИмяСвойства;
	ЭлементыВиджета.НомерКолонки = СтрокаИмениСвойства.НомерКолонки;
	ЭлементыВиджета.НомерСтроки = СтрокаИмениСвойства.НомерСтроки;
	ЭлементыВиджета.ГруппаВиджета = Элементы.Строка2_2;
	ЭлементыВиджета.КонтейнерВиджета = Элементы.ГруппаВиджет2_2;
	ЭлементыВиджета.ВыборВиджета = Элементы.Виджет2_2;
	ЭлементыВиджета.КнопкаНастроить = Элементы.НастроитьВиджет2_2;
	ЭлементыВиджета.КнопкаУдалить = Элементы.УдалитьВиджет2_2;
	ЭлементыВиджетов.Добавить(ЭлементыВиджета);
	
	СтрокаИмениСвойства = СтрокаИмениСвойства("Виджет2_3");
	ЭлементыВиджета = НовыйЭлементыВиджета();
	ЭлементыВиджета.ИмяРеквизита = СтрокаИмениСвойства.ИмяСвойства;
	ЭлементыВиджета.НомерКолонки = СтрокаИмениСвойства.НомерКолонки;
	ЭлементыВиджета.НомерСтроки = СтрокаИмениСвойства.НомерСтроки;
	ЭлементыВиджета.ГруппаВиджета = Элементы.Строка2_3;
	ЭлементыВиджета.КонтейнерВиджета = Элементы.ГруппаВиджет2_3;
	ЭлементыВиджета.ВыборВиджета = Элементы.Виджет2_3;
	ЭлементыВиджета.КнопкаНастроить = Элементы.НастроитьВиджет2_3;
	ЭлементыВиджета.КнопкаУдалить = Элементы.УдалитьВиджет2_3;
	ЭлементыВиджетов.Добавить(ЭлементыВиджета);
	
	СтрокаИмениСвойства = СтрокаИмениСвойства("Виджет3_1");
	ЭлементыВиджета = НовыйЭлементыВиджета();
	ЭлементыВиджета.ИмяРеквизита = СтрокаИмениСвойства.ИмяСвойства;
	ЭлементыВиджета.НомерКолонки = СтрокаИмениСвойства.НомерКолонки;
	ЭлементыВиджета.НомерСтроки = СтрокаИмениСвойства.НомерСтроки;
	ЭлементыВиджета.ГруппаВиджета = Элементы.Строка3_1;
	ЭлементыВиджета.КонтейнерВиджета = Элементы.ГруппаВиджет3_1;
	ЭлементыВиджета.ВыборВиджета = Элементы.Виджет3_1;
	ЭлементыВиджета.КнопкаНастроить = Элементы.НастроитьВиджет3_1;
	ЭлементыВиджета.КнопкаУдалить = Элементы.УдалитьВиджет3_1;
	ЭлементыВиджетов.Добавить(ЭлементыВиджета);
	
	СтрокаИмениСвойства = СтрокаИмениСвойства("Виджет3_2");
	ЭлементыВиджета = НовыйЭлементыВиджета();
	ЭлементыВиджета.ИмяРеквизита = СтрокаИмениСвойства.ИмяСвойства;
	ЭлементыВиджета.НомерКолонки = СтрокаИмениСвойства.НомерКолонки;
	ЭлементыВиджета.НомерСтроки = СтрокаИмениСвойства.НомерСтроки;
	ЭлементыВиджета.ГруппаВиджета = Элементы.Строка3_2;
	ЭлементыВиджета.КонтейнерВиджета = Элементы.ГруппаВиджет3_2;
	ЭлементыВиджета.ВыборВиджета = Элементы.Виджет3_2;
	ЭлементыВиджета.КнопкаНастроить = Элементы.НастроитьВиджет3_2;
	ЭлементыВиджета.КнопкаУдалить = Элементы.УдалитьВиджет3_2;
	ЭлементыВиджетов.Добавить(ЭлементыВиджета);
	
	СтрокаИмениСвойства = СтрокаИмениСвойства("Виджет3_3");
	ЭлементыВиджета = НовыйЭлементыВиджета();
	ЭлементыВиджета.ИмяРеквизита = СтрокаИмениСвойства.ИмяСвойства;
	ЭлементыВиджета.НомерКолонки = СтрокаИмениСвойства.НомерКолонки;
	ЭлементыВиджета.НомерСтроки = СтрокаИмениСвойства.НомерСтроки;
	ЭлементыВиджета.ГруппаВиджета = Элементы.Строка3_3;
	ЭлементыВиджета.КонтейнерВиджета = Элементы.ГруппаВиджет3_3;
	ЭлементыВиджета.ВыборВиджета = Элементы.Виджет3_3;
	ЭлементыВиджета.КнопкаНастроить = Элементы.НастроитьВиджет3_3;
	ЭлементыВиджета.КнопкаУдалить = Элементы.УдалитьВиджет3_3;
	ЭлементыВиджетов.Добавить(ЭлементыВиджета);
	
	СтрокаИмениСвойства = СтрокаИмениСвойства("Виджет4_1");
	ЭлементыВиджета = НовыйЭлементыВиджета();
	ЭлементыВиджета.ИмяРеквизита = СтрокаИмениСвойства.ИмяСвойства;
	ЭлементыВиджета.НомерКолонки = СтрокаИмениСвойства.НомерКолонки;
	ЭлементыВиджета.НомерСтроки = СтрокаИмениСвойства.НомерСтроки;
	ЭлементыВиджета.ГруппаВиджета = Элементы.Строка4_1;
	ЭлементыВиджета.КонтейнерВиджета = Элементы.ГруппаВиджет4_1;
	ЭлементыВиджета.ВыборВиджета = Элементы.Виджет4_1;
	ЭлементыВиджета.КнопкаНастроить = Элементы.НастроитьВиджет4_1;
	ЭлементыВиджета.КнопкаУдалить = Элементы.УдалитьВиджет4_1;
	ЭлементыВиджетов.Добавить(ЭлементыВиджета);
	
	СтрокаИмениСвойства = СтрокаИмениСвойства("Виджет4_2");
	ЭлементыВиджета = НовыйЭлементыВиджета();
	ЭлементыВиджета.ИмяРеквизита = СтрокаИмениСвойства.ИмяСвойства;
	ЭлементыВиджета.НомерКолонки = СтрокаИмениСвойства.НомерКолонки;
	ЭлементыВиджета.НомерСтроки = СтрокаИмениСвойства.НомерСтроки;
	ЭлементыВиджета.ГруппаВиджета = Элементы.Строка4_2;
	ЭлементыВиджета.КонтейнерВиджета = Элементы.ГруппаВиджет4_2;
	ЭлементыВиджета.ВыборВиджета = Элементы.Виджет4_2;
	ЭлементыВиджета.КнопкаНастроить = Элементы.НастроитьВиджет4_2;
	ЭлементыВиджета.КнопкаУдалить = Элементы.УдалитьВиджет4_2;
	ЭлементыВиджетов.Добавить(ЭлементыВиджета);
	
	СтрокаИмениСвойства = СтрокаИмениСвойства("Виджет4_3");
	ЭлементыВиджета = НовыйЭлементыВиджета();
	ЭлементыВиджета.ИмяРеквизита = СтрокаИмениСвойства.ИмяСвойства;
	ЭлементыВиджета.НомерКолонки = СтрокаИмениСвойства.НомерКолонки;
	ЭлементыВиджета.НомерСтроки = СтрокаИмениСвойства.НомерСтроки;
	ЭлементыВиджета.ГруппаВиджета = Элементы.Строка4_3;
	ЭлементыВиджета.КонтейнерВиджета = Элементы.ГруппаВиджет4_3;
	ЭлементыВиджета.ВыборВиджета = Элементы.Виджет4_3;
	ЭлементыВиджета.КнопкаНастроить = Элементы.НастроитьВиджет4_3;
	ЭлементыВиджета.КнопкаУдалить = Элементы.УдалитьВиджет4_3;
	ЭлементыВиджетов.Добавить(ЭлементыВиджета);
	
	Возврат ЭлементыВиджетов;
	
КонецФункции

&НаСервере
Функция ЭтоПустаяКолонка(НомерКолонки)
	
	ЭтоПустаяКолонка = Истина;
	Для Каждого ЭлементыВиджета Из ЭлементыВиджетов() Цикл
		
		Если ЭлементыВиджета.НомерКолонки = НомерКолонки
			И ЗначениеЗаполнено(ЭтотОбъект[ЭлементыВиджета.ИмяРеквизита]) Тогда
			ЭтоПустаяКолонка = Ложь;
			Прервать;	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЭтоПустаяКолонка;
	
КонецФункции

#КонецОбласти