
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ФизическоеЛицо = Параметры.ФизическоеЛицо;
	
	// Используем надпись, а не поле ввода, т.к. требуется принудительно обновить представление
	// Если оставить поле, то после смены ФИО, если опять открыть форму истории будет старое представление
	Элементы.СсылкаФизическоеЛицо.Заголовок = Строка(ФизическоеЛицо);
	ПолФизЛица = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФизическоеЛицо, "Пол");
	
	ПолЧислом = ФизическиеЛица.ПолЦифрой(ПолФизЛица);

	Набор = РегистрыСведений.ФИОФизическихЛиц.СоздатьНаборЗаписей();
	Набор.Отбор.ФизическоеЛицо.Использование = Истина;
	Набор.Отбор.ФизическоеЛицо.ВидСравнения = ВидСравнения.Равно;
	Набор.Отбор.ФизическоеЛицо.Значение = ФизическоеЛицо;
	Набор.Прочитать();
	ЗначениеВДанныеФормы(Набор, НаборЗаписей); 
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СсылкаФизическоеЛицоНажатие(Элемент)
	
	ОткрытьЗначениеАсинх(ФизическоеЛицо);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНаборЗаписей

&НаКлиенте
Процедура НаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ТекущиеДанные.ФизическоеЛицо = ФизическоеЛицо;
		
		НовыйПериод = ОбщегоНазначенияКлиент.ДатаСеанса();
		Если НаборЗаписей.Количество() > 1 Тогда
			ПоследняяЗапись = НаборЗаписей.Получить(НаборЗаписей.Количество() - 2);
			ЗаполнитьЗначенияСвойств(ТекущиеДанные, ПоследняяЗапись);
			ПоследнийПериод = ПоследняяЗапись.Период;
		Иначе
			ПоследнийПериод = Дата(1, 1, 1);
		КонецЕсли; 
		
		Если НовыйПериод <= ПоследнийПериод Тогда
			НовыйПериод = КонецДня(ПоследнийПериод) + 1;
		КонецЕсли; 
		
		Элемент.ТекущиеДанные.Период = НовыйПериод;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Период) Тогда
		
		ТекущиеДанные.Период = ДатаОтсчетаФИО();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы 

&НаКлиенте
Процедура КомандаПросклонять(Команда)
	
	ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ФИО) Тогда
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершитьСклонение", ЭтотОбъект);
		ПараметрыСклонения = СклонениеПредставленийОбъектовКлиентСервер.ПараметрыСклонения();
		ПараметрыСклонения.ЭтоФИО = Истина;
		Если ЗначениеЗаполнено(ПолЧислом) Тогда
			ПараметрыСклонения.Пол = ПолЧислом;
		КонецЕсли;
		Представление = ТекущиеДанные["ФИО" + СуффиксРусскогоЯзыка()];
		СклонениеПредставленийОбъектовКлиент.НачатьСклонение(ЭтотОбъект, Представление,
			ПараметрыСклонения, Истина, ОповещениеОЗавершении);
		
	Иначе
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Сначала нужно заполнить ФИО в выбранной строке'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗапись(Команда)
	
	ОбработкаОповещения = Новый ОписаниеОповещения("ОбработатьСозданиеЗаписи", ЭтотОбъект);
	ФизическиеЛицаКлиент.ОткрытьФормуИзмененияФИО(ФизическоеЛицо, ОбработкаОповещения, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНаборЗаписей(Команда)
	
	Если НаборЗаписей.Количество() = 0 Тогда 
		
		ТекстСообщения = НСтр("ru='Должна быть хотя бы одна запись истории!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "НаборЗаписей");
		Возврат;
		
	КонецЕсли;
	
	ЗаписатьНаборЗаписейНаСервере();
	Оповестить(ФизическиеЛицаКлиент.ИмяОповещенияОбИзмененииФИО(), ФизическоеЛицо);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если НаборЗаписей.Количество() = 0 Тогда 
		
		ТекстСообщения = НСтр("ru='Должна быть хотя бы одна запись истории!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "НаборЗаписей");
		Возврат;
		
	КонецЕсли;
	
	ЗаписатьНаборЗаписейНаСервере();
	Оповестить(ФизическиеЛицаКлиент.ИмяОповещенияОбИзмененииФИО(), ФизическоеЛицо);
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Представление = "ИзначальноеФИО";
	
	ЭлементШрифтаОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("Текст");
	ЭлементШрифтаОформления.Значение = "";
	ЭлементШрифтаОформления.Использование = Истина;
	
	ЭлементШрифтаОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("ТолькоПросмотр");
	ЭлементШрифтаОформления.Значение = Истина;
	ЭлементШрифтаОформления.Использование = Истина;
	
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("НаборЗаписей.Период");
	ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = ДатаОтсчетаФИО();
	ЭлементОтбораДанных.Использование  = Истина;
	
	ЭлементОформляемогоПоля = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ЭлементОформляемогоПоля.Поле = Новый ПолеКомпоновкиДанных("Период");
	ЭлементОформляемогоПоля.Использование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьСклонение(Результат, ДопПараметры) Экспорт
	
	ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, Склонения);
	
	Для Каждого КлючЗначение Из Склонения Цикл
		
		Падеж = КлючЗначение.Ключ;
		ТекущиеДанные[Падеж + "Падеж"] = КлючЗначение.Значение;
		
	КонецЦикла; 
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСозданиеЗаписи(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяЗапись, Результат);
	
	НаборЗаписей.Сортировать("Период");
	Модифицированность = Истина;
	
КонецПроцедуры 

// Возвращает суффикс русского языка
// 
// Возвращаемое значение:
//  Строка
//
&НаСервереБезКонтекста
Функция СуффиксРусскогоЯзыка()
	
	Возврат МультиязычностьДокументооборот.СуффиксРусскогоЯзыка();
	
КонецФункции

// Возвращает дату отсчета для РС ФИОФизическихЛиц
// 
// Возвращаемое значение:
//  Дата
//
&НаСервере
Функция ДатаОтсчетаФИО()
	
	Возврат РегистрыСведений.ФИОФизическихЛиц.ДатаОтсчетаФИО();
	
КонецФункции

// Записывает набор записей РС ФИОФизическихЛиц
//
&НаСервере
Процедура ЗаписатьНаборЗаписейНаСервере()
	
	Набор = РегистрыСведений.ФИОФизическихЛиц.СоздатьНаборЗаписей();
	Набор.Отбор.ФизическоеЛицо.Использование = Истина;
	Набор.Отбор.ФизическоеЛицо.ВидСравнения = ВидСравнения.Равно;
	Набор.Отбор.ФизическоеЛицо.Значение = ФизическоеЛицо;
	Набор.Прочитать();
	Набор.Загрузить(НаборЗаписей.Выгрузить());
	Набор.Записать(Истина); 
	
	ФизическиеЛица.ОбновитьНаименованиеИСклоненияФизЛица(ФизическоеЛицо); 
	
	Модифицированность = Ложь;
	
КонецПроцедуры

#КонецОбласти