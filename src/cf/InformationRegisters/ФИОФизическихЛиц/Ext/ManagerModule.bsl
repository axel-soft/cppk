#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ОбработчикиОбновления

// Заполнение регистра сведений "ФИОФизическиЛиц"
// 
// Параметры:
//  Параметры - Структура - Параметры обработчика:
//   * ПрогрессВыполнения - Структура:
//      ** ОбработаноОбъектов - Число.
//      ** ВсегоОбъектов - Число.
//
Процедура ЗаполнитьРегистр(Параметры) Экспорт
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(ФизическиеЛица.Ссылка) КАК Количество
			|ИЗ
			|	РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
			|		ПРАВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
			|		ПО (ФизическиеЛица.Ссылка = ФИОФизическихЛиц.ФизическоеЛицо)
			|ГДЕ
			|	ФИОФизическихЛиц.ФИО ЕСТЬ NULL");
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Параметры.ПрогрессВыполнения.ВсегоОбъектов = Выборка.Количество;
		КонецЕсли;
		
	КонецЕсли;
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо,
		|	СклоненияПредставленийОбъектов.ИменительныйПадеж КАК ИменительныйПадеж,
		|	СклоненияПредставленийОбъектов.РодительныйПадеж КАК РодительныйПадеж,
		|	СклоненияПредставленийОбъектов.ДательныйПадеж КАК ДательныйПадеж,
		|	СклоненияПредставленийОбъектов.ВинительныйПадеж КАК ВинительныйПадеж,
		|	СклоненияПредставленийОбъектов.ТворительныйПадеж КАК ТворительныйПадеж,
		|	СклоненияПредставленийОбъектов.ПредложныйПадеж КАК ПредложныйПадеж,
		|	ФизическиеЛица.Наименование КАК ФИО,
		|	ФизическиеЛица.НаименованиеЯзык1 КАК ФИОЯзык1,
		|	ФизическиеЛица.НаименованиеЯзык2 КАК ФИОЯзык2,
		|	ФизическиеЛица.ДатаРождения КАК ДатаРождения
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
		|		ПО (ФизическиеЛица.Ссылка = ФИОФизическихЛиц.ФизическоеЛицо)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СклоненияПредставленийОбъектов КАК СклоненияПредставленийОбъектов
		|		ПО ФизическиеЛица.Ссылка = СклоненияПредставленийОбъектов.Объект
		|ГДЕ
		|	ФИОФизическихЛиц.ФИО ЕСТЬ NULL");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ФизическоеЛицо.Установить(Выборка.ФизическоеЛицо);
			НоваяЗапись = НаборЗаписей.Добавить();
			Период = ДатаОтсчетаФИО();
			Если ЗначениеЗаполнено(Выборка.ДатаРождения) Тогда
				Период = Выборка.ДатаРождения;
			КонецЕсли;
			НоваяЗапись.Период = Период;
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Выборка.ФизическоеЛицо.Метаданные(),
				Выборка.ФизическоеЛицо,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3.0.16.23 не удалось обновить некоторые объекты (пропущены): %1'"),
				ПроблемныхОбъектов);
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = ОбработаноОбъектов = 0;
	
КонецПроцедуры

#КонецОбласти

// Возвращает ФИО физического лица на дату
//
// Параметры:
//  ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//  Дата - Дата
// 
// Возвращаемое значение:
//  Строка
//
Функция ФИОФизЛицаНаДату(ФизическоеЛицо, Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка КАК Ссылка,
		|	ФизическиеЛица.Наименование КАК Наименование
		|ПОМЕСТИТЬ НужноеФизЛицо
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка = &ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ФИОФизическихЛиц.ФИО, НужноеФизЛицо.Наименование) КАК ФИО
		|ИЗ
		|	НужноеФизЛицо КАК НужноеФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ФизическоеЛицо = &ФизическоеЛицо) КАК ФИОФизическихЛиц
		|		ПО НужноеФизЛицо.Ссылка = ФИОФизическихЛиц.ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ФИО;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

// Возвращает дату, с которой начинает действовать первое ФИО
// 
// Возвращаемое значение:
//  Дата
//
Функция ДатаОтсчетаФИО() Экспорт
	
	Возврат '18991231000000';
	
КонецФункции

#КонецОбласти

#КонецЕсли