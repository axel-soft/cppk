
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет указанный объект в очередь отложенного обновления прав
//
// Параметры:
//  Объект - ЛюбаяСсылка - объект, который ставим в очередь.
//  Участник - ОпределяемыйТип.КонтейнерПользователей - участник, которого требуется добавить в РГ.
//  ДопСведения - Структура, Строка - дополнительные сведения.
//  ЗаполнятьКолонкуИзменение - Булево - признак заполнения колонки "Изменение".
//  Изменение - Булево - значение для колонки "Изменение".
//  ДатаВремя - Дата - дата записи.
//
Процедура Добавить(
			Объект,
			Участник,
			ДопСведения = "",
			ЗаполнятьКолонкуИзменение = Истина,
			Изменение = Ложь,
			ДатаВремя = Неопределено) Экспорт
	
	Если ДатаВремя = Неопределено Тогда
		
		ДатаВремя = ТекущаяДата();
		ДатаВМиллисекундах = ОбщегоНазначенияДокументооборот.ТекущаяДатаВМиллисекундах();
		
	Иначе
		
		// Запись должна быть обработана после других записей с такой же датой.
		ДатаВМиллисекундах = ОбщегоНазначенияДокументооборот.ДатаВМиллисекундах(ДатаВремя);
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ЕстьNull(МАКСИМУМ(ОчередьРасширенияРабочихГрупп.ДатаВМиллисекундах), 0) КАК ДатаВмс
			|ИЗ
			|	РегистрСведений.ОчередьРасширенияРабочихГрупп КАК ОчередьРасширенияРабочихГрупп
			|ГДЕ
			|	ОчередьРасширенияРабочихГрупп.Дата = &ДатаВремя");
		
		Запрос.УстановитьПараметр("ДатаВремя", ДатаВремя);
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ДатаВМиллисекундах = ДатаВМиллисекундах + Выборка.ДатаВмс + 1;
		КонецЕсли;
		
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.ОчередьРасширенияРабочихГрупп.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Объект = Объект;
	МенеджерЗаписи.ДопСведения = ДопСведения;
	МенеджерЗаписи.ЗаполнятьКолонкуИзменение = ЗаполнятьКолонкуИзменение;
	МенеджерЗаписи.Участник = Участник;
	МенеджерЗаписи.Изменение = Изменение;
	МенеджерЗаписи.Дата = ДатаВремя;
	МенеджерЗаписи.ДатаВМиллисекундах = ДатаВМиллисекундах;
	
	// Запись с замещением для правильного выстраивания очереди
	МенеджерЗаписи.Записать(Истина);
	
КонецПроцедуры

// Удаляет указанный объект из очереди отложенного обновления прав
//
// Параметры:
//  Объект - Ссылка, Массив - ссылка на объект, который необходимо удалить из очереди или массив таких ссылок.
//  Участники - Массив - массив участников, которые требуется удалить из РГ.
//  ДопСведения - Структура, Строка - дополнительные сведения.
//  ЗаполнятьКолонкуИзменение - Булево - признак заполнения колонки "Изменение".
//
Процедура Удалить(Объект, Участники, ДопСведения, ЗаполнятьКолонкуИзменение) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ *
		|ИЗ
		|	РегистрСведений.ОчередьРасширенияРабочихГрупп КАК ОчередьРасширенияРабочихГрупп
		|ГДЕ
		|	ОчередьРасширенияРабочихГрупп.Объект = &Объект
		|	И ОчередьРасширенияРабочихГрупп.Участник В (&Участники)
		|	И ОчередьРасширенияРабочихГрупп.ДопСведения = &ДопСведения
		|	И ОчередьРасширенияРабочихГрупп.ЗаполнятьКолонкуИзменение = &ЗаполнятьКолонкуИзменение";
	
	Если ТипЗнч(Объект) = Тип("Массив") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "= &Объект", "В (&Объект)");
	КонецЕсли;
	
	Если Участники = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ОчередьРасширенияРабочихГрупп.Участник В (&Участники)", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Участники", Участники);
	Запрос.УстановитьПараметр("ДопСведения", ДопСведения);
	Запрос.УстановитьПараметр("ЗаполнятьКолонкуИзменение", ЗаполнятьКолонкуИзменение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		МенеджерЗаписи = РегистрыСведений.ОчередьРасширенияРабочихГрупп.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
		
		Попытка
			МенеджерЗаписи.Удалить();
		Исключение
			ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Расширение рабочих групп.Ошибка при удалении записи'",
					ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				Выборка.Объект.Метаданные(),
				Выборка.Объект,
				СтрШаблон(НСтр("ru = 'Ошибка при удалении записи ""%1 (%2), %3"": 
								|%4'"),
					Выборка.Объект,
					ТипЗнч(Выборка.Объект),
					Выборка.ДопСведения,
					ОписаниеОшибки));
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

// Обновляет порцию прав из очереди
//
// Параметры:
//  ОперативнаяОбработка - Булево - признак оперативной обработки.
//  РазмерПорции - Число - количество записей, которые необходимо обработать.
//
// Возвращаемое значение:
//  Число - количество обарботанных записей очереди.
//
Функция ОбработатьПорцию(ОперативнаяОбработка, РазмерПорции = 10) Экспорт
	
	ПределПопыток = 3;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ %1
		|	ОчередьРасширенияРабочихГрупп.Объект КАК Объект,
		|	ОчередьРасширенияРабочихГрупп.ДопСведения КАК ДопСведения,
		|	ОчередьРасширенияРабочихГрупп.ЗаполнятьКолонкуИзменение КАК ЗаполнятьКолонкуИзменение
		|ИЗ
		|	РегистрСведений.ОчередьРасширенияРабочихГрупп КАК ОчередьРасширенияРабочихГрупп
		|ГДЕ
		|	ОчередьРасширенияРабочихГрупп.ДопСведения = """"
		|	И ОчередьРасширенияРабочихГрупп.Попыток < &ПределПопыток
		|
		|СГРУППИРОВАТЬ ПО
		|	ОчередьРасширенияРабочихГрупп.Объект,
		|	ОчередьРасширенияРабочихГрупп.ДопСведения,
		|	ОчередьРасширенияРабочихГрупп.ЗаполнятьКолонкуИзменение
		|
		|УПОРЯДОЧИТЬ ПО
		|	МАКСИМУМ(ОчередьРасширенияРабочихГрупп.Попыток),
		|	МИНИМУМ(ОчередьРасширенияРабочихГрупп.ДатаВМиллисекундах),
		|	ОчередьРасширенияРабочихГрупп.Объект";
	
	Запрос.УстановитьПараметр("ПределПопыток", ПределПопыток);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", Формат(РазмерПорции, "ЧГ="));
	Если Не ОперативнаяОбработка Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"ОчередьРасширенияРабочихГрупп.ДопСведения = """"",
			"ОчередьРасширенияРабочихГрупп.ДопСведения <> """"");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбработатьЭлементОчереди(
			Выборка.Объект,
			Выборка.ДопСведения,
			Выборка.ЗаполнятьКолонкуИзменение);
	КонецЦикла;
	
	Возврат Выборка.Количество();
	
КонецФункции

// Очищает всю очередь - удаляет все записи,
// кроме ссылок на перечисление ЗаданияОчередиОбновленияПрав
// 
Процедура Очистить() Экспорт
	
	Набор = РегистрыСведений.ОчередьРасширенияРабочихГрупп.СоздатьНаборЗаписей();
	Набор.Записать();
	
КонецПроцедуры

// Возвращает Истина если указанный объект (например, дескриптор)
// стоит в очереди на обработку
//
// Параметры:
//  Ссылка - ЛюбаяСсылка - ссылка на объект, по которому необходимо проверить.
//
// Возврщаемое значение:
//  ЕстьЗаписи - Будево - Истина, если Объект стоит в очереди на обработку.
//
Функция ОбъектВОчереди(Объект) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК ЕстьЗаписи
		|ИЗ
		|	РегистрСведений.ОчередьРасширенияРабочихГрупп КАК ОчередьРасширенияРабочихГрупп
		|ГДЕ
		|	ОчередьРасширенияРабочихГрупп.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	ЕстьЗаписи = Не Результат.Пустой();
	
	Возврат ЕстьЗаписи;
	
КонецФункции

// Возвращает размер очереди
//
// Возврщаемое значение:
//  ЕстьЗаписи - Будево - Истина, если Объект стоит в очереди на обработку.
//
Функция РазмерОчереди() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(*) Как ЧислоЗаписей
		|ИЗ
		|	РегистрСведений.ОчередьРасширенияРабочихГрупп КАК ОчередьРасширенияРабочихГрупп";
	
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
 	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.ЧислоЗаписей;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Фиксирует текст ошибки, отмечает увеличение количества попыток.
// 
// Параметры:
//  Объект - Ссылка - ссылка на объект, по которому необходимо зафиксировать ошибку.
//  Участники - Массив - массив участников.
//  ДопСведения - Структура, Строка - дополнительные сведения.
//  ЗаполнятьКолонкуИзменение - Булево - признак заполнения колонки "Изменение".
//  ИнформацияОбОшибке - Строка - текст ошибки.
//
Процедура ОтметитьНеудачнуюПопытку(
			Объект,
			Участники,
			ДопСведения,
			ЗаполнятьКолонкуИзменение,
			Знач ИнформацияОбОшибке)
	
	Если Не ЗначениеЗаполнено(ИнформацияОбОшибке) Тогда
		ИнформацияОбОшибке = НСтр("ru = 'Информация об ошибке отсутствует'");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ *
		|ИЗ
		|	РегистрСведений.ОчередьРасширенияРабочихГрупп КАК ОчередьРасширенияРабочихГрупп
		|ГДЕ
		|	ОчередьРасширенияРабочихГрупп.Объект = &Объект
		|	И ОчередьРасширенияРабочихГрупп.Участник В (&Участники)
		|	И ОчередьРасширенияРабочихГрупп.ДопСведения = &ДопСведения
		|	И ОчередьРасширенияРабочихГрупп.ЗаполнятьКолонкуИзменение = &ЗаполнятьКолонкуИзменение";
	
	Если ТипЗнч(Объект) = Тип("Массив") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "= &Объект", "В (&Объект)");
	КонецЕсли;
	
	Если Участники = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ОчередьРасширенияРабочихГрупп.Участник В (&Участники)", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Участники", Участники);
	Запрос.УстановитьПараметр("ДопСведения", ДопСведения);
	Запрос.УстановитьПараметр("ЗаполнятьКолонкуИзменение", ЗаполнятьКолонкуИзменение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		МенеджерЗаписи = РегистрыСведений.ОчередьРасширенияРабочихГрупп.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
		
		Попытка
			МенеджерЗаписи.Попыток = МенеджерЗаписи.Попыток + 1;
			МенеджерЗаписи.ИнформацияОбОшибке = ИнформацияОбОшибке;
			МенеджерЗаписи.Записать();
		Исключение
			ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Расширение рабочих групп.Ошибка при отметке неудачной попытки'",
					ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				Выборка.Объект.Метаданные(),
				Выборка.Объект,
				СтрШаблон(НСтр("ru = 'Ошибка при отметке неудачной попытки обработки записи ""%1 (%2), %3"": 
								|%4'"),
					Выборка.Объект,
					ТипЗнч(Выборка.Объект),
					Выборка.ДопСведения,
					ОписаниеОшибки));
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

// Обрабатывает обновление прав по указанному элементу очереди и удаляет его 
// из очереди обновления
// 
// Параметры:
//  Ссылка - ЛюбаяСсылка - ссылка на объект, по которому необходимо обработать очередь.
//  ДопСведения - Структура, Строка - дополнительные сведения.
//  ЗаполнятьКолонкуИзменение - Булево - признак заполнения колонки "Изменение".
//
Процедура ОбработатьЭлементОчереди(Ссылка, ДопСведения, ЗаполнятьКолонкуИзменение) 
	
	ЕстьОшибки = Ложь;
	ОписаниеОшибки = "";
	УчастникиКОбработке = Неопределено;
	
	Попытка
		
		Если ДопСведения = "РасширитьРабочуюГруппуСвязанныхОбъектов" Тогда
			
			РаботаСРабочимиГруппами.РасширитьРабочуюГруппуСвязанныхОбъектов(Ссылка, Истина);
			
		КонецЕсли;
		
	Исключение
		
		ЕстьОшибки = Истина;
		ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Расширение рабочих групп'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,
			Ссылка,
			СтрШаблон(
				НСтр("ru = 'Объект: %1
							|ДопСведения: %2
							|ЗаполнятьКолонкуИзменение: %3
							|Описание ошибки: %4'"),
				Ссылка,
				ДопСведения,
				ЗаполнятьКолонкуИзменение,
				ОписаниеОшибки));
		
	КонецПопытки;
	
	// Записи с одинаковыми значениями перечисленных ниже измерений обрабатываются одновременно:
	// Ссылка, ДопСведения, ЗаполнятьКолонкуИзменение.
	Если ЕстьОшибки Тогда
		ОтметитьНеудачнуюПопытку(
			Ссылка, УчастникиКОбработке, ДопСведения, ЗаполнятьКолонкуИзменение, ОписаниеОшибки);
	Иначе
		Удалить(Ссылка, УчастникиКОбработке, ДопСведения, ЗаполнятьКолонкуИзменение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
