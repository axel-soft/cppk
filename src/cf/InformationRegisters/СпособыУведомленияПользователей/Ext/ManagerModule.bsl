#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует данные о способах уведомления всех пользователей.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Данные способов уведомлений.
//
Функция ПолучитьВсеСпособыУведомления() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СотрудникиПользователей.Пользователь КАК Пользователь,
		|	СотрудникиПользователей.Сотрудник КАК Сотрудник,
		|	СпособыУведомленияПользователей.СпособУведомления КАК СпособУведомления,
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		|	СпособыУведомленияПользователей.Использовать КАК Использовать,
		|	ЕСТЬNULL(КонтактнаяИнформацияСотрудников.Представление, """") КАК ДанныеСпособа,
		|	НЕ ЕСТЬNULL(ОсновныеСотрудники.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Основной
		|ПОМЕСТИТЬ ВсяКонтактнаяИнформацияПользователей
		|ИЗ
		|	РегистрСведений.СотрудникиПользователей КАК СотрудникиПользователей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК СправочникСотрудники
		|		ПО (СотрудникиПользователей.Сотрудник = СправочникСотрудники.Ссылка)
		|			И (НЕ СправочникСотрудники.ПометкаУдаления)
		|			И (СправочникСотрудники.Действует)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК СправочникПользователи
		|		ПО (СотрудникиПользователей.Пользователь = СправочникПользователи.Ссылка)
		|			И (НЕ СправочникПользователи.ПометкаУдаления)
		|			И (НЕ СправочникПользователи.Недействителен)
		|			И (НЕ СправочникПользователи.Служебный)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|		ПО (СпособыУведомленияПользователей.Пользователь = ЗНАЧЕНИЕ(Справочник.РабочиеГруппы.ВсеПользователи))
		|			И (СпособыУведомленияПользователей.Использовать)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники.КонтактнаяИнформация КАК КонтактнаяИнформацияСотрудников
		|		ПО (СправочникСотрудники.Ссылка = КонтактнаяИнформацияСотрудников.Ссылка)
		|			И (СпособыУведомленияПользователей.ВидКонтактнойИнформации = КонтактнаяИнформацияСотрудников.Вид)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСотрудники КАК ОсновныеСотрудники
		|		ПО (СправочникСотрудники.Владелец = ОсновныеСотрудники.ФизическоеЛицо)
		|			И (СправочникСотрудники.Ссылка = ОсновныеСотрудники.Сотрудник)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВсяКонтактнаяИнформацияПользователей.Пользователь КАК Пользователь,
		|	ВсяКонтактнаяИнформацияПользователей.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ АктуальныеЗаписи
		|ИЗ
		|	ВсяКонтактнаяИнформацияПользователей КАК ВсяКонтактнаяИнформацияПользователей
		|ГДЕ
		|	(НЕ ВсяКонтактнаяИнформацияПользователей.ДанныеСпособа = """"
		|			ИЛИ ВсяКонтактнаяИнформацияПользователей.Основной)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсяКонтактнаяИнформацияПользователей.Пользователь КАК Пользователь,
		|	ВсяКонтактнаяИнформацияПользователей.СпособУведомления КАК СпособУведомления,
		|	ВсяКонтактнаяИнформацияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		|	ВсяКонтактнаяИнформацияПользователей.ДанныеСпособа КАК ДанныеСпособа,
		|	ВсяКонтактнаяИнформацияПользователей.Использовать КАК Использовать,
		|	ВсяКонтактнаяИнформацияПользователей.Сотрудник КАК Сотрудник,
		|	ВсяКонтактнаяИнформацияПользователей.Основной КАК Основной
		|ПОМЕСТИТЬ КонтактнаяИнформацияПользователей
		|ИЗ
		|	ВсяКонтактнаяИнформацияПользователей КАК ВсяКонтактнаяИнформацияПользователей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктуальныеЗаписи КАК АктуальныеЗаписи
		|		ПО ВсяКонтактнаяИнформацияПользователей.Пользователь = АктуальныеЗаписи.Пользователь
		|			И ВсяКонтактнаяИнформацияПользователей.Сотрудник = АктуальныеЗаписи.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактнаяИнформацияПользователей.Пользователь КАК Пользователь,
		|	КонтактнаяИнформацияПользователей.Сотрудник КАК Сотрудник,
		|	КонтактнаяИнформацияПользователей.Сотрудник.Подразделение КАК Подразделение,
		|	КонтактнаяИнформацияПользователей.Сотрудник.Должность КАК Должность,
		|	КонтактнаяИнформацияПользователей.СпособУведомления КАК СпособУведомления,
		|	КонтактнаяИнформацияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		|	КонтактнаяИнформацияПользователей.ДанныеСпособа КАК ДанныеСпособа,
		|	ЕСТЬNULL(СпособыУведомленияПользователей.Использовать, ИСТИНА) КАК Использовать,
		|	ПРЕДСТАВЛЕНИЕ(КонтактнаяИнформацияПользователей.ДанныеСпособа) КАК Представление
		|ИЗ
		|	КонтактнаяИнформацияПользователей КАК КонтактнаяИнформацияПользователей
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|		ПО КонтактнаяИнформацияПользователей.Пользователь = СпособыУведомленияПользователей.Пользователь
		|			И КонтактнаяИнформацияПользователей.СпособУведомления = СпособыУведомленияПользователей.СпособУведомления
		|			И КонтактнаяИнформацияПользователей.ДанныеСпособа = СпособыУведомленияПользователей.ДанныеСпособа
		|			И (НЕ СпособыУведомленияПользователей.Использовать)
		|ГДЕ
		|	СпособыУведомленияПользователей.Использовать ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СпособыУведомленияПользователей.Пользователь,
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка),
		|	СпособыУведомленияПользователей.СпособУведомления,
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации,
		|	СпособыУведомленияПользователей.ДанныеСпособа,
		|	СпособыУведомленияПользователей.Использовать,
		|	ПРЕДСТАВЛЕНИЕ(СпособыУведомленияПользователей.ДанныеСпособа)
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.Пользователь ССЫЛКА Справочник.Пользователи
		|	И СпособыУведомленияПользователей.ВидКонтактнойИнформации = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка)
		|	И СпособыУведомленияПользователей.Использовать
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СпособыУведомленияПользователей.Пользователь,
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка),
		|	СпособыУведомленияПользователей.СпособУведомления,
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации,
		|	СпособыУведомленияПользователей.ДанныеСпособа,
		|	СпособыУведомленияПользователей.Использовать,
		|	ПРЕДСТАВЛЕНИЕ(СпособыУведомленияПользователей.ВидКонтактнойИнформации)
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.Пользователь = ЗНАЧЕНИЕ(Справочник.РабочиеГруппы.ВсеПользователи)
		|	И СпособыУведомленияПользователей.Использовать
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник";		
	СпособыУведомления = Запрос.Выполнить().Выгрузить();
	
	Возврат СпособыУведомления;
	
КонецФункции

// Возвращает данные способа уведомления пользователя.
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
// 
// Возвращаемое значение:
//  Массив - Данные способа уведомления.
//
Функция ПолучитьСпособУведомленияПользователя(Пользователь, СпособУведомления) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СотрудникиПользователей.Пользователь КАК Пользователь,
		|	СотрудникиПользователей.Сотрудник КАК Сотрудник,
		|	СпособыУведомленияПользователей.СпособУведомления КАК СпособУведомления,
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		|	СпособыУведомленияПользователей.Использовать КАК Использовать,
		|	ЕСТЬNULL(КонтактнаяИнформацияСотрудников.Представление, """") КАК ДанныеСпособа,
		|	НЕ ЕСТЬNULL(ОсновныеСотрудники.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Основной
		|ПОМЕСТИТЬ ВсяКонтактнаяИнформацияПользователей
		|ИЗ
		|	РегистрСведений.СотрудникиПользователей КАК СотрудникиПользователей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК СправочникСотрудники
		|		ПО (СотрудникиПользователей.Сотрудник = СправочникСотрудники.Ссылка)
		|			И (НЕ СправочникСотрудники.ПометкаУдаления)
		|			И (СправочникСотрудники.Действует)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК СправочникПользователи
		|		ПО (СотрудникиПользователей.Пользователь = СправочникПользователи.Ссылка)
		|			И СправочникПользователи.Ссылка = &Пользователь
		|			И (НЕ СправочникПользователи.ПометкаУдаления)
		|			И (НЕ СправочникПользователи.Недействителен)
		|			И (НЕ СправочникПользователи.Служебный)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|		ПО СпособыУведомленияПользователей.Пользователь = ЗНАЧЕНИЕ(Справочник.РабочиеГруппы.ВсеПользователи)
		|			И СпособыУведомленияПользователей.СпособУведомления = &СпособУведомления
		|			И СпособыУведомленияПользователей.Использовать
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники.КонтактнаяИнформация КАК КонтактнаяИнформацияСотрудников
		|		ПО (СправочникСотрудники.Ссылка = КонтактнаяИнформацияСотрудников.Ссылка)
		|			И (СпособыУведомленияПользователей.ВидКонтактнойИнформации = КонтактнаяИнформацияСотрудников.Вид)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСотрудники КАК ОсновныеСотрудники
		|		ПО (СправочникСотрудники.Владелец = ОсновныеСотрудники.ФизическоеЛицо)
		|			И (СправочникСотрудники.Ссылка = ОсновныеСотрудники.Сотрудник)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВсяКонтактнаяИнформацияПользователей.Пользователь КАК Пользователь,
		|	ВсяКонтактнаяИнформацияПользователей.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ АктуальныеЗаписи
		|ИЗ
		|	ВсяКонтактнаяИнформацияПользователей КАК ВсяКонтактнаяИнформацияПользователей
		|ГДЕ
		|	(НЕ ВсяКонтактнаяИнформацияПользователей.ДанныеСпособа = """"
		|		ИЛИ ВсяКонтактнаяИнформацияПользователей.Основной)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсяКонтактнаяИнформацияПользователей.Пользователь КАК Пользователь,
		|	ВсяКонтактнаяИнформацияПользователей.СпособУведомления КАК СпособУведомления,
		|	ВсяКонтактнаяИнформацияПользователей.ДанныеСпособа КАК ДанныеСпособа,
		|	ВсяКонтактнаяИнформацияПользователей.Сотрудник КАК Сотрудник,
		|	ВсяКонтактнаяИнформацияПользователей.Основной КАК Основной
		|ПОМЕСТИТЬ КонтактнаяИнформацияПользователей
		|ИЗ
		|	ВсяКонтактнаяИнформацияПользователей КАК ВсяКонтактнаяИнформацияПользователей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктуальныеЗаписи КАК АктуальныеЗаписи
		|		ПО ВсяКонтактнаяИнформацияПользователей.Пользователь = АктуальныеЗаписи.Пользователь
		|			И ВсяКонтактнаяИнформацияПользователей.Сотрудник = АктуальныеЗаписи.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактнаяИнформацияПользователей.ДанныеСпособа КАК ДанныеСпособа
		|ИЗ
		|	КонтактнаяИнформацияПользователей КАК КонтактнаяИнформацияПользователей
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|		ПО КонтактнаяИнформацияПользователей.Пользователь = СпособыУведомленияПользователей.Пользователь
		|			И КонтактнаяИнформацияПользователей.СпособУведомления = СпособыУведомленияПользователей.СпособУведомления
		|			И КонтактнаяИнформацияПользователей.ДанныеСпособа = СпособыУведомленияПользователей.ДанныеСпособа
		|			И НЕ СпособыУведомленияПользователей.Использовать
		|ГДЕ
		|	СпособыУведомленияПользователей.Использовать ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	СпособыУведомленияПользователей.ДанныеСпособа
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.Пользователь = &Пользователь
		|	И СпособыУведомленияПользователей.СпособУведомления = &СпособУведомления
		|	И СпособыУведомленияПользователей.ВидКонтактнойИнформации = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка)
		|	И СпособыУведомленияПользователей.Использовать";
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("СпособУведомления", СпособУведомления);
	
	СпособыУведомления = Новый Массив;
	СпособыУведомленияНРег = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если СпособУведомления = Перечисления.СпособыУведомления.ПоПочте Тогда
			Если РаботаСУведомлениямиКлиентСервер.ЭтоКорректныйСпособУведомленияПоПочте(Выборка.ДанныеСпособа)
				И СпособыУведомленияНРег.Найти(НРег(Выборка.ДанныеСпособа)) = Неопределено Тогда
				СпособыУведомления.Добавить(Выборка.ДанныеСпособа);
				СпособыУведомленияНРег.Добавить(НРег(Выборка.ДанныеСпособа));
			КонецЕсли;
		ИначеЕсли СпособУведомления = Перечисления.СпособыУведомления.ПоSMS Тогда
			Если РаботаСУведомлениямиКлиентСервер.ЭтоКорректныйСпособУведомленияПоSMS(Выборка.ДанныеСпособа) Тогда
				ДанныеСпособа = РаботаСУведомлениямиКлиентСервер.НормализоватьНомерТелефона(Выборка.ДанныеСпособа);
				СпособыУведомления.Добавить(ДанныеСпособа);
			КонецЕсли;
		Иначе
			СпособыУведомления.Добавить(Выборка.ДанныеСпособа);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СпособыУведомления;
	
КонецФункции

// Формирует список способов уведомлений всех пользователей.
//
// Возвращаемое значение:
//  СписокЗначений - Способы уведомления всех пользователей.
//
Функция ПолучитьСпособыУведомленияВсехПользователей() Экспорт
	
	СпособыУведомления = Новый СписокЗначений;
	
	// Все виды контактной информации.
	ВидыКонтактнойИнформация = 
		УправлениеКонтактнойИнформацией.ВидыКонтактнойИнформацииОбъекта(Справочники.Сотрудники.ПустаяСсылка());
	Для Каждого ВидКонтактнойИнформации Из ВидыКонтактнойИнформация Цикл
		Если ВидКонтактнойИнформации.Тип <> Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты
			И ВидКонтактнойИнформации.Тип <> Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			Продолжить;
		КонецЕсли;
		СпособыУведомления.Добавить(
			ВидКонтактнойИнформации.Ссылка,
			ВидКонтактнойИнформации.Представление);
	КонецЦикла;
	
	// Виды контактной информации, по которым уведомляем всех пользователей.
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.Пользователь = ЗНАЧЕНИЕ(Справочник.РабочиеГруппы.ВсеПользователи)
		|		И СпособыУведомленияПользователей.Использовать");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСпособа = СпособыУведомления.НайтиПоЗначению(Выборка.ВидКонтактнойИнформации);
		СтрокаСпособа.Пометка = Истина;
	КонецЦикла;
	
	СпособыУведомления.СортироватьПоПредставлению(НаправлениеСортировки.Возр);
	
	Возврат СпособыУведомления;
	
КонецФункции

// Формирует данные о способах уведомления пользователь.
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Данные способов уведомлений.
//
Функция ПолучитьСпособыУведомленияПользователя(Пользователь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СотрудникиПользователей.Пользователь КАК Пользователь,
		|	СотрудникиПользователей.Сотрудник КАК Сотрудник,
		|	СпособыУведомленияПользователей.СпособУведомления КАК СпособУведомления,
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		|	СпособыУведомленияПользователей.Использовать КАК Использовать,
		|	ЕСТЬNULL(КонтактнаяИнформацияСотрудников.Представление, """") КАК ДанныеСпособа,
		|	НЕ ЕСТЬNULL(ОсновныеСотрудники.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Основной
		|ПОМЕСТИТЬ ВсяКонтактнаяИнформацияПользователей
		|ИЗ
		|	РегистрСведений.СотрудникиПользователей КАК СотрудникиПользователей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК СправочникСотрудники
		|		ПО (СотрудникиПользователей.Сотрудник = СправочникСотрудники.Ссылка)
		|			И (НЕ СправочникСотрудники.ПометкаУдаления)
		|			И (СправочникСотрудники.Действует)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК СправочникПользователи
		|		ПО (СотрудникиПользователей.Пользователь = СправочникПользователи.Ссылка)
		|			И СправочникПользователи.Ссылка = &Пользователь
		|			И НЕ СправочникПользователи.ПометкаУдаления
		|			И НЕ СправочникПользователи.Недействителен
		|			И НЕ СправочникПользователи.Служебный
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|		ПО СпособыУведомленияПользователей.Пользователь = ЗНАЧЕНИЕ(Справочник.РабочиеГруппы.ВсеПользователи)
		|			И СпособыУведомленияПользователей.Использовать
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники.КонтактнаяИнформация КАК КонтактнаяИнформацияСотрудников
		|		ПО (СправочникСотрудники.Ссылка = КонтактнаяИнформацияСотрудников.Ссылка)
		|			И (СпособыУведомленияПользователей.ВидКонтактнойИнформации = КонтактнаяИнформацияСотрудников.Вид)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСотрудники КАК ОсновныеСотрудники
		|		ПО (СправочникСотрудники.Владелец = ОсновныеСотрудники.ФизическоеЛицо)
		|			И (СправочникСотрудники.Ссылка = ОсновныеСотрудники.Сотрудник)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВсяКонтактнаяИнформацияПользователей.Пользователь КАК Пользователь,
		|	ВсяКонтактнаяИнформацияПользователей.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ АктуальныеЗаписи
		|ИЗ
		|	ВсяКонтактнаяИнформацияПользователей КАК ВсяКонтактнаяИнформацияПользователей
		|ГДЕ
		|	(НЕ ВсяКонтактнаяИнформацияПользователей.ДанныеСпособа = """"
		|		ИЛИ ВсяКонтактнаяИнформацияПользователей.Основной)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсяКонтактнаяИнформацияПользователей.Пользователь КАК Пользователь,
		|	ВсяКонтактнаяИнформацияПользователей.СпособУведомления КАК СпособУведомления,
		|	ВсяКонтактнаяИнформацияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		|	ВсяКонтактнаяИнформацияПользователей.ДанныеСпособа КАК ДанныеСпособа,
		|	ВсяКонтактнаяИнформацияПользователей.Использовать КАК Использовать,
		|	ВсяКонтактнаяИнформацияПользователей.Сотрудник КАК Сотрудник,
		|	ВсяКонтактнаяИнформацияПользователей.Основной КАК Основной
		|ПОМЕСТИТЬ КонтактнаяИнформацияПользователей
		|ИЗ
		|	ВсяКонтактнаяИнформацияПользователей КАК ВсяКонтактнаяИнформацияПользователей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктуальныеЗаписи КАК АктуальныеЗаписи
		|		ПО ВсяКонтактнаяИнформацияПользователей.Пользователь = АктуальныеЗаписи.Пользователь
		|			И ВсяКонтактнаяИнформацияПользователей.Сотрудник = АктуальныеЗаписи.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактнаяИнформацияПользователей.СпособУведомления КАК СпособУведомления,
		|	КонтактнаяИнформацияПользователей.Сотрудник КАК Сотрудник,
		|	КонтактнаяИнформацияПользователей.Сотрудник.Подразделение КАК Подразделение,
		|	КонтактнаяИнформацияПользователей.Сотрудник.Должность КАК Должность,
		|	КонтактнаяИнформацияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		|	КонтактнаяИнформацияПользователей.ДанныеСпособа КАК ДанныеСпособа,
		|	ЕСТЬNULL(СпособыУведомленияПользователей.Использовать, ИСТИНА) КАК Использовать,
		|	ПРЕДСТАВЛЕНИЕ(КонтактнаяИнформацияПользователей.ДанныеСпособа) КАК Представление
		|ИЗ
		|	КонтактнаяИнформацияПользователей КАК КонтактнаяИнформацияПользователей
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|		ПО КонтактнаяИнформацияПользователей.Пользователь = СпособыУведомленияПользователей.Пользователь
		|			И КонтактнаяИнформацияПользователей.СпособУведомления = СпособыУведомленияПользователей.СпособУведомления
		|			И КонтактнаяИнформацияПользователей.ДанныеСпособа = СпособыУведомленияПользователей.ДанныеСпособа
		|			И НЕ СпособыУведомленияПользователей.Использовать
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СпособыУведомленияПользователей.СпособУведомления,
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка),
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации,
		|	СпособыУведомленияПользователей.ДанныеСпособа,
		|	СпособыУведомленияПользователей.Использовать,
		|	ПРЕДСТАВЛЕНИЕ(СпособыУведомленияПользователей.ДанныеСпособа)
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.Пользователь = &Пользователь
		|		И СпособыУведомленияПользователей.ВидКонтактнойИнформации = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка)
		|		И СпособыУведомленияПользователей.Использовать
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник";
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	СпособыУведомления = Запрос.Выполнить().Выгрузить();
	
	Возврат СпособыУведомления;
	
КонецФункции

// Удаляет способ уведомления пользователя.
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
//  СпособУведомления - ПеречислениеСсылка.СпособыУведомления - Способ уведомления.
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации - Вид контактной информации.
//  ДанныеСпособа - Строка - Данные способа.
//
Процедура УдалитьСпособУведомленияПользователя(
		Пользователь, СпособУведомления, ВидКонтактнойИнформации, ДанныеСпособа) Экспорт
	
	Если ЗначениеЗаполнено(ВидКонтактнойИнформации) Тогда
		// Если указан вид контактной информации - значит нужно создать отказ от способа уведомления по виду контактной информации.
		УстановитьСпособУведомления(Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации, Ложь);
	Иначе
		// Если не указан вид контактной информации - значит нужно удалить способ уведомления по произвольным данным.
		УдалитьСпособУведомления(Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации);
	КонецЕсли;
	
КонецПроцедуры

// Удаляет способ уведомления всех пользователей.
//
// Параметры:
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации - Вид контактной информации.
//
Процедура УдалитьСпособУведомленияВсехПользователей(ВидКонтактнойИнформации) Экспорт
	
	Пользователь = Справочники.РабочиеГруппы.ВсеПользователи;
	Если ВидКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
		СпособУведомления = Перечисления.СпособыУведомления.ПоПочте;
	ИначеЕсли ВидКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		СпособУведомления = Перечисления.СпособыУведомления.ПоSMS;
	Иначе
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'Тип контактной информации %1 не подходит для уведомления всех пользователей.'"), 
			ВидКонтактнойИнформации.Тип);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	ДанныеСпособа = "";
	
	УдалитьСпособУведомления(Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации);
	
КонецПроцедуры

// Устанавливает способ уведомления пользователя.
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
//  СпособУведомления - ПеречислениеСсылка.СпособыУведомления - Способ уведомления.
//  ВидКонтактнойИнформации	 - СправочникСсылка.ВидыКонтактнойИнформации - Вид контактной информации.
//  ДанныеСпособа - Строка - Данные способа.
//
Процедура УстановитьСпособУведомленияПользователя(
		Пользователь, СпособУведомления, ВидКонтактнойИнформации, ДанныеСпособа) Экспорт
	
	Если ЗначениеЗаполнено(ВидКонтактнойИнформации) Тогда
		// Если указан вид контактной информации - значит нужно удалить отказ от способа уведомления по виду контактной информации.
		УдалитьСпособУведомления(Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации);
	Иначе
		// Если не указан вид контактной информации - значит нужно добавить способ уведомления по произвольным данным.
		УстановитьСпособУведомления(
			Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации, Истина);
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает способ уведомления всех пользователей.
//
// Параметры:
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации - Вид контактной информации.
//
Процедура УстановитьСпособУведомленияВсехПользователей(ВидКонтактнойИнформации) Экспорт
	
	Пользователь = Справочники.РабочиеГруппы.ВсеПользователи;
	Если ВидКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
		СпособУведомления = Перечисления.СпособыУведомления.ПоПочте;
	ИначеЕсли ВидКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		СпособУведомления = Перечисления.СпособыУведомления.ПоSMS;
	Иначе
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'Тип контактной информации %1 не подходит для уведомления всех пользователей.'"), 
			ВидКонтактнойИнформации.Тип);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	ДанныеСпособа = "";
	
	УстановитьСпособУведомления(
		Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации, Истина);
	
КонецПроцедуры

// Устанавливает способы уведомлений всех пользователей.
//
// Параметры:
//  СпособыУведомления - СписокЗначений - Способы уведомления всех пользователей.
//
Процедура УстановитьСпособыУведомленияВсехПользователей(СпособыУведомления) Экспорт
	
	НачатьТранзакцию();
	Попытка
		
		Для Каждого СпособУведомления Из СпособыУведомления Цикл
			Если СпособУведомления.Пометка Тогда
				УстановитьСпособУведомленияВсехПользователей(СпособУведомления.Значение);
			Иначе
				УдалитьСпособУведомленияВсехПользователей(СпособУведомления.Значение);
			КонецЕсли;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Найти пользователя по данным способа уведоммления.
// 
// Параметры:
//  ДанныеСпособа - Строка.
//  СпособУведомления - ПеречислениеСсылка.СпособыУведомления.
// 
// Возвращаемое значение:
//  СправочникСсылка.Пользователи - Найденный пользователь.
//
Функция НайтиПоДаннымСпособаУведомлений(ДанныеСпособа, СпособУведомления) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НайденныйПользователь = Справочники.Пользователи.ПустаяСсылка();
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СпособыУведомленияПользователей.Пользователь КАК Пользователь
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.ДанныеСпособа = &ДанныеСпособа
		|	И СпособыУведомленияПользователей.СпособУведомления = &СпособУведомления");
	
	Запрос.УстановитьПараметр("ДанныеСпособа", ДанныеСпособа);
	Запрос.УстановитьПараметр("СпособУведомления", СпособУведомления);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НайденныйПользователь = Выборка.Пользователь;
		
	КонецЦикла;
	
	Возврат НайденныйПользователь;
	
КонецФункции

// Определяет, есть ли способ уведомления у любого пользователя.
// 
// Параметры:
//  СпособУведомления - ПеречислениеСсылка.СпособыУведомления.
// 
// Возвращаемое значение:
//  Булево - Есть ли способ уведомления у любого пользователя.
//
Функция ИспользуетсяСпособУведомления(СпособУведомления) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СпособыУведомленияПользователей.Пользователь
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.СпособУведомления = &СпособУведомления");
	
	Запрос.УстановитьПараметр("СпособУведомления", СпособУведомления);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ЕстьСпособУведомления = Не РезультатЗапроса.Пустой();
	
	Возврат ЕстьСпособУведомления;
	
КонецФункции

// Удаляет способ уведомления у всех пользователей.
// 
// Параметры:
//  СпособУведомления - ПеречислениеСсылка.СпособыУведомления.
//
Процедура ОчиститьНастройкиОтправки(СпособУведомления) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СпособыУведомленияПользователей.Пользователь,
		|	СпособыУведомленияПользователей.СпособУведомления,
		|	СпособыУведомленияПользователей.ДанныеСпособа,
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.СпособУведомления = &СпособУведомления";
	
	Запрос.УстановитьПараметр("СпособУведомления", СпособУведомления);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		УдалитьСпособУведомления(
			ВыборкаДетальныеЗаписи.Пользователь,
			ВыборкаДетальныеЗаписи.СпособУведомления,
			ВыборкаДетальныеЗаписи.ДанныеСпособа,
			ВыборкаДетальныеЗаписи.ВидКонтактнойИнформации);
		
	КонецЦикла;
	
КонецПроцедуры

// Удаляет способ уведомления у пользователя.
// 
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи.
//  СпособУведомления - ПеречислениеСсылка.СпособыУведомления.
//
Процедура ОчиститьНастройкиОтправкиПользователя(Пользователь, СпособУведомления) Экспорт
	
	Если Пользователь = Пользователи.ТекущийПользователь() Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СпособыУведомленияПользователей.Пользователь,
		|	СпособыУведомленияПользователей.СпособУведомления,
		|	СпособыУведомленияПользователей.ДанныеСпособа,
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.Пользователь = &Пользователь
		|	И СпособыУведомленияПользователей.СпособУведомления = &СпособУведомления";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("СпособУведомления", СпособУведомления);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		УдалитьСпособУведомления(
			ВыборкаДетальныеЗаписи.Пользователь,
			ВыборкаДетальныеЗаписи.СпособУведомления,
			ВыборкаДетальныеЗаписи.ДанныеСпособа,
			ВыборкаДетальныеЗаписи.ВидКонтактнойИнформации);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Удаляет способ уведомления.
//
// Параметры:
//  Пользователь - СправочникСсылка.РабочиеГруппы, СправочникСсылка.Пользователи - Пользователь.
//  СпособУведомления - ПеречислениеСсылка.СпособыУведомления - Способ уведомления.
//  ДанныеСпособа - Строка - Данные способа уведомления.
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации - Вид контактной информации.
//
Процедура УдалитьСпособУведомления(Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.Пользователь = Пользователь;
	Запись.СпособУведомления = СпособУведомления;
	Запись.ДанныеСпособа = ДанныеСпособа;
	Запись.ВидКонтактнойИнформации = ВидКонтактнойИнформации;
	Запись.Удалить();
	
КонецПроцедуры

// Устанавливает способ уведомления.
//
// Параметры:
//  Пользователь - СправочникСсылка.РабочиеГруппы, СправочникСсылка.Пользователи - Пользователь.
//  СпособУведомления - ПеречислениеСсылка.СпособыУведомления - Способ уведомления.
//  ДанныеСпособа - Строка - Данные способа уведомления.
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации - Вид контактной информации.
//  Использовать - Булево - Использовать.
//
Процедура УстановитьСпособУведомления(
		Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации, Использовать)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.Пользователь = Пользователь;
	Запись.СпособУведомления = СпособУведомления;
	Запись.ДанныеСпособа = ДанныеСпособа;
	Запись.ВидКонтактнойИнформации = ВидКонтактнойИнформации;
	Запись.Использовать = Использовать;
	Запись.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли