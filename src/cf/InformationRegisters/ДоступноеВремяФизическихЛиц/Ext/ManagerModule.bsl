#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает таблицу доступности.
//
Функция ПолучитьТаблицуДоступности(МассивФизЛиц) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаДоступности = Новый ТаблицаЗначений;
	ТаблицаДоступности.Колонки.Добавить("ФизическоеЛицо");
	ТаблицаДоступности.Колонки.Добавить("ДеньНедели");
	ТаблицаДоступности.Колонки.Добавить("ВремяНачала");
	ТаблицаДоступности.Колонки.Добавить("ВремяОкончания");
	ТаблицаДоступности.Колонки.Добавить("Занят");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоступноеВремяФизическихЛиц.ФизическоеЛицо,
		|	ДоступноеВремяФизическихЛиц.ДеньНедели,
		|	ДоступноеВремяФизическихЛиц.ВремяНачала,
		|	ДоступноеВремяФизическихЛиц.ВремяОкончания,
		|	ЛОЖЬ КАК Занят,
		|	1 КАК Приоритет
		|ИЗ
		|	РегистрСведений.ДоступноеВремяФизическихЛиц КАК ДоступноеВремяФизическихЛиц
		|ГДЕ
		|	ДоступноеВремяФизическихЛиц.ФизическоеЛицо В (&МассивФизЛиц)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОсновныеСотрудники.ФизическоеЛицо,
		|	ДоступноеВремяСотрудников.ДеньНедели,
		|	ДоступноеВремяСотрудников.ВремяНачала,
		|	ДоступноеВремяСотрудников.ВремяОкончания,
		|	ЛОЖЬ,
		|	2
		|ИЗ
		|	РегистрСведений.ДоступноеВремяСотрудников КАК ДоступноеВремяСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСотрудники КАК ОсновныеСотрудники
		|		ПО ДоступноеВремяСотрудников.Сотрудник = ОсновныеСотрудники.Сотрудник
		|ГДЕ
		|	ОсновныеСотрудники.ФизическоеЛицо В (&МассивФизЛиц)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";
	Запрос.УстановитьПараметр("МассивФизЛиц", МассивФизЛиц);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТаблицаДоступноеВремяФизЛиц = ТаблицаДоступности.СкопироватьКолонки();
	
	ПриоритетыФизЛиц = Новый Соответствие();
	
	Пока Выборка.Следующий() Цикл
		
		ПриоритетФизЛица = ПриоритетыФизЛиц[Выборка.ФизическоеЛицо];
		Если ПриоритетФизЛица = Неопределено Тогда
			ПриоритетыФизЛиц[Выборка.ФизическоеЛицо] = Выборка.Приоритет;
			ПриоритетФизЛица = Выборка.Приоритет;
		КонецЕсли;
		
		Если ПриоритетФизЛица <> Выборка.Приоритет Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ТаблицаДоступноеВремяФизЛиц.Добавить(), Выборка);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиРабочегоКалендаря.ФизическоеЛицо,
		|	НастройкиРабочегоКалендаря.Значение КАК Доступность,
		|	1 КАК Приоритет
		|ИЗ
		|	РегистрСведений.НастройкиРабочегоКалендаря КАК НастройкиРабочегоКалендаря
		|ГДЕ
		|	НастройкиРабочегоКалендаря.ФизическоеЛицо В (&МассивФизЛиц)
		|	И НастройкиРабочегоКалендаря.Настройка = ЗНАЧЕНИЕ(Перечисление.НастройкиРабочегоКалендаря.Доступность)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОсновныеСотрудники.ФизическоеЛицо,
		|	НастройкиРабочегоКалендаряСотрудника.Значение,
		|	2
		|ИЗ
		|	РегистрСведений.НастройкиРабочегоКалендаряСотрудника КАК НастройкиРабочегоКалендаряСотрудника
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСотрудники КАК ОсновныеСотрудники
		|		ПО НастройкиРабочегоКалендаряСотрудника.Сотрудник = ОсновныеСотрудники.Сотрудник
		|ГДЕ
		|	ОсновныеСотрудники.ФизическоеЛицо В (&МассивФизЛиц)
		|	И НастройкиРабочегоКалендаряСотрудника.Настройка = ЗНАЧЕНИЕ(Перечисление.НастройкиРабочегоКалендаря.Доступность)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";
	Запрос.УстановитьПараметр("МассивФизЛиц", МассивФизЛиц);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТаблицаНастройкиРабочегоКалендаря = Новый ТаблицаЗначений();
	ТаблицаНастройкиРабочегоКалендаря.Колонки.Добавить("ФизическоеЛицо");
	ТаблицаНастройкиРабочегоКалендаря.Колонки.Добавить("Доступность");
	
	ПриоритетыФизЛиц = Новый Соответствие();
	
	Пока Выборка.Следующий() Цикл
		
		ПриоритетФизЛица = ПриоритетыФизЛиц[Выборка.ФизическоеЛицо];
		Если ПриоритетФизЛица = Неопределено Тогда
			ПриоритетыФизЛиц[Выборка.ФизическоеЛицо] = Выборка.Приоритет;
			ПриоритетФизЛица = Выборка.Приоритет;
		КонецЕсли;
		
		Если ПриоритетФизЛица <> Выборка.Приоритет Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ТаблицаНастройкиРабочегоКалендаря.Добавить(), Выборка);
		
	КонецЦикла;
	
	Для Каждого ФизическоеЛицо Из МассивФизЛиц Цикл
		
		ДоступностьФизЛица = Неопределено;
		
		НастройкаРабочегоКалендаря =
			ТаблицаНастройкиРабочегоКалендаря.Найти(ФизическоеЛицо, "ФизическоеЛицо");
		Если НастройкаРабочегоКалендаря <> Неопределено Тогда
			ДоступностьФизЛица = НастройкаРабочегоКалендаря.Доступность;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДоступностьФизЛица) Тогда
			ДоступностьФизЛица = Перечисления.ДоступностьФизическихЛиц.ДоступенВсегда;
		КонецЕсли;
		
		Если ДоступностьФизЛица = Перечисления.ДоступностьФизическихЛиц.ДоступенВсегда Тогда
			
			ЗаполнитьТаблицуДоступностиПоУмолчанию(
				ТаблицаДоступности, ФизическоеЛицо, Перечисления.СостоянияЗанятости.Доступен);
			
		ИначеЕсли ДоступностьФизЛица = Перечисления.ДоступностьФизическихЛиц.ЗанятВсегда Тогда
			
			ЗаполнитьТаблицуДоступностиПоУмолчанию(
				ТаблицаДоступности, ФизическоеЛицо, Перечисления.СостоянияЗанятости.Занят);
			
		ИначеЕсли ДоступностьФизЛица = Перечисления.ДоступностьФизическихЛиц.ДоступенПоРасписанию Тогда
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("ФизическоеЛицо", ФизическоеЛицо);
			НайденныеСтроки = ТаблицаДоступноеВремяФизЛиц.НайтиСтроки(ПараметрыОтбора);
			
			ПользовательФизЛица = ПользователиДокументооборот.ПользовательФизЛица(ФизическоеЛицо);
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				НачалоОтсчета = НачалоДня(ТекущаяДатаСеанса());
				ВремяНачала = НачалоОтсчета
					+ (НайденнаяСтрока.ВремяНачала - НачалоДня(НайденнаяСтрока.ВремяНачала));
				ВремяОкончания = НачалоОтсчета
					+ (НайденнаяСтрока.ВремяОкончания - НачалоДня(НайденнаяСтрока.ВремяОкончания));
				
				ИсходныйДеньНачала = День(ВремяНачала);
				ИсходныйДеньОкончания = День(ВремяОкончания);
				
				Если ЗначениеЗаполнено(ПользовательФизЛица) Тогда
				
					ВремяНачала = 
						РаботаСЧасовымиПоясами.ПривестиКМестномуВремени(
							РаботаСЧасовымиПоясами.ПривестиМестноеВремяПользователяКВремениСеанса(
								ВремяНачала,
								ПользовательФизЛица));
					ВремяОкончания = 
						РаботаСЧасовымиПоясами.ПривестиКМестномуВремени(
							РаботаСЧасовымиПоясами.ПривестиМестноеВремяПользователяКВремениСеанса(
								ВремяОкончания,
								ПользовательФизЛица));
								
				КонецЕсли;
				
				СмещенныйДеньНачала = День(ВремяНачала);
				СмещенныйДеньОкончания = День(ВремяОкончания);
				
				Если ИсходныйДеньНачала <> СмещенныйДеньНачала Тогда
					
					НоваяСтрока = ТаблицаДоступности.Добавить();
					НоваяСтрока.ФизическоеЛицо = ФизическоеЛицо;
					Если НайденнаяСтрока.ДеньНедели = 1 Тогда
						НоваяСтрока.ДеньНедели = 7
					Иначе
						НоваяСтрока.ДеньНедели = НайденнаяСтрока.ДеньНедели - 1;
					КонецЕсли;
					НоваяСтрока.ВремяНачала = Дата(1, 1, 1)
						+ (ВремяНачала - НачалоДня(ВремяНачала));
					НоваяСтрока.ВремяОкончания = Дата(1, 1, 1)
						+ (КонецДня(ВремяНачала) - НачалоДня(ВремяНачала));
					
					Если НайденнаяСтрока.Занят Тогда
						НоваяСтрока.Занят = Перечисления.СостоянияЗанятости.Занят;
					Иначе
						НоваяСтрока.Занят = Перечисления.СостоянияЗанятости.Доступен;
					КонецЕсли;
					
					ВремяНачала = НачалоДня(ВремяНачала);
					
				КонецЕсли;
				
				Если ИсходныйДеньОкончания <> СмещенныйДеньОкончания Тогда
					
					НоваяСтрока = ТаблицаДоступности.Добавить();
					НоваяСтрока.ФизическоеЛицо = ФизическоеЛицо;
					Если НайденнаяСтрока.ДеньНедели = 7 Тогда
						НоваяСтрока.ДеньНедели = 1
					Иначе
						НоваяСтрока.ДеньНедели = НайденнаяСтрока.ДеньНедели + 1;
					КонецЕсли;
					НоваяСтрока.ВремяНачала = Дата(1, 1, 1)
						+ (НачалоДня(ВремяОкончания) - НачалоДня(ВремяОкончания));
					НоваяСтрока.ВремяОкончания = Дата(1, 1, 1)
						+ (ВремяОкончания - НачалоДня(ВремяОкончания));
					
					Если НайденнаяСтрока.Занят Тогда
						НоваяСтрока.Занят = Перечисления.СостоянияЗанятости.Занят;
					Иначе
						НоваяСтрока.Занят = Перечисления.СостоянияЗанятости.Доступен;
					КонецЕсли;
					
					ВремяОкончания = НачалоДня(ВремяОкончания);
					
				КонецЕсли;
				
				ВремяНачала = Дата(1, 1, 1)
					+ (ВремяНачала - НачалоДня(ВремяНачала));
				ВремяОкончания = Дата(1, 1, 1)
					+ (ВремяОкончания - НачалоДня(ВремяОкончания));
				
				НоваяСтрока = ТаблицаДоступности.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяСтрока);
				
				НоваяСтрока.ВремяНачала = ВремяНачала;
				НоваяСтрока.ВремяОкончания = ВремяОкончания;
				
				Если НайденнаяСтрока.Занят Тогда
					НоваяСтрока.Занят = Перечисления.СостоянияЗанятости.Занят;
				Иначе
					НоваяСтрока.Занят = Перечисления.СостоянияЗанятости.Доступен;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаДоступности;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьТаблицуДоступностиПоУмолчанию(ТаблицаДоступности, ФизическоеЛицо, Занят)
	
	ВремяНачала = Дата(1, 1, 1);
	ВремяОкончания = КонецДня(ВремяНачала) + 1;
	
	Для ДеньНедели = 1 По 7 Цикл
		
		НоваяСтрока = ТаблицаДоступности.Добавить();
		НоваяСтрока.ФизическоеЛицо = ФизическоеЛицо;
		НоваяСтрока.ДеньНедели = ДеньНедели;
		НоваяСтрока.ВремяНачала = ВремяНачала;
		НоваяСтрока.ВремяОкончания = ВремяОкончания;
		НоваяСтрока.Занят = Занят;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
