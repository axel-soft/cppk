#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ИзменяемыеЗаписи;

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить(
		"ПараметрыОбновленияДанныхКэширующихОбъектов",
		РегистрыСведений.ИсполнителиРолей.ЗначенияПараметровОбновленияДанныхКэширующихОбъектов(ЭтотОбъект));
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Обновление записей в регистре ИсполнителиРолейИДелегаты
	Исполнитель = Неопределено;
	Если Отбор.Найти("Исполнитель") <> Неопределено
		И Отбор.Исполнитель.Использование Тогда
		
		Исполнитель = Отбор.Исполнитель.Значение;
	КонецЕсли;
	
	РольИсполнителя = Неопределено;
	Если Отбор.Найти("РольИсполнителя") <> Неопределено
		И Отбор.РольИсполнителя.Использование Тогда
		
		РольИсполнителя = Отбор.РольИсполнителя.Значение;
	КонецЕсли;
	
	СотрудникиДляОбновленияЗамещающих = Новый Массив;

	РегистрыСведений.ИсполнителиРолейИДелегаты.ОбновитьЗаписиПоИсполнителюРоли(
		Исполнитель, РольИсполнителя);
		
	// Обновление контейнеров и данных адресной книги.
	РолиДляОбновленияКонтейнеров =
		ДополнительныеСвойства.ПараметрыОбновленияДанныхКэширующихОбъектов.РолиДляОбновленияКонтейнеров;
			
	// Замещающие и помощники.
	СтарыеСоставыКонтейнеров =
		РегистрыСведений.СотрудникиВКонтейнерах.СотрудникиВКонтейнерах(РолиДляОбновленияКонтейнеров);
	
	РегистрыСведений.ИсполнителиРолей.ОбновитьДанныеКэширующихОбъектов(
		ЭтотОбъект, ДополнительныеСвойства.ПараметрыОбновленияДанныхКэширующихОбъектов);
	
	НовыеСоставыКонтейнеров =
		РегистрыСведений.СотрудникиВКонтейнерах.СотрудникиВКонтейнерах(РолиДляОбновленияКонтейнеров);
	
	Для Каждого КлючИЗначение Из СтарыеСоставыКонтейнеров Цикл
		Роль = КлючИЗначение.Ключ;
		СтарыйСостав = КлючИЗначение.Значение;
		НовыйСостав = НовыеСоставыКонтейнеров[Роль];
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СотрудникиДляОбновленияЗамещающих,
			ОбщегоНазначенияКлиентСервер.РазностьМассивов(НовыйСостав, СтарыйСостав), Истина);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СотрудникиДляОбновленияЗамещающих,
			ОбщегоНазначенияКлиентСервер.РазностьМассивов(СтарыйСостав, НовыйСостав), Истина);
	КонецЦикла;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Ссылка
		|ИЗ
		|	Справочник.ЗамещающиеИПомощники КАК ЗамещающиеИПомощники
		|ГДЕ
		|	Сотрудник В (&СотрудникиДляОбновленияЗамещающих)
		|	И Действует");
	Запрос.УстановитьПараметр("СотрудникиДляОбновленияЗамещающих", СотрудникиДляОбновленияЗамещающих);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не ОбработкаОчередиЗаданийСервер.ДобавитьЗаданиеОбновитьДанныеЗадачПоЗамещению(Выборка.Ссылка) Тогда
			Справочники.ЗамещающиеИПомощники.ОбновитьДанныеЗадачПоЗамещению(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	// Обрабатываем изменившиеся роли.
	РаботаСВнешнимПодписанием.ИсполнителиРолейПриЗаписи(
		СтарыеСоставыКонтейнеров,
		НовыеСоставыКонтейнеров,
		Отказ);
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли