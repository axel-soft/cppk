
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Очередь.Параметры.УстановитьЗначениеПараметра(
		"СмещениеВремени", ТекущаяДатаСеанса() - ТекущаяУниверсальнаяДата());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КлючПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Очередь.Отбор);
	
	Если Не ЗначениеЗаполнено(Ключ) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Очередь.Отбор, , "ОтборИдентификаторКлюча");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Очередь.Отбор, , "ОтборОбъект");
	ИначеЕсли ЭтоНавигационнаяСсылка(Ключ) Тогда
		//e1cib/data/Справочник.ВнутренниеДокументы?ref=80ca0050569f612611ee69e7840348df
		ОписаниеКлюча = ОписаниеКлючаПоНавигационнойСсылке(Ключ);
		
		Если ТипЗнч(ОписаниеКлюча) = Тип("Структура") Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				Очередь.Отбор,
				"ИдентификаторКлюча",
				ОписаниеКлюча.ИдентификаторКлюча,,
				"ОтборИдентификаторКлюча",,
				РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				Очередь.Отбор,
				"Объект",
				ОписаниеКлюча.Объект,,
				"ОтборОбъект",,
				РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
		КонецЕсли;
	ИначеЕсли СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(Ключ) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Очередь.Отбор,
			"ИдентификаторКлюча",
			Новый УникальныйИдентификатор(Ключ),,
			"ОтборИдентификаторКлюча",,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КлючОчистка(Элемент, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Очередь.Отбор, , "ОтборИдентификаторКлюча");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Очередь.Отбор, , "ОтборОбъект");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОчередь

&НаСервереБезКонтекста
Процедура ОчередьПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	ЗапросыДанных = Новый Массив;
	ЗапросыОчереди = Новый Массив;
	
	Ключи = Новый Массив;
	Наборы = Новый Соответствие;
	Запрос = Новый Запрос();
	
	Данные = Новый Массив;
	
	Для Каждого Строка Из Строки Цикл
		ТекущиеДанные = Строка.Значение.Данные;
		Если ТекущиеДанные.ВидКлюча = Перечисления.ВидыКлючейОтметокВремени.КлючНабораИдентификаторНабораЗаписей
				И ЗначениеЗаполнено(ТекущиеДанные.ИдентификаторКлюча) Тогда
			
			Данные.Добавить(ТекущиеДанные);
			
			Если ТекущиеДанные.Удаление Тогда
				Если Наборы[ТекущиеДанные.Окно] = Неопределено Тогда
					ТекстОчереди = 
						"ВЫБРАТЬ
						|	Т.ИдентификаторКлюча КАК _ИдентификаторКлюча,
						|	Т.ТипКлюча КАК _ТипКлюча,
						|	Т.Объект КАК _Объект,
						|	ИСТИНА КАК _Удаление,
						|	Т.Отметка КАК Отметка,
						|	Т.ЗначенияКлюча КАК ЗначенияКлюча
						|ИЗ
						|	#ОтметкиВремениОчередь КАК Т
						|ГДЕ
						|	Т.ВидКлюча = ЗНАЧЕНИЕ(Перечисление.ВидыКлючейОтметокВремени.КлючНабораИдентификаторНабораЗаписей)
						|		И Т.Удаление = ИСТИНА
						|		И Т.ТипКлюча = НЕОПРЕДЕЛЕНО
						|		И Т.ИдентификаторКлюча В (&Ключи)";
					ТекстОчереди = СтрЗаменить(
						ТекстОчереди,
						"#ОтметкиВремениОчередь",
						СтрШаблон("РегистрСведений.ОтметкиВремениОчередь%1", ТекущиеДанные.Окно));
					
					ЗапросыОчереди.Добавить(ТекстОчереди);
					Наборы.Вставить(ТекущиеДанные.Окно, ЗапросыОчереди.ВГраница());
				КонецЕсли;
			Иначе
				Если Наборы[ТекущиеДанные.Объект] = Неопределено Тогда
					Метаданное = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(ТекущиеДанные.Объект, Ложь);
					Если Метаданное = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					
					ИменаПолей = Новый Массив;
					Счетчик = Формат(ЗапросыДанных.ВГраница() + 1, "ЧГ=0");
					
					Набор = РегистрыСведений[Метаданное.Имя].СоздатьНаборЗаписей();
					Для Каждого ПолеОтбора Из Набор.Отбор Цикл
						ИменаПолей.Добавить(ПолеОтбора.Имя);
						ПолеОтбора.Использование = Истина;
					КонецЦикла;
					
					ТекстДанных =
						"ВЫБРАТЬ
						|	Таблица.ИдентификаторОтметкиВремени КАК _ИдентификаторКлюча,
						|	НЕОПРЕДЕЛЕНО КАК _ТипКлюча,
						|	&Объект КАК _Объект,
						|	ЛОЖЬ КАК _Удаление,
						|	&ИменаПолей
						|ИЗ
						|	#Таблица КАК Таблица
						|ГДЕ
						|	Таблица.ИдентификаторОтметкиВремени В(&Ключи)";
					ТекстДанных = СтрЗаменить(ТекстДанных, "#Таблица", Метаданное.ПолноеИмя());
					ТекстДанных = СтрЗаменить(ТекстДанных, "&ИменаПолей", СтрСоединить(ИменаПолей, ", "));
					ТекстДанных = СтрЗаменить(ТекстДанных, "&Объект", СтрШаблон("&Объект%1", Счетчик));
					
					ЗапросыДанных.Добавить(ТекстДанных);
					
					Запрос.УстановитьПараметр("Объект" + Счетчик, ТекущиеДанные.Объект);
					
					Наборы.Вставить(ТекущиеДанные.Объект, Набор);
					
					ИменаПолей.Очистить();
				КонецЕсли;
			КонецЕсли;
			
			Ключи.Добавить(ТекущиеДанные.ИдентификаторКлюча);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Ключи.Количество() Тогда
		
		Если ЗапросыОчереди.Количество() Тогда
			ЗапросыДанных.Добавить(СтрСоединить(ЗапросыОчереди, Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС));
		КонецЕсли;
		
		Запрос.Текст = СтрСоединить(ЗапросыДанных, ОбщегоНазначения.РазделительПакетаЗапросов());
		
		ЗапросыОчереди.Очистить();
		ЗапросыДанных.Очистить();
		
		Запрос.УстановитьПараметр("Ключи", Ключи);
		
		Пакет = Запрос.ВыполнитьПакет();
		
		Для Каждого Результат Из Пакет Цикл
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				Для Каждого ТекущиеДанные Из Данные Цикл
					Если ТекущиеДанные.ИдентификаторКлюча = Выборка._ИдентификаторКлюча
							И ТекущиеДанные.ТипКлюча = Выборка._ТипКлюча
							И ТекущиеДанные.Объект = Выборка._Объект
							И ТекущиеДанные.Удаление = Выборка._Удаление Тогда
						
						Если ТекущиеДанные.Удаление Тогда
							Если ТекущиеДанные.Отметка = Выборка.Отметка Тогда
								Попытка
									ТекущиеДанные.ЗначенияКлюча = Строка(Выборка.ЗначенияКлюча.Получить());
								Исключение
									ТекущиеДанные.ЗначенияКлюча = ОписаниеОшибки();
								КонецПопытки;
								
								Прервать;
							КонецЕсли;
						Иначе
							Набор = Наборы[ТекущиеДанные.Объект];
							Для Каждого Поле Из Набор.Отбор Цикл
								Поле.Значение = Выборка[Поле.Имя];
							КонецЦикла;
							
							ТекущиеДанные.ЗначенияКлюча = Набор.Отбор;
						КонецЕсли;
						
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		Данные.Очистить();
		Пакет.Очистить();
		Ключи.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчередьВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные.ВидКлюча =
			ОбщегоНазначенияКлиент.ПредопределенныйЭлемент("Перечисление.ВидыКлючейОтметокВремени.КлючСсылочногоОбъекта") Тогда
		
		// Ссылочный объект
		ПоказатьЗначение(, СсылочныйОбъектПоПараметрамКлюча(
			ТекущиеДанные.ИдентификаторКлюча, ТекущиеДанные.ТипКлюча));
	ИначеЕсли ТекущиеДанные.ВидКлюча =
			ОбщегоНазначенияКлиент.ПредопределенныйЭлемент("Перечисление.ВидыКлючейОтметокВремени.КлючЗначенияКонстанты") Тогда
		
		//Константа
		ИмяОбъекта = ИмяОбъекта(ТекущиеДанные.Объект);
		Если ИмяОбъекта <> Неопределено Тогда
			ОткрытьФорму(ИмяОбъекта + ".ФормаКонстант");
		КонецЕсли;
	Иначе
		//Наборы записей
		ИмяОбъекта = ИмяОбъекта(ТекущиеДанные.Объект);
		Если ИмяОбъекта <> Неопределено Тогда
			СтруктураОтбора = Новый Структура(
				ПолеОбъекта(ТекущиеДанные.Объект),
				ЗначениеПоКлючуОтметокВремени(ТекущиеДанные.ИдентификаторКлюча, ТекущиеДанные.ТипКлюча, ТекущиеДанные.ВидКлюча));
				
			ОткрытьФорму(
				ИмяОбъекта + ".ФормаСписка",
				Новый Структура("Отбор", СтруктураОтбора),,
				ТекущиеДанные.ИдентификаторКлюча);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обработать(Команда)
	
	ОбработатьНаСервере();
	Элементы.Очередь.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ЭтоНавигационнаяСсылка(Ссылка)
	
	Возврат Найти(Ссылка, "e1cib/data/") > 0;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОписаниеКлючаПоНавигационнойСсылке(Ссылка)
	
	ОписаниеКлюча = Новый Структура(
		"ИдентификаторКлюча, Объект",
		ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор(), Неопределено);
	
	Попытка
		ЧастиСсылки = СтрРазделить(Ссылка, "=");
		ЧастиПутиКИмениОбъекта = СтрРазделить(Лев(ЧастиСсылки[0], СтрНайти(ЧастиСсылки[0], "?") - 1), "/");
		ИмяОбъекта = ЧастиПутиКИмениОбъекта[ЧастиПутиКИмениОбъекта.ВГраница()];
		
		ОписаниеКлюча.ИдентификаторКлюча = Новый УникальныйИдентификатор(
			Прав(ЧастиСсылки[1], 8) +
			"-" + Сред(ЧастиСсылки[1], 21, 4) +
			"-" + Сред(ЧастиСсылки[1], 17, 4) +
			"-" + Лев(ЧастиСсылки[1], 4) +
			"-" + Сред(ЧастиСсылки[1], 5, 12));
		ОписаниеКлюча.Объект = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ИмяОбъекта);
	Исключение
		ОписаниеКлюча = Неопределено;
	КонецПопытки;
	
	Возврат ОписаниеКлюча;
	
КонецФункции

&НаСервере
Процедура ОбработатьНаСервере()
	
	ОтметкиВремени.РазобратьОчередь(Ложь);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СсылочныйОбъектПоПараметрамКлюча(Идентификатор, Объект)
	
	Менеджер = МенеджерСсылочногоОбъектаПоИдентификатору(Объект);
	Если Менеджер = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Менеджер.ПолучитьСсылку(Идентификатор);
	
КонецФункции

&НаСервереБезКонтекста
Функция МенеджерСсылочногоОбъектаПоИдентификатору(Идентификатор)
	
	Менеджер = Неопределено;
	
	Если Не ТипЗнч(Идентификатор) = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных")
			И Не ТипЗнч(Идентификатор) = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") Тогда
		
		Возврат Менеджер;
	КонецЕсли;
	
	ЗначениеПустойСсылки =
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Идентификатор, "ЗначениеПустойСсылки");
	
	Возврат ОбщегоНазначения.МенеджерОбъектаПоСсылке(ЗначениеПустойСсылки);
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяОбъекта(Идентификатор)
	
	ПолноеИмя = Неопределено;
	
	Если Не ТипЗнч(Идентификатор) = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных")
			И Не ТипЗнч(Идентификатор) = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") Тогда
		
		Возврат ПолноеИмя;
	КонецЕсли;
	
	ПолноеИмя =
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Идентификатор, "ПолноеИмя");

	Возврат ПолноеИмя;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолеОбъекта(Объект)
	
	Возврат ОтметкиВремени.ПолеКлючаОбъекта(Объект);
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗначениеПоКлючуОтметокВремени(ИдентификаторКлюча, ТипКлюча, ВидКлюча)
	
	Если ОтметкиВремениПовтИсп.ЭтоВидКлючаСсылочногоТипа(ВидКлюча) Тогда
		Возврат ОтметкиВремени.ЗначениеСсылкиПоКлючуОтметкиВремени(ИдентификаторКлюча, ТипКлюча);
	КонецЕсли;
	
	Возврат ИдентификаторКлюча;
	
КонецФункции

#КонецОбласти
