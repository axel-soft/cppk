#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Процедура добавляет запись в регистр
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи.
//  МассивИзбранное - Массив.
Процедура ДобавитьЗапись(Пользователь, МассивИзбранное) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Пользователь = Пользователь;
	МенеджерЗаписи.Избранное = Новый ХранилищеЗначения(МассивИзбранное);
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Процедура получает запись из регистра
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи.
//
// Возвращаемое значение
//  МассивИзбранное - Массив - структур
Функция ПолучитьЗапись(Пользователь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);   
	
	Запрос = Новый Запрос;	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИзбранноеПользователя.Избранное КАК Избранное
	               |ИЗ
	               |	РегистрСведений.ИзбранноеПользователей КАК ИзбранноеПользователя
	               |ГДЕ
	               |	ИзбранноеПользователя.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Новый Массив;
	КонецЕсли;	  
	
	Хранилище = Результат.Выгрузить().ВыгрузитьКолонку("Избранное");
	Возврат Хранилище[0].Получить();
	
КонецФункции

// Процедура добавляет в системную таблицу Избранное
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи.
//  ИзбранноеХранилище - ХранилищеЗначения.
Процедура ЗаписатьВИзбранное(Пользователь, ИзбранноеХранилище) Экспорт  
	
	ИдентификаторПользователяИБ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователь, "ИдентификаторПользователяИБ");
	
	Если ЗначениеЗаполнено(ИдентификаторПользователяИБ) Тогда
		СвойстваПользователяИБ = Пользователи.СвойстваПользователяИБ(ИдентификаторПользователяИБ);
		
		Если СвойстваПользователяИБ <> Неопределено Тогда
			
			Имя = СвойстваПользователяИБ.Имя;  
		
			МассивИзбранное = ИзбранноеХранилище.Получить();
			
			Избранное = Новый ИзбранноеРаботыПользователя;
			
			Для Каждого СтруктураИзбранное Из МассивИзбранное Цикл
				ЭлементИзбранного = Новый ЭлементИзбранногоРаботыПользователя;
				
				ЭлементИзбранного.Важное = СтруктураИзбранное.Важное;
				ЭлементИзбранного.НавигационнаяСсылка  = СтруктураИзбранное.НавигационнаяСсылка;
				ЭлементИзбранного.Представление  = СтруктураИзбранное.Представление;
				
				Избранное.Добавить(ЭлементИзбранного);    
			КонецЦикла;
			
			ХранилищеСистемныхНастроек.Сохранить("Общее/ИзбранноеРаботыПользователя", "", Избранное,,Имя);
		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеКэширующихДанных

// Обрабатывает обновление кэширующих данных.
// 
// Параметры:
//  Выборка - ВыборкаИзРезультатаЗапроса - Выборка из очереди обновления кэширующих данных:
//   * ОтметкаВремени - ОпределяемыйТип.ОтметкаВремени.
//   * ЗависимыйОбъектМетаданных - СправочникСсылка.ИдентификаторыОбъектовМетаданных.
//   * ВлияющийОбъектМетаданных - СправочникСсылка.ИдентификаторыОбъектовМетаданных.
//   * КлючВлияющихДанных - ЛюбаяСсылка.
//   * Автор - СправочникСсылка.Пользователи.
//   * ЗагрузкаОбработанныхДанныхИзДругойСистемы - Булево.
//   * ИзмененияВлияющихДанных - ХранилищеЗначения.
//   * Попыток - Число.
//   * ДатаКОбработке - Дата.
// 
Процедура ОбновитьКэширующиеДанные(Выборка) Экспорт
	
	ОбновлениеИнформационнойБазыДокументооборот.ПерейтиНаВерсию_3_0_13_6();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли