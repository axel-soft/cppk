#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает руководителя для подразделения.
//
// Параметры:
//  Подразделение - СправочникСсылка.СтруктураПредприятия,
//                  СправочникОбъект.СтруктураПредприятия.
// 
// Возвращаемое значение:
//  СправочникСсылка.Сотрудники
//
Функция РуководительПодразделения(Подразделение) Экспорт
	
	Если ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Подразделение)) Тогда
		СсылкаНаПодразделение = Подразделение;
	Иначе
		СсылкаНаПодразделение = Подразделение.Ссылка;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПодчиненностьПодразделений.РуководительПодчиненного КАК Руководитель
		|ИЗ
		|	РегистрСведений.ПодчиненностьПодразделений КАК ПодчиненностьПодразделений
		|ГДЕ
		|	ПодчиненностьПодразделений.Подчиненное = &Подразделение
		|	И ПодчиненностьПодразделений.Вышестоящее = &Подразделение";
	Запрос.УстановитьПараметр("Подразделение", СсылкаНаПодразделение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Руководитель;
	
КонецФункции

// Обновляет данные о подчиненности для указанного подразделения.
//
// Параметры:
//   Ссылка - СправочникСсылка.СтруктураПредприятия.
//
Процедура ЗаполнитьПоОбъекту(Ссылка) Экспорт
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Возврат;
	КонецЕсли;
		
	УстановитьПривилегированныйРежим(Истина);
		
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Справочник.Ссылка КАК Ссылка,
		|	Родитель1.Ссылка КАК Родитель1,
		|	Родитель2.Ссылка КАК Родитель2,
		|	Родитель3.Ссылка КАК Родитель3,
		|	Родитель4.Ссылка КАК Родитель4,
		|	Родитель5.Ссылка КАК Родитель5,
		|	Справочник.Руководитель КАК Руководитель,
		|	Родитель1.Руководитель КАК Руководитель1,
		|	Родитель2.Руководитель КАК Руководитель2,
		|	Родитель3.Руководитель КАК Руководитель3,
		|	Родитель4.Руководитель КАК Руководитель4,
		|	Родитель5.Руководитель КАК Руководитель5
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК Справочник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель1
		|		ПО Справочник.Родитель = Родитель1.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель2
		|		ПО Родитель1.Родитель = Родитель2.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель3
		|		ПО Родитель2.Родитель = Родитель3.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель4
		|		ПО Родитель3.Родитель = Родитель4.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель5
		|		ПО Родитель4.Родитель = Родитель5.Ссылка
		|ГДЕ
		|	Справочник.Ссылка В ИЕРАРХИИ(&Ссылка)");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Родители = Новый Массив;
	ЗапросРекурсия = Неопределено;
	Записи = РегистрыСведений.ПодчиненностьПодразделений.СоздатьНаборЗаписей();
	
	РуководителиПодразделений = Новый Соответствие();
	БезРуководителя = Новый Массив;
	СмещениеРуководителя = 6;
	
	// Блокируем от параллельного изменения иерархии по подчиненным и вышестоящим элементам.
	Блокировка = Новый БлокировкаДанных();
	Блокировка.Добавить("РегистрСведений.ПодчиненностьПодразделений");
	Блокировка.Заблокировать();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Формируем стек родителей.
		Родители.Очистить();
		
		Для Уровень = 1 По 5 Цикл
			
			Если Не ЗначениеЗаполнено(Выборка[Уровень]) Тогда
				Прервать;
			КонецЕсли;
			
			Родители.Вставить(0, Выборка[Уровень]);
			
		КонецЦикла;
		
		// Вычисляем и запоминаем руководителей подразделений.
		БезРуководителя.Очистить();
		
		Для Уровень = 0 По 5 Цикл
			
			Если Не ЗначениеЗаполнено(Выборка[Уровень]) Тогда
				Прервать;
			КонецЕсли;
			
			РуководительВЗапросе = Выборка[Уровень + СмещениеРуководителя];
			РуководительВКэше = РуководителиПодразделений[Выборка[Уровень]];
			
			Руководитель = РуководительВКэше;
			Если Не ЗначениеЗаполнено(Руководитель) Тогда
				Руководитель = РуководительВЗапросе;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Руководитель) Тогда
				БезРуководителя.Добавить(Выборка[Уровень]);
				Продолжить;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(РуководительВКэше) Тогда
				РуководителиПодразделений[Выборка[Уровень]] = Руководитель;
			КонецЕсли;
			
			Если БезРуководителя.Количество() > 0 Тогда
				Для Каждого Подразделение Из БезРуководителя Цикл
					РуководителиПодразделений[Подразделение] = Руководитель;
				КонецЦикла;
				БезРуководителя.Очистить();
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЗначениеЗаполнено(Выборка[5]) Тогда
			
			// Больше 5 уровней - делаем подгрузку.
			
			Если ЗапросРекурсия = Неопределено Тогда
				ЗапросРекурсия = Новый Запрос(
				"ВЫБРАТЬ
				|	Справочник.Ссылка КАК Ссылка,
				|	Родитель1.Ссылка КАК Родитель1,
				|	Родитель2.Ссылка КАК Родитель2,
				|	Родитель3.Ссылка КАК Родитель3,
				|	Родитель4.Ссылка КАК Родитель4,
				|	Родитель5.Ссылка КАК Родитель5,
				|	Справочник.Руководитель КАК Руководитель,
				|	Родитель1.Руководитель КАК Руководитель1,
				|	Родитель2.Руководитель КАК Руководитель2,
				|	Родитель3.Руководитель КАК Руководитель3,
				|	Родитель4.Руководитель КАК Руководитель4,
				|	Родитель5.Руководитель КАК Руководитель5
				|ИЗ
				|	Справочник.СтруктураПредприятия КАК Справочник
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель1
				|		ПО Справочник.Родитель = Родитель1.Ссылка
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель2
				|		ПО Родитель1.Родитель = Родитель2.Ссылка
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель3
				|		ПО Родитель2.Родитель = Родитель3.Ссылка
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель4
				|		ПО Родитель3.Родитель = Родитель4.Ссылка
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель5
				|		ПО Родитель4.Родитель = Родитель5.Ссылка
				|ГДЕ
				|	Справочник.Ссылка = &Ссылка");
			КонецЕсли;
			
			ВыборкаРекурсия = Выборка;
			
			Пока ЗначениеЗаполнено(ВыборкаРекурсия[5]) Цикл
				
				ЗапросРекурсия.УстановитьПараметр("Ссылка", ВыборкаРекурсия[5]);
				ВыборкаРекурсия = ЗапросРекурсия.Выполнить().Выбрать();
				ВыборкаРекурсия.Следующий();
				
				Для Уровень = 1 По 5 Цикл
					
					Если Не ЗначениеЗаполнено(ВыборкаРекурсия[Уровень]) Тогда
						Прервать;
					КонецЕсли;
					
					Родители.Вставить(0, ВыборкаРекурсия[Уровень]);
					
				КонецЦикла;
				
				Для Уровень = 0 По 5 Цикл
					
					Если Не ЗначениеЗаполнено(ВыборкаРекурсия[Уровень]) Тогда
						Прервать;
					КонецЕсли;
					
					РуководительВЗапросе = ВыборкаРекурсия[Уровень + СмещениеРуководителя];
					РуководительВКэше = РуководителиПодразделений[ВыборкаРекурсия[Уровень]];
					
					Руководитель = РуководительВКэше;
					Если Не ЗначениеЗаполнено(Руководитель) Тогда
						Руководитель = РуководительВЗапросе;
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(Руководитель) Тогда
						БезРуководителя.Добавить(ВыборкаРекурсия[Уровень]);
						Продолжить;
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(РуководительВКэше) Тогда
						РуководителиПодразделений[ВыборкаРекурсия[Уровень]] = Руководитель;
					КонецЕсли;
					
					Если БезРуководителя.Количество() > 0 Тогда
						Для Каждого Подразделение Из БезРуководителя Цикл
							РуководителиПодразделений[Подразделение] = Руководитель;
						КонецЦикла;
						БезРуководителя.Очистить();
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Записи.Очистить();
		Уровень = 0;
		УровеньТекущего = Родители.Количество() + 1;
		
		Для Каждого Родитель Из Родители Цикл
			
			Уровень = Уровень + 1;
			Запись = Записи.Добавить();
			Запись.Вышестоящее = Родитель;
			Запись.Подчиненное = Выборка.Ссылка;
			Запись.РуководительВышестоящего = РуководителиПодразделений[Запись.Вышестоящее];
			Запись.РуководительПодчиненного = РуководителиПодразделений[Запись.Подчиненное];
			Запись.УровеньВышестоящего = Уровень;
			Запись.УровеньВышестоящегоОтПодчиненного = УровеньТекущего - Уровень;
			
		КонецЦикла;
		
		// Запись по себе.
		Запись = Записи.Добавить();
		Запись.Вышестоящее = Выборка.Ссылка;
		Запись.Подчиненное = Выборка.Ссылка;
		Запись.РуководительВышестоящего = РуководителиПодразделений[Запись.Вышестоящее];
		Запись.РуководительПодчиненного = РуководителиПодразделений[Запись.Подчиненное];
		Запись.УровеньВышестоящего = УровеньТекущего;
		
		Записи.Отбор.Подчиненное.Установить(Запись.Подчиненное);
		Записи.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

// Обновляет все данные регистра.
//
Процедура ОбновитьДанныеПолностью() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	
	Записи = РегистрыСведений.ПодчиненностьПодразделений.СоздатьНаборЗаписей();
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Справочник.Ссылка КАК Ссылка,
		|	Родитель1.Ссылка КАК Родитель1,
		|	Родитель2.Ссылка КАК Родитель2,
		|	Родитель3.Ссылка КАК Родитель3,
		|	Родитель4.Ссылка КАК Родитель4,
		|	Родитель5.Ссылка КАК Родитель5,
		|	Справочник.Руководитель КАК Руководитель,
		|	Родитель1.Руководитель КАК Руководитель1,
		|	Родитель2.Руководитель КАК Руководитель2,
		|	Родитель3.Руководитель КАК Руководитель3,
		|	Родитель4.Руководитель КАК Руководитель4,
		|	Родитель5.Руководитель КАК Руководитель5
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК Справочник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель1
		|		ПО Справочник.Родитель = Родитель1.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель2
		|		ПО Родитель1.Родитель = Родитель2.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель3
		|		ПО Родитель2.Родитель = Родитель3.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель4
		|		ПО Родитель3.Родитель = Родитель4.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель5
		|		ПО Родитель4.Родитель = Родитель5.Ссылка");
		
	Родители = Новый Массив;
	ЗапросРекурсия = Неопределено;
	
	РуководителиПодразделений = Новый Соответствие();
	БезРуководителя = Новый Массив;
	СмещениеРуководителя = 6;
	
	// Блокируем от параллельного изменения иерархии по подчиненным и вышестоящим элементам.
	Блокировка = Новый БлокировкаДанных();
	Блокировка.Добавить("РегистрСведений.ПодчиненностьПодразделений");
	Блокировка.Заблокировать();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Формируем стек родителей.
		Родители.Очистить();
		
		Для Уровень = 1 По 5 Цикл
			
			Если Не ЗначениеЗаполнено(Выборка[Уровень]) Тогда
				Прервать;
			КонецЕсли;
			
			Родители.Вставить(0, Выборка[Уровень]);
			
		КонецЦикла;
		
		// Вычисляем и запоминаем руководителей подразделений.
		БезРуководителя.Очистить();
		
		Для Уровень = 0 По 5 Цикл
			
			Если Не ЗначениеЗаполнено(Выборка[Уровень]) Тогда
				Прервать;
			КонецЕсли;
			
			РуководительВЗапросе = Выборка[Уровень + СмещениеРуководителя];
			РуководительВКэше = РуководителиПодразделений[Выборка[Уровень]];
			
			Руководитель = РуководительВКэше;
			Если Не ЗначениеЗаполнено(Руководитель) Тогда
				Руководитель = РуководительВЗапросе;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Руководитель) Тогда
				БезРуководителя.Добавить(Выборка[Уровень]);
				Продолжить;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(РуководительВКэше) Тогда
				РуководителиПодразделений[Выборка[Уровень]] = Руководитель;
			КонецЕсли;
			
			Если БезРуководителя.Количество() > 0 Тогда
				Для Каждого Подразделение Из БезРуководителя Цикл
					РуководителиПодразделений[Подразделение] = Руководитель;
				КонецЦикла;
				БезРуководителя.Очистить();
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЗначениеЗаполнено(Выборка[5]) Тогда
			
			// Больше 5 уровней - делаем подгрузку.
			
			Если ЗапросРекурсия = Неопределено Тогда
				ЗапросРекурсия = Новый Запрос(
				"ВЫБРАТЬ
				|	Справочник.Ссылка КАК Ссылка,
				|	Родитель1.Ссылка КАК Родитель1,
				|	Родитель2.Ссылка КАК Родитель2,
				|	Родитель3.Ссылка КАК Родитель3,
				|	Родитель4.Ссылка КАК Родитель4,
				|	Родитель5.Ссылка КАК Родитель5,
				|	Справочник.Руководитель КАК Руководитель,
				|	Родитель1.Руководитель КАК Руководитель1,
				|	Родитель2.Руководитель КАК Руководитель2,
				|	Родитель3.Руководитель КАК Руководитель3,
				|	Родитель4.Руководитель КАК Руководитель4,
				|	Родитель5.Руководитель КАК Руководитель5
				|ИЗ
				|	Справочник.СтруктураПредприятия КАК Справочник
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель1
				|		ПО Справочник.Родитель = Родитель1.Ссылка
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель2
				|		ПО Родитель1.Родитель = Родитель2.Ссылка
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель3
				|		ПО Родитель2.Родитель = Родитель3.Ссылка
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель4
				|		ПО Родитель3.Родитель = Родитель4.Ссылка
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Родитель5
				|		ПО Родитель4.Родитель = Родитель5.Ссылка
				|ГДЕ
				|	Справочник.Ссылка = &Ссылка");
			КонецЕсли;
			
			ВыборкаРекурсия = Выборка;
			
			Пока ЗначениеЗаполнено(ВыборкаРекурсия[5]) Цикл
				
				ЗапросРекурсия.УстановитьПараметр("Ссылка", ВыборкаРекурсия[5]);
				ВыборкаРекурсия = ЗапросРекурсия.Выполнить().Выбрать();
				ВыборкаРекурсия.Следующий();
				
				Для Уровень = 1 По 5 Цикл
					
					Если Не ЗначениеЗаполнено(ВыборкаРекурсия[Уровень]) Тогда
						Прервать;
					КонецЕсли;
					
					Родители.Вставить(0, ВыборкаРекурсия[Уровень]);
					
				КонецЦикла;
				
				Для Уровень = 0 По 5 Цикл
					
					Если Не ЗначениеЗаполнено(ВыборкаРекурсия[Уровень]) Тогда
						Прервать;
					КонецЕсли;
					
					РуководительВЗапросе = ВыборкаРекурсия[Уровень + СмещениеРуководителя];
					РуководительВКэше = РуководителиПодразделений[ВыборкаРекурсия[Уровень]];
					
					Руководитель = РуководительВКэше;
					Если Не ЗначениеЗаполнено(Руководитель) Тогда
						Руководитель = РуководительВЗапросе;
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(Руководитель) Тогда
						БезРуководителя.Добавить(ВыборкаРекурсия[Уровень]);
						Продолжить;
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(РуководительВКэше) Тогда
						РуководителиПодразделений[ВыборкаРекурсия[Уровень]] = Руководитель;
					КонецЕсли;
					
					Если БезРуководителя.Количество() > 0 Тогда
						Для Каждого Подразделение Из БезРуководителя Цикл
							РуководителиПодразделений[Подразделение] = Руководитель;
						КонецЦикла;
						БезРуководителя.Очистить();
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Уровень = 0;
		УровеньТекущего = Родители.Количество() + 1;
		
		Для Каждого Родитель Из Родители Цикл
			
			Уровень = Уровень + 1;
			Запись = Записи.Добавить();
			Запись.Вышестоящее = Родитель;
			Запись.Подчиненное = Выборка.Ссылка;
			Запись.РуководительВышестоящего = РуководителиПодразделений[Запись.Вышестоящее];
			Запись.РуководительПодчиненного = РуководителиПодразделений[Запись.Подчиненное];
			Запись.УровеньВышестоящего = Уровень;
			Запись.УровеньВышестоящегоОтПодчиненного = УровеньТекущего - Уровень;
			
		КонецЦикла;
		
		// Запись по себе.
		Запись = Записи.Добавить();
		Запись.Вышестоящее = Выборка.Ссылка;
		Запись.Подчиненное = Выборка.Ссылка;
		Запись.РуководительВышестоящего = РуководителиПодразделений[Запись.Вышестоящее];
		Запись.РуководительПодчиненного = РуководителиПодразделений[Запись.Подчиненное];
		Запись.УровеньВышестоящего = УровеньТекущего;
		
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(Записи);
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

// Определяет руководителей подразделений по иерархии.
// 
// Параметры:
//  Подразделения - Массив из СправочникСсылка.СтруктураПредприятия.
// 
// Возвращаемое значение:
//  ТаблицаЗначений:
//   * Подразделение - СправочникСсылка.СтруктураПредприятия.
//   * Руководитель - СправочникСсылка.Сотрудники.
//   * УровеньРуководителя - Число.
//   * ПодчиненноеПодразделение - СправочникСсылка.СтруктураПредприятия.
//   * РуководительПодчиненного - СправочникСсылка.Сотрудники.
// 
Функция РуководителиПодразделенийПоИерархии(Подразделения) Экспорт
	
	Если Подразделения.Количество() = 0 Тогда
		РуководителиПодразделенийПоИерархии = Новый ТаблицаЗначений;
		РуководителиПодразделенийПоИерархии.Колонки.Добавить("Подразделение");
		РуководителиПодразделенийПоИерархии.Колонки.Добавить("Руководитель");
		РуководителиПодразделенийПоИерархии.Колонки.Добавить("УровеньРуководителя");
		РуководителиПодразделенийПоИерархии.Колонки.Добавить("ПодчиненноеПодразделение");
		РуководителиПодразделенийПоИерархии.Колонки.Добавить("РуководительПодчиненного");
		Возврат РуководителиПодразделенийПоИерархии;
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодчиненностьПодразделений.Вышестоящее КАК Подразделение,
		|	ПодчиненностьПодразделений.РуководительВышестоящего КАК Руководитель,
		|	ПодчиненностьПодразделений.УровеньВышестоящего КАК УровеньРуководителя,
		|	ПодчиненностьПодразделений.Подчиненное КАК ПодчиненноеПодразделение,
		|	ПодчиненностьПодразделений.РуководительПодчиненного КАК РуководительПодчиненного
		|ИЗ
		|	РегистрСведений.ПодчиненностьПодразделений КАК ПодчиненностьПодразделений
		|ГДЕ
		|	ПодчиненностьПодразделений.Подчиненное В (&Подразделения)
		|
		|УПОРЯДОЧИТЬ ПО
		|	УровеньРуководителя ВОЗР");
	
	Запрос.УстановитьПараметр("Подразделения", Подразделения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РуководителиПодразделенийПоИерархии = РезультатЗапроса.Выгрузить();
	
	Возврат РуководителиПодразделенийПоИерархии;
	
КонецФункции

#КонецОбласти

#КонецЕсли