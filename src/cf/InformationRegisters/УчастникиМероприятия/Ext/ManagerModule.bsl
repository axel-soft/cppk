#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает доступные текущему пользователю приглашения.
//
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия - Мероприятие.
//
// Возвращаемое значение:
//  ТаблицаЗначений - Доступные приглашения.
//
Функция ДоступныеПриглашения(Мероприятие) Экспорт
	
	ДоступныеПриглашения = Новый ТаблицаЗначений;
	ДоступныеПриглашения.Колонки.Добавить("Исполнитель");
	ДоступныеПриглашения.Колонки.Добавить("ОтКогоДелегирование");
	ДоступныеПриглашения.Колонки.Добавить("Представление");
	ДоступныеПриглашения.Колонки.Добавить("СостояниеПриглашения");
	Если Не ЗначениеЗаполнено(Мероприятие) Тогда
		Возврат ДоступныеПриглашения;
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	УчастникиМероприятия.Исполнитель КАК Исполнитель,
		|	ВЫБОР
		|		КОГДА УчастникиМероприятия.Исполнитель ССЫЛКА Справочник.ПолныеРоли
		|			ТОГДА ЕСТЬNULL(ЗамещающиеИПомощники.Сотрудник, ИсполнителиРолейИДелегаты.ИсполнительДелегат)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|	КОНЕЦ КАК ОтКогоДелегирование,
		|	УчастникиМероприятия.СостояниеПриглашения КАК СостояниеПриглашения
		|ИЗ
		|	РегистрСведений.УчастникиМероприятия КАК УчастникиМероприятия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсполнителиРолейИДелегаты КАК ИсполнителиРолейИДелегаты
		|		ПО УчастникиМероприятия.Исполнитель = ИсполнителиРолейИДелегаты.РольСотрудник
		|		И ИсполнителиРолейИДелегаты.ИсполнительДелегат В (&СотрудникиПользователя)
		|		И ИсполнителиРолейИДелегаты.ИмяОбластиДелегирования В ("""", ""Мероприятия"")
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗамещающиеИПомощники КАК ЗамещающиеИПомощники
		|		ПО ИсполнителиРолейИДелегаты.НастройкаДелегирования = ЗамещающиеИПомощники.Ссылка
		|ГДЕ
		|	УчастникиМероприятия.Мероприятие = &Мероприятие
		|
		|УПОРЯДОЧИТЬ ПО
		|	Исполнитель,
		|	ОтКогоДелегирование");
	
	Запрос.УстановитьПараметр("Мероприятие", Мероприятие);
	
	Запрос.УстановитьПараметр("СотрудникиПользователя", Сотрудники.СотрудникиПользователя());
	
	ДоступныеПриглашения = Запрос.Выполнить().Выгрузить();
	
	ДоступныеПриглашения.Колонки.Добавить("Представление");
	
	Для Каждого ДоступноеПриглашение Из ДоступныеПриглашения Цикл
		
		Если Не ЗначениеЗаполнено(ДоступноеПриглашение.ОтКогоДелегирование) Тогда
			ДоступноеПриглашение.Представление = Строка(ДоступноеПриглашение.Исполнитель);
		Иначе
			ДоступноеПриглашение.Представление = СтрШаблон(
				"%1 (%2)",
				Строка(ДоступноеПриглашение.Исполнитель),
				Строка(ДоступноеПриглашение.ОтКогоДелегирование));
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДоступныеПриглашения;
	
КонецФункции

// Изменяет состояние приглашения на мероприятие.
//
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия - Мероприятие.
//  Исполнитель - СправочникСсылка.ПолныеРоли,
//                СправочникСсылка.Пользователи,
//                СправочникСсылка.Сотрудники - Исполнитель.
//  СостояниеПриглашения - ПеречислениеСсылка.СостоянияПриглашения - Состояние приглашения.
//  ОтКогоДелегирование - СправочникСсылка.Сотрудники.
//
Процедура ИзменитьСостояниеПриглашения(
	Мероприятие,
	Исполнитель,
	СостояниеПриглашения,
	ОтКогоДелегирование = Неопределено) Экспорт
	
	НачатьТранзакцию();
	Попытка
		
		Если Не ПривилегированныйРежим() Тогда
			ДоступныеПриглашения = ДоступныеПриглашения(Мероприятие);
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Исполнитель", Исполнитель);
			ПараметрыОтбора.Вставить("ОтКогоДелегирование", ОтКогоДелегирование);
			НайденныеСтроки = ДоступныеПриглашения.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() = 0 Тогда
				ПредставлениеУчастника = Строка(Исполнитель);
				ТекстОшибки = СтрШаблон(
					НСтр("ru = 'Недостаточно прав для изменения состояние приглашения участника %1 на мероприятие %2.'"),
					ПредставлениеУчастника,
					Мероприятие);
				ВызватьИсключение ТекстОшибки;
			КонецЕсли;
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
		
		УстановитьСостояниеПриглашения(
			Мероприятие,
			Исполнитель,
			СостояниеПриглашения,
			Неопределено,
			ОтКогоДелегирование,
			Истина);
		
		УправлениеМероприятиями.ОбновитьСостояниеПриглашений(Мероприятие);
		
		Если СостояниеПриглашения = Перечисления.СостоянияПриглашения.Принято Тогда
			
			РаботаСУведомлениями.ОбработатьСобытиеУведомления(
				Мероприятие,
				Перечисления.СобытияУведомлений.МероприятияПринятоПриглашение,
				ПользователиДокументооборот.ОлицетворяемыйПользователь(),
				Новый ХранилищеЗначения(Исполнитель));
			
		ИначеЕсли СостояниеПриглашения = Перечисления.СостоянияПриглашения.НеПринято Тогда
			
			РаботаСУведомлениями.ОбработатьСобытиеУведомления(
				Мероприятие,
				Перечисления.СобытияУведомлений.МероприятияОтклоненоПриглашение,
				ПользователиДокументооборот.ОлицетворяемыйПользователь(),
				Новый ХранилищеЗначения(Исполнитель));
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Проверяет, является ли переданный исполнитель участником мероприятия.
//
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятие - Мероприятие.
//  Исполнитель - СправочникСсылка.Контрагенты,
//                СправочникСсылка.ЛичныеАдресаты,
//                СправочникСсылка.ПолныеРоли,
//                СправочникСсылка.Пользователи,
//                СправочникСсылка.Сотрудники,
//                СправочникСсылка.КонтактныеЛица - Исполнитель.
// 
// Возвращаемое значение:
//  Булево - Исполнитель является участником.
//
Функция ЯвляетсяУчастникомМероприятия(Мероприятие, Исполнитель) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	УчастникиМероприятия.Исполнитель
		|ИЗ
		|	РегистрСведений.УчастникиМероприятия КАК УчастникиМероприятия
		|ГДЕ
		|	УчастникиМероприятия.Мероприятие = &Мероприятие
		|	И УчастникиМероприятия.Исполнитель = &Исполнитель");
	
	Запрос.УстановитьПараметр("Мероприятие", Мероприятие);
	Запрос.УстановитьПараметр("Исполнитель", Исполнитель);
	
	ЯвляетсяУчастникомМероприятия = Не Запрос.Выполнить().Пустой();
	
	Возврат ЯвляетсяУчастникомМероприятия;
	
КонецФункции

// Устанавливает состояние приглашения на мероприятие.
//
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия.
//  Исполнитель - СправочникСсылка.ПолныеРоли, СправочникСсылка.Пользователи, СправочникСсылка.Сотрудники.
//  СостояниеПриглашения - ПеречислениеСсылка.СостоянияПриглашения.
//  КонтрольнаяСуммаПриглашения - Строка.
//  ОтКогоДелегирование - СправочникСсылка.Сотрудники.
//  ОтключитьОповещения - Булево.
//
Процедура УстановитьСостояниеПриглашения(
	Мероприятие,
	Исполнитель,
	СостояниеПриглашения,
	КонтрольнаяСуммаПриглашения = Неопределено,
	ОтКогоДелегирование = Неопределено,
	ОтключитьОповещения = Ложь) Экспорт
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Исполнитель", Исполнитель);
	Участники = УправлениеМероприятиями.ПолучитьУчастниковМероприятия(Мероприятие);
	НайденныеСтроки = Участники.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки.Количество() = 0 Тогда 
		ПредставлениеУчастника = Строка(Исполнитель);
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'Участник %1 мероприятия %2 не найден.'"),
			ПредставлениеУчастника,
			Мероприятие);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	НайденнаяСтрока = НайденныеСтроки[0];
	
	ЗначенияКлюча = Новый Структура;
	ЗначенияКлюча.Вставить("Мероприятие", Мероприятие);
	ЗначенияКлюча.Вставить("Исполнитель", НайденнаяСтрока.Исполнитель);
	
	КлючЗаписи = СоздатьКлючЗаписи(ЗначенияКлюча);
	ЗаблокироватьДанныеДляРедактирования(КлючЗаписи);
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ЗначенияКлюча);
	МенеджерЗаписи.Прочитать();
	
	МенеджерЗаписи.СостояниеПриглашения = СостояниеПриглашения;
	Если КонтрольнаяСуммаПриглашения <> Неопределено Тогда
		МенеджерЗаписи.КонтрольнаяСуммаПриглашения = КонтрольнаяСуммаПриглашения;
	КонецЕсли;
	Если ТипЗнч(МенеджерЗаписи.Исполнитель) = Тип("СправочникСсылка.ПолныеРоли")
		И ЗначениеЗаполнено(ОтКогоДелегирование) Тогда
		МенеджерЗаписи.Исполнитель = ОтКогоДелегирование;
	КонецЕсли;
	МенеджерЗаписи.Записать();
	
	РаботаСРабочимКалендаремСервер.ОбновитьЗаписиКалендаряПоПредмету(Мероприятие, ОтключитьОповещения);
	
	КлючЗаписи = СоздатьКлючЗаписи(ЗначенияКлюча);
	РазблокироватьДанныеДляРедактирования(КлючЗаписи);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли