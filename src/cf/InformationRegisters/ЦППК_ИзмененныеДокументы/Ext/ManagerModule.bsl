#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет запись в регистр измененных документов
//
// Параметры:
//  Документ - СправочникСсылка.ДокументыПредприятия - новый документ
//  ИзменяемыйДокумент - СправочникСсылка.ДокументыПредприятия - изменяемый документ
//  ДатаИзменения - Дата - дата изменения документа
Процедура ЗаписатьДанные(Документ, ИзменяемыйДокумент, ДатаИзменения) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = РегистрыСведений.ЦППК_ИзмененныеДокументы.СоздатьМенеджерЗаписи();
	Запись.Документ = Документ;
	Запись.ИзменяемыйДокумент = ИзменяемыйДокумент;
	Запись.ДатаИзменения = ДатаИзменения;
	Запись.Записать();
КонецПроцедуры

// Удаляет запись из регистра измененных документов
//
// Параметры:
//  Документ - СправочникСсылка.ДокументыПредприятия - новый документ
//  ИзменяемыйДокумент - СправочникСсылка.ДокументыПредприятия - изменяемый документ
Процедура УдалитьДанные(Документ, ИзменяемыйДокумент) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = РегистрыСведений.ЦППК_ИзмененныеДокументы.СоздатьМенеджерЗаписи();
	Запись.Документ = Документ;
	Запись.ИзменяемыйДокумент = ИзменяемыйДокумент;
	Запись.Удалить();
	
КонецПроцедуры

// Возвращает документы, которые изменяют указанный документ
//
// Параметры:
//  Документ - СправочникСсылка.ДокументыПредприятия - изменяемый документ
//
// Возвращаемое значение:
//  Массив из Структура
// 	*Документ - СправочникСсылка.ДокументыПредприятия
//	*ДатаОтмены - Дата
Функция ПрочитатьДанные(Документ) Экспорт
	
	Возврат ВыполнитьЗапросКРегистру(
		"ЦППК_ИзмененныеДокументы.Документ = &Документ",
		"Документ",
		Документ,
		Истина // Возвращать изменяемые документы
	);
	
КонецФункции

// Возвращает документы, измененные указанным документом
//
// Параметры:
//  ИзменяемыйДокумент - СправочникСсылка.ДокументыПредприятия - новый документ
//
// Возвращаемое значение:
//  Массив из Структура:
//    * Документ - СправочникСсылка.ДокументыПредприятия - изменяемый документ
//    * ДатаИзменения - Дата - дата изменения документа
Функция ПрочитатьНовыеДокументы(ИзменяемыйДокумент) Экспорт
	
	Возврат ВыполнитьЗапросКРегистру(
		"ЦППК_ИзмененныеДокументы.ИзменяемыйДокумент = &ИзменяемыйДокумент",
		"ИзменяемыйДокумент", 
		ИзменяемыйДокумент,
		Ложь // Возвращать новые документы
	);
		
КонецФункции

#КонецОбласти

// Вспомогательная функция для выполнения запросов к регистру
//
// Параметры:
//  Условие - Строка - условие WHERE для запроса
//  ИмяПараметра - Строка - имя параметра запроса
//  ЗначениеПараметра - Произвольный - значение параметра
//
// Возвращает документы, которые изменяют указанный документ
//
// Параметры:
//  Документ - СправочникСсылка.ДокументыПредприятия - изменяемый документ
//
// Возвращаемое значение:
//  Массив ИЗ СправочникСсылка.ДокументыПредприятия 
// 	
Функция ВыполнитьЗапросКРегистру(Условие, ИмяПараметра, ЗначениеПараметра, ВозвращатьОтменяемые)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦППК_ИзмененныеДокументы.Документ КАК Документ,
	|	ЦППК_ИзмененныеДокументы.ИзменяемыйДокумент КАК ИзменяемыйДокумент,
	|	ЦППК_ИзмененныеДокументы.ДатаИзменения КАК ДатаИзменения
	|ИЗ
	|	РегистрСведений.ЦППК_ИзмененныеДокументы КАК ЦППК_ИзмененныеДокументы
	|ГДЕ
	|	&Условие";
	
	Запрос.УстановитьПараметр(ИмяПараметра, ЗначениеПараметра);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие", Условие);
	
	Результат = Запрос.Выполнить().Выгрузить();
	МассивДокументов = Новый Массив;
	
	Для Каждого СтрокаРезультата Из Результат Цикл
		Документ = ?(ВозвращатьОтменяемые, 
		СтрокаРезультата.ИзменяемыйДокумент, 
		СтрокаРезультата.Документ);
		
		Элемент = Новый Структура("Документ, ДатаИзменения", 
		Документ, 
		СтрокаРезультата.ДатаИзменения);
		
		МассивДокументов.Добавить(Элемент);
	КонецЦикла;
	
	Возврат МассивДокументов;
	
КонецФункции

#КонецЕсли