#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет в лог
//
// Параметры:
//  Задание - СправочникСсылка.ОчередьЗаданийДокументооборота - ссылка на задание.
//  ТекстДобавки - Строка
//
Процедура ДобавитьВЛог(Задание, ТекстДобавки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	Попытка
		
		БлокировкаДанных = Новый БлокировкаДанных;
		
		ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.ПротоколВыполненияЗаданий");
		ЭлементБлокировки.УстановитьЗначение("Задание", Задание);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
		БлокировкаДанных.Заблокировать();
	
		МенеджерЗаписи = СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Задание = Задание;
		МенеджерЗаписи.Прочитать();
		
		Если МенеджерЗаписи.Выбран() Тогда
			
			Если СтрДлина(МенеджерЗаписи.Протокол) > 32000 Тогда
				МенеджерЗаписи.Протокол = ""; // очистим накопленное
			КонецЕсли;	
			
			МенеджерЗаписи.Протокол = ТекстДобавки + Символы.ВК + МенеджерЗаписи.Протокол; 
		Иначе
			МенеджерЗаписи.Протокол = ТекстДобавки;
		КонецЕсли;
		
		МенеджерЗаписи.Задание = Задание;	 
		МенеджерЗаписи.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;	
	
КонецПроцедуры	

// Получает лог
//
// Параметры:
//  Задание - СправочникСсылка.ОчередьЗаданийДокументооборота - ссылка на задание.
//  
//  Возвращаемое значение - Строка
//
Функция ПрочитатьЛог(Задание) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПротоколВыполненияЗаданий.Протокол
	|ИЗ
	|	РегистрСведений.ПротоколВыполненияЗаданий КАК ПротоколВыполненияЗаданий
	|ГДЕ
	|	ПротоколВыполненияЗаданий.Задание = &Задание";
	
	Запрос.УстановитьПараметр("Задание", Задание);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат "";
	КонецЕсли;	
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Протокол;
	
КонецФункции	

// Удалит запись лога
// 
// Параметры:
//  Задание - СправочникСсылка.ОчередьЗаданийДокументооборота - ссылка на задание.
Процедура УдалитьЛог(Задание) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Задание.Установить(Задание);
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли