#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Замещает все записи для файла
//
// Файл - СправочникСсылка.Файлы
// Роль - СправочникСсылка.РолиФайлов
//
Процедура ЗаписатьРольФайла(Файл, Роль) Экспорт
	
	Если Не ЗначениеЗаполнено(Роль) Тогда
		Возврат;
	КонецЕсли;	
	
	Роли = Новый Массив;
	Роли.Добавить(Роль);
	ЗаменитьРолиФайла(Файл, Роли);
	
КонецПроцедуры

// Замещает все записи для файла
//
// Файл - СправочникСсылка.Файлы
// Роли - массив СправочникСсылка.РолиФайлов
//
Процедура ЗаменитьРолиФайла(Файл, Роли) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.РолиФайловДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Файл.Установить(Файл);
	
	Для Каждого Роль Из Роли Цикл
		
		Если ЗначениеЗаполнено(Роль) Тогда
			Запись = НаборЗаписей.Добавить();
			Запись.Файл = Файл;
			Запись.Роль = Роль;
		КонецЕсли;	
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	Описание = СтрШаблон(НСтр("ru = 'Смена ролей файла. Новые роли: %1'"),
		Делопроизводство.СтрокаИдРолей(Роли));
	ПротоколированиеРаботыСотрудников.ЗаписатьИзменение(Файл, Описание);
	
	РегистрыСведений.ОчередьОбновленияКэширующихДанных.Добавить(
		Метаданные.Справочники.Файлы.ПолноеИмя(),
		Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка(),
		Файл);
	
КонецПроцедуры

// Возвращает массив ролей для файла
//
// Файл - СправочникСсылка.Файлы
//
Функция ПолучитьРолиФайла(Файл) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РолиФайловДокументов.Роль КАК Роль
		|ИЗ
		|	РегистрСведений.РолиФайловДокументов КАК РолиФайловДокументов
		|ГДЕ
		|	РолиФайловДокументов.Файл = &Файл";
	Запрос.УстановитьПараметр("Файл", Файл);
	МассивРоли = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Роль");
	Возврат МассивРоли;
	
КонецФункции

#КонецОбласти

#КонецЕсли