#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДоступноУсовершенствование = РаботаСЭП.ДоступноУсовершенствованиеЭП();
	Элементы.ФормаДобавитьМеткиВремени.Видимость = ДоступноУсовершенствование;
	Элементы.ФормаДобавитьАрхивныеМеткиВремени.Видимость = ДоступноУсовершенствование;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьМеткиВремени(Команда)
	
	УсовершенствоватьПодписи(РаботаСЭПКлиентСервер.РежимыУсовершенствованияПодписей().ДобавлениеМетокВремени);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьАрхивныеМеткиВремени(Команда)
	
	УсовершенствоватьПодписи(РаботаСЭПКлиентСервер.РежимыУсовершенствованияПодписей().АрхивированиеПодписей);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Выполняет усовершенствование подписей
// 
// Параметры:
//  Режим - Строка - см. РаботаСЭПКлиентСервер.РежимыУсовершенствованияПодписей
&НаКлиенте
Процедура УсовершенствоватьПодписи(Режим)
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторыПодписей = Новый Массив();
	Для Каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
		ДанныеСписка = Элементы.Список.ДанныеСтроки(ИдентификаторСтроки);
		ИдентификаторыПодписей.Добавить(ДанныеСписка.УникальныйИдентификатор);
	КонецЦикла;
	
	ОбработчикДобавления = Новый ОписаниеОповещения("ОбработатьУсовершенствование", ЭтотОбъект);
	
	ПараметрыУсовершенствования = РаботаСЭПКлиент.НовыеПараметрыУсовершенствованияПодписей();
	ПараметрыУсовершенствования.ВызывающаяФорма = ЭтотОбъект;
	ПараметрыУсовершенствования.ОбработчикЗавершения = ОбработчикДобавления;
	ПараметрыУсовершенствования.РежимУсовершенствования = Режим;
	
	РаботаСЭПКлиент.УсовершенствоватьПодписи(ИдентификаторыПодписей, ПараметрыУсовершенствования);
	
КонецПроцедуры

// Обрабатывает добавление метки времени к подписи
// 
// Параметры:
//  Результат - Структура:
//     * Успех - Булево - Истина, если все прошло успешно. Если Успех = Ложь, то частичное завершение
//               определяется по наличию свойства СвойстваПодписи. Если есть, то шаг выполнен.
//     * ТекстОшибки - Строка
//     * СвойстваПодписей - Массив из Структура:
//                          ** Подпись - ДвоичныеДанные - Подпись, которую надо усовершенствовать.
//                                     - Строка - адрес во временном хранилище.
//                          ** ПодписанныйОбъект - ЛюбаяСсылка - если есть.
//                          ** ПорядковыйНомер - Число - если есть.
//                          ** ТипПодписи - ПеречислениеСсылка.ТипыПодписиКриптографии - тип подписи,
//                                если подпись не удалось усовершенствовать, но удалось определить тип.
//                          ** СрокДействияПоследнейМеткиВремени - Дата - срок действия,
//                                если подпись не удалось усовершенствовать, но удалось определить срок действия.
//                          ** СвойстваПодписи - см. ЭлектроннаяПодписьКлиентСервер.НовыеСвойстваПодписи -
//                             свойства усовершенствованной подписи (заполнены только изменившиеся).
//                          ** Ошибка - Строка - текст ошибки при попытке усовершенствования. Если произошла ошибка,
//                           то структура не будет содержать свойств подписи, которую не удалось усовершенствовать.
//                        - Строка - адрес временного хранилища, содержащего массив указанный выше.
//  ДополнительныеПараметры - Структура
&НаКлиенте
Процедура ОбработатьУсовершенствование(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат.Успех Тогда 
		
		СтрокиСообщения = Новый Массив(); // Массив Из Строка
		СтрокиСообщения.Добавить(НСтр("ru = 'При добавлении метки времени возникли ошибки:'"));
		
		Если Результат.СвойстваПодписей <> Неопределено Тогда
			Для Каждого СвойствоПодписи Из Результат.СвойстваПодписей Цикл
				Если СвойствоПодписи.Свойство("Ошибка") Тогда
					СтрокиСообщения.Добавить(СвойствоПодписи.Ошибка);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПоказатьПредупреждение(, СтрСоединить(СтрокиСообщения, Символы.ПС));
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти