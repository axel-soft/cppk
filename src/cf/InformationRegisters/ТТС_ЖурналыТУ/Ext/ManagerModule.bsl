
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьДанныеЖурнала(Документ, ИДСтроки = Неопределено) Экспорт
	НаборДанныеЖурнала = РегистрыСведений.ТТС_ЖурналыТУ.СоздатьНаборЗаписей();
	НаборДанныеЖурнала.Отбор.ВнутреннийДокумент.Установить(Документ);
	Если НЕ ИДСтроки = Неопределено Тогда
		НаборДанныеЖурнала.Отбор.ИДСтроки.Установить(ИДСтроки);
	КонецЕсли;
	НаборДанныеЖурнала.Прочитать();
	
	ДанныеЖурнала = НаборДанныеЖурнала.Выгрузить();
	Возврат ДанныеЖурнала;
КонецФункции

Процедура ЗаписатьДанныеЖурнала(Объект,ДанныеЖурнала) Экспорт
	НаборДанныеЖурнала = РегистрыСведений.ТТС_ЖурналыТУ.СоздатьНаборЗаписей();
	НаборДанныеЖурнала.Отбор.ВнутреннийДокумент.Установить(Объект.Ссылка);
	НаборДанныеЖурнала.Прочитать();                           
	НаборДанныеЖурнала.Очистить();
	Для Каждого СтрокаДанных Из ДанныеЖурнала Цикл
		Запись = НаборДанныеЖурнала.Добавить();
		ЗаполнитьЗначенияСвойств(Запись,СтрокаДанных);
		Запись.ВнутреннийДокумент = Объект.Ссылка;
		Запись.ПометкаУдаления = Объект.ПометкаУдаления;
	КонецЦикла;
	НаборДанныеЖурнала.Записать();
	
	Если ДанныеЖурнала[0].ВидЖурнала = Перечисления.ТТС_ВидыЖурналовТУ.Журнал1 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТТС_ЖурналыТУ.ВнутреннийДокумент,
		               |	Ж1.Направление,
		               |	Ж1.Машинист,
		               |	Ж1.НомерСкоростемера,
		               |	Ж1.ДатаПоездки,
		               |	Ж1.НомерМаршрута,
		               |	Ж1.СерияЛокомотива,
		               |	Ж1.НомерЛокомотива,
		               |	Ж1.НомерПоезда,
		               |	Ж1.СтанцияОтправления,
		               |	Ж1.СтанцияПрибытия,
		               |	Ж1.ЭДТ
		               |ИЗ
		               |	РегистрСведений.ТТС_ЖурналыТУ КАК ТТС_ЖурналыТУ
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТТС_ЖурналыТУ КАК Ж1
		               |		ПО ТТС_ЖурналыТУ.ИДСтроки = Ж1.ИДСтроки
		               |ГДЕ
		               |	ТТС_ЖурналыТУ.ИДСтроки В(&СтрокиОснования)
		               |	И НЕ ТТС_ЖурналыТУ.ВидЖурнала = ЗНАЧЕНИЕ(Перечисление.ТТС_ВидыЖурналовТУ.Журнал1)
		               |	И Ж1.ВидЖурнала = ЗНАЧЕНИЕ(Перечисление.ТТС_ВидыЖурналовТУ.Журнал1)";
		Запрос.УстановитьПараметр("СтрокиОснования",ДанныеЖурнала.ВыгрузитьКолонку("ИДСтроки"));
		ЖурналыВыборка = Запрос.Выполнить().Выбрать();
		СвойстваЖурнала1 = "Направление, 
							|Машинист, 
							|НомерСкоростемера, 
							|ДатаПоездки,
							|НомерМаршрута,
							|СерияЛокомотива, 
							|НомерЛокомотива, 
							|НомерПоезда, 
							|СтанцияОтправления, 
							|СтанцияПрибытия,
							|ЭДТ";
							
		НаборДанныеЖурнала = РегистрыСведений.ТТС_ЖурналыТУ.СоздатьНаборЗаписей();
		Пока ЖурналыВыборка.Следующий() Цикл
			НаборДанныеЖурнала.Отбор.ВнутреннийДокумент.Установить(ЖурналыВыборка.ВнутреннийДокумент);
			НаборДанныеЖурнала.Прочитать();                           
			ЗаполнитьЗначенияСвойств(НаборДанныеЖурнала[0],ЖурналыВыборка,СвойстваЖурнала1);
			НаборДанныеЖурнала.Записать();
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОчиститьДанныеЖурнала(Объект) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	НаборДанныеЖурнала = РегистрыСведений.ТТС_ЖурналыТУ.СоздатьНаборЗаписей();
	НаборДанныеЖурнала.Отбор.ВнутреннийДокумент.Установить(Объект.Ссылка);
	НаборДанныеЖурнала.Прочитать();
	НаборДанныеЖурнала.Очистить();
	НаборДанныеЖурнала.Записать();
КонецПроцедуры

Процедура УстановитьСнятьПометкуУдаления(Объект,ПометкаУдаления) Экспорт
	НаборДанныеЖурнала = РегистрыСведений.ТТС_ЖурналыТУ.СоздатьНаборЗаписей();
	НаборДанныеЖурнала.Отбор.ВнутреннийДокумент.Установить(Объект.Ссылка);
	НаборДанныеЖурнала.Прочитать();
	Для Каждого Запись Из НаборДанныеЖурнала Цикл
		Запись.ПометкаУдаления = ПометкаУдаления;
	КонецЦикла;
	НаборДанныеЖурнала.Записать();
КонецПроцедуры


#КонецОбласти

#КонецЕсли