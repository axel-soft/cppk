#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет является ли пользователь пользователем моб. клиента.
// 
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи, Неопределено - Пользователь
// Возвращаемое значение:
// 	Булево - Истина, если является, иначе - Ложь.
// 
Функция ЭтоПользовательМК(Пользователь = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Пользователь = Неопределено Тогда
		Пользователь = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	МК_СведенияОМобильныхОнлайнКлиентах.Пользователь
		|ИЗ
		|	РегистрСведений.МК_СведенияОМобильныхОнлайнКлиентах КАК МК_СведенияОМобильныхОнлайнКлиентах
		|ГДЕ
		|	МК_СведенияОМобильныхОнлайнКлиентах.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

// Удаляет порцию устаревших данных.
// 
// Возвращаемое значение:
// 	Булево - Истина, если были найдены устаревшие данные, в противном случае Ложь.
// 
Функция УдалитьПорциюУстаревшихДанных() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	СведенияОМобильныхОнлайнКлиентах.Пользователь КАК Пользователь,
		|	СведенияОМобильныхОнлайнКлиентах.ИдентификаторКлиента КАК ИдентификаторКлиента,
		|	СведенияОМобильныхОнлайнКлиентах.ДатаПоследнегоВхода КАК ДатаПоследнегоВхода
		|ИЗ
		|	РегистрСведений.МК_СведенияОМобильныхОнлайнКлиентах КАК СведенияОМобильныхОнлайнКлиентах		
		|ГДЕ
		|	СведенияОМобильныхОнлайнКлиентах.ДатаПоследнегоВхода <> ДАТАВРЕМЯ(1,1,1)
		|	И РАЗНОСТЬДАТ(СведенияОМобильныхОнлайнКлиентах.ДатаПоследнегоВхода, &ТекущаяДата, МЕСЯЦ) > 1
		|
		|УПОРЯДОЧИТЬ ПО
		|	Пользователь,
		|	ДатаПоследнегоВхода");
			
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	Результат = Запрос.Выполнить();
	ЕстьДанныеКУдалению = Не Результат.Пустой();
	
	Если Не ЕстьДанныеКУдалению Тогда
		Возврат ложь;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИдентификаторКлиента.Установить(Выборка.ИдентификаторКлиента);
		НаборЗаписей.Отбор.Пользователь.Установить(Выборка.Пользователь);
		НаборЗаписей.Записать();
	КонецЦикла;

	ЗаписьЖурналаРегистрации(
		НСтр("ru='Удаление устаревших данных'", ОбщегоНазначения.КодОсновногоЯзыка()), 
		УровеньЖурналаРегистрации.Информация,
		Метаданные.РегистрыСведений.МК_СведенияОМобильныхОнлайнКлиентах,, 
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедура завершена успешно, обработано %1 записей'"), Выборка.Количество()));
	
	Возврат ЕстьДанныеКУдалению;
	
КонецФункции

// Устанавливает ошибку отправки уведомлений на мобильный клиент.
// Принимает параметры для определения необходимой записи в РС.
// 
// Параметры:
// Пользователь - СправочникСсылка.Пользователи.
// ИдентификаторКлиента - УникальныйИдентификатор.
// 
Процедура УстановитьОшибкуОтправкиУведомлений(Пользователь, ИдентификаторКлиента) Экспорт
	
	НачатьТранзакцию();
		
	Попытка
			
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.МК_СведенияОМобильныхОнлайнКлиентах");
		ЭлементБлокировки.УстановитьЗначение("Пользователь", Пользователь);
		ЭлементБлокировки.УстановитьЗначение("ИдентификаторКлиента", ИдентификаторКлиента);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();

		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Пользователь.Установить(Пользователь);
		НаборЗаписей.Отбор.ИдентификаторКлиента.Установить(ИдентификаторКлиента);
		НаборЗаписей.Прочитать();
			
		Если НаборЗаписей.Количество() Тогда
			Запись = НаборЗаписей[0];
			Запись.ИдентификаторПодписчикаУстановлен = Ложь;
			НаборЗаписей.Записать();
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
			
	Исключение
		
		ОтменитьТранзакцию();

		ИмяСобытия = МК_КлиентСервер.ИмяСобытияPushУведомления();
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,
					, , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
							
		ВызватьИсключение;
			
	КонецПопытки;
	
КонецПроцедуры


// Делает новую запись в регистр сведений МК_СведенияОМобильныхОнлайнКлиентах.
//
// Параметры:
//  СведенияОКлиенте - Структура - Сведения о мобильном клиенте для записи в регистр сведений.
//
Процедура ЗаписатьСведенияОКлиенте(СведенияОКлиенте = Неопределено) Экспорт
	
	НачатьТранзакцию();
		
	Попытка
		
		Если СведенияОКлиенте = Неопределено Тогда
			СведенияОКлиенте = МК_ПовтИсп.СведенияОКлиенте();
		КонецЕсли;
		
		ТекущийПользователь = Пользователи.ТекущийПользователь();
		ИдентификаторКлиента = СведенияОКлиенте.ИдентификаторКлиента;
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.МК_СведенияОМобильныхОнлайнКлиентах");
		ЭлементБлокировки.УстановитьЗначение("Пользователь", ТекущийПользователь);
		ЭлементБлокировки.УстановитьЗначение("ИдентификаторКлиента", ИдентификаторКлиента);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();

		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Пользователь.Установить(ТекущийПользователь);
		НаборЗаписей.Отбор.ИдентификаторКлиента.Установить(ИдентификаторКлиента);
		
		ЗаписьСведенийОМобильномКлиенте = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(ЗаписьСведенийОМобильномКлиенте, СведенияОКлиенте);
		
		ЗаписьСведенийОМобильномКлиенте.Версия = СведенияОКлиенте.ВерсияПриложенияКлиента;
		
		ИдентификаторПодписчикаУведомленияЗаполнен =
			(СведенияОКлиенте.ИдентификаторПодписчикаУведомления <> Неопределено);
		
		Если ИдентификаторПодписчикаУведомленияЗаполнен Тогда
			ЗаписьСведенийОМобильномКлиенте.ИдентификаторПодписчикаУведомления = Новый ХранилищеЗначения(
				СведенияОКлиенте.ИдентификаторПодписчикаУведомления, Новый СжатиеДанных());
		КонецЕсли;
		ЗаписьСведенийОМобильномКлиенте.ИдентификаторПодписчикаУстановлен = ИдентификаторПодписчикаУведомленияЗаполнен;
		
		ЗаписьСведенийОМобильномКлиенте.Пользователь = ТекущийПользователь;
		
		ЗаписьСведенийОМобильномКлиенте.ДатаПоследнегоВхода = ТекущаяДатаСеанса();
		
		Если ЗначениеЗаполнено(СведенияОКлиенте.ВерсияОСКлиента)
			И ЗначениеЗаполнено(СведенияОКлиенте.ОперативнаяПамятьКлиента) Тогда
			
			ОперативнаяПамять = СведенияОКлиенте.ОперативнаяПамятьКлиента;
			СведенияОКлиенте = СтрШаблон("%1 (OS), %2 (MB), %3 (ID)",
				СведенияОКлиенте.ВерсияОСКлиента,
				ОперативнаяПамять,
				СведенияОКлиенте.ИдентификаторКлиента);
		Иначе
			СведенияОКлиенте = СведенияОКлиенте.ИдентификаторКлиента;
		КонецЕсли;
		
		ЗаписьСведенийОМобильномКлиенте.СведенияОКлиенте = СведенияОКлиенте;
		
		НаборЗаписей.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();

		ИмяСобытия = НСтр("ru='Не удалось записать сведения о мобильном клиенте'",
			ОбщегоНазначения.КодОсновногоЯзыка());
		
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,
			, , ОписаниеОшибки());
		ВызватьИсключение;
			
	КонецПопытки;
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли
