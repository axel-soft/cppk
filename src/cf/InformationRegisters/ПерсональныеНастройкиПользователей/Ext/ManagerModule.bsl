#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура добавляет запись в регистр
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи.               
//  КлючОбъекта -Строка
//  КлючНастроек -Строка
//  НастройкаЗначение - произвольное значение
Процедура ДобавитьЗапись(Пользователь, КлючОбъекта, КлючНастроек, НастройкаЗначение) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Пользователь = Пользователь;
	МенеджерЗаписи.КлючОбъекта = КлючОбъекта;
	МенеджерЗаписи.КлючНастроек = КлючНастроек;
	МенеджерЗаписи.Настройка = Новый ХранилищеЗначения(НастройкаЗначение);
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Процедура пишет в хранилище настроек
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи.               
//  КлючОбъекта -Строка
//  КлючНастроек -Строка
//  НастройкаХранилище - ХранилищеЗначения
Процедура ЗаписатьВХранилище(Пользователь, КлючОбъекта, КлючНастроек, НастройкаХранилище) Экспорт  
	
	ИдентификаторПользователяИБ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователь, "ИдентификаторПользователяИБ");
	
	Если ЗначениеЗаполнено(ИдентификаторПользователяИБ) Тогда
		СвойстваПользователяИБ = Пользователи.СвойстваПользователяИБ(ИдентификаторПользователяИБ);
		
		Если СвойстваПользователяИБ <> Неопределено Тогда
			
			Имя = СвойстваПользователяИБ.Имя;  
			НастройкаЗначение = НастройкаХранилище.Получить(); 
		
			ХранилищеОбщихНастроек.Сохранить(КлючОбъекта, КлючНастроек, НастройкаЗначение, , Имя);
		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция СписокНастроек(ИмяПользователяИБ, МенеджерНастроек) Экспорт
	
	ТаблицаНастроек = Новый ТаблицаЗначений;
	ТаблицаНастроек.Колонки.Добавить("КлючОбъекта");
	ТаблицаНастроек.Колонки.Добавить("КлючНастроек");
	
	Отбор = Новый Структура;
	Отбор.Вставить("Пользователь", ИмяПользователяИБ);
	
	ВыборкаНастроек = МенеджерНастроек.Выбрать(Отбор);
	Пропустить = Ложь;
	Пока СледующаяНастройка(ВыборкаНастроек, Пропустить) Цикл
		
		Если Пропустить Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаНастроек.Добавить();
		НоваяСтрока.КлючОбъекта = ВыборкаНастроек.КлючОбъекта;
		НоваяСтрока.КлючНастроек = ВыборкаНастроек.КлючНастроек;
	КонецЦикла;
	
	Возврат ТаблицаНастроек;
	
КонецФункции

Функция СледующаяНастройка(ВыборкаНастроек, Пропустить) 
	
	Попытка 
		Пропустить = Ложь;
		Возврат ВыборкаНастроек.Следующий();
	Исключение
		Пропустить = Истина;
		Возврат Истина;
	КонецПопытки;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеКэширующихДанных

// Обрабатывает обновление кэширующих данных.
// 
// Параметры:
//  Выборка - ВыборкаИзРезультатаЗапроса - Выборка из очереди обновления кэширующих данных:
//   * ОтметкаВремени - ОпределяемыйТип.ОтметкаВремени.
//   * ЗависимыйОбъектМетаданных - СправочникСсылка.ИдентификаторыОбъектовМетаданных.
//   * ВлияющийОбъектМетаданных - СправочникСсылка.ИдентификаторыОбъектовМетаданных.
//   * КлючВлияющихДанных - ЛюбаяСсылка.
//   * Автор - СправочникСсылка.Пользователи.
//   * ЗагрузкаОбработанныхДанныхИзДругойСистемы - Булево.
//   * ИзмененияВлияющихДанных - ХранилищеЗначения.
//   * Попыток - Число.
//   * ДатаКОбработке - Дата.
// 
Процедура ОбновитьКэширующиеДанные(Выборка) Экспорт
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Запрос = Новый Запрос;	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ПерсональныеНастройкиПользователя.Пользователь КАК Пользователь
	               |ПОМЕСТИТЬ ПерсональныеНастройкиПользователя
	               |ИЗ
	               |	РегистрСведений.ПерсональныеНастройкиПользователей КАК ПерсональныеНастройкиПользователя
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ 
	               |	Пользователи.Ссылка КАК Ссылка,
	               |	Пользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ,
	               |	Пользователи.Наименование КАК Наименование
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПерсональныеНастройкиПользователя КАК ПерсональныеНастройкиПользователя
	               |		ПО (ПерсональныеНастройкиПользователя.Пользователь = Пользователи.Ссылка)
	               |ГДЕ
	               |	ПерсональныеНастройкиПользователя.Пользователь ЕСТЬ NULL
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Наименование";
	
	ВыборкаНастройки = Запрос.Выполнить().Выбрать();
	Пока ВыборкаНастройки.Следующий() Цикл                   
		
		Пользователь = ВыборкаНастройки.Ссылка;
		
		Попытка
			СвойстваПользователяИБ = Пользователи.СвойстваПользователяИБ(ВыборкаНастройки.ИдентификаторПользователяИБ);
			
			Если СвойстваПользователяИБ <> Неопределено Тогда
				
				ИмяПользователяИсточник = СвойстваПользователяИБ.Имя;    
				
				МенеджерНастроек = ХранилищеОбщихНастроек;
				
				ТаблицаНастроек = СписокНастроек(ИмяПользователяИсточник, МенеджерНастроек);
				
				Если ТаблицаНастроек.Количество() <> 0 Тогда
					
					Для Каждого Настройка Из ТаблицаНастроек Цикл
						КлючОбъекта = Настройка.КлючОбъекта;
						КлючНастроек = Настройка.КлючНастроек;
						Значение = МенеджерНастроек.Загрузить(КлючОбъекта, КлючНастроек, , ИмяПользователяИсточник);
						
						РегистрыСведений.ПерсональныеНастройкиПользователей.ДобавитьЗапись(
							Пользователь, КлючОбъекта, КлючНастроек, Значение);
							
					КонецЦикла;  
					
				Иначе		

					РегистрыСведений.ПерсональныеНастройкиПользователей.ДобавитьЗапись(
						Пользователь, "ПустаяЗапись", "", Истина);
				
				КонецЕсли;	
					
			Иначе		

				РегистрыСведений.ПерсональныеНастройкиПользователей.ДобавитьЗапись(
					Пользователь, "ПустаяЗапись", "", Истина);
				
			КонецЕсли;	
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
		
		Исключение          
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось заполнить перс настройки пользователя ""%1""
					|по причине:
					|%2'"),
				Пользователь,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())); 
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Пользователь.Метаданные(),
				Пользователь,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли