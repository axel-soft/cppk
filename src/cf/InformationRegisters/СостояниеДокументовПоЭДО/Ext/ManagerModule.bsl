#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Новые данные состояния для добавления.
// 
// Возвращаемое значение:
//  Структура:
//   * Состояние - ПеречислениеСсылка.СостоянияЭДОДокументооборот - Устанавливаемое состояние
//   * Направление - Неопределено, ПеречислениеСсылка.НаправленияЭДО - Направление обмена ЭДО входящий/исходящий.
//                                                       Если Неопределено, то будет сохранено предыдущее направление
//   * Комментарий - Строка - Комментарий к установке состояния
//   * УчетнаяЗаписьЭДО - Неопределено, Строка - Идентификатор ЭДО учетной записи с которой будет отправлен документ
//                                 Если Неопределено, то будет сохранена предыдущая учтеная запись
//
Функция НовыеДанныеСостоянияДляДобавления() Экспорт
	
	ДанныеСостояния = Новый Структура;
	ДанныеСостояния.Вставить("Состояние", Перечисления.СостоянияЭДОДокументооборот.ПустаяСсылка());
	ДанныеСостояния.Вставить("Направление", Неопределено);
	ДанныеСостояния.Вставить("Комментарий", "");
	ДанныеСостояния.Вставить("УчетнаяЗаписьЭДО", "");
	
	Возврат ДанныеСостояния;
	
КонецФункции

// Добавляет запись в регистр СостояниеДокументовПоЭДО.
//
// Параметры:
//  Документ - ОпределяемыйТип.ДокументДОДляЭДО - Документ 1С:Документооборот.
//  Контрагент - СправочникСсылка.Контрагенты - Контрагент, с которым ведется ЭДО.
//  ДанныеСостояния см. НовыеДанныеСостоянияДляДобавления
//
Процедура Добавить(Документ, Контрагент, ДанныеСостояния) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СостояниеДокументовПоЭДО");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("ДокументДО", Документ);
		ЭлементБлокировки.УстановитьЗначение("Контрагент", Контрагент);
		Блокировка.Заблокировать();
		
		Период = ТекущаяДатаСеанса();
		СостояниеДокумента = ПолучитьСостояниеДокумента(Документ, Период, Контрагент);
		
		МенеджерЗаписи = СоздатьМенеджерЗаписи();
		
		МенеджерЗаписи.Период = Период;
		МенеджерЗаписи.ДокументДО = Документ;
		МенеджерЗаписи.Контрагент = Контрагент;
		
		МенеджерЗаписи.СостояниеВерсииДокументаПоЭДО = ДанныеСостояния.Состояние;
		МенеджерЗаписи.Комментарий = ДанныеСостояния.Комментарий;
		
		Если ДанныеСостояния.Направление <> Неопределено Тогда
			МенеджерЗаписи.НаправлениеЭД = ДанныеСостояния.Направление;
		Иначе
			МенеджерЗаписи.НаправлениеЭД = СостояниеДокумента.Направление;
		КонецЕсли;
		
		Если ДанныеСостояния.УчетнаяЗаписьЭДО <> Неопределено Тогда
			МенеджерЗаписи.УчетнаяЗаписьЭДО = ДанныеСостояния.УчетнаяЗаписьЭДО;
		Иначе
			МенеджерЗаписи.УчетнаяЗаписьЭДО = ДанныеСостояния.УчетнаяЗаписьЭДО;
		КонецЕсли;
		
		МенеджерЗаписи.Записать();
		
		ЗарегистрироватьИзменениеСостоянияДокументаПоЭДО(
			МенеджерЗаписи.ДокументДО,
			МенеджерЗаписи.Контрагент,
			МенеджерЗаписи.НаправлениеЭД,
			СостояниеДокумента.Состояние,
			МенеджерЗаписи.СостояниеВерсииДокументаПоЭДО);
		
		Делопроизводство.ЗаписатьДанныеДокумента(Документ, "СостояниеЭДО", ДанныеСостояния.Состояние);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Удаляет записи из регистра СостояниеДокументовПоЭДО.
//
// Параметры:
//  Документ - ОпределяемыйТип.ДокументДОДляЭДО - Документ 1С:Документооборот.
//
Процедура Удалить(Документ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СостояниеДокументовПоЭДО");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("ДокументДО", Документ);
		Блокировка.Заблокировать();
		
		СостояниеДокумента = ПолучитьСостояниеДокумента(Документ, Неопределено, Неопределено);
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ДокументДО.Установить(Документ);
		НаборЗаписей.Записать();
		
		ЗарегистрироватьИзменениеСостоянияДокументаПоЭДО(
			Документ,
			СостояниеДокумента.Контрагент,
			СостояниеДокумента.Направление,
			СостояниеДокумента.Состояние,
			Перечисления.СостоянияЭДОДокументооборот.ПустаяСсылка());
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Возвращает состояние документа в ЭДО.
//
// Параметры:
//  Документ - ОпределяемыйТип.ДокументДОДляЭДО, ОпределяемыйТип.ДокументДООбъектДляЭДО - 
//                                   Документ 1С:Документооборот, для которого необходимо получить состояние.
//  Дата - Дата - Дата, на которую необходимо получить состояние.
//  Контрагент - СправочникСсылка.Контрагенты - Контрагент, для которого необходимо получить состояние.
// 
// Возвращаемое значение:
//  Структура:
//    * Дата - Дата - Дата установки состояния
//    * Состояние - ПеречислениеСсылка.СостоянияЭДОДокументооборот - Состояние документа в ЭДО
//    * Направление - ПеречислениеСсылка.НаправленияЭДО - Направление документа (входящий / исходящий)
//    * Комментарий - Строка - Комментарий
//    * Контрагент - СправочникСсылка.Контрагенты - Контрагент
//    * УчетнаяЗаписьЭДО - Строка - Идентификатор ЭДО учетной записи
//
Функция ПолучитьСостояниеДокумента(Документ, Дата = Неопределено, Контрагент = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеСостояния = Новый Структура;
	ДанныеСостояния.Вставить("Дата", Дата(1, 1, 1));
	ДанныеСостояния.Вставить("Состояние", Перечисления.СостоянияЭДОДокументооборот.ПустаяСсылка());
	ДанныеСостояния.Вставить("Направление", Перечисления.НаправленияЭДО.ПустаяСсылка());
	ДанныеСостояния.Вставить("Комментарий", "");
	ДанныеСостояния.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	ДанныеСостояния.Вставить("УчетнаяЗаписьЭДО", "");
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	СостояниеДокументовПоЭДО.Период КАК Дата,
		|	СостояниеДокументовПоЭДО.СостояниеВерсииДокументаПоЭДО КАК Состояние,
		|	СостояниеДокументовПоЭДО.Контрагент КАК Контрагент,
		|	СостояниеДокументовПоЭДО.НаправлениеЭД КАК Направление,
		|	СостояниеДокументовПоЭДО.Комментарий КАК Комментарий,
		|	СостояниеДокументовПоЭДО.УчетнаяЗаписьЭДО КАК УчетнаяЗаписьЭДО
		|ИЗ
		|	РегистрСведений.СостояниеДокументовПоЭДО.СрезПоследних(&Дата, ДокументДО = &Документ
		|	И &ОтборКонтрагента) КАК СостояниеДокументовПоЭДО";
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборКонтрагента", "Контрагент = &Контрагент");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборКонтрагента", "ИСТИНА");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Дата", ?(Не ЗначениеЗаполнено(Дата), ТекущаяДатаСеанса(), Дата));
	Запрос.УстановитьПараметр("Документ", ?(ОбщегоНазначения.ЗначениеСсылочногоТипа(Документ), Документ, Документ.Ссылка));
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(ДанныеСостояния, Выборка);
	КонецЕсли;
	
	Возврат ДанныеСостояния;
	
КонецФункции

// Возвращает состояние версии документа ДО по ЭДО.
//
// Параметры:
//  Документ - ОпределяемыйТип.ДокументДОДляЭДО, ОпределяемыйТип.ДокументДООбъектДляЭДО - 
//			   Документ, для которого необходимо получить состояние.
//  Контрагент - СправочникСсылка.Контрагенты - Контрагент по ЭДО.
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.СостоянияЭДОДокументооборот - Cостояние версии документа ДО по ЭДО.
//
Функция ДанныеСостоянияДокументаПоЭДО(Документ, Контрагент = Неопределено, НаДату = Неопределено, НаправлениеЭД = Неопределено) Экспорт
	
	СостояниеДокумента = ПолучитьСостояниеДокумента(Документ, НаДату, Контрагент);	
	
	НаДату = СостояниеДокумента.Дата;
	НаправлениеЭД = СостояниеДокумента.Направление;
	
	Возврат СостояниеДокумента.Состояние;
	
КонецФункции

#Область ОбработкаОбновления

Процедура УстановитьСтатусПодписанДляИсходящихДокументовЭДО(Параметры) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СостояниеДокументовПоЭДОСрезПоследних.ДокументДО,
			|	СостояниеДокументовПоЭДОСрезПоследних.Контрагент
			|ИЗ
			|	РегистрСведений.СостояниеДокументовПоЭДО.СрезПоследних КАК СостояниеДокументовПоЭДОСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеФайлыДокументов КАК СлужебныеФайлыДокументов
			|			ПО Файлы.Ссылка = СлужебныеФайлыДокументов.Файл
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыУчетаДокументовЭДО КАК ОбъектыУчетаДокументовЭДО
			|			ПО (Файлы.ТекущаяВерсия = ОбъектыУчетаДокументовЭДО.ОбъектУчета
			|			И ОбъектыУчетаДокументовЭДО.Актуальный)
			|		ПО СостояниеДокументовПоЭДОСрезПоследних.ДокументДО = Файлы.ВладелецФайла
			|ГДЕ
			|	СостояниеДокументовПоЭДОСрезПоследних.СостояниеВерсииДокументаПоЭДО = ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ПоставленВОчередьНаОтправку)
			|	И СостояниеДокументовПоЭДОСрезПоследних.НаправлениеЭД = ЗНАЧЕНИЕ(Перечисление.НаправленияЭДО.Исходящий)
			|	И СлужебныеФайлыДокументов.Файл ЕСТЬ NULL
			|	И ОбъектыУчетаДокументовЭДО.ОбъектУчета ЕСТЬ NULL";
		
		ВсегоОбъектов = 0;
		Выборка = Запрос.Выполнить().Выбрать();
		ВсегоОбъектов = ВсегоОбъектов + Выборка.Количество();
		
		Параметры.ПрогрессВыполнения.ВсегоОбъектов = ВсегоОбъектов;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	СостояниеДокументовПоЭДОСрезПоследних.ДокументДО,
		|	СостояниеДокументовПоЭДОСрезПоследних.Контрагент,
		|	СостояниеДокументовПоЭДОСрезПоследних.НаправлениеЭД
		|ИЗ
		|	РегистрСведений.СостояниеДокументовПоЭДО.СрезПоследних КАК СостояниеДокументовПоЭДОСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеФайлыДокументов КАК СлужебныеФайлыДокументов
		|			ПО Файлы.Ссылка = СлужебныеФайлыДокументов.Файл
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыУчетаДокументовЭДО КАК ОбъектыУчетаДокументовЭДО
		|			ПО (Файлы.ТекущаяВерсия = ОбъектыУчетаДокументовЭДО.ОбъектУчета
		|			И ОбъектыУчетаДокументовЭДО.Актуальный)
		|		ПО СостояниеДокументовПоЭДОСрезПоследних.ДокументДО = Файлы.ВладелецФайла
		|ГДЕ
		|	СостояниеДокументовПоЭДОСрезПоследних.СостояниеВерсииДокументаПоЭДО = ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ПоставленВОчередьНаОтправку)
		|	И СостояниеДокументовПоЭДОСрезПоследних.НаправлениеЭД = ЗНАЧЕНИЕ(Перечисление.НаправленияЭДО.Исходящий)
		|	И СлужебныеФайлыДокументов.Файл ЕСТЬ NULL
		|	И ОбъектыУчетаДокументовЭДО.ОбъектУчета ЕСТЬ NULL";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			ДанныеСостояния = ОбменСКонтрагентамиДОСлужебный.НовыеДанныеСостоянияДляУстановки();
			ДанныеСостояния.Состояние = Перечисления.СостоянияЭДОДокументооборот.Подписан;
			
			ОбменСКонтрагентамиДОСлужебный.УстановитьСостояниеДокументаЭДО(
				Выборка.ДокументДО,
				Выборка.Контрагент,
				ДанныеСостояния);
		Исключение
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				СтрШаблон(НСтр("ru = 'Не удалось установить документу %1 сосотояние ЭДО ""Подписан"" по причине:
						|%2'"),
					Выборка.ДокументДО,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + Выборка.Количество();
	
	Параметры.ОбработкаЗавершена = Выборка.Количество() = 0;
	
КонецПроцедуры

// Устанавливает состояние "Удалено" в РС СостояниеДокументовПоЭДО для бумажных документов, которые еще не сформированы
// 
// Параметры:
//  Параметры - Структура - Параметры обработчика
Процедура УдалитьСостояниеЭДОБумажныхДокументовПриОбновлении(Параметры) Экспорт
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(ДокументыДО.Ссылка) КАК КолвоДействий
			|ИЗ
			|	РегистрСведений.СостояниеДокументовПоЭДО.СрезПоследних(,) КАК СостояниеДокументовПоЭДОСрезПоследних
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.%ИмяСправочникаДокументаДО% КАК ДокументыДО
			|		ПО СостояниеДокументовПоЭДОСрезПоследних.ДокументДО = ДокументыДО.Ссылка
			|		И ДокументыДО.ФормаДокумента = ЗНАЧЕНИЕ(Перечисление.ВариантыФормДокументов.Бумажная)
			|		И СостояниеВерсииДокументаПоЭДО = ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.НеСформирован)";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"%ИмяСправочникаДокументаДО%",
			ОбменСКонтрагентамиДОСлужебныйКлиентСервер.ИмяСправочникаДокументовДО());
		
		// Используем ВТ без параметров т.к. условие ставится на ресурс. Иначе построить запрос не выйдет
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
			
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Параметры.ПрогрессВыполнения.ВсегоОбъектов = Выборка.КолвоДействий;
		КонецЕсли;
		
	КонецЕсли;
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДокументыДО.Ссылка КАК Ссылка
		|ИЗ
		|	РегистрСведений.СостояниеДокументовПоЭДО.СрезПоследних(,) КАК СостояниеДокументовПоЭДОСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.%ИмяСправочникаДокументаДО% КАК ДокументыДО
		|		ПО СостояниеДокументовПоЭДОСрезПоследних.ДокументДО = ДокументыДО.Ссылка
		|		И ДокументыДО.ФормаДокумента = ЗНАЧЕНИЕ(Перечисление.ВариантыФормДокументов.Бумажная)
		|		И СостояниеВерсииДокументаПоЭДО = ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.НеСформирован)";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"%ИмяСправочникаДокументаДО%",
		ОбменСКонтрагентамиДОСлужебныйКлиентСервер.ИмяСправочникаДокументовДО());
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			ДокументДО = Выборка.Ссылка;
			СостояниеЗаписанное = ОбменСКонтрагентамиДОСлужебный.СостояниеДокумента(ДокументДО);
			ДанныеСостояния = ОбменСКонтрагентамиДОСлужебный.НовыеДанныеСостоянияДляУстановки();
			ДанныеСостояния.Состояние = Перечисления.СостоянияЭДОДокументооборот.ПустаяСсылка();
			ДанныеСостояния.Направление = Перечисления.НаправленияЭДО.Исходящий;
			ДанныеСостояния.Комментарий = НСтр("ru = 'Удалено состояние ЭДО, поскольку это бумажный документ.'");
			ДанныеСостояния.УчетнаяЗаписьЭДО = "";
			ОбменСКонтрагентамиДОСлужебный.УстановитьСостояниеДокументаЭДО(ДокументДО, 
			СостояниеЗаписанное.Контрагент, ДанныеСостояния);
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			СтекОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось удалить статус ЭДО в регистре сведений ""%1"",
					|для документа %2, по причине:
					|%3'"),
				"СостояниеДокументовПоЭДО", Выборка.Ссылка, СтекОшибки); 
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Ссылка.Метаданные(),
				Выборка.Ссылка,
				ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Процедуре %1 не удалось записать РС ""%2"" для некоторых объектов (пропущены): %3'"),
			"ПерейтиНаВерсию_3_0_12_14",
			"СостояниеДокументовПоЭДО",
			ПроблемныхОбъектов);
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = ОбработаноОбъектов = 0;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Регистрирует бизнес-событие "Изменение состояния документа по ЭДО".
//
// Параметры:
//  Документ           - ОпределяемыйТип.ДокументДОДляЭДО   - Документ 1С:Документооборот.
//  Контрагент         - СправочникСсылка.Контрагенты           - Контрагент, с которым ведется ЭДО.
//  НаправлениеЭД      - ПеречислениеСсылка.НаправленияЭДО       - Направление электронного документа.
//  СтароеСостояниеЭДО - ПеречислениеСсылка.СостоянияЭДОДокументооборот - Старое состояние ЭДО.
//  НовоеСостояниеЭДО  - ПеречислениеСсылка.СостоянияЭДОДокументооборот - Новое состояние ЭДО.
//
Процедура ЗарегистрироватьИзменениеСостоянияДокументаПоЭДО(Документ, Контрагент, НаправлениеЭД, СтароеСостояниеЭДО, НовоеСостояниеЭДО)
	
	Если СтароеСостояниеЭДО = НовоеСостояниеЭДО Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеИзмененияСостоянияЭДО = Новый Структура("Контрагент, НаправлениеЭД, СтароеСостояниеЭДО, НовоеСостояниеЭДО");
	ДанныеИзмененияСостоянияЭДО.Контрагент = Контрагент;
	ДанныеИзмененияСостоянияЭДО.НаправлениеЭД = НаправлениеЭД;
	ДанныеИзмененияСостоянияЭДО.СтароеСостояниеЭДО = СтароеСостояниеЭДО;
	ДанныеИзмененияСостоянияЭДО.НовоеСостояниеЭДО = НовоеСостояниеЭДО;
	
	БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(
		Документ,
		Справочники.ВидыБизнесСобытий.ИзменениеСостоянияДокументаПоЭДО,
		Новый ХранилищеЗначения(ДанныеИзмененияСостоянияЭДО));
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли