#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ВидимостьКомандыСравнить = 
		Не ОбщегоНазначения.ЭтоLinuxКлиент() И Не ОбщегоНазначения.ЭтоВебКлиент();
	Элементы.ФормаСравнить.Видимость = ВидимостьКомандыСравнить;
	
	ЗаполнитьДеревоВерсий(Параметры.ВизаСогласования);
	
	УчастникиВизы = Справочники.ВизыСогласования.УчастникиВизыСогласования(Параметры.ВизаСогласования);
	Если ЗначениеЗаполнено(УчастникиВизы.Исполнитель) Тогда
		Согласующий = УчастникиВизы.Исполнитель;
	Иначе
		Согласующий = УчастникиВизы.РольИсполнителя;
	КонецЕсли;
	Заголовок = СтрШаблон(НСтр("ru = 'Согласованные версии файлов: %1'"),
		Согласующий);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ДеревоВерсий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	РаботаСФормамиСравненияВерсийКлиент.ОткрытьВерсиюНаКлиенте(ЭтаФорма, ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ДеревоВерсий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	 
	ПоказатьЗначение(, ТекущиеДанные.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьКарточкуВерсии(Команда)
	
	ТекущиеДанные = Элементы.ДеревоВерсий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	 
	ПоказатьЗначение(, ТекущиеДанные.Ссылка);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВерсию(Команда)
	
	ТекущиеДанные = Элементы.ДеревоВерсий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	РаботаСФормамиСравненияВерсийКлиент.ОткрытьВерсиюНаКлиенте(ЭтаФорма, ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Сравнить(Команда)
	
	РаботаСФормамиСравненияВерсийКлиент.СравнитьВерсииФайловВДереве(ЭтаФорма, ДеревоВерсий);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДеревоВерсий(ВизаСогласования)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументыПредприятия.Ссылка КАК ДокументПредприятия
	|ПОМЕСТИТЬ ДокументПоВизе
	|ИЗ
	|	Справочник.ДокументыПредприятия КАК ДокументыПредприятия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВизыСогласования КАК ВизыСогласования
	|		ПО (ВизыСогласования.Документ = ДокументыПредприятия.Ссылка)
	|ГДЕ
	|	ВизыСогласования.Ссылка = &ВизаСогласования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВерсииСогласованныхФайлов.ВерсияФайла КАК ВерсияФайла,
	|	ВерсииСогласованныхФайлов.Файл КАК Файл
	|ПОМЕСТИТЬ ВерсииСогласованныхФайловВизы
	|ИЗ
	|	РегистрСведений.ВерсииСогласованныхФайлов КАК ВерсииСогласованныхФайлов
	|ГДЕ
	|	ВерсииСогласованныхФайлов.ВизаСогласования = &ВизаСогласования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВерсииФайлов.Ссылка КАК ВерсияФайла,
	|	ИСТИНА КАК ФайлБылПриСогласовании
	|ПОМЕСТИТЬ ВсеВерсииФайловВизы
	|ИЗ
	|	ВерсииСогласованныхФайловВизы КАК ВерсииСогласованныхФайловВизы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВерсииФайлов КАК ВерсииФайлов
	|		ПО (ВерсииФайлов.Ссылка = ВерсииСогласованныхФайловВизы.ВерсияФайла)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Файлы.ТекущаяВерсия,
	|	ИСТИНА
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВерсииСогласованныхФайловВизы КАК ВерсииСогласованныхФайловВизы
	|		ПО Файлы.Ссылка = ВерсииСогласованныхФайловВизы.Файл
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Файлы.ТекущаяВерсия,
	|	ЛОЖЬ
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументПоВизе КАК ДокументПоВизе
	|		ПО (ДокументПоВизе.ДокументПредприятия = Файлы.ВладелецФайла)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВерсииСогласованныхФайловВизы КАК ВерсииСогласованныхФайловВизы
	|		ПО Файлы.Ссылка = ВерсииСогласованныхФайловВизы.Файл
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеФайлыДокументов КАК СлужебныеФайлыДокументов
	|		ПО Файлы.Ссылка = СлужебныеФайлыДокументов.Файл
	|ГДЕ
	|	ВерсииСогласованныхФайловВизы.Файл ЕСТЬ NULL
	|	И СлужебныеФайлыДокументов.Файл ЕСТЬ NULL
	|	И НЕ Файлы.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеВерсииФайловВизы.ВерсияФайла КАК ВерсияФайла,
	|	ВсеВерсииФайловВизы.ФайлБылПриСогласовании КАК ФайлБылПриСогласовании
	|ПОМЕСТИТЬ ВсеВерсииСогласованныхФайловВизы
	|ИЗ
	|	ВсеВерсииФайловВизы КАК ВсеВерсииФайловВизы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВерсииФайлов.Код КАК Код,
	|	ВерсииФайлов.Размер КАК Размер,
	|	ВЫБОР
	|		КОГДА ВерсииФайлов.ПометкаУдаления
	|			ТОГДА &ВерсияУдалена
	|		КОГДА ВерсииФайлов.Владелец.ТекущаяВерсия = ВерсииСогласованныхФайловВизы.ВерсияФайла
	|				И ВизыСогласования.РезультатСогласования = ЗНАЧЕНИЕ(Перечисление.РезультатыСогласования.НеСогласовано)
	|			ТОГДА &ТекущаяВерсияНеСогласована
	|		КОГДА ВерсииФайлов.Владелец.ТекущаяВерсия = ВерсииСогласованныхФайловВизы.ВерсияФайла
	|			ТОГДА &ТекущаяВерсияСогласована
	|		КОГДА ВерсииФайлов.Владелец.ТекущаяВерсия = ВерсииФайлов.Ссылка
	|				И НЕ ВсеВерсииСогласованныхФайловВизы.ФайлБылПриСогласовании
	|			ТОГДА &ДобавленаПосле
	|		КОГДА ВерсииФайлов.Владелец.ТекущаяВерсия = ВерсииФайлов.Ссылка
	|			ТОГДА &ТекущаяВерсия
	|		КОГДА ВизыСогласования.РезультатСогласования = ЗНАЧЕНИЕ(Перечисление.РезультатыСогласования.НеСогласовано)
	|			ТОГДА &ВерсияНеСогласована
	|		ИНАЧЕ &ВерсияСогласована
	|	КОНЕЦ КАК СтатусСогласования,
	|	ВерсииФайлов.Автор КАК Автор,
	|	ВерсииФайлов.ДатаСоздания КАК ДатаСоздания,
	|	ВерсииФайлов.ПолноеНаименование КАК Представление,
	|	ВерсииФайлов.РодительскаяВерсия КАК РодительскаяВерсия,
	|	ВЫБОР
	|		КОГДА ВерсииФайлов.ПометкаУдаления
	|			ТОГДА ВерсииФайлов.ИндексКартинки + 1
	|		ИНАЧЕ ВерсииФайлов.ИндексКартинки
	|	КОНЕЦ КАК ИндексКартинки,
	|	ВерсииФайлов.ПометкаУдаления КАК ПометкаУдаления,
	|	ВерсииФайлов.Владелец КАК Владелец,
	|	ВерсииФайлов.Ссылка КАК Ссылка,
	|	ВсеВерсииСогласованныхФайловВизы.ФайлБылПриСогласовании КАК ФайлБылПриСогласовании,
	|	ВЫБОР
	|		КОГДА ВерсииФайлов.Владелец.ТекущаяВерсия = ВерсииФайлов.Ссылка
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТекущая,
	|	ВерсииФайлов.Расширение КАК Расширение,
	|	ВерсииФайлов.НомерВерсии КАК НомерВерсии,
	|	ВерсииФайлов.ФайлУдален КАК ФайлУдален,
	|	ВерсииФайлов.НеМеняетСути КАК ВерсияНеМеняетСути,
	|	ЕСТЬNULL(СведенияОФайлахДокументооборот.ЯвляетсяОригиналом, ЛОЖЬ) КАК ЯвляетсяОригиналом,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СведенияОФайлахДокументооборот.ЯвляетсяОригиналом, ЛОЖЬ)
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК ИндексКартинкиЯвляетсяОригиналом
	|ИЗ
	|	ВсеВерсииСогласованныхФайловВизы КАК ВсеВерсииСогласованныхФайловВизы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВерсииФайлов КАК ВерсииФайлов
	|		ПО (ВерсииФайлов.Ссылка = ВсеВерсииСогласованныхФайловВизы.ВерсияФайла)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФайлахДокументооборот КАК СведенияОФайлахДокументооборот
	|		ПО (ВерсииФайлов.Владелец = СведенияОФайлахДокументооборот.Файл)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВерсииСогласованныхФайловВизы КАК ВерсииСогласованныхФайловВизы
	|		ПО ВсеВерсииСогласованныхФайловВизы.ВерсияФайла = ВерсииСогласованныхФайловВизы.ВерсияФайла
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВизыСогласования КАК ВизыСогласования
	|		ПО (ВизыСогласования.Ссылка = &ВизаСогласования)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Владелец,
	|	ДатаСоздания УБЫВ");
	
	Запрос.УстановитьПараметр("ВизаСогласования", ВизаСогласования);
	
	Запрос.УстановитьПараметр("ТекущаяВерсияНеСогласована", НСтр("ru = 'Текущая версия не согласована'"));
	Запрос.УстановитьПараметр("ТекущаяВерсияСогласована", ТекстНадписиТекущаяВерсияСогласована());
	Запрос.УстановитьПараметр("ДобавленаПосле", НСтр("ru = 'Версия добавлена после согласования'"));
	Запрос.УстановитьПараметр("ВерсияСогласована", НСтр("ru = 'Согласованная версия'"));
	Запрос.УстановитьПараметр("ВерсияНеСогласована", НСтр("ru = 'Версия не согласована'"));
	Запрос.УстановитьПараметр("ТекущаяВерсия", Справочники.ВерсииФайлов.ТекстНадписиТекущаяВерсия());
	Запрос.УстановитьПараметр("ВерсияУдалена", Справочники.ВерсииФайлов.ТекстНадписиВерсияУдалена());
	Данные = Запрос.Выполнить().Выгрузить();
	МассивУдаления = Новый Массив;
	Для Каждого Строка Из Данные Цикл
		// Если версия не меняет сути, то проверяем ее Родителя. 
		// Если Родитель равен согласованной версии, значит отличий нет.
		Если Не Строка.ВерсияНеМеняетСути Тогда
			Продолжить
		КонецЕсли;
		
		ТекущаяВерсияФайла = Строка.Ссылка;
		Пока ЗначениеЗаполнено(ТекущаяВерсияФайла) Цикл
			РеквизитыВерсии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущаяВерсияФайла, 
				"РодительскаяВерсия, РодительскаяВерсия.НеМеняетСути");
			
			Если ЗначениеЗаполнено(РеквизитыВерсии.РодительскаяВерсия) Тогда
				
				СтрокаРодителя = Данные.НайтиСтроки(Новый Структура("Ссылка", РеквизитыВерсии.РодительскаяВерсия));
				Если СтрокаРодителя.Количество() > 0 Тогда
					СтрокаРодителя[0].СтатусСогласования = ТекстНадписиТекущаяВерсияСогласована();
					СтрокаРодителя[0].ЭтоТекущая = Истина;
					МассивУдаления.Добавить(Строка);
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			Если РеквизитыВерсии.РодительскаяВерсияНеМеняетСути = Ложь Тогда
				Прервать;
			КонецЕсли;
			
			ТекущаяВерсияФайла = РеквизитыВерсии.РодительскаяВерсия;	
		КонецЦикла;	
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из МассивУдаления Цикл
		Данные.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	Дерево = РеквизитФормыВЗначение("ДеревоВерсий");
	Дерево.Строки.Очистить();
	
	Для Каждого Строка Из Данные Цикл
		СтрокаРодителя = Дерево.Строки.НайтиСтроки(Новый Структура("Ссылка", Строка.Владелец));
		Если СтрокаРодителя.Количество() > 0 Тогда
			Ветвь = СтрокаРодителя[0].Строки.Добавить();
		Иначе
			ВетвьРодителя = Дерево.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(ВетвьРодителя, Строка);
			ВетвьРодителя.Ссылка = Строка.Владелец; 
			Если Строка.ЯвляетсяОригиналом Тогда
				ВетвьРодителя.СтатусСогласования = НСтр("ru = 'Скан-копия оригинала документа'");
			Иначе
				ВетвьРодителя.СтатусСогласования = "";
			КонецЕсли;
			ВетвьРодителя.ЭтоРодитель = Истина;
			
			Ветвь = ВетвьРодителя.Строки.Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Ветвь, Строка);
		Ветвь.ИндексКартинки = -1;
		Ветвь.ИндексКартинкиЯвляетсяОригиналом = -1;
		Ветвь.ЯвляетсяОригиналом = Строка.ЯвляетсяОригиналом;
		Ветвь.Представление = СтрШаблон(НСтр("ru = 'Версия №%1'"), Ветвь.НомерВерсии);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоВерсий");
	
КонецПроцедуры

// Возвращает текст комментарий о том, что текущая версия файла была согласована
// 
// Возвращаемое значение:
//  Строка
//
Функция ТекстНадписиТекущаяВерсияСогласована()
	
	Возврат НСтр("ru = 'Текущая версия согласована'");
	
КонецФункции

Процедура УстановитьУсловноеОформление()
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементВидимостьОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("Видимость");
	ЭлементВидимостьОформления.Значение = Ложь;
	ЭлементВидимостьОформления.Использование = Истина;
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДеревоВерсий.ЭтоРодитель");
	ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = Истина; 
	ЭлементОформляемогоПоля = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ЭлементОформляемогоПоля.Поле = Новый ПолеКомпоновкиДанных("ДеревоВерсийИндексКартинки");
	ЭлементОформляемогоПоля.Использование = Истина;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ГруппаИ = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ЭлементОтбораДанных = ГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДеревоВерсий.ЯвляетсяОригиналом");
	ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = Ложь;
	ГруппаИли = ГруппаИ.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	ЭлементШрифтаОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("Шрифт");
	ЭлементШрифтаОформления.Значение = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,, Истина);
	ЭлементШрифтаОформления.Использование = Истина;
	ЭлементШрифтаОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("ЦветТекста");
	ЭлементШрифтаОформления.Значение = Новый Цвет(255,0,0);
	ЭлементШрифтаОформления.Использование = Истина;
	ЭлементОтбораДанных = ГруппаИли.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДеревоВерсий.ЭтоТекущая");
	ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = Ложь; 
	ЭлементОтбораДанных = ГруппаИли.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДеревоВерсий.ФайлБылПриСогласовании");
	ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = Ложь;
	ЭлементОформляемогоПоля = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ЭлементОформляемогоПоля.Поле = Новый ПолеКомпоновкиДанных("ДеревоВерсийСтатусСогласования");
	ЭлементОформляемогоПоля.Использование = Истина;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементШрифтаОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("Шрифт");
	ЭлементШрифтаОформления.Значение = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,, Истина);
	ЭлементШрифтаОформления.Использование = Истина;
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДеревоВерсий.ЭтоРодитель");
	ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = Истина;
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДеревоВерсий.ЯвляетсяОригиналом");
	ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = Истина;
	ЭлементОформляемогоПоля = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ЭлементОформляемогоПоля.Поле = Новый ПолеКомпоновкиДанных("ДеревоВерсийСтатусСогласования");
	ЭлементОформляемогоПоля.Использование = Истина;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементШрифтаОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("Шрифт");
	ЭлементШрифтаОформления.Значение = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,,,, Истина);
	ЭлементШрифтаОформления.Использование = Истина;
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДеревоВерсий.ПометкаУдаления");
	ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = Истина;
	ЭлементОформляемогоПоля = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ЭлементОформляемогоПоля.Поле = Новый ПолеКомпоновкиДанных("ДеревоВерсий");
	ЭлементОформляемогоПоля.Использование = Истина;
	
КонецПроцедуры

#КонецОбласти