#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Добавляет запись в очередь
//
// Параметры:
//  ЗагруженныйОбъект - ЛюбаяСсылка
//  ТекстОшибки - Строка
//  Объект - СправочникССылка.ИдентификаторыОбъектовМетаданных
//  ЗначенияКлюча - ХранилищеЗначения
//
Процедура ДобавитьВОчередь(
		ЗагруженныйОбъект, ТекстОшибки, Объект, ЗначенияКлюча = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Ключ.Установить(ЗагруженныйОбъект);
	НаборЗаписей.Отбор.Объект.Установить(Объект);
	
	Запись = НаборЗаписей.Добавить();
	
	Запись.Ключ = ЗагруженныйОбъект;
	Запись.Объект = Объект;
	
	Запись.Дата = ТекущаяДатаСеанса();
	Запись.ТекстОшибки = ТекстОшибки;
	Запись.ЧислоПопытокОбработки = 0;
	
	Если ЗначенияКлюча <> Неопределено Тогда
		Запись.ЗначенияКлюча = ЗначенияКлюча;
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Добавить в очередь постобработки набор записей регистра.
//
// Параметры:
//	Набор - РегистрСведенийНаборЗаписей -
//	ПричинаЗагрузки  - Строка -
//
Процедура ДобавитьВОчередьНаборЗаписейРегистра(Набор, ПричинаЗагрузки) Экспорт
	
	ИОМССылка =  МиграцияДанныхИзВнешнихСистемСервер.ИОМ(
		Набор.Метаданные().ПолноеИмя(),
		Новый Соответствие);
	
	ЗначенияКлюча = Новый ХранилищеЗначения(Набор.Отбор, Новый СжатиеДанных(9));
	
	Ключ = ОтметкиВремени.Ключ(Набор);
	
	Если ЗначениеЗаполнено(Ключ) Тогда
		ДобавитьВОчередь(
			Ключ, ПричинаЗагрузки, ИОМССылка, ЗначенияКлюча);
	КонецЕсли;
	
КонецПроцедуры

// Удаляет запись
//
// Параметры:
//  Ключ - ЛюбаяСсылка
//  Объект - СправочникСсылка.ИдентификаторыОбъектовМетаданных
//
Процедура УдалитьЗапись(Ключ, Объект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Ключ = Ключ;
	МенеджерЗаписи.Объект = Объект;
	
	МенеджерЗаписи.Удалить();
	
КонецПроцедуры

// Инкрементирует при ошибке
//
// Параметры:
//  Выборка - Выборка из результата запроса
//  Ошибка  - Строка
//
Процедура ИнкрементироватьОшибку(Выборка, Ошибка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Ключ.Установить(Выборка.Ключ);
	
	Запись = НаборЗаписей.Добавить();
	
	ЗаполнитьЗначенияСвойств(Запись, Выборка);
	
	Запись.ЧислоПопытокОбработки = Запись.ЧислоПопытокОбработки + 1;
	
	Если СтрДлина(Запись.ТекстОшибки) < 10000 Тогда
		Запись.ТекстОшибки = Запись.ТекстОшибки 
			+ Символы.ПС + Строка(ТекущаяДата()) + " " + Ошибка;
	КонецЕсли;	
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Есть записи в очереди.
// 
// Возвращаемое значение:
//  Булево - Есть записи в очереди
Функция ЕстьЗаписиВОчереди() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОчередьПостОбработкиЗагрузки.Ключ
	|ИЗ
	|	РегистрСведений.ОчередьПостОбработкиЗагрузки КАК ОчередьПостОбработкиЗагрузки";
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции	

#КонецОбласти

#КонецЕсли