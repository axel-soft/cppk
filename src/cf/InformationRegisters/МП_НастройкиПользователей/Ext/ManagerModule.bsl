#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Записывает персональную настройку синхронизации с мобильными клиентами
// Параметры:
//	Пользователь - ссылка на пользователя
//	ТипНастройки - ссылка на перечисление МП_ТипыНастроекПользователей
//	Значение - значение настройки
Процедура ЗаписатьНастройку(Пользователь, ТипНастройки, Значение) Экспорт

	МенеджерЗаписи = СоздатьМенеджерЗаписи();

	МенеджерЗаписи.Пользователь = Пользователь;
	МенеджерЗаписи.Настройка    = ТипНастройки;
	МенеджерЗаписи.Значение     = Значение;

	МенеджерЗаписи.Записать();

КонецПроцедуры

// Возвращает персональную настройку синхронизации с мобильными клиентами.
// Если настройка ранее не выполнялась, то возвращается значение по умолчанию.
// Параметры:
//	Пользователь - ссылка на пользователя
//	ТипНастройки - ссылка на перечисление МП_ТипыНастроекПользователей
Функция ПолучитьНастройку(Пользователь, ТипНастройки) Экспорт

	МенеджерЗаписи = СоздатьМенеджерЗаписи();

	МенеджерЗаписи.Пользователь = Пользователь;
	МенеджерЗаписи.Настройка = ТипНастройки;
	МенеджерЗаписи.Прочитать();

	Если МенеджерЗаписи.Значение = Неопределено
		Или Не МенеджерЗаписи.Выбран() Тогда

		МенеджерЗаписи.Пользователь = Пользователь;
		МенеджерЗаписи.Настройка = ТипНастройки;

		Если ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.МаксимальныйРазмерФайлов Тогда
			МенеджерЗаписи.Значение = 512;

		ИначеЕсли ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.ПериодПервичнойЗагрузки Тогда
			МенеджерЗаписи.Значение = 7;

		ИначеЕсли ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.СинхронизацияЗадач Тогда
			МенеджерЗаписи.Значение = Истина;

		ИначеЕсли ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.СинхронизацияКалендаря Тогда
			МенеджерЗаписи.Значение = Истина;

		ИначеЕсли ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.СинхронизацияПочты Тогда
			МенеджерЗаписи.Значение = Истина;

		ИначеЕсли ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.СинхронизацияКонтроля Тогда
			МенеджерЗаписи.Значение = Истина;

		ИначеЕсли ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.СинхронизацияОтсутствий Тогда
			
			МенеджерЗаписи.Значение = ПолучитьФункциональнуюОпцию("ИспользоватьОтсутствия");
			
			РегистрыСведений.МП_ИзмененныеНастройкиСинхронизации.ДобавитьЗапись(
					Пользователь, Перечисления.МП_ТипыНастроекПользователей.СинхронизацияОтсутствий);
					
		ИначеЕсли ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.СинхронизацияСамочувствий Тогда
			
			МенеджерЗаписи.Значение = ПолучитьФункциональнуюОпцию("УчетСамочувствияСотрудников");
			
			РегистрыСведений.МП_ИзмененныеНастройкиСинхронизации.ДобавитьЗапись(
				Пользователь, Перечисления.МП_ТипыНастроекПользователей.СинхронизацияСамочувствий);
			
		ИначеЕсли ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.СрокУстареванияДанных Тогда
			МенеджерЗаписи.Значение = 30;

		ИначеЕсли ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.ОграничениеФорматовПередаваемыхФайлов Тогда
			МенеджерЗаписи.Значение = Ложь;

		ИначеЕсли ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.ФорматыПередаваемыхФайлов Тогда
			МенеджерЗаписи.Значение = 
				МП_СлужебныйПовтИсп.СписокФорматовФайловПоУмолчанию();

		ИначеЕсли ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.ПодробныйПротоколОбменаСМобильнымУстройством Тогда
			МенеджерЗаписи.Значение = Ложь;

		ИначеЕсли ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.СинхронизацияМероприятий Тогда
			
			МенеджерЗаписи.Значение = ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеМероприятиями");
			
			РегистрыСведений.МП_ИзмененныеНастройкиСинхронизации.ДобавитьЗапись(
				Пользователь, Перечисления.МП_ТипыНастроекПользователей.СинхронизацияМероприятий);
				
		ИначеЕсли ТипНастройки = 
			Перечисления.МП_ТипыНастроекПользователей.СинхронизацияУчетаВремени Тогда
			
			МенеджерЗаписи.Значение = ПолучитьФункциональнуюОпцию("ВестиУчетФактическихТрудозатрат");
			
			РегистрыСведений.МП_ИзмененныеНастройкиСинхронизации.ДобавитьЗапись(
				Пользователь, Перечисления.МП_ТипыНастроекПользователей.СинхронизацияУчетаВремени);
				
		КонецЕсли;

		МенеджерЗаписи.Записать();

	КонецЕсли;

	Возврат МенеджерЗаписи.Значение;

КонецФункции

Функция ДатаУстаревания(Пользователь) Экспорт
	
	СрокУстареванияДанных = ПолучитьНастройку(Пользователь, 
		Перечисления.МП_ТипыНастроекПользователей.СрокУстареванияДанных);
	
	ДатаУстареванияДанных = НачалоДня(ТекущаяДатаСеанса() - (СрокУстареванияДанных * 86400));

	Возврат ДатаУстареванияДанных; 
	
КонецФункции

#КонецЕсли
