
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ВидДействия") 
		И ЗначениеЗаполнено(Параметры.ВидДействия) Тогда
		Запись.ВидДействия = Параметры.ВидДействия;
	КонецЕсли;
	
	УправлениеЭлементами();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьНаименованияОписания();

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(Запись.Наименование) 
		И Не ЗначениеЗаполнено(Запись.ШаблонНаименования)
		И Не ЗначениеЗаполнено(Запись.Описание) 
		И Не ЗначениеЗаполнено(Запись.ШаблонОписания) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Введите какое-либо значение наименования, например ""Наименование"" или ""Описание""'"),,
			"Запись.Наименование",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
		
	Если Не Элементы.Этап.Доступность И ЗначениеЗаполнено(ТекущийОбъект.Этап) Тогда
		
		ТекущийОбъект.Этап = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидДействияПриИзменении(Элемент)
	
	УправлениеЭлементами();
	
КонецПроцедуры

&НаКлиенте
Процедура ФункцияПриИзменении(Элемент)
	
	УправлениеЭлементами();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Запись.Наименование = СокрЛП(Запись.Наименование);
	Есть = Ложь;
	Если Найти(Запись.Наименование, """") > 0 Тогда
		Запись.Наименование = СтрЗаменить(Запись.Наименование, """", "");
		Есть = Истина;
	КонецЕсли;
	Если Найти(Запись.Наименование, ":") > 0 Тогда
		Запись.Наименование = СтрЗаменить(Запись.Наименование, ":", "");
		Есть = Истина;
	КонецЕсли;
	Если Есть Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Запрещается использовать символы "":'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		МассивЭтапов = Новый Массив;
		
		Если ТипЗнч(Запись.Функция) = Тип("ПеречислениеСсылка.ФункцииУчастниковПодписания") Тогда 
			ТипДействия = ПредопределенноеЗначение("Перечисление.ТипыДействий.Подписание");
		ИначеЕсли ТипЗнч(Запись.Функция) = Тип("ПеречислениеСсылка.ФункцииУчастниковСогласования") Тогда 
			ТипДействия = ПредопределенноеЗначение("Перечисление.ТипыДействий.Согласование");
		Иначе 
			Возврат;
		КонецЕсли;
		
		ДанныеВыбора = РаботаСЭтапамиВызовСервера.ДанныеВыбора(Текст, 
			ТипДействия,
			МассивЭтапов);
			
		Если ДанныеВыбора.Количество() <> 0 Тогда
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;		
		
КонецПроцедуры

&НаКлиенте
Процедура ШаблонЗаголовкаПриИзменении(Элемент)
	
	УстановитьДоступностьНаименованияОписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонОписанияПриИзменении(Элемент)
	
	УстановитьДоступностьНаименованияОписания();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеЭлементами()
	
	Если ЗначениеЗаполнено(Запись.ВидДействия) Тогда
		
		ТипДействия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.ВидДействия, "Тип");
		Элементы.Функция.СписокВыбора.очистить();
		
		Если ТипДействия = ПредопределенноеЗначение("Перечисление.ТипыДействий.Исполнение") Тогда
			ТипФункции = Новый ОписаниеТипов("ПеречислениеСсылка.ФункцииУчастниковИсполнения");
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковИсполнения.Исполнитель);
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковИсполнения.Рассматривающий);
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковИсполнения.ОбрабатывающийРезолюцию);
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковИсполнения.ОбрабатывающийРезультат);
			
		ИначеЕсли ТипДействия = ПредопределенноеЗначение("Перечисление.ТипыДействий.Ознакомление") Тогда
			ТипФункции = Новый ОписаниеТипов("ПеречислениеСсылка.ФункцииУчастниковОзнакомления");
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковОзнакомления.Ознакомляемый);
			Запись.Функция = Перечисления.ФункцииУчастниковОзнакомления.Ознакомляемый;
			
		ИначеЕсли ТипДействия = ПредопределенноеЗначение("Перечисление.ТипыДействий.Подписание") Тогда
			ТипФункции = Новый ОписаниеТипов("ПеречислениеСсылка.ФункцииУчастниковПодписания");
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковПодписания.Подписывающий);
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковПодписания.ОбеспечивающийПодписание);
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковПодписания.ОбрабатывающийРезультат);
						
		ИначеЕсли ТипДействия = ПредопределенноеЗначение("Перечисление.ТипыДействий.Регистрация") Тогда
			ТипФункции = Новый ОписаниеТипов("ПеречислениеСсылка.ФункцииУчастниковРегистрации");
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковРегистрации.Регистратор);
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковРегистрации.ОбрабатывающийРезультат);
			
		ИначеЕсли ТипДействия = ПредопределенноеЗначение("Перечисление.ТипыДействий.Согласование") Тогда
			ТипФункции = Новый ОписаниеТипов("ПеречислениеСсылка.ФункцииУчастниковСогласования");
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковСогласования.Согласующий);
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковСогласования.ОбрабатывающийРезультат);
			
		ИначеЕсли ТипДействия = ПредопределенноеЗначение("Перечисление.ТипыДействий.Утверждение") Тогда
			ТипФункции = Новый ОписаниеТипов("ПеречислениеСсылка.ФункцииУчастниковУтверждения");
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковУтверждения.Утверждающий);
			Элементы.Функция.СписокВыбора.Добавить(Перечисления.ФункцииУчастниковУтверждения.ОбрабатывающийРезультат);
			
		Иначе
			Возврат;
			
		КонецЕсли;
				
		Запись.Функция = ТипФункции.ПривестиЗначение(Запись.Функция);		
		ЭтапыДоступны = ДействияКлиентСервер.ЭтоДействиеСЭтапами(ТипДействия)
			И Не ДействияКлиентСервер.ЭтоФункцияОбработатьРезультат(Запись.Функция);
		Элементы.Этап.Доступность = ЭтапыДоступны;
		Если Не ЭтапыДоступны И ЗначениеЗаполнено(Запись.Этап) Тогда
			Запись.Этап = Неопределено;
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьНаименованияОписания()
	
	Элементы.Наименование.Доступность = Не ЗначениеЗаполнено(Запись.ШаблонНаименования);
	Элементы.Описание.Доступность = Не ЗначениеЗаполнено(Запись.ШаблонОписания);
	
КонецПроцедуры

#КонецОбласти