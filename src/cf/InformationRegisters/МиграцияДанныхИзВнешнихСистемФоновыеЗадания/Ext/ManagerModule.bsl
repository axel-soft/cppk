#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура Добавить(ДанныеЗаполнения) Экспорт
	
	Набор = РегистрыСведений.МиграцияДанныхИзВнешнихСистемФоновыеЗадания.СоздатьНаборЗаписей();
	Запись = Набор.Добавить();
	Запись.Период = ТекущаяДатаСеанса();
	Запись.Момент = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Запись.Сеанс = НомерСоединенияИнформационнойБазы();
	Запись.Идентификатор = Новый УникальныйИдентификатор();
	
	ЗаполнитьЗначенияСвойств(Запись, ДанныеЗаполнения);
	
	МиграцияДанныхИзВнешнихСистемСервер.ЗаписатьСлужебныеДанные(Набор, Ложь);
		
КонецПроцедуры

// Удаляет порцию устаревших данных.
// 
// Возвращаемое значение - Булево - Истина, если были найдены устаревшие данные, в противном случае Ложь.
// 
Функция УдалитьПорциюУстаревшихДанных() Экспорт
	
	//если миграция еще идет - не чистим.
	Если МиграцияДанныхИзВнешнихСистемСервер.ИдетЗагрузкаИзДО21() Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 10000
		|	МиграцияДанныхИзВнешнихСистемФоновыеЗадания.Момент КАК Момент,
		|	МиграцияДанныхИзВнешнихСистемФоновыеЗадания.Сеанс КАК Сеанс,
		|	МиграцияДанныхИзВнешнихСистемФоновыеЗадания.Идентификатор КАК Идентификатор
		|ИЗ
		|	РегистрСведений.МиграцияДанныхИзВнешнихСистемФоновыеЗадания КАК МиграцияДанныхИзВнешнихСистемФоновыеЗадания
		|
		|УПОРЯДОЧИТЬ ПО
		|	Момент");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		
		НаборЗаписей = СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.Момент.Установить(Выборка.Момент);
		НаборЗаписей.Отбор.Сеанс.Установить(Выборка.Сеанс);
		НаборЗаписей.Отбор.Идентификатор.Установить(Выборка.Идентификатор);
		
		НаборЗаписей.Записать(); // стираем
		
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Удаление устаревших данных'"), 
		УровеньЖурналаРегистрации.Информация,
		Метаданные.РегистрыСведений.МиграцияДанныхИзВнешнихСистемФоновыеЗадания,, 
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедура завершена успешно, обработано %1 записей'"), Выборка.Количество()));
	
	Возврат Выборка.Количество() > 0;
	
КонецФункции

#КонецЕсли