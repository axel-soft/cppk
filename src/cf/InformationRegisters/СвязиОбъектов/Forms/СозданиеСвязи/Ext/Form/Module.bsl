
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("УникальныйИдентификаторФормыВладельца") Тогда 
		УникальныйИдентификаторФормыВладельца = Параметры.УникальныйИдентификаторФормыВладельца;
	КонецЕсли;
	
	Параметры.Свойство("Документ", Документ);
	Параметры.Свойство("СвязанныйОбъект", СвязанныйДокумент);
	Параметры.Свойство("ТипСвязи", ТекущийТипСвязи);
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ВестиУчетОбращенийГраждан = ПолучитьФункциональнуюОпцию("ВестиУчетОбращенийГраждан"); 
	ВнешнийРесурс = НСтр("ru = 'Внешняя ссылка'");
	ДокументТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1 (%2)'"), Документ, ТипЗнч(Документ));
		
	Если ЗначениеЗаполнено(СвязанныйДокумент) Тогда 
		ОткрыватьФорму = Истина;
		ТекстОшибки = "";
		ПерейтиКСозданиюСвязи();
	Иначе 
		УстановитьТипыСвязуемыхОбъектов();
		
		Если ТипыПредмета.Количество() > 0 Тогда 			
			ПостроитьДеревоВариантов();
		КонецЕсли;
	КонецЕсли;	

	Элементы.Назад.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда 
		Сообщить(ТекстОшибки);
		Отказ = Истина;
		Возврат;
	ИначеЕсли Не ЗначениеЗаполнено(СвязанныйДокумент) И ТипыПредмета.Количество() = 0 Тогда 			
		Сообщить(НСтр(
			"ru = 'Нельзя установить связь, так как для выбранного объекта не настроено ни одного типа связи'"));
		Отказ = Истина;
		Возврат;
    КонецЕсли;
	
	ЭлементыДерева = ДеревоВариантов.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		Развернуть = Ложь;
		
		Если СтруктураРазвернутости <> Неопределено Тогда
			СтруктураРазвернутости.Свойство(ЭлементДерева.КомандаСсылка, Развернуть);
		Иначе
			Развернуть = Истина;
		КонецЕсли;
		
		Если Развернуть = Истина Или Развернуть = Неопределено Тогда
			Элементы.ДеревоВариантов.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Ложь);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда 
		СвязанныйДокумент = ВыбранноеЗначение; 
		ТекстОшибки = "";
		ПерейтиКСозданиюСвязи();
		
		Если ЗначениеЗаполнено(ТекстОшибки) Тогда 
			ПоказатьПредупреждение(, ТекстОшибки);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("СтруктураРазвернутости", СтруктураРазвернутости);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	СтруктураРазвернутости = Настройки.Получить("СтруктураРазвернутости");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДокументТекстОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Документ);

КонецПроцедуры

&НаКлиенте
Процедура СвязанныйДокументТекстОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, СвязанныйДокумент);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоВариантов

&НаКлиенте
Процедура ДеревоВариантовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ОчиститьСообщения();
	ВыбратьПредметКлиент();
	СтандартнаяОбработка = Ложь;;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВариантовПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ДеревоВариантов.ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Элементы.ДеревоВариантовКонтекстноеМенюОткрытьКарточку.Доступность =
		(ТипЗнч(Элементы.ДеревоВариантов.ТекущиеДанные.КомандаСсылка) <> Тип("Строка"));
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВариантовПередНачаломИзменения(Элемент, Отказ)
		
	Отказ = Истина;

	Если ТипЗнч(Элементы.ДеревоВариантов.ТекущиеДанные.КомандаСсылка) <> Тип("Строка") Тогда 
		ПоказатьЗначение(, Элементы.ДеревоВариантов.ТекущиеДанные.КомандаСсылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВариантовПередРазворачиванием(Элемент, Строка, Отказ)
	
	СохранитьПараметрыРазвернутости(Строка, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВариантовПередСворачиванием(Элемент, Строка, Отказ)
	
	СохранитьПараметрыРазвернутости(Строка, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьКарточку(Команда)
	
	ПоказатьЗначение(, Элементы.ДеревоВариантов.ТекущиеДанные.КомандаСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСозданиеСвязи Тогда 
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборДокумента;	
		Элементы.Готово.Заголовок = НСтр("ru = 'Далее >'");
		Элементы.Назад.Видимость = Ложь;
		ИзменитьПодсказку();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)

	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборДокумента Тогда 	
		ТекущиеДанные = Элементы.ДеревоВариантов.ТекущиеДанные;
		ОчиститьСообщения();
		
		Если ТекущиеДанные = Неопределено 
			ИЛИ ТекущиеДанные.ЭтоЗаголовок Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не выбран связанный документ'"));
			Возврат;
		КонецЕсли;

		Если ТипЗнч(ТекущиеДанные.КомандаСсылка) = Тип("Строка") 
			И ТекущиеДанные.КомандаСсылка = ВнешнийРесурс Тогда
		    ОписаниеОповещения = Новый ОписаниеОповещения(
				"ДобавлениеВнешнегоРесурсаЗавершение",
				ЭтотОбъект);
			ОткрытьФорму("РегистрСведений.СвязиОбъектов.Форма.ФормаВнешнегоРесурса",,
				ЭтаФорма,,,,
				ОписаниеОповещения,
				РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
		ИначеЕсли ТипЗнч(ТекущиеДанные.КомандаСсылка) = Тип("Строка") Тогда
			ИмяФормыВыбора = ТекущиеДанные.КомандаСсылка + ".ФормаВыбора";
			Если ТекущиеДанные.КомандаСсылка = "Справочник.Файлы" Тогда
				ИмяФормыВыбора = "Справочник.Файлы.Форма.ФормаВыбораФайлаВПапках";
			КонецЕсли;
			ПараметрыФормы = Новый Структура;
			ОткрытьФорму(ИмяФормыВыбора, ПараметрыФормы, ЭтаФорма);
		
		Иначе
			СвязанныйДокумент = ТекущиеДанные.КомандаСсылка;
			ТекстОшибки = "";
			ПерейтиКСозданиюСвязи();
			
			Если ЗначениеЗаполнено(ТекстОшибки) Тогда 
				ПоказатьПредупреждение(, ТекстОшибки);
			КонецЕсли;
		
		КонецЕсли;
		
	Иначе 
		ТекущиеДанные = Элементы.ТипыСвязейТаблица.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено 
			Или Не ЗначениеЗаполнено(Документ)
			Или Не ЗначениеЗаполнено(СвязанныйДокумент)Тогда
			Возврат;
		КонецЕсли;

		ТипСвязи = ТекущиеДанные.ТипСвязи;
		СоздатьСвязь(ТипСвязи);
			
		// Оповещение об изменении связей документа
		ТипыСвязейМассив = Новый Массив;
		ТипыСвязейМассив.Добавить(ТипСвязи);
		
		ПараметрСобытия = Новый Структура;
		ПараметрСобытия.Вставить("Документ", Документ);
		ПараметрСобытия.Вставить("ТипыСвязей", ТипыСвязейМассив);
		ПараметрСобытия.Вставить("СвязанныйОбъект", СвязанныйДокумент);
		Оповестить("ИзмененыСвязиДокумента", ПараметрСобытия, ЭтаФорма);
		
		// Оповещение об изменении реквизитов документа
		Если РеквизитыВладельцаИзменены Тогда 
			Оповестить("ИзмененыРеквизитыПриИзмененииСвязи", Документ, ЭтаФорма);
		КонецЕсли;	
	
		Закрыть();
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьТипыСвязуемыхОбъектов()
	
	НастройкиСвязей = СвязиОбъектов.ПолучитьНастройкиСвязи(Документ, СвязанныйДокумент);
	ДобавитьВнешнююСсылку = Ложь;
	
	Для Каждого ТипСвязи Из НастройкиСвязей Цикл
		ТипМетаданных = ТипСвязи.ТипСсылкаНа;
		
		Если Не СвязиОбъектов.ЭтоПодходящийТипСвязи(Документ, СвязанныйДокумент, ТипСвязи.ТипСвязи) Тогда
			Продолжить;
		КонецЕсли;

		Если ТипМетаданных = "Строка" Тогда
			Если Не ДобавитьВнешнююСсылку 
				И ТипыПредмета.НайтиПоЗначению(ВнешнийРесурс) = Неопределено Тогда 
				ДобавитьВнешнююСсылку = Истина;
			КонецЕсли;
		Иначе 	
			ПредметСсылка = Новый(ТипМетаданных);
			ЭлементМетаданных = ПредметСсылка.Метаданные();
			
			Если ТипыПредмета.НайтиПоЗначению(ЭлементМетаданных.ПолноеИмя()) = Неопределено 
			И ПравоДоступа("Чтение", ЭлементМетаданных) Тогда  			
				ПредставлениеОбъекта = ЭлементМетаданных.ПредставлениеОбъекта;
				
				Если ПустаяСтрока(ПредставлениеОбъекта) Тогда
					ПредставлениеОбъекта = Строка(ЭлементМетаданных);
				КонецЕсли;
				
				ТипыПредмета.Добавить(ЭлементМетаданных.ПолноеИмя(), ПредставлениеОбъекта);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТипыПредмета.СортироватьПоПредставлению();
	
	//Добавим данный тип предмета в конец списка, т.к. он не часто используется
	Если ДобавитьВнешнююСсылку Тогда 
		ТипыПредмета.Добавить(ВнешнийРесурс, ВнешнийРесурс);	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПостроитьДеревоВариантов()
	
	Дерево = РеквизитФормыВЗначение("ДеревоВариантов");
	Дерево.Строки.Очистить();
	
	ПолучитьНедавниеДокументы(Дерево);
	ПолучитьВозможныеДокументы(Дерево);
	
	ЗначениеВДанныеФормы(Дерево, ДеревоВариантов);

КонецПроцедуры

&НаСервере
Процедура ПолучитьНедавниеДокументы(Дерево)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 10
		|	РегистрСведенийОбращенияКОбъектам.Объект,
		|	РегистрСведенийОбращенияКОбъектам.ДатаПоследнегоОбращения КАК ДатаПоследнегоОбращения
		|ИЗ
		|	Справочник.ИдентификаторыОбъектовМетаданных КАК ИдентификаторыОбъектовМетаданных
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбращенияКОбъектам КАК РегистрСведенийОбращенияКОбъектам
		|		ПО (ТИПЗНАЧЕНИЯ(ИдентификаторыОбъектовМетаданных.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(РегистрСведенийОбращенияКОбъектам.Объект))
		|ГДЕ
		|	ИдентификаторыОбъектовМетаданных.ПолноеИмя В(&ТипыПредметов)
		|	И РегистрСведенийОбращенияКОбъектам.Пользователь = &ТекущийПользователь
		|	И НЕ РегистрСведенийОбращенияКОбъектам.Объект.ПометкаУдаления
		|	И РегистрСведенийОбращенияКОбъектам.Объект <> &Документ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаПоследнегоОбращения УБЫВ";
		
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("ТипыПредметов", ТипыПредмета); 
	Запрос.УстановитьПараметр("Документ", Документ); 
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	СтрокаЗаголовка = Дерево.Строки.Добавить();
	СтрокаЗаголовка.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Недавние (%1)'"), Выборка.Количество());
	СтрокаЗаголовка.КомандаСсылка = "Недавние";
	СтрокаЗаголовка.ЭтоЗаголовок = Истина;
	
	Пока Выборка.Следующий() Цикл
		СтрокаПредмета = СтрокаЗаголовка.Строки.Добавить();
		СтрокаПредмета.Наименование = ОбщегоНазначенияДокументооборотВызовСервера.ПредметСтрокой(Выборка.Объект);
		СтрокаПредмета.КомандаСсылка = Выборка.Объект;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПолучитьВозможныеДокументы(Дерево)
	
	КоличествоТипов = ТипыПредмета.Количество();
	
	СтрокаЗаголовка = Дерево.Строки.Добавить();
	СтрокаЗаголовка.КомандаСсылка = "Возможные";
	СтрокаЗаголовка.ЭтоЗаголовок = Истина;
	СтрокаЗаголовка.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Возможные (%1)'"), КоличествоТипов);
	
	Для Каждого Строка Из ТипыПредмета Цикл
		СтрокаПредмета = СтрокаЗаголовка.Строки.Добавить();
		СтрокаПредмета.Наименование = Строка.Представление;
		СтрокаПредмета.КомандаСсылка = Строка.Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПараметрыРазвернутости(Строка, Развернуть)
	
	Если СтруктураРазвернутости = Неопределено Тогда
		СтруктураРазвернутости = Новый Структура;
	КонецЕсли;
	
	СтрокаДерева = ДеревоВариантов.НайтиПоИдентификатору(Строка);
	СтруктураРазвернутости.Вставить(СтрокаДерева.КомандаСсылка,Развернуть);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПредметКлиент()
	
	ТекущиеДанные = Элементы.ДеревоВариантов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено 
		ИЛИ ТекущиеДанные.ЭтоЗаголовок Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.КомандаСсылка) = Тип("Строка") 
		И ТекущиеДанные.КомандаСсылка = ВнешнийРесурс Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ДобавлениеВнешнегоРесурсаЗавершение",
			ЭтотОбъект);
		ОткрытьФорму("РегистрСведений.СвязиОбъектов.Форма.ФормаВнешнегоРесурса",,
			ЭтаФорма,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
						
	ИначеЕсли ТипЗнч(ТекущиеДанные.КомандаСсылка) = Тип("Строка") Тогда
		ИмяФормыВыбора = ТекущиеДанные.КомандаСсылка + ".ФормаВыбора";
		
		Если ТекущиеДанные.КомандаСсылка = "Справочник.Файлы" Тогда
			ИмяФормыВыбора = "Справочник.Файлы.Форма.ФормаВыбораФайлаВПапках";		
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ОткрытьФорму(ИмяФормыВыбора, ПараметрыФормы, ЭтаФорма);
		
	Иначе
		СвязанныйДокумент = ТекущиеДанные.КомандаСсылка;
		
		ТекстОшибки = "";
		ПерейтиКСозданиюСвязи();
		
		Если ЗначениеЗаполнено(ТекстОшибки) Тогда 
			ПоказатьПредупреждение(, ТекстОшибки);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеВнешнегоРесурсаЗавершение(Результат, Параметры)Экспорт 

	Если ТипЗнч(Результат) = Тип("Структура") Тогда 
		
		СвязанныйДокумент = Результат.ВнешнийРесурс;
		Комментарий = Результат.Комментарий;
		ТекстОшибки = "";
		
		ПерейтиКСозданиюСвязи();
		
		Если ЗначениеЗаполнено(ТекстОшибки) Тогда 
			ПоказатьПредупреждение(, ТекстОшибки);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура  ПерейтиКСозданиюСвязи()

	Если ЗначениеЗаполнено(СвязанныйДокумент) Тогда 
		Если Документ = СвязанныйДокумент Тогда 
			ТекстОшибки = НСтр(
				"ru = 'Нельзя установить связь объекта с самим собой. Выберите другой объект для создания связи.'");
			Возврат;	
		КонецЕсли;

		Команды.Готово.Подсказка = НСтр("ru = 'Связать выбранные объекты'");
		НастройкиСвязей = СвязиОбъектов.ПолучитьНастройкиСвязи(Документ, СвязанныйДокумент);
		ТипыСвязейТаблица.Очистить(); 
		
		ТЗСвязи = Новый ТаблицаЗначений;
		
		ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.ТипыСвязей");
		ТЗСвязи.Колонки.Добавить("ТипСвязи", ОписаниеТипов);

		ОписаниеТипов = Новый ОписаниеТипов("Строка");
		ТЗСвязи.Колонки.Добавить("ИмяСвязи", ОписаниеТипов);

		ОписаниеТипов = Новый ОписаниеТипов("Строка");
		ТЗСвязи.Колонки.Добавить("КомментарийСвязи", ОписаниеТипов);
		
		ОписаниеТипов = Новый ОписаниеТипов("Булево");
		ТЗСвязи.Колонки.Добавить("Важная", ОписаниеТипов);
		
		Для Каждого НастройкаСвязи Из НастройкиСвязей Цикл 
			
			Если Не СвязиОбъектов.ЭтоПодходящийТипСвязи(Документ, СвязанныйДокумент, НастройкаСвязи.ТипСвязи) Тогда
				Продолжить;
			КонецЕсли;

			Если ТЗСвязи.Найти(НастройкаСвязи.ТипСвязи, "ТипСвязи") = Неопределено Тогда 
				НовСтр = ТЗСвязи.Добавить();
				НовСтр.ТипСвязи = НастройкаСвязи.ТипСвязи;
				НовСтр.Важная = НастройкаСвязи.Важная; 
				НовСтр.ИмяСвязи = Строка(НастройкаСвязи.ТипСвязи);
				НовСтр.КомментарийСвязи = НастройкаСвязи.КомментарийСвязи;
			КонецЕсли;
			
		КонецЦикла;	
		
		ТЗСвязи.Сортировать("Важная УБЫВ, ИмяСвязи");
		
		Для Каждого НастройкаСвязи Из ТЗСвязи Цикл 
			
			НовСтр = ТипыСвязейТаблица.Добавить();
			НовСтр.ТипСвязи = НастройкаСвязи.ТипСвязи;
			НовСтр.Важная = НастройкаСвязи.Важная;
			
			Если ЗначениеЗаполнено(НастройкаСвязи.КомментарийСвязи) Тогда
				НовСтр.Представление = 
					СтрШаблон("%1 (%2)", НастройкаСвязи.ТипСвязи, НастройкаСвязи.КомментарийСвязи);
			Иначе 
				НовСтр.Представление = Строка(НастройкаСвязи.ТипСвязи);
			КонецЕсли;
			
		КонецЦикла;	
		
		Если ТипыСвязейТаблица.Количество() <> 0 Тогда 
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСозданиеСвязи;	
			Элементы.Готово.Заголовок = НСтр("ru = 'Создать связь'"); 
			Элементы.Назад.Видимость = Истина;	
			СвязанныйДокументТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 (%2)'"), СвязанныйДокумент, ТипЗнч(СвязанныйДокумент));
				
			Если ЗначениеЗаполнено(ТекущийТипСвязи) Тогда 
				ЭлементТипСвязи = ТипыСвязей.НайтиПоЗначению(ТекущийТипСвязи);
				
				Если ЭлементТипСвязи <> Неопределено Тогда 
					Элементы.ТипыСвязей.ТекущаяСтрока = ЭлементТипСвязи.ПолучитьИдентификатор();	
				КонецЕсли;	
				
			КонецЕсли;
			
		Иначе 
			ТекстОшибки = НСтр(
				"ru = 'Нельзя установить связь, так как для выбранных документов не настроено ни одного типа связи'");
				
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьПодсказку();
	
	Команды.Готово.Подсказка = НСтр("ru = 'Далее'");
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСвязь(ТипСвязи)
	
	Попытка
		
		НачатьТранзакцию();
			
		РеквизитыВладельцаИзменены = Ложь;
		СвязиОбъектов.УстановитьСвязь(Документ,
			Неопределено,
			СвязанныйДокумент,
			ТипСвязи,
			Сотрудники.ОсновнойСотрудник(),
			ТекущаяДата(),
			Комментарий,
			,
			Истина);
			
		//Обновим реквизиты связуемых документов
		РеквизитыВладельцаИзменены = СвязиОбъектов.УстановитьРеквизитыПриДобавленииСвязи(Документ,
			УникальныйИдентификаторФормыВладельца, ТипСвязи);
		НастройкаСвязи = СвязиОбъектов.ПолучитьНастройкуСвязи(Документ, СвязанныйДокумент, ТипСвязи);
		
		Если  НастройкаСвязи <> Неопределено И ЗначениеЗаполнено(НастройкаСвязи.ТипОбратнойСвязи) Тогда
			СвязиОбъектов.УстановитьРеквизитыПриДобавленииСвязи(СвязанныйДокумент,,
				НастройкаСвязи.ТипОбратнойСвязи);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();

	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
			
	КонецПопытки;
			
	
КонецПроцедуры

&НаКлиенте
Процедура ТипыСвязейТаблицаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Готово(Элемент);
	
КонецПроцедуры

#КонецОбласти
