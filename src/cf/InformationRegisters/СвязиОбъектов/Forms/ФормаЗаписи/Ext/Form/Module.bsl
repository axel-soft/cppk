//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("УникальныйИдентификаторФормыВладельца") Тогда 
		УникальныйИдентификаторФормыВладельца = Параметры.УникальныйИдентификаторФормыВладельца;
	КонецЕсли;	
	
	СвязанныйОбъект = Неопределено;
	Если ЗначениеЗаполнено(Запись.СвязанныйОбъект) Тогда 
		СвязанныйОбъект = Запись.СвязанныйОбъект;
	ИначеЕсли ЗначениеЗаполнено(Запись.СвязаннаяСтрока) Тогда 
		СвязанныйОбъект = Запись.СвязаннаяСтрока;
	КонецЕсли;	
	
	ЗаписьОбратнойСвязи = Неопределено;
	Если ЗначениеЗаполнено(Параметры.Ключ) Тогда 
		НачальныйТипСвязи = Запись.ТипСвязи;
		НачальныйСвязанныйДокумент = СвязанныйОбъект;
		ЗаписьОбратнойСвязи = НайтиЗаписьОбратнойСвязи();
	Иначе	
		НачальныйТипСвязи = Справочники.ТипыСвязей.ПустаяСсылка();
		НачальныйСвязанныйДокумент = Неопределено;
		Запись.ДатаУстановки = ТекущаяДатаСеанса();
		Запись.Установил = Сотрудники.ОсновнойСотрудник();
		
		Если Параметры.Свойство("Объект") И ЗначениеЗаполнено(Параметры.Объект) Тогда 
			Запись.Объект = Параметры.Объект;
		КонецЕсли;	
		
		Если Параметры.Свойство("ТипСвязи") И ЗначениеЗаполнено(Параметры.ТипСвязи) Тогда 
			Запись.ТипСвязи = Параметры.ТипСвязи;
		КонецЕсли;	
	КонецЕсли;	
	
	
	Если ЗначениеЗаполнено(Запись.Объект) Тогда 
		Элементы.Объект.ТолькоПросмотр = Истина;
		Элементы.ТипСвязи.АктивизироватьПоУмолчанию = Истина;
	КонецЕсли;	
	
	Если СвязанныйОбъект <> Неопределено Тогда 
		ТипСвязанногоОбъекта = ПолучитьТип(СвязанныйОбъект);
	КонецЕсли;
	Элементы.СвязанныйОбъект.ТолькоПросмотр = Не ЗначениеЗаполнено(ТипСвязанногоОбъекта);
	Элементы.СвязанныйОбъект.АвтоОтметкаНезаполненного = ЗначениеЗаполнено(ТипСвязанногоОбъекта);
	
	ЗаполнитьНастройкиСвязи();
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда 
		ПрименитьНастройкиСвязи();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// оповещение об удалении связи
	Если УдаленыВсеСвязиТипа Тогда 
		ПараметрОповещения = Новый Структура;
		ПараметрОповещения.Вставить("Документ", Запись.Объект);
		ПараметрОповещения.Вставить("ТипСвязи", НачальныйТипСвязи);
		
		Оповестить("УдаленыВсеСвязиТипа", ПараметрОповещения, ЭтаФорма);
	КонецЕсли;	
	
	// оповещение о создании связи
	ПараметрСобытия = Новый Структура;
	ПараметрСобытия.Вставить("Документ", 			Запись.Объект);
	ПараметрСобытия.Вставить("ТипСвязи", 			Запись.ТипСвязи);
	ПараметрСобытия.Вставить("СвязанныйОбъект", 	СвязанныйОбъект);
	ПараметрСобытия.Вставить("КлючЗаписи", 			Параметры.Ключ);
	Оповестить("СозданаСвязь", ПараметрСобытия, ЭтаФорма);
	
	// оповещение об изменении реквизитов
	Если РеквизитыВладельцаИзменены Тогда 
		Оповестить("ИзмененыРеквизитыПриИзмененииСвязи", Запись.Объект, ЭтаФорма);
	КонецЕсли;	
	
	// оповещение об изменении связи
	Если (НачальныйСвязанныйДокумент <> СвязанныйОбъект) 
	 Или (НачальныйТипСвязи <> Запись.ТипСвязи) Тогда 
		ТипыСвязей = Новый Массив;
		ТипыСвязей.Добавить(Запись.ТипСвязи);
		ТипыСвязей.Добавить(НачальныйТипСвязи);
		
		ПараметрОповещения = Новый Структура;
		ПараметрОповещения.Вставить("Документ", Запись.Объект);
		ПараметрОповещения.Вставить("ТипыСвязей", ТипыСвязей);
		ПараметрОповещения.Вставить("СвязанныйОбъект", Запись.СвязанныйОбъект);

		Оповестить("ИзмененыСвязиДокумента", ПараметрОповещения, ЭтаФорма);
	КонецЕсли;	
	
	НачальныйТипСвязи = Запись.ТипСвязи;
	НачальныйСвязанныйДокумент = СвязанныйОбъект;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Модифицированность Тогда 
		ТекущийОбъект.ДатаУстановки = ТекущаяДатаСеанса();
		ТекущийОбъект.Установил = Сотрудники.ОсновнойСотрудник();
	КонецЕсли;	
	
	Если ТипЗнч(СвязанныйОбъект) = Тип("Строка") Тогда 
		ТекущийОбъект.СвязанныйОбъект = Неопределено;
		ТекущийОбъект.СвязаннаяСтрока = СвязанныйОбъект;
	Иначе
		ТекущийОбъект.СвязанныйОбъект = СвязанныйОбъект;
		ТекущийОбъект.СвязаннаяСтрока = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УдаленыВсеСвязиТипа = Ложь;
	РеквизитыВладельцаИзменены = Ложь;
	
	Если НачальныйТипСвязи.Пустая() Тогда 
		РеквизитыВладельцаИзменены = СвязиОбъектов.УстановитьРеквизитыПриДобавленииСвязи(Запись.Объект, УникальныйИдентификаторФормыВладельца, Запись.ТипСвязи);
	ИначеЕсли НачальныйТипСвязи <> Запись.ТипСвязи Тогда 
		РеквизитыВладельцаИзменены1 = СвязиОбъектов.УстановитьРеквизитыПриУдаленииСвязи(Запись.Объект, УникальныйИдентификаторФормыВладельца, НачальныйТипСвязи);
		РеквизитыВладельцаИзменены2 = СвязиОбъектов.УстановитьРеквизитыПриДобавленииСвязи(Запись.Объект, УникальныйИдентификаторФормыВладельца, Запись.ТипСвязи);
		РеквизитыВладельцаИзменены = РеквизитыВладельцаИзменены1 Или РеквизитыВладельцаИзменены2;
		
		// удалены все связи с начальным типом
		НаборЗаписей = РегистрыСведений.СвязиОбъектов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Запись.Объект);
		НаборЗаписей.Отбор.ТипСвязи.Установить(НачальныйТипСвязи);
		НаборЗаписей.Прочитать();
		УдаленыВсеСвязиТипа = (НаборЗаписей.Количество() = 0);
	КонецЕсли;
	
	НастройкаСвязи = СвязиОбъектов.ПолучитьНастройкуСвязи(Запись.Объект, СвязанныйОбъект, Запись.ТипСвязи);
	Если НастройкаСвязи = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	ТипОбратнойСвязи = НастройкаСвязи.ТипОбратнойСвязи;
	
	Если ЗаписьОбратнойСвязи = Неопределено Тогда 
		Если ЗначениеЗаполнено(ТипОбратнойСвязи) Тогда 
			МенеджерЗаписи = РегистрыСведений.СвязиОбъектов.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ТипСвязи = ТипОбратнойСвязи;
			МенеджерЗаписи.Объект = СвязанныйОбъект;
			МенеджерЗаписи.СвязанныйОбъект = Запись.Объект;
			МенеджерЗаписи.Установил = Запись.Установил;
			МенеджерЗаписи.ДатаУстановки = Запись.ДатаУстановки;
			МенеджерЗаписи.Комментарий = Запись.Комментарий;
			МенеджерЗаписи.Записать();
			
			СвязиОбъектов.УстановитьРеквизитыПриДобавленииСвязи(МенеджерЗаписи.Объект, Неопределено, МенеджерЗаписи.ТипСвязи);
			
			ЗаписьОбратнойСвязи = РегистрыСведений.СвязиОбъектов.СоздатьКлючЗаписи(
				Новый Структура("ТипСвязи, Объект, СвязанныйОбъект", 
				МенеджерЗаписи.ТипСвязи, 
				МенеджерЗаписи.Объект, 
				МенеджерЗаписи.СвязанныйОбъект));
		КонецЕсли;	
	Иначе	
		Если ЗначениеЗаполнено(ТипОбратнойСвязи) Тогда 
			МенеджерЗаписи = РегистрыСведений.СвязиОбъектов.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ТипСвязи = ЗаписьОбратнойСвязи.ТипСвязи;
			МенеджерЗаписи.Объект = ЗаписьОбратнойСвязи.Объект;
			МенеджерЗаписи.СвязанныйОбъект = ЗаписьОбратнойСвязи.СвязанныйОбъект;
			МенеджерЗаписи.Прочитать();
			
			МенеджерЗаписи.ТипСвязи = ТипОбратнойСвязи;
			МенеджерЗаписи.Объект = СвязанныйОбъект;
			МенеджерЗаписи.СвязанныйОбъект = Запись.Объект;
			МенеджерЗаписи.Установил = Запись.Установил;
			МенеджерЗаписи.ДатаУстановки = Запись.ДатаУстановки;
			МенеджерЗаписи.Комментарий = Запись.Комментарий;
			МенеджерЗаписи.Записать();
			
			СвязиОбъектов.УстановитьРеквизитыПриУдаленииСвязи(ЗаписьОбратнойСвязи.Объект, Неопределено, ЗаписьОбратнойСвязи.ТипСвязи);
			СвязиОбъектов.УстановитьРеквизитыПриДобавленииСвязи(МенеджерЗаписи.Объект, Неопределено, МенеджерЗаписи.ТипСвязи);
			
			ЗаписьОбратнойСвязи = РегистрыСведений.СвязиОбъектов.СоздатьКлючЗаписи(
				Новый Структура("ТипСвязи, Объект, СвязанныйОбъект", 
				МенеджерЗаписи.ТипСвязи, 
				МенеджерЗаписи.Объект, 
				МенеджерЗаписи.СвязанныйОбъект));
		Иначе		
			МенеджерЗаписи = РегистрыСведений.СвязиОбъектов.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ТипСвязи = ЗаписьОбратнойСвязи.ТипСвязи;
			МенеджерЗаписи.Объект = ЗаписьОбратнойСвязи.Объект;
			МенеджерЗаписи.СвязанныйОбъект = ЗаписьОбратнойСвязи.СвязанныйОбъект;
			МенеджерЗаписи.Удалить();
			
			СвязиОбъектов.УстановитьРеквизитыПриУдаленииСвязи(ЗаписьОбратнойСвязи.Объект, Неопределено, ЗаписьОбратнойСвязи.ТипСвязи);
			
			ЗаписьОбратнойСвязи = Неопределено;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Запись.Объект = СвязанныйОбъект Тогда 
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Указана связь с документом, из которого устанавливается связь!'"),,
			"СвязанныйОбъект",, 
			Отказ);
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(СвязанныйОбъект) Тогда 
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Поле ""Связанный документ"" не заполнено'"),,
			"СвязанныйОбъект",, 
			Отказ);
	КонецЕсли;	
		
	Если Запись.ТипСвязи = Справочники.ТипыСвязей.ПервичноеОбращение 
		Или Запись.ТипСвязи = Справочники.ТипыСвязей.ПовторноеОбращение
		Или Запись.ТипСвязи = Справочники.ТипыСвязей.ОсновноеОбращение
		Или Запись.ТипСвязи = Справочники.ТипыСвязей.Дубликат Тогда 
		Если Не Константы.ВестиУчетОбращенийГраждан.Получить() Тогда 
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Указанный тип связи может быть использован только при включенном учете обращений граждан!'"),,
				"Запись.ТипСвязи",, 
				Отказ);
			
		ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоВходящийДокумент(СвязанныйОбъект) Тогда 
			ВидСвязанногоДокумента = СвязанныйОбъект.ВидДокумента;
			Если Не ВидСвязанногоДокумента.ЯвляетсяОбращениемОтГраждан Тогда 
				ОбщегоНазначения.СообщитьПользователю(
					НСтр("ru = 'Для текущего типа связи может быть указано только обращение гражданина!'"),,
					"СвязанныйОбъект",, 
					Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Комплекты документов
	Если Запись.ТипСвязи = Справочники.ТипыСвязей.Содержит Тогда
		Если Не ЭтоКомплект(Запись.Объект) Тогда
			ТекстСообщения = НСтр("ru = 'Документ не может содержать другие документы или файлы, так как он не является комплектом.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,"Запись.ТипСвязи" ,, Отказ);
		КонецЕсли;
	ИначеЕсли Запись.ТипСвязи = Справочники.ТипыСвязей.ВходитВКомплект Тогда
		Если Не ЭтоКомплект(СвязанныйОбъект) Тогда
			ТекстСообщения = НСтр("ru = 'Связь ""Входит в комплект"" может быть установлена только с документом, являющимся комплектом.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,"Запись.ТипСвязи" ,, Отказ);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Протоколирование работы пользователей
	Если ТекущийОбъект.ТипСвязи = Справочники.ТипыСвязей.Содержит Тогда
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Добавлен новый элемент:
			|%1
			|Ссылка:
			|%2'"),
			ТекущийОбъект.СвязанныйОбъект,
			ПолучитьНавигационнуюСсылку(ТекущийОбъект.СвязанныйОбъект));
		ПротоколированиеРаботыСотрудников.ЗаписатьИзменениеСоставаКомплекта(ТекущийОбъект.Объект, Описание);
	ИначеЕсли ТекущийОбъект.ТипСвязи = Справочники.ТипыСвязей.ВходитВКомплект Тогда
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Добавлен новый элемент:
			|%1
			|Ссылка:
			|%2'"),
			ТекущийОбъект.Объект,
			ПолучитьНавигационнуюСсылку(ТекущийОбъект.Объект));
		ПротоколированиеРаботыСотрудников.ЗаписатьИзменениеСоставаКомплекта(ТекущийОбъект.СвязанныйОбъект, Описание);
	КонецЕсли;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ 

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТипСоставногоРеквизита(Форма, ИмяРеквизита, ТипРеквизита)
	
	Если ЗначениеЗаполнено(ТипРеквизита) Тогда 
		
		Если ТипРеквизита <> ПолучитьТип(Форма.Запись[ИмяРеквизита]) Тогда 
			Если ИмяРеквизита = "СвязанныйОбъект" Тогда 
				Форма[ИмяРеквизита] = ?(ТипРеквизита = "Строка", "", Новый(ТипРеквизита));
			Иначе	
				Форма.Запись[ИмяРеквизита] = ?(ТипРеквизита = "Строка", "", Новый(ТипРеквизита));
			КонецЕсли;	
		КонецЕсли;
		
		Форма.Элементы[ИмяРеквизита].ТолькоПросмотр = Ложь;
		Форма.Элементы[ИмяРеквизита].АвтоОтметкаНезаполненного = Истина;
		Форма.Элементы[ИмяРеквизита].ОтметкаНезаполненного = Не ЗначениеЗаполнено(Форма.Запись[ИмяРеквизита]);
		
	Иначе
		
		Если ИмяРеквизита = "СвязанныйОбъект" Тогда 
			Форма[ИмяРеквизита] = Неопределено;
		Иначе
			Форма.Запись[ИмяРеквизита] = Неопределено;
		КонецЕсли;	
		
		Форма.Элементы[ИмяРеквизита].ТолькоПросмотр = Истина;
		Форма.Элементы[ИмяРеквизита].АвтоОтметкаНезаполненного = Ложь;
		Форма.Элементы[ИмяРеквизита].ОтметкаНезаполненного = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьТип(Значение)
	
	Если ТипЗнч(Значение) = Тип("Строка") Тогда 
		ИмяТипа = "Строка";
	ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.ДокументыПредприятия") Тогда 
		ИмяТипа = "СправочникСсылка.ДокументыПредприятия";
	ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.Файлы") Тогда
		ИмяТипа = "СправочникСсылка.Файлы";
	ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.Мероприятия") Тогда
		ИмяТипа = "СправочникСсылка.Мероприятия";
	ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.Проекты") Тогда 
		ИмяТипа = "СправочникСсылка.Проекты";
	ИначеЕсли ВстроеннаяПочтаКлиентСервер.ЭтоВходящееПисьмо(Значение) Тогда
		ИмяТипа = "ДокументСсылка.ВходящееПисьмо";
	ИначеЕсли ВстроеннаяПочтаКлиентСервер.ЭтоИсходящееПисьмо(Значение) Тогда
		ИмяТипа = "ДокументСсылка.ИсходящееПисьмо";
	Иначе
		ИмяТипа = "";
	КонецЕсли;
	
	Возврат ИмяТипа;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНастройкиСвязи()
	
	ТаблНастройкиСвязи = СвязиОбъектов.ПолучитьНастройкиСвязи(Запись.Объект);
	
	Если Не Константы.ВестиУчетОбращенийГраждан.Получить() Тогда 
		КоличествоСтрок = ТаблНастройкиСвязи.Количество();
		Для Инд = 1 По КоличествоСтрок Цикл 
			Строка = ТаблНастройкиСвязи[КоличествоСтрок-Инд];
			
			Если Строка.ТипСвязи = Справочники.ТипыСвязей.ПервичноеОбращение 
			 Или Строка.ТипСвязи = Справочники.ТипыСвязей.ПовторноеОбращение
			 Или Строка.ТипСвязи = Справочники.ТипыСвязей.ОсновноеОбращение
			 Или Строка.ТипСвязи = Справочники.ТипыСвязей.Дубликат Тогда 
				ТаблНастройкиСвязи.Удалить(Строка)
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли; 
	
	ЗначениеВРеквизитФормы(ТаблНастройкиСвязи, "НастройкиСвязи");
	
КонецПроцедуры

&НаСервере
Процедура ПрименитьНастройкиСвязи()
	
	ТаблНастройкиСвязи = РеквизитФормыВЗначение("НастройкиСвязи");
	
	// тип связи
	НастройкиСвязиТипСвязи = ТаблНастройкиСвязи.Скопировать();
	НастройкиСвязиТипСвязи.Свернуть("ТипСвязи");
	Если НастройкиСвязиТипСвязи.Количество() = 0 Тогда 
		Запись.ТипСвязи = Неопределено;
		ТипСвязанногоОбъекта = "";
		СвязанныйОбъект = Неопределено;
		УстановитьТипСоставногоРеквизита(ЭтаФорма, "СвязанныйОбъект", ТипСвязанногоОбъекта);
	ИначеЕсли НастройкиСвязиТипСвязи.Количество() = 1 Тогда 	
		Если Запись.ТипСвязи <> НастройкиСвязиТипСвязи[0].ТипСвязи Тогда 
			Запись.ТипСвязи = НастройкиСвязиТипСвязи[0].ТипСвязи;
		КонецЕсли;
	Иначе	
		Если ЗначениеЗаполнено(Запись.ТипСвязи) И НастройкиСвязиТипСвязи.Найти(Запись.ТипСвязи, "ТипСвязи") = Неопределено Тогда 
			Запись.ТипСвязи = Неопределено;
			ТипСвязанногоОбъекта = "";
			СвязанныйОбъект = Неопределено;
			УстановитьТипСоставногоРеквизита(ЭтаФорма, "СвязанныйОбъект", ТипСвязанногоОбъекта);
		КонецЕсли;
	КонецЕсли;
	
	// тип связанного документа
	Если ЗначениеЗаполнено(Запись.ТипСвязи) Тогда 
		НастройкиСвязиТипСсылкаНа = ТаблНастройкиСвязи.Скопировать();
		НастройкиСвязиТипСсылкаНа.Очистить();
		
		Для Каждого Строка Из ТаблНастройкиСвязи Цикл
			Если Строка.ТипСвязи = Запись.ТипСвязи Тогда 
				НоваяСтрока = НастройкиСвязиТипСсылкаНа.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			КонецЕсли;
		КонецЦикла;	
		
		НастройкиСвязиТипСсылкаНа.Свернуть("ТипСсылкаНа");
		Если НастройкиСвязиТипСсылкаНа.Количество() = 0 Тогда 
			ТипСвязанногоОбъекта = "";
			СвязанныйОбъект = Неопределено;
			УстановитьТипСоставногоРеквизита(ЭтаФорма, "СвязанныйОбъект", ТипСвязанногоОбъекта);
		ИначеЕсли НастройкиСвязиТипСсылкаНа.Количество() = 1 Тогда 
			Если ТипСвязанногоОбъекта <> НастройкиСвязиТипСсылкаНа[0].ТипСсылкаНа Тогда 
				ТипСвязанногоОбъекта = НастройкиСвязиТипСсылкаНа[0].ТипСсылкаНа;
				УстановитьТипСоставногоРеквизита(ЭтаФорма, "СвязанныйОбъект", ТипСвязанногоОбъекта);
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(ТипСвязанногоОбъекта) И НастройкиСвязиТипСсылкаНа.Найти(ТипСвязанногоОбъекта, "ТипСсылкаНа") = Неопределено Тогда 
				ТипСвязанногоОбъекта = "";
				СвязанныйОбъект = Неопределено;
				УстановитьТипСоставногоРеквизита(ЭтаФорма, "СвязанныйОбъект", ТипСвязанногоОбъекта);
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Функция ПолучитьТипыСвязи()
	
	СписокВозврата = Новый СписокЗначений;
	Для Каждого Строка Из НастройкиСвязи Цикл
		Если СписокВозврата.НайтиПоЗначению(Строка.ТипСвязи) = Неопределено Тогда 
			СписокВозврата.Добавить(Строка.ТипСвязи);
		КонецЕсли;	
	КонецЦикла;
	Возврат СписокВозврата;
	
КонецФункции	

&НаКлиенте
Функция ПолучитьТипыСвязанныхДокументов()
	
	СписокВозврата = Новый СписокЗначений;
	Для Каждого Строка Из НастройкиСвязи Цикл
		Если Строка.ТипСвязи = Запись.ТипСвязи Тогда 
			Если СписокВозврата.НайтиПоЗначению(Строка.ТипСсылкаНа) = Неопределено Тогда 
				СписокВозврата.Добавить(Строка.ТипСсылкаНа, Строка.ТипСсылкаНаПредставление);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	 
	Возврат СписокВозврата;
	
КонецФункции

&НаСервере
Функция ПолучитьВидыСвязанныхДокументов()
	
	СписокВозврата = Новый СписокЗначений;
	Для Каждого Строка Из НастройкиСвязи Цикл
		Если Строка.ТипСвязи = Запись.ТипСвязи И Строка.ТипСсылкаНа = ТипСвязанногоОбъекта Тогда 
			Если Строка.СсылкаНа.Пустая() Тогда 
				СписокВозврата.Добавить("Все");
			ИначеЕсли Строка.СсылкаНа.ЭтоГруппа Тогда 
				Подчиненные = Справочники[Строка.СсылкаНа.Метаданные().Имя].ВыбратьИерархически(Строка.СсылкаНа);
				Пока Подчиненные.Следующий() Цикл
					Если Не Подчиненные.ЭтоГруппа Тогда 
						СписокВозврата.Добавить(Подчиненные.Ссылка);
					КонецЕсли;	
				КонецЦикла;	
			Иначе	
				СписокВозврата.Добавить(Строка.СсылкаНа);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;	
	Возврат СписокВозврата;
	
КонецФункции

&НаСервере
Функция НайтиЗаписьОбратнойСвязи()
	
	НастройкаСвязи = СвязиОбъектов.ПолучитьНастройкуСвязи(Запись.Объект, СвязанныйОбъект, Запись.ТипСвязи);
	Если НастройкаСвязи = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;	
	
	ТипОбратнойСвязи = НастройкаСвязи.ТипОбратнойСвязи;
	Если Не ЗначениеЗаполнено(ТипОбратнойСвязи) Тогда 
		Возврат Неопределено;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.СвязиОбъектов КАК СвязиОбъектов
	|ГДЕ
	|	СвязиОбъектов.ТипСвязи = &ТипСвязи
	|	И СвязиОбъектов.Объект = &Документ
	|	И СвязиОбъектов.СвязанныйОбъект = &СвязанныйОбъект";
	Запрос.УстановитьПараметр("ТипСвязи", 			ТипОбратнойСвязи);
	Запрос.УстановитьПараметр("Документ", 			СвязанныйОбъект);
	Запрос.УстановитьПараметр("СвязанныйОбъект", 	Запись.Объект);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		Возврат Неопределено;
	КонецЕсли;	
	
	ЗначенияКлюча = Новый Структура("ТипСвязи, Документ, СвязанныйОбъект", 
		ТипОбратнойСвязи, 
		СвязанныйОбъект, 
		Запись.Объект);
	
	Возврат РегистрыСведений.СвязиОбъектов.СоздатьКлючЗаписи(ЗначенияКлюча);
	
КонецФункции	


//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ДокументПриИзменении(Элемент)
	
	ЗаполнитьНастройкиСвязи();
	ПрименитьНастройкиСвязи();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСвязиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.ТипСвязи) Тогда 
		ТипыСвязанныхДокументов = ПолучитьТипыСвязанныхДокументов();
		Если ЗначениеЗаполнено(ТипСвязанногоОбъекта) Тогда 
			Если ТипыСвязанныхДокументов.НайтиПоЗначению(ТипСвязанногоОбъекта) = Неопределено Тогда 
				ТипСвязанногоОбъекта = "";
				СвязанныйОбъект = Неопределено;
				УстановитьТипСоставногоРеквизита(ЭтаФорма, "СвязанныйОбъект", ТипСвязанногоОбъекта);
			КонецЕсли;	
		Иначе
			Если ТипыСвязанныхДокументов.Количество() = 1 Тогда 
				ТипСвязанногоОбъекта = ТипыСвязанныхДокументов[0].Значение;
				УстановитьТипСоставногоРеквизита(ЭтаФорма, "СвязанныйОбъект", ТипСвязанногоОбъекта);
			КонецЕсли;	
		КонецЕсли;	
	Иначе
		Если ЗначениеЗаполнено(ТипСвязанногоОбъекта) Тогда 
			ТипСвязанногоОбъекта = "";
			СвязанныйОбъект = Неопределено;
			УстановитьТипСоставногоРеквизита(ЭтаФорма, "СвязанныйОбъект", ТипСвязанногоОбъекта);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСвязиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Не ЗначениеЗаполнено(Запись.Объект) Тогда 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнено поле ""Объект""'"),,"Запись.Объект");
		Возврат;
	КонецЕсли;	
	
	ДоступныеТипыСвязи = ПолучитьТипыСвязи();
	Если ДоступныеТипыСвязи.Количество() = 0 Тогда 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для объекта не настроено ни одного типа связи'"),,"Запись.Объект");
		Возврат;
	КонецЕсли;	
	
	ДанныеВыбора = ДоступныеТипыСвязи;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСвязиАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	Если Не ЗначениеЗаполнено(Запись.Объект) Тогда 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнено поле ""Объект""'"),,"Запись.Объект");
		Возврат;
	КонецЕсли;	
	
	ДоступныеТипыСвязи = ПолучитьТипыСвязи();
	Если ДоступныеТипыСвязи.Количество() = 0 Тогда 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для объекта не настроено ни одного типа связи'"),,"Запись.Объект");
		Возврат;
	КонецЕсли;	
	
	СписокВыбора = Новый СписокЗначений;
	Для Каждого Тип Из ДоступныеТипыСвязи Цикл 
		ТипТекст = НРег(СокрЛП(Тип));
		ТекстПоиска = НРег(Текст);
		Если Лев(ТипТекст, СтрДлина(Текст)) = ТекстПоиска Тогда 
			СписокВыбора.Добавить(Тип.Значение);
		КонецЕсли;	
	КонецЦикла;
	
	ДанныеВыбора = СписокВыбора;

КонецПроцедуры

&НаКлиенте
Процедура ТипСвязиОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
		
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;

		Если Не ЗначениеЗаполнено(Запись.Объект) Тогда 
			ОчиститьСообщения();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнено поле ""Объект""'"),,"Запись.Объект");
			Возврат;
		КонецЕсли;	
		
		ДоступныеТипыСвязи = ПолучитьТипыСвязи();
		Если ДоступныеТипыСвязи.Количество() = 0 Тогда 
			ОчиститьСообщения();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для объекта не настроено ни одного типа связи'"),,"Запись.Объект");
			Возврат;
		КонецЕсли;	
		
		СписокВыбора = Новый СписокЗначений;
		Для Каждого Тип Из ДоступныеТипыСвязи Цикл 
			ТипТекст = НРег(СокрЛП(Тип));
			ТекстПоиска = НРег(Текст);
			Если Лев(ТипТекст, СтрДлина(Текст)) = ТекстПоиска Тогда 
				СписокВыбора.Добавить(Тип.Значение);
			КонецЕсли;	
		КонецЦикла;
		
		ДанныеВыбора = СписокВыбора;
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ТипСвязанногоОбъектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Запись.Объект) Тогда 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнено поле ""Объект""'"),,"Запись.Объект");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Запись.ТипСвязи) Тогда 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнено поле ""Тип связи""'"),,"Запись.ТипСвязи");
		Возврат;
	КонецЕсли;
	
	ТипыСвязанныхДокументов = ПолучитьТипыСвязанныхДокументов();
	Если ТипыСвязанныхДокументов.Количество() = 0 Тогда 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для объекта не настроено ни одного типа связи'"),,"Запись.Объект");
		Возврат;	
	КонецЕсли;	
	
	ДанныеВыбора = ТипыСвязанныхДокументов;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСвязанногоОбъектаПриИзменении(Элемент)
	
	УстановитьТипСоставногоРеквизита(ЭтаФорма, "СвязанныйОбъект", ТипСвязанногоОбъекта);
	
КонецПроцедуры

&НаКлиенте
Процедура СвязанныйОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипСвязанногоОбъекта <> "Строка" 
	   И ТипСвязанногоОбъекта <> "СправочникСсылка.Файлы"  
	   И ТипСвязанногоОбъекта <> "СправочникСсылка.Мероприятия" 
	   И ТипСвязанногоОбъекта <> "СправочникСсылка.Проекты" 
	   И ТипСвязанногоОбъекта <> "ДокументСсылка.ВходящееПисьмо" 
	   И ТипСвязанногоОбъекта <> "ДокументСсылка.ИсходящееПисьмо" Тогда 
	   
	   СтандартнаяОбработка = Ложь;
		
		ВидыСвязанныхДокументов = ПолучитьВидыСвязанныхДокументов();
		Если ВидыСвязанныхДокументов.Количество() = 0 Тогда 
			ОчиститьСообщения();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для объекта не настроено ни одного типа связи'"),,"Запись.Объект");
			Возврат;	
		КонецЕсли;	
		
		ПараметрыФормы = Новый Структура;
		Если ВидыСвязанныхДокументов.НайтиПоЗначению("Все") = Неопределено Тогда 
			ПараметрыФормы.Вставить("Отбор", Новый Структура("ВидДокумента", ВидыСвязанныхДокументов));
		КонецЕсли;	
		
		Поз = Найти(ТипСвязанногоОбъекта, ".");
		ИмяФормыВыбора = "Справочник." + Сред(ТипСвязанногоОбъекта, Поз + 1) + ".ФормаВыбора";
		
		ОткрытьФорму(ИмяФормыВыбора, ПараметрыФормы, Элемент);
		
	ИначеЕсли ТипСвязанногоОбъекта = "СправочникСсылка.Файлы" Тогда 
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура("ТекущаяСтрока", СвязанныйОбъект);
		ОткрытьФорму("Справочник.Файлы.Форма.ФормаВыбораФайлаВПапках", ПараметрыФормы, Элемент);
		
	ИначеЕсли ТипСвязанногоОбъекта = "СправочникСсылка.Мероприятия" Тогда 	
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура("ТекущаяСтрока", СвязанныйОбъект);
		ОткрытьФорму("Справочник.Мероприятия.ФормаВыбора", ПараметрыФормы, Элемент);
		
	ИначеЕсли ТипСвязанногоОбъекта = "СправочникСсылка.Проекты" Тогда 
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура("ТекущаяСтрока", СвязанныйОбъект);
		ОткрытьФорму("Справочник.Проекты.ФормаВыбора", ПараметрыФормы, Элемент);
		
	ИначеЕсли ТипСвязанногоОбъекта = "ДокументСсылка.ВходящееПисьмо" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура("ТекущаяСтрока", СвязанныйОбъект);
		ОткрытьФорму("Документ.ВходящееПисьмо.ФормаВыбора", ПараметрыФормы, Элемент);
		
	ИначеЕсли ТипСвязанногоОбъекта = "ДокументСсылка.ИсходящееПисьмо" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура("ТекущаяСтрока", СвязанныйОбъект);
		ОткрытьФорму("Документ.ИсходящееПисьмо.ФормаВыбора", ПараметрыФормы, Элемент);		
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СвязанныйОбъектОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(СвязанныйОбъект) Тогда
		Если ТипЗнч(СвязанныйОбъект) = Тип("Строка") Тогда 
			ПерейтиПоНавигационнойСсылке(СвязанныйОбъект);
		Иначе
			ПоказатьЗначение(, СвязанныйОбъект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// КОМПЛЕКТЫ ДОКУМЕНТОВ

&НаСервереБезКонтекста
Функция ЭтоКомплект(Документ)
	
	Возврат
	(ТипЗнч(Документ) = Тип("СправочникСсылка.ДокументыПредприятия")
	Или ТипЗнч(Документ) = Тип("СправочникСсылка.ШаблоныДокументов"))
	И ЗначениеЗаполнено(Документ.ВидДокумента)
	И Документ.ВидДокумента.ЯвляетсяКомплектомДокументов;
	
КонецФункции
