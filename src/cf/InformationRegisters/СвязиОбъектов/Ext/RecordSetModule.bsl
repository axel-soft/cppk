#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыСеанса.ЗагрузкаОбработанныхДанныхИзДругойСистемы Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для каждого Запись Из ЭтотОбъект Цикл
		
		// Комплекты документов
		Если Запись.ТипСвязи = Справочники.ТипыСвязей.Содержит Тогда
			Если Не ЭтоКомплект(Запись.Объект) Тогда
				ТекстСообщения = НСтр("ru = 'Документ не может содержать другие документы или файлы, так как он не является комплектом.'");
				ВызватьИсключение ТекстСообщения;
			ИначеЕсли ЭтоКомплектДокументов(Запись.Объект) Тогда
				Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Объект, "ПодписанЭП") = Истина Тогда
					ТекстСообщения = СтрШаблон(
						НСтр("ru = 'Комплект документов ""%1"" подписан ЭП. Нельзя менять состав комплекта.'"),
						Запись.Объект);
					ВызватьИсключение ТекстСообщения;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Запись.ТипСвязи = Справочники.ТипыСвязей.ВходитВКомплект Тогда
			Если Не ЭтоКомплект(Запись.СвязанныйОбъект) Тогда
				ТекстСообщения = НСтр("ru = 'Связь ""Входит в комплект"" может быть установлена только с документом, являющимся комплектом.'");
				ВызватьИсключение ТекстСообщения;
			ИначеЕсли ЭтоКомплектДокументов(Запись.СвязанныйОбъект) Тогда
				Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.СвязанныйОбъект, "ПодписанЭП") = Истина Тогда
					ТекстСообщения = СтрШаблон(
						НСтр("ru = 'Комплект документов ""%1"" подписан ЭП. Нельзя менять состав комплекта.'"),
						Запись.СвязанныйОбъект);
					ВызватьИсключение ТекстСообщения;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		
		СвязанныйДокумент = Неопределено;
		Если ЗначениеЗаполнено(Запись.СвязанныйОбъект) Тогда 
			СвязанныйДокумент = Запись.СвязанныйОбъект;
		ИначеЕсли ЗначениеЗаполнено(Запись.СвязаннаяСтрока) Тогда 
			СвязанныйДокумент = Запись.СвязаннаяСтрока;
		КонецЕсли;
		
		НастройкиСвязи = СвязиОбъектов.ПолучитьНастройкуСвязи(Запись.Объект, СвязанныйДокумент, Запись.ТипСвязи);
		Если НастройкиСвязи = Неопределено Тогда 
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Записываемая связь не соответствует настройкам для типа связи! Связи документов: %1, %2, %3'"), 
				Запись.Объект, Запись.ТипСвязи, СвязанныйДокумент);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		ХарактерСвязи = НастройкиСвязи.ХарактерСвязи;
		Если ХарактерСвязи = Перечисления.ХарактерСвязей.Единичная Тогда 
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 2
			|	СвязиОбъектов.Объект,
			|	СвязиОбъектов.ТипСвязи,
			|	СвязиОбъектов.СвязанныйОбъект,
			|	СвязиОбъектов.СвязаннаяСтрока,
			|	СвязиОбъектов.Комментарий,
			|	СвязиОбъектов.Установил,
			|	СвязиОбъектов.ДатаУстановки
			|ИЗ
			|	РегистрСведений.СвязиОбъектов КАК СвязиОбъектов
			|ГДЕ
			|	СвязиОбъектов.ТипСвязи = &ТипСвязи
			|	И СвязиОбъектов.Объект = &Документ
			|	И СвязиОбъектов.ДополнительныйОбъектСвязи = &ДополнительныйОбъектСвязи";
			Запрос.УстановитьПараметр("ТипСвязи", Запись.ТипСвязи);
			Запрос.УстановитьПараметр("Документ", Запись.Объект);
			Запрос.УстановитьПараметр("ДополнительныйОбъектСвязи", Запись.ДополнительныйОбъектСвязи);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Количество() > 1 Тогда 
				ТекстСообщения = СтрШаблон(
					НСтр("ru = 'Для документа %1 не может быть установлено более одной единичной связи %2!'"), 
					Запись.Объект, Запись.ТипСвязи);
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Запись Из ЭтотОбъект Цикл
		Если Не ДелопроизводствоКлиентСервер.ЭтоИсходящийДокумент(Запись.СвязанныйОбъект) Тогда
			Продолжить;
		КонецЕсли;
		
		КорреспонденцияДокумента = РаботаСКорреспонденцией.КорреспонденцияДокумента(Запись.СвязанныйОбъект);
		Если ЗначениеЗаполнено(КорреспонденцияДокумента) Тогда
			Получатели = КорреспонденцияДокумента.Корреспонденты;
			Отправлен = Ложь;
			Если Получатели.Количество() = 1 Тогда
				Отправлен = Получатели[0].Отправлен;
				
			ИначеЕсли Получатели.Найти(Ложь, "Отправлен") = Неопределено Тогда
				Отправлен = Истина;
				
			ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоВходящийДокумент(Запись.Объект) Тогда
				КорреспонденцияВходящего = РаботаСКорреспонденцией.КорреспонденцияДокумента(Запись.Объект);
				СтрокаКорреспонденцииВходящего = КорреспонденцияВходящего.Корреспонденты[0];
				ПараметрыОтбора = Новый Структура("Корреспондент", СтрокаКорреспонденцииВходящего.Корреспондент);
				НайденныеСтроки = Получатели.НайтиСтроки(ПараметрыОтбора);
				Если НайденныеСтроки.Количество() = 1 Тогда
					Отправлен = НайденныеСтроки[0].Отправлен;
				Иначе
					ПараметрыОтбора = Новый Структура("Корреспондент, Адресат", 
						СтрокаКорреспонденцииВходящего.Корреспондент, СтрокаКорреспонденцииВходящего.Адресат);
					НайденныеСтроки = Получатели.НайтиСтроки(ПараметрыОтбора);
					Если НайденныеСтроки.Количество() = 1 Тогда
						Отправлен = НайденныеСтроки[0].Отправлен;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
			Запись.СвязанныйОбъектОтправлен = Отправлен;
		КонецЕсли;
	КонецЦикла;
	
	// Заполнение РС КешИнформацииОбОбъектах
	СвязиПисем = Новый ТаблицаЗначений;
	СвязиПисем.Колонки.Добавить("Письмо");
	СвязиПисем.Колонки.Добавить("Признак");
	СвязиПисем.Колонки.Добавить("КоличествоСвязей");
	
	СписокПисем = Новый Массив;
	
	Если Замещение Тогда
		ТекущееЗначениеНабора = Выгрузить();
		Прочитать();
		Для каждого Запись Из ЭтотОбъект Цикл
			Если ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(Запись.Объект)
				И (Запись.ТипСвязи = Справочники.ТипыСвязей.ОтправленоОтветноеПисьмо
				Или Запись.ТипСвязи = Справочники.ТипыСвязей.ОтправленОтветныйДокумент
				Или Запись.ТипСвязи = Справочники.ТипыСвязей.ПересланоПисьмом
				Или Запись.ТипСвязи = Справочники.ТипыСвязей.ПеренаправленоПисьмом
				Или Запись.ТипСвязи = Справочники.ТипыСвязей.ПолученоОтветноеПисьмо
				Или Запись.ТипСвязи = Справочники.ТипыСвязей.ПолученОтветныйДокумент) Тогда
				СписокПисем.Добавить(Запись.Объект);
				
				СвязиПисемСтрока = СвязиПисем.Добавить();
				СвязиПисемСтрока.Письмо = Запись.Объект;
				СвязиПисемСтрока.Признак = СвязиОбъектов.ПолучитьИмяПризнакаДляТипаСвязи(Запись.ТипСвязи);
				СвязиПисемСтрока.КоличествоСвязей = -1;
			КонецЕсли;
		КонецЦикла;
		Загрузить(ТекущееЗначениеНабора);
	КонецЕсли;
	
	Для каждого Запись Из ЭтотОбъект Цикл
		Если ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(Запись.Объект)
			И (Запись.ТипСвязи = Справочники.ТипыСвязей.ОтправленоОтветноеПисьмо
			Или Запись.ТипСвязи = Справочники.ТипыСвязей.ОтправленОтветныйДокумент
			Или Запись.ТипСвязи = Справочники.ТипыСвязей.ПересланоПисьмом
			Или Запись.ТипСвязи = Справочники.ТипыСвязей.ПеренаправленоПисьмом
			Или Запись.ТипСвязи = Справочники.ТипыСвязей.ПолученоОтветноеПисьмо
			Или Запись.ТипСвязи = Справочники.ТипыСвязей.ПолученОтветныйДокумент) Тогда
			СписокПисем.Добавить(Запись.Объект);
			
			СвязиПисемСтрока = СвязиПисем.Добавить();
			СвязиПисемСтрока.Письмо = Запись.Объект;
			СвязиПисемСтрока.Признак = СвязиОбъектов.ПолучитьИмяПризнакаДляТипаСвязи(Запись.ТипСвязи);
			СвязиПисемСтрока.КоличествоСвязей = 1;
		КонецЕсли;
	КонецЦикла;
	
	Если СвязиПисем.Количество() > 0 Тогда
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СвязиОбъектов.Объект КАК Ссылка,
			|	СвязиОбъектов.ТипСвязи
			|ИЗ
			|	РегистрСведений.СвязиОбъектов КАК СвязиОбъектов
			|ГДЕ
			|	СвязиОбъектов.Объект В(&СписокПисем)
			|	И (СвязиОбъектов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ОтправленоОтветноеПисьмо)
			|			ИЛИ СвязиОбъектов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ОтправленОтветныйДокумент)
			|			ИЛИ СвязиОбъектов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПересланоПисьмом)
			|			ИЛИ СвязиОбъектов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПеренаправленоПисьмом)
			|			ИЛИ СвязиОбъектов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПолученоОтветноеПисьмо)
			|			ИЛИ СвязиОбъектов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПолученОтветныйДокумент))");
		Запрос.УстановитьПараметр("СписокПисем", СписокПисем);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СвязиПисемСтрока = СвязиПисем.Добавить();
			СвязиПисемСтрока.Письмо = Выборка.Ссылка;
			СвязиПисемСтрока.Признак = СвязиОбъектов.ПолучитьИмяПризнакаДляТипаСвязи(Выборка.ТипСвязи);
			СвязиПисемСтрока.КоличествоСвязей = 1;
		КонецЦикла;
		
		СвязиПисем.Свернуть("Письмо, Признак", "КоличествоСвязей");
		Для каждого СвязиПисемСтрока Из СвязиПисем Цикл
			РегистрыСведений.КешИнформацииОбОбъектах.УстановитьПризнак(
				СвязиПисемСтрока.Письмо,
				СвязиПисемСтрока.Признак,
				СвязиПисемСтрока.КоличествоСвязей > 0);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры


// КОМПЛЕКТЫ ДОКУМЕНТОВ

Функция ЭтоКомплект(Документ)
	
	Возврат
		(ТипЗнч(Документ) = Тип("СправочникСсылка.ДокументыПредприятия")
		Или ТипЗнч(Документ) = Тип("СправочникСсылка.ШаблоныДокументов"))
		И ЗначениеЗаполнено(Документ.ВидДокумента)
		И Документ.ВидДокумента.ЯвляетсяКомплектомДокументов;
	
КонецФункции

Функция ЭтоКомплектДокументов(Документ)
	
	Возврат
		ТипЗнч(Документ) = Тип("СправочникСсылка.ДокументыПредприятия")
		И ЗначениеЗаполнено(Документ.ВидДокумента)
		И Документ.ВидДокумента.ЯвляетсяКомплектомДокументов;
		
КонецФункции

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли