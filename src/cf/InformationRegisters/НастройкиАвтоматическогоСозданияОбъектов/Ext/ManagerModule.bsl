// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает ключ настройки автоматического создания документа.
//
// Возвращаемое значение:
//	Структура:
//		* Получатель - Неопределено, ОпределяемыйТип.Организация - Получатель.
//		* Отправитель - Неопределено, ОпределяемыйТип.УчастникЭДО - Отправитель.
//		* ИдентификаторОтправителя - Неопределено, Строка - Идентификатор отправителя.
//		* ИдентификаторПолучателя - Неопределено, Строка - Идентификатор получателя.
//		* ВидДокумента - Неопределено, СправочникСсылка.ВидыДокументовЭДО - Вид документа ЭДО.
//
Функция КлючНастройки() Экспорт
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Получатель", Неопределено);
	ПараметрыОтбора.Вставить("Отправитель", Неопределено);
	ПараметрыОтбора.Вставить("ИдентификаторОтправителя", Неопределено);
	ПараметрыОтбора.Вставить("ИдентификаторПолучателя", Неопределено);
	ПараметрыОтбора.Вставить("ВидДокумента", Неопределено);
	
	Возврат ПараметрыОтбора;
	
КонецФункции

// Возвращает настройку автоматического создания объекта.
//
// Параметры:
//	КлючНастройки - см. КлючНастройки.
//
// Возвращаемое значение:
//	СправочникСсылка.ПравилаЗагрузкиДанныхВДО, Неопределено - Настройка создания объекта.
//
Функция НастройкаПоКлючу(КлючНастройки) Экспорт
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	НастройкиАвтоматическогоСозданияДокументов.Настройка КАК Настройка
		|ИЗ
		|	РегистрСведений.НастройкиАвтоматическогоСозданияОбъектов КАК НастройкиАвтоматическогоСозданияДокументов
		|ГДЕ
		|	НастройкиАвтоматическогоСозданияДокументов.ВидДокумента = &ВидДокумента
		|	И НастройкиАвтоматическогоСозданияДокументов.Получатель = &Получатель
		|	И НастройкиАвтоматическогоСозданияДокументов.Отправитель = &Отправитель
		|	И НастройкиАвтоматическогоСозданияДокументов.ИдентификаторОтправителя = &ИдентификаторОтправителя
		|	И НастройкиАвтоматическогоСозданияДокументов.ИдентификаторПолучателя = &ИдентификаторПолучателя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиАвтоматическогоСозданияДокументов.Настройка КАК Настройка
		|ИЗ
		|	РегистрСведений.НастройкиАвтоматическогоСозданияОбъектов КАК НастройкиАвтоматическогоСозданияДокументов
		|ГДЕ
		|	НастройкиАвтоматическогоСозданияДокументов.ВидДокумента = &ВидДокумента
		|	И НастройкиАвтоматическогоСозданияДокументов.Получатель = &Получатель
		|	И НастройкиАвтоматическогоСозданияДокументов.Отправитель = &Отправитель
		|	И НастройкиАвтоматическогоСозданияДокументов.ИдентификаторОтправителя = """"
		|	И НастройкиАвтоматическогоСозданияДокументов.ИдентификаторПолучателя = """"");
	
	Запрос.УстановитьПараметр("Отправитель", КлючНастройки.Отправитель);
	Запрос.УстановитьПараметр("Получатель", КлючНастройки.Получатель);
	Запрос.УстановитьПараметр("ИдентификаторОтправителя", КлючНастройки.ИдентификаторОтправителя);
	Запрос.УстановитьПараметр("ИдентификаторПолучателя", КлючНастройки.ИдентификаторПолучателя);
	Запрос.УстановитьПараметр("ВидДокумента", КлючНастройки.ВидДокумента);	
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);

	РезультатЗапроса = РезультатыЗапроса[0];
	Если РезультатЗапроса.Пустой() Тогда
		РезультатЗапроса = РезультатыЗапроса[1];
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Настройка;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Добавляет настройку автоматического создания документа.
//
// Параметры:
//	КлючНастройки - см. КлючНастройки.
//	Настройка - СправочникСсылка.ПравилаЗагрузкиДанныхВДО - Настройка создания объекта.
//
Процедура Добавить(КлючНастройки, Настройка) Экспорт
	
	Запись = СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, КлючНастройки);
	Запись.Настройка = Настройка;
	Запись.Записать();
	
КонецПроцедуры

// Удаляет настройку автоматического создания документа.
//
// Параметры:
//	КлючНастройки - см. КлючНастройки.
//
Процедура Удалить(КлючНастройки) Экспорт
	
	Запись = СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, КлючНастройки);
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		Запись.Удалить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
