#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет новую запись в регистр ИсторияСроковДействияДокументов.
//
// Параметры:
//   Параметры - см. РегистрыСведений.ИсторияСроковДействияДокументов.НоваяЗапись
//
Процедура ДобавитьЗапись(Параметры) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.Документ = Параметры.Документ;
	Запись.ДатаИзменения = ТекущаяДата();
	Запись.ДатаНачалаДействия = Параметры.ДатаНачалаДействия;
	Запись.ДатаОкончанияДействия = Параметры.ДатаОкончанияДействия;
	Запись.Бессрочный = Параметры.Бессрочный;
	Запись.ПорядокПродления = Параметры.ПорядокПродления;
	Запись.Изменил = Сотрудники.ОсновнойСотрудник();
	Запись.ДокументИсточникИзменения = Параметры.ДокументИсточникИзменения;
	Запись.Комментарий = Параметры.Комментарий;
	Запись.Записать(Истина);
	
КонецПроцедуры

// Возвращает историю срока действия документа.
//
// Параметры:
//   Документ - СправочникСсылка.ДокументыПредприятия - исходный документ.
//
// Возвращаемое значение:
//   Структура:
//     * Комментарий - Строка
//     * ДокументИсточникИзменения - СправочникСсылка.ДокументыПредприятия
//
Функция ИсторияСрокаДействия(Документ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИсторияСрокаДействия = Новый Структура("Комментарий, ДокументИсточникИзменения");
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ИсторияСроковДействияДокументов.ДатаИзменения,
		|	ИсторияСроковДействияДокументов.Комментарий,
		|	ИсторияСроковДействияДокументов.ДокументИсточникИзменения
		|ИЗ
		|	РегистрСведений.ИсторияСроковДействияДокументов КАК ИсторияСроковДействияДокументов
		|ГДЕ
		|	ИсторияСроковДействияДокументов.Документ = &Документ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИсторияСроковДействияДокументов.ДатаИзменения УБЫВ");
	Запрос.УстановитьПараметр("Документ", Документ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ИсторияСрокаДействия, Выборка);
	КонецЕсли;
	
	Возврат ИсторияСрокаДействия;
	
КонецФункции

// Конструкт структуры для добавления новой записи в регистр ИсторияСроковДействияДокументов.
//
// Возвращаемое значение:
//   Структура:
//     * Документ - СправочникСсылка.ДокументыПредприятия
//     * ДатаНачалаДействия - Дата
//     * ДатаОкончанияДействия - Дата
//     * Бессрочный - Булево
//     * ПорядокПродления - ПеречислениеСсылка.ПорядокПродления
//     * ДокументИсточникИзменения - СправочникСсылка.ДокументыПредприятия
//     * Комментарий - Строка
//
Функция НоваяЗапись() Экспорт
	
	НоваяЗапись = Новый Структура;
	НоваяЗапись.Вставить("Документ", Справочники.ДокументыПредприятия.ПустаяСсылка());
	НоваяЗапись.Вставить("ДатаНачалаДействия", Дата(1, 1, 1));
	НоваяЗапись.Вставить("ДатаОкончанияДействия", Дата(1, 1, 1));
	НоваяЗапись.Вставить("Бессрочный", Ложь);
	НоваяЗапись.Вставить("ПорядокПродления", Перечисления.ПорядокПродления.ПустаяСсылка());
	НоваяЗапись.Вставить("ДокументИсточникИзменения", Справочники.ДокументыПредприятия.ПустаяСсылка());
	НоваяЗапись.Вставить("Комментарий", "");
	
	Возврат НоваяЗапись;
	
КонецФункции

#КонецОбласти

#КонецЕсли