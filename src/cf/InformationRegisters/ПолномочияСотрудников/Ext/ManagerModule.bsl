#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ДобавитьПолномочия(Владелец, Полномочия) Экспорт
	
	НачатьТранзакцию();
	
	// Сохранение информации о правах ролей до внесения изменений.
	СотрудникиДляПроверкиПрав = РегистрыСведений.СотрудникиВКонтейнерах.СотрудникиВКонтейнере(Владелец);
	ПраваДоИзменений = ПраваПоПолномочиям(СотрудникиДляПроверкиПрав);
	
	// Добавление Полномочий.
	Запись = РегистрыСведений.ПолномочияСотрудников.СоздатьМенеджерЗаписи();
	Запись.Владелец = Владелец;
	Запись.Полномочия = Полномочия;
	Запись.Записать();
	
	// Обновление прав доступа.
	СравнитьПраваРолейИВыполнитьПересчетПрав(СотрудникиДляПроверкиПрав, ПраваДоИзменений);
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Процедура УдалитьПолномочия(Владелец, Полномочия) Экспорт
	
	НачатьТранзакцию();
	
	// Сохранение информации о правах ролей до внесения изменений.
	СотрудникиДляПроверкиПрав = РегистрыСведений.СотрудникиВКонтейнерах.СотрудникиВКонтейнере(Владелец);
	ПраваДоИзменений = ПраваПоПолномочиям(СотрудникиДляПроверкиПрав);
	
	// Удаление полномочия для самого владельца.
	НаборЗаписей = РегистрыСведений.ПолномочияСотрудников.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Полномочия.Установить(Полномочия);
	НаборЗаписей.Отбор.Владелец.Установить(Владелец);
	НаборЗаписей.Записать();
	
	// Обновление прав по дескрипторам.
	СравнитьПраваРолейИВыполнитьПересчетПрав(СотрудникиДляПроверкиПрав, ПраваДоИзменений);
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПраваПоПолномочиям(Сотрудники)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СотрудникиВКонтейнерах.Сотрудник КАК Сотрудник,
		|	ПраваРолей.ОбъектМетаданных КАК ОбъектМетаданных,
		|	ИСТИНА КАК Чтение,
		|	ПраваРолей.Добавление КАК Добавление,
		|	ПраваРолей.Изменение КАК Изменение,
		|	ПраваРолей.ЧтениеБезОграничения КАК ЧтениеБезОграничения,
		|	ПраваРолей.ИзменениеБезОграничения КАК ИзменениеБезОграничения
		|ПОМЕСТИТЬ ПраваСотрудников
		|ИЗ
		|	РегистрСведений.ПраваРолей КАК ПраваРолей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК ПрофилиГруппДоступаРоли
		|		ПО ПраваРолей.Роль = ПрофилиГруппДоступаРоли.Роль
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПолномочияСотрудников КАК ПолномочияСотрудников
		|		ПО ПрофилиГруппДоступаРоли.Ссылка = ПолномочияСотрудников.Полномочия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СотрудникиВКонтейнерах КАК СотрудникиВКонтейнерах
		|		ПО ПолномочияСотрудников.Владелец = СотрудникиВКонтейнерах.Контейнер
		|ГДЕ
		|	СотрудникиВКонтейнерах.Сотрудник В(&Сотрудники)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.ОбъектМетаданных КАК ОбъектМетаданных,
		|	МИНИМУМ(ВложенныйЗапрос.Чтение) КАК Чтение,
		|	МИНИМУМ(ВложенныйЗапрос.Добавление) КАК Добавление,
		|	МИНИМУМ(ВложенныйЗапрос.Изменение) КАК Изменение,
		|	МИНИМУМ(ВложенныйЗапрос.ЧтениеБезОграничения) КАК ЧтениеБезОграничения,
		|	МИНИМУМ(ВложенныйЗапрос.ИзменениеБезОграничения) КАК ИзменениеБезОграничения
		|ИЗ
		|	(ВЫБРАТЬ
		|		Сотрудники.Ссылка КАК Сотрудник,
		|		ИдентификаторыОбъектовМетаданных.Ссылка КАК ОбъектМетаданных,
		|		МАКСИМУМ(НЕ ПраваСотрудников.ОбъектМетаданных ЕСТЬ NULL ) КАК Чтение,
		|		МАКСИМУМ(ЕСТЬNULL(ПраваСотрудников.Добавление, ЛОЖЬ)) КАК Добавление,
		|		МАКСИМУМ(ЕСТЬNULL(ПраваСотрудников.Изменение, ЛОЖЬ)) КАК Изменение,
		|		МАКСИМУМ(ЕСТЬNULL(ПраваСотрудников.ЧтениеБезОграничения, ЛОЖЬ)) КАК ЧтениеБезОграничения,
		|		МАКСИМУМ(ЕСТЬNULL(ПраваСотрудников.ИзменениеБезОграничения, ЛОЖЬ)) КАК ИзменениеБезОграничения
		|	ИЗ
		|		Справочник.ИдентификаторыОбъектовМетаданных КАК ИдентификаторыОбъектовМетаданных
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
		|			ПО (ИСТИНА)
		|			ЛЕВОЕ СОЕДИНЕНИЕ ПраваСотрудников КАК ПраваСотрудников
		|			ПО ИдентификаторыОбъектовМетаданных.Ссылка = ПраваСотрудников.ОбъектМетаданных
		|				И (Сотрудники.Ссылка = ПраваСотрудников.Сотрудник)
		|	ГДЕ
		|		ИдентификаторыОбъектовМетаданных.Ссылка В(&ОбъектыМетаданныхМеханизмаПрав)
		|		И Сотрудники.Ссылка В(&Сотрудники)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Сотрудники.Ссылка,
		|		ИдентификаторыОбъектовМетаданных.Ссылка) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ОбъектМетаданных");
	
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.УстановитьПараметр("ОбъектыМетаданныхМеханизмаПрав",
		ДокументооборотПраваДоступаПовтИсп.ВсеОбъектыМеханизмаПравДоступа());
	
	ТаблицаПрав = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаПрав;
	
КонецФункции

Процедура СравнитьПраваРолейИВыполнитьПересчетПрав(Сотрудники, СтарыеПрава);
	
	Если Не ДокументооборотПраваДоступаПовтИсп.ВключеноИспользованиеПравДоступа() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СтарыеПрава.ОбъектМетаданных,
		|	СтарыеПрава.Чтение,
		|	СтарыеПрава.Добавление,
		|	СтарыеПрава.Изменение,
		|	СтарыеПрава.ЧтениеБезОграничения,
		|	СтарыеПрава.ИзменениеБезОграничения
		|ПОМЕСТИТЬ СтарыеПрава
		|ИЗ
		|	&СтарыеПрава КАК СтарыеПрава
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НовыеПрава.ОбъектМетаданных,
		|	НовыеПрава.Чтение,
		|	НовыеПрава.Добавление,
		|	НовыеПрава.Изменение,
		|	НовыеПрава.ЧтениеБезОграничения,
		|	НовыеПрава.ИзменениеБезОграничения
		|ПОМЕСТИТЬ НовыеПрава
		|ИЗ
		|	&НовыеПрава КАК НовыеПрава
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НовыеПрава.ОбъектМетаданных КАК ОбъектМетаданных
		|ИЗ
		|	НовыеПрава КАК НовыеПрава
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтарыеПрава КАК СтарыеПрава
		|		ПО НовыеПрава.ОбъектМетаданных = СтарыеПрава.ОбъектМетаданных
		|			И НовыеПрава.Чтение = СтарыеПрава.Чтение
		|			И НовыеПрава.Добавление = СтарыеПрава.Добавление
		|			И НовыеПрава.Изменение = СтарыеПрава.Изменение
		|			И НовыеПрава.ЧтениеБезОграничения = СтарыеПрава.ЧтениеБезОграничения
		|			И НовыеПрава.ИзменениеБезОграничения = СтарыеПрава.ИзменениеБезОграничения
		|ГДЕ
		|	СтарыеПрава.ОбъектМетаданных ЕСТЬ NULL");
	
	Запрос.УстановитьПараметр("СтарыеПрава", СтарыеПрава);
	Запрос.УстановитьПараметр("НовыеПрава",  ПраваПоПолномочиям(Сотрудники));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДокументооборотПраваДоступа.РассчитатьПраваОбъектовТаблицы(Выборка.ОбъектМетаданных);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
