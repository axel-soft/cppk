#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает признак делегата для исполнителя роли или полномочий пользователя.
//
// Параметры:
//  РольСотрудник - СправочникСсылка.Сотрудники, СправочникСсылка.ПолныеРоли - 
//                     роль или сотрудник, чьи полномочия выполняет исполнитель.
//  Исполнитель - СправочникСсылка.Сотрудники - Исполнитель.
//  ИмяОбластиЗамещения - Строка, Массив из Строка - имя предопределенного элемента справочника ОбластиЗамещения или их массив
//
// Возвращаемое значение:
//  Булево - возвращается Истина если исполнитель выполняет роль или полномочия сотрудника по делегированию.
//           Иначе возвращается ложь.
//
Функция ИсполнительЯвляетсяДелегатом(РольСотрудник, Исполнитель, ИмяОбластиЗамещения) Экспорт
	
	ОбластиЗамещения = Новый Массив;
	ОбластиЗамещения.Добавить("");
	
	Если ТипЗнч(ИмяОбластиЗамещения) = Тип("Строка") Тогда
		ОбластиЗамещения.Добавить(ИмяОбластиЗамещения);
	ИначеЕсли ТипЗнч(ИмяОбластиЗамещения) = Тип("Массив") Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОбластиЗамещения, ИмяОбластиЗамещения, Истина);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		// Определяем признак делегирования для текущей задачи по ее исполнителю.
		// Если в регистре ИсполнителиРолейИДелегаты есть записи без настройки делегирования
		// для текущего сотрдуника и исполнителя задачи, то считается, что задача не делегирована.
		// Если есть записи только с настройками делегирования, тогда задача делегирована сотруднику.
		// Если записей в регистре нет, то не определяем и не выводим признак делегированной задачи.
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МИНИМУМ(ИсполнителиРолейИДелегаты.НастройкаДелегирования <> ЗНАЧЕНИЕ(Справочник.ЗамещающиеИПомощники.ПустаяСсылка)), ЛОЖЬ) КАК ЭтоДелегат
		|ИЗ
		|	РегистрСведений.ИсполнителиРолейИДелегаты КАК ИсполнителиРолейИДелегаты
		|ГДЕ
		|	ИсполнителиРолейИДелегаты.ИсполнительДелегат = &ТекущийПользователь
		|	И ИсполнителиРолейИДелегаты.РольСотрудник = &Исполнитель
		|	И ИсполнителиРолейИДелегаты.ИмяОбластиДелегирования В (&ОбластиЗамещения)";
		
	Запрос.УстановитьПараметр("ТекущийПользователь", Исполнитель);
	Запрос.УстановитьПараметр("Исполнитель", РольСотрудник);
	Запрос.УстановитьПараметр("ОбластиЗамещения", ОбластиЗамещения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ЭтоДелегат;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Обновляет записи регистра по Пользователю.
//
// Параметры:
//  Сотрудник - СправочникСсылка.Сотрудники - сотрудник для которого добавляется
//                 запись в регистр.
//
Процедура ОбновитьЗаписиПоСотруднику(Сотрудник) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК ЕстьЗапись
		|ИЗ
		|	РегистрСведений.ИсполнителиРолейИДелегаты КАК ИсполнителиРолейИДелегаты
		|ГДЕ
		|	ИсполнителиРолейИДелегаты.ИсполнительДелегат = &ИсполнительДелегат
		|	И ИсполнителиРолейИДелегаты.РольСотрудник = &РольСотрудник");
	Запрос.УстановитьПараметр("ИсполнительДелегат", Сотрудник);
	Запрос.УстановитьПараметр("РольСотрудник", Сотрудник);
	РезультатЗапроса = Запрос.Выполнить();
	ЭтоНоваяЗапись = РезультатЗапроса.Пустой();
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.РольСотрудник = Сотрудник;
	Запись.ИсполнительДелегат = Сотрудник;
	
	Запись.Записать();
	
	Если ЭтоНоваяЗапись Тогда
		РегистрыСведений.ОчередьОбновленияКэширующихДанных.Добавить(
			"Документ.ДанныеКонтроля",
			"РегистрСведений.ИсполнителиРолейИДелегаты",
			Сотрудник);
	КонецЕсли;
	
КонецПроцедуры

// Обновляет записи регистра по исполнителю роли.
// При этом учитывается делегирование прав от текущего исполнителя - если от исполнителя
// делегированы полномочия, то текущая роль обновляется и в записях регистра по этим делегированиям.
//
// Параметры:
//  Исполнитель - СправочникСсылка.Сотрудники - исполнитель роли.
//  РольИсполнителя - СправочникСсылка.ПолныеРоли - роль.
//
Процедура ОбновитьЗаписиПоИсполнителюРоли(Исполнитель, РольИсполнителя) Экспорт
		
	УстановитьПривилегированныйРежим(Истина);
	
	// Определим наличие записей для текущего исполнителя роли в регистр ИсполнителиРолей.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИсполнителиРолей.Исполнитель,
		|	ИсполнителиРолей.РольИсполнителя
		|ИЗ
		|	РегистрСведений.ИсполнителиРолей КАК ИсполнителиРолей
		|ГДЕ
		|	ИсполнителиРолей.Исполнитель = &Исполнитель
		|	И ИсполнителиРолей.РольИсполнителя = &РольИсполнителя
		|";
	
	Запрос.УстановитьПараметр("Исполнитель", Исполнитель);
	Запрос.УстановитьПараметр("РольИсполнителя", РольИсполнителя);
	
	РезультатЗапроса = Запрос.Выполнить();
	УдалениеИсполнителя = РезультатЗапроса.Пустой();
	
	Набор = СоздатьНаборЗаписей();
	Набор.Отбор.ИсполнительДелегат.Установить(Исполнитель);
	Набор.Отбор.РольСотрудник.Установить(РольИсполнителя);
	Набор.Отбор.НастройкаДелегирования.Установить(Неопределено);
	
	Если Не УдалениеИсполнителя Тогда
		Запись = Набор.Добавить();
		Запись.РольСотрудник = РольИсполнителя;
		Запись.ИсполнительДелегат = Исполнитель;
	КонецЕсли;
	
	Набор.Записать();
	
	// Определим настройки делегирования исполнителя роли.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗамещающиеИПомощники.Ссылка КАК Ссылка,
		|	ЗамещающиеИПомощники.Замещающий,
		|	ЕСТЬNULL(ОбластиЗамещения.ИмяПредопределенныхДанных, """") КАК ИмяОбластиДелегирования
		|ИЗ
		|	Справочник.ЗамещающиеИПомощники КАК ЗамещающиеИПомощники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗамещающиеИПомощники.ВопросыЗамещения КАК ЗамещающиеИПомощникиВопросыЗамещения
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбластиЗамещения КАК ОбластиЗамещения
		|			ПО ЗамещающиеИПомощникиВопросыЗамещения.Область = ОбластиЗамещения.Ссылка
		|		ПО (ЗамещающиеИПомощникиВопросыЗамещения.Ссылка = ЗамещающиеИПомощники.Ссылка)
		|ГДЕ
		|	ЗамещающиеИПомощники.Сотрудник = &ОтКого
		|	И ЗамещающиеИПомощники.Действует = ИСТИНА
		|ИТОГИ ПО
		|	Ссылка";
		
	Запрос.УстановитьПараметр("ОтКого", Исполнитель);
	
	ВыборкаПоНастройкамДелегирования = 
		Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоНастройкамДелегирования.Следующий() Цикл
		
		Набор = СоздатьНаборЗаписей();
		Набор.Отбор.РольСотрудник.Установить(РольИсполнителя);
		Набор.Отбор.НастройкаДелегирования.Установить(ВыборкаПоНастройкамДелегирования.Ссылка);
		
		Если Не УдалениеИсполнителя Тогда
			ВыборкаПоОбластямДелегирования = ВыборкаПоНастройкамДелегирования.Выбрать();
			
			ПропуститьОбластьБезИмени = Ложь;
			Если ВыборкаПоОбластямДелегирования.Количество() > 1 Тогда
				ПропуститьОбластьБезИмени = Истина;
			КонецЕсли;
			
			Пока ВыборкаПоОбластямДелегирования.Следующий() Цикл
				
				Если ПропуститьОбластьБезИмени
					И ВыборкаПоОбластямДелегирования.ИмяОбластиДелегирования = "" Тогда
					
					Продолжить;
				КонецЕсли;
				
				Запись = Набор.Добавить();
				Запись.РольСотрудник = РольИсполнителя;
				Запись.ИсполнительДелегат = ВыборкаПоОбластямДелегирования.Замещающий;
				Запись.НастройкаДелегирования = ВыборкаПоНастройкамДелегирования.Ссылка;
				Запись.ИмяОбластиДелегирования = ВыборкаПоОбластямДелегирования.ИмяОбластиДелегирования;
						
			КонецЦикла;
			
		КонецЕсли;
		
		Набор.Записать();
		
	КонецЦикла;
	
	РегистрыСведений.ОчередьОбновленияКэширующихДанных.Добавить(
		"Документ.ДанныеКонтроля",
		"РегистрСведений.ИсполнителиРолейИДелегаты",
		РольИсполнителя);
		
КонецПроцедуры

// Обновляет записи регистра по настройке делегирования.
// При этом учитываются роли делегирующего. Т.е. если у делегирующего
// имеются роли, то они дублируются для делегата с заполнением измерения НастройкаЗамещения.
//
// Параметры:
//  НастройкаЗамещения - СправочникОбъект.ЗамещающиеИПомощники, СправочникСсылка.ЗамещающиеИПомощники -  настройка делегирования.
//
Процедура ОбновитьЗаписиПоНастройкеЗамещения(НастройкаЗамещения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ОбщегоНазначения.ЭтоСсылка(ТипЗнч(НастройкаЗамещения)) Тогда
		РеквизитыНастройки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			НастройкаЗамещения,
			"Ссылка, Сотрудник, Замещающий, Действует, ВопросыЗамещения");
			
		РеквизитыНастройки.ВопросыЗамещения = РеквизитыНастройки.ВопросыЗамещения.Выгрузить();
	Иначе
		РеквизитыНастройки = НастройкаЗамещения;
	КонецЕсли;
	
	Набор = СоздатьНаборЗаписей();
	Набор.Отбор.НастройкаДелегирования.Установить(РеквизитыНастройки.Ссылка);
	
	ПолноеИмяДанныеКонтроля = "Документ.ДанныеКонтроля";
	ПолноеИмяИсполнителиРолейИДелегаты = "РегистрСведений.ИсполнителиРолейИДелегаты";
	
	Если РеквизитыНастройки.Действует Тогда
		
		// Получим имена делегированных областей.
		ИменаДелегированныхОбластей = Новый Массив;
		Если РеквизитыНастройки.ВопросыЗамещения.Найти(Справочники.ОбластиЗамещения.ВсеОбласти) <> Неопределено Тогда
			ИменаДелегированныхОбластей.Добавить("");
		Иначе
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ОбластиЗамещения.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
				|ИЗ
				|	Справочник.ОбластиЗамещения КАК ОбластиЗамещения
				|ГДЕ
				|	ОбластиЗамещения.Ссылка В(&ВопросыЗамещения)
				|	И ОбластиЗамещения.ИмяПредопределенныхДанных <> """"";
				
			Запрос.УстановитьПараметр("ВопросыЗамещения", 
				РеквизитыНастройки.ВопросыЗамещения.ВыгрузитьКолонку("Область"));
				
			ИменаДелегированныхОбластей = 
				Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ИмяПредопределенныхДанных");
		КонецЕсли;
	
		СотрудникиОтКого = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РеквизитыНастройки.Сотрудник);
		СотрудникиКому = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РеквизитыНастройки.Замещающий);
		
		// Определим делегируемые роли
		ДелегируемыеРоли = РегистрыСведений.ИсполнителиРолей.РолиИсполнителей(СотрудникиОтКого);
		
		Для Каждого ИмяОбластиДелегирования Из ИменаДелегированныхОбластей Цикл
			
			Для Каждого СотрудникОтКого Из СотрудникиОтКого Цикл
				
				Для Каждого СотрудникКому Из СотрудникиКому Цикл
					
					// Добавляем делегата.
					Запись = Набор.Добавить();
				
					Запись.НастройкаДелегирования = РеквизитыНастройки.Ссылка;
					Запись.РольСотрудник = СотрудникОтКого;
					Запись.ИсполнительДелегат = СотрудникКому;
					Запись.ИмяОбластиДелегирования = ИмяОбластиДелегирования;
					
					РегистрыСведений.ОчередьОбновленияКэширующихДанных.Добавить(
						ПолноеИмяДанныеКонтроля,
						ПолноеИмяИсполнителиРолейИДелегаты,
						СотрудникОтКого);
						
					// Добавляем делегированные роли.
					Для Каждого ДелегируемаяРоль Из ДелегируемыеРоли Цикл
						
						Запись = Набор.Добавить();
						
						Запись.РольСотрудник = ДелегируемаяРоль;
						Запись.ИсполнительДелегат = СотрудникКому;
						Запись.НастройкаДелегирования = РеквизитыНастройки.Ссылка;
						Запись.ИмяОбластиДелегирования = ИмяОбластиДелегирования;
						
						РегистрыСведений.ОчередьОбновленияКэширующихДанных.Добавить(
							ПолноеИмяДанныеКонтроля,
							ПолноеИмяИсполнителиРолейИДелегаты,
							ДелегируемаяРоль);
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	Иначе
		
		// Если настройка делегирования не действует, то удаляем все записи по настройке.
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ИсполнителиРолейИДелегаты.РольСотрудник КАК РольСотрудник
			|ИЗ
			|	РегистрСведений.ИсполнителиРолейИДелегаты КАК ИсполнителиРолейИДелегаты
			|ГДЕ
			|	ИсполнителиРолейИДелегаты.НастройкаДелегирования = &НастройкаДелегирования");
		Запрос.УстановитьПараметр("НастройкаДелегирования", РеквизитыНастройки.Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			РегистрыСведений.ОчередьОбновленияКэширующихДанных.Добавить(
				ПолноеИмяДанныеКонтроля,
				ПолноеИмяИсполнителиРолейИДелегаты,
				Выборка.РольСотрудник);
		КонецЦикла;
		
	КонецЕсли;
	
	Набор.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли