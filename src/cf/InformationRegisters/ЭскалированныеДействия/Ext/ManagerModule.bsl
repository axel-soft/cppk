#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет запись в историю эскалации задач.
//
// Параметры:
//  Действие - ОпределяемыйТип.Действия
//  ИдентификаторУчастника - УникальныйИдентификатор
//  ПравилоЭскалации - СправочникСсылка.ПравилаЭскалацииЗадач - Правило эскалации.
//  ИнформацияОбЭскалации - Структура - Информация об эскалации. См. ЭскалацияЗадач.ИнформацияОбЭскалации().
//
Процедура Добавить(Действие, ИдентификаторУчастника, ПравилоЭскалации, ИнформацияОбЭскалации) Экспорт
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = ТекущаяДатаСеанса();
	МенеджерЗаписи.Действие = Действие;
	МенеджерЗаписи.ИдентификаторУчастника = ИдентификаторУчастника;
	МенеджерЗаписи.ПравилоЭскалации = ПравилоЭскалации;
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ИнформацияОбЭскалации);
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Возвращает сведения об участниках действия.
// Параметры:
//	Действие - ОпределяемыйТип.Действия - Ссылка на действие, по которому необходимо получить сведения.
//	ИдентификаторУчастника - УникальныйИдентификатор
//	
// Возращаемое значение:
//	Соответствие, в ключе которого содержится идентификатор участника, а в значении - структура со сведениями о данном участнике.
//
Функция ПолучитьСведения(Действие, ИдентификаторУчастника) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ 
		|	ЭскалированныеДействия.ПравилоЭскалации КАК ПравилоЭскалации
		|ИЗ
		|	РегистрСведений.ЭскалированныеДействия КАК ЭскалированныеДействия
		|ГДЕ
		|	ЭскалированныеДействия.Действие = &Действие
		|	И ЭскалированныеДействия.ИдентификаторУчастника = &ИдентификаторУчастника");
	Запрос.УстановитьПараметр("Действие", Действие);
	Запрос.УстановитьПараметр("ИдентификаторУчастника", ИдентификаторУчастника);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПравилоЭскалации;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Удаляет записи в историю эскалации задач.
//
// Параметры:
//  Действие - ОпределяемыйТип.Действия
//
Процедура УдалитьПоДействию(Действие) Экспорт  
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Действие.Установить(Действие);
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

