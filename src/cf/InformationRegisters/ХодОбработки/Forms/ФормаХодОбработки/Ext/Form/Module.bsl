
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Предмет = Параметры.Предмет;
	Обработка = Справочники.ОбработкиОбъектов.ОбработкаОбъекта(Предмет);
	
	Если Не ЗначениеЗаполнено(Обработка) Тогда
		ЭтаФорма.Заголовок = "";
	
	Иначе
		ПоказыватьПоручения = Ложь;
	
		ЭтаФорма.Заголовок = НСтр("ru = 'Ход обработки.'") + " " + Строка(Предмет);
		ЗаполнитьСписок();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЭтаФорма.Заголовок = "" Тогда
		Отказ = Истина;
		ПоказатьПредупреждение(, НСтр("ru = 'По объекту нет активной обработки.'"));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТипСобытияПриИзменении(Элемент)
	ЗаполнитьСписок();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПорученияПриИзменении(Элемент)
	ЗаполнитьСписок();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписок()
	
	УстановитьПривилегированныйРежим(Истина);
	
	// заполним
	ТаблицаЗначенийИстории = РеквизитФормыВЗначение("ТаблицаИстории");
	ТаблицаЗначенийИстории.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХодОбработки.Дата КАК Дата,
		|	ХодОбработки.Участник КАК Участник,
		|	ХодОбработки.Действие КАК Действие,
		|	ХодОбработки.ТипСобытия КАК ТипСобытия,
		|	ХодОбработки.Функция КАК Функция,
		|	ХодОбработки.Описание КАК Описание,
		|	ХодОбработки.Сотрудник КАК Сотрудник,
		|	ХодОбработки.ИдентификаторПункта КАК ИдентификаторПункта,
		|	ХодОбработки.Результат КАК Результат,
		|	0 КАК НомерКартинки,
		|	ХодОбработки.Этап КАК Этап,
		|	ХодОбработки.Поручение КАК Поручение,
		|	ХодОбработки.ИдентификаторУчастника КАК ИдентификаторУчастника
		|ИЗ
		|	РегистрСведений.ХодОбработки КАК ХодОбработки
		|ГДЕ
		|	ХодОбработки.Обработка = &Обработка
		|	И ХодОбработки.ТипСобытия = &ТипСобытия
		|	И ХодОбработки.Поручение = &Поручение";
		
	Если ЗначениеЗаполнено(ТипСобытия) Тогда
		Запрос.УстановитьПараметр("ТипСобытия", ТипСобытия);	
	Иначе	
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ХодОбработки.ТипСобытия = &ТипСобытия", "");
	КонецЕсли;	
	
	Если ПоказыватьПоручения Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ХодОбработки.Поручение = &Поручение", "");
	Иначе
		Запрос.УстановитьПараметр("Поручение", Документы.Задача.ПустаяСсылка());			
	КонецЕсли;	
	
	Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО Дата";
	
	Запрос.УстановитьПараметр("Обработка", Обработка);	
	
	ТаблицаЗначенийИстории = Запрос.Выполнить().Выгрузить();
	
	ТаблицаЗначенийИстории.Колонки.Добавить("ПоручениеСтрока");
	
	Для Каждого Строка Из ТаблицаЗначенийИстории Цикл
		
		Если Строка.ТипСобытия = Перечисления.ТипСобытияХодаОбработки.Отказ Тогда
			Строка.НомерКартинки = 5;
		ИначеЕсли Строка.ТипСобытия = Перечисления.ТипСобытияХодаОбработки.ПрерываниеОбработки Тогда
			Строка.НомерКартинки = 9;
		ИначеЕсли Строка.ТипСобытия = Перечисления.ТипСобытияХодаОбработки.ПропускДействия Тогда
			Строка.НомерКартинки = 8;
		ИначеЕсли Строка.ТипСобытия = Перечисления.ТипСобытияХодаОбработки.Выполнение Тогда
			Строка.НомерКартинки = 1;
		КонецЕсли;	

		Строка.ПоручениеСтрока = Строка.Поручение;
		
	КонецЦикла;	
	

	ЗначениеВРеквизитФормы(ТаблицаЗначенийИстории, "ТаблицаИстории");
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсторииПоручениеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.ТаблицаИстории.ТекущиеДанные <> Неопределено Тогда
		ПоказатьЗначение(, Элементы.ТаблицаИстории.ТекущиеДанные.Поручение);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ЗаполнитьСписок();
КонецПроцедуры

#КонецОбласти
