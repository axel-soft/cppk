#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокВыбораБлокиНавигации();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьКомандыБлокаНавигации();
	НастроитьПредупреждениеПриИзмененииОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Настройки были изменены. Сохранить изменения?'");
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПриЗакрытии(ЗавершениеРаботы) Тогда
		Возврат;
	КонецЕсли;
	
	Оповестить("Запись_НастройкиБлоковНавигации");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура БлокНавигацииПриИзменении(Элемент)
	
	ПрочитатьКомандыБлокаНавигации();
	УстановитьДоступностьКомандыБлокаНавигации();
	НастроитьПредупреждениеПриИзмененииОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандыБлокаНавигацииПриИзменении(Элемент)
	
	Модифицированность = Истина;
	НастроитьПредупреждениеПриИзмененииОтбора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьНастройкиБлокаНавигации();
	НастроитьПредупреждениеПриИзмененииОтбора();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьНастройкиБлокаНавигации();
	НастроитьПредупреждениеПриИзмененииОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьНастройки(Команда)
	
	НастройкиЗаданы = Истина;
	УстановитьДоступностьКомандыБлокаНавигации();
	НастроитьПредупреждениеПриИзмененииОтбора();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НастроитьПредупреждениеПриИзмененииОтбора()
	
	Если Модифицированность Тогда
		НастройкиПредупреждения = ОтображениеПредупрежденияПриРедактировании.Отображать;
	Иначе
		НастройкиПредупреждения = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	КонецЕсли;
	
	Элементы.БлокНавигации.ОтображениеПредупрежденияПриРедактировании = НастройкиПредупреждения;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьНастройкиБлокаНавигации();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
	КонецЕсли;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандыБлокаНавигации()
	
	Элементы.КомандыБлокаНавигации.Доступность = ЗначениеЗаполнено(БлокНавигации) И НастройкиЗаданы;
	
	Элементы.ДекорацияНастройкиНеЗаданы.Видимость = ЗначениеЗаполнено(БлокНавигации) И Не НастройкиЗаданы;
	Элементы.ЗадатьНастройки.Видимость = ЗначениеЗаполнено(БлокНавигации) И Не НастройкиЗаданы;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораБлокиНавигации()
	
	Элементы.БлокНавигации.СписокВыбора.Очистить();
	Для Каждого СтрокаБлокНавигации Из Справочники.БлокиНавигации.ДоступныеДанные() Цикл
		Элементы.БлокНавигации.СписокВыбора.Добавить(
			СтрокаБлокНавигации.Значение,
			СтрокаБлокНавигации.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьКомандыБлокаНавигации()
	
	КомандыБлокаНавигации.Очистить();
	Если Не ЗначениеЗаполнено(БлокНавигации) Тогда
		Возврат;
	КонецЕсли;
	
	СУчетомНастроек = Ложь;
	ДанныеБлокаНавигации = Справочники.БлокиНавигации.ДанныеБлокаНавигации(БлокНавигации, СУчетомНастроек);
	Если ДанныеБлокаНавигации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого КомандаБлока Из ДанныеБлокаНавигации.КомандыБлока Цикл
		ДобавитьКомандуБлока(КомандаБлока.ОсновнаяКоманда, Ложь);
		ДобавитьКомандуБлока(КомандаБлока.ВспомогательнаяКоманда, Ложь);
		ДобавитьКомандуБлока(КомандаБлока.Показатель, Ложь);
	КонецЦикла;
	
	Для Каждого КомандаЕщеБлока Из ДанныеБлокаНавигации.КомандыЕщеБлока Цикл
		ДобавитьКомандуБлока(КомандаЕщеБлока.ОсновнаяКоманда, Истина);
		ДобавитьКомандуБлока(КомандаЕщеБлока.ВспомогательнаяКоманда, Истина);
		ДобавитьКомандуБлока(КомандаЕщеБлока.Показатель, Истина);
	КонецЦикла;
	
	ПрочитатьНастройкиБлокаНавигации();
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНастройкиБлокаНавигации()
	
	Модифицированность = Ложь;
	
	Для Каждого СтрокаКоманды Из КомандыБлокаНавигации Цикл
		СтрокаКоманды.Скрыть = Ложь;
		СтрокаКоманды.СкрытьВЕще = СтрокаКоманды.КомандаСкрытьВЕще;
	КонецЦикла;
	
	НастройкиЗаданы = Ложь;
	НастройкиБлокаНавигации = РегистрыСведений.НастройкиБлоковНавигации.ЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		БлокНавигации);
	Если НастройкиБлокаНавигации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиЗаданы = Истина;
	Для Каждого СтрокаКоманды Из КомандыБлокаНавигации Цикл
		НастройкиКоманды = НастройкиБлокаНавигации.Команды[СтрокаКоманды.Команда];
		Если НастройкиКоманды = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтрокаКоманды, НастройкиКоманды);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиБлокаНавигации()
	
	Модифицированность = Ложь;
	
	НастройкиБлокаНавигации = РегистрыСведений.НастройкиБлоковНавигации.СтруктураНастройкиБлокаНавигации();
	Для Каждого СтрокаКоманды Из КомандыБлокаНавигации Цикл
		
		НастройкиКоманды = РегистрыСведений.НастройкиБлоковНавигации.СтруктураНастройкиКомандыБлокаНавигации();
		ЗаполнитьЗначенияСвойств(НастройкиКоманды, СтрокаКоманды);
		НастройкиБлокаНавигации.Команды.Вставить(СтрокаКоманды.Команда, НастройкиКоманды);
		
	КонецЦикла;
	
	РегистрыСведений.НастройкиБлоковНавигации.ЗаписатьЗначениеНастройки(
		Пользователи.ТекущийПользователь(),
		БлокНавигации,
		НастройкиБлокаНавигации);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКомандуБлока(Команда, КомандаСкрытьВЕще)
	
	Если Не ЗначениеЗаполнено(Команда) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Команда) = Тип("СправочникСсылка.ПоказателиВиджетов") Тогда
		ДанныеКоманды = Справочники.ПоказателиВиджетов.ДанныеПоказателя(Команда);
	ИначеЕсли ТипЗнч(Команда) = Тип("СправочникСсылка.КомандыВиджетов") Тогда
		ДанныеКоманды = Справочники.КомандыВиджетов.ДанныеКоманды(Команда);
	Иначе
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Неизвестный тип команды виджета %1 (%2)'"),
			Команда,
			ТипЗнч(Команда));
	КонецЕсли;
	Если ДанныеКоманды = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаКоманды = КомандыБлокаНавигации.Добавить();
	СтрокаКоманды.Заголовок = ДанныеКоманды.Заголовок;
	СтрокаКоманды.Команда = Команда;
	СтрокаКоманды.КомандаСкрытьВЕще = КомандаСкрытьВЕще
	
КонецПроцедуры

#КонецОбласти