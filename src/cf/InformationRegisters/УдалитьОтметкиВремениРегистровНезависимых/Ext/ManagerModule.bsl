

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает количество объектов подлежащих обработке.
//
Функция ПереходНаНовуюВерсиюКоличествоОбъектов() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЕСТЬNULL(КОЛИЧЕСТВО(Таблица.Ключ), 0) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		Таблица.Ключ,
		|		Таблица.Объект
		|	ИЗ
		|		РегистрСведений.УдалитьОтметкиВремениРегистровНезависимых КАК Таблица
		|	СГРУППИРОВАТЬ ПО
		|		Таблица.Ключ,
		|		Таблица.Объект) КАК Таблица");
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Количество;
	
КонецФункции

// Выполняет переход на новую версию.
//
Функция УдалитьДанныеПорционно(РазмерПорции = 1000) Экспорт
	
	РезультатОбработки = Новый Структура("ОбработаноОбъектов, ПроблемныхОбъектов", 0, 0);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	Таблица.Ключ КАК Ключ,
		|	Таблица.Объект КАК Объект
		|ИЗ
		|	РегистрСведений.УдалитьОтметкиВремениРегистровНезависимых КАК Таблица");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000" , СтрШаблон("ПЕРВЫЕ %1", Формат(РазмерПорции, "ЧГ=0")));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НачатьТранзакцию();
		
		Попытка
			Набор = СоздатьНаборЗаписей();
			Набор.Отбор.Ключ.Установить(Выборка.Ключ);
			Набор.Отбор.Объект.Установить(Выборка.Объект);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			
			РезультатОбработки.ОбработаноОбъектов = РезультатОбработки.ОбработаноОбъектов + 1;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			РезультатОбработки.ПроблемныхОбъектов = РезультатОбработки.ПроблемныхОбъектов + 1;
			
			ТекстОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось удалить данные РС УдалитьОтметкиВремениРегистровНезависимых
							|по причине:
							|%1'",
					ОбщегоНазначения.КодОсновногоЯзыка()),
				ТекстОшибки);
				
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыСведений.УдалитьОтметкиВремениРегистровНезависимых, ,
				ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Возврат РезультатОбработки;
	
КонецФункции

#КонецОбласти

#КонецЕсли
