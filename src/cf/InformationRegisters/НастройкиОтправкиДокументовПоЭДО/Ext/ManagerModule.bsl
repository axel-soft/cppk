
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработкаПереходаНаНовуюВерсию

Процедура ЗаполнитьВидДокументаЭДОВПравилахОтправки(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.НастройкиОтправкиДокументовПоЭДО;
	ПолноеИмяОбъекта = МетаданныеОбъекта.ПолноеИмя();
	
	Если ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "Справочник.ВидыДокументовЭДО") Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
			Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	ПараметрыОтметкиВыполнения = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиОтправкиДокументовПоЭДО.Отправитель,
	|	НастройкиОтправкиДокументовПоЭДО.Получатель,
	|	НастройкиОтправкиДокументовПоЭДО.ВидДокумента,
	|	НастройкиОтправкиДокументовПоЭДО.ВидДокументаЭДО,
	|	НастройкиОтправкиДокументовПоЭДО.УдалитьВидЭД,
	|	НастройкиОтправкиДокументовПоЭДО.УдалитьТипЭД
	|ИЗ
	|	РегистрСведений.НастройкиОтправкиДокументовПоЭДО КАК НастройкиОтправкиДокументовПоЭДО
	|ГДЕ
	|	НастройкиОтправкиДокументовПоЭДО.ВидДокументаЭДО = ЗНАЧЕНИЕ(Справочник.ВидыДокументовЭДО.ПустаяСсылка)
	|	И НастройкиОтправкиДокументовПоЭДО.УдалитьВидЭД <> ЗНАЧЕНИЕ(Перечисление.ТипыДокументовЭДО.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НастройкиОтправкиДокументовПоЭДО.Отправитель,
	|	НастройкиОтправкиДокументовПоЭДО.Получатель,
	|	НастройкиОтправкиДокументовПоЭДО.ВидДокумента,
	|	НастройкиОтправкиДокументовПоЭДО.ВидДокументаЭДО,
	|	НастройкиОтправкиДокументовПоЭДО.УдалитьВидЭД,
	|	НастройкиОтправкиДокументовПоЭДО.УдалитьТипЭД
	|ИЗ
	|	РегистрСведений.НастройкиОтправкиДокументовПоЭДО КАК НастройкиОтправкиДокументовПоЭДО
	|ГДЕ
	|	НастройкиОтправкиДокументовПоЭДО.ВидДокументаЭДО = ЗНАЧЕНИЕ(Справочник.ВидыДокументовЭДО.ПустаяСсылка)
	|	И НастройкиОтправкиДокументовПоЭДО.УдалитьВидЭД = ЗНАЧЕНИЕ(Перечисление.ТипыДокументовЭДО.ПустаяСсылка)
	|	И
	|		НастройкиОтправкиДокументовПоЭДО.УдалитьТипЭД <> ЗНАЧЕНИЕ(Перечисление.УдалитьТипыПроизвольныхДокументовЭДО.ПустаяСсылка)";
	
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	
	ОбъектовКОбработке = ВыборкаДанных.Количество();
	
	СоответствиеВидовДокументов = ОбменСКонтрагентамиИнтеграция.СоответствиеВидовЭДВидамДокументовЭДО();
	
	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;
	
	Пока ВыборкаДанных.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Записать = Ложь;
			
			НаборЗаписей = РегистрыСведений.НастройкиОтправкиДокументовПоЭДО.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Отправитель.Установить(ВыборкаДанных.Отправитель);
			НаборЗаписей.Отбор.Получатель.Установить(ВыборкаДанных.Получатель);
			НаборЗаписей.Отбор.ВидДокумента.Установить(ВыборкаДанных.ВидДокумента);
			ОбщегоНазначенияБЭД.УстановитьУправляемуюБлокировкуПоНаборуЗаписей(НаборЗаписей);
			
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() > 0 Тогда
				
				ЗаполнитьВидДокументаЭДОПриОбновлении(
					НаборЗаписей,
					СоответствиеВидовДокументов,
					Записать);
				
			КонецЕсли;
			
			Если Записать Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей, ПараметрыОтметкиВыполнения);
			КонецЕсли;
			
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать настройки отправки документов по ЭДО для: %1 по причине:
				|%2'"), ВыборкаДанных.Отправитель, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка, МетаданныеОбъекта, ВыборкаДанных.Ссылка, ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбъектовОбработано = 0 И ПроблемныхОбъектов <> 0 Тогда
		ШаблонСообщения = НСтр("ru = 'Не удалось обработать некоторые настройки отправки по ЭДО (пропущены): %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ШаблонСообщения = НСтр("ru = 'Обработана очередная порция настроек отправки по ЭДО: %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбъектовОбработано);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация,
			МетаданныеОбъекта,, ТекстСообщения);
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов =
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбъектовОбработано;
	
	Параметры.ОбработкаЗавершена = ОбъектовКОбработке <= ОбъектовОбработано;
	
КонецПроцедуры

Процедура ЗаполнитьИдентификаторыУчетныхЗаписейЭДО() Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.НастройкиОтправкиДокументовПоЭДО;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриглашенияКОбменуЭлектроннымиДокументами.Организация КАК Отправитель,
	|	ПриглашенияКОбменуЭлектроннымиДокументами.Контрагент КАК Получатель
	|ПОМЕСТИТЬ ВТ_Приглашения
	|ИЗ
	|	РегистрСведений.ПриглашенияКОбменуЭлектроннымиДокументами КАК ПриглашенияКОбменуЭлектроннымиДокументами
	|ГДЕ
	|	ПриглашенияКОбменуЭлектроннымиДокументами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПриглашений.Принято)
	|СГРУППИРОВАТЬ ПО
	|	ПриглашенияКОбменуЭлектроннымиДокументами.Организация,
	|	ПриглашенияКОбменуЭлектроннымиДокументами.Контрагент
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПриглашенияКОбменуЭлектроннымиДокументами.Ключ) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиОтправкиДокументовПоЭДО.Отправитель,
	|	НастройкиОтправкиДокументовПоЭДО.Получатель,
	|	НастройкиОтправкиДокументовПоЭДО.ВидДокумента,
	|	ПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторОрганизации КАК ИдентификаторОтправителя,
	|	ПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторКонтрагента КАК ИдентификаторПолучателя
	|ИЗ
	|	РегистрСведений.НастройкиОтправкиДокументовПоЭДО КАК НастройкиОтправкиДокументовПоЭДО
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПриглашенияКОбменуЭлектроннымиДокументами КАК
	|			ПриглашенияКОбменуЭлектроннымиДокументами
	|		ПО НастройкиОтправкиДокументовПоЭДО.Отправитель = ПриглашенияКОбменуЭлектроннымиДокументами.Организация
	|		И НастройкиОтправкиДокументовПоЭДО.Получатель = ПриглашенияКОбменуЭлектроннымиДокументами.Контрагент
	|		И ПриглашенияКОбменуЭлектроннымиДокументами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПриглашений.Принято)
	|		И НастройкиОтправкиДокументовПоЭДО.ИдентификаторОтправителя = """"
	|		И НастройкиОтправкиДокументовПоЭДО.ИдентификаторПолучателя = """"
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Приглашения КАК ВТ_Приглашения
	|		ПО НастройкиОтправкиДокументовПоЭДО.Отправитель = ВТ_Приглашения.Отправитель
	|		И НастройкиОтправкиДокументовПоЭДО.Получатель = ВТ_Приглашения.Получатель";

	ВыборкаДанных = Запрос.Выполнить().Выбрать();

	ОбъектовКОбработке = ВыборкаДанных.Количество();

	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;

	Пока ВыборкаДанных.Следующий() Цикл

		НачатьТранзакцию();
		Попытка

			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Отправитель.Установить(ВыборкаДанных.Отправитель);
			НаборЗаписей.Отбор.Получатель.Установить(ВыборкаДанных.Получатель);
			НаборЗаписей.Отбор.ВидДокумента.Установить(ВыборкаДанных.ВидДокумента);
			ОбщегоНазначенияБЭД.УстановитьУправляемуюБлокировкуПоНаборуЗаписей(НаборЗаписей);

			НаборЗаписей.Прочитать();

			Если НаборЗаписей.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(НаборЗаписей[0], ВыборкаДанных,
					"ИдентификаторОтправителя, ИдентификаторПолучателя");
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
				ОбъектовОбработано = ОбъектовОбработано + 1;
			КонецЕсли;
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();

			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;

			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать настройки отправки документов по ЭДО для: %1 по причине:
											|%2'"), ВыборкаДанных.Отправитель,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка, МетаданныеОбъекта, ВыборкаДанных.Ссылка, ТекстСообщения);
		КонецПопытки;

	КонецЦикла;

	Если ОбъектовОбработано = 0 И ПроблемныхОбъектов <> 0 Тогда
		ШаблонСообщения = НСтр("ru = 'Не удалось обработать некоторые настройки отправки по ЭДО (пропущены): %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ШаблонСообщения = НСтр("ru = 'Обработана очередная порция настроек отправки по ЭДО: %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбъектовОбработано);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация, МетаданныеОбъекта, , ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьРеквизитВидаДокументаИспользоватьЭДО() Экспорт
	
	МетаданныеОбъекта = Метаданные.Справочники.ВидыДокументов;

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкиОтправкиДокументовПоЭДО.ВидДокумента
		|ИЗ
		|	РегистрСведений.НастройкиОтправкиДокументовПоЭДО КАК НастройкиОтправкиДокументовПоЭДО
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыДокументов КАК ВидыДокументов
		|		ПО НастройкиОтправкиДокументовПоЭДО.ВидДокумента = ВидыДокументов.Ссылка
		|ГДЕ
		|	НЕ ВидыДокументов.ИспользоватьЭДО
		|	И НастройкиОтправкиДокументовПоЭДО.Отправлять";

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДанных = РезультатЗапроса.Выбрать();

	ОбъектовКОбработке = ВыборкаДанных.Количество();

	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;

	Пока ВыборкаДанных.Следующий() Цикл

		НачатьТранзакцию();
		Попытка
			ВидДокументаОбъект = ВыборкаДанных.ВидДокумента.ПолучитьОбъект();
			ВидДокументаОбъект.ИспользоватьЭДО = Истина;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ВидДокументаОбъект);
			ОбъектовОбработано = ОбъектовОбработано + 1;
			ЗафиксироватьТранзакцию();

		Исключение
			ОтменитьТранзакцию();

			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;

			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать вид документа: %1 по причине: %2'"),
				ВыборкаДанных.ВидДокумента, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка, МетаданныеОбъекта, ВыборкаДанных.ВидДокумента, ТекстСообщения);
		КонецПопытки;

	КонецЦикла;

	Если ОбъектовОбработано = 0 И ПроблемныхОбъектов <> 0 Тогда
		ШаблонСообщения = НСтр("ru = 'Не удалось обработать некоторые виды документа: %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ШаблонСообщения = НСтр("ru = 'Обработана очередная порция видов документов: %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбъектовОбработано);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация, МетаданныеОбъекта, , ТекстСообщения);
	КонецЕсли;

КонецПроцедуры	

#КонецОбласти

// Возвращает настройки отправи внутненних документов по ЭДО.
// 
// Параметры:
//   Организация - СправочникСсылка.Организации - Организация для которой необходимо получить правила отправки.
//   Контрагент - СправочникСсылка.Контрагенты - Контрагент правил.
// 
// Возвращаемое значение:
//  ТаблицаЗначений:
//      * Отправитель - СправочникСсылка.Организации - Организация.
//      * Получатель - СправочникСсылка.Контрагенты - Контрагент.
//      * ВидДокумента - СправочникСсылка.ВидыДокументов - Вид внутреннего документа.
//      * Отправлять - Булево - возможно ли отправлять по ЭДО этот вид документов.
//      * ВидДокументаЭДО - СправочникСсылка.ВидыДокументовЭДО - Вид документа, которым будет отправлен документ.
//      * ВидЭД - ПеречислениеСсылка.ТипыДокументовЭДО - Вид ЭД, которым будет отправлен документ.
//      * ТипЭД - ПеречислениеСсылка.УдалитьТипыПроизвольныхДокументовЭДО - Тип ЭД, которым будет отправлен документ.
//      * ТребуетсяОтветнаяПодпись - Булево - Требовать ответную подпись.
//      * ТребуетсяИзвещениеОПолучении - Булево - Требовать извещение о получении.
//      * ИдентификаторОтправителя - Строка - Длина 50
//      * ИдентификаторПолучателя - Строка - Длина 50
//      * Формат - Строка - Длина 50
//
Функция НастройкиОтправкиДокументовПоЭДО(Организация, Контрагент) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОписаниеТипаБулево = Новый ОписаниеТипов("Булево");
	ОписаниеТипаСтрока = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(50));
	
	ИсходящиеДокументы = Новый ТаблицаЗначений;
	
	ИсходящиеДокументы.Колонки.Добавить("Отправитель"                  , Метаданные.ОпределяемыеТипы.Организация.Тип);
	ИсходящиеДокументы.Колонки.Добавить("Получатель"                   , Метаданные.ОпределяемыеТипы.УчастникЭДО.Тип);
	ИсходящиеДокументы.Колонки.Добавить("ВидДокумента"                 , Новый ОписаниеТипов("СправочникСсылка.ВидыДокументов"));
	
	ИсходящиеДокументы.Колонки.Добавить("Отправлять"                   , ОписаниеТипаБулево);
	ИсходящиеДокументы.Колонки.Добавить("ВидДокументаЭДО"              , Новый ОписаниеТипов("СправочникСсылка.ВидыДокументовЭДО"));
	ИсходящиеДокументы.Колонки.Добавить("ВидЭД"                        , Новый ОписаниеТипов("ПеречислениеСсылка.ТипыДокументовЭДО"));
	ИсходящиеДокументы.Колонки.Добавить("ТипЭД"                        , Новый ОписаниеТипов("ПеречислениеСсылка.УдалитьТипыПроизвольныхДокументовЭДО"));
	ИсходящиеДокументы.Колонки.Добавить("ТребуетсяОтветнаяПодпись"     , ОписаниеТипаБулево);
	ИсходящиеДокументы.Колонки.Добавить("ТребуетсяИзвещениеОПолучении" , ОписаниеТипаБулево);
	ИсходящиеДокументы.Колонки.Добавить("Формат"                       , ОписаниеТипаСтрока);
	ИсходящиеДокументы.Колонки.Добавить("ИдентификаторОтправителя"     , ОписаниеТипаСтрока);
	ИсходящиеДокументы.Колонки.Добавить("ИдентификаторПолучателя"      , ОписаниеТипаСтрока);
	
	ВидыДокументов = ОбменСКонтрагентамиДОСлужебный.ВидыДокументовДляОтправкиПоЭДО();
	
	Для Каждого ВидДокумента Из ВидыДокументов Цикл
		НоваяСтрока = ИсходящиеДокументы.Добавить();
		
		НоваяСтрока.Отправитель = Организация;
		НоваяСтрока.Получатель = Контрагент;
		НоваяСтрока.ВидДокумента = ВидДокумента;
		
		НоваяСтрока.Отправлять = Ложь;
		НоваяСтрока.ВидДокументаЭДО = Справочники.ВидыДокументовЭДО.ПустаяСсылка();
		НоваяСтрока.ВидЭД = Перечисления.ТипыДокументовЭДО.ПустаяСсылка();
		НоваяСтрока.ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.Прочее;
		НоваяСтрока.ТребуетсяОтветнаяПодпись = Истина;
		НоваяСтрока.ТребуетсяИзвещениеОПолучении = Истина;
		НоваяСтрока.Формат = "";
		НоваяСтрока.ИдентификаторОтправителя = "";
		НоваяСтрока.ИдентификаторПолучателя = "";
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиОтправкиДокументовПоЭДО.ВидДокумента КАК ВидДокумента,
		|	НастройкиОтправкиДокументовПоЭДО.Отправлять КАК Отправлять,
		|	НастройкиОтправкиДокументовПоЭДО.ВидДокументаЭДО КАК ВидДокументаЭДО,
		|	НастройкиОтправкиДокументовПоЭДО.УдалитьВидЭД КАК ВидЭД,
		|	НастройкиОтправкиДокументовПоЭДО.УдалитьТипЭД КАК ТипЭД,
		|	НастройкиОтправкиДокументовПоЭДО.ТребуетсяОтветнаяПодпись КАК ТребуетсяОтветнаяПодпись,
		|	НастройкиОтправкиДокументовПоЭДО.ТребуетсяИзвещениеОПолучении КАК ТребуетсяИзвещениеОПолучении,
		|	НастройкиОтправкиДокументовПоЭДО.Формат КАК Формат,
		|	НастройкиОтправкиДокументовПоЭДО.ИдентификаторОтправителя КАК ИдентификаторОтправителя,
		|	НастройкиОтправкиДокументовПоЭДО.ИдентификаторПолучателя КАК ИдентификаторПолучателя
		|ИЗ
		|	РегистрСведений.НастройкиОтправкиДокументовПоЭДО КАК НастройкиОтправкиДокументовПоЭДО
		|ГДЕ
		|	НастройкиОтправкиДокументовПоЭДО.Отправитель = &Организация
		|	И НастройкиОтправкиДокументовПоЭДО.Получатель = &Контрагент";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Отбор = Новый Структура("ВидДокумента", Выборка.ВидДокумента);
		СтрокиНастроек = ИсходящиеДокументы.НайтиСтроки(Отбор);
		
		Для Каждого СтрокаНастроек Из СтрокиНастроек Цикл
			ЗаполнитьЗначенияСвойств(СтрокаНастроек, Выборка, , "ВидДокумента");
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ИсходящиеДокументы;
	
КонецФункции

// Настройки отправки вида документа.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации -
//  Контрагент - ОпределяемыйТип.УчастникЭДО, Массив из ОпределяемыйТип.УчастникЭДО, Неопределено -
//  ВидДокумента - СправочникСсылка.ВидыДокументов -
//  ТолькоАктивныеНастройки - Булево - Только настройки с Отправлять = Истина
// 
// Возвращаемое значение:
//  Неопределено, Структура - Настройки отправки вида документа:
//   * ВидДокументаЭДО - СправочникСсылка.ВидыДокументовЭДО -
//   * ИдентификаторОтправителя - Строка - Длина 50
//   * ИдентификаторПолучателя - Строка - Длина 50
//   * Отправлять - Булево -
//   * Формат - Строка - Длина 50
//   * ТребуетсяИзвещениеОПолучении - Булево - 
//   * ТребуетсяОтветнаяПодпись - Булево -
//   * ВидЭД - ПеречислениеСсылка.ТипыДокументовЭДО - 
//   * ТипЭД - ПеречислениеСсылка.УдалитьТипыПроизвольныхДокументовЭДО -
//   * ТипДокумента - ПеречислениеСсылка.ТипыДокументовЭДО -
//
Функция НастройкиОтправкиВидаДокумента(Организация, Контрагент, ВидДокумента, ТолькоАктивныеНастройки = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиОтправкиДокументовПоЭДО.ВидДокументаЭДО КАК ВидДокументаЭДО,
		|	НастройкиОтправкиДокументовПоЭДО.УдалитьВидЭД КАК ВидЭД,
		|	НастройкиОтправкиДокументовПоЭДО.УдалитьТипЭД КАК ТипЭД,
		|	НастройкиОтправкиДокументовПоЭДО.ТребуетсяОтветнаяПодпись КАК ТребуетсяОтветнаяПодпись,
		|	НастройкиОтправкиДокументовПоЭДО.ТребуетсяИзвещениеОПолучении КАК ТребуетсяИзвещениеОПолучении,
		|	ЕСТЬNULL(ВидыДокументовЭДО.ТипДокумента, ЗНАЧЕНИЕ(Перечисление.ТипыДокументовЭДО.ПустаяСсылка)) КАК ТипДокумента,
		|	НастройкиОтправкиДокументовПоЭДО.Формат КАК Формат,
		|	НастройкиОтправкиДокументовПоЭДО.ИдентификаторОтправителя,
		|	НастройкиОтправкиДокументовПоЭДО.ИдентификаторПолучателя,
		|	НастройкиОтправкиДокументовПоЭДО.Отправлять
		|ИЗ
		|	РегистрСведений.НастройкиОтправкиДокументовПоЭДО КАК НастройкиОтправкиДокументовПоЭДО
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыДокументовЭДО КАК ВидыДокументовЭДО
		|		ПО НастройкиОтправкиДокументовПоЭДО.ВидДокументаЭДО = ВидыДокументовЭДО.Ссылка
		|ГДЕ
		|	НастройкиОтправкиДокументовПоЭДО.Отправитель = &Организация
		|	И НастройкиОтправкиДокументовПоЭДО.Получатель В (&Контрагент)
		|	И НастройкиОтправкиДокументовПоЭДО.ВидДокумента = &ВидДокумента
		|	";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ВидДокумента", ВидДокумента);
	
	Если ТолькоАктивныеНастройки Тогда
		Запрос.Текст = Запрос.Текст + " И НастройкиОтправкиДокументовПоЭДО.Отправлять";
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Выборка.Следующий() Тогда
		
		НастройкиОтправки = НоваяНастройкаОтправки();
		ЗаполнитьЗначенияСвойств(НастройкиОтправки, Выборка);
		
		Возврат НастройкиОтправки;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

// Возвращает общие настройки отправки вида документа, по-умолчанию, без детализации по отправителю, получателю.
// 
// Параметры:
//  ВидДокумента - СправочникСсылка.ВидыДокументов -
// 
// Возвращаемое значение:
//  Неопределено, Структура - Общие настройки отправки вида документа:
// * ВидДокументаЭДО - СправочникСсылка.ВидыДокументовЭДО - 
// * ВидЭД - ПеречислениеСсылка.ТипыДокументовЭДО - 
// * ТипЭД - ПеречислениеСсылка.УдалитьТипыПроизвольныхДокументовЭДО - 
// * ТребуетсяОтветнаяПодпись - Булево - 
// * Отправлять - Булево - 
// * ТребуетсяИзвещениеОПолучении - Булево - 
// * ТипДокумента - ПеречислениеСсылка.ТипыДокументовЭДО - 
// * Формат - Строка - Длина 50 
// * ИдентификаторОтправителя - Строка - Длина 50
// * ИдентификаторПолучателя - Строка - Длина 50 
//
Функция ОбщиеНастройкиОтправкиВидаДокумента(ВидДокумента) Экспорт
	
	Возврат НастройкиОтправкиВидаДокумента(Справочники.Организации.ПустаяСсылка(), ПустыеЗначенияПолучателя(),
		ВидДокумента);
		
КонецФункции	


// Не активные настройки отправки вида, записи,  у которых Отправлять = Ложь
// 
// Параметры:
//  ВидДокумента - СправочникСсылка.ВидыДокументов - 
// 
// Возвращаемое значение:
//  Структура:
// 	* ЕстьНеАктивныеНастройки - Булево - Истина, если есть неактивные настройки
// 	* НеАктивныеСтороны - Неопределено,ТаблицаЗначений:
//		** Отправитель - СправочникСсылка.Организации
//		** Получатель - ОпределяемыйТип.УчастникЭДО -
//
Функция НеАктивныеНастройкиОтправкиВида(ВидДокумента) Экспорт
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("ЕстьНеАктивныеНастройки", Ложь);
	СтруктураРезультата.Вставить("НеАктивныеСтороны", Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкиОтправкиДокументовПоЭДО.Отправитель КАК Отправитель,
		|	НастройкиОтправкиДокументовПоЭДО.Получатель КАК Получатель
		|ИЗ
		|	РегистрСведений.НастройкиОтправкиДокументовПоЭДО КАК НастройкиОтправкиДокументовПоЭДО
		|ГДЕ
		|	НастройкиОтправкиДокументовПоЭДО.ВидДокумента = &ВидДокумента
		|	И НЕ НастройкиОтправкиДокументовПоЭДО.Отправлять
		|";
	
	Запрос.УстановитьПараметр("ВидДокумента", ВидДокумента);
	
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураРезультата.ЕстьНеАктивныеНастройки = Не РезультатЗапроса.Пустой();
	Если СтруктураРезультата.ЕстьНеАктивныеНастройки Тогда
		СтруктураРезультата.НеАктивныеСтороны = РезультатЗапроса.Выгрузить();
	КонецЕсли;	
	
	Возврат СтруктураРезультата;
	
КонецФункции	

// Записать набор настроек.
// 
// Параметры:
//  ВидДокумента - СправочникСсылка.ВидыДокументов
//  ТаблицаНастроек - ТаблицаЗначений:
//   * Отправитель - СправочникСсылка.Организации
//   * Получатель - ОпределяемыйТип.УчастникЭДО
//   * ВидДокументаЭДО - СправочникСсылка.ВидыДокументовЭДО
//   * ИдентификаторОтправителя - Строка - Длина 50
//   * ИдентификаторПолучателя - Строка - Длина 50
//   * Отправлять - Булево
//   * Формат - Строка - Длина 50
//   * ТребуетсяИзвещениеОПолучении - Булево
//   * ТребуетсяОтветнаяПодпись - Булево
//
Процедура ЗаписатьНаборНастроек(ВидДокумента, ТаблицаНастроек) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВидДокумента.Установить(ВидДокумента, Истина);
	
	Для Каждого СтрНастройка Из ТаблицаНастроек Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрНастройка);
		НоваяЗапись.ВидДокумента = ВидДокумента;
	КонецЦикла;	
	
	НаборЗаписей.Записать();
	
КонецПроцедуры	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьВидДокументаЭДОПриОбновлении(НаборЗаписей, СоответствиеВидовДокументов, Записывать)
	
	Для Каждого Запись Из НаборЗаписей Цикл
		
		Если Запись.УдалитьВидЭД = Перечисления.ТипыДокументовЭДО.ПустаяСсылка() Тогда
			Если Запись.УдалитьТипЭД <> Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.Прочее Тогда
				ТипЭДО = ТипЭДОПоТипуПроизвольногоЭД(Запись.УдалитьТипЭД);
			Иначе
				Продолжить;
			КонецЕсли;
		ИначеЕсли Запись.УдалитьВидЭД = Перечисления.ТипыДокументовЭДО.УдалитьПроизвольный Тогда
			ТипЭДО = ТипЭДОПоТипуПроизвольногоЭД(Запись.УдалитьТипЭД);
		Иначе
			ТипЭДО = Запись.УдалитьВидЭД;
		КонецЕсли;
		
		ВидДокументаЭДО = СоответствиеВидовДокументов.Получить(ТипЭДО);
		
		Если ВидДокументаЭДО <> Неопределено Тогда
			Запись.ВидДокументаЭДО = ВидДокументаЭДО;
			Записывать = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТипЭДОПоТипуПроизвольногоЭД(ТипЭД)
	
	Если ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.АктВзаимозачета Тогда
		Возврат Перечисления.ТипыДокументовЭДО.АктВзаимозачета;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.АктВыполненныхРабот Тогда
		Возврат Перечисления.ТипыДокументовЭДО.АктВыполненныхРабот;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.АктСверки Тогда
		Возврат Перечисления.ТипыДокументовЭДО.АктСверки;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.Ведомость Тогда
		Возврат Перечисления.ТипыДокументовЭДО.Ведомость;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.ГарантийноеПисьмо Тогда
		Возврат Перечисления.ТипыДокументовЭДО.ГарантийноеПисьмо;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.Договор Тогда
		Возврат Перечисления.ТипыДокументовЭДО.Договор;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.ДополнительноеСоглашение Тогда
		Возврат Перечисления.ТипыДокументовЭДО.ДополнительноеСоглашение;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.КС11 Тогда
		Возврат Перечисления.ТипыДокументовЭДО.КС11;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.КС2 Тогда
		Возврат Перечисления.ТипыДокументовЭДО.КС2;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.КС3 Тогда
		Возврат Перечисления.ТипыДокументовЭДО.КС3;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.Отчет Тогда
		Возврат Перечисления.ТипыДокументовЭДО.Отчет;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.ПлатежноеПоручение Тогда
		Возврат Перечисления.ТипыДокументовЭДО.ПлатежноеПоручение;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.ПриложениеКАкту Тогда
		Возврат Перечисления.ТипыДокументовЭДО.ПриложениеКАкту;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.Прочее Тогда
		Возврат Перечисления.ТипыДокументовЭДО.Прочее;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.СоглашениеОбЭДО Тогда
		Возврат Перечисления.ТипыДокументовЭДО.СоглашениеОбЭДО;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.Спецификация Тогда
		Возврат Перечисления.ТипыДокументовЭДО.Спецификация;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.СчетНаОплату Тогда
		Возврат Перечисления.ТипыДокументовЭДО.СчетНаОплату;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.ТоварнаяНакладная Тогда
		Возврат Перечисления.ТипыДокументовЭДО.ТоварнаяНакладная;
	ИначеЕсли ТипЭД = Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.Уведомление Тогда
		Возврат Перечисления.ТипыДокументовЭДО.Уведомление;
	КонецЕсли;
	
КонецФункции

// Возвращает пустые поля настройки отправки.
// 
// Возвращаемое значение:
//  Структура:
// * ВидДокументаЭДО - СправочникСсылка.ВидыДокументовЭДО
// * ВидЭД - ПеречислениеСсылка.ТипыДокументовЭДО
// * ТипЭД - ПеречислениеСсылка.УдалитьТипыПроизвольныхДокументовЭДО
// * ТребуетсяОтветнаяПодпись - Булево
// * Отправлять - Булево
// * ТребуетсяИзвещениеОПолучении - Булево
// * ТипДокумента - ПеречислениеСсылка.ТипыДокументовЭДО 
// * Формат - Строка - Длина 50 
// * ИдентификаторОтправителя - Строка - Длина 50 
// * ИдентификаторПолучателя - Строка - Длина 50
//
Функция НоваяНастройкаОтправки()
	
	Структура = Новый Структура;
	Структура.Вставить("ВидДокументаЭДО", Справочники.ВидыДокументовЭДО.ПустаяСсылка());
	Структура.Вставить("ВидЭД", Перечисления.ТипыДокументовЭДО.ПустаяСсылка()); 
	Структура.Вставить("ТипЭД", Перечисления.УдалитьТипыПроизвольныхДокументовЭДО.ПустаяСсылка());
	Структура.Вставить("ТребуетсяОтветнаяПодпись", Ложь);
	Структура.Вставить("Отправлять", Ложь);
	Структура.Вставить("ТребуетсяИзвещениеОПолучении" , Ложь);
	Структура.Вставить("ТипДокумента", Перечисления.ТипыДокументовЭДО.ПустаяСсылка());
	Структура.Вставить("Формат", "");
	Структура.Вставить("ИдентификаторОтправителя", "");
	Структура.Вставить("ИдентификаторПолучателя", "");
	
	Возврат Структура;
	
КонецФункции

Функция ПустыеЗначенияПолучателя()
	
	Массив = Новый Массив;
	Массив.Добавить(Справочники.Организации.ПустаяСсылка());
	Массив.Добавить(Справочники.Контрагенты.ПустаяСсылка());
	Массив.Добавить(Неопределено);
	
	Возврат Массив;
	
КонецФункции	

#КонецОбласти

#КонецЕсли