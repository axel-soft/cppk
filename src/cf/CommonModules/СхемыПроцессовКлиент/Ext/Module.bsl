////////////////////////////////////////////////////////////////////////////////
// Клиентские процедуры и функции по работе со схемами процессов.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область РаботаССхемойВФорме

// Обновляет данные схемы в форме.
// По завершению вызывает внешний обработчик обновления настроек (если он указан).
// Во внешний обработчик передается результат обновления
// (см. СхемыПроцессовКлиентСервер.ОбновитьНастройкиПоСхеме).
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма со схемой.
//  ОбработчикОбновленияНастроек - ОписаниеОповещения
//
Процедура ОбновитьДанныеСхемыВФорме(Форма, ОбработчикОбновленияНастроек = Неопределено) Экспорт
	
	// Не обновляем настройки схемы в веб клиенте, т.к. недоступны некоторые свойства.
	// Данная проверка добавлена на случай, если пользователю все же удастся изменить схему.
	// По умолчанию схема на веб клиенте должна быть доступна только для просмотра.
	#Если ВебКлиент Или МобильныйКлиент Тогда
		Возврат;
	#КонецЕсли	
		
	ОбновитьТекущийЭлементВДанныхСхемыПриФорме(Форма);
	
	РезультатОбновления = СхемыПроцессовКлиентСервер.ОбновитьНастройкиПоСхеме(
		Форма.ДанныеСхемы.НастройкиСхемы, Форма.Схема);
	
	СхемыПроцессовКлиентСервер.ОбновитьПредставлениеЭлементовСхемыПроцесса(
		Форма.Схема, Форма.ДанныеСхемы.НастройкиСхемы);
	
	Форма.ДанныеСхемы.СхемаИзменена = Истина;
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Форма", Форма);
	ДопПараметры.Вставить("ОбработчикОбновленияНастроек", ОбработчикОбновленияНастроек);
	ДопПараметры.Вставить("ЭлементДляУточненияТипа", "");
	ДопПараметры.Вставить("РезультатОбновления", РезультатОбновления);
	
	ДоступныеДляВыбораТипыЭлементаОбработка =
		ДоступныеДляВыбораТипыЭлементаГрафическойСхемыОбработка(Форма);
	
	Если РезультатОбновления.ДобавленныеЭлементы.Количество() = 1
		И РезультатОбновления.УдаленныеЭлементы.Количество() = 0
		И ДоступныеДляВыбораТипыЭлементаОбработка.Количество() > 1 Тогда
			
		ЭлементГрафическойСхемы = Форма.Схема.ЭлементыГрафическойСхемы.Найти(
			РезультатОбновления.ДобавленныеЭлементы[0]);		
			
		Если ТипЗнч(ЭлементГрафическойСхемы) = Тип("ЭлементГрафическойСхемыОбработка") Тогда
			
			ДопПараметры.ЭлементДляУточненияТипа = РезультатОбновления.ДобавленныеЭлементы[0];
		КонецЕсли;
		
	КонецЕсли;
	
	ОбработчикЗавершенияОбнолвенияДанныхСхемы = Новый ОписаниеОповещения(
		"ЗавершитьОбновлениеДанныхСхемыВФорме",
		ЭтотОбъект,
		ДопПараметры);
	
	Если ЗначениеЗаполнено(ДопПараметры.ЭлементДляУточненияТипа) Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить(
			"ТекущийТипЭлемента",
			Форма.ДанныеСхемы.НастройкиСхемы.ТипыЭлементов[ДопПараметры.ЭлементДляУточненияТипа]);
		ПараметрыФормы.Вставить("ДопустимыеТипы", ДоступныеДляВыбораТипыЭлементаОбработка);

		ОткрытьФорму(
			"ОбщаяФорма.УточнениеТипаДляЭлементаОбработкаГрафическойСхемы",
			ПараметрыФормы,
			Форма,,,,
			ОбработчикЗавершенияОбнолвенияДанныхСхемы);
		
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОбработчикЗавершенияОбнолвенияДанныхСхемы, Неопределено);
		
КонецПроцедуры

// Помещает в данные текущий элемент схемы в данные схемы при форме.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма со схемой.
//
Процедура ОбновитьТекущийЭлементВДанныхСхемыПриФорме(Форма) Экспорт
	
	Если Форма.Элементы.Схема.ТекущийЭлемент <> Неопределено Тогда
		ТекущийЭлементСхемы = Форма.Элементы.Схема.ТекущийЭлемент.Имя;
	Иначе
		ТекущийЭлементСхемы = "";
	КонецЕсли;
	
	Форма.ДанныеСхемы.ТекущийЭлементСхемы = ТекущийЭлементСхемы;
	
КонецПроцедуры

// Восстанавливает текущий элемент в элементе управления графической схемы,
// по данным схемы в форме.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма со схемой.
//
Процедура ВосстановитьТекущийЭлементПоДаннымСхемы(Форма) Экспорт
	
	Если Не ЗначениеЗаполнено(Форма.ДанныеСхемы.ТекущийЭлементСхемы) Тогда
		Возврат;
	КонецЕсли;
	
	Форма.Элементы.Схема.ТекущийЭлемент = Форма.Схема.ЭлементыГрафическойСхемы.Найти(
		Форма.ДанныеСхемы.ТекущийЭлементСхемы);
	
КонецПроцедуры

// Возвращает тип элемента схемы, по данным схемы в форме.
// 
// Параметры:
// 	ИмяЭлемента - Строка - имя элемента схемы.
// 	Форма - ФормаКлиентскогоПриложения - карточка со схемой. 
// 	
// Возвращаемое значение:
//  ПеречислениеСсылка.ТипыЭлементовСхемПроцессов
// 	
Функция ТипЭлементаСхемыПоДаннымСхемыВФорме(ИмяЭлемента, Форма) Экспорт
	
	Возврат СхемыПроцессовКлиентСервер.ТипЭлементаСхемыПоДаннымСхемыВФорме(ИмяЭлемента, Форма);
	
КонецФункции

// Показывает результат проверки схемы в форме.
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - карточка со схемой. 
//  
Процедура ПоказатьРезультатПроверкиСхемыВФорме(Форма) Экспорт
	
	Если Не СхемыПроцессовКлиентСервер.ЕстьОшибкиНастройкиСхемы(Форма) Тогда
	 	Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ОбщегоНазначенияКлиент.СообщитьПользователю(
		Форма.ДанныеСхемы.РезультатПроверкиСхемы.ОписаниеОшибки,,
		"Схема");
	
	Если ЗначениеЗаполнено(Форма.ДанныеСхемы.РезультатПроверкиСхемы.ИмяЭлемента) Тогда
		Форма.ДанныеСхемы.ТекущийЭлементСхемы = Форма.ДанныеСхемы.РезультатПроверкиСхемы.ИмяЭлемента;
		ВосстановитьТекущийЭлементПоДаннымСхемы(Форма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РаботаССхемойВФорме

// Завершение ОбновитьДанныеСхемыВФорме.
//
Процедура ЗавершитьОбновлениеДанныхСхемыВФорме(НовыйТип, ДопПараметры) Экспорт
	
	Форма = ДопПараметры.Форма;
	ОбработчикОбновленияНастроек = ДопПараметры.ОбработчикОбновленияНастроек;
	ЭлементДляУточненияТипа = ДопПараметры.ЭлементДляУточненияТипа;
	РезультатОбновления = ДопПараметры.РезультатОбновления;
	
	Если ЗначениеЗаполнено(ЭлементДляУточненияТипа)
		И НовыйТип <> Неопределено
		И Форма.ДанныеСхемы.НастройкиСхемы.ТипыЭлементов[ЭлементДляУточненияТипа] <> НовыйТип Тогда
				
		Форма.ДанныеСхемы.НастройкиСхемы.ТипыЭлементов[ЭлементДляУточненияТипа] = НовыйТип;
			
		СхемыПроцессовКлиентСервер.ОбновитьПредставлениеЭлементовСхемыПроцесса(
			Форма.Схема, Форма.ДанныеСхемы.НастройкиСхемы);
		
	КонецЕсли; 
	
	Если ОбработчикОбновленияНастроек <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ОбработчикОбновленияНастроек, РезультатОбновления);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает доступные для выбора типы элемента обработки графической схемы.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма со схемой.
//  
// Возвращаемое значение:
//  Массив
// 	 * см. ПеречислениеСсылка.ТипыЭлементовСхемПроцессов
// 	
Функция ДоступныеДляВыбораТипыЭлементаГрафическойСхемыОбработка(Форма)
	
	ТипыБлокаВыполнения = 
		СхемыПроцессовКлиентСервер.ТипыЭлементовСоответствующиеБлокуВыполненияСхемы();
	
	Индекс = ТипыБлокаВыполнения.Количество() - 1;
	Пока Индекс >= 0 Цикл
		ТипЭлемента = ТипыБлокаВыполнения[Индекс];
		
		Если (СхемыПроцессовКлиентСервер.ЭтоСкриптСхемы(ТипЭлемента)  
			И Не СхемыПроцессовКлиентПовтИсп.ДоступнаНастройкаСкриптовВСхемахПроцессов())
			
			Или Форма.ДанныеСхемы.ПоддерживаемыеТипыЭлементов[ТипЭлемента] <> Истина Тогда
			
			ТипыБлокаВыполнения.Удалить(Индекс);
		КонецЕсли;
		
		Индекс = Индекс - 1;
	КонецЦикла;
		
	Возврат ТипыБлокаВыполнения;
	
КонецФункции

#КонецОбласти

#КонецОбласти