
#Область ПрограммныйИнтерфейс

// Обработчик подписки на событие ПередЗаписью у всех бизнес-процессов
Процедура БизнесСобытияПередЗаписьюБизнесПроцессаПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("ВидЗаписи") Тогда
		Возврат;
	КонецЕсли;
	
	Если МиграцияПриложенийПереопределяемый.ЭтоЗагрузка(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если МиграцияДанныхИзВнешнихСистемСервер.ЭтоОбъектИзДругойСистемы(Источник.ИсточникДанных) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Источник.Ссылка) Тогда
		
		Если Источник.Стартован Тогда // старт бизнес-процесса
			Источник.ДополнительныеСвойства.Вставить("НужноЗаписатьСобытиеСтартБизнесПроцесса");
		КонецЕсли;	
		
		Возврат;
		
	КонецЕсли;	
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Ссылка, "Стартован, Завершен, Состояние");
	
	Если Источник.Стартован И Не Реквизиты.Стартован Тогда // старт бизнес-процесса
		
		БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(Источник.Ссылка, Справочники.ВидыБизнесСобытий.СтартБизнесПроцесса);	
		
	КонецЕсли;	
	
	Если Источник.Завершен И Не Реквизиты.Завершен Тогда // завершение бизнес-процесса
		
		БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(Источник.Ссылка, Справочники.ВидыБизнесСобытий.ЗавершениеБизнесПроцесса);	
		
	КонецЕсли;	
	
	Если Источник.Состояние = Перечисления.СостоянияБизнесПроцессов.Активен
		И Реквизиты.Состояние <> Перечисления.СостоянияБизнесПроцессов.Активен Тогда // Возобновление бизнес-процесса
		
		БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(Источник.Ссылка, Справочники.ВидыБизнесСобытий.ВозобновлениеБизнесПроцесса);	
		
	КонецЕсли;	
	
	Если Источник.Состояние = Перечисления.СостоянияБизнесПроцессов.Остановлен
		И Реквизиты.Состояние <> Перечисления.СостоянияБизнесПроцессов.Остановлен Тогда // Остановка бизнес-процесса
		
		БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(Источник.Ссылка, Справочники.ВидыБизнесСобытий.ОстановкаБизнесПроцесса);	
		
	КонецЕсли;	
	
	Если Источник.Состояние = Перечисления.СостоянияБизнесПроцессов.Прерван
		И Реквизиты.Состояние <> Перечисления.СостоянияБизнесПроцессов.Прерван Тогда // Прерывание бизнес-процесса
		
		БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(
			Источник.Ссылка, 
			Справочники.ВидыБизнесСобытий.ПрерываниеБизнесПроцесса);	
		
	КонецЕсли;
	
КонецПроцедуры

Процедура БизнесСобытияПриЗаписиБизнесПроцессаПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ДополнительныеСвойства.Свойство("ВидЗаписи") Тогда
		Возврат;
	КонецЕсли;
	
	Если МиграцияПриложенийПереопределяемый.ЭтоЗагрузка(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если МиграцияДанныхИзВнешнихСистемСервер.ЭтоОбъектИзДругойСистемы(Источник.ИсточникДанных) Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("НужноЗаписатьСобытиеСтартБизнесПроцесса") Тогда
		БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(Источник.Ссылка, Справочники.ВидыБизнесСобытий.СтартБизнесПроцесса);	
		Источник.ДополнительныеСвойства.Удалить("НужноЗаписатьСобытиеСтартБизнесПроцесса");
	КонецЕсли;	
	
КонецПроцедуры

// Обработчик подписки БизнесСобытияПередЗаписьюОбъекта
Процедура БизнесСобытияПередЗаписьюОбъектаПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если МиграцияДанныхИзВнешнихСистемСервер.ОбъектИмеетРеквизитИсточникДанных(Источник)
			И МиграцияДанныхИзВнешнихСистемСервер.ЭтоОбъектИзДругойСистемы(Источник.ИсточникДанных) Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("ВидЗаписи") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Источник.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Ссылка, "ПометкаУдаления");
	
	Если Источник.ПометкаУдаления И Не Реквизиты.ПометкаУдаления Тогда // Установка пометки удаления
		ПометитьНаУдалениеСобытияПоИсточнику(Источник.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Помечает на удаление произошедшие события, когда помечается на удаление Источник событий
Процедура ПометитьНаУдалениеСобытияПоИсточнику(Источник) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПроизошедшиеБизнесСобытия.Идентификатор КАК Идентификатор
		|ИЗ
		|	РегистрСведений.ПроизошедшиеБизнесСобытия КАК ПроизошедшиеБизнесСобытия
		|ГДЕ
		|	ПроизошедшиеБизнесСобытия.Источник = &Источник");
	Запрос.УстановитьПараметр("Источник", Источник);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПометкаУдаления = Истина;
		РегистрыСведений.ПроизошедшиеБизнесСобытия.ОбновитьЗапись(Выборка.Идентификатор,,, ПометкаУдаления);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти
