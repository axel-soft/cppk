////////////////////////////////////////////////////////////////////////////////
// Бронирование помещений
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Отменяет ожидающие подтверждения брони.
// Если брони уже подтверждены, то они не отменяются.
//
// Параметры:
//  ОжидающиеПодтвержденияБрони - Массив из ДокументСсылка.Бронь - Ожидающие подтверждения брони.
//  ПричинПрерывания            - Строка - Причина прерывания подтверждения.
// 
// Возвращаемое значение:
//  Массив из Структура - Результаты подтверждения броней, ожидающие подтверждения:
//   * Бронь        - ДокументСсылка.Бронь - Бронь.
//   * Подтверждена - Булево               - Бронь подтверждена или отменена.
//
Функция ПрерватьПодтверждениеБроней(Знач ОжидающиеПодтвержденияБрони, Знач ПричинПрерывания) Экспорт
	
	РезультатБронирования = БронированиеПомещенийКлиентСервер.РезультатБронирования();
	
	РезультатыПодтвержденияБроней = Новый Массив;
	Для Каждого Бронь Из ОжидающиеПодтвержденияБрони Цикл
		
		РезультатыПодтвержденияБрони = Новый Структура("Бронь, Подтверждена");
		РезультатыПодтвержденияБрони.Бронь = Бронь;
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.Бронь");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Бронь);
			Блокировка.Заблокировать();
			
			БроньОбъект = Бронь.ПолучитьОбъект();
			Если БроньОбъект.СостояниеБрони = Перечисления.СостоянияБроней.Подтверждена
				Или БроньОбъект.СостояниеБрони = Перечисления.СостоянияБроней.ПустаяСсылка() Тогда
				
				РезультатыПодтвержденияБрони.Подтверждена = Истина;
				
			ИначеЕсли БроньОбъект.СостояниеБрони = Перечисления.СостоянияБроней.ОжидаетПодтверждения Тогда
				
				БроньОбъект.ОтменитьБронь(
					СтрШаблон(
						НСтр("ru = 'Не удалось оперативно подтвердить бронь, т.к. %1'"),
						ПричинПрерывания));
				БроньОбъект.Записать();
				РезультатыПодтвержденияБрони.Подтверждена = Ложь;
				
				РезультатБронирования.ОтмененныеБрони.Добавить(Бронь);
				
			ИначеЕсли БроньОбъект.СостояниеБрони = Перечисления.СостоянияБроней.Отменена Тогда
				
				РезультатыПодтвержденияБрони.Подтверждена = Ложь;
				
			Иначе
				
				ВызватьИсключение СтрШаблон(
					НСтр("ru = 'Неизвестное состояние брони %1'"),
					БроньОбъект.СостояниеБрони);
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
		
		РезультатыПодтвержденияБроней.Добавить(РезультатыПодтвержденияБрони);
		
	КонецЦикла;
	
	БронированиеПомещенийХолдинг.ОперативноеПодтверждениеБронирования(РезультатБронирования);
	
	Возврат РезультатыПодтвержденияБроней;
	
КонецФункции

#КонецОбласти