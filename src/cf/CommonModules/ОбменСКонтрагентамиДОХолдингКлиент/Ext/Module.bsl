// @strict-types


#Область ПрограммныйИнтерфейс

// Обработка нажатия подключаемого элемента в форме учетной записи ЭДО
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения:
//    * Запись - РегистрСведенийМенеджерЗаписи - Менеджер записи УчетныеЗаписиЭДО
//  Элемент - ПолеФормы
//  СтандартнаяОбработка - Булево
Процедура УчетнаяЗаписьЭДОНажатие(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	Если Не ОбщегоНазначенияДокументооборотКлиентПовтИсп.ЭтоДокументооборотХолдинга() Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.Имя = ОбменСКонтрагентамиДОХолдингКлиентСервер.ИмяЭлементаУзлаОбмена() Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ДанныеВыбора = ОбщегоНазначенияДокументооборотХолдингВызовСервера.УзлыКОДДанныеВыбора(Форма.Запись.УзелОбработки);
		Если ДанныеВыбора.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыОбработчика = Новый Структура;
		ПараметрыОбработчика.Вставить("Форма", Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораУзлаОбмена", ЭтотОбъект, ПараметрыОбработчика);
		
		Форма.ПоказатьВыборИзМеню(ОписаниеОповещения, ДанныеВыбора, Элемент);
				
	КонецЕсли;
	
КонецПроцедуры

// Перед началом ручного создания документа ДО по входящему ЭДО
// 
// Параметры:
//  ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументВходящийЭДО - Докумен ЭДО
//  Отказ - Булево
//
Процедура ПередСозданиемДокументаДО(ЭлектронныйДокумент, Отказ) Экспорт
	
	Если Не ОбщегоНазначенияДокументооборотКлиентПовтИсп.ЭтоДокументооборотХолдинга() Тогда
		Возврат;
	КонецЕсли;
	
	ДокументыЭДО = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ЭлектронныйДокумент);
	ДанныеДокументовПоКОД = ОбменСКонтрагентамиДОХолдингВызовСервера.ДанныеДокументовЭДОПоКОД(ДокументыЭДО);
	ДанныеДокумента = ДанныеДокументовПоКОД[ЭлектронныйДокумент];
	
	Если ДанныеДокумента.ОбменВТекущемУзле Тогда
		Возврат;
	КонецЕсли;
	
	ТекстПредупреждения = СтрШаблон(
		НСтр("ru = 'Прием документа выполнен в узле ""%1"". Создание документа ДО необходимо выполнить там же.'"),
		ДанныеДокумента.ПредставлениеУзлаОбмена);
	ПоказатьПредупреждение(, ТекстПредупреждения, ,
		НСтр("ru = 'Обмен в другом узле'"));
	
	Отказ = Истина;
	
КонецПроцедуры

// Перед удалением входящего ЭДО из списка к созданию документов ДО
// 
// Параметры:
//  ДокументЭДО - ДокументСсылка.ЭлектронныйДокументВходящийЭДО - Докумен ЭДО
//  Отказ - Булево
//
Процедура ПередУдалениемДокументаЭДОИзСпискаКСозданиюВДО(ДокументЭДО, Отказ) Экспорт
	
	Если Не ОбщегоНазначенияДокументооборотКлиентПовтИсп.ЭтоДокументооборотХолдинга() Тогда
		Возврат;
	КонецЕсли;
	
	ДокументыЭДО = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДокументЭДО);
	ДанныеДокументовПоКОД = ОбменСКонтрагентамиДОХолдингВызовСервера.ДанныеДокументовЭДОПоКОД(ДокументыЭДО);
	ДанныеДокумента = ДанныеДокументовПоКОД[ДокументЭДО];
	
	Если ДанныеДокумента.ОбменВТекущемУзле Тогда
		Возврат
	КонецЕсли;
	
	ТекстПредупреждения = СтрШаблон(
		НСтр("ru = 'Прием документа выполнен в узле ""%1"". Исключить из очереди создания необходимо выполнить там же.'"),
		ДанныеДокумента.ПредставлениеУзлаОбмена);
	ПоказатьПредупреждение(, ТекстПредупреждения, ,
		НСтр("ru = 'Обмен в другом узле'"));
	
	Отказ = Истина;
	
КонецПроцедуры

// Перед поставновкой входящих ЭДО в очередь к автоматическому отражению в документах ДО
// 
// Параметры:
//  ДокументыЭДО - Массив из ДокументСсылка.ЭлектронныйДокументВходящийЭДО - входящие документы ЭДО
//  Отказ - Булево
//
Процедура ПередПостановкойДокументовЭДОКАвтоматическомуОтражению(ДокументыЭДО, Отказ) Экспорт
	
	Если Не ОбщегоНазначенияДокументооборотКлиентПовтИсп.ЭтоДокументооборотХолдинга() Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДокументовПоКОД = ОбменСКонтрагентамиДОХолдингВызовСервера.ДанныеДокументовЭДОПоКОД(ДокументыЭДО);
	
	ЕстьДокументыДляДругогоУзла = Ложь;
	Для Каждого Элемент Из ДанныеДокументовПоКОД Цикл
		
		ДанныеДокумента = Элемент.Значение;
		Если Не ДанныеДокумента.ОбменВТекущемУзле Тогда
			ЕстьДокументыДляДругогоУзла = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ЕстьДокументыДляДругогоУзла Тогда
		Возврат;
	КонецЕсли;
	
	ТекстПредупреждения =
		НСтр("ru = 'Часть документов приняты в других узлах. Постановку в очередь автоматического создания необходимо выполнить в тех узлах, где приняты документы'");
	ПоказатьПредупреждение(, ТекстПредупреждения, ,
		НСтр("ru = 'Обмен в другом узле'"));
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик выбора узла обмена на форме.
// 
// Параметры:
//  Результат - ЭлементСпискаЗначений:
//    * Значение - СправочникСсылка.УзлыКОД
//  ДополнительныеПараметры - Структура:
//    * Форма - ФормаКлиентскогоПриложения:
//      ** Запись - РегистрСведенийМенеджерЗаписи.УчетныеЗаписиЭДО
//
Процедура ПослеВыбораУзлаОбмена(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	ИмяРеквизитаУзлаОбмена = ОбменСКонтрагентамиДОХолдингКлиентСервер.ИмяРеквизитаУзлаОбмена();
	
	Форма[ИмяРеквизитаУзлаОбмена] = Результат.Представление;
	Форма.Запись.УзелОбработки = Результат.Значение.УникальныйИдентификатор();
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти
