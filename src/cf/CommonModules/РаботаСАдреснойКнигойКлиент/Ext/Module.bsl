
#Область ПрограммныйИнтерфейс

#Область УчастникиОбработкиОбъектов

// Обработчик начала выбора участника действия из формы адресной книги.
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - исходная форма объекта.
// 	Элемент - ПолеВвода - исходныое поле ввода.
// 	СтандартнаяОбработка - Булево - стандартный параметр обработчика выбора для отключения.
// 	ТекущееЗначение - СправочникСсылка - текущее значение поля ввода.
// 	ДоступныеТипы - ОписаниеТипов, Булево - типы значений доступные для выбора в поле ввода.
// 											Ложь - только тип текущего значения; Истина - все типы участников.
// 	Заголовок - Строка - название формы выбора.
// 	ПараметрыПолученияДанных - Структура - дополнительные настройки выбора.
//
Процедура ВыбратьУчастника(Форма, Элемент, СтандартнаяОбработка = Истина, 
	ТекущееЗначение = Неопределено, Знач ДоступныеТипы = Неопределено, Заголовок = Неопределено, 
	ПараметрыПолученияДанных = Неопределено) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы",
		?(ПараметрыПолученияДанных <> Неопределено И ПараметрыПолученияДанных.Свойство("ВыборМножества") И ПараметрыПолученияДанных.ВыборМножества, 2, 1));
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	ПараметрыФормы.Вставить("КонтролироватьДублиАдресатов", Истина);
	
	// Только текущий тип.
	Если ДоступныеТипы = Ложь Тогда
		Если ТекущееЗначение = Неопределено Тогда
			ДоступныеТипы = Новый ОписаниеТипов("СправочникСсылка.Сотрудники");
		Иначе
			Тип = Новый Массив;
			Тип.Добавить(ТипЗнч(ТекущееЗначение));
			ДоступныеТипы = Новый ОписаниеТипов(Тип);
		КонецЕсли;
	КонецЕсли;
		
	// Сотрудники.
	Если ДоступныеТипы = Неопределено
		Или ДоступныеТипы = Истина
		Или ДоступныеТипы.СодержитТип(Тип("СправочникСсылка.Сотрудники")) Тогда
		ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	КонецЕсли;
	
	// Роли.
	Если ДоступныеТипы = Неопределено
		Или ДоступныеТипы = Истина
		Или ДоступныеТипы.СодержитТип(Тип("СправочникСсылка.РолиИсполнителей"))
		Или ДоступныеТипы.СодержитТип(Тип("СправочникСсылка.ПолныеРоли")) Тогда
		ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	КонецЕсли;
		
	Если ДоступныеТипы <> Неопределено Тогда
		
		// Пользователи.
		Если ДоступныеТипы <> Истина
			И ДоступныеТипы.СодержитТип(Тип("СправочникСсылка.Пользователи")) Тогда
			ПараметрыФормы.Вставить("ОтображатьПользователей", Истина);
		КонецЕсли;
		
		// Группы и подразделения
		Если ДоступныеТипы = Истина
			Или ДоступныеТипы.СодержитТип(Тип("СправочникСсылка.РабочиеГруппы"))
			Или ДоступныеТипы.СодержитТип(Тип("СправочникСсылка.СтруктураПредприятия"))
			Или ДоступныеТипы.СодержитТип(Тип("СправочникСсылка.ПодразделенияКонтейнеры")) Тогда
			ПараметрыФормы.Вставить("ВыбиратьКонтейнерыПользователей", Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущееЗначение) Тогда
		ПараметрыФормы.Вставить("ВыбранныеАдресаты", ТекущееЗначение);
	КонецЕсли;
	
	Если ПараметрыПолученияДанных = Неопределено Тогда
		
		ПараметрыФормы.Вставить("ПравилаКоммуникаций",
			ПравилаКоммуникацийКлиентСервер.КонтекстВыбора(Форма, Элемент));
		
	Иначе
		
		Если Не ПараметрыПолученияДанных.Свойство("ПравилаКоммуникаций")
				Или ПараметрыПолученияДанных.ПравилаКоммуникаций = Истина Тогда
				
			ПараметрыФормы.Вставить("ПравилаКоммуникаций",
				ПравилаКоммуникацийКлиентСервер.КонтекстВыбора(
					Форма,
					Элемент,
					ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыПолученияДанных, "ФункцияУчастника", Неопределено)));
			
		ИначеЕсли ПараметрыПолученияДанных.ПравилаКоммуникаций <> Ложь Тогда
			
			ПараметрыФормы.Вставить("ПравилаКоммуникаций", ПараметрыПолученияДанных.ПравилаКоммуникаций);
			
		КонецЕсли;
		
		Если ПараметрыПолученияДанных.Свойство("ОписаниеОповещения") Тогда
			ОписаниеОповещения = ПараметрыПолученияДанных.ОписаниеОповещения;
		КонецЕсли;
		
		Для Каждого Параметр Из ПараметрыПолученияДанных Цикл
			Если Параметр.Ключ <> "ПравилаКоммуникаций"
				И Параметр.Ключ <> "ОписаниеОповещения"
				И Параметр.Ключ <> "ФункцияУчастника" Тогда
				ПараметрыФормы.Вставить(Параметр.Ключ, Параметр.Значение);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заголовок) Тогда
		ПараметрыФормы.Вставить("ЗаголовокФормы", Заголовок);
	ИначеЕсли ПараметрыПолученияДанных <> Неопределено И ПараметрыПолученияДанных.Свойство("ФункцияУчастника") Тогда
		ПараметрыФормы.Вставить("ЗаголовокФормы", Строка(ПараметрыПолученияДанных.ФункцияУчастника));
	Иначе
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Участник'"));
	КонецЕсли;
	
	ОткрытьФорму("Справочник.АдреснаяКнига.ФормаСписка",
		ПараметрыФормы,
		Элемент,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Обработчик подбора участника действия по строке в поле ввода.
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - исходная форма объекта.
// 	Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка - стандартные параметры обработчика АвтоПодбор.
// 	ТекущееЗначение - СправочникСсылка - текущее значение поля ввода.
// 	ДоступныеТипы - ОписаниеТипов, Булево - типы значений доступные для выбора в поле ввода.
// 											Ложь - только тип текущего значения; Истина - все типы участников.
//  ТипОбъекта - ПеречислениеСсылка.ТипыОбъектов - Тип объекта, для дополнения типа "СправочникСсылка.АвтоподстановкиДляОбъектов".
//
Процедура ПодобратьУчастника(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, 
	Ожидание, СтандартнаяОбработка, ТекущееЗначение = Неопределено, 
	ДоступныеТипы = Неопределено, ТипОбъекта = Неопределено) Экспорт
	
	Если Текст = "" Тогда
		Возврат;
	КонецЕсли;
		
	СтандартнаяОбработка = Ложь;
	
	Если Не ПараметрыПолученияДанных.Свойство("ПравилаКоммуникаций")
			Или ПараметрыПолученияДанных.ПравилаКоммуникаций = Истина Тогда
			
		ПравилаКоммуникаций = ПравилаКоммуникацийКлиентСервер.КонтекстВыбора(
			Форма,
			Элемент,
			ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
				ПараметрыПолученияДанных,
				"ФункцияУчастника",
				Неопределено));
		
	ИначеЕсли ПараметрыПолученияДанных.ПравилаКоммуникаций <> Ложь Тогда
		ПравилаКоммуникаций = ПараметрыПолученияДанных.ПравилаКоммуникаций;
	КонецЕсли;
	
	ДанныеВыбора = РаботаСАдреснойКнигой.ПодобратьУчастникаНаСервере(
		Текст,
		ПараметрыПолученияДанных,
		ТекущееЗначение,
		ДоступныеТипы,
		ПравилаКоммуникаций,
		ТипОбъекта);
	
КонецПроцедуры

// Обработчик выбора участника действия в поле ввода. Фиксирует нарушение правил коммуникаций.
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - исходная форма объекта.
// 	Элемент, ВыбранноеЗначение, СтандартнаяОбработка - стандартные параметры обработчика ОбработкаВыбора.
// Возвращаемое значение:
// 	Булево - результат сооответствия выбранного значения правилам коммуникаций.
//
Функция ОбработатьВыборУчастника(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура")
		И ВыбранноеЗначение.Свойство("ЗапретПоПравиламКоммуникаций")
		И ВыбранноеЗначение.ЗапретПоПравиламКоммуникаций = Истина Тогда
		
		СтандартнаяОбработка = Ложь;
		ПравилаКоммуникацийКлиент.ПоказатьНарушение(ВыбранноеЗначение.Ссылка, ВыбранноеЗначение.Правило);
		
		Возврат Ложь;
	КонецЕсли;
	
	// Если СотрудникБезПользователя = Истина, тогда показываем предупреждение, но обработку не останавливаем.
	// Подменяем выбранное значение ссылкой.
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура")
		И ВыбранноеЗначение.Свойство("СотрудникБезПользователя")
		И ВыбранноеЗначение.СотрудникБезПользователя = Истина Тогда
		
		ПоказатьПредупреждениеПоСотрудникуБезПользователя(ВыбранноеЗначение.Ссылка, Неопределено);
		ВыбранноеЗначение = ВыбранноеЗначение.Ссылка;
		
		Возврат Истина;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Показывает предупреждение о том, что сотруднику не разрешен вход в систему.
// 
// Параметры:
//  Сотрудник - СправочникСсылка.Сотрудники - Сотрудник
//  ОписаниеОповещенияОЗавершении - ОписаниеОповещения - Если указано, то будет вызвано после закрытия предупреждения. 
//
Процедура ПоказатьПредупреждениеПоСотрудникуБезПользователя(Сотрудник, ОписаниеОповещенияОЗавершении) Экспорт
	
	СведенияПредупреждения = РаботаСАдреснойКнигой.СведенияПредупрежденияПоСотрудникуБезПользователя(Сотрудник);
	
	Шаблон = НСтр("ru = '%1 не разрешен вход в программу.'");
	Если СведенияПредупреждения.ВключенаАктуализацияДанныхИПередачаЗадач 
		И ЗначениеЗаполнено(СведенияПредупреждения.ПредставлениеРуководителя) Тогда
		
		ДополнениеТекста = НСтр("ru = 'Уведомление о задаче получит %2 руководитель %3'");
		ТекстПредупреждения = СтрШаблон(Шаблон + " " + ДополнениеТекста,
			СведенияПредупреждения.ПредставлениеСотрудникаДательный,
			СведенияПредупреждения.ТекстЕгоЕеСотрудника,
			СведенияПредупреждения.ПредставлениеРуководителя);
	Иначе
		ДополнениеТекста = НСтр("ru = 'Уведомление о задаче не будет отправлено.'");
		ТекстПредупреждения = СтрШаблон(Шаблон + " " + ДополнениеТекста,
			СведенияПредупреждения.ПредставлениеСотрудникаДательный);
	КонецЕсли;
	
	ПоказатьПредупреждение(ОписаниеОповещенияОЗавершении, ТекстПредупреждения);
	
КонецПроцедуры

#КонецОбласти

Процедура ВыбратьАдресатов(ПараметрыФормы, ФормаВладельца, ОписаниеОповещенияОбработкиВыбора = Неопределено) Экспорт
	
	Если Не ПараметрыФормы.Свойство("КонтролироватьДублиАдресатов") Тогда
		ПараметрыФормы.Вставить("КонтролироватьДублиАдресатов", Истина);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.АдреснаяКнига.ФормаСписка",
		ПараметрыФормы,
		ФормаВладельца,,,,
		ОписаниеОповещенияОбработкиВыбора,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Функция СтруктураВыбранногоАдресата() Экспорт
	
	СтруктураВыбранногоАдресата = Новый Структура(
		"Контакт");
		
	Возврат СтруктураВыбранногоАдресата;
	
КонецФункции

// Подбор/выбор исполнителей для процессов

Процедура ПодобратьИсполнителейДляПроцессов(
	Форма, ТаблицаИсполнителей, ОписаниеОповещенияОбработкиВыбора, КонтролироватьДублиАдресатов = Истина) Экспорт
	
	ВыбранныеАдресаты = Новый Массив;
	
	Для Каждого СтрИсполнитель Из ТаблицаИсполнителей Цикл
		
		Если Не ЗначениеЗаполнено(СтрИсполнитель.Исполнитель) Тогда
			Продолжить;
		КонецЕсли;
		
		ВыбранныеАдресаты.Добавить(СтрИсполнитель.Исполнитель);
		
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", 2);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ПодменятьПользователейСотрудниками", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Подбор исполнителей'"));
	ПараметрыФормы.Вставить("ЗаголовокСпискаВыбранных", НСтр("ru = 'Выбранные сотрудники и роли:'"));
	ПараметрыФормы.Вставить("ЗаголовокСпискаАдреснойКниги", НСтр("ru = 'Все сотрудники и роли:'"));
	ПараметрыФормы.Вставить("ВыбранныеАдресаты", ВыбранныеАдресаты);
	ПараметрыФормы.Вставить("КонтролироватьДублиАдресатов", КонтролироватьДублиАдресатов);
	
	ВыбратьАдресатов(ПараметрыФормы, Форма, ОписаниеОповещенияОбработкиВыбора);
	
КонецПроцедуры

Процедура ВыбратьИсполнителяДляПроцесса(
	Форма, ТаблицаФормы, ОписаниеОповещенияОбработкиВыбора = Неопределено) Экспорт
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Форма", Форма);
	ДопПараметры.Вставить("ТаблицаФормы", ТаблицаФормы);
	ДопПараметры.Вставить("ОписаниеОповещенияОбработкиВыбора", ОписаниеОповещенияОбработкиВыбора);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ЗавершитьВыборИсполнителяДляПроцессов", ЭтотОбъект, ДопПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", 1);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ПодменятьПользователейСотрудниками", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Выбор исполнителя'"));
	
	Если ТаблицаФормы.ТекущиеДанные <> Неопределено
		И ЗначениеЗаполнено(ТаблицаФормы.ТекущиеДанные.Исполнитель) Тогда
		ПараметрыФормы.Вставить("ВыбранныеАдресаты", ТаблицаФормы.ТекущиеДанные.Исполнитель);
	КонецЕсли;
	
	ВыбратьАдресатов(ПараметрыФормы, Форма, ОписаниеОповещения);
	
КонецПроцедуры

Процедура ЗавершитьВыборИсполнителяДляПроцессов(ВыбранныйИсполнитель, ДопПараметры) Экспорт
	
	Если ВыбранныйИсполнитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДопПараметры.ТаблицаФормы.ТекущиеДанные.Исполнитель = ВыбранныйИсполнитель;
	ДопПараметры.Форма.Модифицированность = Истина;
	
	Если ДопПараметры.ОписаниеОповещенияОбработкиВыбора <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДопПараметры.ОписаниеОповещенияОбработкиВыбора, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбратьУчастникаПроцесса(
	Элемент, ВыбранноеЗначение, СтандартнаяОбработка, Форма, Участник, ОписаниеОповещения = Неопределено) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", 1);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ПодменятьПользователейСотрудниками", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Выбор исполнителя'"));
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ПараметрыФормы.Вставить("ВыбранныеАдресаты", ВыбранноеЗначение);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.АдреснаяКнига.Форма.ФормаСписка",
		ПараметрыФормы, 
		Элемент,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Подбор/выбор исполнителей для шаблонов процессов

Процедура ПодобратьИсполнителейДляШаблоновПроцессов(
	Форма, ОписаниеОповещенияОбработкиВыбора, КонтролироватьДублиАдресатов = Истина) Экспорт
	
	ИменаПредметов = МультипредметностьКлиентСервер.
		ПолучитьМассивИменПредметовОбъекта(Форма.Объект);
		
	СписокПредметов = Новый СписокЗначений;
	СписокПредметов.ЗагрузитьЗначения(ИменаПредметов);
		
	ВыбранныеАдресаты = Новый Массив;
	
	Для Каждого СтрИсполнитель Из Форма.Объект.Исполнители Цикл
		
		Если Не ЗначениеЗаполнено(СтрИсполнитель.Исполнитель) Тогда
			Продолжить;
		КонецЕсли;
		
		ВыбранныеАдресаты.Добавить(СтрИсполнитель.Исполнитель);
		
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", 2);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ПодменятьПользователейСотрудниками", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	
	Если Не ЗначениеЗаполнено(Форма.Объект.ВладелецШаблона)
		Или ТипЗнч(Форма.Объект.ВладелецШаблона) <> Тип("БизнесПроцессСсылка.КомплексныйПроцесс") Тогда
		
		ПараметрыФормы.Вставить("ОтображатьАвтоподстановкиПоПроцессам", Истина);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Подбор исполнителей'"));
	ПараметрыФормы.Вставить("ЗаголовокСпискаВыбранных", НСтр("ru = 'Выбранные сотрудники и роли:'"));
	ПараметрыФормы.Вставить("ЗаголовокСпискаАдреснойКниги", НСтр("ru = 'Все сотрудники и роли:'"));
	ПараметрыФормы.Вставить("ВыбранныеАдресаты", ВыбранныеАдресаты);
	ПараметрыФормы.Вставить("ИменаПредметов", СписокПредметов);
	ПараметрыФормы.Вставить("КонтролироватьДублиАдресатов", КонтролироватьДублиАдресатов);
	
	ВыбратьАдресатов(ПараметрыФормы, Форма, ОписаниеОповещенияОбработкиВыбора);
	
КонецПроцедуры

Процедура ВыбратьИсполнителяДляШаблонаПроцесса(
	Форма, ТаблицаФормы, ОписаниеОповещенияОбработкиВыбора = Неопределено) Экспорт
	
	ИменаПредметов = МультипредметностьКлиентСервер.
		ПолучитьМассивИменПредметовОбъекта(Форма.Объект);
		
	СписокПредметов = Новый СписокЗначений;
	СписокПредметов.ЗагрузитьЗначения(ИменаПредметов);
		
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Форма", Форма);
	ДопПараметры.Вставить("ТаблицаФормы", ТаблицаФормы);
	ДопПараметры.Вставить("ОписаниеОповещенияОбработкиВыбора", ОписаниеОповещенияОбработкиВыбора);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ЗавершитьВыборИсполнителяДляПроцессов", ЭтотОбъект, ДопПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", 1);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ПодменятьПользователейСотрудниками", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Выбор исполнителя'"));
	
	Если Не ЗначениеЗаполнено(Форма.Объект.ВладелецШаблона)
		Или ТипЗнч(Форма.Объект.ВладелецШаблона) <> Тип("БизнесПроцессСсылка.КомплексныйПроцесс") Тогда
		
		ПараметрыФормы.Вставить("ОтображатьАвтоподстановкиПоПроцессам", Истина);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ИменаПредметов", СписокПредметов);
	
	ВыбратьАдресатов(ПараметрыФормы, Форма, ОписаниеОповещения);
	
КонецПроцедуры

Процедура ВыбратьУчастникаДляШаблонаПроцесса(
	Элемент, ВыбранноеЗначение, СтандартнаяОбработка, Форма, Участник, ОписаниеОповещения = Неопределено) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ИменаПредметов = МультипредметностьКлиентСервер.ПолучитьМассивИменПредметовОбъекта(Форма.Объект);
	
	СписокПредметов = Новый СписокЗначений;
	СписокПредметов.ЗагрузитьЗначения(ИменаПредметов);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", 1);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ПодменятьПользователейСотрудниками", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	
	Если Не ЗначениеЗаполнено(Форма.Объект.ВладелецШаблона)
		Или ТипЗнч(Форма.Объект.ВладелецШаблона) <> Тип("БизнесПроцессСсылка.КомплексныйПроцесс") Тогда
		ПараметрыФормы.Вставить("ОтображатьАвтоподстановкиПоПроцессам", Истина);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ПараметрыФормы.Вставить("ВыбранныеАдресаты", ВыбранноеЗначение);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ИменаПредметов", СписокПредметов);
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Выбор исполнителя'"));
	
	ОткрытьФорму("Справочник.АдреснаяКнига.Форма.ФормаСписка",
		ПараметрыФормы, 
		Элемент,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

// Подбор/выбор пользователей для контрольных карточек

Процедура ПодобратьПользователейДляКонтроля(
	Форма, ТаблицаИсполнителей, ОписаниеОповещенияОбработкиВыбора) Экспорт
	
	ВыбранныеАдресаты = Новый Массив;
	
	Для Каждого СтрИсполнитель Из ТаблицаИсполнителей Цикл
		
		Если Не ЗначениеЗаполнено(СтрИсполнитель.Исполнитель) Тогда
			Продолжить;
		КонецЕсли;
		
		ВыбранныеАдресаты.Добавить(СтрИсполнитель.Исполнитель);
		
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", 2);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ПодменятьПользователейСотрудниками", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Подбор исполнителей'"));
	ПараметрыФормы.Вставить("ЗаголовокСпискаВыбранных", НСтр("ru = 'Выбранные сотрудники и роли:'"));
	ПараметрыФормы.Вставить("ЗаголовокСпискаАдреснойКниги", НСтр("ru = 'Все сотрудники и роли:'"));
	ПараметрыФормы.Вставить("ВыбранныеАдресаты", ВыбранныеАдресаты);
	
	ВыбратьАдресатов(ПараметрыФормы, Форма, ОписаниеОповещенияОбработкиВыбора);
	
КонецПроцедуры

Процедура ВыбратьПользователяДляКонтроля(Форма, Элемент, ВыбранноеЗначение,
	СписокОтбора = Неопределено) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", 1);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Выбор исполнителя'"));
	ПараметрыФормы.Вставить("ПодменятьПользователейСотрудниками", Истина);
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ПараметрыФормы.Вставить("ВыбранныеАдресаты", ВыбранноеЗначение);
	КонецЕсли;
	Если СписокОтбора <> Неопределено Тогда
		ПараметрыФормы.Вставить("СписокОтбора", СписокОтбора);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.АдреснаяКнига.Форма.ФормаСписка",
		ПараметрыФормы,
		Элемент,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Подбор/выбор ОтветсвенногоЗаХранение для шаблонов документов.

Процедура ВыбратьОтветсвенногоЗаХранение(Форма) Экспорт
	
	ВыбратьОтветсвенногоЗаХранение_ШаблоныДокументов(Форма);
	
КонецПроцедуры

// Подбор/выбор участников рабочей группы

Процедура ПодобратьУчастниковРабочейГруппы(Форма) Экспорт
	
	ВыбратьУчастниковРабочейГруппы(Форма, Истина);
	
КонецПроцедуры

Процедура ВыбратьУчастникаРабочейГруппы(Форма, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьУчастниковРабочейГруппы(Форма, Ложь);
	
КонецПроцедуры

// Подбор/выбор участников рабочей группы для шаблонов документов

Процедура ПодобратьУчастниковРабочейГруппыДляШаблоновДокументов(Форма) Экспорт
	
	ВыбратьУчастниковРабочейГруппы_ШаблоныДокументов(Форма, Истина);
	
КонецПроцедуры

Процедура ВыбратьУчастникаРабочейГруппыДляШаблоновДокументов(Форма) Экспорт
	
	ВыбратьУчастниковРабочейГруппы_ШаблоныДокументов(Форма, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыбратьУчастниковРабочейГруппы(Форма, МножественныйВыбор)
	
	РабочаяГруппа = Новый Массив;
	ТекущиеДанные = Форма.Элементы.РабочаяГруппаТаблица.ТекущиеДанные;
	
	Если МножественныйВыбор Или Не ЗначениеЗаполнено(ТекущиеДанные.Участник) Тогда
		Для Каждого РабочаяГруппаТаблицаСтрока Из Форма.РабочаяГруппаТаблица Цикл
			Если ЗначениеЗаполнено(РабочаяГруппаТаблицаСтрока.Участник) Тогда 
				Участник = СтруктураВыбранногоАдресата();
				Участник.Вставить("Контакт", РабочаяГруппаТаблицаСтрока.Участник);
				РабочаяГруппа.Добавить(Участник);
			КонецЕсли;
		КонецЦикла;
		
		РежимРаботыФормы = 2;
		ЗаголовокФормы = НСтр("ru = 'Подбор участников рабочей группы'");
		ЗаголовокСпискаВыбранных = НСтр("ru = 'Выбранные участники:'");
		ЗаголовокСпискаАдреснойКниги = НСтр("ru = 'Все сотрудники и роли:'");
		МножественныйВыбор = Истина;
	Иначе
		РежимРаботыФормы = 1;
		ЗаголовокФормы = НСтр("ru = 'Выбор участника рабочей группы'");
		ЗаголовокСпискаВыбранных = "";
		ЗаголовокСпискаАдреснойКниги = "";
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", РежимРаботыФормы);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	ПараметрыФормы.Вставить("ВыбиратьКонтейнерыПользователей", Истина);
	ПараметрыФормы.Вставить("ЗаголовокФормы", ЗаголовокФормы);
	ПараметрыФормы.Вставить("ЗаголовокСпискаВыбранных", ЗаголовокСпискаВыбранных);
	ПараметрыФормы.Вставить("ЗаголовокСпискаАдреснойКниги", ЗаголовокСпискаАдреснойКниги);
	ПараметрыФормы.Вставить("ВыбранныеАдресаты", РабочаяГруппа);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Форма", Форма);
	ДопПараметры.Вставить("МножественныйВыбор", МножественныйВыбор);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ЗавершитьВыборУчастниковРабочейГруппы", ЭтотОбъект, ДопПараметры);
		
	ВыбратьАдресатов(ПараметрыФормы, Форма, ОписаниеОповещения);
	
КонецПроцедуры

Процедура ЗавершитьВыборУчастниковРабочейГруппы(ВыбранныеУчастники, ДопПараметры) Экспорт
	
	Если ВыбранныеУчастники = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДопПараметры.Форма;
	
	Если ДопПараметры.МножественныйВыбор Тогда
		
		РеквизитТаблица = Форма.РабочаяГруппаТаблица;
		КоличествоСтрок = РеквизитТаблица.Количество();
		
		// Удаление лишних строк.
		Для Инд = 1 По КоличествоСтрок Цикл
			
			Строка = РеквизитТаблица[КоличествоСтрок - Инд];
			УдалитьУчастника = Истина;
			
			Для Каждого ВыбранныйИсполнитель Из ВыбранныеУчастники Цикл
				Если Строка.Участник = ВыбранныйИсполнитель.Контакт Тогда
					
					УдалитьУчастника = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если УдалитьУчастника Тогда
				РеквизитТаблица.Удалить(Строка);
			КонецЕсли;
			
		КонецЦикла;
		
		ИндексИзмененнойСтроки = РеквизитТаблица.Количество();
		
		// Добавление новых строк.
		Для Каждого ВыбранныйАдресат Из ВыбранныеУчастники Цикл
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Участник", ВыбранныйАдресат.Контакт);
			
			НайденныеСтроки = РеквизитТаблица.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() = 0 Тогда
				
				НоваяСтрока = РеквизитТаблица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыбранныйАдресат);
				НоваяСтрока.Участник = ВыбранныйАдресат.Контакт;
				
			КонецЕсли;
			
			РаботаСРабочимиГруппамиКлиент.УстановитьРеквизитыУсловногоОформления(НоваяСтрока);
			
		КонецЦикла;
	
	Иначе
		
		ТекущаяСтрока = Форма.Элементы.РабочаяГруппаТаблица.ТекущаяСтрока;
		ТекущиеДанные = Форма.РабочаяГруппаТаблица.НайтиПоИдентификатору(ТекущаяСтрока);
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ВыбранныеУчастники[0]);
		ТекущиеДанные.Участник = ВыбранныеУчастники[0].Контакт;
		РаботаСРабочимиГруппамиКлиент.УстановитьРеквизитыУсловногоОформления(ТекущиеДанные);
		
	КонецЕсли;
	
	Форма.КоличествоУчастниковРабочейГруппы = Форма.РабочаяГруппаТаблица.Количество();
	Форма.Модифицированность = Истина;
	
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриОкончанииРедактирования(
		Форма, Форма.Элементы.РабочаяГруппаТаблица, Ложь);
	
КонецПроцедуры

Процедура ВыбратьУчастниковРабочейГруппы_ШаблоныДокументов(Форма, МножественныйВыбор)
	
	Объект = ПолучитьОбъектФормы(Форма);
	ВыбранныеАдресаты = Новый Массив;
	ТекущиеДанные = Форма.Элементы.РабочаяГруппаДокумента.ТекущиеДанные;
	
	Если МножественныйВыбор Или Не ЗначениеЗаполнено(ТекущиеДанные.Участник) Тогда
		Для Каждого СтрУчастник Из Объект.РабочаяГруппаДокумента Цикл
			
			Если Не ЗначениеЗаполнено(СтрУчастник.Участник) Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураВыбранногоАдресата = СтруктураВыбранногоАдресата();
			СтруктураВыбранногоАдресата.Контакт = СтрУчастник.Участник;
			
			ВыбранныеАдресаты.Добавить(СтруктураВыбранногоАдресата);
			
		КонецЦикла;
		
		РежимРаботыФормы = 2;
		ЗаголовокФормы = НСтр("ru = 'Подбор участников рабочей группы'");
		ЗаголовокСпискаВыбранных = НСтр("ru = 'Выбранные участники:'");
		ЗаголовокСпискаАдреснойКниги = НСтр("ru = 'Все сотрудники и роли:'");
		МножественныйВыбор = Истина;
	Иначе
		РежимРаботыФормы = 1;
		ЗаголовокФормы = НСтр("ru = 'Выбор участника рабочей группы'");
		ЗаголовокСпискаВыбранных = "";
		ЗаголовокСпискаАдреснойКниги = "";
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", РежимРаботыФормы);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	ПараметрыФормы.Вставить("ВыбиратьКонтейнерыПользователей", Истина);
	ПараметрыФормы.Вставить("ОтображатьАвтоподстановкиПоДокументам", Истина);
	ПараметрыФормы.Вставить("ЗаголовокФормы", ЗаголовокФормы);
	ПараметрыФормы.Вставить("ЗаголовокСпискаВыбранных", ЗаголовокСпискаВыбранных);
	ПараметрыФормы.Вставить("ЗаголовокСпискаАдреснойКниги", ЗаголовокСпискаАдреснойКниги);
	ПараметрыФормы.Вставить("ВыбранныеАдресаты", ВыбранныеАдресаты);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Форма", Форма);
	ДопПараметры.Вставить("МножественныйВыбор", МножественныйВыбор);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ЗавершитьВыборУчастниковРабочейГруппы_ШаблоныДокументов", ЭтотОбъект, ДопПараметры);
		
	ВыбратьАдресатов(ПараметрыФормы, Форма, ОписаниеОповещения);
	
КонецПроцедуры

Процедура ЗавершитьВыборУчастниковРабочейГруппы_ШаблоныДокументов(ВыбранныеУчастники, ДопПараметры) Экспорт
	
	Если ВыбранныеУчастники = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	форма = ДопПараметры.форма;
	Объект = ПолучитьОбъектФормы(Форма);
	
	Если ДопПараметры.МножественныйВыбор Тогда
		
		РеквизитТаблица = Объект.РабочаяГруппаДокумента;
		КоличествоСтрок = РеквизитТаблица.Количество();
		
		// Удаление лишних строк.
		Для Инд = 1 По КоличествоСтрок Цикл
			
			Строка = РеквизитТаблица[КоличествоСтрок - Инд];
			УдалитьУчастника = Истина;
			
			Для Каждого ВыбранныйИсполнитель Из ВыбранныеУчастники Цикл
				Если Строка.Участник = ВыбранныйИсполнитель.Контакт Тогда
					
					УдалитьУчастника = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если УдалитьУчастника Тогда
				РеквизитТаблица.Удалить(Строка);
			КонецЕсли;
			
		КонецЦикла;
		
		ИндексИзмененнойСтроки = РеквизитТаблица.Количество();
		
		// Добавление новых строк.
		Для Каждого ВыбранныйАдресат Из ВыбранныеУчастники Цикл
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Участник", ВыбранныйАдресат.Контакт);
			
			НайденныеСтроки = РеквизитТаблица.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() = 0 Тогда
				
				НоваяСтрока = РеквизитТаблица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыбранныйАдресат);
				НоваяСтрока.Участник = ВыбранныйАдресат.Контакт;
				
			КонецЕсли;
			
			РаботаСРабочимиГруппамиКлиент.УстановитьРеквизитыУсловногоОформления(НоваяСтрока);
			
		КонецЦикла;
		
	Иначе
		
		ТекущиеДанные = форма.Элементы.РабочаяГруппаДокумента.ТекущиеДанные;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ВыбранныеУчастники[0]);
		ТекущиеДанные.Участник = ВыбранныеУчастники[0].Контакт;
		
		РаботаСРабочимиГруппамиКлиент.УстановитьРеквизитыУсловногоОформления(НоваяСтрока);
		
	КонецЕсли;
	
	Форма.Модифицированность = Истина;
	
	РаботаСРабочимиГруппамиКлиент.ШаблонРабочаяГруппаПриОкончанииРедактирования(
		Форма,
		Объект.РабочаяГруппаДокумента,
		Форма.Элементы.РабочаяГруппаДокумента,
		Ложь); // ОтменаРедактирования
	
КонецПроцедуры

Функция ПолучитьОбъектФормы(Форма)
	
	Если ДелопроизводствоКлиентСервер.ЭтоФормаВидаДокумента(Форма.ИмяФормы) Тогда 
		Возврат Форма.ШаблонДокумента;
	Иначе 
		Возврат Форма.Объект;
	КонецЕсли;
	
КонецФункции

Процедура ВыбратьОтветсвенногоЗаХранение_ШаблоныДокументов(Форма)
	
	ВыбранныеАдресаты = Новый Массив;
	Объект = ПолучитьОбъектФормы(Форма);
	
	Если ЗначениеЗаполнено(Объект.ОтветственныйЗаХранение) Тогда 
		СтруктураВыбранногоАдресата = СтруктураВыбранногоАдресата();
		СтруктураВыбранногоАдресата.Контакт = Объект.ОтветственныйЗаХранение;
		
		ВыбранныеАдресаты.Добавить(СтруктураВыбранногоАдресата);
	КонецЕсли;
	
	РежимРаботыФормы = 1;
	ЗаголовокФормы = НСтр("ru = 'Выбор ответственного за хранение'");
	ЗаголовокСпискаВыбранных = "";
	ЗаголовокСпискаАдреснойКниги = "";
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", РежимРаботыФормы);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ПодменятьПользователейСотрудниками", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Ложь);
	ПараметрыФормы.Вставить("ВыбиратьКонтейнерыПользователей", Ложь);
	ПараметрыФормы.Вставить("ОтображатьАвтоподстановкиПоДокументам", Истина);
	ПараметрыФормы.Вставить("ЗаголовокФормы", ЗаголовокФормы);
	ПараметрыФормы.Вставить("ЗаголовокСпискаВыбранных", ЗаголовокСпискаВыбранных);
	ПараметрыФормы.Вставить("ЗаголовокСпискаАдреснойКниги", ЗаголовокСпискаАдреснойКниги);
	ПараметрыФормы.Вставить("ВыбранныеАдресаты", ВыбранныеАдресаты);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Форма", Форма);
	ДопПараметры.Вставить("МножественныйВыбор", Ложь);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ЗавершитьВыборОтветсвенногоЗаХранение_ШаблоныДокументов", ЭтотОбъект, ДопПараметры);
		
	ВыбратьАдресатов(ПараметрыФормы, Форма, ОписаниеОповещения);
	
КонецПроцедуры

Процедура ЗавершитьВыборОтветсвенногоЗаХранение_ШаблоныДокументов(ВыбранныеУчастники, ДопПараметры) Экспорт
	
	Если ВыбранныеУчастники = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	форма = ДопПараметры.форма;
	Объект = ПолучитьОбъектФормы(Форма);
	Объект.ОтветственныйЗаХранение = ВыбранныеУчастники[0].Контакт;
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти