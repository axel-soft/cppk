////////////////////////////////////////////////////////////////////////////////
// Работа с процессами по действиям (вызов сервера): содержит процедуры и функции
// по обработке действий процессами.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Находит действие по процессу
Функция ДействиеПоПроцессу(Процесс) Экспорт
	
	Возврат РегистрыСведений.ПроцессыДействий.ДействиеПоПроцессу(Процесс);
	
КонецФункции	

// Возвращает последнюю задачу процесса для участника действия.
//
// Параметры:
//  Действие - ОпределяемыйТип.Действия - ссылка на действие.
//  ИдентификаторУчастника - УникальныйИдентификатор - идентификатор участника.
//
// Возвращаемое значение:
//  ЗадачаСсылка.ЗадачаИсполнителя
//
Функция ЗадачаПроцессаПоУчастникуДействия(Действие, ИдентификаторУчастника) Экспорт
	
	Возврат РаботаСПроцессамиПоДействиям.ЗадачаПроцессаПоУчастникуДействия(Действие, ИдентификаторУчастника);
	
КонецФункции

// Возвращает номер итерации для участника действия.
//
// Параметры:
//  Действие - ОпределяемыйТип.Действия - ссылка на действие.
//
// Возвращаемое значение:
//  ЗадачаСсылка.ЗадачаИсполнителя
//
Функция НомерИтерацииУчастникаДействия(Действие, ИдентификаторУчастника) Экспорт
	
	Задача = РаботаСПроцессамиПоДействиям.ЗадачаПроцессаПоУчастникуДействия(Действие, ИдентификаторУчастника);
	Если Не ЗначениеЗаполнено(Задача) Тогда
		Возврат 0;
	КонецЕсли;	
	
	БизнесПроцесс = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		Задача, "БизнесПроцесс");
	
	НомерИтерации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		БизнесПроцесс, "НомерИтерации");
		
	Возврат НомерИтерации;
	
КонецФункции

// Заполнит структуру возврата вместо диалога настроек процесса
//
//Параметры
//	Действие - ссылка на действие
//	Процесс - БизнесПроцесс.Ссылка
//  РезультатЗавершения - Структура
//
Процедура ЗаполнитьРезультатНастроекПроцессаИСброситьРезультат(
	Действие, Процесс, РезультатЗавершения) Экспорт
	
	РаботаСПроцессамиПоДействиям.ЗаполнитьРезультатНастроекПроцессаИСброситьРезультат(
		Действие, Процесс, РезультатЗавершения);
	
КонецПроцедуры

// Заполним параметры и имя формы для открытия формы согласования в режиме замечаний
//
//Параметры
//	ЗадачаПроцесса - ЗадачаСсылка.ЗадачаИсполнителя 
//	ПараметрыОткрытия - Структура 
//	ВыбраннаяФорма -Строка, имя формы
Процедура ЗаполнитьПараметрыОткрытияФормыСогласования(
		ЗадачаПроцесса, ПараметрыОткрытия, ВыбраннаяФорма) Экспорт
		
	РеквизитыЗадачи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ЗадачаПроцесса, 
		"ИдентификаторИсполнителя, БизнесПроцесс, Исполнитель, РольИсполнителя, ТочкаМаршрута, Выполнена");
		
	Действие = РегистрыСведений.ПроцессыДействий.ДействиеПоПроцессу(РеквизитыЗадачи.БизнесПроцесс);	
	Если ЗначениеЗаполнено(Действие) И ТипЗнч(Действие) = Тип("СправочникСсылка.ДействияСогласования")
		И Не РеквизитыЗадачи.Выполнена Тогда
		
		СогласованиеВРежимеЗамечаний = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Действие, "СогласованиеВРежимеЗамечаний");
			
		РеквизитыПроцесса = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			РеквизитыЗадачи.БизнесПроцесс, "НомерИтерации, Завершен");
		НомерИтерации = РеквизитыПроцесса.НомерИтерации;
			
			Если СогласованиеВРежимеЗамечаний И Не РеквизитыПроцесса.Завершен Тогда
				
				Если РеквизитыЗадачи.ТочкаМаршрута = БизнесПроцессы.Согласование.ТочкиМаршрута.Согласовать Тогда
					ВыбраннаяФорма = "ОбщаяФорма.СогласованиеВРежимеЗамечанийФормаСогласующего";
				ИначеЕсли РеквизитыЗадачи.ТочкаМаршрута = БизнесПроцессы.Согласование.ТочкиМаршрута.Ознакомиться Тогда
					ВыбраннаяФорма = "ОбщаяФорма.СогласованиеВРежимеЗамечанийФормаИнициатора";
				КонецЕсли;	
				
				Участник = РеквизитыЗадачи.Исполнитель;
				Если Не ЗначениеЗаполнено(Участник) Тогда
					Участник = РеквизитыЗадачи.РольИсполнителя;
				КонецЕсли;	
				
				Предмет = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
					Действие, "Предмет");
				
				ПараметрыОткрытия.Вставить("Действие", Действие);
				ПараметрыОткрытия.Вставить("Идентификатор", РеквизитыЗадачи.ИдентификаторИсполнителя);
				ПараметрыОткрытия.Вставить("Участник", Участник);
				ПараметрыОткрытия.Вставить("Документ", Предмет);
				ПараметрыОткрытия.Вставить("ОсновнойДокумент", Предмет);
				ПараметрыОткрытия.Вставить("НомерИтерации", НомерИтерации);
				
		КонецЕсли;	
		
	КонецЕсли;	

КонецПроцедуры		

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти