// @strict-types


#Область ПрограммныйИнтерфейс

// Выполняется при определении адресатов самостоятельных данных для определения особого алгоритма.
//
// Параметры:
//   ТипДанныхОбмена - Структура - Описание типа данных КОД (см. КОДПовтИсп.ИдентификаторИТипыДанныхОбмена):
//     * ПолноеИмя - Строка - Полное имя объекта метаданных
//   КлючиДанных - Массив Из СправочникСсылка, ДокументСсылка - Ключи объектов, которые требуют определения адресатов.
//   ПараметрыРассмотрения - Структура
//   УзлыДанных - Соответствие Из КлючИЗначение - Неявно возвращаемый параметр, в него следует поместить результат.
//   СтандартнаяОбработка - Булево - Признак отключения стандартной логики определения адресатов.
//
Процедура ПриОпределенииАдресатовСамостоятельныхДанных(ТипДанныхОбмена, КлючиДанных, ПараметрыРассмотрения,
		УзлыДанных, СтандартнаяОбработка) Экспорт
	
	Если ТипДанныхОбмена.ПолноеИмя = "Справочник.Файлы" Тогда
		
		УзлыДанных = АдресатыФайлов(КлючиДанных);
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

// Узлы адресаты файлов.
// 
// Параметры:
//  Файлы - Массив Из СправочникСсылка.Файлы
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//    * Ключ - СправочникСсылка.Файлы
//    * Значение - Массив Из СправочникСсылка.УзлыКОД
//
Функция АдресатыФайлов(Файлы) Экспорт
	
	УзлыФайлов = КОДСервер.УзлыСамостоятельныхДанныхПоПравам(Файлы);
	
	ДополнитьАдресатовПоДокументамДО(УзлыФайлов);
	
	Возврат УзлыФайлов;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Дополняет адресатов файлов адресатами владеющих их документов ДО
// 
// Параметры:
//  УзлыФайлов - Соответствие Из КлючИЗначение:
//    * Ключ - СправочникСсылка.Файлы
//    * Значение - Массив Из СправочникСсылка.УзлыКОД
Процедура ДополнитьАдресатовПоДокументамДО(УзлыФайлов)
	
	Файлы = Новый Массив();
	Для Каждого Элемент Из УзлыФайлов Цикл
		Файл = Элемент.Ключ;
		Файлы.Добавить(Файл);
	КонецЦикла;
	
	ДокументыПоФайлам = ФайлыДокументовИДокументы(Файлы);
	
	ДокументыДО = Новый Массив();
	Для Каждого Элемент Из ДокументыПоФайлам Цикл
		Документ = Элемент.Значение;
		ДокументыДО.Добавить(Документ);
	КонецЦикла;
	ДокументыДО = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ДокументыДО);
	
	ПараметрыОпределенияАдресатовДокументов = ДелопроизводствоХолдинг.НовыеПараметрыОпределенияАдресатовДокументов();
	УзлыДокументов = ДелопроизводствоХолдинг.АдресатыДокументов(ДокументыДО, ПараметрыОпределенияАдресатовДокументов);
	
	Для Каждого Элемент Из ДокументыПоФайлам Цикл
		
		Файл = Элемент.Ключ;
		Документ = Элемент.Значение;
		
		УзлыФайла = УзлыФайлов[Файл];
		Если УзлыФайла = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		УзлыДокумента = УзлыДокументов[Документ];
		Если УзлыДокумента = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(УзлыФайла, УзлыДокумента, Истина);
		
	КонецЦикла;
	
КонецПроцедуры

// Из переданного массива файлов выбирает файлы, которые принадлежат документам ДО
//  и помещает их в соответствие с Документами ДО
// 
// Параметры:
//  Файлы - Массив Из СправочникСсылка.Файлы
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//    * Ключ - СправочникСсылка.Файлы
//    * Значение - СправочникСсылка.ДокументыПредприятия
//
Функция ФайлыДокументовИДокументы(Файлы)
	
	РеквизитыФайлов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(Файлы, "ВладелецФайла");
	
	ДокументыФайлов = Новый Соответствие();
	
	Для Каждого Файл Из Файлы Цикл
		
		РеквизитыФайла = РеквизитыФайлов[Файл];
		
		Если РеквизитыФайла = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(РеквизитыФайла.ВладелецФайла) <> Тип("СправочникСсылка.ДокументыПредприятия") Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументыФайлов[Файл] = РеквизитыФайла.ВладелецФайла;
		
	КонецЦикла;
	
	Возврат ДокументыФайлов;
	
КонецФункции

#КонецОбласти
