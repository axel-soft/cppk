// @strict-types


#Область ПрограммныйИнтерфейс

#Область КомандыНастройкиПолученияЭлектронныхДокументов

// Обработчик события Выбор таблицы ВходящиеДокументы формы
// РегистрСведений.НастройкиПолученияЭлектронныхДокументов.НастройкиОтраженияДокументовВУчете
//
// Параметры:
//	Форма - см. РегистрСведений.НастройкиПолученияЭлектронныхДокументов.Форма.НастройкиОтраженияДокументовВУчете
//	Элемент - ТаблицаФормы - Таблица ВходящиеДокументы
//	ВыбраннаяСтрока - Произвольный - Значение выбранной строки.
//	Поле - ПолеФормы - Колонка таблицы
//	СтандартнаяОбработка - Булево - Признак стандартной обработки
//
Процедура ВходящиеДокументыВыбор_НастройкиОтраженияДокументовВУчете(
		Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт
	
	ТекущиеДанные = Элемент.ТекущиеДанные; // ДанныеФормыЭлементКоллекции
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ВРег(ТекущиеДанные.СпособОбработки), "АВТОМАТИЧЕСКИ") Тогда //@skip-check property-return-type
		ВозможныеВариантыДействий = ДействияСПравиламиАвтоматическогоСозданияОбъектов();
		
		КлючНастроек = ОбменЭДОДокументооборотКлиентСервер.КлючНастройкиАвтоматическогоСозданияОбъекта();
		КлючНастроек.Получатель = Форма.Организация;
		КлючНастроек.Отправитель = Форма.Контрагент;
		КлючНастроек.ИдентификаторОтправителя = Форма.ИдентификаторКонтрагента;
		КлючНастроек.ИдентификаторПолучателя = Форма.ИдентификаторОрганизации;
		КлючНастроек.ВидДокумента = ТекущиеДанные.ВидДокумента; //@skip-check statement-type-change
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ОбработатьВариантДействияПравилаАвтоматическогоСозданияОбъекта",
			ЭтотОбъект,
			Новый Структура("КлючНастроек, ТекущиеДанные, Форма", КлючНастроек, Элемент.ТекущиеДанные, Форма));
		
		ТекущиеВариантыДействий = Новый СписокЗначений; // СписокЗначений Из Строка
		Если Не ЗначениеЗаполнено(ТекущиеДанные.ПравилоАвтоматическогоСозданияОбъектов) Тогда
			ТекущиеВариантыДействий.Добавить(
				ВозможныеВариантыДействий.Выбрать.Имя,
				ВозможныеВариантыДействий.Выбрать.Представление,,
				ВозможныеВариантыДействий.Выбрать.Картинка);
		Иначе
			ТекущиеВариантыДействий.Добавить(
				ВозможныеВариантыДействий.Настроить.Имя,
				ВозможныеВариантыДействий.Настроить.Представление,,
				ВозможныеВариантыДействий.Настроить.Картинка);
			ТекущиеВариантыДействий.Добавить(
				ВозможныеВариантыДействий.Изменить.Имя,
				ВозможныеВариантыДействий.Изменить.Представление,,
				ВозможныеВариантыДействий.Изменить.Картинка);
			ТекущиеВариантыДействий.Добавить(
				ВозможныеВариантыДействий.Удалить.Имя,
				ВозможныеВариантыДействий.Удалить.Представление,,
				ВозможныеВариантыДействий.Удалить.Картинка);
		КонецЕсли;
		
		Если ТекущиеВариантыДействий.Количество() = 1 Тогда
			ВыполнитьОбработкуОповещения(ОписаниеОповещения, ТекущиеВариантыДействий[0]);
		Иначе
			Форма.ПоказатьВыборИзСписка(ОписаниеОповещения, ТекущиеВариантыДействий, Поле);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область КомандыНастройкиПолученияЭлектронныхДокументов

// Обработчик оповещения, который вызывается по окончании выбора действия с правилом автоматического создания объекта.
//
// Параметры:
//	Результат - ЭлементСпискаЗначений, Неопределено - Действие.
//	Параметры - Структура - Параметры, которые были переданы при начале выбора действия.
//
Процедура ОбработатьВариантДействияПравилаАвтоматическогоСозданияОбъекта(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("ЭлементСпискаЗначений") Или ТипЗнч(Параметры) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	КлючНастроек = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "КлючНастроек"); // см. ОбменЭДОДокументооборотКлиентСервер.КлючНастройкиАвтоматическогоСозданияОбъекта
	ТекущиеДанные = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ТекущиеДанные"); // ДанныеФормыЭлементКоллекции
	Форма = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "Форма"); // ФормаКлиентскогоПриложения
	
	ВозможныеВариантыДействий = ДействияСПравиламиАвтоматическогоСозданияОбъектов();
	Если Результат.Значение = ВозможныеВариантыДействий.Выбрать.Имя
			Или Результат.Значение = ВозможныеВариантыДействий.Изменить.Имя Тогда
		
		ПараметрыПравилСозданияОбъектов = ОбменЭДОДокументооборотКлиентСервер.ОписаниеПодсистемыЭДО();
		
		ПараметрыФормы = ПараметрыФормыНастройкиПравилаСозданияОбъекта();
		ПараметрыФормы.ПредставлениеИС = ПараметрыПравилСозданияОбъектов.Представление;
		ПараметрыФормы.ИмяМакета = ПараметрыПравилСозданияОбъектов.Имя;
		ПараметрыФормы.ТипОбъектаИС =
			ОбменЭДОДокументооборотКлиентСервер.ИмяОбъектаПравилаАвтоматическогоСозданияОбъекта(КлючНастроек.ВидДокумента);
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ОбработатьДействиеВыбратьПравилоСозданияОбъектаЗавершение", ЭтотОбъект, Параметры);
		
		//@skip-check property-return-type
		ОткрытьФорму(
			"Справочник.ПравилаЗагрузкиДанныхВДО.ФормаВыбора",
			ПараметрыФормы,
			Форма,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли Результат.Значение = ВозможныеВариантыДействий.Настроить.Имя Тогда
		
		ПараметрыПравилСозданияОбъектов = ОбменЭДОДокументооборотКлиентСервер.ОписаниеПодсистемыЭДО();
		ПравилоАвтоматическогоСозданияОбъектов = ТекущиеДанные["ПравилоАвтоматическогоСозданияОбъектов"]; // СправочникСсылка.ПравилаЗагрузкиДанныхВДО
		
		ПараметрыФормы = ПараметрыФормыНастройкиПравилаСозданияОбъекта();
		ПараметрыФормы.Ключ = ПравилоАвтоматическогоСозданияОбъектов;
		ПараметрыФормы.ПредставлениеИС = ПараметрыПравилСозданияОбъектов.Представление;
		ПараметрыФормы.ИмяМакета = ПараметрыПравилСозданияОбъектов.Имя;
		ПараметрыФормы.ИзМакета = Истина;
		ПараметрыФормы.ТипОбъектаИС =
			ОбменЭДОДокументооборотКлиентСервер.ИмяОбъектаПравилаАвтоматическогоСозданияОбъекта(КлючНастроек.ВидДокумента);
		
		Если Не ЗначениеЗаполнено(ПравилоАвтоматическогоСозданияОбъектов) Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения(
				"ОбработатьДействиеНастроитьПравилоСозданияОбъектаЗавершение", ЭтотОбъект, Параметры);
		КонецЕсли;
		
		//@skip-check property-return-type
		ОткрытьФорму(
			"Справочник.ПравилаЗагрузкиДанныхВДО.ФормаОбъекта",
			ПараметрыФормы,
			Форма,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли Результат.Значение = ВозможныеВариантыДействий.Удалить.Имя Тогда
		
		Кнопки = Новый СписокЗначений; // СписокЗначений Из КодВозвратаДиалога
		Кнопки.Добавить(КодВозвратаДиалога.Да, Нстр("ru = 'Удалить'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, Нстр("ru = 'Отмена'"));
		
		ТекстВопроса =
			СтрШаблон(Нстр("ru = 'Удалить правило создания объектов для ""%1""?'"), КлючНастроек.ВидДокумента);
			
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ОбработатьДействиеУдалитьПравилоСозданияОбъектаЗавершение", ЭтотОбъект, Параметры);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки,, КодВозвратаДиалога.Отмена);
		
	Иначе
		
		ВызватьИсключение Нстр("ru = 'Неизвестное действие работы с правилами автоматического создания объектов'");
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик оповещения, который вызывается после завершения настройки правила создания объекта.
//
// Параметры:
//	Результат - Произвольный - Результат.
//	ДополнительныеПараметры - Структура, Неопределено - Параметры, которые были переданы в форму настройки.
//
Процедура ОбработатьДействиеНастроитьПравилоСозданияОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПравилоСозданияОбъекта = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "СсылкаНаОбъект"); // СправочникСсылка.ПравилаЗагрузкиДанныхВДО, Неопределено
	
	Если ЗначениеЗаполнено(ПравилоСозданияОбъекта) Тогда
		КлючНастроек = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "КлючНастроек"); // см. ОбменЭДОДокументооборотКлиентСервер.КлючНастройкиАвтоматическогоСозданияОбъекта
		ОбменЭДОДокументооборотВызовСервера.СохранитьНастройкуАвтоматическогоСозданияОбъекта(
			КлючНастроек, ПравилоСозданияОбъекта);
		
		ТекущиеДанные = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "ТекущиеДанные"); // ДанныеФормыЭлементКоллекции
		ОбновитьИнформациюВСтрокеТаблицыВходящиеДокументыНастройкиПолученияЭДО(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик оповещения, который вызывается после завершения выбора правила создания объекта.
//
// Параметры:
//	Результат - СправочникСсылка.ПравилаЗагрузкиДанныхВДО, Неопределено - Результат.
//	ДополнительныеПараметры - Структура, Неопределено - Параметры, которые были переданы в форму настройки.
//
Процедура ОбработатьДействиеВыбратьПравилоСозданияОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		КлючНастроек = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "КлючНастроек"); // см. ОбменЭДОДокументооборотКлиентСервер.КлючНастройкиАвтоматическогоСозданияОбъекта
		ОбменЭДОДокументооборотВызовСервера.СохранитьНастройкуАвтоматическогоСозданияОбъекта(КлючНастроек, Результат);
		
		ТекущиеДанные = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "ТекущиеДанные"); // ДанныеФормыЭлементКоллекции
		ТекущиеДанные["ПравилоАвтоматическогоСозданияОбъектов"] = Результат;
		
		ОбновитьИнформациюВСтрокеТаблицыВходящиеДокументыНастройкиПолученияЭДО(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик оповещения, который вызывается после ответа на вопрос об удалении правила создания объекта.
//
// Параметры:
//	Результат - КодВозвратаДиалога, Неопределено - Результат.
//	ДополнительныеПараметры - Структура, Неопределено - Дополнительные параметры.
//
Процедура ОбработатьДействиеУдалитьПравилоСозданияОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		КлючНастроек = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "КлючНастроек"); // см. ОбменЭДОДокументооборотКлиентСервер.КлючНастройкиАвтоматическогоСозданияОбъекта
		ОбменЭДОДокументооборотВызовСервера.УдалитьНастройкуАвтоматическогоСозданияОбъекта(КлючНастроек);
		
		ТекущиеДанные = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "ТекущиеДанные"); // ДанныеФормыЭлементКоллекции
		ТекущиеДанные["ПравилоАвтоматическогоСозданияОбъектов"] = Неопределено;
		
		ОбновитьИнформациюВСтрокеТаблицыВходящиеДокументыНастройкиПолученияЭДО(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

// Обновляет информацию в строке таблицы Входящие документы формы настроек получения ЭДО.
//
// Параметры:
//	СтрокаТаблицы - ДанныеФормыЭлементКоллекции - Строка таблицы.
//
Процедура ОбновитьИнформациюВСтрокеТаблицыВходящиеДокументыНастройкиПолученияЭДО(СтрокаТаблицы) Экспорт
	
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ВРег(СтрокаТаблицы["СпособОбработки"]), "АВТОМАТИЧЕСКИ") = Истина Тогда //@skip-check invocation-parameter-type-intersect
		
		ПравилоСозданияОбъектов = СтрокаТаблицы["ПравилоАвтоматическогоСозданияОбъектов"]; // СправочникСсылка.ПравилаЗагрузкиДанныхВДО
		Если ЗначениеЗаполнено(ПравилоСозданияОбъектов) Тогда
			СтрокаТаблицы["ИндексКартинки"] = 3;
		Иначе
			СтрокаТаблицы["ИндексКартинки"] = 2;
		КонецЕсли;
		
		СтрокаТаблицы["Настройки"] =
			ОбменЭДОДокументооборотКлиентСервер.ПредставлениеПравилаАвтоматическогоСозданияОбъектов(ПравилоСозданияОбъектов);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область КомандыНастройкиПолученияЭлектронныхДокументов

// Возвращает список возможных действий с правилами автоматического создания объектов.
//
// Возвращаемое значение:
//	Структура:
//		* Выбрать - см. ОписаниеДействияПравилаАвтоматическогоСозданияОбъектов:
//		* Настроить - см. ОписаниеДействияПравилаАвтоматическогоСозданияОбъектов.
//		* Удалить - см. ОписаниеДействияПравилаАвтоматическогоСозданияОбъектов.
//		* Изменить - см. ОписаниеДействияПравилаАвтоматическогоСозданияОбъектов.
//
Функция ДействияСПравиламиАвтоматическогоСозданияОбъектов()
	
	Действия = Новый Структура;
	
	ОписаниеДействия = ОписаниеДействияПравилаАвтоматическогоСозданияОбъектов();
	ОписаниеДействия.Имя = "ВыбратьПравилоСозданияОбъекта";
	ОписаниеДействия.Представление = Нстр("ru = 'Выбрать правило'");
	ОписаниеДействия.Картинка = БиблиотекаКартинок.ВыбратьЗначение;
	
	Действия.Вставить("Выбрать", ОписаниеДействия);
	
	ОписаниеДействия = ОписаниеДействияПравилаАвтоматическогоСозданияОбъектов();
	ОписаниеДействия.Имя = "НастроитьПравилоСозданияОбъекта";
	ОписаниеДействия.Представление = Нстр("ru = 'Настроить правило'");
	ОписаниеДействия.Картинка = БиблиотекаКартинок.Изменить;
	
	Действия.Вставить("Настроить", ОписаниеДействия);
	
	ОписаниеДействия = ОписаниеДействияПравилаАвтоматическогоСозданияОбъектов();
	ОписаниеДействия.Имя = "УдалитьПравилоСозданияОбъекта";
	ОписаниеДействия.Представление = Нстр("ru = 'Удалить правило'");
	ОписаниеДействия.Картинка = БиблиотекаКартинок.ОформлениеКрест;
	
	Действия.Вставить("Удалить", ОписаниеДействия);
	
	ОписаниеДействия = ОписаниеДействияПравилаАвтоматическогоСозданияОбъектов();
	ОписаниеДействия.Имя = "ИзменитьПравилоСозданияОбъекта";
	ОписаниеДействия.Представление = Нстр("ru = 'Выбрать другое правило'");
	ОписаниеДействия.Картинка = БиблиотекаКартинок.ВыбратьЗначение;
	
	Действия.Вставить("Изменить", ОписаниеДействия);
	
	Возврат Действия;
	
КонецФункции

// Конструктор описания параметров действия правилами автоматического создания объектов.
//
// Возвращаемое значение:
// Структура:
//	* Имя - Строка- Имя действия.
//	* Представление - Строка- Представление действия для пользователя.
//	* Картинка - Картинка, Неопределено - Картинка.
//
Функция ОписаниеДействияПравилаАвтоматическогоСозданияОбъектов()
	
	ОписаниеДействия = Новый Структура;
	ОписаниеДействия.Вставить("Имя", "");
	ОписаниеДействия.Вставить("Представление", "");
	ОписаниеДействия.Вставить("Картинка", Неопределено);
	
	Возврат ОписаниеДействия;
	
КонецФункции

// Конструктор параметров формы настройки правила создания объекта.
//
// Возвращаемое значение:
//	Структура:
//		* Ключ - СправочникСсылка.ПравилаЗагрузкиДанныхВДО, Неопределено -
//		* ПредставлениеИС - Строка -
//		* ИмяМакета - Строка -
//		* ИзМакета - Булево -
//		* СсылкаНаОбъект - СправочникСсылка.ПравилаЗагрузкиДанныхВДО, Неопределено -
//		* ТипОбъектаИС - Строка -
//
Функция ПараметрыФормыНастройкиПравилаСозданияОбъекта()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Неопределено);
	ПараметрыФормы.Вставить("ПредставлениеИС", "");
	ПараметрыФормы.Вставить("ИмяМакета", "");
	ПараметрыФормы.Вставить("ИзМакета", Ложь);
	ПараметрыФормы.Вставить("СсылкаНаОбъект", Неопределено);
	ПараметрыФормы.Вставить("ТипОбъектаИС", "");
	
	Возврат ПараметрыФормы;
	
КонецФункции

#КонецОбласти

#КонецОбласти
