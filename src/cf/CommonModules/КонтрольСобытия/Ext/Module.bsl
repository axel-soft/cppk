////////////////////////////////////////////////////////////////////////////////////////////////////
// Обработка записи задачи контроля
//  
////////////////////////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

Процедура КонтрольПередЗаписьюЗадачиПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("ВидЗаписи") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольОбъектов") Тогда 
		Возврат;
	КонецЕсли;
	
	Если МиграцияДанныхИзВнешнихСистемСервер.ЭтоОбъектИзДругойСистемы(Источник.ИсточникДанных) Тогда
		Возврат;
	КонецЕсли;
	
	Источник.ДополнительныеСвойства.Вставить("ЭтоНовый", Источник.ЭтоНовый());
	
	СтарыйСрокИсполнения = '00010101';
	Если ЗначениеЗаполнено(Источник.Ссылка) Тогда 
		СтарыйСрокИсполнения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Ссылка, "СрокИсполнения");
	КонецЕсли;
	Источник.ДополнительныеСвойства.Вставить("СтарыйСрокИсполнения", СтарыйСрокИсполнения);
	
	СтараяПометкаУдаления = Ложь;
	Если ЗначениеЗаполнено(Источник.Ссылка) Тогда 
		СтараяПометкаУдаления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Ссылка, "ПометкаУдаления");
	КонецЕсли;
	Источник.ДополнительныеСвойства.Вставить("СтараяПометкаУдаления", СтараяПометкаУдаления);
	
КонецПроцедуры

Процедура КонтрольПриЗаписиЗадачиПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("ВидЗаписи") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольОбъектов") Тогда 
		Возврат;
	КонецЕсли;
	
	Если МиграцияДанныхИзВнешнихСистемСервер.ЭтоОбъектИзДругойСистемы(Источник.ИсточникДанных) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтараяПометкаУдаления = Источник.ДополнительныеСвойства.СтараяПометкаУдаления;
	СтароеСостояниеБизнесПроцесса = Источник.ДополнительныеСвойства.СтароеСостояниеБизнесПроцесса;
	
	Если СтараяПометкаУдаления <> Источник.ПометкаУдаления Тогда 
		Контроль.ОтметитьУдалениеСтрокиКонтроляПоЗадаче(Источник, Источник.ПометкаУдаления);
		
	ИначеЕсли СтароеСостояниеБизнесПроцесса <> Неопределено 
		И СтароеСостояниеБизнесПроцесса <> Источник.СостояниеБизнесПроцесса
		И Источник.СостояниеБизнесПроцесса = Перечисления.СостоянияБизнесПроцессов.Прерван Тогда 
		Контроль.ОтметитьУдалениеСтрокиКонтроляПоЗадаче(Источник, Истина);
		
	Иначе
		Контроль.ЗаполнитьСтрокуКонтроляПоЗадаче(Источник);
		Контроль.ЗаполнитьКонтрольПоЗадаче(Источник);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПредметКонтроляПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если РаботаСБизнесПроцессами.ЭтоБизнесПроцессОбъект(Источник)
		И МиграцияДанныхИзВнешнихСистемСервер.ЭтоОбъектИзДругойСистемы(Источник.ИсточникДанных) Тогда
		
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("ВидЗаписи") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольОбъектов") Тогда 
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	// обновление контрольной карточки по исходящему письму
	Если ВстроеннаяПочтаКлиентСервер.ЭтоИсходящееПисьмо(Источник) Тогда 
		
		КарточкиКонтроля = Контроль.ВсеКарточкиКонтроляПоПредмету(Источник.Ссылка);
		Для Каждого КарточкаКонтроля Из КарточкиКонтроля Цикл
			КонтрольОбъект = КарточкаКонтроля.ПолучитьОбъект();
			НужноЗаписать = Ложь;
			
			// добавленные
			Для Каждого СтрокаПолучатель Из Источник.ПолучателиПисьма Цикл 
				НайденнаяСтрока = Неопределено;
				Контроль.НайтиСтрокуКонтроляПоАдресату(КонтрольОбъект, СтрокаПолучатель.Адресат, НайденнаяСтрока);
				Если НайденнаяСтрока = Неопределено Тогда 
					Строка = КонтрольОбъект.Исполнители.Добавить();
					Строка.Исполнитель = СтрокаПолучатель.Адресат;
					Строка.Источник = Источник.Ссылка;
					НужноЗаписать = Истина;
				КонецЕсли;
			КонецЦикла;	
			
			// удаленные
			Для Каждого СтрокаИсполнитель Из КонтрольОбъект.Исполнители Цикл
				НайденнаяСтрока = Неопределено;
				Для Каждого СтрокаПолучатель Из Источник.ПолучателиПисьма Цикл
					АдресИсполнителя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаИсполнитель.Исполнитель, "Адрес");
					АдресПолучателя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаПолучатель.Адресат, "Адрес");
					Если АдресИсполнителя = АдресПолучателя Тогда 
						НайденнаяСтрока = СтрокаПолучатель;
						Прервать;
					КонецЕсли;	
				КонецЦикла;
				
				Если НайденнаяСтрока = Неопределено
					И СтрокаИсполнитель.Источник = Источник.Ссылка Тогда 
					КонтрольОбъект.Исполнители.Удалить(СтрокаИсполнитель);
					НужноЗаписать = Истина;
				КонецЕсли;	
			КонецЦикла;
			
			Если НужноЗаписать Тогда 
				КонтрольОбъект.Записать();
			КонецЕсли;
		КонецЦикла;		
			
	КонецЕсли;	
	
	// обновление контрольной карточки по процессу
	Если ОбщегоНазначения.ЭтоБизнесПроцесс(Источник.Метаданные())
		Или ТипЗнч(Источник) = Тип("ДокументОбъект.Задача")
		Или ТипЗнч(Источник) = Тип("ДокументОбъект.ДействиеЗадачи") Тогда
		
		// Если автор направляет задачу на исполнение, то исполнители ещё не могли поставить себе действие задачи на контроль.
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ДействиеЗадачи")
			И Источник.ДополнительныеСвойства.Свойство("НаправитьНаИсполнение") Тогда
			Возврат;
		КонецЕсли;
		
		КарточкиКонтроля = Контроль.ВсеКарточкиКонтроляПоПредмету(Источник.Ссылка);
		Для Каждого КарточкаКонтроля Из КарточкиКонтроля Цикл
			КарточкаКонтроляОбъект = КарточкаКонтроля.ПолучитьОбъект();
			НужноЗаписать = Ложь;
			
			НоваяКарточкаКонтроля = Справочники.Контроль.СоздатьЭлемент();
			
			// Передадим Контролера из процесса, если он там есть.
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "Контролер") Тогда
				НоваяКарточкаКонтроля.Контролер = Источник.Контролер;
			КонецЕсли;
			
			НоваяКарточкаКонтроля.ДополнительныеСвойства.Вставить("ПредметКонтроляПриЗаписи", Истина);
			НоваяКарточкаКонтроля.Заполнить(Источник.Ссылка);
			
			Если КарточкаКонтроляОбъект.СрокИсполнения <> НоваяКарточкаКонтроля.СрокИсполнения Тогда 
				КарточкаКонтроляОбъект.СрокИсполнения = НоваяКарточкаКонтроля.СрокИсполнения;
				НужноЗаписать = Истина;
			КонецЕсли;
			
			// добавленные
			Для Каждого Строка Из НоваяКарточкаКонтроля.Исполнители Цикл 
				Если ЗначениеЗаполнено(Строка.Источник) Тогда 
					Продолжить;
				КонецЕсли;
				НайденнаяСтрока = Неопределено;
				Контроль.НайтиСтрокуКонтроляПоИсполнителю(КарточкаКонтроляОбъект, Строка, НайденнаяСтрока);
				Если НайденнаяСтрока = Неопределено Тогда 
					НоваяСтрока = КарточкаКонтроляОбъект.Исполнители.Добавить();
					НоваяСтрока.Исполнитель = Строка.Исполнитель;
					НужноЗаписать = Истина;
				КонецЕсли;
			КонецЦикла;	
			
			// удаленные
			МассивУдаления = Новый Массив;
			Для Каждого Строка Из КарточкаКонтроляОбъект.Исполнители Цикл
				Если ЗначениеЗаполнено(Строка.Источник) Тогда 
					Продолжить;
				КонецЕсли;
				НайденнаяСтрока = Неопределено;
				Контроль.НайтиСтрокуКонтроляПоИсполнителю(НоваяКарточкаКонтроля, Строка, НайденнаяСтрока);	
				Если НайденнаяСтрока = Неопределено Тогда
					МассивУдаления.Добавить(Строка); 
				КонецЕсли;	
			КонецЦикла;
			
			Для Каждого Строка Из МассивУдаления Цикл 
				КарточкаКонтроляОбъект.Исполнители.Удалить(Строка);
				НужноЗаписать = Истина;
			КонецЦикла;	
			
			Если НужноЗаписать Тогда 
				КарточкаКонтроляОбъект.Записать();
			КонецЕсли;
		КонецЦикла;	
		
	КонецЕсли;
		
	// обновление контрольной карточки по Действию
	Если ДействияКлиентСервер.ЭтоДействие(Источник.Ссылка) Тогда
		
		КарточкиКонтроля = Контроль.ВсеКарточкиКонтроляПоПредмету(Источник.Ссылка);
		Для Каждого КарточкаКонтроля Из КарточкиКонтроля Цикл
			КарточкаКонтроляОбъект = КарточкаКонтроля.ПолучитьОбъект();
			НужноЗаписать = Ложь;
			
			НоваяКарточкаКонтроля = Справочники.Контроль.СоздатьЭлемент();
			
			Если ЗначениеЗаполнено(КарточкаКонтроляОбъект.Контролер) Тогда
				НоваяКарточкаКонтроля.Контролер = КарточкаКонтроляОбъект.Контролер;
			
			// Передадим Контролера из действия, если он там есть.
			ИначеЕсли ТипЗнч(Источник.Ссылка) = Тип("СправочникСсылка.ДействияИсполнения")Тогда
				НоваяКарточкаКонтроля.Контролер = Источник.Контролер;
				
			КонецЕсли;
			
			Если ТипЗнч(Источник.Ссылка) = Тип("СправочникСсылка.ДействияИсполнения")
				И ЗначениеЗаполнено(КарточкаКонтроляОбъект.ИдентификаторПункта) Тогда
				ДанныеПункта = Справочники.ДействияИсполнения.ДанныеПунктаДействия(
					Источник.Ссылка, КарточкаКонтроляОбъект.ИдентификаторПункта);
				
				НоваяКарточкаКонтроля.Заполнить(ДанныеПункта);
			ИначеЕсли ТипЗнч(Источник.Ссылка) = Тип("СправочникСсылка.ДействияИсполнения")
				И ЗначениеЗаполнено(КарточкаКонтроляОбъект.ИдентификаторВышестоящегоЭтапа) Тогда
				
				СтруктураЗаполнения = Новый Структура;
				СтруктураЗаполнения.Вставить("Действие", Источник.Ссылка);
				СтруктураЗаполнения.Вставить("ИдентификаторВышестоящего",
					КарточкаКонтроляОбъект.ИдентификаторВышестоящегоЭтапа);
				НоваяКарточкаКонтроля.Заполнить(СтруктураЗаполнения);
			Иначе
				
				НоваяКарточкаКонтроля.Заполнить(Источник.Ссылка);
			КонецЕсли;
				 
			Если КарточкаКонтроляОбъект.СрокИсполнения <> НоваяКарточкаКонтроля.СрокИсполнения
				И ЗначениеЗаполнено(НоваяКарточкаКонтроля.СрокИсполнения) Тогда 
				КарточкаКонтроляОбъект.СрокИсполнения = НоваяКарточкаКонтроля.СрокИсполнения;
				НужноЗаписать = Истина;
			КонецЕсли;
			
			// добавленные
			Для Каждого Строка Из НоваяКарточкаКонтроля.Исполнители Цикл 
				НайденнаяСтрока = Неопределено;
				Контроль.НайтиСтрокуКонтроляПоИсполнителю(КарточкаКонтроляОбъект, Строка, НайденнаяСтрока);
				Если НайденнаяСтрока = Неопределено Тогда 
					НоваяСтрока = КарточкаКонтроляОбъект.Исполнители.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
					НужноЗаписать = Истина;
				КонецЕсли;
			КонецЦикла;	
			
			// удаленные
			МассивУдаления = Новый Массив;
			Для Каждого Строка Из КарточкаКонтроляОбъект.Исполнители Цикл
				Если ЗначениеЗаполнено(Строка.Источник) Тогда 
					Продолжить;
				КонецЕсли;
				НайденнаяСтрока = Неопределено;
				Контроль.НайтиСтрокуКонтроляПоИсполнителю(НоваяКарточкаКонтроля, Строка, НайденнаяСтрока);	
				Если НайденнаяСтрока = Неопределено Тогда 
					МассивУдаления.Добавить(Строка);
				КонецЕсли;	
			КонецЦикла;
			
			Для Каждого Строка Из МассивУдаления Цикл 
				КарточкаКонтроляОбъект.Исполнители.Удалить(Строка);
				НужноЗаписать = Истина;
			КонецЦикла;	
			
			Если НужноЗаписать Тогда 
				КарточкаКонтроляОбъект.Записать();
			КонецЕсли;
		КонецЦикла;	
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
