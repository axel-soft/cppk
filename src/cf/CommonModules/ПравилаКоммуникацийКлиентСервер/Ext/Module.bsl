
#Область ПрограммныйИнтерфейс

// Собирает необходимые критерии подбора подходящего правила для текущего места применения.
// Заполняет только значения доступные на клиенте.
// Значения из СУБД дополняются после перехода исполнения на сервер в Справочники.ПравилаКоммуникаций.ДополнитьКонтекст().
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма источника события.
//  Элемент - ПолеВвода - Поле ввода источника события.
//  ФункцияУчастника - ПеречислениеСсылка.ФункцииУчастников<...> - Функция участника действия.
// 
// Возвращаемое значение:
//	Структура Из КлючИЗначение
//
//@skip-check doc-comment-type
Функция КонтекстВыбора(Форма, Элемент = Неопределено, ФункцияУчастника = Неопределено) Экспорт
	
	Если Форма.Параметры.Свойство("Ключ") Тогда
		Объект = Форма.Объект;
		
		Контекст = Новый Структура("Ссылка", Объект.Ссылка);
		
		Если Элемент <> Неопределено Тогда
			Контекст.Вставить("ИмяПоля", Элемент.Имя);
		КонецЕсли;
		
		Если ФункцияУчастника <> Неопределено Тогда
			Контекст.Вставить("ФункцияУчастника", ФункцияУчастника);
		КонецЕсли;
		
		Если ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.ДокументыПредприятия") Тогда
			
			Контекст.Вставить("Вид", Объект.ВидДокумента);
			Контекст.Вставить("Тематика", Объект.Тематика);
			Контекст.Вставить("Инициатор", ?(ЗначениеЗаполнено(Объект.Подготовил), Объект.Подготовил, Объект.Создал));
			
		ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.Задача") Тогда
			
			Контекст.Вставить("Вид", Объект.ВидЗадачи);
			Контекст.Вставить("Инициатор",
				?(ЗначениеЗаполнено(Объект.Автор) И ТипЗнч(Объект.Автор) = Тип("СправочникСсылка.Сотрудники"),
					Объект.Автор,
					Объект.Создал));
			
			Если ФункцияУчастника = Неопределено
					И Форма.Элементы.Участники.ТекущаяСтрока <> Неопределено Тогда
				Контекст.Вставить("ФункцияУчастника", Форма.Элементы.Участники.ТекущиеДанные.ВидУчастника);
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.Мероприятия") Тогда
			
			Контекст.Вставить("Вид", Объект.ВидМероприятия);
			Контекст.Вставить("Инициатор", Объект.Подготовил);
			
		ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("БизнесПроцессСсылка.РешениеВопросовВыполненияЗадач") Тогда
			
			Контекст.Вставить("Вид", ПредопределенноеЗначение("Справочник.ВидыЗадач.Вопрос"));
			Контекст.Вставить("ФункцияУчастника", ПредопределенноеЗначение("Справочник.ВидыУчастниковЗадач.РассматривающийВопрос"));
			Контекст.Вставить("Инициатор", Неопределено);
			
		Иначе //Действие обработки документа.
			
			Контекст.Вставить("Действие", Объект.Ссылка);
			
			Если Форма.Элементы.Найти("Участники") <> Неопределено
					И Форма.Элементы.Участники.ТекущаяСтрока <> Неопределено Тогда
				
				ТекущиеДанные = Форма.ТекущийЭлемент.ТекущиеДанные;
				Пока ТекущиеДанные <> Неопределено Цикл
					Если Не Контекст.Свойство("ФункцияУчастника")
							И ТекущиеДанные.Свойство("Функция")
							И ЗначениеЗаполнено(ТекущиеДанные.Функция) Тогда
						Контекст.Вставить("ФункцияУчастника", ТекущиеДанные.Функция);
					КонецЕсли;
					
					Если Не Контекст.Свойство("Этап")
							И ТекущиеДанные.Свойство("НаименованиеЭтапа")
							И ЗначениеЗаполнено(ТекущиеДанные.НаименованиеЭтапа) Тогда
						Контекст.Вставить("Этап", ТекущиеДанные.НаименованиеЭтапа);
					КонецЕсли;
					
					ТекущиеДанные = ТекущиеДанные.ПолучитьРодителя();
				КонецЦикла;
			
			КонецЕсли;
			
			Если Объект.Свойство("Предмет") Тогда
				Контекст.Вставить("Ссылка", Объект.Предмет);
			КонецЕсли;
			
			Если  Объект.Свойство("Автор") Тогда
				Контекст.Вставить("Инициатор", Объект.Автор);
			ИначеЕсли Объект.Свойство("Создал") Тогда
				Контекст.Вставить("Инициатор", Объект.Создал);
			КонецЕсли;
			
		КонецЕсли;
		
		Возврат Контекст;
	
	ИначеЕсли Форма.ИмяФормы = "Документ.Задача.Форма.ПеренаправлениеЗадачи" Тогда
		
		Возврат Новый Структура(
			"Предметы, ОтКого",
			Форма.ЗадачиИлиДействия.ВыгрузитьЗначения(), Форма.ОтКого);
		
	ИначеЕсли Форма.ИмяФормы = "Документ.Задача.Форма.ВводПричиныВозврата" Тогда
		
		Если ФункцияУчастника = Неопределено Тогда
			ВызватьИсключение НСтр("ru = 'Не указана функция участника.'");
		КонецЕсли;
		
		Объект = Форма.Объект;
		
		Контекст = Новый Структура;
		Контекст.Вставить("Ссылка", Объект.Ссылка);
		Контекст.Вставить("Вид", Объект.ВидЗадачи);
		Контекст.Вставить("Инициатор",
			?(ЗначениеЗаполнено(Объект.Автор) И ТипЗнч(Объект.Автор) = Тип("СправочникСсылка.Сотрудники"),
				Объект.Автор,
				Объект.Создал));
		Контекст.Вставить("ФункцияУчастника", ФункцияУчастника);
		
		Возврат Контекст;
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.ДействияИсполнения.Форма.НастройкаДочернегоИсполнения" Тогда
		
		Контекст = Новый Структура;
		Контекст.Вставить("Ссылка", Форма.Предмет);
		Контекст.Вставить("Действие", Форма.Действие);
		Контекст.Вставить("Инициатор", Форма.Автор);
		Если ФункцияУчастника <> Неопределено Тогда
			Контекст.Вставить("ФункцияУчастника", ФункцияУчастника);
		Иначе
			Контекст.Вставить(
				"ФункцияУчастника",
				ПредопределенноеЗначение("Перечисление.ФункцииУчастниковИсполнения.Исполнитель"));
		КонецЕсли;
		Контекст.Вставить("Этап", Форма.ОписаниеИсполнения);
		Если Элемент <> Неопределено Тогда
			Контекст.Вставить("ИмяПоля", Элемент.Имя);
		КонецЕсли;
		
		Возврат Контекст;
		
	КонецЕсли;
	
	Возврат Новый Структура;
	
КонецФункции

#КонецОбласти

