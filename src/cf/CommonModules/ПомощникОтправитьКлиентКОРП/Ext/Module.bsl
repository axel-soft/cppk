////////////////////////////////////////////////////////////////////////////////
// Помощник отправить (клиент, переопределяемый):
//  Содержит клиентские процедуры и функции для редакции КОРП,
//  по работе с помощником Отправить.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Открывать форму помощника для отправки подзадачи по исходной задаче.
//
// Параметры:
//  Объекты - Массив
//   * СправочникСсылка.Проекты, СправочникСсылка.ПроектныеЗадачи
//  ФормаВладелец - ФормаКлиентскогоПриложения - форма из которой инициирована отправка.
//
Процедура ОтправитьПроектыИлиПроектныеЗадачи(Объекты, ФормаВладелец) Экспорт
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("РежимРаботы",
		ПомощникОтправитьКлиентСерверКОРП.РежимРаботыОтправкаПроектовИлиПроектныхЗадач());
	ПараметрыФормы.Вставить("ОбъектыОтправки", Объекты);
	
	ОткрытьФорму("ОбщаяФорма.ПомощникОтправить",
		ПараметрыФормы,
		ФормаВладелец);
	
КонецПроцедуры

// Открывать форму помощника для выбора варианта отправки действия комплексного процесса.
//
// Параметры:
//  ТипДействия - Строка - тип действия, принимает одно из значений: Действие, ВложенныйПроцесс.
//  Предметы - Массив - предметы комплексного процесса.
//  ФормаВладелец - ФормаКлиентскогоПриложения - форма из которой инициирован выбор.
//  ОбработкаЗавершения - ОписаниеОповещения - описание обработки завершения.
//
Процедура ВыбратьВариантОтправкиДействияКомплексногоПроцесса(
	ТипДействия, Предметы, ФормаВладелец, ОбработкаЗавершения) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботы",
		ПомощникОтправитьКлиентСерверКОРП.РежимРаботыВыборВариантаОтправкиДляДействияКомплексногоПроцесса());
	ПараметрыФормы.Вставить("ОбъектыОтправки", Предметы);
	
	ВозможныеВарианты = Новый Массив;
	
	ТипыДействий = Новый Массив;
	Если ТипДействия = "" Тогда
		ТипыДействий.Добавить("Действие");
		ТипыДействий.Добавить("ВложенныйПроцесс");
	Иначе
		ТипыДействий.Добавить(ТипДействия);
	КонецЕсли;
	
	ВозможныеВарианты = Новый Массив;
	Если ТипыДействий.Найти("Действие") <> Неопределено Тогда
		ВозможныеВарианты.Добавить(Тип("СправочникСсылка.ШаблоныИсполнения"));
		ВозможныеВарианты.Добавить(Тип("СправочникСсылка.ШаблоныОзнакомления"));
		ВозможныеВарианты.Добавить(Тип("СправочникСсылка.ШаблоныПриглашения"));
		ВозможныеВарианты.Добавить(Тип("СправочникСсылка.ШаблоныРассмотрения"));
		ВозможныеВарианты.Добавить(Тип("СправочникСсылка.ШаблоныРегистрации"));
		ВозможныеВарианты.Добавить(Тип("СправочникСсылка.ШаблоныСогласования"));
		ВозможныеВарианты.Добавить(Тип("СправочникСсылка.ШаблоныПодписания"));
		ВозможныеВарианты.Добавить(Тип("СправочникСсылка.ШаблоныУтверждения"));
	КонецЕсли;
	
	Если ТипыДействий.Найти("ВложенныйПроцесс") <> Неопределено Тогда
		
		ВозможныеВарианты.Добавить(
			Тип("СправочникСсылка.ШаблоныКомплексныхБизнесПроцессов"));
			
		ВозможныеВарианты.Добавить(
			ПомощникОтправитьКлиентСервер.ВариантОтправкиСоздатьОбработку());
			
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ВозможныеВарианты", ВозможныеВарианты);
	
	ОткрытьФорму("ОбщаяФорма.ПомощникОтправить",
		ПараметрыФормы,
		ФормаВладелец,,,,
		ОбработкаЗавершения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Открывает форму помощника для отправки процессов.
// Переопределяет процедуру ПомощникОтправитьКлиент.ОтправитьПроцесс
//
// Параметры:
//  ФормаВладелец - ФормаКлиентскогоПриложения - форма из которой инициирована отправка.
//  ТипыПроцессов - Массив, Строка, Неопределено - типы процессов в виде наименований процессов,
//                                                 доступные для выбора в помощнике.
//
Процедура ОтправитьПроцесс(ФормаВладелец, ТипыПроцессов = Неопределено) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботы",
		ПомощникОтправитьКлиентСервер.РежимРаботыОтправкаПроцесса());
	
	Если ТипЗнч(ТипыПроцессов) = Тип("Массив") Тогда
		ТипыДляОбработки = ТипыПроцессов;
	ИначеЕсли ТипЗнч(ТипыПроцессов) = Тип("Строка") Тогда
		ТипыДляОбработки = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТипыПроцессов);
	Иначе
		ТипыДляОбработки = Новый Массив;
	КонецЕсли;
	
	ВозможныеВарианты = Новый Массив;
	
	Для Каждого ОбрабатываемыйТип Из ТипыДляОбработки Цикл
		
		Если ОбрабатываемыйТип = "Исполнение" Тогда
			ТипШаблона = Тип("СправочникСсылка.ШаблоныИсполнения");
		ИначеЕсли ОбрабатываемыйТип = "Ознакомление" Тогда
			ТипШаблона = Тип("СправочникСсылка.ШаблоныОзнакомления");
		ИначеЕсли ОбрабатываемыйТип = "Приглашение" Тогда
			ТипШаблона = Тип("СправочникСсылка.ШаблоныПриглашения");
		ИначеЕсли ОбрабатываемыйТип = "Рассмотрение" Тогда
			ТипШаблона = Тип("СправочникСсылка.ШаблоныРассмотрения");
		ИначеЕсли ОбрабатываемыйТип = "Регистрация" Тогда
			ТипШаблона = Тип("СправочникСсылка.ШаблоныРегистрации");
		ИначеЕсли ОбрабатываемыйТип = "Согласование" Тогда
			ТипШаблона = Тип("СправочникСсылка.ШаблоныСогласования");
		ИначеЕсли ОбрабатываемыйТип = "Подписание" Тогда
			ТипШаблона = Тип("СправочникСсылка.ШаблоныПодписания");
		ИначеЕсли ОбрабатываемыйТип = "Утверждение" Тогда
			ТипШаблона = Тип("СправочникСсылка.ШаблоныУтверждения");
		ИначеЕсли ОбрабатываемыйТип = "КомплексныйПроцесс" Тогда
			ТипШаблона = Тип("СправочникСсылка.ШаблоныКомплексныхБизнесПроцессов");
		КонецЕсли;
		
		ВозможныеВарианты.Добавить(ТипШаблона);
		
	КонецЦикла;
	
	ПараметрыФормы.Вставить("ВозможныеВарианты", ВозможныеВарианты);
	
	ОткрытьФорму("ОбщаяФорма.ПомощникОтправить",
		ПараметрыФормы,
		ФормаВладелец);
	
КонецПроцедуры

// Инициирует обработку выбора варианта отправки на клиенте.
////
// Параметры:
//  Вариант - Произвольный - вариант отправки.
//  Параметры - Структура - см. ПомощникОтправить.ПараметрыВарианта
//  ФормаВладелец - ФормаКлиентскогоПриложения - форма из которой инициирована обработка.
//
Процедура ОбработатьВыборВарианта(Вариант, Параметры, ФормаВладелец) Экспорт
	
	РежимРаботы = Параметры.РежимРаботы;
	
	Если РежимРаботы = ПомощникОтправитьКлиентСерверКОРП.
		РежимРаботыВыборВариантаОтправкиДляДействияКомплексногоПроцесса() Тогда
		
		// Если используется режим выбора, то закрываем помощника
		// возвращая выбранный вариант.
		Оповестить("ЗакрытьФормуПомощникаОтправки", Вариант, ФормаВладелец);
		Возврат;
		
	ИначеЕсли ПомощникОтправитьКлиентСервер.ЭтоВариантСоздатьПисьмоНаОсновании(Вариант) Тогда
		
		ПомощникОтправитьКлиент.ОтправитьПоВариантуСоздатьПисьмоНаОсновании(Параметры);
		
	ИначеЕсли ПомощникОтправитьКлиентСервер.ЭтоВариантСозданияПроцесса(Вариант) Тогда
		
		Если Параметры.Свойство("ПроектнаяЗадача")
			И Параметры.ОкончаниеФактПроектнойЗадачи > Дата(1, 1, 1) Тогда
			
			Параметры.Вставить("ФормаВладелец", ФормаВладелец);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьПоВариантуСозданияПроцессаПослеВопроса",
				ПомощникОтправитьКлиентКОРП, Параметры);
			
			ОбщегоНазначенияДокументооборотКлиент.ПоказатьВопросДаНет(
				ОписаниеОповещения,
				НСтр("ru = 'Проектная задача завершена. При отправке она вновь перейдет в стадию выполнения. Отправить задачу?'"),
				НСтр("ru = 'Отправить'"),
				НСтр("ru = 'Отмена'"));
				
			
			Возврат;
		КонецЕсли;
		
		ПомощникОтправитьКлиент.ОтправитьПоВариантуСозданияПроцесса(Параметры);
		
	ИначеЕсли ПомощникОтправитьКлиентСервер.ЭтоВариантСозданияЗадачи(Вариант) Тогда
		
		ПомощникОтправитьКлиент.ОтправитьПоВариантуСоздатьЗадачу(Параметры);
		
	ИначеЕсли ПомощникОтправитьКлиентСервер.ЭтоВариантОтправкиПоЭДО(Вариант) Тогда
		
		Оповестить("ЗакрытьФормуПомощникаОтправки",, ФормаВладелец);
		ПомощникОтправитьКлиент.ОтправитьПоВариантуОтправитьПоЭДО(Параметры);
		Возврат;
		
	ИначеЕсли ПомощникОтправитьКлиентСервер.ЭтоВариантОтправкиЧерез1СShare(Вариант) Тогда
		
		Оповестить("ЗакрытьФормуПомощникаОтправки",, ФормаВладелец);
		ПомощникОтправитьКлиент.ОтправитьПоВариантуОтправитьЧерез1СShare(Параметры);
		Возврат;
		
	КонецЕсли;
	
	Оповестить("ЗакрытьФормуПомощникаОтправки",, ФормаВладелец);
	
КонецПроцедуры

// Продолжение ОтправитьПоВарианту.
//
Процедура ОтправитьПоВариантуСозданияПроцессаПослеВопроса(Ответ, Параметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ФормаВладелец = Параметры.ФормаВладелец;
	Параметры.Удалить("ФормаВладелец");
	
	ПомощникОтправитьКлиент.ОтправитьПоВариантуСозданияПроцесса(Параметры);
	
	Оповестить("ЗакрытьФормуПомощникаОтправки",, ФормаВладелец);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции_ВариантСоздатьПисьмоНаОсновании

// Инициирует отправку по варианту СоздатьПисьмоНаОсновании на клиенте.
// Переопределяет процедуру ПомощникОтправитьКлиент.ОтправитьПоВариантуСоздатьПисьмоНаОсновании
//
// Параметры:
//  Параметры - Структура
//   * Объекты - Массив - объекты для отправки письмом.
//
Процедура ОтправитьПоВариантуСоздатьПисьмоНаОсновании(Параметры) Экспорт
	
	ИспользованиеЛегкойПочты = ПолучитьФункциональнуюОпциюИнтерфейса("ИспользованиеЛегкойПочты");
	ИспользованиеВстроеннойПочты = ПолучитьФункциональнуюОпциюИнтерфейса("ИспользованиеВстроеннойПочты");
	
	Если ИспользованиеВстроеннойПочты Тогда	
		
		ЕстьПользователи = Ложь;
		ЕстьСотрудники = Ложь;
		ЕстьФайлы = Ложь;
		ЕстьДругиеОбъекты = Ложь;
		
		Для Каждого ОбъектКОтправке Из Параметры.Объекты Цикл
			Если ТипЗнч(ОбъектКОтправке) = Тип("СправочникСсылка.Сотрудники") Тогда
				ЕстьСотрудники = Истина;
			ИначеЕсли ТипЗнч(ОбъектКОтправке) = Тип("СправочникСсылка.Пользователи") Тогда
				ЕстьПользователи = Истина;
			ИначеЕсли ТипЗнч(ОбъектКОтправке) = Тип("СправочникСсылка.Файлы") Тогда
				ЕстьФайлы = Истина;
			Иначе
				ЕстьДругиеОбъекты = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьСотрудники И Не ЕстьПользователи И Не ЕстьФайлы И Не ЕстьДругиеОбъекты Тогда
			ВстроеннаяПочтаКлиент.СоздатьПисьмоНаОснованииСотрудников(Параметры.Объекты);
		ИначеЕсли ЕстьПользователи И Не ЕстьФайлы И Не ЕстьДругиеОбъекты Тогда
			ВстроеннаяПочтаКлиент.СоздатьПисьмоНаОснованииПользователей(Параметры.Объекты);
		ИначеЕсли ЕстьФайлы И Не ЕстьПользователи И Не ЕстьДругиеОбъекты Тогда
			ВстроеннаяПочтаКлиент.СоздатьПисьмоНаОснованииФайлов(Параметры.Объекты);
		Иначе
			ПоследнийПараметр = Параметры.Объекты[Параметры.Объекты.Количество() - 1];
			ВстроеннаяПочтаКлиент.СоздатьПисьмоНаОсновании(ПоследнийПараметр);
		КонецЕсли;
		
	ИначеЕсли ИспользованиеЛегкойПочты Тогда  
		
		ПоследнийПараметр = Параметры.Объекты[Параметры.Объекты.Количество() - 1];
		ЛегкаяПочтаКлиент.СоздатьПисьмоНаОсновании(ПоследнийПараметр);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти