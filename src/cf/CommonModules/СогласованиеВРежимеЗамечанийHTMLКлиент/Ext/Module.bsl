#Область ПрограммныйИнтерфейс

Функция ПолучитьИдЧисло(ИдСтрока) Экспорт
	
	// ИдСтрока  - вида "do_91"
	
	Если СтрНайти(ИдСтрока, "do_") = 0 Тогда
		Возврат -1;
	КонецЕсли;	
	
	СтрокаТолькоЧисло = Сред(ИдСтрока, 4); // 4  - т.к. пропускаем do_
	Возврат Число(СтрокаТолькоЧисло);
	
КонецФункции	

Функция ПолучитьИдСтрока(ИдСтрока) Экспорт
	
	// ИдСтрока  - вида "do_91"
	
	Если СтрНайти(ИдСтрока, "do_") = 0 Тогда
		Возврат "";
	КонецЕсли;	
	
	СтрокаТолькоЧисло = Сред(ИдСтрока, 4); // 4  - т.к. пропускаем do_
	Возврат СтрокаТолькоЧисло;
	
КонецФункции	

Функция ПолучитьСтрокаИзIdЧисло(ИдЧисло) Экспорт
	
	Возврат Формат(ИдЧисло, "ЧГ=0");
	
КонецФункции	

// Находит и возвращает начало выделения - число
Функция ПолучитьИдНачалаВыделения(ЧтоМеняем, УзелНачало) Экспорт
	
	ИдНачала = -1;
	
	МассивСловВыделения = СогласованиеВРежимеЗамечанийHTMLКлиентСервер.СтрокуПочтовогоАдресаВСлова(ЧтоМеняем);
	
	Попытка
		ИдНачала = ПолучитьИдЧисло(УзелНачало.parentNode.id);
	Исключение
		// "id" есть не у всех элементов
	КонецПопытки;
	
	Если ИдНачала = -1 Тогда
		
		Слово = "";
		Если МассивСловВыделения.Количество() <> 0 Тогда
			Слово = МассивСловВыделения[0]; // первое выделенное слово
		КонецЕсли;	
		
		НайденныйИд = -1;
		
		// ищем первое выделенное
		
		НайденныйИд1 = -1;
		НайденныйИд2 = -1;
		
		ТекУзел = УзелНачало;
		ТекУзел = ТекУзел.parentNode;
		
		Для глубина = 1 По 10 Цикл
			
			НайтиСловоДоУзлаТекУзел(	Слово, УзелНачало, НайденныйИд1, ТекУзел);
			НайтиСловоПослеУзлаТекУзел( Слово, УзелНачало, НайденныйИд2, ТекУзел);
			
			Если НайденныйИд1 <> -1 Тогда
				НайденныйИд = НайденныйИд1;
				Прервать;
			КонецЕсли;	
			
			Если НайденныйИд2 <> -1 Тогда
				НайденныйИд = НайденныйИд2;
				Прервать;
			КонецЕсли;	
			
			ТекУзел = ТекУзел.parentNode;
			
		КонецЦикла;
		
		Если НайденныйИд <> -1 Тогда
			ИдНачала = Формат(НайденныйИд, "ЧГ=0");
		КонецЕсли;	
		
	КонецЕсли;	
	
	Возврат ИдНачала;
	
КонецФункции	

Процедура НайтиСловоДоУзлаТекУзел(Слово, УзелНачало, НайденныйИд, ТекУзел)
	
	Если ТекУзел <> Неопределено Тогда
		ТекущийИд = -1;
		НайтиУзелПередЭтимУзлом(ТекУзел, УзелНачало, Слово, ТекущийИд, НайденныйИд);
		Если НайденныйИд = -1 Тогда
			Если ТекУзел.previousSibling <> Неопределено Тогда
				ТекущийИд = -1;
				НайтиУзелПередЭтимУзлом(ТекУзел.previousSibling, УзелНачало, Слово, ТекущийИд, НайденныйИд);
			КонецЕсли;			
		КонецЕсли;		
		Если НайденныйИд = -1 Тогда
			Если ТекУзел.nextSibling <> Неопределено Тогда
				ТекущийИд = -1;
				НайтиУзелПередЭтимУзлом(ТекУзел.nextSibling, УзелНачало, Слово, ТекущийИд, НайденныйИд);
			КонецЕсли;			
		КонецЕсли;		
		
	КонецЕсли;	
	
КонецПроцедуры	

Процедура НайтиСловоПослеУзлаТекУзел(Слово, УзелНачало, НайденныйИд, ТекУзел)
	
	Если ТекУзел <> Неопределено Тогда
		ТекущийИд = -1;
		РежимПоискаСлова = Ложь;
		НайтиИдУзлаПослеНашегоУзла(ТекУзел, УзелНачало, Слово, ТекущийИд, НайденныйИд, РежимПоискаСлова);
		Если НайденныйИд = -1 Тогда
			Если ТекУзел.previousSibling <> Неопределено Тогда
				ТекущийИд = -1;
				РежимПоискаСлова = Ложь;
				НайтиИдУзлаПослеНашегоУзла(ТекУзел.previousSibling, УзелНачало, Слово, ТекущийИд, НайденныйИд, РежимПоискаСлова);
			КонецЕсли;			
		КонецЕсли;		
		Если НайденныйИд = -1 Тогда
			Если ТекУзел.nextSibling <> Неопределено Тогда
				ТекущийИд = -1;
				РежимПоискаСлова = Ложь;
				НайтиИдУзлаПослеНашегоУзла(ТекУзел.nextSibling, УзелНачало, Слово, ТекущийИд, НайденныйИд, РежимПоискаСлова);
			КонецЕсли;			
		КонецЕсли;		
		
	КонецЕсли;	
	
КонецПроцедуры		

Процедура НайтиИдУзлаПослеНашегоУзла(ТекущийУзел, УзелКонец, Слово, ТекущийИд, НайденныйИд, РежимПоискаСлова)
	
	Если ТекущийУзел.childNodes.length = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого Узел Из ТекущийУзел.childNodes Цикл
		
		Попытка
	
			Если РежимПоискаСлова И 
				Узел.id <> "" И СтрНайти(Узел.id, "do_") = 1
				И Узел.textContent = Слово Тогда
			
				ТекущийИд = ПолучитьИдЧисло(Узел.id);
				НайденныйИд = ТекущийИд;
				Возврат;
				
			КонецЕсли;	
			
		Исключение
		КонецПопытки;
		
		Если Узел = УзелКонец Тогда 
			РежимПоискаСлова = Истина;
		КонецЕсли;	
			
		НайтиИдУзлаПослеНашегоУзла(Узел, УзелКонец, Слово, ТекущийИд, НайденныйИд, РежимПоискаСлова);
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура НайтиУзелПередЭтимУзлом(ТекущийУзел, УзелКонец, Слово, ТекущийИд, НайденныйИд)
	
	Если ТекущийУзел.childNodes.length = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого Узел Из ТекущийУзел.childNodes Цикл
		
		Попытка
	
			Если Узел.id <> "" И СтрНайти(Узел.id, "do_") = 1
				И Узел.textContent = Слово Тогда
			
				ТекущийИд = ПолучитьИдЧисло(Узел.id);
				
			КонецЕсли;	
			
		Исключение
		КонецПопытки;
		
		Если Узел = УзелКонец Тогда
			НайденныйИд = ТекущийИд;
			Возврат;
		КонецЕсли;	
			
		НайтиУзелПередЭтимУзлом(Узел, УзелКонец, Слово, ТекущийИд, НайденныйИд);
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура НайтиИдПоСлову(ТекущийУзел, Слово, НайденныйИд) Экспорт
	
	Попытка
		
		Узел = ТекущийУзел;  // сам узел проверим

		Если Узел.id <> "" И СтрНайти(Узел.id, "do_") = 1
			И Узел.innerText = Слово Тогда
		
			ТекущийИд = ПолучитьИдЧисло(Узел.id);
			НайденныйИд = ТекущийИд;
			Возврат;
			
		КонецЕсли;	
		
	Исключение
	КонецПопытки;
	
	Если ТекущийУзел.childNodes.length = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого Узел Из ТекущийУзел.childNodes Цикл
		
		Попытка
	
			Если Узел.id <> "" И СтрНайти(Узел.id, "do_") = 1
				И Узел.innerText = Слово Тогда
			
				ТекущийИд = ПолучитьИдЧисло(Узел.id);
				НайденныйИд = ТекущийИд;
				Возврат;
				
			КонецЕсли;	
			
		Исключение
		КонецПопытки;
		
		НайтиИдПоСлову(Узел, Слово, НайденныйИд);
		
	КонецЦикла;	
	
КонецПроцедуры

// Находит и возвращает конец выделения - число
Функция ПолучитьИдКонцаВыделения(ЧтоМеняем, УзелКонец) Экспорт
	
	ИдКонца = -1;

	МассивСловВыделения = СогласованиеВРежимеЗамечанийHTMLКлиентСервер.СтрокуПочтовогоАдресаВСлова(ЧтоМеняем);
	
	Слово = "";
	Если МассивСловВыделения.Количество() <> 0 Тогда
		Слово = МассивСловВыделения[МассивСловВыделения.Количество() - 1]; // последнее выделенное слово
	КонецЕсли;	
	
	Попытка
		
		ТекстУзла = УзелКонец.textContent;
		МассивСловУзла = СогласованиеВРежимеЗамечанийHTMLКлиентСервер.СтрокуПочтовогоАдресаВСлова(ТекстУзла);
		
		Если Слово <> "" И МассивСловУзла.Количество() >= 2 И СтрНайти(ТекстУзла, Слово) <> 0 Тогда
			
			ТекстHTML = УзелКонец.innerHTML;
			
			ПозицияСлова = СтрНайти(ТекстHTML, Слово);
			Если ПозицияСлова = 0 Тогда
				Возврат ИдКонца;
			КонецЕсли;	
			
			ТекстВнутриНРег = НРег(ТекстHTML);
			ПерваяПозицияID = СтрНайти(ТекстВнутриНРег, "span id=do_", НаправлениеПоиска.СКонца, ПозицияСлова);
			ПерваяПозицияIDКонецТега = СтрНайти(ТекстВнутриНРег, ">",, ПерваяПозицияID);
			Если ПерваяПозицияIDКонецТега = 0 Тогда
				Возврат ИдКонца;
			КонецЕсли;
			// ПерваяПозицияID+8 - 8 это "span id="
			НачалоDoНомер = ПерваяПозицияID + 8;
			СтрокаНомера = Сред(ТекстВнутриНРег, НачалоDoНомер, ПерваяПозицияIDКонецТега - НачалоDoНомер);
			ИдКонца = ПолучитьИдЧисло(СтрокаНомера);
			Возврат ИдКонца;
			
		КонецЕсли;	
		
	Исключение
	КонецПопытки;
	
	// Ищем последнее выделенное
	НайденныйИд = -1;
	ТекУзел = УзелКонец;
	
	ТекУзел = ТекУзел.parentNode;
	
	Если ТекУзел <> Неопределено Тогда
		
		ТекущийИд = -1;
		НайтиУзелПередЭтимУзлом(ТекУзел, УзелКонец, Слово, ТекущийИд, НайденныйИд);
		Если НайденныйИд = -1 Тогда
			Если ТекУзел.previousSibling <> Неопределено Тогда
				ТекущийИд = -1;
				НайтиУзелПередЭтимУзлом(ТекУзел.previousSibling, УзелКонец, Слово, ТекущийИд, НайденныйИд);
			КонецЕсли;			
		КонецЕсли;		
		
		Если НайденныйИд = -1 Тогда
			ТекУзел = ТекУзел.parentNode; //  уровень выше
			Если ТекУзел <> Неопределено Тогда
				ТекущийИд = -1;
				НайтиУзелПередЭтимУзлом(ТекУзел, УзелКонец, Слово, ТекущийИд, НайденныйИд);
				Если НайденныйИд = -1 Тогда
					Если ТекУзел.previousSibling <> Неопределено Тогда
						ТекущийИд = -1;
						НайтиУзелПередЭтимУзлом(ТекУзел.previousSibling, УзелКонец, Слово, ТекущийИд, НайденныйИд);
					КонецЕсли;			
				КонецЕсли;
			Иначе
				Возврат ИдКонца;
			КонецЕсли;
		КонецЕсли;
		
		Если НайденныйИд = -1 Тогда
			ТекУзел = ТекУзел.parentNode; //  уровень выше
			Если ТекУзел <> Неопределено Тогда
				ТекущийИд = -1;
				НайтиУзелПередЭтимУзлом(ТекУзел, УзелКонец, Слово, ТекущийИд, НайденныйИд);
				Если НайденныйИд = -1 Тогда
					Если ТекУзел.previousSibling <> Неопределено Тогда
						ТекущийИд = -1;
						НайтиУзелПередЭтимУзлом(ТекУзел.previousSibling, УзелКонец, Слово, ТекущийИд, НайденныйИд);
					КонецЕсли;			
				КонецЕсли;		
			Иначе
				Возврат ИдКонца;
			КонецЕсли;
		КонецЕсли;
		
		Если НайденныйИд = -1 Тогда
			ТекУзел = ТекУзел.parentNode; //  уровень выше
			Если ТекУзел <> Неопределено Тогда
				ТекущийИд = -1;
				НайтиУзелПередЭтимУзлом(ТекУзел, УзелКонец, Слово, ТекущийИд, НайденныйИд);
				Если НайденныйИд = -1 Тогда
					Если ТекУзел.previousSibling <> Неопределено Тогда
						ТекущийИд = -1;
						НайтиУзелПередЭтимУзлом(ТекУзел.previousSibling, УзелКонец, Слово, ТекущийИд, НайденныйИд);
					КонецЕсли;			
				КонецЕсли;	
			Иначе
				Возврат ИдКонца;
			КонецЕсли;
		КонецЕсли;
		
		Если НайденныйИд = -1 Тогда
			ТекУзел = ТекУзел.parentNode; //  уровень выше
			Если ТекУзел <> Неопределено Тогда
				ТекущийИд = -1;
				НайтиУзелПередЭтимУзлом(ТекУзел, УзелКонец, Слово, ТекущийИд, НайденныйИд);
				Если НайденныйИд = -1 Тогда
					Если ТекУзел.previousSibling <> Неопределено Тогда
						ТекущийИд = -1;
						НайтиУзелПередЭтимУзлом(ТекУзел.previousSibling, УзелКонец, Слово, ТекущийИд, НайденныйИд);
					КонецЕсли;			
				КонецЕсли;	
			Иначе
				Возврат ИдКонца;
			КонецЕсли;
		КонецЕсли;
		
		Если НайденныйИд = -1 Тогда
			ТекУзел = ТекУзел.parentNode; //  уровень выше
			Если ТекУзел <> Неопределено Тогда
				ТекущийИд = -1;
				НайтиУзелПередЭтимУзлом(ТекУзел, УзелКонец, Слово, ТекущийИд, НайденныйИд);
				Если НайденныйИд = -1 Тогда
					Если ТекУзел.previousSibling <> Неопределено Тогда
						ТекущийИд = -1;
						НайтиУзелПередЭтимУзлом(ТекУзел.previousSibling, УзелКонец, Слово, ТекущийИд, НайденныйИд);
					КонецЕсли;			
				КонецЕсли;	
			Иначе
				Возврат ИдКонца;
			КонецЕсли;
		КонецЕсли;
		
		Если НайденныйИд = -1 Тогда
			ТекУзел = ТекУзел.parentNode; //  уровень выше
			Если ТекУзел <> Неопределено Тогда
				ТекущийИд = -1;
				НайтиУзелПередЭтимУзлом(ТекУзел, УзелКонец, Слово, ТекущийИд, НайденныйИд);
				Если НайденныйИд = -1 Тогда
					Если ТекУзел.previousSibling <> Неопределено Тогда
						ТекущийИд = -1;
						НайтиУзелПередЭтимУзлом(ТекУзел.previousSibling, УзелКонец, Слово, ТекущийИд, НайденныйИд);
					КонецЕсли;			
				КонецЕсли;	
			Иначе
				Возврат ИдКонца;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;	
	
	Если НайденныйИд <> -1 Тогда
		ИдКонца = НайденныйИд;
	КонецЕсли;	
	
	Возврат ИдКонца;
	
КонецФункции	

// Находит первый же узел после указанного узла
Процедура НайтиУзелПослеЭтогоУзла(ТекущийУзел, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен) Экспорт
	
	Если ПрерватьОбработку = Истина Тогда
		Возврат;
	КонецЕсли;	
	
	Если ТекущийУзел.childNodes.length = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого Узел Из ТекущийУзел.childNodes Цикл
		
		Если Узел = УзелКонец Тогда
			УзелВстречен = Истина;
		Иначе	
			
			Если УзелВстречен Тогда
				Попытка
					
					НайденныйУзел = Узел;
					ПрерватьОбработку = Истина;
					Возврат;
						
				Исключение
				КонецПопытки;
			КонецЕсли;
				
			
		КонецЕсли;		
		
		Если Узел <> УзелКонец Тогда // сам узел конца - не смотрим его подчиненных
			НайтиУзелПослеЭтогоУзла(Узел, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

// для выделения в HTML текущей правки
Процедура НайтиПервыйУзелПослеУзла(УзелКонец, НайденныйУзел) Экспорт
	
	ТекУзел = УзелКонец;
	
	ТекУзел = ТекУзел.parentNode;
	
	Если ТекУзел <> Неопределено Тогда
		ПрерватьОбработку = Ложь;
		УзелВстречен = Ложь;
		СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
		Если НайденныйУзел = Неопределено Тогда
			Если ТекУзел.nextSibling <> Неопределено Тогда
				ПрерватьОбработку = Ложь;
				УзелВстречен = Ложь;
				СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел.nextSibling, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
			КонецЕсли;			
		КонецЕсли;		
		
		Если НайденныйУзел = Неопределено Тогда
			ТекУзел = ТекУзел.parentNode; //  уровень выше
			Если ТекУзел <> Неопределено Тогда
				ПрерватьОбработку = Ложь;
				УзелВстречен = Ложь;
				СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
				Если НайденныйУзел = Неопределено Тогда
					Если ТекУзел.nextSibling <> Неопределено Тогда
						ПрерватьОбработку = Ложь;
						УзелВстречен = Ложь;
						СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел.nextSibling, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
					КонецЕсли;			
				КонецЕсли;		
			КонецЕсли;
		КонецЕсли;		
		
		Если НайденныйУзел = Неопределено Тогда
			ТекУзел = ТекУзел.parentNode; //  уровень выше
			Если ТекУзел <> Неопределено Тогда
				ПрерватьОбработку = Ложь;
				УзелВстречен = Ложь;
				СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
				Если НайденныйУзел = Неопределено Тогда
					Если ТекУзел.nextSibling <> Неопределено Тогда
						ПрерватьОбработку = Ложь;
						УзелВстречен = Ложь;
						СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел.nextSibling, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
					КонецЕсли;			
				КонецЕсли;		
			КонецЕсли;
		КонецЕсли;		
		
		Если НайденныйУзел = Неопределено Тогда
			ТекУзел = ТекУзел.parentNode; //  уровень выше
			Если ТекУзел <> Неопределено Тогда
				ПрерватьОбработку = Ложь;
				УзелВстречен = Ложь;
				СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
				Если НайденныйУзел = Неопределено Тогда
					Если ТекУзел.nextSibling <> Неопределено Тогда
						ПрерватьОбработку = Ложь;
						УзелВстречен = Ложь;
						СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел.nextSibling, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
					КонецЕсли;			
				КонецЕсли;		
			КонецЕсли;
		КонецЕсли;		
		
		Если НайденныйУзел = Неопределено Тогда
			ТекУзел = ТекУзел.parentNode; //  уровень выше
			Если ТекУзел <> Неопределено Тогда
				ПрерватьОбработку = Ложь;
				УзелВстречен = Ложь;
				СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
				Если НайденныйУзел = Неопределено Тогда
					Если ТекУзел.nextSibling <> Неопределено Тогда
						ПрерватьОбработку = Ложь;
						УзелВстречен = Ложь;
						СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел.nextSibling, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
					КонецЕсли;			
				КонецЕсли;		
			КонецЕсли;
		КонецЕсли;		
		
		Если НайденныйУзел = Неопределено Тогда
			ТекУзел = ТекУзел.parentNode; //  уровень выше
			Если ТекУзел <> Неопределено Тогда
				ПрерватьОбработку = Ложь;
				УзелВстречен = Ложь;
				СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
				Если НайденныйУзел = Неопределено Тогда
					Если ТекУзел.nextSibling <> Неопределено Тогда
						ПрерватьОбработку = Ложь;
						УзелВстречен = Ложь;
						СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел.nextSibling, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
					КонецЕсли;			
				КонецЕсли;		
			КонецЕсли;
		КонецЕсли;		
		
		// 7-й уровень
		Если НайденныйУзел = Неопределено Тогда
			ТекУзел = ТекУзел.parentNode; //  уровень выше
			Если ТекУзел <> Неопределено Тогда
				ПрерватьОбработку = Ложь;
				УзелВстречен = Ложь;
				СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
				Если НайденныйУзел = Неопределено Тогда
					Если ТекУзел.nextSibling <> Неопределено Тогда
						ПрерватьОбработку = Ложь;
						УзелВстречен = Ложь;
						СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел.nextSibling, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
					КонецЕсли;			
				КонецЕсли;		
			КонецЕсли;
		КонецЕсли;		
		
		// 8-й уровень
		Если НайденныйУзел = Неопределено Тогда
			ТекУзел = ТекУзел.parentNode; //  уровень выше
			Если ТекУзел <> Неопределено Тогда
				ПрерватьОбработку = Ложь;
				УзелВстречен = Ложь;
				СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
				Если НайденныйУзел = Неопределено Тогда
					Если ТекУзел.nextSibling <> Неопределено Тогда
						ПрерватьОбработку = Ложь;
						УзелВстречен = Ложь;
						СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиУзелПослеЭтогоУзла(ТекУзел.nextSibling, УзелКонец, НайденныйУзел, ПрерватьОбработку, УзелВстречен);
					КонецЕсли;			
				КонецЕсли;		
			КонецЕсли;
		КонецЕсли;		
		
	КонецЕсли;	
	
КонецПроцедуры

// Вернет Истина, если в строке есть буквы или цифры, а не только разделители (" .,;:?!-+*/\%=<>[](){}""'|~@#$^&_")
Функция ЕстьЗначимыеСимволы(Текст) Экспорт
	
	СимволыРазделители = СогласованиеВРежимеЗамечанийHTMLКлиентСервер.СимволыРазделители();
	
	ДлинаТекста = СтрДлина(Текст);
	
	Для пер = 1 По ДлинаТекста Цикл
		
		Символ = Сред(Текст, пер, 1);
		Если Найти(СимволыРазделители, Символ) = 0 Тогда // текущий символ - значимый символ
			Возврат Истина;
		КонецЕсли;	
	
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции	

Процедура УдалитьСКраевНеЗначимыеСимволы(Текст) Экспорт
	
	СимволыРазделители = СогласованиеВРежимеЗамечанийHTMLКлиентСервер.СимволыРазделители();
	
	ДлинаТекста = СтрДлина(Текст);
	НовыйТекст = Текст;
	ПозицияСпецсимволовСНачала = -1;
	
	Для пер = 1 По ДлинаТекста Цикл
		
		Символ = Сред(Текст, пер, 1);
		Если Найти(СимволыРазделители, Символ) = 0 Тогда // текущий символ - значимый символ
			Прервать;
		Иначе	
			ПозицияСпецсимволовСНачала = пер;
		КонецЕсли;	
	
	КонецЦикла;
	
	ПозицияСпецсимволовСКонца = -1;
	
	Для перОбратно = 1 По ДлинаТекста Цикл
		
		пер = ДлинаТекста - перОбратно + 1;
		
		Символ = Сред(Текст, пер, 1);
		Если Найти(СимволыРазделители, Символ) = 0 Тогда // текущий символ - значимый символ
			Прервать;
		Иначе	
			ПозицияСпецсимволовСКонца = пер;
		КонецЕсли;	
	
	КонецЦикла;
	
	ПозицияНачала = 1;
	Если ПозицияСпецсимволовСНачала <> -1 Тогда
		ПозицияНачала = ПозицияСпецсимволовСНачала + 1;
	КонецЕсли;	
	ПозицияКонца = СтрДлина(Текст);
	Если ПозицияСпецсимволовСКонца <> -1 Тогда
		ПозицияКонца = ПозицияСпецсимволовСКонца - 1;
	КонецЕсли;	
	
	НовыйТекст = Сред(Текст, ПозицияНачала, ПозицияКонца - ПозицияНачала + 1);
	
	Текст = НовыйТекст;

КонецПроцедуры

Функция НайтиВHTMLИдКомментарияOpenOffice(Номер, ТекстHTML, ИдНачалаЧисло) Экспорт 
	
	Поз = 1;
	ТекстHTMLНРег = НРег(ТекстHTML);
		
	СтрокаПоиска = "<!-- DocComment_" + Строка(Номер);
	ПозНомер = СтрНайти(ТекстHTML, СтрокаПоиска, НаправлениеПоиска.СНачала, Поз);
	Если ПозНомер = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
		
	// тут считаем что нашли
			
	СтрокаИД = "span id=do_";
	ПерваяПозицияID = СтрНайти(ТекстHTMLНРег, СтрокаИД, НаправлениеПоиска.СКонца, ПозНомер);
	Если ПерваяПозицияID = 0 Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	ПерваяПозицияIDКонецТега = СтрНайти(ТекстHTMLНРег, ">",, ПерваяПозицияID);
	Если ПерваяПозицияIDКонецТега = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	// ПерваяПозицияID+8 - 8 это "span id="
	НачалоDoНомер = ПерваяПозицияID + 8;
	СтрокаНомера = Сред(ТекстHTMLНРег, НачалоDoНомер, ПерваяПозицияIDКонецТега - НачалоDoНомер);
	ИдНачалаЧисло = ПолучитьИдЧисло(СтрокаНомера);
	
	Возврат Истина;
	
КонецФункции	

Функция НайтиВHTMLИдКомментарияExcel(Номер, ТекстHTML, ИдНачалаЧисло) Экспорт 
	
	Поз = 1;
	ТекстHTMLНРег = НРег(ТекстHTML);
		
	
	Счетчик = 1;
	Пока Истина Цикл
		
		Счетчик = Счетчик + 1;
		Если Счетчик > 1000 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		ПозНомер = СтрНайти(ТекстHTML, "DocComment", НаправлениеПоиска.СНачала, Поз);
		Если ПозНомер = 0 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		Начало = СтрНайти(ТекстHTMLНРег, "<div>", НаправлениеПоиска.СКонца, ПозНомер);
		Если Начало = 0 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		Конец = СтрНайти(ТекстHTMLНРег, "</div>", НаправлениеПоиска.СНачала, ПозНомер);
		Если Конец = 0 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		HTMLВнутри = Сред(ТекстHTML, Начало, Конец + 4 - Начало);
		ТекстВнутри = РаботаС_HTML.ПолучитьТекстИзHTML(HTMLВнутри);
		
		ПозВнутри = СтрНайти(ТекстВнутри, "DocComment_" + Номер);
		Если ПозВнутри = 0 Тогда
			Поз = ПозНомер + 1;
			Продолжить;
		КонецЕсли;	
		
		// тут считаем что нашли
			
		Начало = СтрНайти(ТекстHTMLНРег, "<a class=msocomhide", НаправлениеПоиска.СКонца, ПозНомер);
		Если Начало = 0 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		Конец = СтрНайти(ТекстHTMLНРег, "</a>", НаправлениеПоиска.СНачала, Начало);
		Если Конец = 0 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		ПозТегаА = СтрНайти(ТекстHTMLНРег, "href=""#", НаправлениеПоиска.СНачала, Начало);
		Если ПозТегаА = 0 Или ПозТегаА > Конец Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		//найдем конец href="#_msoanchor_1"
		ПозКонцаТегаА = СтрНайти(ТекстHTMLНРег, """", НаправлениеПоиска.СНачала, ПозТегаА + 7);
		Если ПозКонцаТегаА = 0 Или ПозТегаА > Конец Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		НачалоТА = ПозТегаА + 7; // включая и #
		ВесьТег = Сред(ТекстHTML, НачалоТА, ПозКонцаТегаА - НачалоТА);  // _msoanchor_1
		
		// name="_msoanchor_1"
		СтрокаПоискаСноски = "name=""" + ВесьТег;
		ПозСноски = СтрНайти(ТекстHTMLНРег, СтрокаПоискаСноски);
		Если ПозСноски = 0 Тогда
			
			СтрокаПоискаСноски = "name=" + ВесьТег;
			ПозСноски = СтрНайти(ТекстHTMLНРег, СтрокаПоискаСноски);
			Если ПозСноски = 0 Тогда
				Возврат Ложь;
			КонецЕсли;		
		КонецЕсли;	
		
		//  ищем <td
		СтрокаЯчейки = "<td";
		ПерваяПозицияЯчейки = СтрНайти(ТекстHTMLНРег, СтрокаЯчейки, НаправлениеПоиска.СКонца, ПозСноски);
		Если ПерваяПозицияЯчейки = 0 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		СтрокаИД = "span id=do_";
		ПерваяПозицияID = СтрНайти(ТекстHTMLНРег, СтрокаИД, НаправлениеПоиска.СНачала, ПерваяПозицияЯчейки);
		Если ПерваяПозицияID = 0 Или ПерваяПозицияID > ПозСноски Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		ПерваяПозицияIDКонецТега = СтрНайти(ТекстHTMLНРег, ">",, ПерваяПозицияID);
		Если ПерваяПозицияIDКонецТега = 0 Тогда
			Продолжить;
		КонецЕсли;
		// ПерваяПозицияID+8 - 8 это "span id="
		НачалоDoНомер = ПерваяПозицияID + 8;
		СтрокаНомера = Сред(ТекстHTMLНРег, НачалоDoНомер, ПерваяПозицияIDКонецТега - НачалоDoНомер);
		ИдНачалаЧисло = ПолучитьИдЧисло(СтрокаНомера);
		
		Возврат Истина;
		
	КонецЦикла;	
	
	Возврат Ложь;
	
КонецФункции

Функция НайтиВHTMLИдКомментария(Номер, ТекстHTML, ИдНачалаЧисло, СпособСогласованияВРежимеЗамечаний,
	Расширение = "") Экспорт 
	
	Если СпособСогласованияВРежимеЗамечаний 
			= ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.OpenOfficeOrgWriter") Тогда
			
		Возврат НайтиВHTMLИдКомментарияOpenOffice(Номер, ТекстHTML, ИдНачалаЧисло);
			
	КонецЕсли;		
	
	Если Расширение = "xls" Или Расширение = "xlsx" Или Расширение = "ods" Тогда
		Возврат НайтиВHTMLИдКомментарияExcel(Номер, ТекстHTML, ИдНачалаЧисло);
	КонецЕсли;		
	
	Поз = 1;
	ТекстHTMLНРег = НРег(ТекстHTML);
		
	
	Счетчик = 1;
	Пока Истина Цикл
		
		Счетчик = Счетчик + 1;
		Если Счетчик > 1000 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		ПозНомер = СтрНайти(ТекстHTML, "DocComment", НаправлениеПоиска.СНачала, Поз);
		Если ПозНомер = 0 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		Начало = СтрНайти(ТекстHTMLНРег, "<p class=msocommenttext>", НаправлениеПоиска.СКонца, ПозНомер);
		Если Начало = 0 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		Конец = СтрНайти(ТекстHTMLНРег, "</p>", НаправлениеПоиска.СНачала, ПозНомер);
		Если Конец = 0 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		HTMLВнутри = Сред(ТекстHTML, Начало, Конец + 4 - Начало);
		ТекстВнутри = РаботаС_HTML.ПолучитьТекстИзHTML(HTMLВнутри);
		
		ПозВнутри = СтрНайти(ТекстВнутри, "DocComment_" + Номер);
		Если ПозВнутри = 0 Тогда
			Поз = ПозНомер + 1;
			Продолжить;
		КонецЕсли;	
		
		// тут считаем что нашли
			
		Начало = СтрНайти(ТекстHTMLНРег, "<p class=msocommenttext>", НаправлениеПоиска.СКонца, ПозНомер);
		Если Начало = 0 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		Конец = СтрНайти(ТекстHTMLНРег, "</p>", НаправлениеПоиска.СНачала, ПозНомер);
		Если Конец = 0 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		ПозТегаА = СтрНайти(ТекстHTMLНРег, "href=""#", НаправлениеПоиска.СНачала, Начало);
		Если ПозТегаА = 0 Или ПозТегаА > Конец Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		//найдем конец href="#_msoanchor_1"
		ПозКонцаТегаА = СтрНайти(ТекстHTMLНРег, """", НаправлениеПоиска.СНачала, ПозТегаА + 7);
		Если ПозКонцаТегаА = 0 Или ПозТегаА > Конец Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		НачалоТА = ПозТегаА + 7; // включая и #
		ВесьТег = Сред(ТекстHTML, НачалоТА, ПозКонцаТегаА - НачалоТА);  // _msoanchor_1
		
		// name="_msoanchor_1"
		СтрокаПоискаСноски = "name=""" + ВесьТег;
		ПозСноски = СтрНайти(ТекстHTMLНРег, СтрокаПоискаСноски);
		Если ПозСноски = 0 Тогда
			
			СтрокаПоискаСноски = "name=" + ВесьТег;
			ПозСноски = СтрНайти(ТекстHTMLНРег, СтрокаПоискаСноски);
			Если ПозСноски = 0 Тогда
				Возврат Ложь;
			КонецЕсли;		
		КонецЕсли;	
		
		СтрокаИД = "span id=do_";
		ПерваяПозицияID = СтрНайти(ТекстHTMLНРег, СтрокаИД, НаправлениеПоиска.СКонца, ПозСноски);
		Если ПерваяПозицияID = 0 Тогда
			Возврат Ложь;
		КонецЕсли;	
		
		
		ПерваяПозицияIDКонецТега = СтрНайти(ТекстHTMLНРег, ">",, ПерваяПозицияID);
		Если ПерваяПозицияIDКонецТега = 0 Тогда
			Продолжить;
		КонецЕсли;
		// ПерваяПозицияID+8 - 8 это "span id="
		НачалоDoНомер = ПерваяПозицияID + 8;
		СтрокаНомера = Сред(ТекстHTMLНРег, НачалоDoНомер, ПерваяПозицияIDКонецТега - НачалоDoНомер);
		ИдНачалаЧисло = ПолучитьИдЧисло(СтрокаНомера);
		
		Возврат Истина;
		
	КонецЦикла;	
	
	Возврат Ложь;
	
КонецФункции

Функция ПолучитьИдНачалаВыделенияИзHtml(ВыделенныйФрагментHtml) Экспорт
	
	// <span id="do_1526">  или   <span id=do_1526>
	
	ТекстВнутриНРег = НРег(ВыделенныйФрагментHtml);
	
	ПерваяПозицияID 		= СтрНайти(ТекстВнутриНРег, "span id=do_", НаправлениеПоиска.СНачала, 1);
	ПерваяПозицияIDКавычка 	= СтрНайти(ТекстВнутриНРег, "span id=""do_", НаправлениеПоиска.СНачала, 1);
	ЕстьКавычка = Ложь;
	
	Если ПерваяПозицияIDКавычка <> 0 И ПерваяПозицияID <> 0 И ПерваяПозицияIDКавычка < ПерваяПозицияID Тогда
		ПерваяПозицияID = ПерваяПозицияIDКавычка;
		ЕстьКавычка = Истина;
	КонецЕсли;	
	
	Если ПерваяПозицияIDКавычка <> 0 И ПерваяПозицияID = 0 Тогда
		ПерваяПозицияID = ПерваяПозицияIDКавычка;
		ЕстьКавычка = Истина;
	КонецЕсли;	
	
	Если ПерваяПозицияID = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	ТекстКонца = ">";
	СдвигВначале = 8;
	Если ЕстьКавычка Тогда
		ТекстКонца = """>";
		СдвигВначале = 9;
	КонецЕсли;	
	
	ПерваяПозицияIDКонецТега = СтрНайти(ТекстВнутриНРег, ТекстКонца,, ПерваяПозицияID);
	Если ПерваяПозицияIDКонецТега = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	// ПерваяПозицияID+8 - 8 это "span id="  (9 -если span id=")
	НачалоDoНомер = ПерваяПозицияID + СдвигВначале;
	СтрокаНомера = Сред(ТекстВнутриНРег, НачалоDoНомер, ПерваяПозицияIDКонецТега - НачалоDoНомер);
	ИдНачала = ПолучитьИдЧисло(СтрокаНомера);
	Возврат ИдНачала;
	
КонецФункции	

Функция ПолучитьИдКонцаВыделенияИзHtml(ВыделенныйФрагментHtml) Экспорт
	
	// <span id="do_1526">  или   <span id=do_1526>
	
	ТекстВнутриНРег = НРег(ВыделенныйФрагментHtml);
	
	ПерваяПозицияID 		= СтрНайти(ТекстВнутриНРег, "span id=do_", НаправлениеПоиска.СКонца);
	ПерваяПозицияIDКавычка 	= СтрНайти(ТекстВнутриНРег, "span id=""do_", НаправлениеПоиска.СКонца);
	ЕстьКавычка = Ложь;
	
	Если ПерваяПозицияIDКавычка <> 0 И ПерваяПозицияID <> 0 И ПерваяПозицияIDКавычка < ПерваяПозицияID Тогда
		ПерваяПозицияID = ПерваяПозицияIDКавычка;
		ЕстьКавычка = Истина;
	КонецЕсли;	
	
	Если ПерваяПозицияIDКавычка <> 0 И ПерваяПозицияID = 0 Тогда
		ПерваяПозицияID = ПерваяПозицияIDКавычка;
		ЕстьКавычка = Истина;
	КонецЕсли;	
	
	Если ПерваяПозицияID = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	ТекстКонца = ">";
	СдвигВначале = 8;
	Если ЕстьКавычка Тогда
		ТекстКонца = """>";
		СдвигВначале = 9;
	КонецЕсли;	
	
	ПерваяПозицияIDКонецТега = СтрНайти(ТекстВнутриНРег, ТекстКонца,, ПерваяПозицияID);
	Если ПерваяПозицияIDКонецТега = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	// ПерваяПозицияID+8 - 8 это "span id="  (9 -если span id=")
	НачалоDoНомер = ПерваяПозицияID + СдвигВначале;
	СтрокаНомера = Сред(ТекстВнутриНРег, НачалоDoНомер, ПерваяПозицияIDКонецТега - НачалоDoНомер);
	ИдКонца = ПолучитьИдЧисло(СтрокаНомера);
	Возврат ИдКонца;
	
КонецФункции	

#КонецОбласти