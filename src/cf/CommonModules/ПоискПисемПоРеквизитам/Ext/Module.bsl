
// Маскирует спецсимволы для поиска по ПОДОБНО, чтобы они участвовали в отборе как есть, 
//	а не воспринимались как спецсимволы
Функция ЗамаскироватьСпецСимволы(ИсходнаяСтрока)
	
	СтрокаЗамены = СтрЗаменить(ИсходнаяСтрока, "~", "~~");
	СтрокаЗамены = СтрЗаменить(СтрокаЗамены, "%", "~%");
	СтрокаЗамены = СтрЗаменить(СтрокаЗамены, "_", "~_");
	СтрокаЗамены = СтрЗаменить(СтрокаЗамены, "[", "~[");
	СтрокаЗамены = СтрЗаменить(СтрокаЗамены, "]", "~]");
	СтрокаЗамены = СтрЗаменить(СтрокаЗамены, "^", "~^");
	
	Возврат СтрокаЗамены;
	
КонецФункции

// Выполняет поиск писем по реквизитам и возвращает массив найденных ссылок
Функция ВыполнитьПоиск(Знач ТаблицаУсловий, ИскатьВсе = Ложь) Экспорт
	
	Если ТаблицаУсловий = Неопределено Или ТипЗнч(ТаблицаУсловий) = Тип("ОтборКомпоновкиДанных") Тогда
		СтруктураВозврата = Новый Структура;
		СтруктураВозврата.Вставить("КоличествоНайденного", 0);	
		СтруктураВозврата.Вставить("МассивСсылок", Новый Массив);
		СтруктураВозврата.Вставить("НеобходимоБылоНайти", 0);
        Возврат СтруктураВозврата;
	КонецЕсли;
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();	
	ИтоговыйМассив = Новый Массив;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	ТипЛогическойСвязи = Перечисления.ТипыЛогическойСвязи.И;
	
	ТипПисьма = Неопределено;
	Удалено = Неопределено;
	
	КэшИмеетВложения = Неопределено;
	КэшЕстьОтвет = Неопределено;
	КэшПереслано = Неопределено;
	КэшЕстьДокументы = Неопределено;
	
	Прочтено = Неопределено;
	
	Дата1 = Дата(1,1,1);
	Дата2 = Дата(1,1,1); 
	
	ОтноситсяКМоейУчетнойЗаписи = Неопределено;
	
	МассивУчетныхЗаписей = Новый Массив;
	УчетнаяЗапись = Неопределено;
	
	КоличествоПисемДляПоиска = 0;             
	
	// Сперва цикл для заполнения учетных записей
	Для Каждого Строка Из ТаблицаУсловий Цикл
		
		ЕстьНепустыеЗначения = Ложь;
		ПустоеЗначениеВПапкахПисем = Ложь;
		Для Каждого Элемент Из Строка.ЗначенияУсловия Цикл
			Если ЗначениеЗаполнено(Элемент.Значение) Тогда
				ЕстьНепустыеЗначения = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Не ЕстьНепустыеЗначения
			И Строка.ВидУсловия <> Перечисления.ВидыУсловийПоискаПисем.ХранитсяВПапке
			И Строка.ВидУсловия <> Перечисления.ВидыУсловийПоискаПисем.ОтноситсяКУчетнойЗаписи Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ОтноситсяКУчетнойЗаписи Тогда
			
			МассивУчетныхЗаписей = Новый Массив;
			Если Не ЕстьНепустыеЗначения Тогда
				ЗапросДоступныеУчетныеЗаписи = Новый Запрос;
				ЗапросДоступныеУчетныеЗаписи.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
				ЗапросДоступныеУчетныеЗаписи.Текст =
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	УчетныеЗаписи.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписи
					|ГДЕ
					|	УчетныеЗаписи.ВариантИспользования = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияПочты.Встроенная)";
				МассивУчетныхЗаписей = ЗапросДоступныеУчетныеЗаписи.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
			КонецЕсли;
			
			МоиУчетныеЗаписи = Ложь;
			Таблица = Новый ТаблицаЗначений;
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты"));
			НоваяКолонка = Таблица.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			
			Если ЕстьНепустыеЗначения Тогда
				Для Каждого Элемент Из Строка.ЗначенияУсловия Цикл
					Если Элемент.Значение = "МоиУчетныеЗаписи" Тогда
						МоиУчетныеЗаписи = Истина;
						Продолжить;
					КонецЕсли;
					Если ЗначениеЗаполнено(Элемент.Значение) Тогда
						Таблица.Добавить().Значение = Элемент.Значение;
						МассивУчетныхЗаписей.Добавить(Элемент.Значение);
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли МассивУчетныхЗаписей.Количество() > 0 Тогда
				Для Каждого Элемент Из МассивУчетныхЗаписей Цикл
					Если ЗначениеЗаполнено (Элемент) Тогда
						Таблица.Добавить().Значение = Элемент;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Продолжить;
			КонецЕсли;
			
			Если МоиУчетныеЗаписи Тогда
				
				ЗапросМоиУчетныеЗаписи = Новый Запрос;
				ЗапросМоиУчетныеЗаписи.Текст =
					"ВЫБРАТЬ
					|	УчетныеЗаписи.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписи
					|ГДЕ
					|	УчетныеЗаписи.ОтветственныеЗаОбработкуПисем.Сотрудник В(&СотрудникиПользователя)
					|	И УчетныеЗаписи.ПометкаУдаления = ЛОЖЬ
					|	И УчетныеЗаписи.ВариантИспользования = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияПочты.Встроенная)";
				
				СотрудникиПользователя = Сотрудники.СотрудникиПользователя();
				ЗапросМоиУчетныеЗаписи.УстановитьПараметр("СотрудникиПользователя", СотрудникиПользователя);
				
				Выборка = ЗапросМоиУчетныеЗаписи.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					Таблица.Добавить().Значение = Выборка.Ссылка;
					МассивУчетныхЗаписей.Добавить(Выборка.Ссылка);
				КонецЦикла;
				
			КонецЕсли;
			
			Если Таблица.Количество() = 1 Тогда
				УчетнаяЗапись = Таблица[0].Значение;
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст =
				"ВЫБРАТЬ
				|	Таблица.Значение КАК Значение
				|ПОМЕСТИТЬ ВременнаяТаблицаОтноситсяКУчетнойЗаписи
				|ИЗ
				|	&Данные КАК Таблица
				|";
			
			Запрос.УстановитьПараметр("Данные", Таблица);
			Запрос.Выполнить();
			
			ТекстЗапроса = 
				"ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОтноситсяКУчетнойЗаписи КАК ВременнаяТаблица
				|		ПО ЭлектроннаяПочта.Ссылка.УчетнаяЗапись = ВременнаяТаблица.Значение";
			СтруктураПодзапроса = Новый Структура();
			СтруктураПодзапроса.Вставить("Текст", ТекстЗапроса);
			СтруктураПодзапроса.Вставить("Название", "ВТОтноситсяКУчетнойЗаписи"); 
			ИтоговыйМассив.Добавить(СтруктураПодзапроса);
			
		КонецЕсли;
		
	КонецЦикла;
	
	// тут уже сам поиск	
	Для Каждого Строка Из ТаблицаУсловий Цикл
		
		ЕстьНепустыеЗначения = Ложь;
		Для Каждого Элемент Из Строка.ЗначенияУсловия Цикл
			Если ЗначениеЗаполнено(Элемент.Значение) Тогда
				ЕстьНепустыеЗначения = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Не ЕстьНепустыеЗначения Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ПолученоОт Тогда
			
			ТаблицаСтроки = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("Строка"));	
			НоваяКолонка = ТаблицаСтроки.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			
			ТаблицаАдресаты = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка.АдресатыПочтовыхСообщений"));	
			НоваяКолонка = ТаблицаАдресаты.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			
			ТаблицаКонтакты = Новый ТаблицаЗначений;
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));	
			Массив.Добавить(Тип("СправочникСсылка.Контрагенты"));
			Массив.Добавить(Тип("СправочникСсылка.ЛичныеАдресаты"));
			Массив.Добавить(Тип("СправочникСсылка.РолиИсполнителей"));
			Массив.Добавить(Тип("СправочникСсылка.Пользователи"));
			Массив.Добавить(Тип("СправочникСсылка.Сотрудники"));
			Массив.Добавить(Тип("СправочникСсылка.КонтактныеЛица"));
			НоваяКолонка = ТаблицаКонтакты.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			
			Для Каждого Элемент Из Строка.ЗначенияУсловия Цикл
				Если Не ЗначениеЗаполнено(Элемент.Значение) Тогда
					Продолжить;
				КонецЕсли;
				Если ТипЗнч(Элемент.Значение) = Тип("Строка") Тогда
					
					ТаблицаСтроки.Добавить().Значение = "%" + ЗамаскироватьСпецСимволы(Элемент.Значение) + "%";
				ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.АдресатыПочтовыхСообщений") Тогда
					ТаблицаАдресаты.Добавить().Значение = Элемент.Значение;
				Иначе
					ТаблицаКонтакты.Добавить().Значение = Элемент.Значение;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрокаТаблицы Из ТаблицаСтроки Цикл
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	СведенияОбАдресатах.АдресатСообщения КАК Ссылка
					|ИЗ
					|	РегистрСведений.СведенияОбАдресатах КАК СведенияОбАдресатах
					|ГДЕ
					|	СведенияОбАдресатах.Активна
					|	И СведенияОбАдресатах.Представление ПОДОБНО &ШаблонТекста СПЕЦСИМВОЛ ""~""
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	Адресаты.Ссылка
					|ИЗ
					|	Справочник.АдресатыПочтовыхСообщений КАК Адресаты
					|ГДЕ
					|	Адресаты.Наименование ПОДОБНО &ШаблонТекста СПЕЦСИМВОЛ ""~""
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	Адресаты.Ссылка
					|ИЗ
					|	Справочник.АдресатыПочтовыхСообщений КАК Адресаты
					|ГДЕ
					|	Адресаты.Адрес ПОДОБНО &ШаблонТекста СПЕЦСИМВОЛ ""~""";
					
				ТекстПоиска = СтрокаТаблицы.Значение;
				
				Запрос.УстановитьПараметр("ШаблонТекста", ТекстПоиска);
				
				ВременнаяТаблицаАдресаты = Запрос.Выполнить().Выгрузить();
				Для Каждого Строка Из ВременнаяТаблицаАдресаты Цикл
					ТаблицаАдресаты.Добавить().Значение = Строка.Ссылка;
				КонецЦикла;
				
			КонецЦикла;
				
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Таблица.Значение КАК Значение
				|ПОМЕСТИТЬ ВременнаяТаблицаОт
				|ИЗ
				|	&Данные КАК Таблица
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Сведения.АдресатСообщения КАК Ссылка
				|ИЗ
				|	РегистрСведений.СведенияОбАдресатах КАК Сведения
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОт КАК ВременнаяТаблицаОт
				|		ПО Сведения.Контакт = ВременнаяТаблицаОт.Значение
				|			И (Сведения.Активна)
				|";
				
			Запрос.УстановитьПараметр("Данные", ТаблицаКонтакты);
			ВременнаяТаблицаАдресаты = Запрос.Выполнить().Выгрузить();
			Для Каждого Строка Из ВременнаяТаблицаАдресаты Цикл
				ТаблицаАдресаты.Добавить().Значение = Строка.Ссылка;
			КонецЦикла;
				
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Таблица.Значение КАК Значение
				|ПОМЕСТИТЬ АдресатыВременнаяОт
				|ИЗ
				|	&Данные КАК Таблица
				|";
			Запрос.УстановитьПараметр("Данные", ТаблицаАдресаты);
			Запрос.Выполнить();
			
			СтруктураПодзапроса = Новый Структура();
			ТекстЗапроса = 	
				"ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВходящееПисьмо КАК ВходящееПисьмо
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресатыВременнаяОт КАК АдресатыВременнаяОт
				|			ПО ВходящееПисьмо.ОтправительАдресат = АдресатыВременнаяОт.Значение
				|		ПО ЭлектроннаяПочта.Ссылка = ВходящееПисьмо.Ссылка";			
				
			СтруктураПодзапроса.Вставить("Текст", ТекстЗапроса);
			СтруктураПодзапроса.Вставить("Название", "ВТПолученоОт"); 
			ИтоговыйМассив.Добавить(СтруктураПодзапроса);
			
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ПерепискаС Тогда
			
			ТаблицаСтроки = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("Строка"));	
			НоваяКолонка = ТаблицаСтроки.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			
			ТаблицаАдресаты = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка.АдресатыПочтовыхСообщений"));	
			НоваяКолонка = ТаблицаАдресаты.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			
			ТаблицаКонтакты = Новый ТаблицаЗначений;
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));	
			Массив.Добавить(Тип("СправочникСсылка.Контрагенты"));
			Массив.Добавить(Тип("СправочникСсылка.ЛичныеАдресаты"));
			Массив.Добавить(Тип("СправочникСсылка.РолиИсполнителей"));
			Массив.Добавить(Тип("СправочникСсылка.Пользователи"));
			Массив.Добавить(Тип("СправочникСсылка.Сотрудники"));
			Массив.Добавить(Тип("СправочникСсылка.КонтактныеЛица"));
			НоваяКолонка = ТаблицаКонтакты.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			
			Для Каждого Элемент Из Строка.ЗначенияУсловия Цикл
				Если Не ЗначениеЗаполнено(Элемент.Значение) Тогда
					Продолжить;
				КонецЕсли;
				Если ТипЗнч(Элемент.Значение) = Тип("Строка") Тогда
					ТаблицаСтроки.Добавить().Значение = "%" + ЗамаскироватьСпецСимволы(Элемент.Значение) + "%";
				ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.АдресатыПочтовыхСообщений") Тогда
					ТаблицаАдресаты.Добавить().Значение = Элемент.Значение;
				Иначе
					ТаблицаКонтакты.Добавить().Значение = Элемент.Значение;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрокаТаблицы Из ТаблицаСтроки Цикл
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	СведенияОбАдресатах.АдресатСообщения КАК Ссылка
					|ИЗ
					|	РегистрСведений.СведенияОбАдресатах КАК СведенияОбАдресатах
					|ГДЕ
					|	СведенияОбАдресатах.Активна
					|	И СведенияОбАдресатах.Представление ПОДОБНО &ШаблонТекста СПЕЦСИМВОЛ ""~""
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	Адресаты.Ссылка
					|ИЗ
					|	Справочник.АдресатыПочтовыхСообщений КАК Адресаты
					|ГДЕ
					|	Адресаты.Наименование ПОДОБНО &ШаблонТекста СПЕЦСИМВОЛ ""~""
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	Адресаты.Ссылка
					|ИЗ
					|	Справочник.АдресатыПочтовыхСообщений КАК Адресаты
					|ГДЕ
					|	Адресаты.Адрес ПОДОБНО &ШаблонТекста СПЕЦСИМВОЛ ""~""";
					
				ТекстПоиска = СтрокаТаблицы.Значение;
				
				Запрос.УстановитьПараметр("ШаблонТекста", ТекстПоиска);
				
				ВременнаяТаблицаАдресаты = Запрос.Выполнить().Выгрузить();
				Для Каждого Строка Из ВременнаяТаблицаАдресаты Цикл
					ТаблицаАдресаты.Добавить().Значение = Строка.Ссылка;
				КонецЦикла;
				
			КонецЦикла;
				
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Таблица.Значение КАК Значение
				|ПОМЕСТИТЬ ВременнаяТаблицаОт
				|ИЗ
				|	&Данные КАК Таблица
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Сведения.АдресатСообщения КАК Ссылка
				|ИЗ
				|	РегистрСведений.СведенияОбАдресатах КАК Сведения
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОт КАК ВременнаяТаблицаОт
				|		ПО Сведения.Контакт = ВременнаяТаблицаОт.Значение
				|			И (Сведения.Активна)
				|";
				
			Запрос.УстановитьПараметр("Данные", ТаблицаКонтакты);
			ВременнаяТаблицаАдресаты = Запрос.Выполнить().Выгрузить();
			Для Каждого Строка Из ВременнаяТаблицаАдресаты Цикл
				ТаблицаАдресаты.Добавить().Значение = Строка.Ссылка;
			КонецЦикла;
							
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Таблица.Значение КАК Значение
				|ПОМЕСТИТЬ АдресатыВременнаяПереписка
				|ИЗ
				|	&Данные КАК Таблица
				|";
			Запрос.УстановитьПараметр("Данные", ТаблицаАдресаты);
			Запрос.Выполнить();
			
			СтруктураПодзапроса = Новый Структура();
			ТекстЗапроса = 	
				"ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВходящееПисьмо КАК ВходящееПисьмо
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресатыВременнаяПереписка КАК АдресатыВременнаяПереписка
				|			ПО ВходящееПисьмо.ОтправительАдресат = АдресатыВременнаяПереписка.Значение
				|		ПО ЭлектроннаяПочта.Ссылка = ВходящееПисьмо.Ссылка
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИсходящееПисьмо.ПолучателиПисьма КАК ПолучателиПисьма
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресатыВременнаяПереписка КАК АдресатыВременнаяПереписка
				|			ПО ПолучателиПисьма.Адресат = АдресатыВременнаяПереписка.Значение
				|		ПО ЭлектроннаяПочта.Ссылка = ПолучателиПисьма.Ссылка
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИсходящееПисьмо.ПолучателиКопий КАК ПолучателиКопий
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресатыВременнаяПереписка КАК АдресатыВременнаяПереписка
				|			ПО ПолучателиКопий.Адресат = АдресатыВременнаяПереписка.Значение
				|		ПО ЭлектроннаяПочта.Ссылка = ПолучателиКопий.Ссылка
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИсходящееПисьмо.ПолучателиСкрытыхКопий КАК ПолучателиСкрытыхКопий
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресатыВременнаяПереписка КАК АдресатыВременнаяПереписка
				|			ПО ПолучателиСкрытыхКопий.Адресат = АдресатыВременнаяПереписка.Значение
				|		ПО ЭлектроннаяПочта.Ссылка = ПолучателиСкрытыхКопий.Ссылка";			
				
			СтруктураПодзапроса.Вставить("Текст", ТекстЗапроса);
			СтруктураПодзапроса.Вставить("Название", "ВТПерепискаС"); 
			ИтоговыйМассив.Добавить(СтруктураПодзапроса);
			
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ЗаПериод Тогда
				
			Дата1 = НачалоДня(Строка.ЗначенияУсловия[0].Значение);
			Дата2 = Дата(1,1,1);
			Если Строка.ЗначенияУсловия.Количество() = 2 И ЗначениеЗаполнено(Строка.ЗначенияУсловия[1].Значение) Тогда
				Дата2 = КонецДня(Строка.ЗначенияУсловия[1].Значение);
			КонецЕсли;
			
			ТекстЗапроса = 
				"ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|ГДЕ
				|	(ЭлектроннаяПочта.ДатаОтправкиПолучения >= &Дата1
				|				И &Дата1 <> ДАТАВРЕМЯ(1, 1, 1)
				|			ИЛИ &Дата1 = ДАТАВРЕМЯ(1, 1, 1))
				|	И (ЭлектроннаяПочта.ДатаОтправкиПолучения <= &Дата2
				|				И &Дата2 <> ДАТАВРЕМЯ(1, 1, 1)
				|			ИЛИ &Дата2 = ДАТАВРЕМЯ(1, 1, 1))
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|ГДЕ
				|	ЭлектроннаяПочта.ДатаОтправкиПолучения = ДАТАВРЕМЯ(1, 1, 1)
				|	И (ЭлектроннаяПочта.ДатаОтправкиПолучения >= &Дата1
				|				И &Дата1 <> ДАТАВРЕМЯ(1, 1, 1)
				|			ИЛИ &Дата1 = ДАТАВРЕМЯ(1, 1, 1))
				|	И (ЭлектроннаяПочта.ДатаОтправкиПолучения <= &Дата2
				|				И &Дата2 <> ДАТАВРЕМЯ(1, 1, 1)
				|			ИЛИ &Дата2 = ДАТАВРЕМЯ(1, 1, 1))";
            СтруктураПодзапроса = Новый Структура();
			СтруктураПодзапроса.Вставить("Текст", ТекстЗапроса);
			СтруктураПодзапроса.Вставить("Название", "ВТЗаПериод"); 
			ИтоговыйМассив.Добавить(СтруктураПодзапроса);
				
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ИмеетВажность Тогда
			
			Таблица = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("ПеречислениеСсылка.ВажностьПисем"));	
			НоваяКолонка = Таблица.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			Для Каждого Элемент Из Строка.ЗначенияУсловия Цикл
				Таблица.Добавить().Значение = Элемент.Значение;
			КонецЦикла;
			
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Таблица.Значение КАК Значение
				|ПОМЕСТИТЬ ВременнаяТаблицаИмеетВажность
				|ИЗ
				|	&Данные КАК Таблица";
			Запрос.УстановитьПараметр("Данные", Таблица);
			Запрос.Выполнить();	
				
			ТекстЗапроса = 
				"ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаИмеетВажность КАК ВременнаяТаблица
				|		ПО ЭлектроннаяПочта.Важность = ВременнаяТаблица.Значение";
				
			СтруктураПодзапроса = Новый Структура();
			СтруктураПодзапроса.Вставить("Текст", ТекстЗапроса);
			СтруктураПодзапроса.Вставить("Название", "ВТИмеетВажность"); 
			ИтоговыйМассив.Добавить(СтруктураПодзапроса);
			
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ИмеетВложения Тогда
			
			КэшИмеетВложения = Строка.ЗначенияУсловия[0].Значение;
			
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.КомментарийСодержитСлова Тогда	
			
			Таблица = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("Строка"));	
			НоваяКолонка = Таблица.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			Для Каждого Элемент Из Строка.ЗначенияУсловия Цикл
				Если ЗначениеЗаполнено(Элемент.Значение) Тогда
					Таблица.Добавить().Значение = "%" + ЗамаскироватьСпецСимволы(Элемент.Значение) + "%";
				КонецЕсли;
			КонецЦикла;
			
			ТаблицаПисьма = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("ДокументСсылка.ВходящееПисьмо"));	
			Массив.Добавить(Тип("ДокументСсылка.ИсходящееПисьмо"));	
			НоваяКолонка = ТаблицаПисьма.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			
			Для Каждого СтрокаТаблицы Из Таблица Цикл
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ЭлектроннаяПочта.Ссылка КАК Ссылка
					|ИЗ
					|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
					|ГДЕ
					|	ЭлектроннаяПочта.Комментарий ПОДОБНО &ШаблонТекста СПЕЦСИМВОЛ ""~""";
					
				ТекстПоиска = СтрокаТаблицы.Значение;
				
				Запрос.УстановитьПараметр("ШаблонТекста", ТекстПоиска);
				
				УстановитьПривилегированныйРежим(Истина);
				ВременнаяТаблицаСсылка = Запрос.Выполнить().Выгрузить();
				УстановитьПривилегированныйРежим(Ложь);
				Для Каждого Строка Из ВременнаяТаблицаСсылка Цикл
					ТаблицаПисьма.Добавить().Значение = Строка.Ссылка;
				КонецЦикла;
					
			КонецЦикла;	
						
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Таблица.Значение КАК Значение
				|ПОМЕСТИТЬ ПисьмаВременная
				|ИЗ
				|	&Данные КАК Таблица
				|";
			Запрос.УстановитьПараметр("Данные", ТаблицаПисьма);
			Запрос.Выполнить();
			
			СтруктураПодзапроса = Новый Структура();
			ТекстЗапроса = 	
				"ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПисьмаВременная КАК ПисьмаВременная
				|			ПО ЭлектроннаяПочта.Ссылка = ПисьмаВременная.Значение";			
				
			СтруктураПодзапроса.Вставить("Текст", ТекстЗапроса);
			СтруктураПодзапроса.Вставить("Название", "ВТКомментарий"); 
			ИтоговыйМассив.Добавить(СтруктураПодзапроса);
			
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ЕстьОтвет Тогда
			
			КэшЕстьОтвет = Строка.ЗначенияУсловия[0].Значение;

		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ЕстьДокументы Тогда
			
			КэшЕстьДокументы = Строка.ЗначенияУсловия[0].Значение;
			
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ОтмеченоФлагом Тогда
			
			Таблица = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("ПеречислениеСсылка.ФлагиОбъектов"));	
			НоваяКолонка = Таблица.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			Для Каждого Элемент Из Строка.ЗначенияУсловия Цикл
				Таблица.Добавить().Значение = Элемент.Значение;
			КонецЦикла;
						
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Таблица.Значение КАК Значение
				|ПОМЕСТИТЬ ВременнаяТаблицаОтмеченоФлагом
				|ИЗ
				|	&Данные КАК Таблица";		
				
			Запрос.УстановитьПараметр("Данные", Таблица);
			Запрос.Выполнить();
			
			ТекстЗапроса = 	
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ФлагиОбъектов КАК Флаги
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОтмеченоФлагом КАК ВременнаяТаблица
				|			ПО Флаги.Флаг = ВременнаяТаблица.Значение
				|		ПО ЭлектроннаяПочта.Ссылка = Флаги.Объект
				|			И (Флаги.ФизическоеЛицо = &ФизическоеЛицо)";
			СтруктураПодзапроса = Новый Структура();
			СтруктураПодзапроса.Вставить("Текст", ТекстЗапроса);
			СтруктураПодзапроса.Вставить("Название", "ВТОтмеченоФлагом"); 
			ИтоговыйМассив.Добавить(СтруктураПодзапроса);
						
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ОтноситсяКПроекту Тогда	
			
			Таблица = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка.Проекты"));	
			НоваяКолонка = Таблица.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			Для Каждого Элемент Из Строка.ЗначенияУсловия Цикл
				Если ЗначениеЗаполнено(Элемент.Значение) Тогда
					Таблица.Добавить().Значение = Элемент.Значение;
				КонецЕсли;
			КонецЦикла;
						
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Таблица.Значение КАК Значение
				|ПОМЕСТИТЬ ВременнаяТаблицаОтноситсяКПроекту
				|ИЗ
				|	&Данные КАК Таблица";
				
			Запрос.УстановитьПараметр("Данные", Таблица);
			Запрос.Выполнить();
			
			ТекстЗапроса = 	
				"ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОтноситсяКПроекту КАК ВременнаяТаблица
				|		ПО ЭлектроннаяПочта.Ссылка.Проект = ВременнаяТаблица.Значение";
			СтруктураПодзапроса = Новый Структура();
			СтруктураПодзапроса.Вставить("Текст", ТекстЗапроса);
			СтруктураПодзапроса.Вставить("Название", "ВТОтноситсяКПроекту"); 
			ИтоговыйМассив.Добавить(СтруктураПодзапроса);
			
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.Кому Тогда
			
			ТаблицаСтроки = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("Строка"));	
			НоваяКолонка = ТаблицаСтроки.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			
			ТаблицаАдресаты = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка.АдресатыПочтовыхСообщений"));	
			НоваяКолонка = ТаблицаАдресаты.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			
			ТаблицаКонтакты = Новый ТаблицаЗначений;
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));	
			Массив.Добавить(Тип("СправочникСсылка.Контрагенты"));
			Массив.Добавить(Тип("СправочникСсылка.ЛичныеАдресаты"));
			Массив.Добавить(Тип("СправочникСсылка.РолиИсполнителей"));
			Массив.Добавить(Тип("СправочникСсылка.Пользователи"));
			Массив.Добавить(Тип("СправочникСсылка.Сотрудники"));
			Массив.Добавить(Тип("СправочникСсылка.КонтактныеЛица"));
			НоваяКолонка = ТаблицаКонтакты.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			
			Для Каждого Элемент Из Строка.ЗначенияУсловия Цикл
				Если Не ЗначениеЗаполнено(Элемент.Значение) Тогда
					Продолжить;
				КонецЕсли;
				Если ТипЗнч(Элемент.Значение) = Тип("Строка") Тогда
					ТаблицаСтроки.Добавить().Значение = "%" + ЗамаскироватьСпецСимволы(Элемент.Значение) + "%";
				ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.АдресатыПочтовыхСообщений") Тогда
					ТаблицаАдресаты.Добавить().Значение = Элемент.Значение;
				Иначе
					ТаблицаКонтакты.Добавить().Значение = Элемент.Значение;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрокаТаблицы Из ТаблицаСтроки Цикл
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	СведенияОбАдресатах.АдресатСообщения КАК Ссылка
					|ИЗ
					|	РегистрСведений.СведенияОбАдресатах КАК СведенияОбАдресатах
					|ГДЕ
					|	СведенияОбАдресатах.Активна
					|	И СведенияОбАдресатах.Представление ПОДОБНО &ШаблонТекста СПЕЦСИМВОЛ ""~""
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	Адресаты.Ссылка
					|ИЗ
					|	Справочник.АдресатыПочтовыхСообщений КАК Адресаты
					|ГДЕ
					|	Адресаты.Наименование ПОДОБНО &ШаблонТекста СПЕЦСИМВОЛ ""~""
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	Адресаты.Ссылка
					|ИЗ
					|	Справочник.АдресатыПочтовыхСообщений КАК Адресаты
					|ГДЕ
					|	Адресаты.Адрес ПОДОБНО &ШаблонТекста СПЕЦСИМВОЛ ""~""";
					
				ТекстПоиска = СтрокаТаблицы.Значение;
				
				Запрос.УстановитьПараметр("ШаблонТекста", ТекстПоиска);
				
				ВременнаяТаблицаАдресаты = Запрос.Выполнить().Выгрузить();
				Для Каждого Строка Из ВременнаяТаблицаАдресаты Цикл
					ТаблицаАдресаты.Добавить().Значение = Строка.Ссылка;
				КонецЦикла;
				
			КонецЦикла;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Таблица.Значение КАК Значение
				|ПОМЕСТИТЬ ВременнаяТаблица
				|ИЗ
				|	&Данные КАК Таблица
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Сведения.АдресатСообщения КАК Ссылка
				|ИЗ
				|	РегистрСведений.СведенияОбАдресатах КАК Сведения
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблица КАК ВременнаяТаблица
				|		ПО Сведения.Контакт = ВременнаяТаблица.Значение
				|			И (Сведения.Активна)";
				
			Запрос.УстановитьПараметр("Данные", ТаблицаКонтакты);
			ВременнаяТаблицаАдресаты = Запрос.Выполнить().Выгрузить();
			Для Каждого Строка Из ВременнаяТаблицаАдресаты Цикл
				ТаблицаАдресаты.Добавить().Значение = Строка.Ссылка;
			КонецЦикла;
				
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Таблица.Значение КАК Ссылка
				|ПОМЕСТИТЬ АдресатыВременнаяКому
				|ИЗ
				|	&Данные КАК Таблица
				|";
							
			Запрос.УстановитьПараметр("Данные", ТаблицаАдресаты);
			Запрос.Выполнить();
			ТекстЗапроса = 	
				"ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВходящееПисьмо.ПолучателиКопий КАК ВходящееПисьмоПолучателиКопий
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресатыВременнаяКому КАК АдресатыВременная
				|			ПО ВходящееПисьмоПолучателиКопий.Адресат = АдресатыВременная.Ссылка
				|		ПО ЭлектроннаяПочта.Ссылка = ВходящееПисьмоПолучателиКопий.Ссылка
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВходящееПисьмо.ПолучателиПисьма КАК ВходящееПисьмоПолучателиПисьма
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресатыВременнаяКому КАК АдресатыВременная1
				|			ПО ВходящееПисьмоПолучателиПисьма.Адресат = АдресатыВременная1.Ссылка
				|		ПО ЭлектроннаяПочта.Ссылка = ВходящееПисьмоПолучателиПисьма.Ссылка
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИсходящееПисьмо.ПолучателиКопий КАК ВходящееПисьмоПолучателиКопий
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресатыВременнаяКому КАК АдресатыВременная2
				|			ПО ВходящееПисьмоПолучателиКопий.Адресат = АдресатыВременная2.Ссылка
				|		ПО ЭлектроннаяПочта.Ссылка = ВходящееПисьмоПолучателиКопий.Ссылка
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИсходящееПисьмо.ПолучателиПисьма КАК ВходящееПисьмоПолучателиПисьма
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресатыВременнаяКому КАК АдресатыВременная3
				|			ПО ВходящееПисьмоПолучателиПисьма.Адресат = АдресатыВременная3.Ссылка
				|		ПО ЭлектроннаяПочта.Ссылка = ВходящееПисьмоПолучателиПисьма.Ссылка
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИсходящееПисьмо.ПолучателиСкрытыхКопий КАК ВходящееПисьмоПолучателиСкрытыхКопий
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресатыВременнаяКому КАК АдресатыВременная4
				|			ПО ВходящееПисьмоПолучателиСкрытыхКопий.Адресат = АдресатыВременная4.Ссылка
				|		ПО ЭлектроннаяПочта.Ссылка = ВходящееПисьмоПолучателиСкрытыхКопий.Ссылка";
			СтруктураПодзапроса = Новый Структура();
			СтруктураПодзапроса.Вставить("Текст", ТекстЗапроса);
			СтруктураПодзапроса.Вставить("Название", "АдресатыВременнаяКому"); 
			ИтоговыйМассив.Добавить(СтруктураПодзапроса);
						
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.Переслано Тогда
			
			КэшПереслано = Строка.ЗначенияУсловия[0].Значение;
						
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.Прочтено Тогда	
			
			Прочтено = Строка.ЗначенияУсловия[0].Значение;
									
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ТемаСодержитУказанныеСлова Тогда	
			
			Таблица = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("Строка"));	
			НоваяКолонка = Таблица.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			Для Каждого Элемент Из Строка.ЗначенияУсловия Цикл
				Если ЗначениеЗаполнено(Элемент.Значение) Тогда
					Таблица.Добавить().Значение = "%" + ЗамаскироватьСпецСимволы(Элемент.Значение) + "%";
				КонецЕсли;
			КонецЦикла;
						
			ТаблицаПисьма = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("ДокументСсылка.ВходящееПисьмо"));	
			Массив.Добавить(Тип("ДокументСсылка.ИсходящееПисьмо"));	
			НоваяКолонка = ТаблицаПисьма.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			
			Для Каждого СтрокаТаблицы Из Таблица Цикл
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ЭлектроннаяПочта.Ссылка КАК Ссылка
					|ИЗ
					|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
					|ГДЕ
					|	ЭлектроннаяПочта.Тема ПОДОБНО &ШаблонТекста СПЕЦСИМВОЛ ""~""";
					
				ТекстПоиска = СтрокаТаблицы.Значение;
				
				Запрос.УстановитьПараметр("ШаблонТекста", ТекстПоиска);
				
				УстановитьПривилегированныйРежим(Истина);
				ВременнаяТаблицаСсылка = Запрос.Выполнить().Выгрузить();
				УстановитьПривилегированныйРежим(Ложь);
				Для Каждого Строка Из ВременнаяТаблицаСсылка Цикл
					ТаблицаПисьма.Добавить().Значение = Строка.Ссылка;
				КонецЦикла;
					
			КонецЦикла;	
						
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Таблица.Значение КАК Значение
				|ПОМЕСТИТЬ ПисьмаВременнаяТема
				|ИЗ
				|	&Данные КАК Таблица
				|";
			Запрос.УстановитьПараметр("Данные", ТаблицаПисьма);
			Запрос.Выполнить();
			
			СтруктураПодзапроса = Новый Структура();
			ТекстЗапроса = 	
				"ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПисьмаВременнаяТема КАК ПисьмаВременнаяТема
				|			ПО ЭлектроннаяПочта.Ссылка = ПисьмаВременнаяТема.Значение";			
				
			СтруктураПодзапроса.Вставить("Текст", ТекстЗапроса);
			СтруктураПодзапроса.Вставить("Название", "ВТТема"); 
			ИтоговыйМассив.Добавить(СтруктураПодзапроса);
			
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ТекстСодержитУказанныеСлова Тогда	
			
			ИспользоватьППДДляПоискаПоТекстуПисем = ПолучитьФункциональнуюОпцию("ИспользоватьПолнотекстовыйПоиск");
			
			Если ИспользоватьППДДляПоискаПоТекстуПисем Тогда
			
				Если Строка.ЗначенияУсловия.Количество() > 0 Тогда
					СтрокаПоиска = Строка.ЗначенияУсловия[0].Значение;
					СтрокаПоиска = СокрЛП(СтрокаПоиска);
				КонецЕсли;
				
				СтрокаЗапросаППД = СтрокаПоиска;
				
				Если МассивУчетныхЗаписей.Количество() = 0 Тогда
					ВызватьИсключение НСтр("ru = 'Не указано ни одной учетной записи'");
				КонецЕсли;
				
				ОдноСлово = ЭтоОдноСлово(СтрокаПоиска);
				ЕстьСпецСимволы = СтрокаПоискаСодержитСпецСимволы(СтрокаПоиска);
				
				Если МассивУчетныхЗаписей.Количество() = 1 Тогда
					
					УчетнаяЗапись = МассивУчетныхЗаписей[0];
					СтрокаУчетныхЗаписей = РегистрыСведений.ТекстыПисем.GUIDУчетнойЗаписи(УчетнаяЗапись);
					
					// Для одной записи нужно
					//GUID  пробел  СтрокаПоиска
					//без И и кавычек
					
					Если ЕстьСпецСимволы Тогда
						СтрокаЗапросаППД = СтрокаУчетныхЗаписей +  " И " + "(" + СтрокаПоиска + ")";
					Иначе
						СтрокаЗапросаППД = СтрокаУчетныхЗаписей +  " И " + СтрокаПоиска;
					КонецЕсли;
					
				Иначе
					
					СтрокаУчетныхЗаписей = "";
					
					Для Каждого УчетнаяЗаписьТекущая Из МассивУчетныхЗаписей Цикл
						Если Не ПустаяСтрока(СтрокаУчетныхЗаписей) Тогда
							СтрокаУчетныхЗаписей = СтрокаУчетныхЗаписей + " ИЛИ ";
						КонецЕсли;
						СтрокаУчетныхЗаписей = СтрокаУчетныхЗаписей 
							+ РегистрыСведений.ТекстыПисем.GUIDУчетнойЗаписи(УчетнаяЗаписьТекущая);
					КонецЦикла;
					
					Если ОдноСлово Тогда
						СтрокаЗапросаППД = СтрокаПоиска + " И " + "(" + СтрокаУчетныхЗаписей + ")";
					Иначе
						Если ЕстьСпецСимволы Тогда
							СтрокаЗапросаППД = "(" + СтрокаПоиска + ")" + " И " + "(" + СтрокаУчетныхЗаписей + ")";
						Иначе
							// заменим пробелы на И
							
							Разделители = Новый Массив;
							Разделители.Добавить(" ");
							Разделители.Добавить(Символы.Таб);
							Разделители.Добавить(Символы.ВТаб);
							Разделители.Добавить(Символы.НПП);
							Результат = ЗаменитьРазделители(СтрокаПоиска, Разделители, " И ");
							
							СтрокаЗапросаППД = "(" + Результат + ")" + " И " + "(" + СтрокаУчетныхЗаписей + ")";
							
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
				Таблица = Новый ТаблицаЗначений;
				Массив = Новый Массив;
				Массив.Добавить(Тип("ДокументСсылка.ВходящееПисьмо"));
				Массив.Добавить(Тип("ДокументСсылка.ИсходящееПисьмо"));
				НоваяКолонка = Таблица.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
				
				НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
				
				УстановитьПривилегированныйРежим(Истина);
				
				Попытка
					
					ВремяНачалаПоискаППД = ТекущаяДата();
					
					РазмерПорцииДанных = ПолучитьРазмерПорцииДанныхДляПоиска();
					СписокПоиска = ПолнотекстовыйПоиск.СоздатьСписок(СтрокаЗапросаППД, РазмерПорцииДанных);
					
					СписокПоиска.ОбластьПоиска.Добавить(Метаданные.РегистрыСведений.ТекстыПисем);
					
					СписокПоиска.ПолучатьОписание = Ложь;
					СписокПоиска.ПолучатьПредставление = Ложь;
					СписокПоиска.ПерваяЧасть();
					
					СлишкомМногоРезультатов = СписокПоиска.СлишкомМногоРезультатов();
					КоличествоРезультатов = СписокПоиска.Количество();
					ТекущаяПозиция = СписокПоиска.НачальнаяПозиция();
					ПолноеКоличество = СписокПоиска.ПолноеКоличество();
					
					Длительность = ТекущаяДата() - ВремяНачалаПоискаППД;
					ОписаниеСобытия = НСтр("ru='Строка поиска: '") + СтрокаЗапросаППД;
					ДополнительныеСведения = СтрШаблон(
						НСтр("ru = 'Полное число результатов:%1  Размер порции:%2  Слишком много результатов:%3'"),
						ПолноеКоличество,
						РазмерПорцииДанных,
						Строка(СлишкомМногоРезультатов));
					ПротоколированиеРаботыСотрудников.ЗаписатьПолнотекстовыйПоиск(Длительность, ОписаниеСобытия, ДополнительныеСведения);
					
					Пока СписокПоиска.Количество() > 0 Цикл
						
						Для каждого Результат Из СписокПоиска Цикл
							Таблица.Добавить().Значение = Результат.Значение.Письмо; //РегистрыСведений.ТекстыПисем.
						КонецЦикла;
						
						Если Таблица.Количество() >= 10000 Тогда
							Прервать;
						КонецЕсли;
						Попытка
							СписокПоиска.СледующаяЧасть();
						Исключение
							Прервать;
						КонецПопытки;
						
					КонецЦикла;
					
					КонецЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
					
					СообщениеВЛог = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'ППД время поиска (мсек): %1.
						|УчетнаяЗапись=%2
						|СтрокаПоиска=%3
						|Итоговый запрос=%4
						|Число найденных объектов=%5'"),
						Строка(КонецЗамера - НачалоЗамера),
						Строка(УчетнаяЗапись),
						СтрокаПоиска,
						СтрокаЗапросаППД,
						Строка(Таблица.Количество())
						);
					
					ЗаписьЖурналаРегистрации(НСтр("ru='ПоискПисемПоРеквизитам'"), 
						УровеньЖурналаРегистрации.Информация, , , СообщениеВЛог);
					
				Исключение
					
					ЗаписьЖурналаРегистрации(
						НСтр("ru = 'ПоискПисемПоРеквизитам'"),
						УровеньЖурналаРегистрации.Ошибка,,,
						ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
						
					Сообщить( ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()) );
					
				КонецПопытки;
				
				УстановитьПривилегированныйРежим(Ложь);
				
				Запрос = Новый Запрос;
				Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
				Запрос.Текст =
					"ВЫБРАТЬ
					|	Таблица.Значение КАК Значение
					|ПОМЕСТИТЬ ВременнаяТаблицаППД
					|ИЗ
					|	&Данные КАК Таблица
					|
					|ИНДЕКСИРОВАТЬ ПО
					|	Значение";
					
				Запрос.УстановитьПараметр("Данные", Таблица);
				Запрос.Выполнить();         
				
				СтруктураПодзапроса = Новый Структура();
				ТекстЗапроса = 	
					"ВЫБРАТЬ
					|	ЭлектроннаяПочта.Ссылка
					|ИЗ
					|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
					|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаППД КАК ВременнаяТаблицаППД
					|			ПО ЭлектроннаяПочта.Ссылка = ВременнаяТаблицаППД.Значение";			
					
				СтруктураПодзапроса.Вставить("Текст", ТекстЗапроса);
				СтруктураПодзапроса.Вставить("Название", "ВТТекст"); 
				ИтоговыйМассив.Добавить(СтруктураПодзапроса);
				
			КонецЕсли;
			
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ТипПисьма Тогда	
			
			ТипПисьма = Строка.ЗначенияУсловия[0].Значение;
			Если ТипПисьма = 0 Тогда 
				ТипПисьма = Неопределено;
			КонецЕсли;
												
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ХранитсяВПапке Тогда	
			
			МоиПапки = Ложь;
			Таблица = Новый ТаблицаЗначений; 
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка.ПапкиПисем"));	
			НоваяКолонка = Таблица.Колонки.Добавить("Значение", Новый ОписаниеТипов(Массив));
			Для Каждого Элемент Из Строка.ЗначенияУсловия Цикл
				Если Элемент.Значение = "МоиПапки" Тогда
					МоиПапки = Истина;
					Продолжить;
				КонецЕсли;
				Если ЗначениеЗаполнено(Элемент.Значение) Тогда
					Таблица.Добавить().Значение = Элемент.Значение;
				КонецЕсли;
			КонецЦикла;
			
			УстановитьПривилегированныйРежим(Истина);
			Если МоиПапки Тогда
				ЗапросМоиПапки = Новый Запрос;
				ЗапросМоиПапки.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
				ЗапросМоиПапки.Текст = 
					"ВЫБРАТЬ
					|	ПапкиПисем.Ссылка
					|ИЗ
					|	Справочник.ПапкиПисем КАК ПапкиПисем
					|ГДЕ
					|	ПапкиПисем.Ссылка В ИЕРАРХИИ
					|			(ВЫБРАТЬ
					|				ПапкиПисемБыстрогоДоступа.Папка
					|			ИЗ
					|				РегистрСведений.ПапкиПисемБыстрогоДоступа КАК ПапкиПисемБыстрогоДоступа
					|			ГДЕ
					|				ПапкиПисемБыстрогоДоступа.Пользователь = &Пользователь)
					|";	
				ЗапросМоиПапки.УстановитьПараметр("Пользователь", ТекущийПользователь);
				Выборка = ЗапросМоиПапки.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					Таблица.Добавить().Значение = Выборка.Ссылка
				КонецЦикла;
			КонецЕсли;	
			
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ПапкиПисем.Ссылка
				|ПОМЕСТИТЬ ВременнаяТаблицаХранитсяВПапке
				|ИЗ
				|	Справочник.ПапкиПисем КАК ПапкиПисем
				|ГДЕ
				|	ПапкиПисем.Ссылка В (&МассивПапок)";
				
			Запрос.УстановитьПараметр("МассивПапок", Таблица.ВыгрузитьКолонку("Значение"));
			Запрос.Выполнить();
			
			ТекстЗапроса = 	
				"ВЫБРАТЬ
				|	ЭлектроннаяПочта.Ссылка
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаХранитсяВПапке КАК ПапкиПисем
				|		ПО ЭлектроннаяПочта.Папка = ПапкиПисем.ссылка";
				
			СтруктураПодзапроса = Новый Структура();
			СтруктураПодзапроса.Вставить("Текст", ТекстЗапроса);
			СтруктураПодзапроса.Вставить("Название", "ВТХранитсяВПапке"); 
			ИтоговыйМассив.Добавить(СтруктураПодзапроса);
			УстановитьПривилегированныйРежим(Ложь);
			
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.СпособОбъединенияУсловий Тогда
			
			ТипЛогическойСвязи = Строка.ЗначенияУсловия[0].Значение;
			
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ВыбратьПервые	И Не ИскатьВсе Тогда
			
			Если ТипЗнч(Строка.ЗначенияУсловия[0].Значение) = Тип("Число") Тогда
				КоличествоПисемДляПоиска = Строка.ЗначенияУсловия[0].Значение;
			ИначеЕсли ТипЗнч(Строка.ЗначенияУсловия[0].Значение) = Тип("Строка") Тогда
				КоличествоПисемДляПоиска = Число(Строка.ЗначенияУсловия[0].Значение);
			КонецЕсли;
			
		ИначеЕсли Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.Удалено Тогда	
			
			Удалено = Строка.ЗначенияУсловия[0].Значение;
						
		КонецЕсли;		
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ИтоговыйМассив.Количество() = 0 Тогда
		Если ТипЛогическойСвязи = Перечисления.ТипыЛогическойСвязи.И Тогда 
			
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Письма.Ссылка
				|ПОМЕСТИТЬ РезультатыВременная
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК Письма ";				
				
		ИначеЕсли ТипЛогическойСвязи = Перечисления.ТипыЛогическойСвязи.Или Тогда
			
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Письма.Ссылка
				|ПОМЕСТИТЬ РезультатыВременная
				|ИЗ
				|	ЖурналДокументов.ЭлектроннаяПочта КАК Письма";	
		КонецЕсли;		
	КонецЕсли;
	
	Для Счетчик = 0 по ИтоговыйМассив.Количество() - 1 Цикл
		ИтоговыйМассив[Счетчик].Текст = СтрЗаменить(ИтоговыйМассив[Счетчик].Текст, "РАЗРЕШЕННЫЕ", "");
		Если Счетчик = 0 Тогда			
			Если ТипЛогическойСвязи = Перечисления.ТипыЛогическойСвязи.И Тогда
				
				Запрос.Текст = Запрос.Текст + 
					" ВЫБРАТЬ
					| " + ИтоговыйМассив[Счетчик].Название + ".Ссылка
					|ПОМЕСТИТЬ РезультатыВременная
					|ИЗ (" + ИтоговыйМассив[Счетчик].Текст + ") КАК " + ИтоговыйМассив[Счетчик].Название + " ";	
					
			ИначеЕсли ТипЛогическойСвязи = Перечисления.ТипыЛогическойСвязи.Или
				И ИтоговыйМассив[Счетчик].Название <> "ВТХранитсяВПапке"
				И ИтоговыйМассив[Счетчик].Название <> "ВТОтноситсяКУчетнойЗаписи" Тогда
				Запрос.Текст = Запрос.Текст + 
					" ВЫБРАТЬ
					| " + ИтоговыйМассив[Счетчик].Название + ".Ссылка 
					|ИЗ (" + ИтоговыйМассив[Счетчик].Текст + ") КАК " + ИтоговыйМассив[Счетчик].Название + " ";	
			КонецЕсли;		
		Иначе
			Если ТипЛогическойСвязи = Перечисления.ТипыЛогическойСвязи.И Тогда
				Запрос.Текст = Запрос.Текст + 
					" ВНУТРЕННЕЕ СОЕДИНЕНИЕ  
					| (" + ИтоговыйМассив[Счетчик].Текст + ") КАК " + ИтоговыйМассив[Счетчик].Название + " ПО " + ИтоговыйМассив[0].Название + ".ссылка = " + ИтоговыйМассив[Счетчик].Название + ".ссылка";
					
			ИначеЕсли ИтоговыйМассив[Счетчик].Название <> "ВТХранитсяВПапке"
				И ИтоговыйМассив[Счетчик].Название <> "ВТОтноситсяКУчетнойЗаписи" Тогда
				
				Если ЗначениеЗаполнено(Запрос.Текст) Тогда
					Запрос.Текст = Запрос.Текст + 
						" объединить все ";
				КонецЕсли;	
				
				Запрос.Текст = Запрос.Текст + 
					" ВЫБРАТЬ
					| " + ИтоговыйМассив[Счетчик].Название + ".Ссылка 
					|ИЗ (" + ИтоговыйМассив[Счетчик].Текст + ") КАК " + ИтоговыйМассив[Счетчик].Название + " ";
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	
	Если ТипЛогическойСвязи = Перечисления.ТипыЛогическойСвязи.И Тогда
		
		ПустаяЧастьГде = Истина;
		Если ИтоговыйМассив.Количество() > 0 Тогда
			НазваниеТаблицы = ИтоговыйМассив[0].Название;
		Иначе
			НазваниеТаблицы = "Письма";
		КонецЕсли;
		Если Прочтено <> Неопределено Тогда
			
			Запрос.Текст = Запрос.Текст + 
				" ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПрочтении Как СведенияОПрочтении
				|	ПО " + НазваниеТаблицы + ".Ссылка = СведенияОПрочтении.Объект 
				|	И СведенияОПрочтении.Пользователь = &Пользователь ";
				
		КонецЕсли;
		
		Если КэшИмеетВложения <> Неопределено
			Или КэшЕстьОтвет <> Неопределено
			Или КэшПереслано <> Неопределено
			Или КэшЕстьДокументы <> Неопределено Тогда
			
			Запрос.Текст = Запрос.Текст + 
				" ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КешИнформацииОбОбъектах Как Кэш
				|	ПО " + НазваниеТаблицы + ".Ссылка = Кэш.Объект ";
	
			Если КэшИмеетВложения <> Неопределено Тогда
				Запрос.Текст = Запрос.Текст +
					" ГДЕ (" + НазваниеТаблицы + ".Ссылка.ЕстьВложения = &КэшИмеетВложения) "; 	
				ПустаяЧастьГде = Ложь;
			КонецЕсли;		

			Если КэшЕстьДокументы <> Неопределено Тогда
				
				Если ПустаяЧастьГде Тогда
					Запрос.Текст = Запрос.Текст +
						" ГДЕ (&КэшЕстьДокументы И Не Кэш.ЕстьДокументы есть null И Кэш.ЕстьДокументы = &КэшЕстьДокументы Или (Кэш.ЕстьДокументы есть null или Не Кэш.ЕстьДокументы) и Не &КэшЕстьДокументы) ";
				    
				Иначе
					Запрос.Текст = Запрос.Текст +
						" И (&КэшЕстьДокументы И Не Кэш.ЕстьДокументы есть null И Кэш.ЕстьДокументы = &КэшЕстьДокументы Или (Кэш.ЕстьДокументы есть null или Не Кэш.ЕстьДокументы) и Не &КэшЕстьДокументы) ";
				КонецЕсли;
				
				ПустаяЧастьГде = Ложь;
			КонецЕсли;		
			
			Если КэшЕстьОтвет <> Неопределено Тогда
				Если ПустаяЧастьГде Тогда
					Запрос.Текст = Запрос.Текст +
						" ГДЕ (&КэшЕстьОтвет И (Кэш.ОтправленОтвет ИЛИ Кэш.ПолученОтвет)
						|	ИЛИ Не &КэшЕстьОтвет И (Кэш.ПолученОтвет есть null Или Не Кэш.ПолученОтвет) 
						|	И (Кэш.ОтправленОтвет есть null Или Не Кэш.ОтправленОтвет)) ";
				    
				Иначе
					Запрос.Текст = Запрос.Текст +
						"  И (&КэшЕстьОтвет И (Кэш.ОтправленОтвет ИЛИ Кэш.ПолученОтвет)
						|	ИЛИ Не &КэшЕстьОтвет И (Кэш.ПолученОтвет есть null Или Не Кэш.ПолученОтвет) 
						|	И (Кэш.ОтправленОтвет есть null Или Не Кэш.ОтправленОтвет)) ";
				КонецЕсли;
				ПустаяЧастьГде = Ложь;
			КонецЕсли;
			
			Если КэшПереслано <> Неопределено Тогда
				Если ПустаяЧастьГде Тогда
					Запрос.Текст = Запрос.Текст +
						" ГДЕ (&КэшПереслано И Не Кэш.Переслан есть null И Кэш.Переслан = &КэшПереслано Или (Кэш.Переслан есть null или Не Кэш.Переслан) и Не &КэшПереслано) ";
				    
				Иначе
					Запрос.Текст = Запрос.Текст +
						" И (&КэшПереслано И Не Кэш.Переслан есть null И Кэш.Переслан = &КэшПереслано Или (Кэш.Переслан есть null или Не Кэш.Переслан) и Не &КэшПереслано) ";
				КонецЕсли;
				ПустаяЧастьГде = Ложь;
			КонецЕсли;
		КонецЕсли;	
			
		Если Прочтено <> Неопределено Тогда
			Если ПустаяЧастьГде Тогда
				Запрос.Текст = Запрос.Текст + 
					" ГДЕ (СведенияОПрочтении.Прочтен = &Прочтено Или СведенияОПрочтении.Прочтен есть null и не &Прочтено) ";
			Иначе
				Запрос.Текст = Запрос.Текст + 
					" И (СведенияОПрочтении.Прочтен = &Прочтено Или СведенияОПрочтении.Прочтен есть null и не &Прочтено) ";	
			КонецЕсли;
			ПустаяЧастьГде = Ложь;
		КонецЕсли;
		
		Если ТипПисьма <> Неопределено Тогда
			Если ПустаяЧастьГде Тогда
				Запрос.Текст = Запрос.Текст + 
					" ГДЕ ((ТИПЗНАЧЕНИЯ(" + НазваниеТаблицы + ".Ссылка) = ТИП(Документ.ВходящееПисьмо) И &ТипПисьма = 1)
					| ИЛИ (ТИПЗНАЧЕНИЯ(" + НазваниеТаблицы + ".Ссылка) = ТИП(Документ.ИсходящееПисьмо) И &ТипПисьма = 2)) ";	
			Иначе
				Запрос.Текст = Запрос.Текст + 
					" И ((ТИПЗНАЧЕНИЯ(" + НазваниеТаблицы + ".Ссылка) = ТИП(Документ.ВходящееПисьмо) И &ТипПисьма = 1)
					| ИЛИ (ТИПЗНАЧЕНИЯ(" + НазваниеТаблицы + ".Ссылка) = ТИП(Документ.ИсходящееПисьмо) И &ТипПисьма = 2)) ";	
			КонецЕсли;		
			ПустаяЧастьГде = Ложь;
		КонецЕсли;	
		Если Удалено <> Неопределено Тогда
			Если ПустаяЧастьГде Тогда
				Запрос.Текст = Запрос.Текст + 
					" ГДЕ (" + НазваниеТаблицы + ".Ссылка.ПометкаУдаления = &Удалено) ";
			Иначе
				Запрос.Текст = Запрос.Текст + 
					" И (" + НазваниеТаблицы + ".Ссылка.ПометкаУдаления = &Удалено) ";	
			КонецЕсли;			
			ПустаяЧастьГде = Ложь;
		КонецЕсли;	
				
	ИначеЕсли ТипЛогическойСвязи = Перечисления.ТипыЛогическойСвязи.Или Тогда	
					
		Если КэшИмеетВложения <> Неопределено Тогда
			Запрос.Текст = Запрос.Текст + 
			    ?(Не ЗначениеЗаполнено(Запрос.Текст), "", " Объединить все ") +
				" 
				|	ВЫБРАТЬ Письма.Ссылка
				|	ИЗ ЖурналДокументов.ЭлектроннаяПочта Как Письма
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КешИнформацииОбОбъектах Как КешИнформацииОбОбъектах
				|		ПО Письма.Ссылка = КешИнформацииОбОбъектах.Объект
				|	Где КешИнформацииОбОбъектах.ЕстьФайлы = &КэшИмеетВложения  
				|	Или КешИнформацииОбОбъектах.ЕстьФайлы есть null и Не &КэшИмеетВложения";
		КонецЕсли;

		Если КэшЕстьДокументы <> Неопределено Тогда
			Запрос.Текст = Запрос.Текст + 
			    ?(Не ЗначениеЗаполнено(Запрос.Текст), "", " Объединить все ") +
				" 
				|	ВЫБРАТЬ Письма.Ссылка
				|	ИЗ ЖурналДокументов.ЭлектроннаяПочта Как Письма
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КешИнформацииОбОбъектах Как КешИнформацииОбОбъектах
				|		ПО Письма.Ссылка = КешИнформацииОбОбъектах.Объект
				|	Где КешИнформацииОбОбъектах.ЕстьДокументы = &КэшЕстьДокументы  
				|	Или КешИнформацииОбОбъектах.ЕстьДокументы есть null и Не &КэшЕстьДокументы";
		КонецЕсли;
		
		Если КэшЕстьОтвет <> Неопределено Тогда
			
			Запрос.Текст = Запрос.Текст + 
				?(Не ЗначениеЗаполнено(Запрос.Текст), "", " Объединить все ") +
				"  
				|	ВЫБРАТЬ Письма.Ссылка
				|	ИЗ ЖурналДокументов.ЭлектроннаяПочта Как Письма
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КешИнформацииОбОбъектах Как Кэш
				|		ПО Письма.Ссылка = Кэш.Объект
				|	ГДЕ (&КэшЕстьОтвет И (Кэш.ОтправленОтвет ИЛИ Кэш.ПолученОтвет)
						|	ИЛИ Не &КэшЕстьОтвет И (Кэш.ПолученОтвет есть null Или Не Кэш.ПолученОтвет) 
						|	И (Кэш.ОтправленОтвет есть null Или Не Кэш.ОтправленОтвет)) ";
			
		КонецЕсли;
			
		Если КэшПереслано <> Неопределено Тогда
			
			Запрос.Текст = Запрос.Текст +
				?(Не ЗначениеЗаполнено(Запрос.Текст), "", " Объединить все ") +
				" 
				|	ВЫБРАТЬ Письма.Ссылка
				|	ИЗ ЖурналДокументов.ЭлектроннаяПочта Как Письма
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КешИнформацииОбОбъектах Как Кэш
				|		ПО Письма.Ссылка = Кэш.Объект
				|	Где (&КэшПереслано И Не Кэш.Переслан есть null И Кэш.Переслан = &КэшПереслано Или (Кэш.Переслан есть null или Не Кэш.Переслан) и Не &КэшПереслано) ";
			
		КонецЕсли;
		
		Если Прочтено <> Неопределено Тогда
			
			Запрос.Текст = Запрос.Текст +
				?(Не ЗначениеЗаполнено(Запрос.Текст), "", " Объединить все ") +
				"  
				|	ВЫБРАТЬ Письма.Ссылка
				|	ИЗ ЖурналДокументов.ЭлектроннаяПочта Как Письма
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПрочтении Как СведенияОПрочтении
				|		ПО Письма.Ссылка = СведенияОПрочтении.Объект
				|	Где (СведенияОПрочтении.Прочтен = &Прочтено И СведенияОПрочтении.Пользователь = &Пользователь) Или 
				|		(СведенияОПрочтении.Прочтен есть null И Не &Прочтено) ";
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Запрос.Текст) Тогда
			
			Запрос.Текст = 
				"ВЫБРАТЬ Письма.Ссылка
				|	ИЗ ЖурналДокументов.ЭлектроннаяПочта Как Письма ";
			
		КонецЕсли;
		
		Запрос.Текст = 
			"Выбрать
			|	Таблица.Ссылка
			|ПОМЕСТИТЬ РезультатыВременная
			|ИЗ
			|(" + Запрос.Текст + ") КАК Таблица 
			|//{Папка}
			|//{УчетнаяЗапись}
			|ГДЕ ИСТИНА = ИСТИНА ";
						
		Если ТипПисьма <> Неопределено Тогда
			Запрос.Текст = Запрос.Текст + 
				" И (ТипЗначения(Таблица.Ссылка) = Тип(Документ.ВходящееПисьмо) и &ТипПисьма = 1
				| Или ТипЗначения(Таблица.Ссылка) = Тип(Документ.ИсходящееПисьмо) и &ТипПисьма = 2) ";
		КонецЕсли;
		
		Если Удалено <> Неопределено Тогда
			Запрос.Текст = Запрос.Текст + 
				" И (Таблица.Ссылка.ПометкаУдаления = &Удалено) ";	
		КонецЕсли;
		
		Для Счетчик = 0 по ИтоговыйМассив.Количество() - 1 Цикл
			
			Если ИтоговыйМассив[Счетчик].Название = "ВТХранитсяВПапке" Тогда
				Запрос.Текст = СтрЗаменить(
					Запрос.Текст,
					"//{Папка}", 
					" ВНУТРЕННЕЕ СОЕДИНЕНИЕ  
					| (" + ИтоговыйМассив[Счетчик].Текст + ") КАК " + ИтоговыйМассив[Счетчик].Название + " ПО Таблица.Ссылка = " + ИтоговыйМассив[Счетчик].Название + ".ссылка ");
			КонецЕсли;			
			
			Если ИтоговыйМассив[Счетчик].Название = "ВТОтноситсяКУчетнойЗаписи" Тогда
				Запрос.Текст = СтрЗаменить(
					Запрос.Текст,
					"//{УчетнаяЗапись}", 
					" ВНУТРЕННЕЕ СОЕДИНЕНИЕ  
					| (" + ИтоговыйМассив[Счетчик].Текст + ") КАК " + ИтоговыйМассив[Счетчик].Название + " ПО Таблица.Ссылка = " + ИтоговыйМассив[Счетчик].Название + ".ссылка ");
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
	
	Запрос.УстановитьПараметр(
		"СотрудникиПользователя", Сотрудники.ТекущийПользовательИСотрудники());
	Запрос.УстановитьПараметр("ФизическоеЛицо", ПараметрыСеанса.ФизическоеЛицоПользователя);
	
	Запрос.Установитьпараметр("ЗначениеОтноситсяКМоейУчетнойЗаписи", ОтноситсяКМоейУчетнойЗаписи);
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	Запрос.УстановитьПараметр("КэшИмеетВложения", КэшИмеетВложения);
	Запрос.УстановитьПараметр("КэшЕстьОтвет", КэшЕстьОтвет);
	Запрос.УстановитьПараметр("КэшЕстьДокументы", КэшЕстьДокументы);
	Запрос.УстановитьПараметр("КэшПереслано", КэшПереслано);
	Запрос.УстановитьПараметр("Прочтено", Прочтено);
	Запрос.УстановитьПараметр("Удалено", Удалено);
	Запрос.УстановитьПараметр("ТипПисьма", ТипПисьма);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ {Первые} 
		|	ЭлектроннаяПочта.Ссылка КАК Ссылка1,
		|	ЭлектроннаяПочта.Дата
		|ИЗ
		|	РезультатыВременная КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
		|		ПО Таблица.Ссылка = ЭлектроннаяПочта.Ссылка 
		|Упорядочить по
		|	ЭлектроннаяПочта.Дата Убыв";
	
	Если КоличествоПисемДляПоиска > 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{Первые}", "Первые " + Формат(КоличествоПисемДляПоиска+1, "ЧГ=") + " ");	
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "{Первые}", "Первые 10000");
	
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка1");
	МенеджерВременныхТаблиц.Закрыть();
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("КоличествоНайденного", Массив.Количество()); 

	КоличествоНайденного = Массив.Количество();
	Если КоличествоПисемДляПоиска > 0 и КоличествоНайденного > КоличествоПисемДляПоиска Тогда                                                
		Массив.Удалить(Массив.Количество() - 1);
	Конецесли;
		
	СтруктураВозврата.Вставить("МассивСсылок", Массив);
	Если Не ИскатьВсе И КоличествоПисемДляПоиска > 0 Тогда
		СтруктураВозврата.Вставить("НеобходимоБылоНайти", КоличествоПисемДляПоиска);
	Иначе
		СтруктураВозврата.Вставить("НеобходимоБылоНайти", Массив.Количество());
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция ЗаменитьРазделители(Строка, Разделители, НовыйРазделитель)
	
	Результат = Строка;
	
	СтрокаЗамены = "%~%";
	ДлинаСтрокиЗамены = СтрДлина(СтрокаЗамены);
	Для каждого Разделитель Из Разделители Цикл
		Результат = СтрЗаменить(Результат, Разделитель, СтрокаЗамены);
	КонецЦИкла;
	Пока Найти(Результат, СтрокаЗамены + СтрокаЗамены) > 0 Цикл
		Результат = СтрЗаменить(Результат, СтрокаЗамены + СтрокаЗамены, СтрокаЗамены);
	КонецЦикла;
	Если Прав(Результат, ДлинаСтрокиЗамены) = СтрокаЗамены Тогда
		Результат = Сред(Результат, 1, СтрДлина(Результат) - ДлинаСтрокиЗамены);
	КонецЕсли;
	Если Лев(Результат, ДлинаСтрокиЗамены) = СтрокаЗамены Тогда
		Результат = Сред(Результат, 1 + ДлинаСтрокиЗамены);
	КонецЕсли;
	Результат = СтрЗаменить(Результат, СтрокаЗамены, НовыйРазделитель);
	
	Возврат Результат;
	
КонецФункции

Функция СтрокаПоискаСодержитСпецСимволы(СтрокаПоиска)
	
	СпецСимволы = """,&|?~/()*#!";
	Для К = 1 По СтрДлина(СпецСимволы) Цикл
		Символ = Сред(СпецСимволы, К, 1);
		Если Найти(СтрокаПоиска, Символ) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	СлужебныеСлова = Новый Массив;
	СлужебныеСлова.Добавить(" И ");
	СлужебныеСлова.Добавить(" AND ");
	СлужебныеСлова.Добавить(" ИЛИ ");
	СлужебныеСлова.Добавить(" OR ");
	СлужебныеСлова.Добавить(" НЕ ");
	СлужебныеСлова.Добавить(" NOT ");
	СлужебныеСлова.Добавить(" РЯДОМ");
	СлужебныеСлова.Добавить(" NEAR");
	Для каждого СлужебноеСлово Из СлужебныеСлова Цикл
		Если Найти(СтрокаПоиска, СлужебноеСлово) > 0 Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ЭтоОдноСлово(СтрокаПоиска)
	
	СтрокаПоиска = СокрЛП(СтрокаПоиска);
	
	Разделители = " " + Символы.ВТаб + Символы.НПП + Символы.Таб;
	МассивСтрок = СтрРазделить(СтрокаПоиска, Разделители, Ложь);
	Если МассивСтрок.Количество() > 1 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ПолучитьРазмерПорцииДанныхДляПоиска()
	
	Попытка
	
		УстановитьПривилегированныйРежим(Истина);
		
		Размер = Константы.РазмерПорцииДанныхДляПоиска.Получить();
		
		Если (Размер <= 0) Тогда 
			Возврат 1000;
		КонецЕсли;
				
		Возврат Размер;
	Исключение
		Возврат 1000;
	КонецПопытки;
	
КонецФункции
