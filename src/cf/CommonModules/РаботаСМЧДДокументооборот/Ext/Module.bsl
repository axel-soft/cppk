// @strict-types


#Область ПрограммныйИнтерфейс

// Данные МЧД.
// 
// Параметры:
//  Доверенности - Массив Из ОпределяемыйТип.МашиночитаемаяДоверенность
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//    * Ключ - ОпределяемыйТип.МашиночитаемаяДоверенность
//    * Значение - см. НовыеДанныеМЧД
Функция ДанныеМЧД(Доверенности) Экспорт
	
	ДанныеДоверенностей = Новый Соответствие();
	Для Каждого Доверенность Из Доверенности Цикл
		ДанныеДоверенностей[Доверенность] = НовыеДанныеМЧД();
	КонецЦикла;
	
	МЧДПоТипам = МЧДПоТипам(Доверенности);
	ВыборкиРеквизитов = ВыборкиРеквизитовМЧД(МЧДПоТипам);
	
	ВыборкаМЧДОрганизаций002 = ВыборкиРеквизитов.МЧДОрганизаций002;
	ВыборкаМЧДКонтрагентов002 = ВыборкиРеквизитов.МЧДКонтрагентов002;
	ВыборкаМЧД003 = ВыборкиРеквизитов.МЧД003;
	
	Пока ВыборкаМЧДОрганизаций002.Следующий() Цикл
		
		МЧД = ВыборкаМЧДОрганизаций002.Доверенность;
		ДанныеДоверенности = ДанныеДоверенностей[МЧД]; // см. НовыеДанныеМЧД
		
		ДанныеДоверенности.Номер = ВыборкаМЧДОрганизаций002.НомерДоверенности;
		ДанныеДоверенности.ДатаВыдачи = ВыборкаМЧДОрганизаций002.ДатаВыдачи;
		ДанныеДоверенности.ДатаОкончания = ВыборкаМЧДОрганизаций002.ДатаОкончания;
		ДанныеДоверенности.СтатусВРеестреФНС = ВыборкаМЧДОрганизаций002.СтатусВРеестреФНС;
		ДанныеДоверенности.Верна = ВыборкаМЧДОрганизаций002.Верна;
		ДанныеДоверенности.Отозвана = ВыборкаМЧДОрганизаций002.Отозвана;
		ДанныеДоверенности.ДатаОтзыва = ВыборкаМЧДОрганизаций002.ДатаОтзыва;
		ДанныеДоверенности.ПометкаУдаления = ВыборкаМЧДОрганизаций002.ПометкаУдаления;
		
	КонецЦикла;
	
	Пока ВыборкаМЧДКонтрагентов002.Следующий() Цикл
		
		МЧД = ВыборкаМЧДКонтрагентов002.Доверенность;
		ДанныеДоверенности = ДанныеДоверенностей[МЧД]; // см. НовыеДанныеМЧД
		
		ДанныеДоверенности.Номер = ВыборкаМЧДКонтрагентов002.НомерДоверенности;
		ДанныеДоверенности.ДатаВыдачи = ВыборкаМЧДКонтрагентов002.ДатаВыдачи;
		ДанныеДоверенности.ДатаОкончания = ВыборкаМЧДКонтрагентов002.ДатаОкончания;
		ДанныеДоверенности.СтатусВРеестреФНС = ВыборкаМЧДКонтрагентов002.СтатусВРеестреФНС;
		ДанныеДоверенности.Верна = ВыборкаМЧДКонтрагентов002.Верна;
		ДанныеДоверенности.Отозвана = ВыборкаМЧДКонтрагентов002.Отозвана;
		ДанныеДоверенности.ДатаОтзыва = ВыборкаМЧДКонтрагентов002.ДатаОтзыва;
		ДанныеДоверенности.ПометкаУдаления = ВыборкаМЧДКонтрагентов002.ПометкаУдаления;
		
	КонецЦикла;
	
	Пока ВыборкаМЧД003.Следующий() Цикл
		
		МЧД = ВыборкаМЧД003.Доверенность;
		ДанныеДоверенности = ДанныеДоверенностей[МЧД]; // см. НовыеДанныеМЧД
		
		ДанныеДоверенности.Номер = ВыборкаМЧД003.НомерДоверенности;
		ДанныеДоверенности.ДатаВыдачи = ВыборкаМЧД003.ДатаВыдачи;
		ДанныеДоверенности.ДатаОкончания = ВыборкаМЧД003.СрокДействия;
		ДанныеДоверенности.СтатусВРеестреФНС = ВыборкаМЧД003.СтатусВРеестреФНС;
		ДанныеДоверенности.Верна = ВыборкаМЧД003.Верна;
		ДанныеДоверенности.Отозвана = (ВыборкаМЧД003.ДатаПрекращения > Дата(1, 1, 1));
		ДанныеДоверенности.ДатаОтзыва = ВыборкаМЧД003.ДатаПрекращения;
		ДанныеДоверенности.ПометкаУдаления = ВыборкаМЧД003.ПометкаУдаления;
		
	КонецЦикла;
	
	Возврат ДанныеДоверенностей;
	
КонецФункции

#Область ДоверителиМЧД

// Данные доверителей доверенностей.
// 
// Параметры:
//  Доверенности - Массив Из ОпределяемыйТип.МашиночитаемаяДоверенность
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//    * Ключ - ОпределяемыйТип.МашиночитаемаяДоверенность
//    * Значение - Массив Из см. НовыеДанныеДоверителяМЧД
Функция ДанныеДоверителейМЧД(Доверенности) Экспорт
	
	ДанныеДоверителей = Новый Соответствие();
	Для Каждого Доверенность Из Доверенности Цикл
		ДанныеДоверителей[Доверенность] = Новый Массив;
	КонецЦикла;
	
	МЧДПоТипам = МЧДПоТипам(Доверенности);
	
	ДанныеПоРеквизитам = ДанныеДоверителейПоРеквизитамМЧД(МЧДПоТипам);
	ДанныеБезСсылки = ДанныеДоверителейМЧДБезСсылки(ДанныеПоРеквизитам);
	СсылкиДоверителей = СсылкиДоверителейМЧД(ДанныеБезСсылки);
	
	Для Каждого Доверенность Из Доверенности Цикл
		
		ДанныеДоверителейТекущейМЧД = ДанныеДоверителей[Доверенность]; // Массив Из см. НовыеДанныеДоверителяМЧД
		
		ДоверителиПоРеквизитамТекущейМЧД = ДанныеПоРеквизитам[Доверенность];
		Для Каждого ЭлементДоверителя Из ДоверителиПоРеквизитамТекущейМЧД Цикл
			
			КлючДоверителя = ЭлементДоверителя.Ключ; // см. КлючДоверителя
			ДанныеДоверителя = ЭлементДоверителя.Значение; // см. НовыеДанныеДоверителяМЧД
			
			ДанныеКДобавлению = НовыеДанныеДоверителяМЧД();
			ЗаполнитьЗначенияСвойств(ДанныеКДобавлению, ДанныеДоверителя);
			
			Если ЗначениеЗаполнено(ДанныеКДобавлению.Ссылка) Тогда
				ДанныеДоверителейТекущейМЧД.Добавить(ДанныеКДобавлению);
				Продолжить;
			КонецЕсли;
			
			ДанныеДоверителя = ДанныеБезСсылки[КлючДоверителя]; // см. НовыеДанныеДоверителяМЧД
			
			ДанныеОрганизации = НовыеДанныеДляПоискаОрганизации();
			ДанныеОрганизации.ИНН = ДанныеДоверителя.ИНН;
			ДанныеОрганизации.КПП = ДанныеДоверителя.КПП;
			
			НайденныеОрганизации = СсылкиДоверителей.Организации[КлючДанныхОрганизации(ДанныеОрганизации)];
			Если НайденныеОрганизации.Количество() > 0 Тогда
				ДанныеКДобавлению.Ссылка = НайденныеОрганизации[0];
				ДанныеДоверителейТекущейМЧД.Добавить(ДанныеКДобавлению);
				Продолжить;
			КонецЕсли;
			
			ДанныеКонтрагента = НовыеДанныеДляПоискаКонтрагента();
			ДанныеКонтрагента.ИНН = ДанныеДоверителя.ИНН;
			ДанныеКонтрагента.КПП = ДанныеДоверителя.КПП;
			
			НайденныеКонтрагенты = СсылкиДоверителей.Контрагенты[КлючДанныхКонтрагента(ДанныеКонтрагента)];
			Если НайденныеКонтрагенты.Количество() > 0 Тогда
				ДанныеКДобавлению.Ссылка = НайденныеКонтрагенты[0];
				ДанныеДоверителейТекущейМЧД.Добавить(ДанныеКДобавлению);
				Продолжить;
			КонецЕсли;
			
			ДанныеФизлица = НовыеДанныеДляПоискаФизлица();
			ДанныеФизлица.ИНН = ДанныеДоверителя.ИНН;
			ДанныеФизлица.СНИЛС = ДанныеДоверителя.СНИЛС;
			
			НайденныеФизлица = СсылкиДоверителей.Физлица[КлючДанныхФизлица(ДанныеФизлица)];
			Если НайденныеФизлица.Количество() > 0 Тогда
				ДанныеКДобавлению.Ссылка = НайденныеФизлица[0];
				ДанныеДоверителейТекущейМЧД.Добавить(ДанныеКДобавлению);
				Продолжить;
			КонецЕсли;
			
			ДанныеДоверителейТекущейМЧД.Добавить(ДанныеКДобавлению);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого Элемент Из ДанныеДоверителей Цикл
		ДанныеДоверителейМЧД = Элемент.Значение; // Массив Из см. НовыеДанныеДоверителяМЧД
		Для Каждого ДанныеДоверителя Из ДанныеДоверителейМЧД Цикл
			Если Не ЗначениеЗаполнено(ДанныеДоверителя.Представление) Тогда
				ДанныеДоверителя.Представление = ПредставлениеДоверителяМЧД(ДанныеДоверителя);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ДанныеДоверителей;
	
КонецФункции

// Представление доверителей МЧД.
// 
// Параметры:
//  ДанныеДоверителей - Массив Из см. НовыеДанныеДоверителяМЧД
// 
// Возвращаемое значение:
//  Строка
Функция ПредставлениеДоверителейМЧД(ДанныеДоверителей) Экспорт
	
	Если ДанныеДоверителей.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Если ДанныеДоверителей.Количество() = 1 Тогда
		Возврат ДанныеДоверителей[0].Представление;
	КонецЕсли;
	
	ПредставленияКромеПоследнего = Новый Массив(); // Массив Из Строка
	
	Для Индекс = 1 По ДанныеДоверителей.Количество() - 2 Цикл
		ДанныеДоверителя = ДанныеДоверителей[Индекс];
		ПредставленияКромеПоследнего.Добавить(ДанныеДоверителя.Представление);
	КонецЦикла;
	
	Возврат СтрШаблон(НСтр("ru = '%1 и %2'"),
		СтрСоединить(ПредставленияКромеПоследнего, ", "),
		ДанныеДоверителей[ДанныеДоверителей.ВГраница()].Представление);
	
КонецФункции

#КонецОбласти

#Область ПредставителиМЧД

// Новые данные представителя МЧД.
// 
// Возвращаемое значение:
//  Структура:
//    * ИНН - Строка
//    * КПП - Строка
//    * ОГРН - Строка
//    * СНИЛС - Строка
Функция НовыеДанныеПредставителяМЧД() Экспорт
	
	ДанныеПредставителя = Новый Структура;
	ДанныеПредставителя.Вставить("ИНН", "");
	ДанныеПредставителя.Вставить("КПП", "");
	ДанныеПредставителя.Вставить("ОГРН", "");
	ДанныеПредставителя.Вставить("СНИЛС", "");
	
	Возврат ДанныеПредставителя;
	
КонецФункции

// МЧД по данным представителей.
// 
// Параметры:
//  ДанныеПредставителей - Массив Из см. НовыеДанныеПредставителяМЧД - Если какое-либо из полей КПП, ОГРН или СНИЛС
//                                                                     не заполнено, то поиск по нему производиться не будет
//  НеточныйПоиск - Булево - Если истина, то будут отбираться МЧД по точному совпадению ИНН
//                           и если не найдено точного совпадения КПП, ОГРН или СНИЛС, то все равно попадут в выборку
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//    * Ключ - см. КлючДанныхПредставителя
//    * Значение - Массив Из ОпределяемыйТип.МашиночитаемаяДоверенность
Функция МЧДПоДаннымПредставителей(ДанныеПредставителей, НеточныйПоиск = Истина) Экспорт
	
	МЧДРазныхТиповПоИНН = МЧДРазныхТиповПоИННПредставителей(ДанныеПредставителей);
	
	МЧДПоДаннымПредставителей = Новый Соответствие();
	Для Каждого ДанныеПредставителя Из ДанныеПредставителей Цикл
		
		ИНН = ДанныеПредставителя.ИНН;
		КПП = ДанныеПредставителя.КПП;
		ОГРН = ДанныеПредставителя.ОГРН;
		СНИЛС = ДанныеПредставителя.СНИЛС;
		
		Ключ = КлючДанныхПредставителя(ДанныеПредставителя);
		ПодходящиеМЧД = Новый Массив(); // Массив Из ОпределяемыйТип.МашиночитаемаяДоверенность
		МЧДПоДаннымПредставителей[Ключ] = ПодходящиеМЧД;
		
		ДанныеМЧДОрганизаций002ПоИНН = МЧДРазныхТиповПоИНН.МЧДОрганизаций002[ИНН];
		Если ДанныеМЧДОрганизаций002ПоИНН <> Неопределено Тогда
			ПодходящиеМЧДОрганизаций002 = НаиболееПодходящиеМЧДПредставителя(
				ДанныеМЧДОрганизаций002ПоИНН, КПП, ОГРН, СНИЛС, Не НеточныйПоиск);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПодходящиеМЧД, ПодходящиеМЧДОрганизаций002);
		КонецЕсли;
		
		ДанныеМЧДКонтрагентов002ПоИНН = МЧДРазныхТиповПоИНН.МЧДКонтрагентов002[ИНН];
		Если ДанныеМЧДКонтрагентов002ПоИНН <> Неопределено Тогда
			ПодходящиеМЧДКонтрагентов002 = НаиболееПодходящиеМЧДПредставителя(
				ДанныеМЧДКонтрагентов002ПоИНН, КПП, ОГРН, СНИЛС, Не НеточныйПоиск);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПодходящиеМЧД, ПодходящиеМЧДКонтрагентов002);
		КонецЕсли;
		
		ДанныеМЧД003 = МЧДРазныхТиповПоИНН.МЧД003[ИНН];
		Если ДанныеМЧД003 <> Неопределено Тогда
			ПодходящиеМЧД003 = НаиболееПодходящиеМЧДПредставителя(
				ДанныеМЧД003, КПП, ОГРН, СНИЛС, Не НеточныйПоиск);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПодходящиеМЧД, ПодходящиеМЧД003);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МЧДПоДаннымПредставителей;
	
КонецФункции

#КонецОбласти

#Область ПоискСсылокПоДанным

// Новые данные для поиска организации.
// 
// Возвращаемое значение:
//  Структура:
//    * ИНН - Строка
//    * КПП - Строка
Функция НовыеДанныеДляПоискаОрганизации() Экспорт
	
	ДанныеОрганизации = Новый Структура;
	ДанныеОрганизации.Вставить("ИНН", "");
	ДанныеОрганизации.Вставить("КПП", "");
	
	Возврат ДанныеОрганизации;
	
КонецФункции

// Найденные организации по данным.
// 
// Параметры:
//  ДанныеОрганизаций - Массив Из см. НовыеДанныеДляПоискаОрганизации
//  ТочноеСовпадениеКПП - Булево - Если Истина, тогда возвращаем ссылку только по точному совпадению ИНН и КПП.
//                        Если Ложь и КПП передан, то сначала ищем по точному совпадению,
//                             если не нашли выдем по пустому КПП
//                        Если Ложь и КПП не передан, то выдаем ссылки по любому КПП
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//    * Ключ - см. КлючДанныхОрганизации
//    * Значение - Массив Из СправочникСсылка.Организации
//
Функция НайденныеОрганизацииПоДанным(ДанныеОрганизаций, ТочноеСовпадениеКПП = Ложь) Экспорт
	
	НаборИНН = Новый Массив(); // Массив Из Строка
	НаборКПП = Новый Массив(); // Массив Из Строка
	
	ЕстьПустыеКПП = Ложь;
	
	Для Каждого ДанныеОрганизации Из ДанныеОрганизаций Цикл
		
		Если Не ЗначениеЗаполнено(ДанныеОрганизации.КПП) Тогда
			ЕстьПустыеКПП = Истина;
		КонецЕсли;
		
		НаборИНН.Добавить(ДанныеОрганизации.ИНН);
		НаборКПП.Добавить(ДанныеОрганизации.КПП);
		
	КонецЦикла;
	
	Если Не ТочноеСовпадениеКПП Тогда
		НаборКПП.Добавить("");
	КонецЕсли;
	
	Если Не ТочноеСовпадениеКПП И ЕстьПустыеКПП Тогда
		НаборКПП.Очистить();
	КонецЕсли;
	
	КПППоИНН = ОрганизацииДляИННИКПП(НаборИНН, НаборКПП);
	
	ОрганизацииПоДанным = Новый Соответствие();
	Для Каждого ДанныеОрганизации Из ДанныеОрганизаций Цикл
		
		ИНН = ДанныеОрганизации.ИНН;
		КПП = ДанныеОрганизации.КПП;
		
		ОрганизацииТекущихДанных = Новый Массив(); // Массив Из СправочникСсылка.Организации
		
		КППДляДанногоИНН = КПППоИНН[ИНН];
		Если КППДляДанногоИНН = Неопределено Тогда
			Ключ = КлючДанныхОрганизации(ДанныеОрганизации);
			ОрганизацииПоДанным[Ключ] = ОрганизацииТекущихДанных;
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(КПП) И Не ТочноеСовпадениеКПП Тогда
			
			Для Каждого ЭлементКПП Из КППДляДанногоИНН Цикл
				
				ОрганизацииПоКПП = ЭлементКПП.Значение; // Массив Из СправочникСсылка.Организации
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОрганизацииТекущихДанных, ОрганизацииПоКПП);
				
			КонецЦикла;
			
		ИначеЕсли Не ТочноеСовпадениеКПП Тогда
			
			ОрганизацииПоКПП = КППДляДанногоИНН[КПП];
			Если ТипЗнч(ОрганизацииПоКПП) = Тип("Массив")
				И ОрганизацииПоКПП.Количество() = 0 Тогда
				
				ОрганизацииСПустымКПП = КППДляДанногоИНН[""];
				Если ТипЗнч(ОрганизацииСПустымКПП) = Тип("Массив") Тогда
					ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОрганизацииТекущихДанных, ОрганизацииСПустымКПП);
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(ОрганизацииПоКПП) = Тип("Массив") Тогда
				
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОрганизацииТекущихДанных, ОрганизацииПоКПП);
				
			КонецЕсли;
			
		Иначе
			
			ОрганизацииПоКПП = КППДляДанногоИНН[КПП];
			Если ТипЗнч(ОрганизацииПоКПП) = Тип("Массив") Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОрганизацииТекущихДанных, ОрганизацииПоКПП);
			КонецЕсли;
			
		КонецЕсли;
		
		ОрганизацииТекущихДанных = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ОрганизацииТекущихДанных);
		
		Ключ = КлючДанныхОрганизации(ДанныеОрганизации);
		ОрганизацииПоДанным[Ключ] = ОрганизацииТекущихДанных;
		
	КонецЦикла;
	
	Возврат ОрганизацииПоДанным;
	
КонецФункции

// Новые данные для поиска контрагента.
// 
// Возвращаемое значение:
//  Структура:
//    * ИНН - Строка
//    * КПП - Строка
Функция НовыеДанныеДляПоискаКонтрагента() Экспорт
	
	ДанныеКонтрагента = Новый Структура;
	ДанныеКонтрагента.Вставить("ИНН", "");
	ДанныеКонтрагента.Вставить("КПП", "");
	
	Возврат ДанныеКонтрагента;
	
КонецФункции

// Найденные контрагенты по данным.
// 
// Параметры:
//  ДанныеКонтрагентов - Массив Из см. НовыеДанныеДляПоискаКонтрагента
//  ТочноеСовпадениеКПП - Булево - Если Истина, тогда возвращаем ссылку только по точному совпадению ИНН и КПП.
//                        Если Ложь и КПП передан, то сначала ищем по точному совпадению,
//                             если не нашли выдем по пустому КПП
//                        Если Ложь и КПП не передан, то выдаем ссылки по любому КПП
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//    * Ключ - см. КлючДанныхКонтрагента
//    * Значение - Массив Из СправочникСсылка.Контрагенты
//
Функция НайденныеКонтрагентыПоДанным(ДанныеКонтрагентов, ТочноеСовпадениеКПП = Ложь) Экспорт
	
	НаборИНН = Новый Массив(); // Массив Из Строка
	НаборКПП = Новый Массив(); // Массив Из Строка
	
	ЕстьПустыеКПП = Ложь;
	
	Для Каждого ДанныеКонтрагента Из ДанныеКонтрагентов Цикл
		
		Если Не ЗначениеЗаполнено(ДанныеКонтрагента.КПП) Тогда
			ЕстьПустыеКПП = Истина;
		КонецЕсли;
		
		НаборИНН.Добавить(ДанныеКонтрагента.ИНН);
		НаборКПП.Добавить(ДанныеКонтрагента.КПП);
		
	КонецЦикла;
	
	Если Не ТочноеСовпадениеКПП Тогда
		НаборКПП.Добавить("");
	КонецЕсли;
	
	Если Не ТочноеСовпадениеКПП И ЕстьПустыеКПП Тогда
		НаборКПП.Очистить();
	КонецЕсли;
	
	КПППоИНН = КонтрагентыДляИННИКПП(НаборИНН, НаборКПП);
	
	КонтрагентыПоДанным = Новый Соответствие();
	Для Каждого ДанныеКонтрагента Из ДанныеКонтрагентов Цикл
		
		ИНН = ДанныеКонтрагента.ИНН;
		КПП = ДанныеКонтрагента.КПП;
		
		КонтрагентыТекущихДанных = Новый Массив(); // Массив Из СправочникСсылка.Контрагенты
		
		КППДляДанногоИНН = КПППоИНН[ИНН];
		Если КППДляДанногоИНН = Неопределено Тогда
			Ключ = КлючДанныхКонтрагента(ДанныеКонтрагента);
			КонтрагентыПоДанным[Ключ] = КонтрагентыТекущихДанных;
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(КПП) И Не ТочноеСовпадениеКПП Тогда
			
			Для Каждого ЭлементКПП Из КППДляДанногоИНН Цикл
				
				КонтрагентыПоКПП = ЭлементКПП.Значение; // Массив Из СправочникСсылка.Контрагенты
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КонтрагентыТекущихДанных, КонтрагентыПоКПП);
				
			КонецЦикла;
			
		ИначеЕсли Не ТочноеСовпадениеКПП Тогда
			
			КонтрагентыПоКПП = КППДляДанногоИНН[КПП];
			Если ТипЗнч(КонтрагентыПоКПП) = Тип("Массив")
				И КонтрагентыПоКПП.Количество() = 0 Тогда
				
				КонтрагентыСПустымКПП = КППДляДанногоИНН[""];
				Если ТипЗнч(КонтрагентыСПустымКПП) = Тип("Массив") Тогда
					ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КонтрагентыТекущихДанных, КонтрагентыСПустымКПП);
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(КонтрагентыПоКПП) = Тип("Массив") Тогда
				
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КонтрагентыТекущихДанных, КонтрагентыПоКПП);
				
			КонецЕсли;
			
		Иначе
			
			КонтрагентыПоКПП = КППДляДанногоИНН[КПП];
			Если ТипЗнч(КонтрагентыПоКПП) = Тип("Массив") Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КонтрагентыТекущихДанных, КонтрагентыПоКПП);
			КонецЕсли;
			
		КонецЕсли;
		
		КонтрагентыТекущихДанных = ОбщегоНазначенияКлиентСервер.СвернутьМассив(КонтрагентыТекущихДанных);
		
		Ключ = КлючДанныхКонтрагента(ДанныеКонтрагента);
		КонтрагентыПоДанным[Ключ] = КонтрагентыТекущихДанных;
		
	КонецЦикла;
	
	Возврат КонтрагентыПоДанным;
	
КонецФункции

// Новые данные для поиска физлица.
// 
// Возвращаемое значение:
//  Структура:
//    * ИНН - Строка
//    * СНИЛС - Строка
Функция НовыеДанныеДляПоискаФизлица() Экспорт
	
	ДанныеФизЛица = Новый Структура;
	ДанныеФизЛица.Вставить("ИНН", "");
	ДанныеФизЛица.Вставить("СНИЛС", "");
	
	Возврат ДанныеФизЛица;
	
КонецФункции

// Найденные физлица по данным.
// 
// Параметры:
//  ДанныеФизлиц - Массив Из см. НовыеДанныеДляПоискаФизлица
//  ТочноеСовпадениеСНИЛС - Булево - Точное совпадение СНИЛС
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//    * Ключ - см. КлючДанныхФизлица
//    * Значение - Массив Из СправочникСсылка.ФизическиеЛица
Функция НайденныеФизлицаПоДанным(ДанныеФизлиц, ТочноеСовпадениеСНИЛС = Ложь) Экспорт
	
	НаборИНН = Новый Массив(); // Массив Из Строка
	НаборСНИЛС = Новый Массив(); // Массив Из Строка
	
	ЕстьПустыеСНИЛС = Ложь;
	
	Для Каждого ДанныеФизлица Из ДанныеФизлиц Цикл
		
		Если Не ЗначениеЗаполнено(ДанныеФизлица.СНИЛС) Тогда
			ЕстьПустыеСНИЛС = Истина;
		КонецЕсли;
		
		НаборИНН.Добавить(ДанныеФизлица.ИНН);
		НаборСНИЛС.Добавить(ДанныеФизлица.СНИЛС);
		
	КонецЦикла;
	
	Если Не ТочноеСовпадениеСНИЛС Тогда
		НаборСНИЛС.Добавить("");
	КонецЕсли;
	
	Если Не ТочноеСовпадениеСНИЛС И ЕстьПустыеСНИЛС Тогда
		НаборСНИЛС.Очистить();
	КонецЕсли;
	
	СНИЛСПоИНН = ФизлицаДляИННИСНИЛС(НаборИНН, НаборСНИЛС);
	
	ФизлицаПоДанным = Новый Соответствие();
	Для Каждого ДанныеФизлица Из ДанныеФизлиц Цикл
		
		ИНН = ДанныеФизлица.ИНН;
		СНИЛС = ДанныеФизлица.СНИЛС;
		
		ФизлицаТекущихДанных = Новый Массив(); // Массив Из СправочникСсылка.ФизическиеЛица
		
		СНИЛСДляДанногоИНН = СНИЛСПоИНН[ИНН];
		Если СНИЛСДляДанногоИНН = Неопределено Тогда
			Ключ = КлючДанныхФизлица(ДанныеФизлица);
			ФизлицаПоДанным[Ключ] = ФизлицаТекущихДанных;
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СНИЛС) И Не ТочноеСовпадениеСНИЛС Тогда
			
			Для Каждого ЭлементСНИЛС Из СНИЛСДляДанногоИНН Цикл
				
				ФизлицаПоСНИЛС = ЭлементСНИЛС.Значение; // Массив Из СправочникСсылка.ФизическиеЛица
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизлицаТекущихДанных, ФизлицаПоСНИЛС);
				
			КонецЦикла;
			
		ИначеЕсли Не ТочноеСовпадениеСНИЛС Тогда
			
			ФизлицаПоСНИЛС = СНИЛСДляДанногоИНН[СНИЛС];
			Если ТипЗнч(ФизлицаПоСНИЛС) = Тип("Массив")
				И ФизлицаПоСНИЛС.Количество() = 0 Тогда
				
				ФизлицаСПустымСНИЛС = СНИЛСДляДанногоИНН[""];
				Если ТипЗнч(ФизлицаСПустымСНИЛС) = Тип("Массив") Тогда
					ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизлицаТекущихДанных, ФизлицаСПустымСНИЛС);
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(ФизлицаПоСНИЛС) = Тип("Массив") Тогда
				
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизлицаТекущихДанных, ФизлицаПоСНИЛС);
				
			КонецЕсли;
			
		Иначе
			
			ФизлицаПоСНИЛС = СНИЛСДляДанногоИНН[СНИЛС];
			Если ТипЗнч(ФизлицаПоСНИЛС) = Тип("Массив") Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизлицаТекущихДанных, ФизлицаПоСНИЛС);
			КонецЕсли;
			
		КонецЕсли;
		
		ФизлицаТекущихДанных = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ФизлицаТекущихДанных);
		
		Ключ = КлючДанныхФизлица(ДанныеФизлица);
		ФизлицаПоДанным[Ключ] = ФизлицаТекущихДанных;
		
	КонецЦикла;
	
	Возврат ФизлицаПоДанным;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Ключ данных организации в формате <ИНН>_<КПП>
// 
// Параметры:
//  ДанныеОрганизации - см. НовыеДанныеДляПоискаОрганизации
// 
// Возвращаемое значение:
//  Строка
Функция КлючДанныхОрганизации(ДанныеОрганизации) Экспорт
	
	Возврат СтрШаблон("%1_%2", ДанныеОрганизации.ИНН, ДанныеОрганизации.КПП);
	
КонецФункции

// Ключ данных контрагента в формате <ИНН>_<КПП>
// 
// Параметры:
//  ДанныеКонтрагента - см. НовыеДанныеДляПоискаКонтрагента
// 
// Возвращаемое значение:
//  Строка
Функция КлючДанныхКонтрагента(ДанныеКонтрагента) Экспорт
	
	Возврат СтрШаблон("%1_%2", ДанныеКонтрагента.ИНН, ДанныеКонтрагента.КПП);
	
КонецФункции

// Ключ данных физлица в формате <ИНН>_<СНИЛС>.
// 
// Параметры:
//  ДанныеФизлица - см. НовыеДанныеДляПоискаФизлица
// 
// Возвращаемое значение:
//  Строка
Функция КлючДанныхФизлица(ДанныеФизлица) Экспорт
	
	Возврат СтрШаблон("%1_%2", ДанныеФизлица.ИНН, ДанныеФизлица.СНИЛС)
	
КонецФункции

// Ключ данных представителя в формате <ИНН>_<КПП>_<ОГРН>_<СНИЛС>.
// 
// Параметры:
//  ДанныеПредставителя - см. НовыеДанныеПредставителяМЧД
// 
// Возвращаемое значение:
//  Строка
Функция КлючДанныхПредставителя(ДанныеПредставителя) Экспорт
	
	Возврат СтрШаблон("%1_%2_%3_%4",
		ДанныеПредставителя.ИНН, ДанныеПредставителя.КПП, ДанныеПредставителя.ОГРН, ДанныеПредставителя.СНИЛС);
	
КонецФункции

// Новые данные доверителя доверенности.
// 
// Возвращаемое значение:
//  Структура:
//    * Ссылка - СправочникСсылка.Организации, СправочникСсылка.Контрагенты, СправочникСсылка.ФизическиеЛица -
//    * Представление - Строка
//    * ИНН - Строка
//    * КПП - Строка
//    * ОГРН - Строка
//    * СНИЛС - Строка
Функция НовыеДанныеДоверителяМЧД() Экспорт
	
	ДанныеДоверителя = Новый Структура;
	ДанныеДоверителя.Вставить("Ссылка", Справочники.Организации.ПустаяСсылка());
	ДанныеДоверителя.Вставить("Представление", "");
	ДанныеДоверителя.Вставить("ИНН", "");
	ДанныеДоверителя.Вставить("КПП", "");
	ДанныеДоверителя.Вставить("ОГРН", "");
	ДанныеДоверителя.Вставить("СНИЛС", "");
	
	Возврат ДанныеДоверителя;
	
КонецФункции

// Новые данные МЧД.
// 
// Возвращаемое значение:
//  Структура:
//    * Номер - Строка
//    * ДатаВыдачи - Дата
//    * ДатаОкончания - Дата
//    * СтатусВРеестреФНС - ПеречислениеСсылка.СтатусыМашиночитаемойДоверенностиВРеестреФНС
//    * Верна - Булево
//    * Отозвана - Булево
//    * ДатаОтзыва - Дата
//    * ПометкаУдаления - Булево
Функция НовыеДанныеМЧД() Экспорт
	
	ДанныеМЧД = Новый Структура;
	ДанныеМЧД.Вставить("Номер", "");
	ДанныеМЧД.Вставить("ДатаВыдачи", Дата(1, 1, 1));
	ДанныеМЧД.Вставить("ДатаОкончания", Дата(1, 1, 1));
	ДанныеМЧД.Вставить("СтатусВРеестреФНС", Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ПустаяСсылка());
	ДанныеМЧД.Вставить("Верна", Истина);
	ДанныеМЧД.Вставить("Отозвана", Ложь);
	ДанныеМЧД.Вставить("ДатаОтзыва", Дата(1, 1, 1));
	ДанныеМЧД.Вставить("ПометкаУдаления", Ложь);
	
	Возврат ДанныеМЧД;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// МЧД по типам данных в БД.
// 
// Параметры:
//  Доверенности - Массив Из ОпределяемыйТип.МашиночитаемаяДоверенность
// 
// Возвращаемое значение:
//  Структура:
//    * МЧДОрганизаций002 - Массив Из СправочникСсылка.МашиночитаемыеДоверенностиОрганизаций
//    * МЧДКонтрагентов002 - Массив Из СправочникСсылка.МашиночитаемыеДоверенностиКонтрагентов
//    * МЧД003 - Массив Из СправочникСсылка.МЧД003
Функция МЧДПоТипам(Доверенности)
	
	МЧДОрганизаций002 = Новый Массив(); // Массив Из СправочникСсылка.МашиночитаемыеДоверенностиОрганизаций
	МЧДКонтрагентов002 = Новый Массив(); // Массив Из СправочникСсылка.МашиночитаемыеДоверенностиКонтрагентов
	МЧД003 = Новый Массив(); // Массив Из СправочникСсылка.МЧД003
	
	Для Каждого Доверенность Из Доверенности Цикл
		Если ТипЗнч(Доверенность) = Тип("СправочникСсылка.МашиночитаемыеДоверенностиОрганизаций") Тогда
			МЧДОрганизаций002.Добавить(Доверенность);
		ИначеЕсли ТипЗнч(Доверенность) = Тип("СправочникСсылка.МашиночитаемыеДоверенностиКонтрагентов") Тогда
			МЧДКонтрагентов002.Добавить(Доверенность);
		ИначеЕсли ТипЗнч(Доверенность) = Тип("СправочникСсылка.МЧД003") Тогда
			МЧД003.Добавить(Доверенность);
		КонецЕсли;
	КонецЦикла;
	
	МЧДПоТипам = Новый Структура;
	МЧДПоТипам.Вставить("МЧДОрганизаций002", МЧДОрганизаций002);
	МЧДПоТипам.Вставить("МЧДКонтрагентов002", МЧДКонтрагентов002);
	МЧДПоТипам.Вставить("МЧД003", МЧД003);
	
	Возврат МЧДПоТипам;
	
КонецФункции

#Область ДанныеМЧД

// Выборки реквизитов МЧД.
// 
// Параметры:
//  МЧДПоТипам - см. МЧДПоТипам
// 
// Возвращаемое значение:
//  Структура - Выборки ревизитов МЧД:
//  * МЧДОрганизаций002 - ВыборкаИзРезультатаЗапроса:
//    ** Доверенность - СправочникСсылка.МашиночитаемыеДоверенностиОрганизаций
//    ** НомерДоверенности - Строка
//    ** ДатаВыдачи - Дата
//    ** ДатаОкончания - Дата
//    ** СтатусВРеестреФНС - ПеречислениеСсылка.СтатусыМашиночитаемойДоверенностиВРеестреФНС
//    ** Верна - Булево
//    ** Отозвана - Булево
//    ** ДатаОтзыва - Дата
//    ** ПометкаУдаления - Булево
//  * МЧДКонтрагентов002 - ВыборкаИзРезультатаЗапроса:
//    ** Доверенность - СправочникСсылка.МашиночитаемыеДоверенностиКонтрагентов
//    ** НомерДоверенности - Строка
//    ** ДатаВыдачи - Дата
//    ** ДатаОкончания - Дата
//    ** СтатусВРеестреФНС - ПеречислениеСсылка.СтатусыМашиночитаемойДоверенностиВРеестреФНС
//    ** Верна - Булево
//    ** Отозвана - Булево
//    ** ДатаОтзыва - Дата
//    ** ПометкаУдаления - Булево
//  * МЧД003 - ВыборкаИзРезультатаЗапроса:
//    ** Доверенность - СправочникСсылка.МЧД003
//    ** НомерДоверенности - Строка
//    ** ДатаВыдачи - Дата
//    ** СрокДействия - Дата
//    ** СтатусВРеестреФНС - ПеречислениеСсылка.СтатусыМашиночитаемойДоверенностиВРеестреФНС
//    ** Верна - Булево
//    ** ДатаПрекращения - Дата
//    ** ПометкаУдаления - Булево
//
Функция ВыборкиРеквизитовМЧД(МЧДПоТипам)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МашиночитаемыеДоверенностиОрганизаций.Ссылка КАК Доверенность,
		|	МашиночитаемыеДоверенностиОрганизаций.НомерДоверенности КАК НомерДоверенности,
		|	МашиночитаемыеДоверенностиОрганизаций.ДатаВыдачи КАК ДатаВыдачи,
		|	МашиночитаемыеДоверенностиОрганизаций.ДатаОкончания КАК ДатаОкончания,
		|	МашиночитаемыеДоверенностиОрганизаций.СтатусВРеестреФНС КАК СтатусВРеестреФНС,
		|	МашиночитаемыеДоверенностиОрганизаций.Верна КАК Верна,
		|	МашиночитаемыеДоверенностиОрганизаций.Отозвана КАК Отозвана,
		|	МашиночитаемыеДоверенностиОрганизаций.ДатаОтзыва КАК ДатаОтзыва,
		|	МашиночитаемыеДоверенностиОрганизаций.ПометкаУдаления КАК ПометкаУдаления
		|ИЗ
		|	Справочник.МашиночитаемыеДоверенностиОрганизаций КАК МашиночитаемыеДоверенностиОрганизаций
		|ГДЕ
		|	МашиночитаемыеДоверенностиОрганизаций.Ссылка В (&МЧДОрганизаций002)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МашиночитаемыеДоверенностиКонтрагентов.Ссылка КАК Доверенность,
		|	МашиночитаемыеДоверенностиКонтрагентов.НомерДоверенности КАК НомерДоверенности,
		|	МашиночитаемыеДоверенностиКонтрагентов.ДатаВыдачи КАК ДатаВыдачи,
		|	МашиночитаемыеДоверенностиКонтрагентов.ДатаОкончания КАК ДатаОкончания,
		|	МашиночитаемыеДоверенностиКонтрагентов.СтатусВРеестреФНС КАК СтатусВРеестреФНС,
		|	МашиночитаемыеДоверенностиКонтрагентов.Верна КАК Верна,
		|	МашиночитаемыеДоверенностиКонтрагентов.Отозвана КАК Отозвана,
		|	МашиночитаемыеДоверенностиКонтрагентов.ДатаОтзыва КАК ДатаОтзыва,
		|	МашиночитаемыеДоверенностиКонтрагентов.ПометкаУдаления КАК ПометкаУдаления
		|ИЗ
		|	Справочник.МашиночитаемыеДоверенностиКонтрагентов КАК МашиночитаемыеДоверенностиКонтрагентов
		|ГДЕ
		|	МашиночитаемыеДоверенностиКонтрагентов.Ссылка В (&МЧДКонтрагентов002)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МЧД003.Ссылка КАК Доверенность,
		|	МЧД003.НомерДоверенности КАК НомерДоверенности,
		|	МЧД003.ДатаВыдачи КАК ДатаВыдачи,
		|	МЧД003.СрокДействия КАК СрокДействия,
		|	МЧД003.СтатусВРеестреФНС КАК СтатусВРеестреФНС,
		|	МЧД003.Верна КАК Верна,
		|	МЧД003.ДатаПрекращения КАК ДатаПрекращения,
		|	МЧД003.ПометкаУдаления КАК ПометкаУдаления
		|ИЗ
		|	Справочник.МЧД003 КАК МЧД003
		|ГДЕ
		|	МЧД003.Ссылка В (&МЧД003)";
	Запрос.УстановитьПараметр("МЧДОрганизаций002", МЧДПоТипам.МЧДОрганизаций002);
	Запрос.УстановитьПараметр("МЧДКонтрагентов002", МЧДПоТипам.МЧДКонтрагентов002);
	Запрос.УстановитьПараметр("МЧД003", МЧДПоТипам.МЧД003);
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаМЧДОрганизаций002 = РезультатыЗапросов[0].Выбрать();
	ВыборкаМЧДКонтрагентов002 = РезультатыЗапросов[1].Выбрать();
	ВыборкаМЧД003 = РезультатыЗапросов[2].Выбрать();
	
	ВыборкиРеквизитовМЧД = Новый Структура;
	ВыборкиРеквизитовМЧД.Вставить("МЧДОрганизаций002", ВыборкаМЧДОрганизаций002);
	ВыборкиРеквизитовМЧД.Вставить("МЧДКонтрагентов002", ВыборкаМЧДКонтрагентов002);
	ВыборкиРеквизитовМЧД.Вставить("МЧД003", ВыборкаМЧД003);
	
	Возврат ВыборкиРеквизитовМЧД;
	
КонецФункции

#КонецОбласти

#Область ДоверителиДоверенностей

// Ключ доверителя.
// 
// Параметры:
//  ИНН - Строка - ИНН
//  КПП - Строка - КПП
//  ОГРН - Строка - ОГРН
//  СНИЛС - Строка - СНИЛС
// 
// Возвращаемое значение:
//  Строка - Ключ доверителя
Функция КлючДоверителя(ИНН, КПП, ОГРН, СНИЛС)
	
	Возврат СтрШаблон("%1_%2_%3_%4",
		ИНН, КПП, ОГРН, СНИЛС);
	
КонецФункции

// Данные доверителей по реквизитам МЧД.
// 
// Параметры:
//  МЧДПоТипам - см. МЧДПоТипам
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//    * Ключ - ОпределяемыйТип.МашиночитаемаяДоверенность
//    * Значение - Соответствие Из КлючИЗначение:
//      ** Ключ - Строка
//      ** Значение - см. НовыеДанныеДоверителяМЧД
Функция ДанныеДоверителейПоРеквизитамМЧД(МЧДПоТипам)
	
	ДанныеДоверителей = Новый Соответствие();
	Для Каждого МЧД Из МЧДПоТипам.МЧДОрганизаций002 Цикл
		ДанныеДоверителей[МЧД] = Новый Соответствие();
	КонецЦикла;
	Для Каждого МЧД Из МЧДПоТипам.МЧДКонтрагентов002 Цикл
		ДанныеДоверителей[МЧД] = Новый Соответствие();
	КонецЦикла;
	Для Каждого МЧД Из МЧДПоТипам.МЧД003 Цикл
		ДанныеДоверителей[МЧД] = Новый Соответствие();
	КонецЦикла;
	
	ВыборкиРеквизитовМЧД = ВыборкиРевизитовДоверителейМЧД(МЧДПоТипам);
	ВыборкаМЧДОрганизаций002 = ВыборкиРеквизитовМЧД.МЧДОрганизаций002;
	ВыборкаМЧДКонтрагентов002 = ВыборкиРеквизитовМЧД.МЧДКонтрагентов002;
	ВыборкаМЧД003 = ВыборкиРеквизитовМЧД.МЧД003;
	
	Пока ВыборкаМЧДОрганизаций002.Следующий() Цикл
		
		МЧД = ВыборкаМЧДОрганизаций002.Доверенность;
		ДанныеДоверителейМЧД = ДанныеДоверителей[МЧД]; // Соответствие
		
		Если ЗначениеЗаполнено(ВыборкаМЧДОрганизаций002.ЮЛ_ИНН) Тогда
			ИНН = ВыборкаМЧДОрганизаций002.ЮЛ_ИНН;
			КПП = ВыборкаМЧДОрганизаций002.ЮЛ_КПП;
			ОГРН = ВыборкаМЧДОрганизаций002.ЮЛ_ОГРН;
			СНИЛС = "";
		Иначе
			ИНН = ВыборкаМЧДОрганизаций002.ФЛ_ИНН;
			КПП = "";
			ОГРН = ВыборкаМЧДОрганизаций002.ФЛ_ОГРН;
			СНИЛС = ВыборкаМЧДОрганизаций002.ФЛ_СНИЛС;
		КонецЕсли;
		
		ДанныеДоверителя = НовыеДанныеДоверителяМЧД();
		ДанныеДоверителя.ИНН = ИНН;
		ДанныеДоверителя.КПП = КПП;
		ДанныеДоверителя.ОГРН = ОГРН;
		ДанныеДоверителя.СНИЛС = СНИЛС;
		
		Если ЗначениеЗаполнено(ВыборкаМЧДОрганизаций002.Организация) Тогда
			ДанныеДоверителя.Ссылка = ВыборкаМЧДОрганизаций002.Организация;
			ДанныеДоверителя.Представление = ВыборкаМЧДОрганизаций002.ОрганизацияПредставление;
		КонецЕсли;
		
		КлючДоверителя = КлючДоверителя(ИНН, КПП, ОГРН, СНИЛС);
		ДанныеДоверителейМЧД.Вставить(КлючДоверителя, ДанныеДоверителя);
		
	КонецЦикла;
	
	Пока ВыборкаМЧДКонтрагентов002.Следующий() Цикл
		
		МЧД = ВыборкаМЧДКонтрагентов002.Доверенность;
		ДанныеДоверителейМЧД = ДанныеДоверителей[МЧД]; // Соответствие
		
		ДанныеДоверителя = НовыеДанныеДоверителяМЧД();
		ДанныеДоверителя.Представление = ВыборкаМЧДКонтрагентов002.ПредставлениеДоверителя;
		ДанныеДоверителя.ИНН = ВыборкаМЧДКонтрагентов002.ИНН;
		
		КлючДоверителя = КлючДоверителя(ДанныеДоверителя.ИНН, "", "", "");
		ДанныеДоверителейМЧД.Вставить(КлючДоверителя, ДанныеДоверителя);
		
	КонецЦикла;
	
	Пока ВыборкаМЧД003.Следующий() Цикл
		
		МЧД = ВыборкаМЧД003.Доверенность;
		ДанныеДоверителейМЧД = ДанныеДоверителей[МЧД]; // Соответствие
		
		ДанныеДоверителя = НовыеДанныеДоверителяМЧД();
		ДанныеДоверителя.ИНН = ВыборкаМЧД003.ИНН;
		ДанныеДоверителя.КПП = ВыборкаМЧД003.КПП;
		ДанныеДоверителя.ОГРН = ВыборкаМЧД003.ОГРН;
		ДанныеДоверителя.СНИЛС = ВыборкаМЧД003.СНИЛС;
		
		КлючДоверителя = КлючДоверителя(ДанныеДоверителя.ИНН, ДанныеДоверителя.КПП,
			ДанныеДоверителя.ОГРН, ДанныеДоверителя.СНИЛС);
		ДанныеДоверителейМЧД.Вставить(КлючДоверителя, ДанныеДоверителя);
		
	КонецЦикла;
	
	Возврат ДанныеДоверителей;
	
КонецФункции

// Выборки ревизитов МЧД.
// 
// Параметры:
//  МЧДПоТипам - см. МЧДПоТипам
// 
// Возвращаемое значение:
//  Структура - Выборки ревизитов МЧД:
//  * МЧДОрганизаций002 - ВыборкаИзРезультатаЗапроса:
//    ** Доверенность - СправочникСсылка.МашиночитаемыеДоверенностиОрганизаций
//    ** Организация - СправочникСсылка.Организации
//    ** ОрганизацияПредставление - Строка
//    ** ЮЛ_Наименование - Строка
//    ** ЮЛ_ИНН - Строка
//    ** ЮЛ_КПП - Строка
//    ** ЮЛ_ОГРН - Строка
//    ** ФЛ_ИНН - Строка
//    ** ФЛ_ОГРН - Строка
//    ** ФЛ_СНИЛС - Строка
//  * МЧДКонтрагентов002 - ВыборкаИзРезультатаЗапроса:
//    ** Доверенность - СправочникСсылка.МашиночитаемыеДоверенностиКонтрагентов
//    ** ПредставлениеДоверителя - Строка
//    ** ИНН - Строка
//  * МЧД003 - ВыборкаИзРезультатаЗапроса:
//    ** Доверенность - СправочникСсылка.МЧД003
//    ** ИНН - Строка
//    ** КПП - Строка
//    ** ОГРН - Строка
//    ** СНИЛС - Строка
//
Функция ВыборкиРевизитовДоверителейМЧД(МЧДПоТипам)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МашиночитаемыеДоверенностиОрганизаций.Ссылка КАК Доверенность,
		|	МашиночитаемыеДоверенностиОрганизаций.Организация КАК Организация,
		|	ПРЕДСТАВЛЕНИЕ(МашиночитаемыеДоверенностиОрганизаций.Организация) КАК ОрганизацияПредставление,
		|	МашиночитаемыеДоверенностиОрганизаций.ДоверительЮЛ_НаимОрг КАК ЮЛ_Наименование,
		|	МашиночитаемыеДоверенностиОрганизаций.ДоверительЮЛ_ИНН КАК ЮЛ_ИНН,
		|	МашиночитаемыеДоверенностиОрганизаций.ДоверительЮЛ_КПП КАК ЮЛ_КПП,
		|	МашиночитаемыеДоверенностиОрганизаций.ДоверительЮЛ_ОГРН КАК ЮЛ_ОГРН,
		|	МашиночитаемыеДоверенностиОрганизаций.ДоверительФЛ_ИНН КАК ФЛ_ИНН,
		|	МашиночитаемыеДоверенностиОрганизаций.ДоверительФЛ_ОГРН КАК ФЛ_ОГРН,
		|	МашиночитаемыеДоверенностиОрганизаций.ДоверительФЛ_СНИЛС КАК ФЛ_СНИЛС
		|ИЗ
		|	Справочник.МашиночитаемыеДоверенностиОрганизаций КАК МашиночитаемыеДоверенностиОрганизаций
		|ГДЕ
		|	МашиночитаемыеДоверенностиОрганизаций.Ссылка В (&МЧДОрганизаций002)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МашиночитаемыеДоверенностиКонтрагентов.Ссылка КАК Доверенность,
		|	МашиночитаемыеДоверенностиКонтрагентов.Доверитель КАК ПредставлениеДоверителя,
		|	МашиночитаемыеДоверенностиКонтрагентов.ДоверительИНН КАК ИНН
		|ИЗ
		|	Справочник.МашиночитаемыеДоверенностиКонтрагентов КАК МашиночитаемыеДоверенностиКонтрагентов
		|ГДЕ
		|	МашиночитаемыеДоверенностиКонтрагентов.Ссылка В (&МЧДКонтрагентов002)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МЧД003Доверители.Ссылка КАК Доверенность,
		|	МЧД003Доверители.ИНН КАК ИНН,
		|	МЧД003Доверители.КПП КАК КПП,
		|	МЧД003Доверители.ОГРН КАК ОГРН,
		|	МЧД003Доверители.СНИЛС КАК СНИЛС
		|ИЗ
		|	Справочник.МЧД003.Доверители КАК МЧД003Доверители
		|ГДЕ
		|	МЧД003Доверители.Ссылка В (&МЧД003)";
	Запрос.УстановитьПараметр("МЧДОрганизаций002", МЧДПоТипам.МЧДОрганизаций002);
	Запрос.УстановитьПараметр("МЧДКонтрагентов002", МЧДПоТипам.МЧДКонтрагентов002);
	Запрос.УстановитьПараметр("МЧД003", МЧДПоТипам.МЧД003);
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаМЧДОрганизаций002 = РезультатыЗапросов[0].Выбрать();
	ВыборкаМЧДКонтрагентов002 = РезультатыЗапросов[1].Выбрать();
	ВыборкаМЧД003 = РезультатыЗапросов[2].Выбрать();
	
	ВыборкиРеквизитовМЧД = Новый Структура;
	ВыборкиРеквизитовМЧД.Вставить("МЧДОрганизаций002", ВыборкаМЧДОрганизаций002);
	ВыборкиРеквизитовМЧД.Вставить("МЧДКонтрагентов002", ВыборкаМЧДКонтрагентов002);
	ВыборкиРеквизитовМЧД.Вставить("МЧД003", ВыборкаМЧД003);
	
	Возврат ВыборкиРеквизитовМЧД;
	
КонецФункции

// Данные данные доверителей без ссылки.
// 
// Параметры:
//  ДанныеДоверителейПоРеквизитам - см. ДанныеДоверителейПоРеквизитамМЧД
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//    * Ключ - см. КлючДоверителя
//    * Значение - см. НовыеДанныеДоверителяМЧД
Функция ДанныеДоверителейМЧДБезСсылки(ДанныеДоверителейПоРеквизитам)
	
	ДанныеДоверителейНезаполненные = Новый Соответствие();
	
	Для Каждого ЭлементМЧД Из ДанныеДоверителейПоРеквизитам Цикл
		
		ДанныеДоверителейМЧД = ЭлементМЧД.Значение;
		
		Для Каждого ЭлементМЧД Из ДанныеДоверителейМЧД Цикл
			
			КлючДоверителя = ЭлементМЧД.Ключ;
			ДанныеДоверителя = ЭлементМЧД.Значение;
			
			Если Не ЗначениеЗаполнено(ДанныеДоверителя.Ссылка) Тогда
				
				ДанныеДоверителейНезаполненные[КлючДоверителя] = ДанныеДоверителя;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ДанныеДоверителейНезаполненные;
	
КонецФункции

// Ссылки доверителей МЧД.
// 
// Параметры:
//  ДанныеДоверителейБезСсылки - см. ДанныеДоверителейМЧДБезСсылки
// 
// Возвращаемое значение:
//  Структура:
//    * Организации - см. НайденныеОрганизацииПоДанным
//    * Контрагенты - см. НайденныеКонтрагентыПоДанным
//    * Физлица - см. НайденныеФизлицаПоДанным
//
Функция СсылкиДоверителейМЧД(ДанныеДоверителейБезСсылки)
	
	ДанныеОрганизацийДляПоиска = Новый Массив(); // Массив Из см. НовыеДанныеДляПоискаОрганизации
	ДанныеКонтрагентовДляПоиска = Новый Массив(); // Массив Из см. НовыеДанныеДляПоискаКонтрагента
	ДанныеФизлицДляПоиска = Новый Массив(); // Массив Из см. НовыеДанныеДляПоискаФизлица
	
	Для Каждого Элемент Из ДанныеДоверителейБезСсылки Цикл
		
		ДанныеДоверителя = Элемент.Значение; // см. НовыеДанныеДоверителяМЧД
		
		ДанныеОрганизации = НовыеДанныеДляПоискаОрганизации();
		ДанныеОрганизации.ИНН = ДанныеДоверителя.ИНН;
		ДанныеОрганизации.КПП = ДанныеДоверителя.КПП;
		ДанныеОрганизацийДляПоиска.Добавить(ДанныеОрганизации);
		
		ДанныеКонтагента = НовыеДанныеДляПоискаКонтрагента();
		ДанныеКонтагента.ИНН = ДанныеДоверителя.ИНН;
		ДанныеКонтагента.КПП = ДанныеДоверителя.КПП;
		ДанныеКонтрагентовДляПоиска.Добавить(ДанныеКонтагента);
		
		ДанныеФизлица = НовыеДанныеДляПоискаФизлица();
		ДанныеФизлица.ИНН = ДанныеДоверителя.ИНН;
		ДанныеФизлица.СНИЛС = ДанныеДоверителя.СНИЛС;
		ДанныеФизлицДляПоиска.Добавить(ДанныеФизлица);
		
	КонецЦикла;
	
	НайденныеОрганизации = НайденныеОрганизацииПоДанным(ДанныеОрганизацийДляПоиска);
	НайденныеКонтрагенты = НайденныеКонтрагентыПоДанным(ДанныеКонтрагентовДляПоиска);
	НайденныеФизлица = НайденныеФизлицаПоДанным(ДанныеФизлицДляПоиска);
	
	Результат = Новый Структура;
	Результат.Вставить("Организации", НайденныеОрганизации);
	Результат.Вставить("Контрагенты", НайденныеКонтрагенты);
	Результат.Вставить("Физлица", НайденныеФизлица);
	
	Возврат Результат;
	
КонецФункции

// Возвращает представление доверителя МЧД
// 
// Параметры:
//  ДанныеДоверителя - см. НовыеДанныеДоверителяМЧД
// 
// Возвращаемое значение:
//  Строка
Функция ПредставлениеДоверителяМЧД(ДанныеДоверителя)
	
	Если ЗначениеЗаполнено(ДанныеДоверителя.Ссылка) Тогда
		Возврат Строка(ДанныеДоверителя.Ссылка);
	КонецЕсли;
	
	ЧастиПредставления = Новый Массив(); // Массив Из Строка
	
	Если ЗначениеЗаполнено(ДанныеДоверителя.ИНН) Тогда
		ЧастиПредставления.Добавить(СтрШаблон(НСтр("ru = 'ИНН - %1'"), ДанныеДоверителя.ИНН));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеДоверителя.КПП) Тогда
		ЧастиПредставления.Добавить(СтрШаблон(НСтр("ru = 'КПП - %1'"), ДанныеДоверителя.КПП));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеДоверителя.ОГРН) Тогда
		ЧастиПредставления.Добавить(СтрШаблон(НСтр("ru = 'ОГРН - %1'"), ДанныеДоверителя.ОГРН));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеДоверителя.СНИЛС) Тогда
		ЧастиПредставления.Добавить(СтрШаблон(НСтр("ru = 'СНИЛС - %1'"), ДанныеДоверителя.СНИЛС));
	КонецЕсли;
	
	Возврат СтрШаблон("(%1)",
		СтрСоединить(ЧастиПредставления, ", "));
	
КонецФункции

#КонецОбласти

#Область ПредставителиМЧД

// МЧДРазных типов по ИННПредставителей.
// 
// Параметры:
//  ДанныеПредставителей - Массив Из см. НовыеДанныеПредставителяМЧД
// 
// Возвращаемое значение:
//  Структура:
//    * МЧДОрганизаций002 - Соответствие Из КлючИЗначение:
//      ** Ключ - Строка - ИНН
//      ** Значение - Массив Из см. НовыеДанныеПредставителяМЧДПоЗаданномуИНН
//    * МЧДКонтрагентов002 - Соответствие Из КлючИЗначение:
//      ** Ключ - Строка - ИНН
//      ** Значение - Массив Из см. НовыеДанныеПредставителяМЧДПоЗаданномуИНН
//    * МЧД003 - Соответствие Из КлючИЗначение:
//      ** Ключ - Строка - ИНН
//      ** Значение - Массив Из см. НовыеДанныеПредставителяМЧДПоЗаданномуИНН
//
Функция МЧДРазныхТиповПоИННПредставителей(ДанныеПредставителей)
	
	НаборИНН = Новый Массив(); // Массив Из Строка
	Для Каждого ДанныеПредставителя Из ДанныеПредставителей Цикл
		НаборИНН.Добавить(ДанныеПредставителя.ИНН);
	КонецЦикла;
	
	Выборки = ВыборкиМЧДПоНаборуИННПредставителей(НаборИНН);
	
	ДанныеМЧДОрганизаций002 = Новый Соответствие();
	Пока Выборки.МЧДОрганизаций002.Следующий() Цикл
		
		МЧДОрганизации002 = Выборки.МЧДОрганизаций002.Доверенность;
		ИНН = Выборки.МЧДОрганизаций002.ИНН;
		КПП = Выборки.МЧДОрганизаций002.КПП;
		ОГРН = Выборки.МЧДОрганизаций002.ОГРН;
		СНИЛС = Выборки.МЧДОрганизаций002.СНИЛС;
		
		ДанныеПоИНН = ДанныеМЧДОрганизаций002[ИНН]; // Массив Из см. НовыеДанныеПредставителяМЧДПоЗаданномуИНН
		Если ДанныеПоИНН = Неопределено Тогда
			ДанныеПоИНН = Новый Массив(); // Массив Из см. НовыеДанныеПредставителяМЧДПоЗаданномуИНН
			ДанныеМЧДОрганизаций002[ИНН] = ДанныеПоИНН;
		КонецЕсли;
		
		ДанныеДоверенности = НовыеДанныеПредставителяМЧДПоЗаданномуИНН();
		ДанныеДоверенности.Доверенность = МЧДОрганизации002;
		ДанныеДоверенности.КПП = КПП;
		ДанныеДоверенности.ОГРН = ОГРН;
		ДанныеДоверенности.СНИЛС = СНИЛС;
		
		ДанныеПоИНН.Добавить(ДанныеДоверенности);
		
	КонецЦикла;
	
	ДанныеМЧДКонтрагентов002 = Новый Соответствие();
	Пока Выборки.МЧДКонтрагентов002.Следующий() Цикл
		
		МЧДКонтрагента002 = Выборки.МЧДКонтрагентов002.Доверенность;
		ИНН = Выборки.МЧДКонтрагентов002.ИНН;
		
		ДанныеПоИНН = ДанныеМЧДКонтрагентов002[ИНН]; // Массив Из см. НовыеДанныеПредставителяМЧДПоЗаданномуИНН
		Если ДанныеПоИНН = Неопределено Тогда
			ДанныеПоИНН = Новый Массив(); // Массив Из см. НовыеДанныеПредставителяМЧДПоЗаданномуИНН
			ДанныеМЧДКонтрагентов002[ИНН] = ДанныеПоИНН;
		КонецЕсли;
		
		ДанныеДоверенности = НовыеДанныеПредставителяМЧДПоЗаданномуИНН();
		ДанныеДоверенности.Доверенность = МЧДКонтрагента002;
		
		ДанныеПоИНН.Добавить(ДанныеДоверенности);
		
	КонецЦикла;
	
	ДанныеМЧД003 = Новый Соответствие();
	Пока Выборки.МЧД003.Следующий() Цикл
		
		МЧД003 = Выборки.МЧД003.Доверенность;
		ИНН = Выборки.МЧД003.ИНН;
		КПП = Выборки.МЧД003.КПП;
		ОГРН = Выборки.МЧД003.ОГРН;
		СНИЛС = Выборки.МЧД003.СНИЛС;
		
		ДанныеПоИНН = ДанныеМЧД003[ИНН]; // Массив Из см. НовыеДанныеПредставителяМЧДПоЗаданномуИНН
		Если ДанныеПоИНН = Неопределено Тогда
			ДанныеПоИНН = Новый Массив(); // Массив Из см. НовыеДанныеПредставителяМЧДПоЗаданномуИНН
			ДанныеМЧД003[ИНН] = ДанныеПоИНН;
		КонецЕсли;
		
		ДанныеДоверенности = НовыеДанныеПредставителяМЧДПоЗаданномуИНН();
		ДанныеДоверенности.Доверенность = МЧД003;
		ДанныеДоверенности.КПП = КПП;
		ДанныеДоверенности.ОГРН = ОГРН;
		ДанныеДоверенности.СНИЛС = СНИЛС;
		
		ДанныеПоИНН.Добавить(ДанныеДоверенности);
		
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("МЧДОрганизаций002", ДанныеМЧДОрганизаций002);
	Результат.Вставить("МЧДКонтрагентов002", ДанныеМЧДКонтрагентов002);
	Результат.Вставить("МЧД003", ДанныеМЧД003);
	
	Возврат Результат;
	
КонецФункции

// Новые данные представителя МЧДПо заданному ИНН.
// 
// Возвращаемое значение:
//  Структура - Новые данные представителя МЧДПо заданному ИНН:
//    * Доверенность - ОпределяемыйТип.МашиночитаемаяДоверенность
//    * КПП - Строка
//    * ОГРН - Строка
//    * СНИЛС - Строка
Функция НовыеДанныеПредставителяМЧДПоЗаданномуИНН()
	
	ДанныеПредставителя = Новый Структура;
	ДанныеПредставителя.Вставить("Доверенность", Справочники.МЧД003.ПустаяСсылка());
	ДанныеПредставителя.Вставить("КПП", "");
	ДанныеПредставителя.Вставить("ОГРН", "");
	ДанныеПредставителя.Вставить("СНИЛС", "");
	
	Возврат ДанныеПредставителя;
	
КонецФункции

// Выборки МЧД по данным представителей.
// 
// Параметры:
//  НаборИНН - Массив Из Строка
// 
// Возвращаемое значение:
//  Структура:
//    * МЧДОрганизаций002 - ВыборкаИзРезультатаЗапроса:
//      ** Доверенность - СправочникСсылка.МашиночитаемыеДоверенностиОрганизаций
//      ** ИНН - Строка
//      ** КПП - Строка
//      ** ОГРН - Строка
//      ** СНИЛС - Строка
//    * МЧДКонтрагентов002 - ВыборкаИзРезультатаЗапроса:
//      ** Доверенность - СправочникСсылка.МашиночитаемыеДоверенностиКонтрагентов
//      ** ИНН - Строка
//    * МЧД003 - ВыборкаИзРезультатаЗапроса:
//      ** Доверенность - СправочникСсылка.МЧД003
//      ** ИНН - Строка
//      ** КПП - Строка
//      ** ОГРН - Строка
//      ** СНИЛС - Строка
//
Функция ВыборкиМЧДПоНаборуИННПредставителей(НаборИНН)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МашиночитаемыеДоверенностиОрганизацийПредставители.Ссылка КАК Доверенность,
		|	МашиночитаемыеДоверенностиОрганизацийПредставители.ЮЛ_ИНН КАК ИНН,
		|	МашиночитаемыеДоверенностиОрганизацийПредставители.ЮЛ_КПП КАК КПП,
		|	МашиночитаемыеДоверенностиОрганизацийПредставители.ЮЛ_ОГРН КАК ОГРН,
		|	"""" КАК СНИЛС
		|ИЗ
		|	Справочник.МашиночитаемыеДоверенностиОрганизаций.Представители КАК МашиночитаемыеДоверенностиОрганизацийПредставители
		|ГДЕ
		|	МашиночитаемыеДоверенностиОрганизацийПредставители.ФЛ_ИНН = """"
		|	И МашиночитаемыеДоверенностиОрганизацийПредставители.ЮЛ_ИНН В (&НаборИНН)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МашиночитаемыеДоверенностиОрганизацийПредставители.Ссылка,
		|	МашиночитаемыеДоверенностиОрганизацийПредставители.ФЛ_ИНН,
		|	"""" КАК КПП,
		|	МашиночитаемыеДоверенностиОрганизацийПредставители.ФЛ_ОГРН,
		|	МашиночитаемыеДоверенностиОрганизацийПредставители.ФЛ_СНИЛС
		|ИЗ
		|	Справочник.МашиночитаемыеДоверенностиОрганизаций.Представители КАК МашиночитаемыеДоверенностиОрганизацийПредставители
		|ГДЕ
		|	МашиночитаемыеДоверенностиОрганизацийПредставители.ЮЛ_ИНН = """"
		|	И МашиночитаемыеДоверенностиОрганизацийПредставители.ФЛ_ИНН В (&НаборИНН)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МашиночитаемыеДоверенностиКонтрагентовПредставители.Ссылка КАК Доверенность,
		|	МашиночитаемыеДоверенностиКонтрагентовПредставители.ПредставительИНН КАК ИНН
		|ИЗ
		|	Справочник.МашиночитаемыеДоверенностиКонтрагентов.Представители КАК
		|		МашиночитаемыеДоверенностиКонтрагентовПредставители
		|ГДЕ
		|	МашиночитаемыеДоверенностиКонтрагентовПредставители.ПредставительИНН В (&НаборИНН)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МЧД003Представители.Ссылка КАК Доверенность,
		|	МЧД003Представители.ИНН КАК ИНН,
		|	МЧД003Представители.КПП КАК КПП,
		|	МЧД003Представители.ОГРН КАК ОГРН,
		|	МЧД003Представители.СНИЛС КАК СНИЛС
		|ИЗ
		|	Справочник.МЧД003.Представители КАК МЧД003Представители
		|ГДЕ
		|	МЧД003Представители.ИНН В (&НаборИНН)";
	Запрос.УстановитьПараметр("НаборИНН", НаборИНН);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаМЧДОрганизаций002 = РезультатыЗапроса[0].Выбрать();
	ВыборкаМЧДКонтрагентов002 = РезультатыЗапроса[1].Выбрать();
	ВыборкаМЧД003 = РезультатыЗапроса[2].Выбрать();
	
	Выборки = Новый Структура;
	Выборки.Вставить("МЧДОрганизаций002", ВыборкаМЧДОрганизаций002);
	Выборки.Вставить("МЧДКонтрагентов002", ВыборкаМЧДКонтрагентов002);
	Выборки.Вставить("МЧД003", ВыборкаМЧД003);
	
	Возврат Выборки;
	
КонецФункции

// Наиболее подходящие МЧДПредставителя.
// 
// Параметры:
//  ДанныеМЧДЗаданногоИНН - Массив Из см. НовыеДанныеПредставителяМЧДПоЗаданномуИНН
//  КПП - Строка
//  ОГРН - Строка
//  СНИЛС - Строка
//  ТочноеСовпадение - Булево
// 
// Возвращаемое значение:
//  Массив Из ОпределяемыйТип.МашиночитаемаяДоверенность
Функция НаиболееПодходящиеМЧДПредставителя(ДанныеМЧДЗаданногоИНН, КПП, ОГРН, СНИЛС, ТочноеСовпадение = Ложь)
	
	НаиболееПодходящиеМЧД = Новый Массив; // Массив Из ОпределяемыйТип.МашиночитаемаяДоверенность
	
	МаксимальныйКоэффициентСовпадения = 0;
	
	КоэффициентТочногоСовпадения = 0;
	Если ЗначениеЗаполнено(КПП) Тогда
		КоэффициентТочногоСовпадения = КоэффициентТочногоСовпадения + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(ОГРН) Тогда
		КоэффициентТочногоСовпадения = КоэффициентТочногоСовпадения + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(СНИЛС) Тогда
		КоэффициентТочногоСовпадения = КоэффициентТочногоСовпадения + 1;
	КонецЕсли;
	
	Для Каждого ДанныеМЧД Из ДанныеМЧДЗаданногоИНН Цикл
		
		КоэффициентСовпадения = 0;
		
		Если ЗначениеЗаполнено(КПП)
			И КПП = ДанныеМЧД.КПП Тогда
			
			КоэффициентСовпадения = КоэффициентСовпадения + 1;
		КонецЕсли;
		Если ЗначениеЗаполнено(ОГРН)
			И ОГРН = ДанныеМЧД.ОГРН Тогда
			
			КоэффициентСовпадения = КоэффициентСовпадения + 1;
		КонецЕсли;
		Если ЗначениеЗаполнено(СНИЛС)
			И СНИЛС = ДанныеМЧД.СНИЛС Тогда
			
			КоэффициентСовпадения = КоэффициентСовпадения + 1;
		КонецЕсли;
		
		Если ТочноеСовпадение И КоэффициентСовпадения < КоэффициентТочногоСовпадения Тогда
			Продолжить;
		КонецЕсли;
		
		Если КоэффициентСовпадения > МаксимальныйКоэффициентСовпадения Тогда
			МаксимальныйКоэффициентСовпадения = КоэффициентСовпадения;
			НаиболееПодходящиеМЧД.Очистить();
		КонецЕсли;
		
		Если МаксимальныйКоэффициентСовпадения = КоэффициентСовпадения Тогда
			НаиболееПодходящиеМЧД.Добавить(ДанныеМЧД.Доверенность);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НаиболееПодходящиеМЧД;
	
КонецФункции

#КонецОбласти

#Область ПоискСсылокПоДанным

// Организации для указанных наборов ИНН и КПП
// 
// Параметры:
//  НаборИНН - Массив Из Строка
//  НаборКПП - Массив Из Строка - Если передан пустой массив, то ищем без отбора КПП
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//    * Ключ - Строка - ИНН
//    * Значение - Соответствие Из КлючИЗначение:
//      ** Ключ - Строка - КПП
//      ** Значение - Массив Из СправочникСсылка.Организации
Функция ОрганизацииДляИННИКПП(НаборИНН, НаборКПП)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Организации.ИНН КАК ИНН,
		|	Организации.КПП КАК КПП,
		|	Организации.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.ИНН В (&НаборИНН)
		|	И &ОтборПоКПП";
	
	Если НаборКПП.Количество() = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоКПП", "ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоКПП", "Организации.КПП В (&НаборКПП)");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НаборИНН", НаборИНН);
	Запрос.УстановитьПараметр("НаборКПП", НаборКПП);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	КПППоИНН = Новый Соответствие();
	
	Пока Выборка.Следующий() Цикл
		
		ИНН = Выборка.ИНН;
		КПП = Выборка.КПП;
		Организация = Выборка.Организация;
		
		КППДляДанногоИНН = КПППоИНН[ИНН];
		Если КППДляДанногоИНН = Неопределено Тогда
			КППДляДанногоИНН = Новый Соответствие();
			КПППоИНН[ИНН] = КППДляДанногоИНН;
		КонецЕсли;
		
		ОрганизацииДанногоКПП = КППДляДанногоИНН[КПП]; // Массив Из СправочникСсылка.Организации
		Если ОрганизацииДанногоКПП = Неопределено Тогда
			ОрганизацииДанногоКПП = Новый Массив;
			КППДляДанногоИНН[КПП] = ОрганизацииДанногоКПП;
		КонецЕсли;
		
		ОрганизацииДанногоКПП.Добавить(Организация);
		
	КонецЦикла;
	
	Для Каждого ЭлементИНН Из КПППоИНН Цикл
		КППДляИНН = ЭлементИНН.Значение; // Соответствие
		Для Каждого ЭлементКПП Из КППДляИНН Цикл
			Организации = ЭлементКПП.Значение; // Массив Из СправочникСсылка.Организации
			Организации = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Организации);
		КонецЦикла;
	КонецЦикла;
	
	Возврат КПППоИНН;
	
КонецФункции

// Контрагенты для указанных наборов ИНН и КПП
// 
// Параметры:
//  НаборИНН - Массив Из Строка
//  НаборКПП - Массив Из Строка - Если передан пустой массив, то ищем без отбора КПП
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//    * Ключ - Строка - ИНН
//    * Значение - Соответствие Из КлючИЗначение:
//      ** Ключ - Строка - КПП
//      ** Значение - Массив Из СправочникСсылка.Контрагенты
Функция КонтрагентыДляИННИКПП(НаборИНН, НаборКПП)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Контрагенты.ИНН КАК ИНН,
		|	Контрагенты.КПП КАК КПП,
		|	Контрагенты.Ссылка КАК Контрагент
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ИНН В (&НаборИНН)
		|	И &ОтборПоКПП";
	
	Если НаборКПП.Количество() = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоКПП", "ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоКПП", "Контрагенты.КПП В (&НаборКПП)");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НаборИНН", НаборИНН);
	Запрос.УстановитьПараметр("НаборКПП", НаборКПП);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	КПППоИНН = Новый Соответствие();
	
	Пока Выборка.Следующий() Цикл
		
		ИНН = Выборка.ИНН;
		КПП = Выборка.КПП;
		Контрагент = Выборка.Контрагент;
		
		КППДляДанногоИНН = КПППоИНН[ИНН];
		Если КППДляДанногоИНН = Неопределено Тогда
			КППДляДанногоИНН = Новый Соответствие();
			КПППоИНН[ИНН] = КППДляДанногоИНН;
		КонецЕсли;
		
		КонтрагентыДанногоКПП = КППДляДанногоИНН[КПП]; // Массив Из СправочникСсылка.Контрагенты
		Если КонтрагентыДанногоКПП = Неопределено Тогда
			КонтрагентыДанногоКПП = Новый Массив;
			КППДляДанногоИНН[КПП] = КонтрагентыДанногоКПП;
		КонецЕсли;
		
		КонтрагентыДанногоКПП.Добавить(Контрагент);
		
	КонецЦикла;
	
	Для Каждого ЭлементИНН Из КПППоИНН Цикл
		КППДляИНН = ЭлементИНН.Значение; // Соответствие
		Для Каждого ЭлементКПП Из КППДляИНН Цикл
			Контрагенты = ЭлементКПП.Значение; // Массив Из СправочникСсылка.Контрагенты
			Контрагенты = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Контрагенты);
		КонецЦикла;
	КонецЦикла;
	
	Возврат КПППоИНН;
	
КонецФункции

// Физлица для указанных наборов ИНН и СНИЛС.
// 
// Параметры:
//  НаборИНН - Массив Из Строка
//  НаборСНИЛС - Массив Из Строка - Если передан пустой массив, то ищем без отбора СНИЛС
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//    * Ключ - Строка - ИНН
//    * Значение - Соответствие Из КлючИЗначение:
//      ** Ключ - Строка - СНИЛС
//      ** Значение - Массив Из СправочникСсылка.ФизическиеЛица
Функция ФизлицаДляИННИСНИЛС(НаборИНН, НаборСНИЛС)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ФизическиеЛица.ИНН КАК ИНН,
		|	ФизическиеЛица.СтраховойНомерПФР КАК СНИЛС,
		|	ФизическиеЛица.Ссылка КАК Физлицо
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.ИНН В (&НаборИНН)
		|	И &ОтборПоСНИЛС";
	Если НаборСНИЛС.Количество() = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоСНИЛС", "ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоСНИЛС", "ФизическиеЛица.СтраховойНомерПФР В (&НаборСНИЛС)");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НаборИНН", НаборИНН);
	Запрос.УстановитьПараметр("НаборСНИЛС", НаборСНИЛС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СНИЛСПоИНН = Новый Соответствие();
	
	Пока Выборка.Следующий() Цикл
		
		ИНН = Выборка.ИНН;
		СНИЛС = Выборка.СНИЛС;
		Физлицо = Выборка.ФизЛицо;
		
		СНИЛСДляДанногоИНН = СНИЛСПоИНН[ИНН];
		Если СНИЛСДляДанногоИНН = Неопределено Тогда
			СНИЛСДляДанногоИНН = Новый Соответствие();
			СНИЛСПоИНН[ИНН] = СНИЛСДляДанногоИНН;
		КонецЕсли;
		
		ФизлицаДляСНИЛС = СНИЛСДляДанногоИНН[СНИЛС];
		Если ФизлицаДляСНИЛС = Неопределено Тогда
			ФизлицаДляСНИЛС = Новый Массив(); // Массив Из СправочникСсылка.ФизическиеЛица
			СНИЛСДляДанногоИНН[СНИЛС] = ФизлицаДляСНИЛС;
		КонецЕсли;
		
		ФизлицаДляСНИЛС.Добавить(Физлицо);
		
	КонецЦикла;
	
	Для Каждого ЭлементИНН Из СНИЛСПоИНН Цикл
		СНИЛСДляИНН = ЭлементИНН.Значение; // Соответствие
		Для Каждого ЭлементСНИЛС Из СНИЛСДляИНН Цикл
			Физлица = ЭлементСНИЛС.Значение; // Массив Из СправочникСсылка.ФизическиеЛица
			Физлица = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Физлица);
		КонецЦикла;
	КонецЦикла;
	
	Возврат СНИЛСПоИНН;
	
КонецФункции

#КонецОбласти

#КонецОбласти
