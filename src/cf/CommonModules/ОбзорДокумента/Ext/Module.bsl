#Область ПрограммныйИнтерфейс

// Выводит картинки состояний в карточке документа
Процедура ВывестиСтрокуСостояний(Форма) Экспорт 
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	СостояниеОбработки = Неопределено;
	Делопроизводство.ПрочитатьДанныеДокумента(Объект.Ссылка, "СостояниеОбработки", СостояниеОбработки);		
	// Картинка Взаимодействие
	Элементы.КартинкаВзаимодействие.Видимость = Истина;
	Если СостояниеОбработки = Перечисления.СостоянияОбработкиОбъектов.Завершена Тогда
		Форма.СтатусВзаимодействие = 0;
		Элементы.КартинкаВзаимодействие.Подсказка = НСтр("ru = 'Обработка документа завершена'");
		
	ИначеЕсли СостояниеОбработки = Перечисления.СостоянияОбработкиОбъектов.Выполняется
		Или СостояниеОбработки = Перечисления.СостоянияВыполненияДействий.Выполняется Тогда  
		Форма.СтатусВзаимодействие = 1;
		Элементы.КартинкаВзаимодействие.Подсказка = НСтр("ru = 'Обработка документа активна'");
	
	ИначеЕсли СостояниеОбработки = Перечисления.СостоянияОбработкиОбъектов.Остановлена Тогда  
		Форма.СтатусВзаимодействие = 2;
		Элементы.КартинкаВзаимодействие.Подсказка = НСтр("ru = 'Обработка документа на паузе'");
			
	Иначе	
		Элементы.КартинкаВзаимодействие.Видимость = Ложь;
	КонецЕсли;	
	
	// Картинка ЭП
	Элементы.КартинкаЭП.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеПодписи");
	ВывестиКартинкуЭП(Форма);
	
	// Картинка Категории
	Элементы.КартинкаКатегории.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьКатегорииДанных");
	Если Форма.СписокКатегорийДанных.Количество() > 0 Тогда 
		Форма.СтатусКатегории = 1;
		Элементы.КартинкаКатегории.Подсказка = НСтр("ru = 'Есть категории'");
	Иначе
		Форма.СтатусКатегории = 0;
		Элементы.КартинкаКатегории.Подсказка = НСтр("ru = 'Нет категорий'");
	КонецЕсли;		
	
	ВывестиКартинкуФорума(Форма);
	
	// Картинка контроль
	Элементы.КартинкаКонтроль.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольОбъектов");
	ВывестиКартинкуКонтроля(Форма);
	
	Элементы.КартинкаСостояниеДела.Видимость = Ложь;
	
	Если ЗначениеЗаполнено(Объект.Дело) 
		И ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел")
		И ДелопроизводствоСерверПовтИсп.ИспользуетсяПередачаДелХранения() Тогда
		СостояниеДела = Форма.СтруктураСостоянияДела;
		Если СостояниеДела <> Неопределено 
			И СостояниеДела.Состояние = Перечисления.СостоянияДелХраненияДокументов.Уничтожено Тогда
			Форма.СостояниеДелаХранения = 2;
			Элементы.КартинкаСостояниеДела.Видимость = Истина;
			Элементы.КартинкаСостояниеДела.Подсказка = НСтр("ru = 'Дело, в котором хранится документ, уничтожено'");
		
		ИначеЕсли СостояниеДела <> Неопределено 
			И СостояниеДела.Состояние = Перечисления.СостоянияДелХраненияДокументов.ПереданоВАрхив Тогда
			Форма.СостояниеДелаХранения = 1;
			Элементы.КартинкаСостояниеДела.Видимость = Истина;
			Элементы.КартинкаСостояниеДела.Подсказка = НСтр("ru = 'Дело, в котором хранится документ, передано в архив'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры	

// Выводит картинку наличия обсуждений
Процедура ВывестиКартинкуФорума(Форма) Экспорт 
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	// Картинка Форум
	ИспользоватьОбсуждения = ПолучитьФункциональнуюОпцию("ИспользоватьОбсуждения");
	Элементы.КартинкаФорум.Видимость = ИспользоватьОбсуждения;
	Если ИспользоватьОбсуждения Тогда
		Тема = РаботаСОбсуждениями.НайтиТемуПоПредмету(Объект.Ссылка);
		Если Тема = Неопределено Тогда 
			Форма.СтатусФорум = 0;
			Элементы.КартинкаФорум.Подсказка = НСтр("ru = 'Нет обсуждения'");
		Иначе
			Форма.СтатусФорум = 1;
			Элементы.КартинкаФорум.Подсказка = НСтр("ru = 'Есть обсуждение'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Выводит картинку состояния ЭП
Процедура ВывестиКартинкуЭП(Форма) Экспорт 
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеПодписи") Тогда 
		Возврат;
	КонецЕсли;	
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	КешИнформации = РегистрыСведений.КешИнформацииОбОбъектах.ПолучитьПризнаки(Объект.Ссылка,
		"СтатусЭП");
	
	Если ДелопроизводствоКлиентСервер.ЭтоДокумент(Объект.Ссылка) Тогда
	
		Если КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписиНет Тогда
			Форма.СтатусЭП = 0;
			Элементы.КартинкаЭП.Подсказка = НСтр("ru = 'Не подписан электронной подписью'");
		ИначеЕсли КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписьНеПроверена Тогда
			Форма.СтатусЭП = 1;
			Элементы.КартинкаЭП.Подсказка = НСтр("ru = 'Подписан электронной подписью. Подпись не проверена.'");
		ИначеЕсли КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписьДействительна Тогда 
			Форма.СтатусЭП = 2;
			Элементы.КартинкаЭП.Подсказка = НСтр("ru = 'Подписан электронной подписью. Подпись действительна.'");
		ИначеЕсли КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписьНедействительна Тогда 
			Форма.СтатусЭП = 3;
			Элементы.КартинкаЭП.Подсказка = НСтр("ru = 'Подписан электронной подписью. Подпись недействительна.'");
		Иначе 
			Если Объект.ПодписанЭП Тогда
				Форма.СтатусЭП = 1;
				Элементы.КартинкаЭП.Подсказка = НСтр("ru = 'Подписан электронной подписью. Подпись не проверена.'");
			Иначе 
				Форма.СтатусЭП = 0;
				Элементы.КартинкаЭП.Подсказка = НСтр("ru = 'Не подписан электронной подписью'");
			КонецЕсли;
		КонецЕсли;
	
	ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоФайл(Объект.Ссылка) Тогда
		
		СтатусЭПФайла = СтатусЭПФайла(Объект, КешИнформации);
		Форма.СтатусЭП = СтатусЭПФайла.СтатусЭП;
		Элементы.КартинкаЭП.Подсказка = СтатусЭПФайла.Подсказка;
		
	КонецЕсли;
	
КонецПроцедуры

// Получает статус ЭП для файла.
//
// Параметры:
//   Файл - СправочникОбъект.Файлы - файл.
//   КешИнформации - см. РегистрыСведений.КешИнформацииОбОбъектах.ПолучитьПризнаки.
//
// Возвращаемое значение:
//   Структура - статус ЭП:
//     * СтатусЭП - Число
//     * Подсказка - Строка
//
Функция СтатусЭПФайла(Файл, КешИнформации) Экспорт
	
	Результат = Новый Структура("СтатусЭП, Подсказка");
	
	Если Файл.Зашифрован Тогда
		Если КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписиНет Тогда
			Результат.СтатусЭП = 1;
			Результат.Подсказка = НСтр("ru = 'Зашифрован. Не подписан электронной подписью'");
		ИначеЕсли КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписьНеПроверена Тогда
			Результат.СтатусЭП = 3;
			Результат.Подсказка = НСтр("ru = 'Зашифрован. Подписан электронной подписью. Подпись не проверена.'");
		ИначеЕсли КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписьДействительна Тогда 
			Результат.СтатусЭП = 5;
			Результат.Подсказка = НСтр("ru = 'Зашифрован. Подписан электронной подписью. Подпись действительна.'");
		ИначеЕсли КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписьНедействительна Тогда 
			Результат.СтатусЭП = 7;
			Результат.Подсказка = НСтр("ru = 'Зашифрован. Подписан электронной подписью. Подпись недействительна.'");
		Иначе
			Если Файл.ПодписанЭП Тогда
				Результат.СтатусЭП = 3;
				Результат.Подсказка = НСтр("ru = 'Зашифрован. Подписан электронной подписью. Подпись не проверена.'");
			Иначе
				Результат.СтатусЭП = 1;
				Результат.Подсказка = НСтр("ru = 'Зашифрован. Не подписан электронной подписью'");
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписиНет Тогда
			Результат.СтатусЭП = 0;
			Результат.Подсказка = НСтр("ru = 'Не подписан электронной подписью'");
		ИначеЕсли КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписьНеПроверена Тогда
			Результат.СтатусЭП = 2;
			Результат.Подсказка = НСтр("ru = 'Подписан электронной подписью. Подпись не проверена.'");
		ИначеЕсли КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписьДействительна Тогда 
			Результат.СтатусЭП = 4;
			Результат.Подсказка = НСтр("ru = 'Подписан электронной подписью. Подпись действительна.'");
		ИначеЕсли КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписьНедействительна Тогда 
			Результат.СтатусЭП = 6;
			Результат.Подсказка = НСтр("ru = 'Подписан электронной подписью. Подпись недействительна.'");
		Иначе
			Если Файл.ПодписанЭП Тогда
				Результат.СтатусЭП = 2;
				Результат.Подсказка = НСтр("ru = 'Подписан электронной подписью. Подпись не проверена.'");
			Иначе
				Результат.СтатусЭП = 0;
				Результат.Подсказка = НСтр("ru = 'Не подписан электронной подписью'");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ВывестиКартинкуКонтроля(Форма) Экспорт 
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольОбъектов") Тогда 
		Возврат;
	КонецЕсли;	
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	КешИнформации = РегистрыСведений.КешИнформацииОбОбъектах.ПолучитьПризнаки(Объект.Ссылка,
		"СостояниеКонтроля, СрокИсполнения, СрокИсполненияОбщий");
	
	ТекущаяДата = НачалоДня(ТекущаяДатаСеанса());
	
	Если Не ЗначениеЗаполнено(КешИнформации.СостояниеКонтроля) Тогда 
		
		Форма.СтатусКонтроля = 5; 
		Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'Не стоит на контроле'");
		
	ИначеЕсли КешИнформации.СостояниеКонтроля = Перечисления.СостоянияКонтроля.НаКонтроле Тогда 
		
		Если Не ЗначениеЗаполнено(КешИнформации.СрокИсполнения) Или КешИнформации.СрокИсполнения >= ТекущаяДата Тогда 
			Форма.СтатусКонтроля = 1;
			Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'На контроле'");
		Иначе	
			Форма.СтатусКонтроля = 3;
			Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'На контроле'");
		КонецЕсли;	
		
	ИначеЕсли КешИнформации.СостояниеКонтроля = Перечисления.СостоянияКонтроля.СнятСКонтроля Тогда 	
		
		Форма.СтатусКонтроля = 4;
		Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'Снят с контроля'");
		
	ИначеЕсли КешИнформации.СостояниеКонтроля = Перечисления.СостоянияКонтроля.НаКонтролеНесколько Тогда 
		
		 Если Не ЗначениеЗаполнено(КешИнформации.СрокИсполнения) Или КешИнформации.СрокИсполнения >= ТекущаяДата Тогда 
			Форма.СтатусКонтроля = 6;
		ИначеЕсли Не ЗначениеЗаполнено(КешИнформации.СрокИсполненияОбщий) Или КешИнформации.СрокИсполненияОбщий >= ТекущаяДата Тогда 
			Форма.СтатусКонтроля = 9;
		Иначе
			Форма.СтатусКонтроля = 7;
		КонецЕсли;	
		Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'На контроле (несколько)'");
		
	ИначеЕсли КешИнформации.СостояниеКонтроля = Перечисления.СостоянияКонтроля.СнятСКонтроляНесколько Тогда
		
		Форма.СтатусКонтроля = 8;
		Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'Снят с контроля (несколько)'");
		
	ИначеЕсли КешИнформации.СостояниеКонтроля = Перечисления.СостоянияКонтроля.СмешанноНесколько Тогда	
		
		Если Не ЗначениеЗаполнено(КешИнформации.СрокИсполнения) Или КешИнформации.СрокИсполнения >= ТекущаяДата Тогда 
			Форма.СтатусКонтроля = 10;
		Иначе
			Форма.СтатусКонтроля = 11;
		КонецЕсли;
		Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'На контроле и снят с контроля'");
		
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ВывестиКартинкуЭДО(Форма) Экспорт 
	
	Если Не ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД") 
			Или Форма.ВариантПодписания = Перечисления.ВариантыПодписания.НеПодписывается Тогда
			
		Возврат;
	КонецЕсли;	
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	СостояниеЭДО = ОбменСКонтрагентамиДОВызовСервера.ДанныеСостоянияДокументаПоЭДО(Объект.Ссылка);
	
	Элементы.КартинкаЭДО.Подсказка = "";
	Если Не ЗначениеЗаполнено(СостояниеЭДО) Тогда 
		
		Форма.СтатусЭДО = 0; 
		
	ИначеЕсли СостояниеЭДО = Перечисления.СостоянияЭДОДокументооборот.ПоставленВОчередьНаОтправку
		Или СостояниеЭДО = Перечисления.СостоянияЭДОДокументооборот.ОжидаетсяОтправка
		Или СостояниеЭДО = Перечисления.СостоянияЭДОДокументооборот.Отправлен 
		Или СостояниеЭДО = Перечисления.СостоянияЭДОДокументооборот.ОбменЗавершен
		Или СостояниеЭДО = Перечисления.СостоянияЭДОДокументооборот.ОбменЗавершенСИсправлением
		Или СостояниеЭДО = Перечисления.СостоянияЭДОДокументооборот.ОжидаетСозданияПакетаЭДО
		Или СостояниеЭДО = Перечисления.СостоянияЭДОДокументооборот.Подписан Тогда
		
		Форма.СтатусЭДО = 1; 
		
	ИначеЕсли СостояниеЭДО = Перечисления.СостоянияЭДОДокументооборот.ОтклоненПолучателем
		Или СостояниеЭДО = Перечисления.СостоянияЭДОДокументооборот.ЗакрытСОтклонением
		Или СостояниеЭДО = Перечисления.СостоянияЭДОДокументооборот.ТребуетсяУточнение
		Или СостояниеЭДО = Перечисления.СостоянияЭДОДокументооборот.ОжидаетсяИсправление
		Или СостояниеЭДО = Перечисления.СостоянияЭДОДокументооборот.ОшибкаПередачи Тогда
			
		Форма.СтатусЭДО = 2; 
		
	Иначе
			
		Форма.СтатусЭДО = 3; 
		
	КонецЕсли;
	
КонецПроцедуры	

// Возвращает текст HTML для показа обзора документа предприятия
Функция ПолучитьОбзорДокумента(Форма) Экспорт 
	
	HTMLТекст = ОбзорДокументаПереопределяемый.ПолучитьОбзорДокумента(Форма);
	Если ЗначениеЗаполнено(HTMLТекст) Тогда 
		Возврат HTMLТекст;
	КонецЕсли;
	
	Объект = Форма.Объект;
	
	КэшДокументыПредприятияФормаЭлемента =
		КэшиНаВремяВызоваПовтИсп.КэшДокументыПредприятияФормаЭлемента();
	Если КэшДокументыПредприятияФормаЭлемента.Инициализирован
		И КэшДокументыПредприятияФормаЭлемента.КэшДокумента.Ссылка = Объект.Ссылка Тогда
		ЭтоВходящийДокумент = ЗначениеЗаполнено(КэшДокументыПредприятияФормаЭлемента.КэшДокумента.ВидДокумента)
			И КэшДокументыПредприятияФормаЭлемента.КэшВидаДокумента.ЯвляетсяВходящейКорреспонденцией;
		ЭтоИсходящийДокумент = ЗначениеЗаполнено(КэшДокументыПредприятияФормаЭлемента.КэшДокумента.ВидДокумента)
			И КэшДокументыПредприятияФормаЭлемента.КэшВидаДокумента.ЯвляетсяИсходящейКорреспонденцией;
	Иначе
		ЭтоВходящийДокумент = ДелопроизводствоКлиентСервер.ЭтоВходящийДокумент(Объект.Ссылка);
		ЭтоИсходящийДокумент = ДелопроизводствоКлиентСервер.ЭтоИсходящийДокумент(Объект.Ссылка);
	КонецЕсли;
	
	Если ЭтоВходящийДокумент Тогда
		Возврат ПолучитьОбзорВходящегоДокумента(Форма);
	ИначеЕсли ЭтоИсходящийДокумент Тогда
		Возврат ПолучитьОбзорИсходящегоДокумента(Форма);
		
	Иначе	
		ПараметрыУчета = Новый Структура;
		ПараметрыУчета.Вставить("ВестиУчетСторон", Ложь);
		ПараметрыУчета.Вставить("ВестиУчетПоКонтрагентам", Ложь);
		
		Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
			КэшДокументыПредприятияФормаЭлемента =
				КэшиНаВремяВызоваПовтИсп.КэшДокументыПредприятияФормаЭлемента();
			Если КэшДокументыПредприятияФормаЭлемента.Инициализирован
				И КэшДокументыПредприятияФормаЭлемента.КэшДокумента.ВидДокумента = Объект.ВидДокумента Тогда
				ПараметрыУчета = КэшДокументыПредприятияФормаЭлемента.КэшВидаДокумента;
			Иначе
				ПараметрыУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
					Объект.ВидДокумента,
					"ВестиУчетСторон, ВестиУчетПоКонтрагентам");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыУчета.ВестиУчетСторон Или ПараметрыУчета.ВестиУчетПоКонтрагентам Тогда
			Возврат ПолучитьОбзорДокументаСКонтрагентом(Форма);
		Иначе
			Возврат ПолучитьОбзорДокументаБезКонтрагента(Форма);
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

// Возвращает текст HTML для показа обзора исходящего документа
Функция ПолучитьОбзорИсходящегоДокумента(Форма) Экспорт 
	
	HTMLТекст = ОбзорДокументаПереопределяемый.ПолучитьОбзорИсходящегоДокумента(Форма);
	Если ЗначениеЗаполнено(HTMLТекст) Тогда 
		Возврат HTMLТекст;
	КонецЕсли;
	
	Объект = Форма.Объект;
	Организация = Объект.Организация;
	ДатаНачалаОтсчета = Делопроизводство.ДатаУчетаДокумента(Объект);     
	
	ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
	
	// Формируем основное представление документа	
	HTMLТекст = "<html>
	|<head>
	|<style type=""text/css"">
	|	body {
	|		overflow:    auto;
	|		margin-top:  6px; 		 
	|		margin-left: 10px; 
	|		margin-bottom: 0px;
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	table {
	|		width:       100%;
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	td {vertical-align: top;}
	| 	a:link {
	|		color: #006699; text-decoration: none;}
	|	a:visited {
	|		color: #006699; text-decoration: none;}
	|	a:hover {
	|		color: #006699; text-decoration: underline;}
	|	p {
	|		margin-top: 7px;}
	|</style>
	|<body>";
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда 
		КэшДокументыПредприятияФормаЭлемента =
			КэшиНаВремяВызоваПовтИсп.КэшДокументыПредприятияФормаЭлемента();
		Если КэшДокументыПредприятияФормаЭлемента.Инициализирован
			И КэшДокументыПредприятияФормаЭлемента.КэшДокумента.ВидДокумента = Объект.ВидДокумента Тогда
			РеквизитыВида = КэшДокументыПредприятияФормаЭлемента.КэшВидаДокумента;
		Иначе
			РеквизитыВида = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидДокумента,
				"УчитыватьСуммуДокумента, ИспользоватьСрокИсполнения, ВестиУчетПоНоменклатуреДел, 
				|УчитыватьМестоХранения, УчитыватьОтветственногоЗаХранение, ВестиУчетПоТематикам,
				|СрокИсполненияУказанВРабочихДнях");
		КонецЕсли;
	Иначе 
		РеквизитыВида = Новый Структура;
		РеквизитыВида.Вставить("УчитыватьСуммуДокумента", Ложь);
		РеквизитыВида.Вставить("ИспользоватьСрокИсполнения", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоНоменклатуреДел", Ложь);
		РеквизитыВида.Вставить("УчитыватьМестоХранения", Ложь);
		РеквизитыВида.Вставить("УчитыватьОтветственногоЗаХранение", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоТематикам", Ложь);
		РеквизитыВида.Вставить("СрокИсполненияУказанВРабочихДнях", Ложь);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<table>";
	HTMLТекст = HTMLТекст + "<tr>";
	
	HTMLТекст = HTMLТекст + "<td width=""40%"" align=center >";
	ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'От кого:'"), "");
	HTMLТекст = HTMLТекст + "<p>";
	ДобавитьРеквизит(HTMLТекст, "", Организация, "", Юрлица.ПредставлениеЮрлицаНаДату(Организация, ДатаНачалаОтсчета));
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		HTMLТекст = HTMLТекст + "<p>";
		
		Если РеквизитыВида.ВестиУчетПоТематикам И ЗначениеЗаполнено(Объект.Тематика) Тогда 
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A> - <A href=v8doc:%3>%4</A>",
				ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
				ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Строка(Объект.ВидДокумента))),
				ПолучитьНавигационнуюСсылку(Объект.Тематика),
				ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Строка(Объект.Тематика))));
		Иначе
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A>",
				ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
				ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Строка(Объект.ВидДокумента))));
		КонецЕсли;
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаРегистрации) И ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда 
		ДобавитьРеквизит(HTMLТекст, "", Формат(Объект.ДатаРегистрации, "ДЛФ=D") 
		+ " № " +  Объект.РегистрационныйНомер);
	Иначе
		ДобавитьРеквизит(HTMLТекст, "________ №________", "");
	КонецЕсли;
	HTMLТекст = HTMLТекст + "<p>";
	
	Если Форма.СписокВОтветНа.Количество() Тогда
		
		ПредставленияВОтветНа = Новый Массив;
		РеквизитыВОтветНа = РаботаСКорреспонденцией.РеквизитыОтправителяДокументовКорреспонденции(
			Форма.СписокВОтветНа.ВыгрузитьЗначения()).Выбрать();
		Пока РеквизитыВОтветНа.Следующий() Цикл
			Представление = РаботаСКорреспонденцией.ПредставлениеДокументаКорреспонденции(
				РеквизитыВОтветНа, НСтр("ru = '%1 от %2'"), Ложь, Ложь);
			ПредставленияВОтветНа.Добавить(Представление);
		КонецЦикла;
		
		Если ПредставленияВОтветНа.Количество() Тогда
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'На:'"));
			HTMLТекст = HTMLТекст + СтрШаблон("<b><A href=v8doc:tasks/ShowInReplyTo/%1>%2</A></b>",
				ПолучитьНавигационнуюСсылку(Объект.Ссылка),
				СтрСоединить(ПредставленияВОтветНа, "; "));
		КонецЕсли;
	Иначе
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'На №_______ от _______'"), "");	
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td>";	
	
	HTMLТекст = HTMLТекст + "<td>";
	HTMLТекст = HTMLТекст + "</td>";
	
	HTMLТекст = HTMLТекст + "<td width=""40%"">";
	Если Форма.НесколькоКонтрагентов Тогда
		Количество = 0;
		Для Каждого Получателя Из Объект.Контрагенты Цикл
			Если ЗначениеЗаполнено(Получателя.Контрагент) Тогда
				Количество = Количество + 1;
			КонецЕсли;
		КонецЦикла;
		
		Если Количество > 0 Тогда 
			Если Количество = 1 Тогда 
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Кому:'"), "");
			Иначе 
				ДобавитьРеквизит(HTMLТекст, СтрШаблон(
					НСтр("ru = 'Кому (%1):'"), Количество), "");
			КонецЕсли;
			
			Для Каждого Получателя Из Объект.Контрагенты Цикл
				HTMLТекст = HTMLТекст + "<p>";
				КонтрагентПредставление = Юрлица.ПредставлениеЮрлицаНаДату(Получателя.Контрагент, ДатаНачалаОтсчета);
				ДобавитьРеквизит(HTMLТекст, "", Получателя.Контрагент, "", КонтрагентПредставление);
				
				Если ЗначениеЗаполнено(Получателя.КонтактноеЛицо) Тогда
					ДобавитьВТекстДанныеКонтактногоЛица(Получателя.КонтактноеЛицо, HTMLТекст, "");
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	Иначе
	    Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Кому:'"), "");
			HTMLТекст = HTMLТекст + "<p>";
			
			КонтрагентПредставление = Юрлица.ПредставлениеЮрлицаНаДату(Объект.Контрагент, ДатаНачалаОтсчета);
			ДобавитьРеквизит(HTMLТекст, "", Объект.Контрагент, "", КонтрагентПредставление);
			
			Если ЗначениеЗаполнено(Объект.КонтактноеЛицо) Тогда
				ДобавитьВТекстДанныеКонтактногоЛица(Объект.КонтактноеЛицо, HTMLТекст, "");
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""3"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	Заголовок = Объект.Заголовок;
	HTMLТекст = HTMLТекст + СтрШаблон(
		"<B>%1</B>",
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(Заголовок));
	HTMLТекст = HTMLТекст + "<p>";	
	
	Если ЗначениеЗаполнено(Объект.Содержание) Тогда
		Содержание = Объект.Содержание;
		HTMLТекст = HTMLТекст + СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Содержание), Символы.ПС, "<br>");
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;	
		
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСвязиОбъектов") Тогда
		КраткиеСведенияОСвязях = СвязиОбъектов.КраткиеСведенияОСвязях(Объект.Ссылка);
			
		Если Не ЗначениеЗаполнено(КраткиеСведенияОСвязях) Тогда	
			КраткиеСведенияОСвязях = НСтр("ru = 'Связи: не заданы'");
		КонецЕсли;	
		
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<b><A href=v8doc:tasks/ShowLinks/%1>%2</A></b> <br>",
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(КраткиеСведенияОСвязях));
	КонецЕсли;
	
	ДобавитьНадписьОСроке(HTMLТекст, Объект, РеквизитыВида, ДатаНачалаОтсчета, НСтр("ru = 'Срок ответа:'"));
	
	Если РеквизитыВида.УчитыватьСуммуДокумента Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Сумма:'"), Формат(Объект.Сумма, "ЧДЦ=2; ЧН=0") + " " + 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Валюта, "Наименование"));
	КонецЕсли;
	
	ДобавитьОбзорДополнительныхРеквизитов(HTMLТекст, Объект, Форма);
	
	HTMLТекст = HTMLТекст + "</td></tr>";	
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""3"">";
	
	Если ЗначениеЗаполнено(Объект.Подписал)
	 Или ЗначениеЗаполнено(Объект.Подготовил)
	 Или ЗначениеЗаполнено(Объект.Подразделение)
	Тогда 
		Если ЗначениеЗаполнено(Объект.Содержание) 
			Или РеквизитыВида.УчитыватьСуммуДокумента 
			Или (Форма.Свойства_ИспользоватьСвойства И Форма.Свойства_ОписаниеДополнительныхРеквизитов.Количество() > 0)  Тогда 
				HTMLТекст = HTMLТекст + "<p>";
		КонецЕсли;	
	КонецЕсли;	
		
	Если ЗначениеЗаполнено(Объект.Подписал) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал:'"), Объект.Подписал);
	КонецЕсли;	
		
	Если ЗначениеЗаполнено(Объект.Подготовил) Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Подготовил:'"));
		ДобавитьЗначение(HTMLТекст, Объект.Подготовил, "");
		ДобавитьЗначение(HTMLТекст, " (" + Формат(Объект.ДатаСоздания, "ДЛФ=D") + ")", "");
		HTMLТекст = HTMLТекст + "<br>";
		
		КонтактнаяИнформация = ПолучитьКонтактнуюИнформациюОбъекта(Объект.Подготовил);
		
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
			ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформация.Телефон, "696969");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
			HTMLТекст = HTMLТекст + СтрШаблон(
					"<FONT color=#696969>%1</FONT>",
					НСтр("ru = 'E-mail:'") + " ");
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
				"message"+КонтактнаяИнформация.Емайл,
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(КонтактнаяИнформация.Емайл));
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подразделение:'"),  Объект.Подразделение);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""3"">";
	
	КомуПереданДокумент = Форма.КомуПереданДокумент;
	ВестиУчетПоНоменклатуреДел = РеквизитыВида.ВестиУчетПоНоменклатуреДел;
	ИспользоватьНоменклатуруДел = ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел");
	
	Если (ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(Объект.НоменклатураДел))
		Или (ИспользоватьНоменклатуруДел И ЗначениеЗаполнено(Объект.Дело))
		Или ЗначениеЗаполнено(Объект.Ответственный)
		Или ЗначениеЗаполнено(Объект.ФормаДокумента)
		Или ЗначениеЗаполнено(КомуПереданДокумент) Тогда 
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ответственный) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Ответственный:'"),  Объект.Ответственный);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ФормаДокумента) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Форма:'"),  Объект.ФормаДокумента);
	КонецЕсли;
	
	Если ИспользоватьНоменклатуруДел Тогда 
		Если ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(Объект.НоменклатураДел) Тогда
			ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Номенклатура дел:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A><BR>",
				ПолучитьНавигационнуюСсылку(Объект.НоменклатураДел),
				Объект.НоменклатураДел);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Дело) Тогда
			ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Помещен в дело:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A><BR>",
				"dossier",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(Строка(Объект.Дело)));
			
			СостояниеДела = Форма.СтруктураСостоянияДела;
			Если ТипЗнч(СостояниеДела) = Тип("Структура")
				И ЗначениеЗаполнено(СостояниеДела.Состояние) Тогда
				HTMLТекст = HTMLТекст + СтрШаблон(
					"<A href=v8doc:%1>%2</A><BR></FONT>",
					"DossierStatusRecorder",
					РаботаС_HTML.ЗаменитьСпецСимволыHTML(
						СостояниеДела.ПредставлениеСостояния + " " + СостояниеДела.ДатаСостояния));
			КонецЕсли;
			
			МестоХранения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дело, "МестоХраненияДел");
			Если ЗначениеЗаполнено(МестоХранения) Тогда
				МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(МестоХранения,
					ПолучитьФункциональнуюОпцию("ИспользоватьСхемыПомещений"));
				ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Место хранения:'"));
				HTMLТекст = HTMLТекст + СтрШаблон(
					"<A href=v8doc:%1>%2</A><BR>",
					"storage",
					РаботаС_HTML.ЗаменитьСпецСимволыHTML(МестоХраненияТекст));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если РеквизитыХраненияИспользуются(
		РеквизитыВида.УчитыватьМестоХранения, Объект.МестоХранения, Объект.ФормаДокумента) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Место хранения:'"), Объект.МестоХранения);
	КонецЕсли;
	
	Если РеквизитыХраненияИспользуются(
		РеквизитыВида.УчитыватьОтветственногоЗаХранение, Объект.ОтветственныйЗаХранение, Объект.ФормаДокумента) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Отв. за хранение:'"), Объект.ОтветственныйЗаХранение);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Передан:'"));
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"holder",
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(КомуПереданДокумент));
	КонецЕсли;	
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""3"">";
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа")
	 Или ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности")
	 Или ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов")
	Тогда 	
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;	
		
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Гриф:'"),  Объект.ГрифДоступа);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вопрос:'"),  Объект.ВопросДеятельности);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(Объект.Проект) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Проект:'"),  Объект.Проект);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда 
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние:'"));
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"status",
			Форма.СостояниеТекст);
	КонецЕсли;
	
	Если ИспользоватьОбменЭД И ЗначениеЗаполнено(Форма.СостояниеЭДО) Тогда
		
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние ЭДО:'"));  

		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"OpenEDI",
			Форма.СостояниеЭДО);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.УтверждениеТекст) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Утвержден:'"), Форма.УтверждениеТекст);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ПодписьТекст) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписан:'"), Форма.ПодписьТекст);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Комментарий) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Комментарий:'"),  Объект.Комментарий);
	КонецЕсли;
	
	Если Не Форма.НеПоказыватьДанныеОбработки Тогда
		ДобавитьОбзорРезультатов(HTMLТекст, Объект);
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</td></tr>";
	HTMLТекст = HTMLТекст + "</table>";
	
	HTMLТекст = HTMLТекст + "</body></html>";
	
	ОбзорОбъектовКлиентСервер.УдалитьВредоносныйКодИзТекста(HTMLТекст);
	
	Возврат HTMLТекст;
	
КонецФункции	

// Возвращает текст HTML для показа обзора входящего документа
Функция ПолучитьОбзорВходящегоДокумента(Форма) Экспорт 
	
	HTMLТекст = ОбзорДокументаПереопределяемый.ПолучитьОбзорВходящегоДокумента(Форма);
	Если ЗначениеЗаполнено(HTMLТекст) Тогда 
		Возврат HTMLТекст;
	КонецЕсли;
	
	Объект = Форма.Объект;
	Организация = Объект.Организация;
	ДатаНачалаОтсчета = Делопроизводство.ДатаУчетаДокумента(Объект);    
	
	ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
	
	// Формируем основное представление документа	
	HTMLТекст = "<html>
	|<head>
	|<style type=""text/css"">
	|	body {
	|		overflow:    auto;
	|		margin-top:  6px;
	|		margin-left: 10px;
	|		margin-bottom: 0px;
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	table {
	|		width:       100%;  
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	td {vertical-align: top;}
	| 	a:link {
	|		color: #006699; text-decoration: none;}
	|	a:visited {
	|		color: #006699; text-decoration: none;}
	|	a:hover {
	|		color: #006699; text-decoration: underline;}
	|	p {
	|		margin-top: 7px;}
	|</style>
	|<body>";
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда 
		КэшДокументыПредприятияФормаЭлемента =
			КэшиНаВремяВызоваПовтИсп.КэшДокументыПредприятияФормаЭлемента();
		Если КэшДокументыПредприятияФормаЭлемента.Инициализирован
			И КэшДокументыПредприятияФормаЭлемента.КэшДокумента.ВидДокумента = Объект.ВидДокумента Тогда
			РеквизитыВида = КэшДокументыПредприятияФормаЭлемента.КэшВидаДокумента;
		Иначе
			РеквизитыВида = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидДокумента,
				"УчитыватьСуммуДокумента, ИспользоватьСрокИсполнения, ВестиУчетПоНоменклатуреДел,
				|УчитыватьМестоХранения, УчитыватьОтветственногоЗаХранение,
				|КонтролироватьНаличиеОригинала, ВестиУчетПоТематикам, СрокИсполненияУказанВРабочихДнях");
		КонецЕсли;
	Иначе 
		РеквизитыВида = Новый Структура;
		РеквизитыВида.Вставить("УчитыватьСуммуДокумента", Ложь);
		РеквизитыВида.Вставить("ИспользоватьСрокИсполнения", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоНоменклатуреДел", Ложь);
		РеквизитыВида.Вставить("УчитыватьМестоХранения", Ложь);
		РеквизитыВида.Вставить("УчитыватьОтветственногоЗаХранение", Ложь);
		РеквизитыВида.Вставить("КонтролироватьНаличиеОригинала", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоТематикам", Ложь);
		РеквизитыВида.Вставить("СрокИсполненияУказанВРабочихДнях", Ложь);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<table>";
	HTMLТекст = HTMLТекст + "<tr>";
	
	HTMLТекст = HTMLТекст + "<td width=""40%"" align=center >";
	ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'От кого:'"), "");
	HTMLТекст = HTMLТекст + "<p>";
	КонтрагентПредставление = Юрлица.ПредставлениеЮрлицаНаДату(Объект.Контрагент, ДатаНачалаОтсчета);
	ДобавитьРеквизит(HTMLТекст, "", Объект.Контрагент, "", КонтрагентПредставление);
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		HTMLТекст = HTMLТекст + "<p>";
		
		Если РеквизитыВида.ВестиУчетПоТематикам И ЗначениеЗаполнено(Объект.Тематика) Тогда 
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A> - <A href=v8doc:%3>%4</A>",
				ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
				ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Строка(Объект.ВидДокумента))),
				ПолучитьНавигационнуюСсылку(Объект.Тематика),
				ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Строка(Объект.Тематика))));
		Иначе
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A>",
				ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
				ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Строка(Объект.ВидДокумента))));
		КонецЕсли;
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ИсходящаяДата) И ЗначениеЗаполнено(Форма.ИсходящийНомер) Тогда 
		ДобавитьРеквизит(HTMLТекст, "", Формат(Форма.ИсходящаяДата, "ДЛФ=D") 
		+ " № " +  Форма.ИсходящийНомер);
	Иначе
		ДобавитьРеквизит(HTMLТекст, "________ №________", "");
	КонецЕсли;

	HTMLТекст = HTMLТекст + "<p>";
	
	Если Форма.СписокВОтветНа.Количество() Тогда
		
		ПредставленияВОтветНа = Новый Массив;
		РеквизитыВОтветНа = РаботаСКорреспонденцией.РеквизитыОтправителяДокументовКорреспонденции(
			Форма.СписокВОтветНа.ВыгрузитьЗначения()).Выбрать();
		Пока РеквизитыВОтветНа.Следующий() Цикл
			Представление = РаботаСКорреспонденцией.ПредставлениеДокументаКорреспонденции(
				РеквизитыВОтветНа, НСтр("ru = '%1 от %2'"),, Ложь);
			ПредставленияВОтветНа.Добавить(Представление);
		КонецЦикла;
		
		Если ПредставленияВОтветНа.Количество() Тогда
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'На'"));
			HTMLТекст = HTMLТекст + СтрШаблон("<b><A href=v8doc:tasks/ShowInReplyTo/%1>%2</A></b>",
				ПолучитьНавигационнуюСсылку(Объект.Ссылка),
				СтрСоединить(ПредставленияВОтветНа, "; "));
		КонецЕсли;
	Иначе
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'На №_______ от _______'"), "");	
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td>";	
	
	HTMLТекст = HTMLТекст + "<td>";
	HTMLТекст = HTMLТекст + "</td>";
	
	HTMLТекст = HTMLТекст + "<td width=""50%"">";
	
	ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Кому:'"), "");
	HTMLТекст = HTMLТекст + "<p>";
	
	ОрганизацияПредставление = Юрлица.ПредставлениеЮрлицаНаДату(Организация, ДатаНачалаОтсчета);
	ДобавитьРеквизит(HTMLТекст, "", Организация, "", ОрганизацияПредставление);
	
	Если ЗначениеЗаполнено(Форма.АдресатВходящейКорреспонденции) Тогда
		HTMLТекст = HTMLТекст + "<p>";
		ДобавитьВТекстДанныеКонтактногоЛица(Форма.АдресатВходящейКорреспонденции, HTMLТекст, "");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подразделение:'"),  Объект.Подразделение);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаРегистрации) И ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда 
		HTMLТекст = HTMLТекст + "<p>";
		ДобавитьРеквизит(HTMLТекст, "", СтрШаблон(
			НСтр("ru = 'Рег. № %1 от %2'"),
			Объект.РегистрационныйНомер,
			Формат(Объект.ДатаРегистрации, "ДЛФ=D")));
	КонецЕсли;	
	
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""3"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	Заголовок = Объект.Заголовок;
	HTMLТекст = HTMLТекст + СтрШаблон(
		"<B>%1</B>",
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(Заголовок));
	
	HTMLТекст = HTMLТекст + "<p>";
		
	Если ЗначениеЗаполнено(Объект.Содержание) Тогда
		Содержание = Объект.Содержание;
		HTMLТекст = HTMLТекст + СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Содержание), Символы.ПС, "<br>");
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСвязиОбъектов") Тогда
		
		КраткиеСведенияОСвязях = СвязиОбъектов.КраткиеСведенияОСвязях(Объект.Ссылка);
			
		Если Не ЗначениеЗаполнено(КраткиеСведенияОСвязях) Тогда	
			КраткиеСведенияОСвязях = НСтр("ru = 'Связи: не заданы'");
		КонецЕсли;	
		
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<b><A href=v8doc:tasks/ShowLinks/%1>%2</A></b> <br>",
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(КраткиеСведенияОСвязях));
	КонецЕсли;
	
	ДобавитьНадписьОСроке(HTMLТекст, Объект, РеквизитыВида, ДатаНачалаОтсчета, НСтр("ru = 'Срок исполнения:'"));
	
	Если РеквизитыВида.УчитыватьСуммуДокумента Или
		(Форма.Свойства_ИспользоватьСвойства И Форма.Свойства_ОписаниеДополнительныхРеквизитов.Количество() > 0) Тогда 
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;
	
	Если РеквизитыВида.УчитыватьСуммуДокумента Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Сумма:'"), Формат(Объект.Сумма, "ЧДЦ=2; ЧН=0") + " " + 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Валюта, "Наименование"));
	КонецЕсли;
	
	ДобавитьОбзорДополнительныхРеквизитов(HTMLТекст, Объект, Форма);
	
	HTMLТекст = HTMLТекст + "</td></tr>";	

	Если ЗначениеЗаполнено(Объект.ПодписалОтКонтрагента) Тогда 
		
		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td colspan=""3"">";
		
		Если ЗначениеЗаполнено(Объект.Содержание) 
			Или РеквизитыВида.УчитыватьСуммуДокумента 
			Или ЗначениеЗаполнено(Объект.СрокИсполнения)
			Или (Форма.Свойства_ИспользоватьСвойства И Форма.Свойства_ОписаниеДополнительныхРеквизитов.Количество() > 0)  Тогда 
			HTMLТекст = HTMLТекст + "<p>";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ПодписалОтКонтрагента) Тогда
			ДобавитьВТекстДанныеКонтактногоЛица(
				Объект.ПодписалОтКонтрагента, HTMLТекст, НСтр("ru = 'Подписал:'"));
		КонецЕсли;	
		
		HTMLТекст = HTMLТекст + "</td></tr>";
		
	КонецЕсли;	
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""3"">";
	
	КомуПереданДокумент = Форма.КомуПереданДокумент;
	ВестиУчетПоНоменклатуреДел = РеквизитыВида.ВестиУчетПоНоменклатуреДел;
	ИспользоватьМестаХранения = ПолучитьФункциональнуюОпцию("ИспользоватьМестаХранения");
	ИспользоватьНоменклатуруДел = ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел");
	
	Если (ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(Объект.НоменклатураДел))
		Или (ИспользоватьНоменклатуруДел И ЗначениеЗаполнено(Объект.Дело))
		Или ЗначениеЗаполнено(Объект.Ответственный)
		Или ЗначениеЗаполнено(Объект.ФормаДокумента)
		Или ИспользоватьМестаХранения
		Или ЗначениеЗаполнено(КомуПереданДокумент) Тогда 
		HTMLТекст = HTMLТекст + "<p>";
		
		Если ЗначениеЗаполнено(Объект.Ответственный) Тогда 
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Ответственный:'"),  Объект.Ответственный);
		КонецЕсли;
		
		Если РеквизитыВида.КонтролироватьНаличиеОригинала И ЗначениеЗаполнено(Форма.ОригиналПолученТекст) Тогда 
			Если Не Форма.ОригиналПолучен И ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда 
				ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Оригинал:'"));
				HTMLТекст = HTMLТекст + СтрШаблон(
					"<A href=v8doc:%1><FONT color=#%2>%3</FONT></A><BR>",
					"Original",
					"B22222",
					РаботаС_HTML.ЗаменитьСпецСимволыHTML(Форма.ОригиналПолученТекст));
			Иначе 
				ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Оригинал:'"));
				HTMLТекст = HTMLТекст + СтрШаблон(
					"<A href=v8doc:%1>%2</A><BR>",
					"Original",
					РаботаС_HTML.ЗаменитьСпецСимволыHTML(Форма.ОригиналПолученТекст));
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ФормаДокумента) Тогда 
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Форма:'"),  Объект.ФормаДокумента);
		КонецЕсли;
		
		Если ИспользоватьНоменклатуруДел Тогда 
			Если ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(Объект.НоменклатураДел) Тогда
				ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Номенклатура дел:'"));
				HTMLТекст = HTMLТекст + СтрШаблон(
					"<A href=v8doc:%1>%2</A><BR>",
					ПолучитьНавигационнуюСсылку(Объект.НоменклатураДел),
					Объект.НоменклатураДел);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.Дело) Тогда
				ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Помещен в дело:'"));
				HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A><BR>",
				"dossier",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(Строка(Объект.Дело)));
				
				СостояниеДела = Форма.СтруктураСостоянияДела;
				Если ТипЗнч(СостояниеДела) = Тип("Структура")
					И ЗначениеЗаполнено(СостояниеДела.Состояние) Тогда
					HTMLТекст = HTMLТекст + СтрШаблон(
						"<A href=v8doc:%1>%2</A><BR></FONT>",
						"DossierStatusRecorder",
						РаботаС_HTML.ЗаменитьСпецСимволыHTML(
							СостояниеДела.ПредставлениеСостояния + " " + СостояниеДела.ДатаСостояния));
				КонецЕсли;
				
				МестоХранения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дело, "МестоХраненияДел");
				Если ЗначениеЗаполнено(МестоХранения) Тогда
					МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(МестоХранения,
						ПолучитьФункциональнуюОпцию("ИспользоватьСхемыПомещений"));
					ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Место хранения:'"));
					HTMLТекст = HTMLТекст + СтрШаблон(
						"<A href=v8doc:%1>%2</A><BR>",
						"storage",
						РаботаС_HTML.ЗаменитьСпецСимволыHTML(МестоХраненияТекст));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если РеквизитыХраненияИспользуются(
			РеквизитыВида.УчитыватьМестоХранения, Объект.МестоХранения, Объект.ФормаДокумента) Тогда 
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Место хранения:'"), Объект.МестоХранения);
		КонецЕсли;
		
		Если РеквизитыХраненияИспользуются(
			РеквизитыВида.УчитыватьОтветственногоЗаХранение, Объект.ОтветственныйЗаХранение, Объект.ФормаДокумента) Тогда 
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Отв. за хранение:'"), Объект.ОтветственныйЗаХранение);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Передан:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"holder",
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(КомуПереданДокумент));
		КонецЕсли;	
		
		HTMLТекст = HTMLТекст + "</td></tr>";
		
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""3"">";
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа")
	 Или ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности")
	 Или ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов")
	 Или (ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(Объект.Проект))
	Тогда 	
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;	
		
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Гриф:'"),  Объект.ГрифДоступа);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вопрос:'"),  Объект.ВопросДеятельности);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(Объект.Проект) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Проект:'"),  Объект.Проект);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда 
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние:'"));
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"status",
			Форма.СостояниеТекст);
	КонецЕсли;
	
	Если ИспользоватьОбменЭД И ЗначениеЗаполнено(Форма.СостояниеЭДО) Тогда
		
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние ЭДО:'"));  

		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"OpenEDI",
			Форма.СостояниеЭДО);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.УтверждениеТекст) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Утвержден:'"), Форма.УтверждениеТекст);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ПодписьТекст) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписан:'"), Форма.ПодписьТекст);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Комментарий) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Комментарий:'"),  Объект.Комментарий);
	КонецЕсли;
	
	Если Не Форма.НеПоказыватьДанныеОбработки Тогда
		ДобавитьОбзорРезультатов(HTMLТекст, Объект);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";	
	HTMLТекст = HTMLТекст + "</table>";
	
	HTMLТекст = HTMLТекст + "</body></html>";
	
	ОбзорОбъектовКлиентСервер.УдалитьВредоносныйКодИзТекста(HTMLТекст);
	
	Возврат HTMLТекст;
	
КонецФункции

Функция ПолучитьОбзорШаблонаДокумента(Объект) Экспорт 
	
	HTMLТекст = ОбзорДокументаПереопределяемый.ПолучитьОбзорШаблонаДокумента(Объект);
	Если ЗначениеЗаполнено(HTMLТекст) Тогда 
		Возврат HTMLТекст;
	КонецЕсли;
	
	ПараметрыУчета = Новый Структура;
	ПараметрыУчета.Вставить("ВестиУчетСторон", Ложь);
	ПараметрыУчета.Вставить("ВестиУчетПоКонтрагентам", Ложь);
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		КэшДокументыПредприятияФормаЭлемента =
			КэшиНаВремяВызоваПовтИсп.КэшДокументыПредприятияФормаЭлемента();
		Если КэшДокументыПредприятияФормаЭлемента.Инициализирован
			И КэшДокументыПредприятияФормаЭлемента.КэшДокумента.ВидДокумента = Объект.ВидДокумента Тогда
			ПараметрыУчета = КэшДокументыПредприятияФормаЭлемента.КэшВидаДокумента.ВестиУчетПоКонтрагентам;
		Иначе
			ПараметрыУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидДокумента,
				"ВестиУчетСторон, ВестиУчетПоКонтрагентам");
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыУчета.ВестиУчетСторон Или ПараметрыУчета.ВестиУчетПоКонтрагентам Тогда
		Возврат ПолучитьОбзорШаблонаДокументаСКонтрагентом(Объект);
	Иначе	
		Возврат ПолучитьОбзорШаблонаДокументаБезКонтрагента(Объект);
	КонецЕсли;	
	
КонецФункции	

Функция ПолучитьОбзорПроекта(Форма, Объект) Экспорт 

	Организация = Объект.Организация;
	
	// border-width: 1; border-style: solid; border-color: #413003;
	// Формируем основное представление документа	
	HTMLТекст = "<html>
	|<head>
	|<style type=""text/css"">
	|	body {
	|		overflow:    auto;
	|		margin-top:  6px;
	|		margin-left: 10px;
	|		margin-bottom: 0px;
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	table {  
	|		width:       100%; 
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	td {vertical-align: top;} 
	| 	a:link {
	|		color: #006699; text-decoration: none;}
	|	a:visited {
	|		color: #006699; text-decoration: none;}
	|	a:hover {
	|		color: #006699; text-decoration: underline;}
	|	p {
	|		margin-top: 7px; line-height: 1.3;}
	|</style>
	|<body>";
	
	
	HTMLТекст = HTMLТекст + "<table>";
	
	// Наименование и описание
	HTMLТекст = HTMLТекст + "<tr><td>";
	
	HTMLТекст = HTMLТекст + "<p>";
	Заголовок = Объект.Наименование;
	HTMLТекст = HTMLТекст + СтрШаблон(
		"<B>%1</B>",
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(Заголовок));
		
	Если ЗначениеЗаполнено(Объект.Описание) Тогда
		HTMLТекст = HTMLТекст + "<p>";
		Содержание = Объект.Описание;
		HTMLТекст = HTMLТекст + СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Содержание), Символы.ПС, "<br>");
	КонецЕсли;
		
	HTMLТекст = HTMLТекст + "</td></tr>";	  
	
	ЕстьЕмайл = Ложь;
	Для Каждого Строка Из Объект.ПроектнаяКоманда Цикл
		КонтактнаяИнформация = ПолучитьКонтактнуюИнформациюОбъекта(Строка.Исполнитель);
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
			ЕстьЕмайл = Истина;
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	
	// Руководитель и заказчик
	HTMLТекст = HTMLТекст + "<tr><td>";
	
	HTMLТекст = HTMLТекст + "<table>";
	HTMLТекст = HTMLТекст + "<tr>";      
	Если ЕстьЕмайл Тогда
		HTMLТекст = HTMLТекст + "<td width=""400"" style=""padding:0;"">";
	Иначе
		HTMLТекст = HTMLТекст + "<td style=""padding:0;"">";
	КонецЕсли;	
	
	HTMLТекст = HTMLТекст + "<p>";	
	Если ЗначениеЗаполнено(Объект.Руководитель) Тогда
		ДобавитьВТекстДанныеКонтактногоЛица(Объект.Руководитель, HTMLТекст, НСтр("ru = 'Руководитель:'"));
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<p>";
	Если ЗначениеЗаполнено(Объект.ТекущийПланНачало) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Начало:'"), Формат(Объект.ТекущийПланНачало, "ДЛФ=D"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ТекущийПланОкончание) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Окончание:'"), Формат(Объект.ТекущийПланОкончание, "ДЛФ=D"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ТекущийПланТрудозатраты) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Трудозатраты:'"), 
			Строка(Объект.ТекущийПланТрудозатраты) + " " + Строка(Объект.ЕдиницаТрудозатратЗадач));
	КонецЕсли;
	ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Состояние:'"),  Объект.Состояние);
	
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "<td style=""padding:0,5;"">";
	
	HTMLТекст = HTMLТекст + "<p>";	
	Если ЗначениеЗаполнено(Объект.Заказчик) Тогда
		ДобавитьВТекстДанныеКонтактногоЛица(Объект.Заказчик, HTMLТекст, НСтр("ru = 'Заказчик:'"));
	КонецЕсли;
	
	ПраваНаПапку = ДокументооборотПраваДоступа.ПраваПользователяПоОбъекту(Объект.Папка);
	Если ПраваНаПапку.Чтение Тогда
		HTMLТекст = HTMLТекст + "<p>";
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Папка:'"), 	Объект.Папка);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Гриф:'"),  Объект.ГрифДоступа);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВидыПроектов") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вид:'"),  Объект.ВидПроекта);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	HTMLТекст = HTMLТекст + "</table>";
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	Если Объект.ПроектнаяКоманда.Количество() > 0 Тогда  
		HTMLТекст = HTMLТекст + "<tr><td>";
		HTMLТекст = HTMLТекст + "<table   style=""margin-top:5;  border-collapse: collapse; "">";
		
		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td style=""padding-bottom:7;"" colspan=""3"">";
		
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"team",
			НСтр("ru = 'Проектная команда:'"));
		HTMLТекст = HTMLТекст + "</td>";	
		
		Ном = 1;
		Для Каждого Строка Из Объект.ПроектнаяКоманда Цикл
			HTMLТекст = HTMLТекст + "<tr>";
			HTMLТекст = HTMLТекст + "<td width=""20"" style=""padding:5; border-width: 1; border-style: solid; border-color: #A0A0A0; "" align=""center""   >";
			ДобавитьРеквизит(HTMLТекст, , Ном);
			HTMLТекст = HTMLТекст + "</td>";
			
			Если ЕстьЕмайл Тогда 
				HTMLТекст = HTMLТекст + "<td width=""365"" style=""padding:5; border-width: 1; border-style: solid; border-color: #A0A0A0; ""  >";
			Иначе
				HTMLТекст = HTMLТекст + "<td style=""padding:5; border-width: 1; border-style: solid; border-color: #A0A0A0; ""  >";
			КонецЕсли;	
			ДобавитьРеквизит(HTMLТекст, , Строка.Исполнитель);
			HTMLТекст = HTMLТекст + "</td>";
			
			КонтактнаяИнформация = ПолучитьКонтактнуюИнформациюОбъекта(Строка.Исполнитель);
		
			Если ЕстьЕмайл Тогда 
				HTMLТекст = HTMLТекст + "<td width=""300"" style=""padding:5; border-width: 1; border-style: solid; border-color: #A0A0A0; "">";
			Иначе
				HTMLТекст = HTMLТекст + "<td>";
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
				HTMLТекст = HTMLТекст + СтрШаблон(
					"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
					"message"+КонтактнаяИнформация.Емайл,
					РаботаС_HTML.ЗаменитьСпецСимволыHTML(КонтактнаяИнформация.Емайл));
			КонецЕсли;
			HTMLТекст = HTMLТекст + "</td>";
			
			HTMLТекст = HTMLТекст + "<td>";
			HTMLТекст = HTMLТекст + "</td>";
			HTMLТекст = HTMLТекст + "</tr>";
			
			Ном = Ном + 1;
		КонецЦикла;	
		HTMLТекст = HTMLТекст + "</table>";
			
		HTMLТекст = HTMLТекст + "<p>";	
		HTMLТекст = HTMLТекст + "</td></tr>";
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<tr><td>";
	
	ДобавитьОбзорДополнительныхРеквизитов(HTMLТекст, Объект, Форма);
	
	Если ЗначениеЗаполнено(Объект.Комментарий) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Комментарий:'"),  Объект.Комментарий);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";	
	HTMLТекст = HTMLТекст + "</table>";
	
	HTMLТекст = HTMLТекст + "</body></html>";
	
	ОбзорОбъектовКлиентСервер.УдалитьВредоносныйКодИзТекста(HTMLТекст);
	
	Возврат HTMLТекст;
	
КонецФункции	

Функция ПолучитьОбзорПустогоШаблона() Экспорт 
	
	HTMLТекст = "<html>
	|<head>
	|<style type=""text/css"">
	|	body {
	|		overflow:    auto;
	|		margin-top:  6px; 		 
	|		margin-left: 10px; 
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	table {
	|		width:       100%; 
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	td {vertical-align: top;}
	| 	a:link {
	|		color: #006699; text-decoration: none;}
	|	a:visited {
	|		color: #006699; text-decoration: none;}
	|	a:hover {
	|		color: #006699; text-decoration: underline;}
	|	p {
	|		margin-top: 7px;}
	|</style>
	|<body>";
	
	HTMLТекст = HTMLТекст + "<table>";
	HTMLТекст = HTMLТекст + "<tr>";
	
	HTMLТекст = HTMLТекст + "<td width=""90%"" align=center >";
	ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Создать незаполненный документ'"), "");
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + "</td>";	
	
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "</table>";
	HTMLТекст = HTMLТекст + "</body></html>";
	
	ОбзорОбъектовКлиентСервер.УдалитьВредоносныйКодИзТекста(HTMLТекст);
	
	Возврат HTMLТекст;
	
КонецФункции	

#Область ПечатьКарточкиДокумента

// Выполняет печать карточки документа для внешнего подписания.
// 
// Параметры:
//  МассивОбъектов - Массив Из СправочникСсылка.ДокументыПредприятия - Массив ссылок на документы;
//  ОбъектыПечати  - СписокЗначений Из СправочникСсылка.ДокументыПредприятия - список объектов печати;
// 
// Возвращаемое значение:
//  ТабличныйДокумент
//
Функция ПечатьКарточкиДокументаВнешнееПодписание(МассивОбъектов, ОбъектыПечати) Экспорт 
	
	// Создаем табличный документ и устанавливаем имя параметров печати
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_КарточкаДокументаВнешнееПодписание";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.ДокументыПредприятия.ПФ_MXL_КарточкаДокументаВнешнееПодписание");
	
	Результат = ДанныеДляПечатиКарточекДокументов(МассивОбъектов);
	
	// Чтобы не было запроса в цикле.
	СсылкиНаДокументы = Результат.Строки.ВыгрузитьКолонку("Ссылка");
	СведенияОПолученииОригинала = СведенияОПолученииОригинала(СсылкиНаДокументы);
	СтатьиДДСПоДокументам = СтатьиДДСПоДокументам(СсылкиНаДокументы);
	
	ПервыйДокумент = Истина;
	Для Каждого СтрокаСсылка Из Результат.Строки Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки с которой начали выводить текущий документ
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		РеквизитыДокумента = РеквизитыДокументаДляКарточки(СтрокаСсылка);
		
		Если РеквизитыДокумента.ЭтоВходящийДокумент Тогда
			ВывестиОбзорВходящегоДокумента(ТабличныйДокумент, Макет,
				РеквизитыДокумента, СведенияОПолученииОригинала[РеквизитыДокумента.Ссылка]);
		ИначеЕсли РеквизитыДокумента.ЭтоИсходящийДокумент Тогда
			ВывестиОбзорИсходящегоДокумента(ТабличныйДокумент, Макет,
				РеквизитыДокумента, СведенияОПолученииОригинала[РеквизитыДокумента.Ссылка]);
		ИначеЕсли РеквизитыДокумента.ВестиУчетСторон Или РеквизитыДокумента.ВестиУчетПоКонтрагентам Тогда
			ВывестиОбзорДокументаСКонтрагентом(ТабличныйДокумент, Макет, РеквизитыДокумента,
				СведенияОПолученииОригинала[РеквизитыДокумента.Ссылка],
				СтатьиДДСПоДокументам[РеквизитыДокумента.Ссылка]);
		Иначе
			ВывестиОбзорДокументаБезКонтрагента(ТабличныйДокумент, Макет, РеквизитыДокумента,
				СведенияОПолученииОригинала[РеквизитыДокумента.Ссылка],
				СтатьиДДСПоДокументам[РеквизитыДокумента.Ссылка]);
		КонецЕсли;
		
		// В табличном документе зададим имя области в которую был 
		// выведен объект. Нужно для возможности печати по-комплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, СтрокаСсылка.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПечатьКарточкиДокумента

// Данные для печати карточек документов.
// 
// Параметры:
//  Документы - Массив из СправочникСсылка.ДокументыПредприятия - Документы
// 
// Возвращаемое значение:
//  ДеревоЗначений - Данные, необходимые для печати карточек документов
//
Функция ДанныеДляПечатиКарточекДокументов(Документы)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДляПечатиКарточекДокументов();
	Запрос.УстановитьПараметр("Ссылки", Документы);
	Возврат Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

// Сведения о получении оригинала.
// 
// Параметры:
//  Документы - Массив Из СправочникСсылка.ДокументыПредприятия
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//   * Ключ - СправочникСсылка.ДокументыПредприятия
//   * Значение - Структура:
//     ** ОригиналПолучен - Булево
//     ** ОригиналПолученТекст - Строка
//
Функция СведенияОПолученииОригинала(Документы)
	
	Результат = Новый Соответствие();
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДанныеДокументовПредприятия.Документ КАК Документ,
		|	ДанныеДокументовПредприятия.ОригиналПолучен КАК ОригиналПолучен,
		|	ДанныеДокументовПредприятия.ОригиналПолучил КАК ОригиналПолучил,
		|	ДанныеДокументовПредприятия.ДатаПолученияОригинала КАК ДатаПолученияОригинала,
		|	ДанныеДокументовПредприятия.ОригиналПолучил.ПредставлениеВДокументах КАК СотрудникПредставлениеВДокументах
		|ИЗ
		|	РегистрСведений.ДанныеДокументовПредприятия КАК ДанныеДокументовПредприятия
		|ГДЕ
		|	ДанныеДокументовПредприятия.Документ В(&Документы)");
	Запрос.Параметры.Вставить("Документы", Документы);
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	ТаблицаДанных.Индексы.Добавить("Документ");
	
	Для Каждого ДокументСсылка Из Документы Цикл
		
		РезультатПоДокументу = Новый Структура("ОригиналПолучен,ОригиналПолученТекст", Ложь, "");
		Результат.Вставить(ДокументСсылка, РезультатПоДокументу);
		
		НайденныеПоДокументу = ТаблицаДанных.НайтиСтроки(Новый Структура("Документ", ДокументСсылка));
		Для Каждого Запись Из НайденныеПоДокументу Цикл
			Если Запись.ОригиналПолучен Тогда
				Если ЗначениеЗаполнено(Запись.СотрудникПредставлениеВДокументах) Тогда
					Сотрудник = Запись.СотрудникПредставлениеВДокументах;
				Иначе
					Сотрудник = Строка(Запись.ОригиналПолучил);
				КонецЕсли;
				
				РезультатПоДокументу.ОригиналПолучен = Истина;
				РезультатПоДокументу.ОригиналПолученТекст = СтрШаблон(НСтр("ru = 'Получен (%1, %2)'"),
					Сотрудник, Формат(Запись.ДатаПолученияОригинала, "ДЛФ=D"));
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Статьи ДДС по документам.
// 
// Параметры:
//  Документы - Массив Из СправочникСсылка.ДокументыПредприятия
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение:
//   * Ключ - СправочникСсылка.ДокументыПредприятия
//   * Значение - Массив Из СправочникСсылка.СтатьиДвиженияДенежныхСредств
//
Функция СтатьиДДСПоДокументам(Документы)
	
	Результат = Новый Соответствие();
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СтатьиДДСДокументов.Документ КАК Документ,
		|	СтатьиДДСДокументов.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
		|ИЗ
		|	РегистрСведений.СтатьиДвиженияДенежныхСредствДокументов КАК СтатьиДДСДокументов
		|ГДЕ
		|	СтатьиДДСДокументов.Документ В(&Документы)");
	Запрос.Параметры.Вставить("Документы", Документы);
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	ТаблицаДанных.Индексы.Добавить("Документ");
	
	Для Каждого ДокументСсылка Из Документы Цикл
		
		РезультатПоДокументу = Новый Массив;
		Результат.Вставить(ДокументСсылка, РезультатПоДокументу);
		
		НайденныеПоДокументу = ТаблицаДанных.НайтиСтроки(Новый Структура("Документ", ДокументСсылка));
		Для Каждого Запись Из НайденныеПоДокументу Цикл
			РезультатПоДокументу.Добавить(Запись.СтатьяДвиженияДенежныхСредств);
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Текст запроса для печати карточек документов.
// 
// Возвращаемое значение:
//  Строка - Текст запроса для печати карточек документов
//
Функция ТекстЗапросаДляПечатиКарточекДокументов()
	
	Возврат "ВЫБРАТЬ
	|	Документы.Ссылка КАК Ссылка,
	|	// Параметры вида документа
	|	ЕСТЬNULL(ВидыДокументов.ЯвляетсяВходящейКорреспонденцией, ЛОЖЬ) КАК ЭтоВходящийДокумент,
	|	ЕСТЬNULL(ВидыДокументов.ЯвляетсяИсходящейКорреспонденцией, ЛОЖЬ) КАК ЭтоИсходящийДокумент,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетСторон, ЛОЖЬ) КАК ВестиУчетСторон,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетПоКонтрагентам, ЛОЖЬ) КАК ВестиУчетПоКонтрагентам,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетПоНоменклатуреДел, ЛОЖЬ) КАК ВестиУчетПоНоменклатуреДел,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетПоОрганизациям, ЛОЖЬ) КАК ВестиУчетПоОрганизациям,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетПоТематикам, ЛОЖЬ) КАК ВестиУчетПоТематикам,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетТоваровИУслуг, ЛОЖЬ) КАК ВестиУчетТоваровИУслуг,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетПоСтатьямДДС, ЛОЖЬ) КАК ВестиУчетПоСтатьямДДС,
	|	ЕСТЬNULL(ВидыДокументов.ИспользоватьВременныеНомера, ЛОЖЬ) КАК ИспользоватьВременныеНомера,
	|	ЕСТЬNULL(ВидыДокументов.ИспользоватьСрокИсполнения, ЛОЖЬ) КАК ИспользоватьСрокИсполнения,
	|	ЕСТЬNULL(ВидыДокументов.КонтролироватьНаличиеОригинала, ЛОЖЬ) КАК КонтролироватьНаличиеОригинала,
	|	ЕСТЬNULL(ВидыДокументов.СрокИсполненияУказанВРабочихДнях, ЛОЖЬ) КАК СрокИсполненияУказанВРабочихДнях,
	|	ЕСТЬNULL(ВидыДокументов.УчитыватьНедействующиеДокументы, ЛОЖЬ) КАК УчитыватьНедействующиеДокументы,
	|	ЕСТЬNULL(ВидыДокументов.УчитыватьСрокДействия, ЛОЖЬ) КАК УчитыватьСрокДействия,
	|	ЕСТЬNULL(ВидыДокументов.УчитыватьСуммуДокумента, ЛОЖЬ) КАК УчитыватьСуммуДокумента,
	|	ЕСТЬNULL(ВидыДокументов.УчитыватьМестоХранения, ЛОЖЬ) КАК УчитыватьМестоХранения,
	|	ЕСТЬNULL(ВидыДокументов.УчитыватьОтветственногоЗаХранение, ЛОЖЬ) КАК УчитыватьОтветственногоЗаХранение,
	|	ЕСТЬNULL(ВидыДокументов.ЯвляетсяЗаявкойНаОплату, ЛОЖЬ) КАК ЯвляетсяЗаявкойНаОплату,
	|	// Реквизиты документа
	|	ВЫБОР
	|		КОГДА Документы.ДатаРегистрации = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Документы.ДатаСоздания
	|		ИНАЧЕ Документы.ДатаРегистрации
	|	КОНЕЦ КАК ДатаУчетаДокумента,
	|	Документы.ДатаСоздания КАК ДатаСоздания,
	|	Документы.Организация КАК Организация,
	|	Документы.Контрагент КАК Контрагент,
	|	Документы.Контрагенты.(
	|		Контрагент КАК Контрагент,
	|		КонтактноеЛицо КАК КонтактноеЛицо,
	|		ПодписалОтКонтрагента КАК ПодписалОтКонтрагента
	|	) КАК Контрагенты,
	|	Документы.Стороны КАК Стороны,
	|	Документы.ВидДокумента КАК ВидДокумента,
	|	Документы.Тематика КАК Тематика,
	|	Документы.Адресат КАК Адресат,
	|	Документы.Подразделение КАК Подразделение,
	|	Документы.ДатаРегистрации КАК ДатаРегистрации,
	|	Документы.РегистрационныйНомер КАК РегистрационныйНомер,
	|	Документы.ВременныйНомер КАК ВременныйНомер,
	|	Документы.Заголовок КАК Заголовок,
	|	Документы.Содержание КАК Содержание,
	|	Документы.СрокИсполнения КАК СрокИсполнения,
	|	Документы.Сумма КАК Сумма,
	|	Валюты.Наименование КАК ВалютаНаименование,
	|	Документы.Подготовил КАК Подготовил,
	|	Документы.Подписал КАК Подписал,
	|	Документы.ПодписалОтКонтрагента КАК ПодписалОтКонтрагента,
	|	Документы.НоменклатураДел КАК НоменклатураДел,
	|	Документы.Дело КАК Дело,
	|	Документы.Ответственный КАК Ответственный,
	|	Документы.ОтветственныйЗаХранение КАК ОтветственныйЗаХранение,
	|	Документы.МестоХранения КАК МестоХранения,
	|	Документы.ФормаДокумента КАК ФормаДокумента,
	|	Документы.Проект КАК Проект,
	|	Документы.ГрифДоступа КАК ГрифДоступа,
	|	Документы.ВопросДеятельности КАК ВопросДеятельности,
	|	Документы.Комментарий КАК Комментарий,
	|	Документы.НеДействует КАК НеДействует,
	|	Документы.Папка КАК Папка,
	|	//Корреспонденция
	|	ЕСТЬNULL(Корреспонденция.НомерКонтрагента, """") КАК НомерКонтрагента,
	|	ЕСТЬNULL(Корреспонденция.ДатаКонтрагента, ДАТАВРЕМЯ(1,1,1)) КАК ДатаКонтрагента,	
	|	Корреспонденция.Корреспонденты.(
	|		Корреспондент КАК Корреспондент,
	|		Адресат КАК Адресат
	|	) КАК Корреспонденты
	|ИЗ
	|	Справочник.ДокументыПредприятия КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыДокументов КАК ВидыДокументов
	|			ПО ВидыДокументов.Ссылка = Документы.ВидДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Корреспонденция КАК Корреспонденция
	|			ПО Корреспонденция.Основание = Документы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК Валюты
	|			ПО Валюты.Ссылка = Документы.Валюта
	|ГДЕ
	|	Документы.Ссылка В (&Ссылки)
	|ИТОГИ
	|ПО
	|	Ссылка";
	
КонецФункции

// Реквизиты документа для карточки из строки группировки.
// 
// Параметры:
//  СтрокаДерева - СтрокаДереваЗначений - Строка дерева
// 
// Возвращаемое значение:
//  СтрокаДереваЗначений - Реквизиты документа для карточки:
//   * ЭтоВходящийДокумент					- Булево
//   * ЭтоИсходящийДокумент					- Булево
//   * ВестиУчетСторон						- Булево
//   * ВестиУчетПоКонтрагентам				- Булево
//   * ВестиУчетПоНоменклатуреДел			- Булево
//   * ВестиУчетПоОрганизациям				- Булево
//   * ВестиУчетПоОрганизациям				- Булево
//   * ВестиУчетПоТематикам					- Булево
//   * ВестиУчетТоваровИУслуг				- Булево
//   * ВестиУчетПоСтатьямДДС				- Булево
//   * ИспользоватьВременныеНомера			- Булево
//   * ИспользоватьСрокИсполнения			- Булево
//   * СрокИсполненияУказанВРабочихДнях		- Булево
//   * КонтролироватьНаличиеОригинала		- Булево
//   * УчитыватьНедействующиеДокументы		- Булево
//   * УчитыватьСрокДействия				- Булево
//   * УчитыватьСуммуДокумента				- Булево
//   * УчитыватьМестоХранения				- ПеречислениеСсылка.ВариантыИспользованияПолейХранения
//   * УчитыватьОтветственногоЗаХранение	- ПеречислениеСсылка.ВариантыИспользованияПолейХранения
//   * ЯвляетсяЗаявкойНаОплату				- Булево
//   * ДатаУчетаДокумента					- Дата
//   * ДатаСоздания							- Дата
//   * Организация							- СправочникСсылка.Организации
//   * Контрагент							- СправочникСсылка.Контрагенты
//   * Контрагенты				- ТаблицаЗначений:
//     ** Контрагент			- СправочникСсылка.Контрагенты
//     ** КонтактноеЛицо		- СправочникСсылка.КонтактныеЛица
//     ** ПодписалОтКонтрагента	- СправочникСсылка.КонтактныеЛица
//   * Стороны				- ТаблицаЗначений
//   * ВидДокумента							- СправочникСсылка.ВидыДокументов
//   * Тематика								- СправочникСсылка.ТематикиДокументов
//   * Адресат								- СправочникСсылка.Сотрудники, СправочникСсылка.Пользователи -
//   * Подразделение						- СправочникСсылка.СтруктураПредприятия
//   * ДатаРегистрации						- Дата
//   * РегистрационныйНомер					- Строка
//   * ВременныйНомер						- Строка
//   * Заголовок							- Строка
//   * Содержание							- Строка
//   * СрокИсполнения						- Дата
//   * Сумма								- Число
//   * ВалютаНаименование					- Строка
//   * Подготовил							- СправочникСсылка.Сотрудники, СправочникСсылка.Пользователи -
//   * Подписал								- СправочникСсылка.Сотрудники, СправочникСсылка.Пользователи -
//   * ПодписалОтКонтрагента				- СправочникСсылка.КонтактныеЛица
//   * НоменклатураДел						- СправочникСсылка.НоменклатураДел
//   * Дело									- СправочникСсылка.ДелаХраненияДокументов
//   * Ответственный						- СправочникСсылка.Сотрудники, СправочникСсылка.Пользователи -
//   * ОтветственныйЗаХранение				- СправочникСсылка.Сотрудники, СправочникСсылка.Пользователи -
//   * Папка								- СправочникСсылка.ПапкиДокументов
//   * ФормаДокумента						- ПеречислениеСсылка.ВариантыФормДокументов
//   * МестоХранения						- СправочникСсылка.СтруктураПредприятия, СправочникСсылка.МестаХраненияДел, СправочникСсылка.ТерриторииИПомещения, Строка -
//   * Проект								- СправочникСсылка.Проекты
//   * ГрифДоступа							- СправочникСсылка.ГрифыДоступа
//   * ВопросДеятельности					- СправочникСсылка.ВопросыДеятельности
//   * Комментарий							- Строка
//   * НеДействует							- Булево
//   * НомерКонтрагента						- Строка
//   * ДатаКонтрагента						- Дата
//   * Корреспонденты		- ТаблицаЗначений:
//     ** Корреспондент		- СправочникСсылка.Контрагенты
//     ** Адресат			- СправочникСсылка.Сотрудники, СправочникСсылка.Пользователи, СправочникСсылка.КонтактныеЛица -
//
Функция РеквизитыДокументаДляКарточки(СтрокаДерева)
	
	Возврат СтрокаДерева.Строки.Получить(0);
	
КонецФункции

// Вывести обзор входящего документа в табличный документ.
// 
// Параметры:
//  ТабличныйДокумент   - ТабличныйДокумент
//  Макет               - ТабличныйДокумент
//  РеквизитыДокумента  см. РеквизитыДокументаДляКарточки
//  СведенияОПолученииОригинала - Структура:
//   * ОригиналПолучен      - Булево
//   * ОригиналПолученТекст - Строка
//
Процедура ВывестиОбзорВходящегоДокумента(ТабличныйДокумент, Макет,
		РеквизитыДокумента, СведенияОПолученииОригинала)
	
	ОбластьГоризонтальныйРазделитель = Макет.ПолучитьОбласть("ГоризонтальныйРазделитель");
	
	ОбластьОтКогоКому			= Макет.ПолучитьОбласть("ШапкаВходящегоОтКогоКому");
	ОбластьРеквизитыШапки		= Макет.ПолучитьОбласть("ШапкаВходящегоРеквизиты");
	ОбластьРеквизит				= Макет.ПолучитьОбласть("Реквизит");
	ОбластьРеквизитПолужирным	= Макет.ПолучитьОбласть("РеквизитПолужирным");
	
	ТабличныйДокумент.Вывести(ОбластьОтКогоКому);
	
	// Наполняем левые и правые реквизиты шапки.
	ЛевыеРеквизиты = Новый Массив;
	ПравыеРеквизиты = Новый Массив;
	
	Организация = РеквизитыДокумента.Организация;
	Контрагент = РеквизитыДокумента.Контрагент;
	ДатаНачалаОтсчета = РеквизитыДокумента.ДатаУчетаДокумента;
	
	// От кого, контрагент.
	Если ЗначениеЗаполнено(Контрагент) Тогда
		ЛевыеРеквизиты.Добавить(Юрлица.ПредставлениеЮрлицаНаДату(Контрагент, ДатаНачалаОтсчета));
	КонецЕсли;
	
	// Вид или Вид-тематика документа.
	ВидТематикаДокументаПредставление = ВидТематикаДокументаПредставление(
		РеквизитыДокумента.ВидДокумента,
		РеквизитыДокумента.ВестиУчетПоТематикам,
		РеквизитыДокумента.Тематика);
	Если ЗначениеЗаполнено(ВидТематикаДокументаПредставление) Тогда
		ЛевыеРеквизиты.Добавить(ВРег(ВидТематикаДокументаПредставление));
	КонецЕсли;
	
	// Исходящая дата и номер.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ДатаКонтрагента) 
			И ЗначениеЗаполнено(РеквизитыДокумента.НомерКонтрагента) Тогда
		ЛевыеРеквизиты.Добавить(Формат(РеквизитыДокумента.ДатаКонтрагента, "ДЛФ=D")
			+ " № " +  РеквизитыДокумента.НомерКонтрагента);
	Иначе
		ЛевыеРеквизиты.Добавить("________ №________");
	КонецЕсли;
	
	// В ответ на.
	ПредставленияВОтветНа = Новый Массив;
	СписокВОтветНа = Новый СписокЗначений();
	ТипСвязи = Справочники.ТипыСвязей.ПолученВОтветНа;
	ДокументыВОтветНа = СвязиОбъектов.ПолучитьСвязанныеОбъекты(РеквизитыДокумента.Ссылка, ТипСвязи);
	Для Каждого ДокументВОтветНа ИЗ ДокументыВОтветНа Цикл
		СписокВОтветНа.Добавить(ДокументВОтветНа);
	КонецЦикла;
	Если СписокВОтветНа.Количество() Тогда
		РеквизитыВОтветНа = РаботаСКорреспонденцией.РеквизитыОтправителяДокументовКорреспонденции(
			СписокВОтветНа.ВыгрузитьЗначения()).Выбрать();
		Пока РеквизитыВОтветНа.Следующий() Цикл
			Представление = РаботаСКорреспонденцией.ПредставлениеДокументаКорреспонденции(
				РеквизитыВОтветНа, НСтр("ru = '%1 от %2'"),, Ложь);
			ПредставленияВОтветНа.Добавить(Представление);
		КонецЦикла;
		Если ПредставленияВОтветНа.Количество() Тогда
			ПредставленияВОтветНа[0] = НСтр("ru = 'На:'") + " " + ПредставленияВОтветНа[0];
		КонецЕсли;
	Иначе
		ПредставленияВОтветНа.Добавить(НСтр("ru = 'На №_______ от _______'"));
	КонецЕсли;
	Если ПредставленияВОтветНа.Количество() Тогда
		ЛевыеРеквизиты.Добавить(СтрСоединить(ПредставленияВОтветНа, "; "));
	КонецЕсли;
	
	// Кому, организация.
	Если ЗначениеЗаполнено(Организация) Тогда
		ПравыеРеквизиты.Добавить(Юрлица.ПредставлениеЮрлицаНаДату(Организация, ДатаНачалаОтсчета));
	КонецЕсли;
	
	// Кому, адресат.
	АдресатВходящейКорреспонденцииПредставление = 
		ПредставлениеКонтактногоЛицаСКонтактами(РеквизитыДокумента.Корреспонденты);
	Если ЗначениеЗаполнено(АдресатВходящейКорреспонденцииПредставление) Тогда
		ПравыеРеквизиты.Добавить(АдресатВходящейКорреспонденцииПредставление);
	КонецЕсли;
	
	// Подразделение.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Подразделение) Тогда
		ПравыеРеквизиты.Добавить(НСтр("ru = 'Подразделение:'") + " " + РеквизитыДокумента.Подразделение);
	КонецЕсли;
	
	// Дата регистрации и регистрационный номер.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ДатаРегистрации) 
			И ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер) Тогда
		ПравыеРеквизиты.Добавить(СтрШаблон(
			НСтр("ru = 'Рег. № %1 от %2'"),
			РеквизитыДокумента.РегистрационныйНомер,
			Формат(РеквизитыДокумента.ДатаРегистрации, "ДЛФ=D")));
	КонецЕсли;
	
	// Вывод реквизитов шапки.
	Для Индекс = 0 По Макс(ЛевыеРеквизиты.ВГраница(), ПравыеРеквизиты.ВГраница()) Цикл
		ЗначениеЛевогоРеквизита = ?(Индекс > ЛевыеРеквизиты.ВГраница(), Неопределено,
			ЛевыеРеквизиты[Индекс]);
		ЗначениеПравогоРеквизита = ?(Индекс > ПравыеРеквизиты.ВГраница(), Неопределено,
			ПравыеРеквизиты[Индекс]);
		ПараметрыОбласти = ПараметрыОбластиРеквизитыВходящегоДокумента(
			ЗначениеЛевогоРеквизита,
			ЗначениеПравогоРеквизита);
		ОбластьРеквизитыШапки.Параметры.Заполнить(ПараметрыОбласти);
		ТабличныйДокумент.Вывести(ОбластьРеквизитыШапки);
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	
	// Заголовок.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Заголовок) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитПолужирным, "", РеквизитыДокумента.Заголовок);
	КонецЕсли;
	
	// Содержание.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Содержание) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", РеквизитыДокумента.Содержание);
	КонецЕсли;
	
	// Связи.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСвязиОбъектов") Тогда
		
		ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
		
		КраткиеСведенияОСвязях = СвязиОбъектов.КраткиеСведенияОСвязях(РеквизитыДокумента.Ссылка);
		
		Если Не ЗначениеЗаполнено(КраткиеСведенияОСвязях) Тогда	
			КраткиеСведенияОСвязях = НСтр("ru = 'Связи: не заданы'");
		КонецЕсли;
		
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитПолужирным, "", КраткиеСведенияОСвязях);
		
	КонецЕсли;
	
	// Срок исполнения.
	ВывестиНадписьОСроке(ТабличныйДокумент, РеквизитыДокумента, ДатаНачалаОтсчета, 
		ОбластьРеквизит, НСтр("ru = 'Срок исполнения:'"));
	
	// Группа полей, которые выводятся рядом друг с другом, но с отступом от пердыдущего блока.
	Если РеквизитыДокумента.УчитыватьСуммуДокумента 
			Или ЗначениеЗаполнено(РеквизитыДокумента.ПодписалОтКонтрагента) Тогда
		ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	КонецЕсли;
	
	// Сумма.
	Если РеквизитыДокумента.УчитыватьСуммуДокумента Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитПолужирным,
			НСтр("ru = 'Сумма:'"),
			Формат(РеквизитыДокумента.Сумма, "ЧДЦ=2; ЧН=0") + " " + РеквизитыДокумента.ВалютаНаименование);
	КонецЕсли;
	
	// Подписал от контрагента.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ПодписалОтКонтрагента) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Подписал:'"), 
			ПредставлениеКонтактногоЛицаСКонтактами(РеквизитыДокумента.ПодписалОтКонтрагента));
	КонецЕсли;
	
	ИспользоватьМестаХранения = ПолучитьФункциональнуюОпцию("ИспользоватьМестаХранения");
	ИспользоватьНоменклатуруДел = ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел");
	КомуПереданДокумент = Делопроизводство.СтрокаКомуПереданДокумент(РеквизитыДокумента.Ссылка);
	
	// Группа полей, которые выводятся рядом друг с другом, но с отступом от пердыдущего блока.
	Если (РеквизитыДокумента.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(РеквизитыДокумента.НоменклатураДел))
		Или (ИспользоватьНоменклатуруДел И ЗначениеЗаполнено(РеквизитыДокумента.Дело))
		Или ЗначениеЗаполнено(РеквизитыДокумента.Ответственный)
		Или ЗначениеЗаполнено(РеквизитыДокумента.ФормаДокумента)
		Или ИспользоватьМестаХранения
		Или ЗначениеЗаполнено(КомуПереданДокумент) Тогда 
		ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	КонецЕсли;
	
	// Ответственный.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Ответственный) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Ответственный:'"), РеквизитыДокумента.Ответственный);
	КонецЕсли;
	
	// Оригинал.
	Если РеквизитыДокумента.КонтролироватьНаличиеОригинала Тогда 
		Если ЗначениеЗаполнено(СведенияОПолученииОригинала.ОригиналПолученТекст) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				НСтр("ru = 'Оригинал:'"), СведенияОПолученииОригинала.ОригиналПолученТекст);
		КонецЕсли;
	КонецЕсли;
	
	// Форма документа.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Форма:'"), РеквизитыДокумента.ФормаДокумента);
	КонецЕсли;
	
	// Номенклатура дел, дело, место хранения дела.
	Если ИспользоватьНоменклатуруДел Тогда
		Если РеквизитыДокумента.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(РеквизитыДокумента.НоменклатураДел) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				НСтр("ru = 'Номенклатура дел:'"), РеквизитыДокумента.НоменклатураДел);
		КонецЕсли;
		Если ЗначениеЗаполнено(РеквизитыДокумента.Дело) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				НСтр("ru = 'Помещен в дело:'"), РеквизитыДокумента.Дело);
			СтруктураСостоянияДела =
				РегистрыСведений.СостоянияДелХраненияДокументов.СостояниеДела(РеквизитыДокумента.Дело);
			Если ТипЗнч(СтруктураСостоянияДела) = Тип("Структура")
				И ЗначениеЗаполнено(СтруктураСостоянияДела.Состояние) Тогда
				ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
					СтруктураСостоянияДела.Состояние, СтруктураСостоянияДела.ДатаСостояния);
			КонецЕсли;
			МестоХранения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыДокумента.Дело, "МестоХраненияДел");
			Если ЗначениеЗаполнено(МестоХранения) Тогда
				МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(МестоХранения,
					ПолучитьФункциональнуюОпцию("ИспользоватьСхемыПомещений"));
				ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
					НСтр("ru = 'Место хранения:'"), МестоХраненияТекст);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Место хранения.
	Если РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьМестоХранения, 
			РеквизитыДокумента.МестоХранения, РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Место хранения:'"), РеквизитыДокумента.МестоХранения);
	КонецЕсли;
	
	// Отв. за хранение.
	Если РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьОтветственногоЗаХранение, 
			РеквизитыДокумента.ОтветственныйЗаХранение, РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Отв. за хранение:'"), РеквизитыДокумента.ОтветственныйЗаХранение);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Передан:'"), КомуПереданДокумент);
	КонецЕсли;
	
	// Группа полей, которые выводятся рядом друг с другом, но с отступом от пердыдущего блока.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа")
	 Или ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности")
	 Или ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов")
	 Или (ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(РеквизитыДокумента.Проект))
	Тогда 	
		ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	КонецЕсли;
	
	// Гриф доступа.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Гриф:'"),  РеквизитыДокумента.ГрифДоступа); 
	КонецЕсли;
	
	// Вопрос деятельности.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Вопрос:'"),  РеквизитыДокумента.ВопросДеятельности);
	КонецЕсли;
	
	// Проект.
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(РеквизитыДокумента.Проект) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Проект:'"),  РеквизитыДокумента.Проект); 
	КонецЕсли;
	
	// Состояние документа.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда 
		СостояниеТекст = Делопроизводство.ПолучитьСтроковоеПредставлениеСостояний(
			РеквизитыДокумента.Ссылка);
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Состояние:'"),  СостояниеТекст);
	КонецЕсли;
	
	// Состояние ЭДО
	ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
	Если ИспользоватьОбменЭД  Тогда
		СостояниеЭДО = ОбменЭДОДокументооборот.СостояниеДокументаДО(РеквизитыДокумента.Ссылка);
		Если ЗначениеЗаполнено(СостояниеЭДО) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
				НСтр("ru = 'Состояние ЭДО:'"),  СостояниеЭДО);
		КонецЕсли;	
	КонецЕсли;
	
	// Строка утверждения.
	РезультатУтверждения = Делопроизводство.ПолучитьСтрокуУтверждения(
		РеквизитыДокумента.Ссылка,
		РеквизитыДокумента.ВидДокумента,
		Новый Структура("ВариантДа, ВариантНет", НСтр("ru = 'Да'"), НСтр("ru = 'Нет'")));
	Если ЗначениеЗаполнено(РезультатУтверждения) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Утвержден:'"), РезультатУтверждения);
	КонецЕсли;
	
	// Строка подписи.
	РезультатПодписания = Делопроизводство.ПолучитьСтрокуПодписи(
		РеквизитыДокумента.Ссылка,
		РеквизитыДокумента.ВидДокумента,
		Новый Структура("ВариантДа, ВариантНет", НСтр("ru = 'Да'"), НСтр("ru = 'Нет'")));
	Если ЗначениеЗаполнено(РезультатПодписания) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Подписан:'"), РезультатПодписания);
	КонецЕсли;
	
	// Комментарий.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Комментарий) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Комментарий:'"),  РеквизитыДокумента.Комментарий);
	КонецЕсли;
	
КонецПроцедуры

// Вывести обзор исходящего документа в табличный документ.
// 
// Параметры:
//  ТабличныйДокумент   - ТабличныйДокумент
//  Макет               - ТабличныйДокумент
//  РеквизитыДокумента  см. РеквизитыДокументаДляКарточки
//  СведенияОПолученииОригинала - Структура:
//   * ОригиналПолучен      - Булево
//   * ОригиналПолученТекст - Строка
//
Процедура ВывестиОбзорИсходящегоДокумента(ТабличныйДокумент, Макет,
		РеквизитыДокумента, СведенияОПолученииОригинала)
	
	ОбластьГоризонтальныйРазделитель = Макет.ПолучитьОбласть("ГоризонтальныйРазделитель");
	
	ОбластьРеквизитыШапки		= Макет.ПолучитьОбласть("ШапкаВходящегоРеквизиты");
	ОбластьРеквизит				= Макет.ПолучитьОбласть("Реквизит");
	ОбластьРеквизитПолужирным	= Макет.ПолучитьОбласть("РеквизитПолужирным");
	
	// Наполняем левые и правые реквизиты шапки.
	ЛевыеРеквизиты = Новый Массив;
	ПравыеРеквизиты = Новый Массив;
	
	Организация = РеквизитыДокумента.Организация;
	ДатаНачалаОтсчета = РеквизитыДокумента.ДатаУчетаДокумента;
	
	ЛевыеРеквизиты.Добавить(НСтр("ru = 'От кого:'"));
	
	// От кого, Организация.
	Если ЗначениеЗаполнено(Организация) Тогда
		ЛевыеРеквизиты.Добавить(Юрлица.ПредставлениеЮрлицаНаДату(Организация, ДатаНачалаОтсчета));
	КонецЕсли;
	
	// Вид или Вид-тематика документа.
	ВидТематикаДокументаПредставление = ВидТематикаДокументаПредставление(
		РеквизитыДокумента.ВидДокумента,
		РеквизитыДокумента.ВестиУчетПоТематикам,
		РеквизитыДокумента.Тематика);
	Если ЗначениеЗаполнено(ВидТематикаДокументаПредставление) Тогда
		ЛевыеРеквизиты.Добавить(Врег(ВидТематикаДокументаПредставление));
	КонецЕсли;
	
	// Дата регистрации и регистрационный номер.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ДатаРегистрации)
			И ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер) Тогда
		ЛевыеРеквизиты.Добавить(Формат(РеквизитыДокумента.ДатаРегистрации, "ДЛФ=D") 
			+ " № " +  РеквизитыДокумента.РегистрационныйНомер);
	Иначе
		ЛевыеРеквизиты.Добавить("________ №________");
	КонецЕсли;
	
	// В ответ на.
	ПредставленияВОтветНа = Новый Массив;
	СписокВОтветНа = Новый СписокЗначений();
	ТипСвязи = Справочники.ТипыСвязей.ОтправленВОтветНа;
	ДокументыВОтветНа = СвязиОбъектов.ПолучитьСвязанныеОбъекты(РеквизитыДокумента.Ссылка, ТипСвязи);
	Для Каждого ДокументВОтветНа ИЗ ДокументыВОтветНа Цикл
		СписокВОтветНа.Добавить(ДокументВОтветНа);
	КонецЦикла;
	Если СписокВОтветНа.Количество() Тогда
		РеквизитыВОтветНа = РаботаСКорреспонденцией.РеквизитыОтправителяДокументовКорреспонденции(
			СписокВОтветНа.ВыгрузитьЗначения()).Выбрать();
		Пока РеквизитыВОтветНа.Следующий() Цикл
			Представление = РаботаСКорреспонденцией.ПредставлениеДокументаКорреспонденции(
				РеквизитыВОтветНа, НСтр("ru = '%1 от %2'"), Ложь, Ложь);
			ПредставленияВОтветНа.Добавить(Представление);
		КонецЦикла;
		Если ПредставленияВОтветНа.Количество() Тогда
			ПредставленияВОтветНа[0] = НСтр("ru = 'На:'") + " " + ПредставленияВОтветНа[0];
		КонецЕсли;
	Иначе
		ПредставленияВОтветНа.Добавить(НСтр("ru = 'На №_______ от _______'"));
	КонецЕсли;
	Если ПредставленияВОтветНа.Количество() Тогда
		ЛевыеРеквизиты.Добавить(СтрСоединить(ПредставленияВОтветНа, "; "));
	КонецЕсли;
	
	// Кому, контрагенты.
	ПервыйПолучатель = Истина;
	КоличествоПолучателей = РеквизитыДокумента.Контрагенты.Количество();
	Для Каждого Получатель Из РеквизитыДокумента.Контрагенты Цикл
		Если ПервыйПолучатель Тогда
			Если КоличествоПолучателей > 1 Тогда 
				ПравыеРеквизиты.Добавить(СтрШаблон(НСтр("ru = 'Кому (%1):'"), КоличествоПолучателей));
			Иначе
				ПравыеРеквизиты.Добавить(НСтр("ru = 'Кому:'"));
			КонецЕсли;
		КонецЕсли;
		ПервыйПолучатель = Ложь;
		
		ЧастиПредставленияПолучателя = Новый Массив;
		КонтрагентПредставление = Юрлица.ПредставлениеЮрлицаНаДату(Получатель.Контрагент, ДатаНачалаОтсчета);
		ЧастиПредставленияПолучателя.Добавить(КонтрагентПредставление);
		Если ЗначениеЗаполнено(Получатель.КонтактноеЛицо) Тогда
			ЧастиПредставленияПолучателя.Добавить(ПредставлениеКонтактногоЛицаСКонтактами(Получатель.КонтактноеЛицо));
		КонецЕсли;
		
		ПравыеРеквизиты.Добавить(СтрСоединить(ЧастиПредставленияПолучателя, Символы.ПС));
		
	КонецЦикла;
	
	// Вывод реквизитов шапки.
	Для Индекс = 0 По Макс(ЛевыеРеквизиты.ВГраница(), ПравыеРеквизиты.ВГраница()) Цикл
		ЗначениеЛевогоРеквизита = ?(Индекс > ЛевыеРеквизиты.ВГраница(), Неопределено,
			ЛевыеРеквизиты[Индекс]);
		ЗначениеПравогоРеквизита = ?(Индекс > ПравыеРеквизиты.ВГраница(), Неопределено,
			ПравыеРеквизиты[Индекс]);
		ПараметрыОбласти = ПараметрыОбластиРеквизитыВходящегоДокумента(
			ЗначениеЛевогоРеквизита,
			ЗначениеПравогоРеквизита);
		ОбластьРеквизитыШапки.Параметры.Заполнить(ПараметрыОбласти);
		ТабличныйДокумент.Вывести(ОбластьРеквизитыШапки);
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	
	// Заголовок.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Заголовок) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитПолужирным, "", РеквизитыДокумента.Заголовок);
	КонецЕсли;
	
	// Содержание.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Содержание) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", РеквизитыДокумента.Содержание);
	КонецЕсли;
	
	// Связи.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСвязиОбъектов") Тогда
		
		ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);

		КраткиеСведенияОСвязях = СвязиОбъектов.КраткиеСведенияОСвязях(РеквизитыДокумента.Ссылка);
		
		Если Не ЗначениеЗаполнено(КраткиеСведенияОСвязях) Тогда	
			КраткиеСведенияОСвязях = НСтр("ru = 'Связи: не заданы'");
		КонецЕсли;
		
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитПолужирным, "", КраткиеСведенияОСвязях);
		
	КонецЕсли;
	
	// Срок исполнения.
	ВывестиНадписьОСроке(ТабличныйДокумент, РеквизитыДокумента, ДатаНачалаОтсчета, 
		ОбластьРеквизит, НСтр("ru = 'Срок ответа:'"));
	
	// Группа полей, которые выводятся рядом друг с другом, но с отступом от пердыдущего блока.
	Если РеквизитыДокумента.УчитыватьСуммуДокумента 
			Или ЗначениеЗаполнено(РеквизитыДокумента.ПодписалОтКонтрагента) Тогда
		ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	КонецЕсли;
	
	// Сумма.
	Если РеквизитыДокумента.УчитыватьСуммуДокумента Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитПолужирным,
			НСтр("ru = 'Сумма:'"),
			Формат(РеквизитыДокумента.Сумма, "ЧДЦ=2; ЧН=0") + " " + РеквизитыДокумента.ВалютаНаименование);
	КонецЕсли;
	
	// Группа полей, которые выводятся рядом друг с другом, но с отступом от пердыдущего блока.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Подписал)
			Или ЗначениеЗаполнено(РеквизитыДокумента.Подготовил)
			Или ЗначениеЗаполнено(РеквизитыДокумента.Подразделение) Тогда
		Если ЗначениеЗаполнено(РеквизитыДокумента.Содержание)
				Или РеквизитыДокумента.УчитыватьСуммуДокумента Тогда
			ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
		КонецЕсли;
	КонецЕсли;
	
	// Подписал.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Подписал) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Подписал:'"), ПредставлениеКонтактногоЛицаСКонтактами(РеквизитыДокумента.Подписал));
	КонецЕсли;
	
	// Подразделение.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Подразделение) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Подразделение:'"), РеквизитыДокумента.Подразделение);
	КонецЕсли;
	
	ИспользоватьНоменклатуруДел = ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел");
	КомуПереданДокумент = Делопроизводство.СтрокаКомуПереданДокумент(РеквизитыДокумента.Ссылка);
	
	// Группа полей, которые выводятся рядом друг с другом, но с отступом от пердыдущего блока.
	Если (РеквизитыДокумента.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(РеквизитыДокумента.НоменклатураДел))
		Или (ИспользоватьНоменклатуруДел И ЗначениеЗаполнено(РеквизитыДокумента.Дело))
		Или ЗначениеЗаполнено(РеквизитыДокумента.Ответственный)
		Или ЗначениеЗаполнено(РеквизитыДокумента.ФормаДокумента)
		Или ЗначениеЗаполнено(КомуПереданДокумент) Тогда 
		ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	КонецЕсли;
	
	// Ответственный.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Ответственный) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Ответственный:'"), РеквизитыДокумента.Ответственный);
	КонецЕсли;
	
	// Форма документа.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Форма:'"), РеквизитыДокумента.ФормаДокумента);
	КонецЕсли;
	
	// Номенклатура дел, дело, место хранения дела.
	Если ИспользоватьНоменклатуруДел Тогда
		Если РеквизитыДокумента.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(РеквизитыДокумента.НоменклатураДел) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				НСтр("ru = 'Номенклатура дел:'"), РеквизитыДокумента.НоменклатураДел);
		КонецЕсли;
		Если ЗначениеЗаполнено(РеквизитыДокумента.Дело) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				НСтр("ru = 'Помещен в дело:'"), РеквизитыДокумента.Дело);
			СтруктураСостоянияДела =
				РегистрыСведений.СостоянияДелХраненияДокументов.СостояниеДела(РеквизитыДокумента.Дело);
			Если ТипЗнч(СтруктураСостоянияДела) = Тип("Структура")
				И ЗначениеЗаполнено(СтруктураСостоянияДела.Состояние) Тогда
				ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
					СтруктураСостоянияДела.Состояние, СтруктураСостоянияДела.ДатаСостояния);
			КонецЕсли;
			МестоХранения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыДокумента.Дело, "МестоХраненияДел");
			Если ЗначениеЗаполнено(МестоХранения) Тогда
				МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(МестоХранения,
					ПолучитьФункциональнуюОпцию("ИспользоватьСхемыПомещений"));
				ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
					НСтр("ru = 'Место хранения:'"), МестоХраненияТекст);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Место хранения.
	Если РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьМестоХранения, 
			РеквизитыДокумента.МестоХранения, РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Место хранения:'"), РеквизитыДокумента.МестоХранения);
	КонецЕсли;
	
	// Отв. за хранение.
	Если РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьОтветственногоЗаХранение, 
			РеквизитыДокумента.ОтветственныйЗаХранение, РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Отв. за хранение:'"), РеквизитыДокумента.ОтветственныйЗаХранение);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Передан:'"), КомуПереданДокумент);
	КонецЕсли;
	
	// Группа полей, которые выводятся рядом друг с другом, но с отступом от пердыдущего блока.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа")
			Или ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности")
			Или ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда
		ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	КонецЕсли;
	
	// Гриф доступа.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Гриф:'"),  РеквизитыДокумента.ГрифДоступа); 
	КонецЕсли;
	
	// Вопрос деятельности.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Вопрос:'"),  РеквизитыДокумента.ВопросДеятельности);
	КонецЕсли;
	
	// Проект.
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(РеквизитыДокумента.Проект) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Проект:'"),  РеквизитыДокумента.Проект); 
	КонецЕсли;
	
	// Состояние документа.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда 
		СостояниеТекст = Делопроизводство.ПолучитьСтроковоеПредставлениеСостояний(
			РеквизитыДокумента.Ссылка);
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Состояние:'"),  СостояниеТекст);
	КонецЕсли;
	
	// Состояние ЭДО
	ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
	Если ИспользоватьОбменЭД  Тогда
		СостояниеЭДО = ОбменЭДОДокументооборот.СостояниеДокументаДО(РеквизитыДокумента.Ссылка);
		Если ЗначениеЗаполнено(СостояниеЭДО) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
				НСтр("ru = 'Состояние ЭДО:'"),  СостояниеЭДО);
		КонецЕсли;	
	КонецЕсли;
	
	// Строка утверждения.
	РезультатУтверждения = Делопроизводство.ПолучитьСтрокуУтверждения(
		РеквизитыДокумента.Ссылка,
		РеквизитыДокумента.ВидДокумента,
		Новый Структура("ВариантДа, ВариантНет", НСтр("ru = 'Да'"), НСтр("ru = 'Нет'")));
	Если ЗначениеЗаполнено(РезультатУтверждения) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Утвержден:'"), РезультатУтверждения);
	КонецЕсли;
	
	// Строка подписи.
	РезультатПодписания = Делопроизводство.ПолучитьСтрокуПодписи(
		РеквизитыДокумента.Ссылка,
		РеквизитыДокумента.ВидДокумента,
		Новый Структура("ВариантДа, ВариантНет", НСтр("ru = 'Да'"), НСтр("ru = 'Нет'")));
	Если ЗначениеЗаполнено(РезультатПодписания) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Подписан:'"), РезультатПодписания);
	КонецЕсли;
	
	// Комментарий.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Комментарий) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Комментарий:'"),  РеквизитыДокумента.Комментарий);
	КонецЕсли;
	
КонецПроцедуры

// Вывести обзор документа с контрагентом в табличный документ.
// 
// Параметры:
//  ТабличныйДокумент   - ТабличныйДокумент
//  Макет               - ТабличныйДокумент
//  РеквизитыДокумента  см. РеквизитыДокументаДляКарточки
//  СведенияОПолученииОригинала - Структура:
//   * ОригиналПолучен      - Булево
//   * ОригиналПолученТекст - Строка
//  СтатьиДДС           - Массив Из СправочникСсылка.СтатьиДвиженияДенежныхСредств
//
Процедура ВывестиОбзорДокументаСКонтрагентом(ТабличныйДокумент, Макет,
		РеквизитыДокумента, СведенияОПолученииОригинала, СтатьиДДС)
	
	ОбластьГоризонтальныйРазделитель = Макет.ПолучитьОбласть("ГоризонтальныйРазделитель");
	ОбластьРеквизитШапки = Макет.ПолучитьОбласть("ШапкаДокументаРеквизит");
	ОбластьРеквизитШапкиПЖ = Макет.ПолучитьОбласть("ШапкаДокументаРеквизитПолужирным");
	ОбластьРеквизит = Макет.ПолучитьОбласть("Реквизит");
	ОбластьРеквизитПЖ = Макет.ПолучитьОбласть("РеквизитПолужирным");
	ОбластьРеквизиты60На40 = Макет.ПолучитьОбласть("Реквизиты60На40");
	
	ДатаНачалаОтсчета = РеквизитыДокумента.ДатаУчетаДокумента;
	
	// Вид или Вид-тематика документа + номер, дата.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ВидДокумента) Тогда
		ВидТематикаДокументаПредставление = ВидТематикаДокументаПредставление(
			РеквизитыДокумента.ВидДокумента,
			РеквизитыДокумента.ВестиУчетПоТематикам,
			РеквизитыДокумента.Тематика);
		Если ЗначениеЗаполнено(ВидТематикаДокументаПредставление) Тогда
			ТекстНомер = ?(ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер),
				РеквизитыДокумента.РегистрационныйНомер, 
				?(РеквизитыДокумента.ИспользоватьВременныеНомера И ЗначениеЗаполнено(РеквизитыДокумента.ВременныйНомер),
					РеквизитыДокумента.ВременныйНомер, "_____"));
			ТекстДатаРегистрации = ?(ЗначениеЗаполнено(РеквизитыДокумента.ДатаРегистрации),
				" от " + Формат(РеквизитыДокумента.ДатаРегистрации, "ДЛФ=D"), "");
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитШапки, "", 
				СтрШаблон("%1 №%2%3",
					ВРег(ВидТематикаДокументаПредставление),
					ТекстНомер,
					ТекстДатаРегистрации));
		КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитШапкиПЖ, "", РеквизитыДокумента.Заголовок);
	
	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	
	// Содержание.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Содержание) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", РеквизитыДокумента.Содержание);
	КонецЕсли;
	
	// Связи.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСвязиОбъектов") Тогда
		
		КраткиеСведенияОСвязях = СвязиОбъектов.КраткиеСведенияОСвязях(РеквизитыДокумента.Ссылка);
		
		Если Не ЗначениеЗаполнено(КраткиеСведенияОСвязях) Тогда	
			КраткиеСведенияОСвязях = НСтр("ru = 'Связи: не заданы'");
		КонецЕсли;
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитПЖ, "", КраткиеСведенияОСвязях);
	КонецЕсли;
	
	// Срок исполнения.
	ВывестиНадписьОСроке(ТабличныйДокумент, РеквизитыДокумента, ДатаНачалаОтсчета, 
		ОбластьРеквизит, НСтр("ru = 'Срок исполнения:'"));
	
	// Сумма и статьи ДДС.
	Если РеквизитыДокумента.УчитыватьСуммуДокумента Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Сумма:'"),
			Формат(РеквизитыДокумента.Сумма, "ЧДЦ=2; ЧН=0") + " " + РеквизитыДокумента.ВалютаНаименование);
		Если РеквизитыДокумента.ВестиУчетТоваровИУслуг И РеквизитыДокумента.Товары.Количество() > 0 Тогда
			КоличествоПозиций = РеквизитыДокумента.Товары.Количество();
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				НСтр("ru = 'Товары и услуги:'"),
				Формат(КоличествоПозиций, "ЧГ=") + " "
					+ ПользователиСлужебныйКлиентСервер.ПредметЦелогоЧисла(КоличествоПозиций,
						"Л = ru_RU", НСтр("ru = 'позиция,позиции,позиций,,,,,,0'")));
		КонецЕсли;
		Если РеквизитыДокумента.ВестиУчетПоСтатьямДДС Тогда
			КоличествоСтатей = СтатьиДДС.Количество();
			Если КоличествоСтатей = 1 Тогда
				ЗаголовокРеквизита = НСтр("ru = 'Статья ДДС:'");
			Иначе
				ЗаголовокРеквизита = НСтр("ru = 'Статьи ДДС:'");
			КонецЕсли;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, ЗаголовокРеквизита, СтрСоединить(СтатьиДДС, "; "));
		КонецЕсли;
	КонецЕсли;
	
	// Срок действия.
	Если РеквизитыДокумента.УчитыватьСрокДействия Тогда
		ИсторияСрока = РегистрыСведений.ИсторияСроковДействияДокументов.ИсторияСрокаДействия(РеквизитыДокумента.Ссылка);
		СрокДействияКомментарий = ИсторияСрока.Комментарий;
		СрокДействияСтрока = ДелопроизводствоКлиентСервер.СформироватьПредставлениеСрокаДействия(
			РеквизитыДокумента.Ссылка, СрокДействияКомментарий);
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Срок действия:'"),
			?(ЗначениеЗаполнено(СрокДействияСтрока), СрокДействияСтрока, НСтр("ru = 'не указан'")));
	КонецЕсли;
	
	// Не действует.
	Если РеквизитыДокумента.УчитыватьНедействующиеДокументы Тогда
		Если РеквизитыДокумента.НеДействует Тогда
			НеДействуетВСоответствии = СвязиОбъектов.ПолучитьСвязанныйОбъект(
				РеквизитыДокумента.Ссылка, Справочники.ТипыСвязей.НеДействуетВСоответствии);
			Если ЗначениеЗаполнено(НеДействуетВСоответствии) Тогда 
				Ответ = СтрШаблон(НСтр("ru = 'В соответствии с ""%1""'"), НеДействуетВСоответствии);
			Иначе 
				Ответ = НСтр("ru = 'Да'");
			КонецЕсли;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Не действует:'"), Ответ);
		КонецЕсли;
	КонецЕсли;
	
	// Готовится к отмене.
	Если Делопроизводство.ЭтотВидДокументаМожноОтменить(РеквизитыДокумента.ВидДокумента) Тогда
		ГотовитсяКОтменеДокументы =
			РегистрыСведений.ОтменяемыеДокументы.ПрочитатьНовыеДокументы(РеквизитыДокумента.Ссылка);
		Если ГотовитсяКОтменеДокументы.Количество() <> 0 Тогда
			МассивДокументы = Новый Массив;
			Для Каждого Строка Из ГотовитсяКОтменеДокументы Цикл
				МассивДокументы.Добавить(Строка.Документ);
			КонецЦикла;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
				НСтр("ru = 'Готовится к отмене документом:'"), СтрСоединить(МассивДокументы, Символы.НПП));
		КонецЕсли;
	КонецЕсли;
	
	РеквизитыСлева = Новый Массив;
	РеквизитыСправа = Новый Массив;
	// Контрагенты документа.
	Если РеквизитыДокумента.ВестиУчетПоКонтрагентам 
			И (ЗначениеЗаполнено(РеквизитыДокумента.Контрагент) 
			Или РеквизитыДокумента.Контрагенты.Количество()
			Или РеквизитыДокумента.ЯвляетсяЗаявкойНаОплату) Тогда
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям")
				И Не РеквизитыДокумента.ВестиУчетПоОрганизациям Тогда
			РеквизитыСлева.Добавить(РедакцииКонфигурацииКлиентСервер.ИмяОрганизацииУчетСторон());
		Иначе
			РеквизитыСлева.Добавить(РедакцииКонфигурацииКлиентСервер.ИмяОрганизации());
			РеквизитыСлева.Добавить(
				Юрлица.ПредставлениеЮрлицаНаДату(РеквизитыДокумента.Организация, ДатаНачалаОтсчета));
		КонецЕсли;
		
		КоличествоКонтрагентов = РеквизитыДокумента.Контрагенты.Количество();
		Если КоличествоКонтрагентов = 1 Тогда
			РеквизитыСправа.Добавить(НСтр("ru = 'Контрагент:'"));
			ЧастиКонтрагента = Новый Массив;
			Если ЗначениеЗаполнено(РеквизитыДокумента.Контрагент) Тогда
				КонтрагентПредставление = 
					Справочники.Контрагенты.ПредставлениеКонтрагентаНаДату(
						РеквизитыДокумента.Контрагент, ДатаНачалаОтсчета);
				ЧастиКонтрагента.Добавить(КонтрагентПредставление);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(РеквизитыДокумента.ПодписалОтКонтрагента) Тогда
				ЧастиКонтрагента.Добавить(НСтр("ru = 'Подписал:'") + " " + 
					РеквизитыДокумента.ПодписалОтКонтрагента);
			КонецЕсли;
			Если ЗначениеЗаполнено(РеквизитыДокумента.КонтактноеЛицо) Тогда
				ЧастиКонтрагента.Добавить(НСтр("ru = 'Контакт:'") + " " +
					ПредставлениеКонтактногоЛицаСКонтактами(РеквизитыДокумента.КонтактноеЛицо));
			КонецЕсли;
			РеквизитыСправа.Добавить(СтрСоединить(ЧастиКонтрагента, Символы.ПС));
		Иначе
			РеквизитыСправа.Добавить(НСтр("ru = 'Контрагенты:'"));
			Для Каждого СтрокаКонтрагент Из РеквизитыДокумента.Контрагенты Цикл
				ЧастиКонтрагента = Новый Массив;
				Если ЗначениеЗаполнено(СтрокаКонтрагент.Контрагент) Тогда
					КонтрагентПредставление = Справочники.Контрагенты.ПредставлениеКонтрагентаНаДату(
						СтрокаКонтрагент.Контрагент, ДатаНачалаОтсчета);
					ЧастиКонтрагента.Добавить(КонтрагентПредставление);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаКонтрагент.ПодписалОтКонтрагента) Тогда
					ЧастиКонтрагента.Добавить(НСтр("ru = 'Подписал:'") + " " + 
						СтрокаКонтрагент.ПодписалОтКонтрагента);
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаКонтрагент.КонтактноеЛицо) Тогда
					ЧастиКонтрагента.Добавить(НСтр("ru = 'Контакт:'") + " " +
						ПредставлениеКонтактногоЛицаСКонтактами(СтрокаКонтрагент.КонтактноеЛицо));
				КонецЕсли;
				РеквизитыСправа.Добавить(СтрСоединить(ЧастиКонтрагента, Символы.ПС));
			КонецЦикла;
		КонецЕсли;
		
	// Стороны документа.
	ИначеЕсли РеквизитыДокумента.ВестиУчетСторон И РеквизитыДокумента.Стороны.Количество() Тогда
		
		ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
		
		Стороны = Новый Массив(2);
		СтрокиОрганизации = Новый Массив;
		СтрокиКонтрагенты = Новый Массив;
		
		Для Каждого СтрокаТаблицы Из РеквизитыДокумента.Стороны Цикл
			Если РаботаСПодписямиДокументовКлиентСервер.ЭтоОрганизация(СтрокаТаблицы.Сторона) Тогда
				СтрокиОрганизации.Добавить(СтрокаТаблицы);
			Иначе
				СтрокиКонтрагенты.Добавить(СтрокаТаблицы);
			КонецЕсли;
		КонецЦикла;
		
		Если СтрокиКонтрагенты.Количество() = 0 Тогда
			ИндексПоследнего = СтрокиОрганизации.ВГраница();
			Для Счетчик = 1 По ИндексПоследнего Цикл
				СтрокиКонтрагенты.Добавить(СтрокиОрганизации[Счетчик]);
			КонецЦикла;
			Для Счетчик = 0 По ИндексПоследнего - 1 Цикл
				СтрокиОрганизации.Удалить(ИндексПоследнего - Счетчик);
			КонецЦикла;
		КонецЕсли;
		
		Стороны[0] = СтрокиОрганизации;
		Стороны[1] = СтрокиКонтрагенты;
		
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитШапки, "", НСтр("ru = 'СТОРОНЫ'"));
		
		ТекущиеРеквизиты = Неопределено;
		Для Каждого Сторона Из Стороны Цикл
			
			Если ТекущиеРеквизиты = Неопределено Тогда
				ТекущиеРеквизиты = РеквизитыСлева;
			Иначе
				ТекущиеРеквизиты = РеквизитыСправа;
			КонецЕсли;
			
			СтрокиОписанияТекущейСтороны = Новый Массив;
			
			Для Каждого ОписаниеСтороны Из Сторона Цикл			
				Если ЗначениеЗаполнено(ОписаниеСтороны.Наименование) Тогда
					СтрокиОписанияТекущейСтороны.Добавить(СокрЛП(ОписаниеСтороны.Наименование) + ":");
				КонецЕсли;
				
				СведенияОЮрлице = Юрлица.СведенияОЮрлицеНаДату(ОписаниеСтороны.Сторона, ДатаНачалаОтсчета);
				СтрокиОписанияТекущейСтороны.Добавить(СведенияОЮрлице.ПредставлениеПолное);
				
				Если ОписаниеСтороны.Подписан Тогда
					Подписант = ОписаниеСтороны.Подписал;
					Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОписаниеСтороны.Сторона, "ЮрФизЛицо") = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
						Подписант = ОписаниеСтороны.Сторона;
					КонецЕсли;
					
					СтрокиОписанияТекущейСтороны.Добавить(НСтр("ru = 'Подписал:'") + " " + Подписант);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ОписаниеСтороны.КонтактноеЛицо) Тогда
					СтрокиОписанияТекущейСтороны.Добавить(
						ПредставлениеКонтактногоЛицаСКонтактами(ОписаниеСтороны.КонтактноеЛицо));
				КонецЕсли;
				
			КонецЦикла;
			
			ТекущиеРеквизиты.Добавить(СтрСоединить(СтрокиОписанияТекущейСтороны, Символы.ПС));
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Выводим реквизиты сторон.
	Для Индекс = 0 По Макс(РеквизитыСлева.ВГраница(), РеквизитыСправа.ВГраница()) Цикл
		ЗначениеЛевогоРеквизита = ?(Индекс > РеквизитыСлева.ВГраница(), Неопределено,
			РеквизитыСлева[Индекс]);
		ЗначениеПравогоРеквизита = ?(Индекс > РеквизитыСправа.ВГраница(), Неопределено,
			РеквизитыСправа[Индекс]);
		ПараметрыОбласти = ПараметрыОбластиРеквизитыВходящегоДокумента(
			ЗначениеЛевогоРеквизита,
			ЗначениеПравогоРеквизита);
		ОбластьРеквизиты60На40.Параметры.Заполнить(ПараметрыОбласти);
		ТабличныйДокумент.Вывести(ОбластьРеквизиты60На40);
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	
	// Подготовил.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Подготовил) Тогда
		ПодготовилПредставление = НСтр("ru = 'Подготовил:'") + " " + Строка(РеквизитыДокумента.Подготовил) + 
			" (" + Формат(РеквизитыДокумента.ДатаСоздания, "ДЛФ=D") + ")";
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", ПодготовилПредставление);
		КонтактнаяИнформация = ПолучитьКонтактнуюИнформациюОбъекта(РеквизитыДокумента.Подготовил);
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", КонтактнаяИнформация.Телефон);
		КонецЕсли;
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
				НСтр("ru = 'E-mail:'"), КонтактнаяИнформация.Емайл);
		КонецЕсли;
	КонецЕсли;
	
	// Подразделение.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Подразделение) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Подразделение:'"), РеквизитыДокумента.Подразделение);
	КонецЕсли;
	
	// Ответственный.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Ответственный) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Ответственный:'"), РеквизитыДокумента.Ответственный);
	КонецЕсли;
	
	// Оригинал.
	Если РеквизитыДокумента.КонтролироватьНаличиеОригинала Тогда 
		Если ЗначениеЗаполнено(СведенияОПолученииОригинала.ОригиналПолученТекст) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				НСтр("ru = 'Оригинал:'"), СведенияОПолученииОригинала.ОригиналПолученТекст);
		КонецЕсли;
	КонецЕсли;
	
	// Форма документа.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Форма:'"), РеквизитыДокумента.ФормаДокумента);
	КонецЕсли;
	
	// Номенклатура дел, дело, место хранения дела.
	МестоХраненияДокументаИспользуется = РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьМестоХранения, РеквизитыДокумента.МестоХранения, РеквизитыДокумента.ФормаДокумента);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел") Тогда
		Если РеквизитыДокумента.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(РеквизитыДокумента.НоменклатураДел) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				НСтр("ru = 'Номенклатура дел:'"), РеквизитыДокумента.НоменклатураДел);
		КонецЕсли;
		Если ЗначениеЗаполнено(РеквизитыДокумента.Дело) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				НСтр("ru = 'Помещен в дело:'"), РеквизитыДокумента.Дело);
			СтруктураСостоянияДела =
				РегистрыСведений.СостоянияДелХраненияДокументов.СостояниеДела(РеквизитыДокумента.Дело);
			Если ТипЗнч(СтруктураСостоянияДела) = Тип("Структура")
				И ЗначениеЗаполнено(СтруктураСостоянияДела.Состояние) Тогда
				ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
					СтруктураСостоянияДела.Состояние, СтруктураСостоянияДела.ДатаСостояния);
			КонецЕсли;
			МестоХранения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыДокумента.Дело, "МестоХраненияДел");
			Если ЗначениеЗаполнено(МестоХранения) Тогда
				МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(МестоХранения,
					ПолучитьФункциональнуюОпцию("ИспользоватьСхемыПомещений"));
				ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
					?(МестоХраненияДокументаИспользуется, 
						НСтр("ru = 'Место хранения дела:'"), НСтр("ru = 'Место хранения:'")),
					МестоХраненияТекст);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Место хранения.
	Если РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьМестоХранения, 
			РеквизитыДокумента.МестоХранения, РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Место хранения:'"), РеквизитыДокумента.МестоХранения);
	КонецЕсли;
	
	// Отв. за хранение.
	Если РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьОтветственногоЗаХранение, 
			РеквизитыДокумента.ОтветственныйЗаХранение, РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Отв. за хранение:'"), РеквизитыДокумента.ОтветственныйЗаХранение);
	КонецЕсли;
	
	// Кому передан.
	КомуПереданДокумент = Делопроизводство.СтрокаКомуПереданДокумент(РеквизитыДокумента.Ссылка);
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Передан:'"), КомуПереданДокумент);
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	
	// Временный номер.
	Если РеквизитыДокумента.ИспользоватьВременныеНомера
		И ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер) Тогда
		// Выводим врем. номер в реквизитах, если заполнен рег. номер, иначе он будет на месте рег. номера
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Врем. №:'"), РеквизитыДокумента.ВременныйНомер);
	КонецЕсли;
	
	// Папка.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПапкиДокументов") Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Папка:'"),  РеквизитыДокумента.Папка); 
	КонецЕсли;
	
	// Гриф доступа.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Гриф:'"),  РеквизитыДокумента.ГрифДоступа); 
	КонецЕсли;
	
	// Вопрос деятельности.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Вопрос:'"),  РеквизитыДокумента.ВопросДеятельности);
	КонецЕсли;
	
	// Проект.
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(РеквизитыДокумента.Проект) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Проект:'"),  РеквизитыДокумента.Проект); 
	КонецЕсли;
	
	// Состояние документа.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда 
		СостояниеТекст = Делопроизводство.ПолучитьСтроковоеПредставлениеСостояний(
			РеквизитыДокумента.Ссылка);
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Состояние:'"),  СостояниеТекст);
	КонецЕсли;

	// Состояние ЭДО
	ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
	Если ИспользоватьОбменЭД  Тогда
		СостояниеЭДО = ОбменЭДОДокументооборот.СостояниеДокументаДО(РеквизитыДокумента.Ссылка);
		Если ЗначениеЗаполнено(СостояниеЭДО) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
				НСтр("ru = 'Состояние ЭДО:'"),  СостояниеЭДО);
		КонецЕсли;	
	КонецЕсли;
	
	// Строка утверждения.
	РезультатУтверждения = Делопроизводство.ПолучитьСтрокуУтверждения(
		РеквизитыДокумента.Ссылка,
		РеквизитыДокумента.ВидДокумента,
		Новый Структура("ВариантДа, ВариантНет", НСтр("ru = 'Да'"), НСтр("ru = 'Нет'")));
	Если ЗначениеЗаполнено(РезультатУтверждения) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Утвержден:'"), РезультатУтверждения);
	КонецЕсли;
	
	// Строка подписи.
	РезультатПодписания = Делопроизводство.ПолучитьСтрокуПодписи(
		РеквизитыДокумента.Ссылка,
		РеквизитыДокумента.ВидДокумента,
		Новый Структура("ВариантДа, ВариантНет", НСтр("ru = 'Да'"), НСтр("ru = 'Нет'")));
	Если ЗначениеЗаполнено(РезультатПодписания) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Подписан:'"), РезультатПодписания);
	КонецЕсли;
	
	// Комментарий.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Комментарий) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Комментарий:'"),  РеквизитыДокумента.Комментарий);
	КонецЕсли;
	
КонецПроцедуры

// Вывести обзор документа без контрагента в табличный документ.
// 
// Параметры:
//  ТабличныйДокумент   - ТабличныйДокумент
//  Макет               - ТабличныйДокумент
//  РеквизитыДокумента  см. РеквизитыДокументаДляКарточки
//  СведенияОПолученииОригинала - Структура:
//   * ОригиналПолучен      - Булево
//   * ОригиналПолученТекст - Строка
//  СтатьиДДС           - Массив Из СправочникСсылка.СтатьиДвиженияДенежныхСредств
//
Процедура ВывестиОбзорДокументаБезКонтрагента(ТабличныйДокумент, Макет,
		РеквизитыДокумента, СведенияОПолученииОригинала, СтатьиДДС)
	
	ОбластьГоризонтальныйРазделитель = Макет.ПолучитьОбласть("ГоризонтальныйРазделитель");
	ОбластьРеквизитШапки = Макет.ПолучитьОбласть("ШапкаДокументаРеквизит");
	ОбластьРеквизитШапкиПЖ = Макет.ПолучитьОбласть("ШапкаДокументаРеквизитПолужирным");
	ОбластьРеквизит = Макет.ПолучитьОбласть("Реквизит");
	ОбластьРеквизитПЖ = Макет.ПолучитьОбласть("РеквизитПолужирным");
	ОбластьРеквизитыЛевоПраво = Макет.ПолучитьОбласть("РеквизитыЛевоПраво");
	
	ДатаНачалаОтсчета = РеквизитыДокумента.ДатаУчетаДокумента;
	
	Если ЗначениеЗаполнено(РеквизитыДокумента.Организация)
		И (РеквизитыДокумента.ВестиУчетПоОрганизациям
			Или Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям")) Тогда
		ОрганизацияПредставление = Юрлица.ПредставлениеЮрлицаНаДату(РеквизитыДокумента.Организация, ДатаНачалаОтсчета);
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитШапки, "", ОрганизацияПредставление);
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	
	// Вид или Вид-тематика документа + номер, дата.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ВидДокумента) Тогда
		ВидТематикаДокументаПредставление = ВидТематикаДокументаПредставление(
			РеквизитыДокумента.ВидДокумента,
			РеквизитыДокумента.ВестиУчетПоТематикам,
			РеквизитыДокумента.Тематика);
		Если ЗначениеЗаполнено(ВидТематикаДокументаПредставление) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитШапки, "", ВРег(ВидТематикаДокументаПредставление));
		КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	
	Если ЗначениеЗаполнено(РеквизитыДокумента.ДатаРегистрации) Тогда 
		ПредставлениеДатыРегистрации = Формат(РеквизитыДокумента.ДатаРегистрации, "ДЛФ=D");
	Иначе
		ПредставлениеДатыРегистрации = "____________";
	КонецЕсли;
	Если ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер) Тогда
		ПредставлениеНомер = "№ " + РеквизитыДокумента.РегистрационныйНомер;
	Иначе
		Если РеквизитыДокумента.ИспользоватьВременныеНомера И ЗначениеЗаполнено(РеквизитыДокумента.ВременныйНомер) Тогда
			ПредставлениеНомер =  НСтр("ru = 'Врем. №'") + " " + РеквизитыДокумента.ВременныйНомер;
		Иначе
			ПредставлениеНомер = "№___________";
		КонецЕсли;
	КонецЕсли;
	ОбластьРеквизитыЛевоПраво.Параметры.РеквизитЛевый = ПредставлениеДатыРегистрации;
	ОбластьРеквизитыЛевоПраво.Параметры.РеквизитПравый = ПредставлениеНомер;
	ТабличныйДокумент.Вывести(ОбластьРеквизитыЛевоПраво);
	
	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	
	ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитПЖ, "", РеквизитыДокумента.Заголовок);
	
	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	
	// Содержание.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Содержание) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", РеквизитыДокумента.Содержание);
	КонецЕсли;
	
	// Связи.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСвязиОбъектов") Тогда
		
		КраткиеСведенияОСвязях = СвязиОбъектов.КраткиеСведенияОСвязях(РеквизитыДокумента.Ссылка);			
		
		Если Не ЗначениеЗаполнено(КраткиеСведенияОСвязях) Тогда	
			КраткиеСведенияОСвязях = НСтр("ru = 'Связи: не заданы'");
		КонецЕсли;
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитПЖ, "", КраткиеСведенияОСвязях);
	КонецЕсли;
	
	// Срок исполнения.
	ВывестиНадписьОСроке(ТабличныйДокумент, РеквизитыДокумента, ДатаНачалаОтсчета, 
		ОбластьРеквизит, НСтр("ru = 'Срок исполнения:'"));
	
	// Сумма и статьи ДДС.
	Если РеквизитыДокумента.УчитыватьСуммуДокумента Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Сумма:'"),
			Формат(РеквизитыДокумента.Сумма, "ЧДЦ=2; ЧН=0") + " " + РеквизитыДокумента.ВалютаНаименование);
		Если РеквизитыДокумента.ВестиУчетТоваровИУслуг И РеквизитыДокумента.Товары.Количество() > 0 Тогда
			КоличествоПозиций = РеквизитыДокумента.Товары.Количество();
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				НСтр("ru = 'Товары и услуги:'"),
				Формат(КоличествоПозиций, "ЧГ=") + " "
					+ ПользователиСлужебныйКлиентСервер.ПредметЦелогоЧисла(КоличествоПозиций,
						"Л = ru_RU", НСтр("ru = 'позиция,позиции,позиций,,,,,,0'")));
		КонецЕсли;
		Если РеквизитыДокумента.ВестиУчетПоСтатьямДДС Тогда
			КоличествоСтатей = СтатьиДДС.Количество();
			Если КоличествоСтатей = 1 Тогда
				ЗаголовокРеквизита = НСтр("ru = 'Статья ДДС:'");
			Иначе
				ЗаголовокРеквизита = НСтр("ru = 'Статьи ДДС:'");
			КонецЕсли;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, ЗаголовокРеквизита, СтрСоединить(СтатьиДДС, "; "));
		КонецЕсли;
	КонецЕсли;
	
	// Срок действия.
	Если РеквизитыДокумента.УчитыватьСрокДействия Тогда
		ИсторияСрока = РегистрыСведений.ИсторияСроковДействияДокументов.ИсторияСрокаДействия(РеквизитыДокумента.Ссылка);
		СрокДействияКомментарий = ИсторияСрока.Комментарий;
		СрокДействияСтрока = ДелопроизводствоКлиентСервер.СформироватьПредставлениеСрокаДействия(
			РеквизитыДокумента.Ссылка, СрокДействияКомментарий);
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Срок действия:'"),
			?(ЗначениеЗаполнено(СрокДействияСтрока), СрокДействияСтрока, НСтр("ru = 'не указан'")));
	КонецЕсли;
	
	// Не действует.
	Если РеквизитыДокумента.УчитыватьНедействующиеДокументы Тогда
		Если РеквизитыДокумента.НеДействует Тогда
			НеДействуетВСоответствии = СвязиОбъектов.ПолучитьСвязанныйОбъект(
				РеквизитыДокумента.Ссылка, Справочники.ТипыСвязей.НеДействуетВСоответствии);
			Если ЗначениеЗаполнено(НеДействуетВСоответствии) Тогда 
				Ответ = СтрШаблон(НСтр("ru = 'В соответствии с ""%1""'"), НеДействуетВСоответствии);
			Иначе 
				Ответ = НСтр("ru = 'Да'");
			КонецЕсли;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Не действует:'"), Ответ);
		КонецЕсли;
	КонецЕсли;
	
	// Готовится к отмене.
	Если Делопроизводство.ЭтотВидДокументаМожноОтменить(РеквизитыДокумента.ВидДокумента) Тогда
		ГотовитсяКОтменеДокументы =
			РегистрыСведений.ОтменяемыеДокументы.ПрочитатьНовыеДокументы(РеквизитыДокумента.Ссылка);
		Если ГотовитсяКОтменеДокументы.Количество() <> 0 Тогда
			МассивДокументы = Новый Массив;
			Для Каждого Строка Из ГотовитсяКОтменеДокументы Цикл
				МассивДокументы.Добавить(Строка.Документ);
			КонецЦикла;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
				НСтр("ru = 'Готовится к отмене документом:'"), СтрСоединить(МассивДокументы, Символы.НПП));
		КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	
	// Подготовил.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Подготовил) Тогда
		ПодготовилПредставление = НСтр("ru = 'Подготовил:'") + " " + Строка(РеквизитыДокумента.Подготовил) + 
			" (" + Формат(РеквизитыДокумента.ДатаСоздания, "ДЛФ=D") + ")";
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", ПодготовилПредставление);
		КонтактнаяИнформация = ПолучитьКонтактнуюИнформациюОбъекта(РеквизитыДокумента.Подготовил);
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", КонтактнаяИнформация.Телефон);
		КонецЕсли;
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
				НСтр("ru = 'E-mail:'"), КонтактнаяИнформация.Емайл);
		КонецЕсли;
	КонецЕсли;
	
	// Подразделение.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Подразделение) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Подразделение:'"), РеквизитыДокумента.Подразделение);
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	
	// Ответственный.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Ответственный) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Ответственный:'"), РеквизитыДокумента.Ответственный);
	КонецЕсли;
	
	// Оригинал.
	Если РеквизитыДокумента.КонтролироватьНаличиеОригинала Тогда 
		Если ЗначениеЗаполнено(СведенияОПолученииОригинала.ОригиналПолученТекст) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				НСтр("ru = 'Оригинал:'"), СведенияОПолученииОригинала.ОригиналПолученТекст);
		КонецЕсли;
	КонецЕсли;
	
	// Форма документа.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Форма:'"), РеквизитыДокумента.ФормаДокумента);
	КонецЕсли;
	
	// Номенклатура дел, дело, место хранения дела.
	МестоХраненияДокументаИспользуется = РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьМестоХранения, РеквизитыДокумента.МестоХранения, РеквизитыДокумента.ФормаДокумента);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел") Тогда
		Если РеквизитыДокумента.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(РеквизитыДокумента.НоменклатураДел) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				НСтр("ru = 'Номенклатура дел:'"), РеквизитыДокумента.НоменклатураДел);
		КонецЕсли;
		Если ЗначениеЗаполнено(РеквизитыДокумента.Дело) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				НСтр("ru = 'Помещен в дело:'"), РеквизитыДокумента.Дело);
			СтруктураСостоянияДела =
				РегистрыСведений.СостоянияДелХраненияДокументов.СостояниеДела(РеквизитыДокумента.Дело);
			Если ТипЗнч(СтруктураСостоянияДела) = Тип("Структура")
				И ЗначениеЗаполнено(СтруктураСостоянияДела.Состояние) Тогда
				ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
					Строка(СтруктураСостоянияДела.Состояние), СтруктураСостоянияДела.ДатаСостояния);
			КонецЕсли;
			МестоХранения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыДокумента.Дело, "МестоХраненияДел");
			Если ЗначениеЗаполнено(МестоХранения) Тогда
				МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(МестоХранения,
					ПолучитьФункциональнуюОпцию("ИспользоватьСхемыПомещений"));
				ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
					?(МестоХраненияДокументаИспользуется, 
						НСтр("ru = 'Место хранения дела:'"), НСтр("ru = 'Место хранения:'")),
					МестоХраненияТекст);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Место хранения.
	Если РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьМестоХранения, 
			РеквизитыДокумента.МестоХранения, РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Место хранения:'"), РеквизитыДокумента.МестоХранения);
	КонецЕсли;
	
	// Отв. за хранение.
	Если РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьОтветственногоЗаХранение, 
			РеквизитыДокумента.ОтветственныйЗаХранение, РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Отв. за хранение:'"), РеквизитыДокумента.ОтветственныйЗаХранение);
	КонецЕсли;
	
	// Кому передан.
	КомуПереданДокумент = Делопроизводство.СтрокаКомуПереданДокумент(РеквизитыДокумента.Ссылка);
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Передан:'"), КомуПереданДокумент);
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	
	// Временный номер.
	Если РеквизитыДокумента.ИспользоватьВременныеНомера
		И ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер) Тогда
		// Выводим врем. номер в реквизитах, если заполнен рег. номер, иначе он будет на месте рег. номера
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Врем. №:'"), РеквизитыДокумента.ВременныйНомер);
	КонецЕсли;
	
	// Папка.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПапкиДокументов") Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Папка:'"),  РеквизитыДокумента.Папка); 
	КонецЕсли;
	
	// Гриф доступа.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Гриф:'"),  РеквизитыДокумента.ГрифДоступа); 
	КонецЕсли;
	
	// Вопрос деятельности.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Вопрос:'"),  РеквизитыДокумента.ВопросДеятельности);
	КонецЕсли;
	
	// Проект.
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(РеквизитыДокумента.Проект) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Проект:'"),  РеквизитыДокумента.Проект); 
	КонецЕсли;
	
	// Состояние документа.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда 
		СостояниеТекст = Делопроизводство.ПолучитьСтроковоеПредставлениеСостояний(
			РеквизитыДокумента.Ссылка);
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Состояние:'"),  СостояниеТекст);
	КонецЕсли;
	
	// Состояние ЭДО
	ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
	Если ИспользоватьОбменЭД  Тогда
		СостояниеЭДО = ОбменЭДОДокументооборот.СостояниеДокументаДО(РеквизитыДокумента.Ссылка);
		Если ЗначениеЗаполнено(СостояниеЭДО) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
				НСтр("ru = 'Состояние ЭДО:'"),  СостояниеЭДО);
		КонецЕсли;	
	КонецЕсли;
	
	// Строка утверждения.
	РезультатУтверждения = Делопроизводство.ПолучитьСтрокуУтверждения(
		РеквизитыДокумента.Ссылка,
		РеквизитыДокумента.ВидДокумента,
		Новый Структура("ВариантДа, ВариантНет", НСтр("ru = 'Да'"), НСтр("ru = 'Нет'")));
	Если ЗначениеЗаполнено(РезультатУтверждения) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Утвержден:'"), РезультатУтверждения);
	КонецЕсли;
	
	// Строка подписи.
	РезультатПодписания = Делопроизводство.ПолучитьСтрокуПодписи(
		РеквизитыДокумента.Ссылка,
		РеквизитыДокумента.ВидДокумента,
		Новый Структура("ВариантДа, ВариантНет", НСтр("ru = 'Да'"), НСтр("ru = 'Нет'")));
	Если ЗначениеЗаполнено(РезультатПодписания) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Подписан:'"), РезультатПодписания);
	КонецЕсли;
	
	// Комментарий.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Комментарий) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Комментарий:'"),  РеквизитыДокумента.Комментарий);
	КонецЕсли;
	
КонецПроцедуры

// Представление контактного лица и его контактов, возвращает строку, контакты с новой строки.
// 
// Параметры:
//  Адресаты - СправочникСсылка.КонтактныеЛица - 
//  Адресаты - ТаблицаЗначений - Адресаты:
// * Корреспондент - СправочникСсылка.Контрагенты -
// * Адресат - СправочникСсылка.Сотрудники, СправочникСсылка.Пользователи, СправочникСсылка.КонтактныеЛица -
// 
// Возвращаемое значение:
//  Строка
//
Функция ПредставлениеКонтактногоЛицаСКонтактами(Адресаты)
	
	Если ТипЗнч(Адресаты) = Тип("ТаблицаЗначений") Тогда
		Если Адресаты.Количество() = 0 Тогда
			Возврат "";
		КонецЕсли;
		КонтактноеЛицо = Адресаты[0].Адресат;
	Иначе
		КонтактноеЛицо = Адресаты;
	КонецЕсли;
	
	КонтактнаяИнформация = ПолучитьКонтактнуюИнформациюОбъекта(КонтактноеЛицо);
	
	ЧастиПредставления = Новый Массив;
	ЧастиПредставления.Добавить(Строка(КонтактноеЛицо));
	Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
		ЧастиПредставления.Добавить(КонтактнаяИнформация.Телефон);
	КонецЕсли;
	Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
		ЧастиПредставления.Добавить(
			СтрШаблон("%1 %2",
				НСтр("ru = 'E-mail:'"),
				КонтактнаяИнформация.Емайл));
	КонецЕсли;
	
	Возврат СтрСоединить(ЧастиПредставления, Символы.ПС);
	
КонецФункции

Функция ВидТематикаДокументаПредставление(ВидДокумента, ВестиУчетПоТематикам, Тематика)
	
	Если ВестиУчетПоТематикам и ЗначениеЗаполнено(Тематика) Тогда
		Возврат СтрШаблон("%1 - %2", Строка(ВидДокумента), Строка(Тематика));
	КонецЕсли;
	Возврат Строка(ВидДокумента);
	
КонецФункции

Функция ПараметрыОбластиРеквизитыВходящегоДокумента(РеквизитЛевый, РеквизитПравый)
	
	ПараметрыОбласти = Новый Структура;
	ПараметрыОбласти.Вставить("РеквизитЛевый",	РеквизитЛевый);
	ПараметрыОбласти.Вставить("РеквизитПравый",	РеквизитПравый);
	Возврат ПараметрыОбласти;
	
КонецФункции

Процедура ВывестиРеквизит(ТабличныйДокумент, ОбластьДляВывода, ЗаголовокРеквизита, ЗначениеРеквизита)
	
	ОбластьДляВывода.Параметры.Реквизит =
		ЗаголовокРеквизита + ?(ЗначениеЗаполнено(ЗаголовокРеквизита), " ", "") + ЗначениеРеквизита;
	ТабличныйДокумент.Вывести(ОбластьДляВывода);
	
КонецПроцедуры

#КонецОбласти

Функция ПолучитьОбзорДокументаБезКонтрагента(Форма)

	Объект = Форма.Объект;
	Организация = Объект.Организация;
	Шаблон = ОбщегоНазначенияДокументооборот.ЗначениеРеквизитаОбъектаВПривилегированномРежиме(Объект.Ссылка,
		"Шаблон");
	ДатаНачалаОтсчета = Делопроизводство.ДатаУчетаДокумента(Объект);
	
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда 
		КэшДокументыПредприятияФормаЭлемента =
			КэшиНаВремяВызоваПовтИсп.КэшДокументыПредприятияФормаЭлемента();
		Если КэшДокументыПредприятияФормаЭлемента.Инициализирован
			И КэшДокументыПредприятияФормаЭлемента.КэшДокумента.ВидДокумента = Объект.ВидДокумента Тогда
			РеквизитыВида = КэшДокументыПредприятияФормаЭлемента.КэшВидаДокумента;
		Иначе
			РеквизитыВида = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидДокумента,
				"УчитыватьСуммуДокумента, ИспользоватьСрокИсполнения, ВестиУчетПоНоменклатуреДел, УчитыватьСрокДействия,
				|УчитыватьНедействующиеДокументы, ВестиУчетТоваровИУслуг, ВестиУчетПоСтатьямДДС, ВестиУчетПоОрганизациям,
				|ВестиУчетСторон,
				|УчитыватьМестоХранения, УчитыватьОтветственногоЗаХранение, КонтролироватьНаличиеОригинала, 
				|ВестиУчетПоТематикам, СрокИсполненияУказанВРабочихДнях, ИспользоватьВременныеНомера");
		КонецЕсли;
	Иначе 
		РеквизитыВида = Новый Структура;
		РеквизитыВида.Вставить("УчитыватьСуммуДокумента", Ложь);
		РеквизитыВида.Вставить("ВестиУчетТоваровИУслуг", Ложь);
		РеквизитыВида.Вставить("ИспользоватьСрокИсполнения", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоНоменклатуреДел", Ложь);
		РеквизитыВида.Вставить("УчитыватьСрокДействия", Ложь);
		РеквизитыВида.Вставить("УчитыватьНедействующиеДокументы", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоСтатьямДДС", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоОрганизациям", Ложь);
		РеквизитыВида.Вставить("ВестиУчетСторон", Ложь);
		РеквизитыВида.Вставить("УчитыватьМестоХранения", Ложь);
		РеквизитыВида.Вставить("УчитыватьОтветственногоЗаХранение", Ложь);
		РеквизитыВида.Вставить("КонтролироватьНаличиеОригинала", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоТематикам", Ложь);
		РеквизитыВида.Вставить("СрокИсполненияУказанВРабочихДнях", Ложь);
		РеквизитыВида.Вставить("ИспользоватьВременныеНомера", Ложь);
	КонецЕсли;
	
	// Формируем основное представление документа	
	HTMLТекст = "<html>
	|<head>
	|<style type=""text/css"">
	|	body {
	|		overflow:    auto;
	|		margin-top:  6px; 		 
	|		margin-left: 10px;
	|		margin-bottom: 0px;
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	table {
	|		width:       100%; 
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	td {vertical-align: top;}
	| 	a:link {
	|		color: #006699; text-decoration: none;}
	|	a:visited {
	|		color: #006699; text-decoration: none;}
	|	a:hover {
	|		color: #006699; text-decoration: underline;}
	|	p {
	|		margin-top: 7px;}
	|</style>
	|<body>";
	
	HTMLТекст = HTMLТекст + "<table>";
	
	Если ЗначениеЗаполнено(Организация)
		И (РеквизитыВида.ВестиУчетПоОрганизациям
			Или Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям")) Тогда
		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";
		ОрганизацияПредставление = Юрлица.ПредставлениеЮрлицаНаДату(Организация, ДатаНачалаОтсчета);
		ДобавитьРеквизит(HTMLТекст, "", Организация, , ОрганизацияПредставление);
		HTMLТекст = HTMLТекст + "</td>";
		HTMLТекст = HTMLТекст + "</tr>";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда 
		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";
		HTMLТекст = HTMLТекст + "<p>";
		
		Если РеквизитыВида.ВестиУчетПоТематикам И ЗначениеЗаполнено(Объект.Тематика) Тогда 
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A> - <A href=v8doc:%3>%4</A>",
				ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
				ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.ВидДокумента)))),
				ПолучитьНавигационнуюСсылку(Объект.Тематика),
				ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.Тематика)))));
		Иначе
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A>",
				ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
				ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.ВидДокумента)))));
		КонецЕсли;
		
		HTMLТекст = HTMLТекст + "</td>";
		HTMLТекст = HTMLТекст + "</tr>";
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td width=""70%"">";
	Если ЗначениеЗаполнено(Объект.ДатаРегистрации) Тогда 
		ДобавитьРеквизит(HTMLТекст, "", Формат(Объект.ДатаРегистрации, "ДЛФ=D"));
	Иначе
		ДобавитьРеквизит(HTMLТекст, "____________", "");
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</td>";
	
    HTMLТекст = HTMLТекст + "<td>";
	Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда 
		ДобавитьРеквизит(HTMLТекст, "№ ", Объект.РегистрационныйНомер);
	Иначе
		Если РеквизитыВида.ИспользоватьВременныеНомера И ЗначениеЗаполнено(Объект.ВременныйНомер) Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Врем. № '"), Объект.ВременныйНомер);
		Иначе
			ДобавитьРеквизит(HTMLТекст, "№___________", "");
		КонецЕсли;
	КонецЕсли;	
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	Заголовок = Объект.Заголовок;
	HTMLТекст = HTMLТекст + СтрШаблон(
		"<B>%1</B>",
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(Заголовок));
	HTMLТекст = HTMLТекст + "<p>";
	
	HTMLТекст = HTMLТекст + "<p>";	
	Если ЗначениеЗаполнено(Объект.Содержание) Тогда
		Содержание = Объект.Содержание;
		HTMLТекст = HTMLТекст + СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Содержание), Символы.ПС, "<br>");
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСвязиОбъектов") Тогда                  
		
		КраткиеСведенияОСвязях = СвязиОбъектов.КраткиеСведенияОСвязях(Объект.Ссылка);
			
		Если Не ЗначениеЗаполнено(КраткиеСведенияОСвязях) Тогда	
			КраткиеСведенияОСвязях = НСтр("ru = 'Связи: не заданы'");
		КонецЕсли;	
		
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<b><A href=v8doc:tasks/ShowLinks/%1>%2</A></b> <br>",
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(КраткиеСведенияОСвязях));
	КонецЕсли;	
	
	ДобавитьНадписьОСроке(HTMLТекст, Объект, РеквизитыВида, ДатаНачалаОтсчета, НСтр("ru = 'Срок исполнения:'"));
	
	// Сумма и статьи ДДС.
	Если РеквизитыВида.УчитыватьСуммуДокумента Тогда
		Валюта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Валюта, "Наименование");
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Сумма:'"), Формат(Объект.Сумма, "ЧДЦ=2; ЧН=0") + " " + 
			Валюта);
			
		Если Форма.УчитыватьНДС Тогда 
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Сумма НДС:'"), Формат(Объект.СуммаНДС, "ЧДЦ=2; ЧН=0") + " " + 
				Валюта);
		КонецЕсли;
		
		Если РеквизитыВида.ВестиУчетТоваровИУслуг И Объект.Товары.Количество() > 0 Тогда
			КоличествоПозиций = Объект.Товары.Количество();
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Товары и услуги:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=%1>%2</A><BR>",
				"v8doc:tasks/goods?ref=" + Строка(Объект.Ссылка.УникальныйИдентификатор()),
				Формат(КоличествоПозиций, "ЧГ=") + " "
				+ ПользователиСлужебныйКлиентСервер.ПредметЦелогоЧисла(КоличествоПозиций,
					"Л = ru_RU", НСтр("ru = 'позиция,позиции,позиций,,,,,,0'")));
		КонецЕсли;
		
		Если РеквизитыВида.ВестиУчетПоСтатьямДДС Тогда
			СтатьиДДС = Форма.СтатьиДвиженияДенежныхСредств;
			КоличествоСтатей = СтатьиДДС.Количество();
			Если КоличествоСтатей = 1 Тогда
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Статья ДДС:'"), 
					СтатьиДДС[0].СтатьяДвиженияДенежныхСредств);
			ИначеЕсли КоличествоСтатей > 1 Тогда
				ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Статьи ДДС:'"));
				Разделитель = "";
				Для каждого Строка из СтатьиДДС Цикл
					HTMLТекст = HTMLТекст + Разделитель;
					ДобавитьЗначение(HTMLТекст, Строка.СтатьяДвиженияДенежныхСредств, "");
					Разделитель = "; ";
				КонецЦикла;
				HTMLТекст = HTMLТекст + "<br>";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если РеквизитыВида.УчитыватьСрокДействия Тогда
		СрокДействияСтрока = Форма.СрокДействияСтрока;
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Срок действия:'"));
		
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"period",
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(?(ЗначениеЗаполнено(СрокДействияСтрока),
				СрокДействияСтрока, НСтр("ru = 'не указан'"))));
	КонецЕсли;
	
	Если РеквизитыВида.УчитыватьНедействующиеДокументы Тогда
		Если Объект.НеДействует Тогда
			
			НеДействуетВСоответствии = СвязиОбъектов.ПолучитьСвязанныйОбъект(
				Объект.Ссылка, Справочники.ТипыСвязей.НеДействуетВСоответствии);
				
			Если ЗначениеЗаполнено(НеДействуетВСоответствии) Тогда 
				Ответ = СтрШаблон(НСтр("ru = 'В соответствии с ""%1""'"), НеДействуетВСоответствии);
			Иначе 
				Ответ = НСтр("ru = 'Да'");
			КонецЕсли;
			
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Не действует:'"), Ответ, "696969");
			
		КонецЕсли;
	КонецЕсли;
	
	Если Делопроизводство.ЭтотВидДокументаМожноОтменить(Объект.ВидДокумента) Тогда
		
		ГотовитсяКОтменеДокументы = РегистрыСведений.ОтменяемыеДокументы.ПрочитатьНовыеДокументы(Объект.Ссылка);
		Если ГотовитсяКОтменеДокументы.Количество() <> 0 Тогда
			
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Готовится к отмене документом:'"));
			
			Для Каждого Строка Из ГотовитсяКОтменеДокументы Цикл
				ДобавитьЗначение(HTMLТекст, Строка.Документ); 
				HTMLТекст = HTMLТекст + "&nbsp;";
			КонецЦикла;	
			
		КонецЕсли;	
		
	КонецЕсли;	
	
	ДобавитьОбзорДополнительныхРеквизитов(HTMLТекст, Объект, Форма);
	
	HTMLТекст = HTMLТекст + "</td></tr>";	
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td>";
	
	HTMLТекст = HTMLТекст + "<p>";
		
	Если ЗначениеЗаполнено(Объект.Подготовил) Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Подготовил:'"));
		ДобавитьЗначение(HTMLТекст, Объект.Подготовил, "");
		ДобавитьЗначение(HTMLТекст, " (" + Формат(Объект.ДатаСоздания, "ДЛФ=D") + ")", "");
		HTMLТекст = HTMLТекст + "<br>";
		
		КонтактнаяИнформация = ПолучитьКонтактнуюИнформациюОбъекта(Объект.Подготовил);
		
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
			ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформация.Телефон, "696969");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<FONT color=#696969>%1</FONT>",
				НСтр("ru = 'E-mail:'") + " ");
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
				"message"+КонтактнаяИнформация.Емайл,
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(КонтактнаяИнформация.Емайл));
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подразделение:'"),  Объект.Подразделение);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	
	Если ЗначениеЗаполнено(Объект.Ответственный) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Ответственный:'"),  Объект.Ответственный);
	КонецЕсли;
	
	Если РеквизитыВида.КонтролироватьНаличиеОригинала И ЗначениеЗаполнено(Форма.ОригиналПолученТекст) Тогда 
		Если Не Форма.ОригиналПолучен И ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда 
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Оригинал:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1><FONT color=#%2>%3</FONT></A><BR>",
				"Original",
				"B22222",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(Форма.ОригиналПолученТекст));
		Иначе 
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Оригинал:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A><BR>",
				"Original",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(Форма.ОригиналПолученТекст));
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ФормаДокумента) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Форма:'"), Объект.ФормаДокумента);
	КонецЕсли;
	
	МестоХраненияДокументаИспользуется = РеквизитыХраненияИспользуются(
		РеквизитыВида.УчитыватьМестоХранения, Объект.МестоХранения, Объект.ФормаДокумента);
	
	СостояниеДела = Неопределено;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел") Тогда 
		Если РеквизитыВида.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(Объект.НоменклатураДел) Тогда
			ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Номенклатура дел:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A><BR>",
				ПолучитьНавигационнуюСсылку(Объект.НоменклатураДел),
				Объект.НоменклатураДел);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Дело) Тогда
			ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Помещен в дело:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A><BR>",
				"dossier",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(Строка(Объект.Дело)));
				
			СостояниеДела = Форма.СтруктураСостоянияДела;
			Если ТипЗнч(СостояниеДела) = Тип("Структура")
				И ЗначениеЗаполнено(СостояниеДела.Состояние) Тогда
				HTMLТекст = HTMLТекст + СтрШаблон(
					"<A href=v8doc:%1>%2</A><BR></FONT>",
					"DossierStatusRecorder",
					РаботаС_HTML.ЗаменитьСпецСимволыHTML(
						СостояниеДела.ПредставлениеСостояния + " " + СостояниеДела.ДатаСостояния));
			КонецЕсли;
			
			МестоХранения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дело, "МестоХраненияДел");
			Если ЗначениеЗаполнено(МестоХранения) Тогда
				МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(МестоХранения,
					ПолучитьФункциональнуюОпцию("ИспользоватьСхемыПомещений"));
				Если МестоХраненияДокументаИспользуется Тогда
					ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Место хранения дела:'"));
				Иначе
					ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Место хранения:'"));
				КонецЕсли;
				HTMLТекст = HTMLТекст + СтрШаблон(
					"<A href=v8doc:%1>%2</A><BR>",
					"storage",
					РаботаС_HTML.ЗаменитьСпецСимволыHTML(МестоХраненияТекст));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если МестоХраненияДокументаИспользуется Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Место хранения:'"), Объект.МестоХранения);
	КонецЕсли;
	
	Если РеквизитыХраненияИспользуются(
		РеквизитыВида.УчитыватьОтветственногоЗаХранение, Объект.ОтветственныйЗаХранение, Объект.ФормаДокумента) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Отв. за хранение:'"), Объект.ОтветственныйЗаХранение);
	КонецЕсли;
	
	КомуПереданДокумент = Форма.КомуПереданДокумент;
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Передан:'"));
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"holder",
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(КомуПереданДокумент));
	КонецЕсли;	
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	
	Если РеквизитыВида.ИспользоватьВременныеНомера
		И ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда
		// Выводим врем. номер в реквизитах, если заполнен рег. номер, иначе он будет на месте рег. номера
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Врем. №:'"), Объект.ВременныйНомер);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПапкиДокументов")Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Папка:'"), 	Объект.Папка);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Гриф:'"),  Объект.ГрифДоступа);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вопрос:'"),  Объект.ВопросДеятельности);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(Объект.Проект) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Проект:'"),  Объект.Проект);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние:'"));
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"status",
			Форма.СостояниеТекст);
	КонецЕсли;
	
	ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
	Если ИспользоватьОбменЭД И ЗначениеЗаполнено(Форма.СостояниеЭДО) Тогда  
		
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние ЭДО:'"));  

		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"OpenEDI",
			Форма.СостояниеЭДО);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.УтверждениеТекст) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Утвержден:'"), Форма.УтверждениеТекст);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ПодписьТекст) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписан:'"), Форма.ПодписьТекст);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Комментарий) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Комментарий:'"),  Объект.Комментарий);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";	
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	HTMLТекст = HTMLТекст + "<p>";
	
	Если ЗначениеЗаполнено(СостояниеДела)
		И ПолучитьФункциональнуюОпцию("ИнтеграцияС1САрхивом")
		И СостояниеДела.Состояние = Перечисления.СостоянияДелХраненияДокументов.ПереданоВАрхив Тогда
		ЭтоЭлектронныйДокумент = Объект.ФормаДокумента = Перечисления.ВариантыФормДокументов.Электронная;
		HTMLТекст = HTMLТекст + "<p>" + " " +  "<p>" + СтрШаблон(
			"<U><B><A href=v8doc:%1>%2</A><BR></B></U>",
			"DownloadContainer",
			СтрШаблон(НСтр("ru = 'Скачать %1 из 1С:Архива'"),
				?(ЭтоЭлектронныйДокумент, НСтр("ru = 'контейнер'"), НСтр("ru = 'файлы'"))));
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";	
	Если Не Форма.НеПоказыватьДанныеОбработки Тогда
		ДобавитьОбзорРезультатов(HTMLТекст, Объект);
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</table>";
	
	HTMLТекст = HTMLТекст + "</body></html>";
	
	ОбзорОбъектовКлиентСервер.УдалитьВредоносныйКодИзТекста(HTMLТекст);
	
	Возврат HTMLТекст;
	
КонецФункции	

Функция ПолучитьОбзорДокументаСКонтрагентом(Форма)

	Объект = Форма.Объект;
	Организация = Объект.Организация;
	Шаблон = ОбщегоНазначенияДокументооборот.ЗначениеРеквизитаОбъектаВПривилегированномРежиме(Объект.Ссылка,
		"Шаблон");
	ДатаНачалаОтсчета = Делопроизводство.ДатаУчетаДокумента(Объект);
	
	ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда 
		КэшДокументыПредприятияФормаЭлемента =
			КэшиНаВремяВызоваПовтИсп.КэшДокументыПредприятияФормаЭлемента();
		Если КэшДокументыПредприятияФормаЭлемента.Инициализирован
			И КэшДокументыПредприятияФормаЭлемента.КэшДокумента.ВидДокумента = Объект.ВидДокумента Тогда
			РеквизитыВида = КэшДокументыПредприятияФормаЭлемента.КэшВидаДокумента;
		Иначе
			РеквизитыВида = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидДокумента,
				"УчитыватьСуммуДокумента, ИспользоватьСрокИсполнения, ВестиУчетПоНоменклатуреДел, УчитыватьСрокДействия,
				|УчитыватьНедействующиеДокументы, ВестиУчетТоваровИУслуг, ВестиУчетПоСтатьямДДС, ВестиУчетПоОрганизациям,
				|ВестиУчетСторон, ВестиУчетПоКонтрагентам, ЯвляетсяЗаявкойНаОплату,
				|УчитыватьМестоХранения, УчитыватьОтветственногоЗаХранение, КонтролироватьНаличиеОригинала,
				|ВестиУчетПоТематикам, СрокИсполненияУказанВРабочихДнях, ИспользоватьВременныеНомера");
		КонецЕсли;
	Иначе 
		РеквизитыВида = Новый Структура;
		РеквизитыВида.Вставить("УчитыватьСуммуДокумента", Ложь);
		РеквизитыВида.Вставить("ВестиУчетТоваровИУслуг", Ложь);
		РеквизитыВида.Вставить("ИспользоватьСрокИсполнения", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоНоменклатуреДел", Ложь);
		РеквизитыВида.Вставить("УчитыватьСрокДействия", Ложь);
		РеквизитыВида.Вставить("УчитыватьНедействующиеДокументы", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоСтатьямДДС", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоОрганизациям", Ложь);
		РеквизитыВида.Вставить("ВестиУчетСторон", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоКонтрагентам", Ложь);
		РеквизитыВида.Вставить("ЯвляетсяЗаявкойНаОплату", Ложь);
		РеквизитыВида.Вставить("УчитыватьМестоХранения", Ложь);
		РеквизитыВида.Вставить("УчитыватьОтветственногоЗаХранение", Ложь);
		РеквизитыВида.Вставить("КонтролироватьНаличиеОригинала", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоТематикам", Ложь);
		РеквизитыВида.Вставить("СрокИсполненияУказанВРабочихДнях", Ложь);
		РеквизитыВида.Вставить("ИспользоватьВременныеНомера", Ложь);
	КонецЕсли;
	
	// Формируем основное представление документа	
	HTMLТекст = "<html>
	|<head>
	|<style type=""text/css"">
	|	body {
	|		overflow:    auto;
	|		margin-top:  6px;
	|		margin-left: 10px;
	|		margin-bottom: 0px;
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	table {
	|		width:       100%; 
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	td {vertical-align: top;}
	| 	a:link {
	|		color: #006699; text-decoration: none;}
	|	a:visited {
	|		color: #006699; text-decoration: none;}
	|	a:hover {
	|		color: #006699; text-decoration: underline;}
	|	p {
	|		margin-top: 7px;}
	|</style>
	|<body>";
	
	HTMLТекст = HTMLТекст + "<table>";
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";
		
		Если РеквизитыВида.ВестиУчетПоТематикам И ЗначениеЗаполнено(Объект.Тематика) Тогда 
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A> - <A href=v8doc:%3>%4</A> № %5%6",
				ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
				ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.ВидДокумента)))),
				ПолучитьНавигационнуюСсылку(Объект.Тематика),
				ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.Тематика)))),
				?(ЗначениеЗаполнено(Объект.РегистрационныйНомер), Объект.РегистрационныйНомер,
					?(РеквизитыВида.ИспользоватьВременныеНомера И ЗначениеЗаполнено(Объект.ВременныйНомер),
						Объект.ВременныйНомер, "_____")),
				?(ЗначениеЗаполнено(Объект.ДатаРегистрации), " от " + Формат(Объект.ДатаРегистрации, "ДЛФ=D"), ""));
		Иначе
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A> № %3%4",
				ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
				ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.ВидДокумента)))),
				?(ЗначениеЗаполнено(Объект.РегистрационныйНомер), Объект.РегистрационныйНомер,
					?(РеквизитыВида.ИспользоватьВременныеНомера И ЗначениеЗаполнено(Объект.ВременныйНомер),
						Объект.ВременныйНомер, "_____")),
				?(ЗначениеЗаполнено(Объект.ДатаРегистрации), " от " + Формат(Объект.ДатаРегистрации, "ДЛФ=D"), ""));
		КонецЕсли;
		
		HTMLТекст = HTMLТекст + "</td></tr>";
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"" >";
	
	HTMLТекст = HTMLТекст + "<p>";
	Заголовок = Объект.Заголовок;
	HTMLТекст = HTMLТекст + СтрШаблон(
		"<B>%1</B>",
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(Заголовок));
	HTMLТекст = HTMLТекст + "</td></tr>";	
		
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"" >";
	
	HTMLТекст = HTMLТекст + "<p>";
	
	Если ЗначениеЗаполнено(Объект.Содержание) Тогда
		Содержание = Объект.Содержание;
		HTMLТекст = HTMLТекст + СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Содержание), Символы.ПС, "<br>");
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСвязиОбъектов") Тогда
		
		КраткиеСведенияОСвязях = СвязиОбъектов.КраткиеСведенияОСвязях(Объект.Ссылка);
			
		Если Не ЗначениеЗаполнено(КраткиеСведенияОСвязях) Тогда	
			КраткиеСведенияОСвязях = НСтр("ru = 'Связи: не заданы'");
		КонецЕсли;	
			
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<b><A href=v8doc:tasks/ShowLinks/%1>%2</A></b> <br>",
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(КраткиеСведенияОСвязях));
	КонецЕсли;	
	
	ДобавитьНадписьОСроке(HTMLТекст, Объект, РеквизитыВида, ДатаНачалаОтсчета, НСтр("ru = 'Срок исполнения:'"));
	
	// Сумма и статьи ДДС.
	Если РеквизитыВида.УчитыватьСуммуДокумента Тогда
		Валюта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Валюта, "Наименование");
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Сумма:'"), Формат(Объект.Сумма, "ЧДЦ=2; ЧН=0") + " " + 
			Валюта);
		
		Если Форма.УчитыватьНДС Тогда 
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Сумма НДС:'"), Формат(Объект.СуммаНДС, "ЧДЦ=2; ЧН=0") + " " + 
				Валюта);
		КонецЕсли;
		
		Если РеквизитыВида.ВестиУчетТоваровИУслуг И Объект.Товары.Количество() > 0 Тогда
			КоличествоПозиций = Объект.Товары.Количество();
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Товары и услуги:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=%1>%2</A><BR>",
				"v8doc:tasks/goods?ref=" + Строка(Объект.Ссылка.УникальныйИдентификатор()),
				Формат(КоличествоПозиций, "ЧГ=") + " "
				+ ПользователиСлужебныйКлиентСервер.ПредметЦелогоЧисла(КоличествоПозиций,
					"Л = ru_RU", НСтр("ru = 'позиция,позиции,позиций,,,,,,0'")));
		КонецЕсли;
		
		Если РеквизитыВида.ВестиУчетПоСтатьямДДС Тогда
			СтатьиДДС = Форма.СтатьиДвиженияДенежныхСредств;
			КоличествоСтатей = СтатьиДДС.Количество();
			Если КоличествоСтатей = 1 Тогда
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Статья ДДС:'"), 
					СтатьиДДС[0].СтатьяДвиженияДенежныхСредств);
			ИначеЕсли КоличествоСтатей > 1 Тогда
				ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Статьи ДДС:'"));
				Разделитель = "";
				Для каждого Строка из СтатьиДДС Цикл
					HTMLТекст = HTMLТекст + Разделитель;
					ДобавитьЗначение(HTMLТекст, Строка.СтатьяДвиженияДенежныхСредств, "");
					Разделитель = "; ";
				КонецЦикла;
				HTMLТекст = HTMLТекст + "<br>";
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитыВида.УчитыватьСрокДействия Тогда
		СрокДействияСтрока = Форма.СрокДействияСтрока;
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Срок действия:'"));
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"period",
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(?(ЗначениеЗаполнено(СрокДействияСтрока),
				СрокДействияСтрока, НСтр("ru = 'не указан'"))));
	КонецЕсли;
	
	Если РеквизитыВида.УчитыватьНедействующиеДокументы Тогда
		Если Объект.НеДействует Тогда
			
			НеДействуетВСоответствии = СвязиОбъектов.ПолучитьСвязанныйОбъект(
				Объект.Ссылка, Справочники.ТипыСвязей.НеДействуетВСоответствии);
				
			Если ЗначениеЗаполнено(НеДействуетВСоответствии) Тогда 
				Ответ = СтрШаблон(НСтр("ru = 'В соответствии с ""%1""'"), НеДействуетВСоответствии);
			Иначе 
				Ответ = НСтр("ru = 'Да'");
			КонецЕсли;
			
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Не действует:'"), Ответ, "696969");
			
		КонецЕсли;
	КонецЕсли;
	
	Если Делопроизводство.ЭтотВидДокументаМожноОтменить(Объект.ВидДокумента) Тогда
		
		ГотовитсяКОтменеДокументы = РегистрыСведений.ОтменяемыеДокументы.ПрочитатьНовыеДокументы(Объект.Ссылка);
		Если ГотовитсяКОтменеДокументы.Количество() <> 0 Тогда
			
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Готовится к отмене документом:'"));
			
			Для Каждого Строка Из ГотовитсяКОтменеДокументы Цикл
				ДобавитьЗначение(HTMLТекст, Строка.Документ); 
				HTMLТекст = HTMLТекст + "&nbsp;";
			КонецЦикла;	
			
		КонецЕсли;	
		
	КонецЕсли;	
		
	ДобавитьОбзорДополнительныхРеквизитов(HTMLТекст, Объект, Форма);
	
	HTMLТекст = HTMLТекст + "</td></tr>";	
	
	Если РеквизитыВида.ВестиУчетПоКонтрагентам 
		И (ЗначениеЗаполнено(Объект.Контрагент) 
			Или Объект.Контрагенты.Количество()
			Или РеквизитыВида.ЯвляетсяЗаявкойНаОплату) Тогда
		
		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td colspan=""2"" >";
		HTMLТекст = HTMLТекст + "<p>";
		
		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td width=""70%"">";
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям")
			И Не РеквизитыВида.ВестиУчетПоОрганизациям Тогда
			HTMLТекст = HTMLТекст + "<p>";
			ДобавитьРеквизит(HTMLТекст, РедакцииКонфигурацииКлиентСервер.ИмяОрганизацииУчетСторон(), "");
		Иначе
			HTMLТекст = HTMLТекст + "<p>";
			ДобавитьРеквизит(HTMLТекст, РедакцииКонфигурацииКлиентСервер.ИмяОрганизации(), "");
			HTMLТекст = HTMLТекст + "<p>";
			ДобавитьРеквизит(HTMLТекст, "", Организация, "", Юрлица.ПредставлениеЮрлицаНаДату(Организация, ДатаНачалаОтсчета));
		КонецЕсли;
		
		Если Не Форма.НесколькоКонтрагентов Тогда
			HTMLТекст = HTMLТекст + "<td>";
			HTMLТекст = HTMLТекст + "<p>";	
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Контрагент:'"), "");
			HTMLТекст = HTMLТекст + "<p>";
			
			Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
				КонтрагентПредставление = Справочники.Контрагенты.ПредставлениеКонтрагентаНаДату(Объект.Контрагент, ДатаНачалаОтсчета);
				ДобавитьРеквизит(HTMLТекст, "", Объект.Контрагент, "", КонтрагентПредставление);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.ПодписалОтКонтрагента) Тогда
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал:'"), Объект.ПодписалОтКонтрагента);
			КонецЕсли;	
			
			ДобавитьВТекстДанныеКонтактногоЛица(Объект.КонтактноеЛицо, HTMLТекст, НСтр("ru = 'Контакт:'"));
		Иначе		
			HTMLТекст = HTMLТекст + "<td>";
			HTMLТекст = HTMLТекст + "<p>";
			Количество = 0;
			Для Каждого СтрокаКонтрагент Из Объект.Контрагенты Цикл
				Если ЗначениеЗаполнено(СтрокаКонтрагент.Контрагент) Тогда
					Количество = Количество + 1;
				КонецЕсли;
			КонецЦикла;
			
			Если Количество = 1 Тогда 
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Контрагент:'"), "");
			Иначе 
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Контрагенты:'"), "");
			КонецЕсли;
			
			HTMLТекст = HTMLТекст + "<p>";
			
			Для Каждого СтрокаКонтрагент Из Объект.Контрагенты Цикл
				Если ЗначениеЗаполнено(СтрокаКонтрагент.Контрагент) Тогда
					КонтрагентПредставление = Справочники.Контрагенты.ПредставлениеКонтрагентаНаДату(СтрокаКонтрагент.Контрагент, ДатаНачалаОтсчета);
					ДобавитьРеквизит(HTMLТекст, "", СтрокаКонтрагент.Контрагент, , КонтрагентПредставление);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаКонтрагент.ПодписалОтКонтрагента) Тогда
					ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал:'"), СтрокаКонтрагент.ПодписалОтКонтрагента);
				КонецЕсли;	
				
				ДобавитьВТекстДанныеКонтактногоЛица(СтрокаКонтрагент.КонтактноеЛицо, HTMLТекст, НСтр("ru = 'Контакт:'"));
								
				HTMLТекст = HTMLТекст + "<p>";	
			КонецЦикла;	
			
			// Удаление лишнего отступа
			HTMLТекст = Лев(HTMLТекст, СтрДлина(HTMLТекст)-3);
		КонецЕсли;
		
		HTMLТекст = HTMLТекст + "</td></tr>";
	ИначеЕсли РеквизитыВида.ВестиУчетСторон И Объект.Стороны.Количество() Тогда
		
		Стороны = Новый Массив(2);
		СтрокиОрганизации = Новый Массив;
		СтрокиКонтрагенты = Новый Массив;
		
		Для Каждого СтрокаТаблицы Из Объект.Стороны Цикл
			Если РаботаСПодписямиДокументовКлиентСервер.ЭтоОрганизация(СтрокаТаблицы.Сторона) Тогда
				СтрокиОрганизации.Добавить(СтрокаТаблицы);
			Иначе
				СтрокиКонтрагенты.Добавить(СтрокаТаблицы);
			КонецЕсли;
		КонецЦикла;
		
		Если Не СтрокиКонтрагенты.Количество() Тогда
			ИндексПоследнего = СтрокиОрганизации.ВГраница();
			Для Счетчик = 1 По ИндексПоследнего Цикл
				СтрокиКонтрагенты.Добавить(СтрокиОрганизации[Счетчик]);
			КонецЦикла;
			Для Счетчик = 0 По ИндексПоследнего - 1 Цикл
				СтрокиОрганизации.Удалить(ИндексПоследнего - Счетчик);
			КонецЦикла;
		КонецЕсли;
		
		Стороны[0] = СтрокиОрганизации;
		Стороны[1] = СтрокиКонтрагенты;
		
		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'СТОРОНЫ'"), "");
		HTMLТекст = HTMLТекст + "</td></tr>";

		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td width=""70%"">";
		
		Для Каждого Сторона Из Стороны Цикл
			Для Каждого ОписаниеСтороны Из Сторона Цикл			
				Если ЗначениеЗаполнено(ОписаниеСтороны.Наименование) Тогда
					ДобавитьРеквизит(HTMLТекст, СокрЛП(ОписаниеСтороны.Наименование) + ":", "");
				КонецЕсли;
				
				СведенияОЮрлице = Юрлица.СведенияОЮрлицеНаДату(ОписаниеСтороны.Сторона, ДатаНачалаОтсчета);
				ДобавитьРеквизит(HTMLТекст, "", ОписаниеСтороны.Сторона, "", СведенияОЮрлице.ПредставлениеПолное);
				
				Если ОписаниеСтороны.Подписан Тогда
					Подписант = ОписаниеСтороны.Подписал;
					Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОписаниеСтороны.Сторона, "ЮрФизЛицо") = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
						Подписант = ОписаниеСтороны.Сторона;
					КонецЕсли;
					
					ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал:'"), Подписант);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ОписаниеСтороны.КонтактноеЛицо) Тогда
					ДобавитьВТекстДанныеКонтактногоЛица(ОписаниеСтороны.КонтактноеЛицо, HTMLТекст, НСтр("ru = 'Контакт:'"));
				КонецЕсли;
				
				HTMLТекст = HTMLТекст + "<p>";
			КонецЦикла;	
			HTMLТекст = HTMLТекст + "</td><td>";
		КонецЦикла;
				
		HTMLТекст = HTMLТекст + "</td></tr>";
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	
	Если ЗначениеЗаполнено(Объект.Подготовил) Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Подготовил:'"));
		ДобавитьЗначение(HTMLТекст, Объект.Подготовил, "");
		ДобавитьЗначение(HTMLТекст, " (" + Формат(Объект.ДатаСоздания, "ДЛФ=D") + ")", "");
		HTMLТекст = HTMLТекст + "<br>";
		
		КонтактнаяИнформация = ПолучитьКонтактнуюИнформациюОбъекта(Объект.Подготовил);
		
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
			ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформация.Телефон, "696969");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<FONT color=#696969>%1</FONT>",
				НСтр("ru = 'E-mail:'") + " ");
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
				"message"+КонтактнаяИнформация.Емайл,
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(КонтактнаяИнформация.Емайл));
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подразделение:'"),  Объект.Подразделение);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.Ответственный) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Ответственный:'"),  Объект.Ответственный);
	КонецЕсли;
	
	Если РеквизитыВида.КонтролироватьНаличиеОригинала И ЗначениеЗаполнено(Форма.ОригиналПолученТекст) Тогда 
		Если Не Форма.ОригиналПолучен И ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда 
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Оригинал:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1><FONT color=#%2>%3</FONT></A><BR>",
				"Original",
				"B22222",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(Форма.ОригиналПолученТекст));
		Иначе 
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Оригинал:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A><BR>",
				"Original",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(Форма.ОригиналПолученТекст));
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ФормаДокумента) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Форма:'"), Объект.ФормаДокумента);
	КонецЕсли;
	
	МестоХраненияДокументаИспользуется = РеквизитыХраненияИспользуются(
		РеквизитыВида.УчитыватьМестоХранения, Объект.МестоХранения, Объект.ФормаДокумента);
		
	СостояниеДела = Неопределено;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел") Тогда 
		Если РеквизитыВида.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(Объект.НоменклатураДел) Тогда
			ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Номенклатура дел:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A><BR>",
				ПолучитьНавигационнуюСсылку(Объект.НоменклатураДел),
				Объект.НоменклатураДел);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Дело) Тогда
			ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Помещен в дело:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A><BR>",
				"dossier",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(Строка(Объект.Дело)));
			
			СостояниеДела = Форма.СтруктураСостоянияДела;
			Если ТипЗнч(СостояниеДела) = Тип("Структура")
				И ЗначениеЗаполнено(СостояниеДела.Состояние) Тогда
				HTMLТекст = HTMLТекст + СтрШаблон(
					"<A href=v8doc:%1>%2</A><BR></FONT>",
					"DossierStatusRecorder",
					РаботаС_HTML.ЗаменитьСпецСимволыHTML(
						СостояниеДела.ПредставлениеСостояния + " " + СостояниеДела.ДатаСостояния));
			КонецЕсли;
			
			МестоХранения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дело, "МестоХраненияДел");
			Если ЗначениеЗаполнено(МестоХранения) Тогда
				МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(МестоХранения,
					ПолучитьФункциональнуюОпцию("ИспользоватьСхемыПомещений"));
				Если МестоХраненияДокументаИспользуется Тогда
					ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Место хранения дела:'"));
				Иначе
					ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Место хранения:'"));
				КонецЕсли;
				HTMLТекст = HTMLТекст + СтрШаблон(
					"<A href=v8doc:%1>%2</A><BR>",
					"storage",
					РаботаС_HTML.ЗаменитьСпецСимволыHTML(МестоХраненияТекст));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если МестоХраненияДокументаИспользуется Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Место хранения:'"), Объект.МестоХранения);
	КонецЕсли;
	
	Если РеквизитыХраненияИспользуются(
		РеквизитыВида.УчитыватьОтветственногоЗаХранение, Объект.ОтветственныйЗаХранение, Объект.ФормаДокумента) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Отв. за хранение:'"), Объект.ОтветственныйЗаХранение);
	КонецЕсли;
	
	КомуПереданДокумент = Форма.КомуПереданДокумент;
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Передан:'"));
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"holder",
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(КомуПереданДокумент));
	КонецЕсли;	
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	
	Если РеквизитыВида.ИспользоватьВременныеНомера 
		И ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда
		// Выводим врем. номер в реквизитах, если заполнен рег. номер, иначе он будет на месте рег. номера
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Врем. №:'"), Объект.ВременныйНомер);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПапкиДокументов") Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Папка:'"), 	Объект.Папка);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Гриф:'"),  Объект.ГрифДоступа);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вопрос:'"),  Объект.ВопросДеятельности);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(Объект.Проект) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Проект:'"),  Объект.Проект);
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние:'"));
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"status",
			Форма.СостояниеТекст);
	КонецЕсли;

	Если ИспользоватьОбменЭД И ЗначениеЗаполнено(Форма.СостояниеЭДО) Тогда
		
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние ЭДО:'"));  

		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"OpenEDI",
			Форма.СостояниеЭДО);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.УтверждениеТекст) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Утвержден:'"), Форма.УтверждениеТекст);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ПодписьТекст) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписан:'"), Форма.ПодписьТекст);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Комментарий) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Комментарий:'"),  Объект.Комментарий);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";	
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	HTMLТекст = HTMLТекст + "<p>";
	
	Если ЗначениеЗаполнено(СостояниеДела)
		И ПолучитьФункциональнуюОпцию("ИнтеграцияС1САрхивом")
		И СостояниеДела.Состояние = Перечисления.СостоянияДелХраненияДокументов.ПереданоВАрхив Тогда
		ЭтоЭлектронныйДокумент = Объект.ФормаДокумента = Перечисления.ВариантыФормДокументов.Электронная;
		HTMLТекст = HTMLТекст + "<p>" + " " +  "<p>" + СтрШаблон(
			"<U><B><A href=v8doc:%1>%2</A><BR></B></U>",
			"DownloadContainer",
			СтрШаблон(НСтр("ru = 'Скачать %1 из 1С:Архива...'"),
				?(ЭтоЭлектронныйДокумент, НСтр("ru = 'контейнер'"), НСтр("ru = 'файлы'"))));
	КонецЕсли;
	
	Если Не Форма.НеПоказыватьДанныеОбработки Тогда
		ДобавитьОбзорРезультатов(HTMLТекст, Объект);
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</td></tr>";
	HTMLТекст = HTMLТекст + "</table>";
	
	HTMLТекст = HTMLТекст + "</body></html>";
	
	ОбзорОбъектовКлиентСервер.УдалитьВредоносныйКодИзТекста(HTMLТекст);
	
	Возврат HTMLТекст;
	
КонецФункции	

Процедура ДобавитьПодпись(HTMLТекст, Подпись)
	
	Если ЗначениеЗаполнено(Подпись) Тогда 
		HTMLТекст = HTMLТекст + "<FONT color=#413003>";
		HTMLТекст = HTMLТекст + Подпись + " ";
		HTMLТекст = HTMLТекст + "</FONT>";
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьПодписьСЦветом(HTMLТекст, Подпись, Цвет = "")

	Подпись = СокрЛП(Подпись);
	Подпись = СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Подпись), Символы.ПС, "<br>");
			
	Если ЗначениеЗаполнено(Подпись) Тогда
		Если ЗначениеЗаполнено(Цвет) Тогда
			HTMLТекст = HTMLТекст + "<FONT color="+Цвет+">"; 
		Иначе
			 HTMLТекст = HTMLТекст + "<FONT color=#413003>";
		КонецЕсли;
		
		HTMLТекст = HTMLТекст + Подпись + " ";
		HTMLТекст = HTMLТекст + "</FONT>";
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЗначение(HTMLТекст, ЗначениеДанных, Цвет = "", ПредставлениеДанных = "")
	
	Значение = ЗначениеДанных;
	Представление = Строка(Значение);
	Если ЗначениеЗаполнено(ПредставлениеДанных) Тогда
		Представление = ПредставлениеДанных;
	КонецЕсли;
	
	
	Если Не ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Значение))
	 Или ОбщегоНазначения.ЭтоПеречисление(Значение.Метаданные()) Тогда 
		Если ЗначениеЗаполнено(Цвет) Тогда 
			HTMLТекст = HTMLТекст + "<FONT color=#"+Цвет+">";
			HTMLТекст = HTMLТекст + РаботаС_HTML.ЗаменитьСпецСимволыHTML(Представление);
			HTMLТекст = HTMLТекст + "</FONT>";
		Иначе	
			HTMLТекст = HTMLТекст + РаботаС_HTML.ЗаменитьСпецСимволыHTML(Представление);
		КонецЕсли;
	Иначе
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A>",
			ПолучитьНавигационнуюСсылку(Значение),
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(Представление));
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьРеквизит(HTMLТекст, Подпись, Значение, Цвет = "", Представление = "")
	
	ДобавитьПодпись(HTMLТекст, Подпись);
	ДобавитьЗначение(HTMLТекст, Значение, Цвет, Представление); 
	HTMLТекст = HTMLТекст + "<br>";
	
КонецПроцедуры

Процедура ДобавитьДопРеквизит(HTMLТекст, Значение, Строка)
	
	ФорматСвойства = Строка.Свойство.ФорматСвойства;
	
	Если Не ЗначениеЗаполнено(ФорматСвойства) Тогда 
		ТипЗначения = Строка.Свойство.ТипЗначения;
		
		Если ТипЗначения.СодержитТип(Тип("Дата")) Тогда 
			Если ТипЗначения.КвалификаторыДаты.ЧастиДаты = ЧастиДаты.Время Тогда 
				ФорматСвойства = ФорматСвойства + "ДЛФ = 'T';";
			ИначеЕсли ТипЗначения.КвалификаторыДаты.ЧастиДаты = ЧастиДаты.Дата Тогда 
				ФорматСвойства = ФорматСвойства + "ДЛФ = 'D';";
			ИначеЕсли ТипЗначения.КвалификаторыДаты.ЧастиДаты = ЧастиДаты.ДатаВремя Тогда 	
				ФорматСвойства = ФорматСвойства + "ДЛФ = 'DT';";
			КонецЕсли;	
		КонецЕсли;	
		
		Если ТипЗначения.СодержитТип(Тип("Число")) Тогда 	
			Разрядность = ТипЗначения.КвалификаторыЧисла.Разрядность;
			РазрядностьДробнойЧасти = ТипЗначения.КвалификаторыЧисла.РазрядностьДробнойЧасти;
			
			ФорматСвойства = ФорматСвойства + "ЧЦ = '" + Разрядность + "';";
			ФорматСвойства = ФорматСвойства + "ЧДЦ = '" + РазрядностьДробнойЧасти + "';";
		КонецЕсли;	
	КонецЕсли;		
	
	Если ЗначениеЗаполнено(ФорматСвойства) Тогда 
		ДобавитьРеквизит(HTMLТекст, Строка(Строка.Наименование) + ":", Формат(Значение, ФорматСвойства));
	Иначе
		ДобавитьРеквизит(HTMLТекст, Строка(Строка.Наименование) + ":", Значение);
	КонецЕсли;	
	
КонецПроцедуры	

// Добавляет в текст HTML данные контактного лица
Процедура ДобавитьВТекстДанныеКонтактногоЛица(КонтактноеЛицо, HTMLТекст, ЗаголовокКонтактногоЛица = "")
		
	Если Не ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьРеквизит(HTMLТекст, ЗаголовокКонтактногоЛица, КонтактноеЛицо);
	КонтактнаяИнформация = ПолучитьКонтактнуюИнформациюОбъекта(КонтактноеЛицо);
	
	Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
		ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформация.Телефон, "696969");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<FONT color=#696969>%1</FONT>",
			НСтр("ru = 'E-mail:'") + " ");
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
			"message"+КонтактнаяИнформация.Емайл,
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(КонтактнаяИнформация.Емайл));
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКонтактнуюИнформациюОбъекта(Пользователь)
	
	КонтактнаяИнформация = Новый Структура;
	Емайл = "";Телефон = "";
	
	Если ТипЗнч(Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
		Емайл = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
			Пользователь,
			Справочники.ВидыКонтактнойИнформации.EmailПользователя,,
			ТекущаяДатаСеанса());
		Телефон = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
			Пользователь,
			Справочники.ВидыКонтактнойИнформации.ТелефонПользователя,,
			ТекущаяДатаСеанса());
	ИначеЕсли ТипЗнч(Пользователь) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
		Емайл = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
			Пользователь,
			Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица,,
			ТекущаяДатаСеанса());
		Телефон = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
			Пользователь,
			Справочники.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица,,
			ТекущаяДатаСеанса());
	ИначеЕсли ТипЗнч(Пользователь) = Тип("СправочникСсылка.Контрагенты") Тогда
		Емайл = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
			Пользователь,
			Справочники.ВидыКонтактнойИнформации.EmailКонтрагента,,
			ТекущаяДатаСеанса());
		Телефон = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
			Пользователь,
			Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента,,
			ТекущаяДатаСеанса());
	ИначеЕсли ТипЗнч(Пользователь) = Тип("СправочникСсылка.Сотрудники") Тогда
		Емайл = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
			Пользователь,
			Справочники.ВидыКонтактнойИнформации.EmailСотрудника,,
			ТекущаяДатаСеанса());
		Телефон = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
			Пользователь,
			Справочники.ВидыКонтактнойИнформации.ТелефонСотрудника,,
			ТекущаяДатаСеанса());
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Телефон) Тогда 
		КонтактнаяИнформация.Вставить("Телефон", СтрШаблон(
			НСтр("ru = 'Телефон: %1'"), Телефон));	
	Иначе
		КонтактнаяИнформация.Вставить("Телефон", Телефон);
	КонецЕсли;			

	КонтактнаяИнформация.Вставить("Емайл", Емайл);

	Возврат КонтактнаяИнформация;
	
КонецФункции	

Функция ПолучитьОбзорШаблонаДокументаБезКонтрагента(Объект)
	
	РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект,
		"Организация, ВидДокумента, Заголовок, Содержание, ДлительностьИсполнения, НоменклатураДел,
		|ГрифДоступа, Папка, ВопросДеятельности, Ответственный, КомментарийКДокументу, КомментарийКШаблону,
		|Автор, Подписант, Тематика");
		
	Организация = РеквизитыОбъекта.Организация;
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда 
		РеквизитыВида = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидДокумента,
			"ВестиУчетПоНоменклатуреДел, ВестиУчетПоТематикам, ВестиУчетСторон,
			|ВестиУчетПоКонтрагентам");
	Иначе 
		РеквизитыВида.Вставить("ВестиУчетСторон", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоКонтрагентам", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоНоменклатуреДел", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоТематикам", Ложь);
	КонецЕсли;
	
	HTMLТекст = "<html>
	|<head>
	|<style type=""text/css"">
	|	body {
	|		overflow:    auto;
	|		margin-top:  6px; 		 
	|		margin-left: 10px; 
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	table {
	|		width:       100%; 
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	td {vertical-align: top;}
	| 	a:link {
	|		color: #006699; text-decoration: none;}
	|	a:visited {
	|		color: #006699; text-decoration: none;}
	|	a:hover {
	|		color: #006699; text-decoration: underline;}
	|	p {
	|		margin-top: 7px;}
	|</style>
	|<body>";
	
	HTMLТекст = HTMLТекст + "<table>";
	
	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";
	ДобавитьРеквизит(HTMLТекст, "", Организация);
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";
	HTMLТекст = HTMLТекст + "<p>";
	
	Если РеквизитыВида.ВестиУчетПоТематикам И ЗначениеЗаполнено(Объект.Тематика) Тогда 
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A> - <A href=v8doc:%3>%4</A>",
			ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
			ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.ВидДокумента)))),
			ПолучитьНавигационнуюСсылку(Объект.Тематика),
			ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.Тематика)))));
	Иначе
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A>",
			ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
			ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.ВидДокумента)))));
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	Заголовок = РеквизитыОбъекта.Заголовок;
	HTMLТекст = HTMLТекст + СтрШаблон(
		"<B>%1</B>",
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(Заголовок));
	HTMLТекст = HTMLТекст + "<p>";
		
	HTMLТекст = HTMLТекст + "<p>";	
	Если ЗначениеЗаполнено(РеквизитыОбъекта.Содержание) Тогда
		Содержание = РеквизитыОбъекта.Содержание;
		HTMLТекст = HTMLТекст + СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Содержание), Символы.ПС, "<br>");
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыОбъекта.ДлительностьИсполнения) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Длительность исполнения (дней):'"), Строка(РеквизитыОбъекта.ДлительностьИсполнения));
	КонецЕсли;
				 
	Для каждого Строка Из Объект.ДополнительныеРеквизиты Цикл
		Значение = Строка.Значение;
		Если Значение <> Неопределено или ЗначениеЗаполнено(Значение) Тогда
			СтруктураСтрока = Новый Структура;
			СтруктураСтрока.Вставить("Свойство", Строка.Свойство);
			СтруктураСтрока.Вставить("Наименование", Строка(Строка.Свойство));
			ДобавитьДопРеквизит(HTMLТекст, Значение, СтруктураСтрока);
		КонецЕсли;	
	КонецЦикла;			
		
	HTMLТекст = HTMLТекст + "</td></tr>";	
		
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	Если РеквизитыВида.ВестиУчетПоНоменклатуреДел
		И ЗначениеЗаполнено(РеквизитыОбъекта.НоменклатураДел) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Номенклатура дел:'"), РеквизитыОбъекта.НоменклатураДел);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	
	Если ЗначениеЗаполнено(РеквизитыОбъекта.Папка) Тогда  
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Папка:'"), РеквизитыОбъекта.Папка);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа")
		И ЗначениеЗаполнено(РеквизитыОбъекта.ГрифДоступа) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Гриф:'"),  РеквизитыОбъекта.ГрифДоступа);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности")
		И ЗначениеЗаполнено(РеквизитыОбъекта.ВопросДеятельности) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вопрос:'"),  РеквизитыОбъекта.ВопросДеятельности);
	КонецЕсли;
		
	Если ЗначениеЗаполнено(РеквизитыОбъекта.Ответственный) Тогда 
		ДобавитьВТекстДанныеКонтактногоЛица(РеквизитыОбъекта.Ответственный, HTMLТекст, НСтр("ru = 'Ответственный:'"));
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td>";
	
	Если ЗначениеЗаполнено(РеквизитыОбъекта.КомментарийКДокументу) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Комментарий к документу:'"), РеквизитыОбъекта.КомментарийКДокументу);
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""3"">";
	HTMLТекст = HTMLТекст + "<p>";
	
	Если ЗначениеЗаполнено(РеквизитыОбъекта.КомментарийКШаблону) Тогда			
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Комментарий к шаблону:'"), РеквизитыОбъекта.КомментарийКШаблону);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td>";

	Если ЗначениеЗаполнено(РеквизитыОбъекта.Автор) Тогда
		ДобавитьВТекстДанныеКонтактногоЛица(
			РеквизитыОбъекта.Автор,
			HTMLТекст,
			НСтр("ru = 'Кому задавать вопросы по шаблону:'"));
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "</table>";
	HTMLТекст = HTMLТекст + "</body></html>";
	
	ОбзорОбъектовКлиентСервер.УдалитьВредоносныйКодИзТекста(HTMLТекст);
	
	Возврат HTMLТекст;
	
КонецФункции	

Функция ПолучитьОбзорШаблонаДокументаСКонтрагентом(Объект)

	РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект,
		"Организация, ВидДокумента, Заголовок, Содержание, ДлительностьИсполнения, НоменклатураДел,
		|ГрифДоступа, Папка, ВопросДеятельности, Ответственный, КомментарийКДокументу, КомментарийКШаблону,
		|Автор, Подписант, Тематика");

	РеквизитыВида = Новый Структура;
	РеквизитыВида.Вставить("ВестиУчетСторон", Ложь);
	РеквизитыВида.Вставить("ВестиУчетПоКонтрагентам", Ложь);
	РеквизитыВида.Вставить("ВестиУчетПоНоменклатуреДел", Ложь);
	РеквизитыВида.Вставить("ВестиУчетПоТематикам", Ложь);
	
	Если ЗначениеЗаполнено(РеквизитыОбъекта.ВидДокумента) Тогда
		РеквизитыВида = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеквизитыОбъекта.ВидДокумента,
			"ВестиУчетСторон, ВестиУчетПоКонтрагентам, ВестиУчетПоНоменклатуреДел,
			|ВестиУчетПоТематикам");
	КонецЕсли;
		
	Организация = РеквизитыОбъекта.Организация;
	
	HTMLТекст = "<html>
	|<head>
	|<style type=""text/css"">
	|	body {
	|		overflow:    auto;
	|		margin-top:  6px; 		 
	|		margin-left: 10px; 
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	table {
	|		width:       100%; 
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	td {vertical-align: top;}
	| 	a:link {
	|		color: #006699; text-decoration: none;}
	|	a:visited {
	|		color: #006699; text-decoration: none;}
	|	a:hover {
	|		color: #006699; text-decoration: underline;}
	|	p {
	|		margin-top: 7px;}
	|</style>
	|<body>";
	
	HTMLТекст = HTMLТекст + "<table>";
	
	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";
	ДобавитьРеквизит(HTMLТекст, "", Организация);
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";
	
	Если РеквизитыВида.ВестиУчетПоТематикам И ЗначениеЗаполнено(Объект.Тематика) Тогда 
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A> - <A href=v8doc:%3>%4</A>",
			ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
			ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.ВидДокумента)))),
			ПолучитьНавигационнуюСсылку(Объект.Тематика),
			ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.Тематика)))));
	Иначе
		HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A>",
			ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
			ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.ВидДокумента)))));
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	Заголовок = РеквизитыОбъекта.Заголовок;
	HTMLТекст = HTMLТекст + СтрШаблон(
		"<B>%1</B>",
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(Заголовок));
	HTMLТекст = HTMLТекст + "<p>";
		
	HTMLТекст = HTMLТекст + "<p>";	
	Если ЗначениеЗаполнено(РеквизитыОбъекта.Содержание) Тогда
		Содержание = РеквизитыОбъекта.Содержание;
		HTMLТекст = HTMLТекст + СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Содержание), Символы.ПС, "<br>");
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыОбъекта.ДлительностьИсполнения) Тогда 
		ДобавитьРеквизит(
			HTMLТекст,
			НСтр("ru = 'Длительность исполнения (дней):'"),
			Строка(РеквизитыОбъекта.ДлительностьИсполнения));
	КонецЕсли;
				 
	Для каждого Строка Из Объект.ДополнительныеРеквизиты Цикл
		Значение = Строка.Значение;
		Если Значение <> Неопределено или ЗначениеЗаполнено(Значение) Тогда
			СтруктураСтрока = Новый Структура;
			СтруктураСтрока.Вставить("Свойство", Строка.Свойство);
			СтруктураСтрока.Вставить("Наименование", Строка(Строка.Свойство));
			ДобавитьДопРеквизит(HTMLТекст, Значение, СтруктураСтрока);
		КонецЕсли;	
	КонецЦикла;			
		
	HTMLТекст = HTMLТекст + "</td></tr>";	
		
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	
	Если ЗначениеЗаполнено(РеквизитыОбъекта.ВидДокумента) И РеквизитыВида.ВестиУчетПоНоменклатуреДел
		И ЗначениеЗаполнено(РеквизитыОбъекта.НоменклатураДел) Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Номенклатура дел:'"), РеквизитыОбъекта.НоменклатураДел);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	
	Если ЗначениеЗаполнено(РеквизитыОбъекта.Папка) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Папка:'"), РеквизитыОбъекта.Папка);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа")
		И ЗначениеЗаполнено(РеквизитыОбъекта.ГрифДоступа) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Гриф:'"),  РеквизитыОбъекта.ГрифДоступа);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности")
		И ЗначениеЗаполнено(РеквизитыОбъекта.ВопросДеятельности) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вопрос:'"),  РеквизитыОбъекта.ВопросДеятельности);
	КонецЕсли;
		
	Если ЗначениеЗаполнено(РеквизитыОбъекта.Ответственный) Тогда 
		ДобавитьВТекстДанныеКонтактногоЛица(РеквизитыОбъекта.Ответственный, HTMLТекст, НСтр("ru = 'Ответственный:'"));
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	Если РеквизитыВида.ВестиУчетСторон И Объект.Стороны.Количество() Тогда
		HTMLТекст = HTMLТекст + "<td>";
		HTMLТекст = HTMLТекст + "<p>";
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Стороны:'"), "");
		HTMLТекст = HTMLТекст + "<p>";
		
		Для Каждого СтрокаСторона Из Объект.Стороны Цикл
			Если ЗначениеЗаполнено(СтрокаСторона.Наименование) Тогда
				ДобавитьПодпись(HTMLТекст, СокрЛП(СтрокаСторона.Наименование) + ": ");
			КонецЕсли;			
			
			ДобавитьЗначение(HTMLТекст, СтрокаСторона.Сторона, "");
			HTMLТекст = HTMLТекст + "<br>";
			
			ДобавитьВТекстДанныеКонтактногоЛица(СтрокаСторона.КонтактноеЛицо, HTMLТекст, НСтр("ru = 'Контакт:'"));
			
			HTMLТекст = HTMLТекст + "<p>";
		КонецЦикла;	
		
		// Удаление лишнего отступа
		HTMLТекст = Лев(HTMLТекст, СтрДлина(HTMLТекст)-3);
	ИначеЕсли РеквизитыВида.ВестиУчетПоКонтрагентам И Объект.Контрагенты.Количество() Тогда
		HTMLТекст = HTMLТекст + "<td>";
		HTMLТекст = HTMLТекст + "<p>";	
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Контрагенты:'"), "");
		HTMLТекст = HTMLТекст + "<p>";
		
		Для Каждого СтрокаКонтрагент Из Объект.Контрагенты Цикл
			Если ЗначениеЗаполнено(СтрокаКонтрагент.Контрагент) Тогда
				ДобавитьРеквизит(HTMLТекст, "", СтрокаКонтрагент.Контрагент);
			КонецЕсли;
			
			ДобавитьВТекстДанныеКонтактногоЛица(СтрокаКонтрагент.КонтактноеЛицо, HTMLТекст, НСтр("ru = 'Контакт:'"));
			
			HTMLТекст = HTMLТекст + "<p>";	
		КонецЦикла;	

		// Удаление лишнего отступа
		HTMLТекст = Лев(HTMLТекст, СтрДлина(HTMLТекст)-3);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td>";
	
	Если ЗначениеЗаполнено(РеквизитыОбъекта.КомментарийКДокументу) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Комментарий к документу:'"), РеквизитыОбъекта.КомментарийКДокументу);
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""3"">";
	HTMLТекст = HTMLТекст + "<p>";
	Если ЗначениеЗаполнено(РеквизитыОбъекта.КомментарийКШаблону) Тогда			
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Комментарий к шаблону:'"), РеквизитыОбъекта.КомментарийКШаблону);
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td>";

	Если ЗначениеЗаполнено(РеквизитыОбъекта.Автор) Тогда
		ДобавитьВТекстДанныеКонтактногоЛица(
			РеквизитыОбъекта.Автор,
			HTMLТекст,
			НСтр("ru = 'Кому задавать вопросы по шаблону:'"));
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "</table>";
	HTMLТекст = HTMLТекст + "</body></html>";
	
	ОбзорОбъектовКлиентСервер.УдалитьВредоносныйКодИзТекста(HTMLТекст);
	
	Возврат HTMLТекст;
	
КонецФункции	

Функция РеквизитыХраненияИспользуются(НастройкаХранения, РеквизитХранения, ФормаДокумента)
	
	Если ФормаДокумента = Перечисления.ВариантыФормДокументов.Электронная Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	ИспользоватьМестаХранения = ПолучитьФункциональнуюОпцию("ИспользоватьМестаХранения");
	Если ИспользоватьМестаХранения 
		И НастройкаХранения <> Перечисления.ВариантыИспользованияПолейХранения.НеУчитывать
		И ЗначениеЗаполнено(РеквизитХранения) Тогда 
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Процедура ДобавитьОбзорРезультатов(HTMLТекст, Объект)
	
	Если  Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	// Получить все действия и их участников
	ОбработкаПредмета = Справочники.ОбработкиОбъектов.ОбработкаОбъекта( Объект.Ссылка);
	ВсеДействия = ДействияСервер.ТекущиеДействияПредмета( Объект.Ссылка, ,
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбработкаПредмета, "ДатаСоздания")).Выгрузить();
		
	ДобавитьОбзорЛистаСогласованияДокумента(HTMLТекст, Объект.Ссылка);
	ДобавитьОбзорЛистаУтвержденияДокумента(HTMLТекст, Объект.Ссылка, ВсеДействия);
	ДобавитьОбзорЛистаПодписанияДокумента(HTMLТекст, Объект.Ссылка, ВсеДействия);
	ДобавитьОбзорРезолюцийДокумента(HTMLТекст, Объект.Ссылка);
	
КонецПроцедуры

Процедура ДобавитьОбзорЛистаСогласованияДокумента(HTMLТекст, Документ)  
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = РаботаСВизамиСогласования.ТекстЗапросаДляЛистаСогласования();
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Документ);
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Действие = Неопределено;
	
	ДействияСоответствие = Новый Соответствие;
	ВсеВизыСогласования = Новый Массив;
	// сперва найдем все Действия
	Для Каждого СтрокаСсылка Из Результат.Строки Цикл
		Для Каждого СтрокаИсполнитель Из СтрокаСсылка.Строки Цикл
			
			Действие = СтрокаИсполнитель.Источник;
			Ветка = СогласованиеВРежимеЗамечанийСервер.НайтиВеткуОбработки(Действие);
			Если ЗначениеЗаполнено(Ветка) Тогда
				ДействияСоответствие[Действие] = Ветка;
			Иначе
				ДействияСоответствие[Действие] = 1;
			КонецЕсли;
			
			Если ВсеВизыСогласования.Найти(СтрокаИсполнитель.ВизаСогласования) = Неопределено Тогда
				ВсеВизыСогласования.Добавить(СтрокаИсполнитель.ВизаСогласования);
			КонецЕсли;
			
		КонецЦикла;	
	КонецЦикла;	
	ВеткиМассив = Новый Массив;
	Для Каждого КлючИЗначение Из ДействияСоответствие Цикл
		ВеткиМассив.Добавить(КлючИЗначение.Значение);
	КонецЦикла;	
	Замечания = РаботаСВизамиСогласования.ЗамечанияПоВеткам(ВеткиМассив);
	
	НомерИтерации = РегистрыСведений.ИтерацииДействий.НомерИтерации(Действие);
	Разногласия = РаботаСВизамиСогласования.ВсеРазногласия(Действие, НомерИтерации);
	ВерсииСогласованныхФайлов = РегистрыСведений.ВерсииСогласованныхФайлов.ВсеВерсииПоСпискуВиз(
		ВсеВизыСогласования);
	
	Если ВсеВизыСогласования.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + "<p>";
		
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""4"" align=center>";
	
	HTMLТекст = HTMLТекст + СтрШаблон(
		"<B>%1</B>",
		НСтр("ru = 'Лист согласования'"));
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + "</td>";
	
	Для Каждого СтрокаСсылка Из Результат.Строки Цикл
		HTMLТекст = HTMLТекст + "<table border=""1"" bordercolor = ""black"" style=""border-collapse: collapse;"" >";
		HTMLТекст = HTMLТекст + "<tr>";
		
		ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'ФИО, Должность'"), "30%",, "black");
		ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Результат'"), "20%",, "black");
		ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Дата'"), "20%",, "black");
		ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Замечания, комментарии'"), "30%",, "black");
		
		HTMLТекст = HTMLТекст + "</tr>";
	
		Для Каждого СтрокаИсполнитель Из СтрокаСсылка.Строки Цикл

			ТекстПодписи = "";	ФИОДолжность = ""; РезультатВыполнения = "";
			ПодписыватьУЭП = Ложь;
			Если ЗначениеЗаполнено(СтрокаИсполнитель.ФактическийИсполнитель) Тогда
				
				ПредставленияПравок = Новый Массив;
				
				ДанныеОбИзмененииФайлов = РаботаСВизамиСогласования.ДанныеОбИзмененииФайловПоВизеСогласования(
					ВерсииСогласованныхФайлов, СтрокаИсполнитель.ВизаСогласования);
				ВерсииИзменились = ДанныеОбИзмененииФайлов.ВерсииОтличаются; 
				ОтслеживаниеВерсийПроизводилось = ДанныеОбИзмененииФайлов.ОтслеживаниеВерсийПроизводилось;
				
				Ветка = ДействияСоответствие.Получить(СтрокаИсполнитель.Источник);
				
				Если ЗначениеЗаполнено(СтрокаИсполнитель.РезультатСогласования) 
					И ЗначениеЗаполнено(СтрокаИсполнитель.Источник)
					И Не ЗначениеЗаполнено(СтрокаИсполнитель.ПравилоЭскалации) Тогда
					
					Если ТипЗнч(СтрокаИсполнитель.Источник) = Тип("СправочникСсылка.ДействияСогласования") Тогда
						
						ПодписыватьУЭП = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
							СтрокаИсполнитель.Источник, "ПодписыватьУЭП");
							
					ИначеЕсли ТипЗнч(СтрокаИсполнитель.Источник) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда		
							
						БизнесПроцесс = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
							СтрокаИсполнитель.Источник, "БизнесПроцесс");
							
						Если ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Согласование") Тогда	
							ПодписыватьУЭП = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
								БизнесПроцесс, "ПодписыватьЭП");
						КонецЕсли;	
						
					КонецЕсли;
					
					ТекстПодписи = РаботаСВизамиСогласования.ТекстШтампаЛистаСогласования(СтрокаИсполнитель, ПодписыватьУЭП); 
				
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Ветка)
					И ТипЗнч(Ветка) = Тип("СправочникСсылка.ВеткиОбработки") Тогда // это согл в режиме замечаний
					
					СтруктураПоиска = Новый Структура("ВеткаОбработки, ТипЗамечания, НомерЭтапа",
						Ветка,
						Неопределено,
						СтрокаИсполнитель.НомерИтерации);
						
					СтруктураПоиска.Вставить("ИдентификаторАвтора", СтрокаИсполнитель.ИдентификаторУчастника);
					
					// Замечания.
					СтруктураПоиска.ТипЗамечания = Перечисления.ТипыЗамечаний.Замечание;
					ЗамечанияСтроки = Замечания.НайтиСтроки(СтруктураПоиска);
					
					Для Каждого Замечание Из ЗамечанияСтроки Цикл 
						ПредставленияПравок.Добавить(РаботаСВизамиСогласования.ПредставлениеЗамечания(Замечание));
					КонецЦикла;
					
					// Комментарии.
					СтруктураПоиска.ТипЗамечания = Перечисления.ТипыЗамечаний.Комментарий;
					КомментарииСтроки = Замечания.НайтиСтроки(СтруктураПоиска);
					
					ВыделятьКомментарий = 
						СтрокаИсполнитель.РезультатСогласования = Перечисления.РезультатыСогласования.НеСогласовано;
					
					Для Каждого Комментарий Из КомментарииСтроки Цикл 
						ПредставленияПравок.Добавить(РаботаСВизамиСогласования.ПредставлениеЗамечания(Комментарий, ВыделятьКомментарий));
					КонецЦикла;
				
				ИначеЕсли ЗначениеЗаполнено(СтрокаИсполнитель.РезультатВыполнения) Тогда 
					ПредставленияПравок.Добавить(СтрокаИсполнитель.РезультатВыполнения);	
				КонецЕсли;		
				
				Если ПредставленияПравок.Количество() > 0 Тогда
					ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПредставленияПравок, "");
					РезультатВыполнения = СтрСоединить(ПредставленияПравок, Символы.ПС);
				Иначе 
					РезультатВыполнения = СтрокаИсполнитель.РезультатВыполнения;
				КонецЕсли;
			КонецЕсли;
			
			ФИОДолжность = СтрокаИсполнитель.ПредставлениеФактическогоИсполнителя; 
			Если Не ЗначениеЗаполнено(ФИОДолжность) Тогда
				ФИОДолжность = Строка(СтрокаИсполнитель.ФактическийИсполнитель); 
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрокаИсполнитель.Исполнитель) Тогда 
				
				Если ЗначениеЗаполнено(СтрокаИсполнитель.ФактическийИсполнитель) Тогда 
					ФИОДолжность = 
						СтрШаблон("%1 (%2)", 
						ФИОДолжность, 
						СтрокаИсполнитель.РольИсполнителя);
				Иначе
					ФИОДолжность = СтрокаИсполнитель.РольИсполнителя;
				КонецЕсли;
				
			Иначе
				
				Если Не ЗначениеЗаполнено(СтрокаИсполнитель.ФактическийИсполнитель) Тогда
					ФИОДолжность = СтрокаИсполнитель.Исполнитель;
				КонецЕсли;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаИсполнитель.РезультатСогласования) И ЗначениеЗаполнено(ТекстПодписи) Тогда
				
				HTMLТекст = HTMLТекст + "<tr>";
				HTMLТекст = HTMLТекст + "<td width=""30%"" Rowspan = ""3"" align=left bordercolor = ""black"" >";
				ФИОДолжность = СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(ФИОДолжность), Символы.ПС, "<br>");
				ДобавитьРеквизит(HTMLТекст, ФИОДолжность, "");
				HTMLТекст = HTMLТекст + "</td>";
				
				ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаИсполнитель.РезультатСогласования, "20%");
				ДобавитьЯчейкуТаблицы(HTMLТекст, Формат(СтрокаИсполнитель.ДатаИсполнения, "ДФ='dd.MM.yyyy ЧЧ:мм'"), "20%", "left");
				
				HTMLТекст = HTMLТекст + "<td width=""30%"" Rowspan = ""3"" align=left bordercolor = ""black"" >";
				РезультатВыполнения = СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(РезультатВыполнения), Символы.ПС, "<br>");
				
				HTMLТекст = HTMLТекст + СтрШаблон(
					"<A color=""black"" href=v8doc:%1><FONT color=""black"">%2</FONT></A>",
					СтрШаблон("v8doc:MXLDetails/ShowApprovedFileVersions/%1",
						ПолучитьНавигационнуюСсылку(СтрокаИсполнитель.ВизаСогласования)),
					РезультатВыполнения);
				HTMLТекст = HTMLТекст + "<br>";
				HTMLТекст = HTMLТекст + "</td>";
				
				HTMLТекст = HTMLТекст + "</tr>";
				
				// Строка с подписью
				HTMLТекст = HTMLТекст + "<tr>";
				HTMLТекст = HTMLТекст + "<td style =""border-bottom:0px"" colspan=""2"" align=left bordercolor = ""black"" >";
				Если ПодписыватьУЭП Тогда
											
					HTMLТекст = HTMLТекст + СтрШаблон(
						"<A href=v8doc:%1>%2</A>",
						ПолучитьНавигационнуюСсылку(СтрокаИсполнитель.ВизаСогласования),
						РаботаС_HTML.ЗаменитьСпецСимволыHTML(ТекстПодписи));
				
				Иначе
					ДобавитьПодписьСЦветом(HTMLТекст, ТекстПодписи, "#006699");
				КонецЕсли;
				
				HTMLТекст = HTMLТекст + "</td>";
				HTMLТекст = HTMLТекст + "</tr>";
				
				HTMLТекст = HTMLТекст + "<tr>";
				HTMLТекст = HTMLТекст + "<td style =""border-top:0px"" colspan=""2"" align=left bordercolor = ""black"" >";
				
				Если ВерсииИзменились Тогда
					
					ДобавитьПодписьСЦветом(HTMLТекст, РаботаСВизамиСогласования.ТекстЗамечанияОбИзмененииВерсии(), 
						"#FF0000");
					
				Иначе
					
					HTMLТекст = HTMLТекст + "<br/>";
					
				КонецЕсли;
				
				HTMLТекст = HTMLТекст + "</td>";
				HTMLТекст = HTMLТекст + "</tr>";
				
			Иначе
					
				HTMLТекст = HTMLТекст + "<tr>";
				
				ДобавитьЯчейкуТаблицы(HTMLТекст, ФИОДолжность, "30%", "left");
				ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаИсполнитель.РезультатСогласования, "20%");
				ДобавитьЯчейкуТаблицы(HTMLТекст, 
					Формат(СтрокаИсполнитель.ДатаИсполнения, "ДФ='dd.MM.yyyy ЧЧ:мм'"), "20%", "left");
				ДобавитьЯчейкуТаблицы(HTMLТекст, РезультатВыполнения, "30%", "left");
								
				HTMLТекст = HTMLТекст + "</tr>";
				
			КонецЕсли;
		КонецЦикла;
		
		HTMLТекст = HTMLТекст + "</table>";
		HTMLТекст = HTMLТекст + "</tr>";
		
		// Выведем протокол разногласий, если есть разногласия
		Если Разногласия.Количество() > 0 Тогда
			HTMLТекст = HTMLТекст + "<p>";
			HTMLТекст = HTMLТекст + "<p>";

			HTMLТекст = HTMLТекст + "<tr>";
			HTMLТекст = HTMLТекст + "<table border=""0"" bordercolor = ""white"" style=""border-collapse: collapse;"" >";
			
			HTMLТекст = HTMLТекст + "<tr>";
		    HTMLТекст = HTMLТекст + "<td align=center colspan=""6"">";
			
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<B>%1</B>",
				НСтр("ru = 'Протокол разногласий'"));
			
			HTMLТекст = HTMLТекст + "<p>";
			HTMLТекст = HTMLТекст + "</td>";
			HTMLТекст = HTMLТекст + "</tr>";
			HTMLТекст = HTMLТекст + "</table>";
			HTMLТекст = HTMLТекст + "</tr>";
			
			HTMLТекст = HTMLТекст + "<tr>";
			HTMLТекст = HTMLТекст + "<table border=""1"" bordercolor = ""black"" style=""border-collapse: collapse;"" >";
			
			HTMLТекст = HTMLТекст + "<tr>";

			ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = '№'"), "5%",, "black");
			ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Автор'"), "25%",, "black");
			ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Замечание'"), "20%",, "black");
			ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Комментарий инициатора'"), "20%",, "black");
			ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Принятая редакция'"), "20%",, "black");
			ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Дата'"), "10%",, "black");
			
			HTMLТекст = HTMLТекст + "</tr>";
			
			Номер = 1;
			
			ИДУчастникаИРолиСоответствие = Новый Соответствие;
			Для Каждого СтрокаИсполнитель Из ВсеВизыСогласования Цикл  
				ИДУчастникаИРолиСоответствие[СтрокаИсполнитель.ИдентификаторУчастника]= СтрокаИсполнитель.РольИсполнителя;
			КонецЦикла;
			
			Для Каждого СтрокаРазногласия Из Разногласия Цикл
				HTMLТекст = HTMLТекст + "<tr>";
				
				ДобавитьЯчейкуТаблицы(HTMLТекст, Номер, "5%");
				
				РольИсполнителя = ИДУчастникаИРолиСоответствие[СтрокаРазногласия.ИдентификаторАвтора];
				Если ЗначениеЗаполнено(РольИсполнителя) Тогда
					АвторСРольюПредставление = СтрШаблон("%1 (%2)",
						СтрокаИсполнитель.Автор,
						РольИсполнителя);
					ДобавитьЯчейкуТаблицы(HTMLТекст, АвторСРольюПредставление, "25%", "Left");
				Иначе
					ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаРазногласия.Автор, "25%", "Left");
				КонецЕсли;
				
				ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаРазногласия.Замечание, "20%", "Left");
				ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаРазногласия.Комментарий, "20%", "Left");
				ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаРазногласия.ПринятаяРедакция, "20%", "Left");
				ДобавитьЯчейкуТаблицы(HTMLТекст, Формат(СтрокаРазногласия.Дата, "ДФ=dd.MM.yyyy;"), "10%");
				
				HTMLТекст = HTMLТекст + "</tr>";
				
				Номер = Номер + 1;
			КонецЦикла;

			HTMLТекст = HTMLТекст + "</table>";
			HTMLТекст = HTMLТекст + "</tr>";
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьОбзорЛистаУтвержденияДокумента(HTMLТекст, Документ, ВсеДействия)
	
	ВсеВизыУтверждения = ПодписантыИлиУтвердившиеДокументСРезультатамиДляОбзора(Документ, ВсеДействия, Истина);
	
	Если ВсеВизыУтверждения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + "<p>";
	
	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<table border=""0"" bordercolor = ""white"" style=""border-collapse: collapse;"" >";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td align=center colspan=""6"">";
	
	HTMLТекст = HTMLТекст + СтрШаблон(
		"<B>%1</B>",
		НСтр("ru = 'Лист утверждения'"));
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	HTMLТекст = HTMLТекст + "</table>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<table border=""1"" bordercolor = ""black"" style=""border-collapse: collapse;"" >";
	HTMLТекст = HTMLТекст + "<tr>";
	
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'ФИО, Должность'"), "30%",, "black");
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Результат'"), "20%",, "black");
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Дата'"), "20%",, "black");
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Комментарий'"), "30%",, "black");
	
	HTMLТекст = HTMLТекст + "</tr>";

	Для Каждого СтрокаИсполнитель Из ВсеВизыУтверждения Цикл

		ТекстПодписи = "";	ФИОДолжность = ""; РезультатВыполнения = "";		
		ПредставленияПравок = Новый Массив;
		Если ЗначениеЗаполнено(СтрокаИсполнитель.Результат) Тогда
			
			ТекстПодписанта = СтрокаИсполнитель.ПредставлениеФактическогоИсполнителя;
			
			Если Не ЗначениеЗаполнено(СтрокаИсполнитель.ПравилоЭскалации) Тогда
				ТекстПодписи = ДействияСервер.ТекстШтампаПЭППоСтрокеИсполнителя(СтрокаИсполнитель);
			Иначе
				СтрокаИсполнитель.Комментарий = НСТр("ru = 'Подписано автоматически'"); 
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаИсполнитель.Комментарий) Тогда 
			ПредставленияПравок.Добавить(СтрокаИсполнитель.Комментарий);	
		КонецЕсли;		
		
		Если ПредставленияПравок.Количество() > 0 Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПредставленияПравок, "");
			РезультатВыполнения = СтрСоединить(ПредставленияПравок, Символы.ПС);
		КонецЕсли;
		
		ФИОДолжность = СтрокаИсполнитель.ПредставлениеФактическогоИсполнителя;
		Если Не ЗначениеЗаполнено(ФИОДолжность) Тогда
			ФИОДолжность = Строка(СтрокаИсполнитель.Подписант);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаИсполнитель.Результат) И ЗначениеЗаполнено(ТекстПодписи) Тогда
			HTMLТекст = HTMLТекст + "<tr>";

			HTMLТекст = HTMLТекст + "<td width=""30%"" Rowspan = ""2"" align=left bordercolor = ""black"" >";
			ФИОДолжность = СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(ФИОДолжность), Символы.ПС, "<br>");
			ДобавитьРеквизит(HTMLТекст, ФИОДолжность, "");
			HTMLТекст = HTMLТекст + "</td>";
			
			ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаИсполнитель.Результат, "20%");
			ДобавитьЯчейкуТаблицы(HTMLТекст, Формат(СтрокаИсполнитель.ДатаИсполнения, "ДФ='dd.MM.yyyy ЧЧ:мм'"), "20%", "left");
			
			HTMLТекст = HTMLТекст + "<td width=""30%"" Rowspan = ""2"" align=left bordercolor = ""black"" >";
			РезультатВыполнения = СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(РезультатВыполнения), Символы.ПС, "<br>");
			ДобавитьРеквизит(HTMLТекст, РезультатВыполнения, "");
			HTMLТекст = HTMLТекст + "</td>";
			
			HTMLТекст = HTMLТекст + "</tr>";
			
			// Строка с подписью
			HTMLТекст = HTMLТекст + "<tr>";
			HTMLТекст = HTMLТекст + "<td colspan=""2"" align=left bordercolor = ""black"" >";
			ДобавитьПодписьСЦветом(HTMLТекст, ТекстПодписи, "#006699");
			
			HTMLТекст = HTMLТекст + "</td>";
			HTMLТекст = HTMLТекст + "</tr>";
			
		Иначе
				
			HTMLТекст = HTMLТекст + "<tr>";
			
			ДобавитьЯчейкуТаблицы(HTMLТекст, ФИОДолжность, "30%", "left");
			ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаИсполнитель.Результат, "20%");
			ДобавитьЯчейкуТаблицы(HTMLТекст, 
				Формат(СтрокаИсполнитель.ДатаИсполнения, "ДФ='dd.MM.yyyy ЧЧ:мм'"), "20%", "left");
			ДобавитьЯчейкуТаблицы(HTMLТекст, РезультатВыполнения, "30%", "left");
							
			HTMLТекст = HTMLТекст + "</tr>";
			
		КонецЕсли;
	КонецЦикла;
	
	HTMLТекст = HTMLТекст + "</table>";
	HTMLТекст = HTMLТекст + "</tr>";
	
КонецПроцедуры

Процедура ДобавитьОбзорЛистаПодписанияДокумента(HTMLТекст, Документ, ВсеДействия)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВсеВизыПодписания = ПодписантыИлиУтвердившиеДокументСРезультатамиДляОбзора(Документ, ВсеДействия);
	
	Если ВсеВизыПодписания.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + "<p>";

	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<table border=""0"" bordercolor = ""white"" style=""border-collapse: collapse;"" >";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td align=center colspan=""6"">";
	
	HTMLТекст = HTMLТекст + СтрШаблон(
		"<B>%1</B>",
		НСтр("ru = 'Лист подписания'"));
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	HTMLТекст = HTMLТекст + "</table>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<table border=""1"" bordercolor = ""black"" style=""border-collapse: collapse;"" >";
	HTMLТекст = HTMLТекст + "<tr>";
	
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'ФИО, Должность'"), "30%",, "black");
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Результат'"), "20%",, "black");
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Дата'"), "20%",, "black");
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Комментарий'"), "30%",, "black");
	
	HTMLТекст = HTMLТекст + "</tr>";

	Для Каждого СтрокаИсполнитель Из ВсеВизыПодписания Цикл

		ТекстПодписи = "";	ФИОДолжность = ""; РезультатВыполнения = "";		
		ПредставленияПравок = Новый Массив;
		ПодписыватьУЭП = Ложь;	
		Если ЗначениеЗаполнено(СтрокаИсполнитель.Результат) Тогда
			
			СпособПодписания = Перечисления.СпособыПодписанияПредметаДействия.НаБумаге;
			Если ТипЗнч(СтрокаИсполнитель.Действие) = Тип("СправочникСсылка.ДействияПодписания") Тогда
				
				СпособПодписания = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
					СтрокаИсполнитель.Действие, "СпособПодписания");	
			КонецЕсли;	
			
			Если СпособПодписания = Перечисления.СпособыПодписанияПредметаДействия.НаБумаге Тогда
				
				ТекстПодписи = НСтр("ru='На бумаге'");
				
			ИначеЕсли СпособПодписания = Перечисления.СпособыПодписанияПредметаДействия.УЭП
				И СтрокаИсполнитель.Результат <> Перечисления.СостоянияДокументов.Отклонен Тогда
				
				УстановилПодпись = Неопределено;
				Если ТипЗнч(СтрокаИсполнитель.Подписант) = Тип("СправочникСсылка.ФактическиеИсполнители") Тогда
					УстановилПодпись = Сотрудники.ПользовательСотрудника(
						ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаИсполнитель.Подписант, "Отметил"));
				Иначе
					УстановилПодпись = Сотрудники.ПользовательСотрудника(СтрокаИсполнитель.Подписант);
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(СтрокаИсполнитель.ПравилоЭскалации) Тогда
					ПодписыватьУЭП = Истина;
					ТекстПодписи = РаботаСЭП.ТекстПодписиУЭПДляВывода(Документ, УстановилПодпись);
				Иначе
					СтрокаИсполнитель.Комментарий = НСТр("ru = 'Подписано автоматически'"); 
				КонецЕсли;
				
			Иначе
				
				ТекстПодписанта = СтрокаИсполнитель.ПредставлениеФактическогоИсполнителя;
				
				Если Не ЗначениеЗаполнено(СтрокаИсполнитель.ПравилоЭскалации) Тогда
					
					ТекстПодписи = НСтр("ru = 'ПРОСТАЯ ЭЛЕКТРОННАЯ ПОДПИСЬ'")
						+ Символы.ПС 
						+ ТекстПодписанта;
					
				Иначе
					
					СтрокаИсполнитель.Комментарий = НСТр("ru = 'Подписано автоматически'");
					
				КонецЕсли;
				 
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаИсполнитель.Комментарий) Тогда 
			ПредставленияПравок.Добавить(СтрокаИсполнитель.Комментарий);
		КонецЕсли;
		
		Если ПредставленияПравок.Количество() > 0 Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПредставленияПравок, "");
			РезультатВыполнения = СтрСоединить(ПредставленияПравок, Символы.ПС);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаИсполнитель.Подписант) Тогда
			
			ФИОДолжность = ""; 
			Если ЗначениеЗаполнено(СтрокаИсполнитель.ПредставлениеФактическогоИсполнителя) Тогда
				// Подписание завершено
				ФИОДолжность = СтрокаИсполнитель.ПредставлениеФактическогоИсполнителя;
			Иначе
				// Подписание не завершено
				ФИОДолжность = Строка(СтрокаИсполнитель.Подписант);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаИсполнитель.РольИсполнителя) Тогда
				
				ФИОДолжность = СтрШаблон("%1 (%2)",
					СтрокаИсполнитель.ПредставлениеФактическогоИсполнителя,
					СтрокаИсполнитель.РольИсполнителя);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаИсполнитель.Результат) И ЗначениеЗаполнено(ТекстПодписи) Тогда
			HTMLТекст = HTMLТекст + "<tr>";
			
			HTMLТекст = HTMLТекст + "<td width=""30%"" Rowspan = ""2"" align=left bordercolor = ""black"" >";
			ФИОДолжность = СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(ФИОДолжность), Символы.ПС, "<br>");
			ДобавитьРеквизит(HTMLТекст, ФИОДолжность, "");
			HTMLТекст = HTMLТекст + "</td>";
			
			ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаИсполнитель.Результат, "20%");
			ДобавитьЯчейкуТаблицы(HTMLТекст, Формат(СтрокаИсполнитель.ДатаИсполнения, "ДФ='dd.MM.yyyy ЧЧ:мм'"), "20%", "left");
			
			HTMLТекст = HTMLТекст + "<td width=""30%"" Rowspan = ""2"" align=left bordercolor = ""black"" >";
			РезультатВыполнения = СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(РезультатВыполнения), Символы.ПС, "<br>");
			ДобавитьРеквизит(HTMLТекст, РезультатВыполнения, "");
			HTMLТекст = HTMLТекст + "</td>";
			
			HTMLТекст = HTMLТекст + "</tr>";
			
			// Строка с подписью
			HTMLТекст = HTMLТекст + "<tr>";
			HTMLТекст = HTMLТекст + "<td colspan=""2"" align=left bordercolor = ""black"" >";
			
			Если ПодписыватьУЭП Тогда
				HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A>",
				"DigitalSignature",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(ТекстПодписи));
			Иначе
				ДобавитьПодписьСЦветом(HTMLТекст, ТекстПодписи, "#006699");
			КонецЕсли;
			
			HTMLТекст = HTMLТекст + "</td>";
			HTMLТекст = HTMLТекст + "</tr>";
			
		Иначе
				
			HTMLТекст = HTMLТекст + "<tr>";
			
			ДобавитьЯчейкуТаблицы(HTMLТекст, ФИОДолжность, "30%", "left");
			ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаИсполнитель.Результат, "20%");
			ДобавитьЯчейкуТаблицы(HTMLТекст, 
				Формат(СтрокаИсполнитель.ДатаИсполнения, "ДФ='dd.MM.yyyy ЧЧ:мм'"), "20%", "left");
			ДобавитьЯчейкуТаблицы(HTMLТекст, РезультатВыполнения, "30%", "left");
							
			HTMLТекст = HTMLТекст + "</tr>";
			
		КонецЕсли;
	КонецЦикла;
	
	HTMLТекст = HTMLТекст + "</table>";
	HTMLТекст = HTMLТекст + "</tr>";
	
КонецПроцедуры

Процедура ДобавитьОбзорРезолюцийДокумента(HTMLТекст, Документ)  
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРезолюцииВДокументах") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ВсеРезолюции = РаботаСРезолюциями.ПолучитьРезолюции(Документ,, Истина);
	
	Если ВсеРезолюции.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + "<p>";

	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<table border=""0"" bordercolor = ""white"" style=""border-collapse: collapse;"" >";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td align=center colspan=""6"">";
	
	HTMLТекст = HTMLТекст + СтрШаблон(
		"<B>%1</B>",
		НСтр("ru = 'Резолюции'"));
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	HTMLТекст = HTMLТекст + "</table>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<table border=""1"" bordercolor = ""black"" style=""border-collapse: collapse;"" >";
	HTMLТекст = HTMLТекст + "<tr>";
	
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'ФИО, Должность'"), "30%",, "black");
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Дата'"), "20%",, "black");
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Резолюция'"), "50%",, "black");
	
	HTMLТекст = HTMLТекст + "</tr>";

	Для Каждого СтрокаИсполнитель Из ВсеРезолюции Цикл

		ТекстПодписи = "";	ФИОДолжность = "";
		Если СтрокаИсполнитель.Подписана Тогда
			ТекстПодписи = РаботаСЭП.ТекстПодписиУЭПДляВывода(СтрокаИсполнитель.Ссылка);
		КонецЕсли;
			
		Если ЗначениеЗаполнено(СтрокаИсполнитель.ФактическийАвтор) Тогда
			ФИОДолжность = СтрокаИсполнитель.ПредставлениеФактическогоИсполнителя;
		Иначе
			ФИОДолжность = СтрокаИсполнитель.АвторРезолюции;
		КонецЕсли;	
		
		Если СтрокаИсполнитель.Подписана И ЗначениеЗаполнено(ТекстПодписи) Тогда
			HTMLТекст = HTMLТекст + "<tr>";

			HTMLТекст = HTMLТекст + "<td width=""30%"" Rowspan = ""2"" align=left bordercolor = ""black"" >";
			ФИОДолжность = СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(ФИОДолжность), Символы.ПС, "<br>");
			ДобавитьРеквизит(HTMLТекст, ФИОДолжность, "");
			HTMLТекст = HTMLТекст + "</td>";
			
			HTMLТекст = HTMLТекст + "<td width=""20%"" Rowspan = ""2"" align=left bordercolor = ""black"" >";
			ДобавитьРеквизит(HTMLТекст, Формат(СтрокаИсполнитель.ДатаРезолюции, "ДФ='dd.MM.yyyy ЧЧ:мм'"), "");
			HTMLТекст = HTMLТекст + "</td>";
			
			ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаИсполнитель.ТекстРезолюции, "50%", "left");
			
			HTMLТекст = HTMLТекст + "</tr>";
			
			// Строка с подписью
			HTMLТекст = HTMLТекст + "<tr>";
			
			HTMLТекст = HTMLТекст + "<td align=left bordercolor = ""black"" >";
			
			ТекстПодписиОбработанный = РаботаС_HTML.ЗаменитьСпецСимволыHTML(ТекстПодписи);
			ТекстПодписиОбработанный = СтрЗаменить(ТекстПодписиОбработанный, Символы.ПС, "<br>");
				
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A>",
				ПолучитьНавигационнуюСсылку(СтрокаИсполнитель.Ссылка),
				ТекстПодписиОбработанный);
						
			HTMLТекст = HTMLТекст + "</td>";
			
			HTMLТекст = HTMLТекст + "</tr>";
			
		Иначе
				
			HTMLТекст = HTMLТекст + "<tr>";
			
			ДобавитьЯчейкуТаблицы(HTMLТекст, ФИОДолжность, "30%", "left");
			ДобавитьЯчейкуТаблицы(HTMLТекст, 
				Формат(СтрокаИсполнитель.ДатаРезолюции, "ДФ='dd.MM.yyyy ЧЧ:мм'"), "20%", "left");
			ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаИсполнитель.ТекстРезолюции, "50%", "left");
							
			HTMLТекст = HTMLТекст + "</tr>";
			
		КонецЕсли;
						
		HTMLТекст = HTMLТекст + "</tr>";
			
	КонецЦикла;
	
	HTMLТекст = HTMLТекст + "</table>";
	HTMLТекст = HTMLТекст + "</tr>";
	
КонецПроцедуры

Процедура ДобавитьЯчейкуТаблицы(HTMLТекст, Знач Значение, Ширина, Выравнивание = "center", ЦветТекста = "")
	
	HTMLТекст = HTMLТекст + "<td width=" + Ширина + " align=" + Выравнивание + " bordercolor = ""black"" >";
	
	Если ЗначениеЗаполнено(ЦветТекста) Тогда
		ДобавитьПодписьСЦветом(HTMLТекст, Значение, ЦветТекста);
	Иначе
		
		Значение = СокрЛП(Значение);
		Значение = СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Значение), Символы.ПС, "<br>");
		ДобавитьРеквизит(HTMLТекст, Значение, "");
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td>";
	
КонецПроцедуры

Функция ПодписантыИлиУтвердившиеДокументСРезультатамиДляОбзора(Документ, ВсеДействия, РежимУтверждение = Ложь)
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Подписант");
	Результат.Колонки.Добавить("РольИсполнителя");
	Результат.Колонки.Добавить("Результат");
	Результат.Колонки.Добавить("Комментарий",  Новый ОписаниеТипов("Строка"));
	Если РежимУтверждение Тогда
		Результат.Колонки.Добавить("Действие", Новый ОписаниеТипов("СправочникСсылка.ДействияУтверждения"));
	Иначе
		Результат.Колонки.Добавить("Действие", Новый ОписаниеТипов("СправочникСсылка.ДействияПодписания"));
	КонецЕсли;
	Результат.Колонки.Добавить("ДатаИсполнения", Новый ОписаниеТипов("Дата"));
	Результат.Колонки.Добавить("ПравилоЭскалации");
	Результат.Колонки.Добавить("ПредставлениеФактическогоИсполнителя", Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("ПредставлениеСотрудникаДляПЭП", Новый ОписаниеТипов("Строка"));
	
	// Среди всех действий выберем действия Подписания/Утверждения
	ДействияОбработки = Новый Массив;
	Для Каждого СтрокаДействия Из ВсеДействия Цикл
		Если РежимУтверждение 
			И ДействияКлиентСервер.ЭтоДействиеУтверждения(СтрокаДействия.Действие) Тогда
			ДействияОбработки.Добавить(СтрокаДействия.Действие);
			
		ИначеЕсли Не РежимУтверждение 
			И ДействияКлиентСервер.ЭтоДействиеПодписания(СтрокаДействия.Действие) Тогда
			ДействияОбработки.Добавить(СтрокаДействия.Действие);
		КонецЕсли;
	
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Истина);
	ЗадачиУчастниковДействий = РаботаСПроцессамиПоДействиям.ЗадачиУчастниковДействий(ДействияОбработки);
	
	Для Каждого Действие Из ДействияОбработки Цикл
		
		СостояниеДействия = РегистрыСведений.СостоянияДействий.СостояниеДействия(Действие);
		Если Не ЗначениеЗаполнено(СостояниеДействия)
			Или СостояниеДействия = Перечисления.СостоянияВыполненияДействий.Пропущено Тогда
			Продолжить;
		КонецЕсли;
		
		// Получить подписантов/Утвердивших и проверить кто из них подписал
		Участники = ДействияСервер.УчастникиДействия(Действие);
		СведенияОбУчастниках =
			РегистрыСведений.СведенияОбУчастникахДействий.ПолучитьСведенияОбУчастникахДействия(Действие);
		ЗадачиУчастниковДействия = ЗадачиУчастниковДействий.Получить(Действие);
		Для Каждого Участник Из Участники Цикл
			Если Участник.Функция = Перечисления.ФункцииУчастниковПодписания.Подписывающий
				Или Участник.Функция = Перечисления.ФункцииУчастниковУтверждения.Утверждающий Тогда

				РезультатДействия = РегистрыСведений.РезультатыДействий.РезультатУчастникаДействия(
					Действие, Участник.Идентификатор);

				ПравилоЭскалации = РегистрыСведений.ЭскалированныеДействия.ПолучитьСведения(
					Действие, Участник.Идентификатор);
				
				СтрокаУчастника = Результат.Добавить();
				СтрокаУчастника.Действие = Действие;
				СтрокаУчастника.Подписант = Участник.Участник;
				СтрокаУчастника.ПравилоЭскалации = ПравилоЭскалации;
				
				Если РезультатДействия <> Неопределено
					И ЗначениеЗаполнено(РезультатДействия.Результат) Тогда
					
					СведенияОбУчастнике = СведенияОбУчастниках[Участник.Идентификатор];
					ФактическийИсполнитель = СведенияОбУчастнике.ФактическийИсполнитель;
					Если ЗначениеЗаполнено(ФактическийИсполнитель) Тогда
						СтрокаУчастника.Подписант = ФактическийИсполнитель;
						Если РаботаСЗадачамиКлиентСервер.ЭтоПолнаяРоль(Участник.Участник) Тогда
							СтрокаУчастника.РольИсполнителя = Участник.Участник.Владелец;
						КонецЕсли;
					КонецЕсли;
					
					ПредставлениеФактИсполнителя = СведенияОбУчастнике.ПредставлениеФактическогоИсполнителя;
					
					СтрокаУчастника.ПредставлениеФактическогоИсполнителя = ПредставлениеФактИсполнителя;
					СтрокаУчастника.ПредставлениеСотрудникаДляПЭП = СведенияОбУчастнике.ПредставлениеСотрудникаДляПЭП;
					
					Если РезультатДействия.Результат = Перечисления.РезультатыПодписания.НеПодписано Тогда
						РезультатДействияИтог = Перечисления.СостоянияДокументов.Отклонен;
					Иначе
						РезультатДействияИтог = РезультатДействия.Результат;
					КонецЕсли;
					СтрокаУчастника.Результат = РезультатДействияИтог;
					СтрокаУчастника.ДатаИсполнения = РезультатДействия.Дата;
					
					Если ЗадачиУчастниковДействия <> Неопределено Тогда
						ДействиеУчастника = ЗадачиУчастниковДействия.Получить(Участник.Идентификатор);
						Если ДействиеУчастника <> Неопределено Тогда
							СтрокаУчастника.Комментарий = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
								ДействиеУчастника, "РезультатДействияТекстом");
						КонецЕсли;
					КонецЕсли;
					Если ДействияСервер.ДействиеВыполненоВнеПрограммы(Действие) Тогда
						Если ЗначениеЗаполнено(СтрокаУчастника.Комментарий) Тогда
							СтрокаУчастника.Комментарий = СтрокаУчастника.Комментарий
								+ Символы.ПС + ДействияКлиентСервер.КомментарийОВыполненииВнеПрограммы();
						Иначе
							СтрокаУчастника.Комментарий = 
								РегистрыСведений.РезультатыДействий.РезультатУчастникаДействия(
									Действие, Участник.Идентификатор).РезультатТекстом;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ДобавитьОбзорДополнительныхРеквизитов(HTMLТекст, Объект, Форма)
	
	Если Форма = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Форма.Свойства_ИспользоватьСвойства Тогда
		
		ОписаниеЗависимыхДополнительныхРеквизитов = Форма.Свойства_ОписаниеЗависимыхДополнительныхРеквизитов;
		СтруктураОтбора = Новый Структура("ИмяРеквизитаЗначение");
		ОписаниеТипаБулево = Новый ОписаниеТипов("Булево");
		
		Для Каждого ОписаниеРеквизита Из Форма.Свойства_ОписаниеДополнительныхРеквизитов Цикл
			
			Видимость = Истина;
			Если ОписаниеЗависимыхДополнительныхРеквизитов <> Неопределено Тогда
				СтруктураОтбора.ИмяРеквизитаЗначение = ОписаниеРеквизита.ИмяРеквизитаЗначение;
				ОписаниеЗависимогоРеквизита = ОписаниеЗависимыхДополнительныхРеквизитов.НайтиСтроки(СтруктураОтбора);
				Если ОписаниеЗависимогоРеквизита.Количество()
						И ОписаниеЗависимогоРеквизита[0].УсловиеВидимости <> Неопределено Тогда
					Попытка
						Видимость = УправлениеСвойствами.РезультатВычисленияУсловияДокументооборот(
							Форма,
							Объект,
							ОписаниеЗависимогоРеквизита[0].УсловиеВидимости);
					Исключение
						ЗаписьЖурналаРегистрации(
							ОбзорОбъектов.СобытиеЖурналаРегистрации(),
							УровеньЖурналаРегистрации.Ошибка,,,
							ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
						Видимость = Ложь;
					КонецПопытки;
				КонецЕсли;
			КонецЕсли;
			
			Если Форма[ОписаниеРеквизита.ИмяРеквизитаЗначение] = Неопределено
				И ОписаниеРеквизита.Свойство.ТипЗначения = ОписаниеТипаБулево Тогда
				Значение = Ложь;
			Иначе
				Значение = Форма[ОписаниеРеквизита.ИмяРеквизитаЗначение];
			КонецЕсли;
			
			Если Не ОписаниеРеквизита.Удалено И Видимость И ЗначениеЗаполнено(Значение) Тогда
				ДобавитьДопРеквизит(HTMLТекст, Значение, ОписаниеРеквизита);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьНадписьОСроке(HTMLТекст, Объект, РеквизитыВида, ДатаНачалаОтсчета, НаименованиеПоля)
	
	// Срок исполнения.
	СрокИсполнения = Объект.СрокИсполнения;
	Если Не РеквизитыВида.ИспользоватьСрокИсполнения Или Не ЗначениеЗаполнено(СрокИсполнения) Тогда 
		Возврат;
	КонецЕсли;
	
	Состояние = Делопроизводство.ПолучитьСостояниеДокумента(Объект.Ссылка, "СостояниеИсполнение");
	КэшДокументыПредприятияФормаЭлемента =
		КэшиНаВремяВызоваПовтИсп.КэшДокументыПредприятияФормаЭлемента();
	Если КэшДокументыПредприятияФормаЭлемента.Инициализирован
		И КэшДокументыПредприятияФормаЭлемента.КэшДокумента.Ссылка = Объект.Ссылка Тогда
		Шаблон = КэшДокументыПредприятияФормаЭлемента.КэшДокумента.Шаблон;
	Иначе
		Шаблон = ОбщегоНазначенияДокументооборот.ЗначениеРеквизитаОбъектаВПривилегированномРежиме(Объект.Ссылка,
			"Шаблон");
	КонецЕсли;
	РеквизитыШаблона = ОбщегоНазначенияДокументооборот.ЗначенияРеквизитовОбъектаВПривилегированномРежиме(Шаблон,
		"ДлительностьИсполнения, СрокИсполненияУказанВРабочихДнях");  
	
	ИспользоватьГрафикиРаботы = ПолучитьФункциональнуюОпцию("ИспользоватьГрафикиРаботы");
	
	ПодписьРабочихДней = "";
	Если ((ЗначениеЗаполнено(РеквизитыШаблона.ДлительностьИсполнения)
		И РеквизитыШаблона.СрокИсполненияУказанВРабочихДнях)
		Или (Не ЗначениеЗаполнено(РеквизитыШаблона.ДлительностьИсполнения)
		И РеквизитыВида.СрокИсполненияУказанВРабочихДнях))
		И ИспользоватьГрафикиРаботы Тогда
		
		ОсновнойКалендарь = ГрафикиРаботы.ПолучитьОсновнойГрафикРаботы().Календарь;
		КоличествоРабочихДней = КалендарныеГрафики.ПолучитьРазностьДатПоКалендарю(ОсновнойКалендарь,
			ДатаНачалаОтсчета, СрокИсполнения);
			
		ПодписьРабочихДней = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
			НСтр("ru = ';%1 рабочий день;;%1 рабочих дня;%1 рабочих дней;%1 рабочих дней'"),
			КоличествоРабочихДней);
			
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПодписьРабочихДней) Тогда
		Если СрокИсполнения < НачалоДня(ТекущаяДатаСеанса()) И Состояние <> Перечисления.СостоянияДокументов.Исполнен Тогда 
			ДобавитьРеквизит(HTMLТекст, 
				НаименованиеПоля,
				СтрШаблон("%1 (%2)", Формат(СрокИсполнения, "ДЛФ=D"), ПодписьРабочихДней),
				"B22222");
		Иначе
			ДобавитьРеквизит(HTMLТекст,
				НаименованиеПоля,
				СтрШаблон("%1 (%2)", Формат(СрокИсполнения, "ДЛФ=D"), ПодписьРабочихДней));
		КонецЕсли;
	Иначе
		ДобавитьРеквизит(HTMLТекст,
			НаименованиеПоля,
			Формат(СрокИсполнения, "ДЛФ=D"));
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиНадписьОСроке(ТабличныйДокумент, РеквизитыДокумента, ДатаНачалаОтсчета, ОбластьРеквизит, НаименованиеПоля)
	
	// Срок исполнения.
	Если Не РеквизитыДокумента.ИспользоватьСрокИсполнения Или Не ЗначениеЗаполнено(РеквизитыДокумента.СрокИсполнения) Тогда 
		Возврат;
	КонецЕсли;
	
	Шаблон = ОбщегоНазначенияДокументооборот.ЗначениеРеквизитаОбъектаВПривилегированномРежиме(
		РеквизитыДокумента.Ссылка, "Шаблон");
	РеквизитыШаблона = ОбщегоНазначенияДокументооборот.ЗначенияРеквизитовОбъектаВПривилегированномРежиме(Шаблон,
		"ДлительностьИсполнения, СрокИсполненияУказанВРабочихДнях");
	ПодписьРабочихДней = "";
	Если ЗначениеЗаполнено(РеквизитыШаблона.ДлительностьИсполнения)
		И РеквизитыШаблона.СрокИсполненияУказанВРабочихДнях
		Или Не ЗначениеЗаполнено(РеквизитыШаблона.ДлительностьИсполнения)
		И РеквизитыДокумента.СрокИсполненияУказанВРабочихДнях Тогда
		
		ОсновнойКалендарь = ГрафикиРаботы.ПолучитьОсновнойГрафикРаботы().Календарь;
		КоличествоРабочихДней = КалендарныеГрафики.ПолучитьРазностьДатПоКалендарю(ОсновнойКалендарь,
			ДатаНачалаОтсчета, РеквизитыДокумента.СрокИсполнения);
		ПодписьРабочихДней = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
			НСтр("ru = ';%1 рабочий день;;%1 рабочих дня;%1 рабочих дней;%1 рабочих дней'"),
			КоличествоРабочихДней);
	КонецЕсли;
	ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
		НаименованиеПоля, Формат(РеквизитыДокумента.СрокИсполнения, "ДЛФ=D") + ПодписьРабочихДней);
	
КонецПроцедуры

#КонецОбласти
