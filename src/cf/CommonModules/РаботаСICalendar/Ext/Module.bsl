////////////////////////////////////////////////////////////////////////////////
// Работа с iCalendar (сервер).
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Формирует текст приглашения в формате iCalendar.
// 
// Параметры:
//  ДанныеПриглашения - Структура - См. УправлениеМероприятиями.ДанныеПриглашения.
//  Метод - Строка.
// 
// Возвращаемое значение:
//  Строка - Текст приглашения.
//
Функция ТекстПриглашения(ДанныеПриглашения, Метод) Экспорт
	
	МассивТекстПриглашения = Новый Массив;
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "BEGIN";
	ДанныеСтрокиICalendar.Значение = "VCALENDAR";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "PRODID";
	ДанныеСтрокиICalendar.Значение =
		СтрШаблон(
			"-//%1//%2//%3//RU",
			Метаданные.Поставщик,
			Метаданные.Синоним,
			Метаданные.Версия);
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "VERSION";
	ДанныеСтрокиICalendar.Значение = "2.0";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "CALSCALE";
	ДанныеСтрокиICalendar.Значение = "GREGORIAN";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "METHOD";
	ДанныеСтрокиICalendar.Значение = Метод;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "BEGIN";
	ДанныеСтрокиICalendar.Значение = "VEVENT";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "DTSTART";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.ДатаНачала;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "DTEND";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.ДатаОкончания;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "DTSTAMP";
	ДанныеСтрокиICalendar.Значение = ТекущаяДатаСеанса();
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "ORGANIZER";
	ДанныеСтрокиICalendar.Параметры["CN"] = ДанныеПриглашения.ОрганизаторEmail;
	ДанныеСтрокиICalendar.Значение = СтрШаблон("mailto:%1", ДанныеПриглашения.ОрганизаторEmail);
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "UID";
	ДанныеСтрокиICalendar.Значение = СтрШаблон("%1@1c.ru", ДанныеПриглашения.УникальныйИдентификатор);
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	Для Каждого ДанныеУчастника Из ДанныеПриглашения.Участники Цикл
		
		ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
		ДанныеСтрокиICalendar.Ключ = "ATTENDEE";
		ДанныеСтрокиICalendar.Параметры["CUTYPE"] = "INDIVIDUAL";
		ДанныеСтрокиICalendar.Параметры["ROLE"] = "REQ-PARTICIPANT";
		ДанныеСтрокиICalendar.Параметры["RSVP"] = "TRUE";
		ДанныеСтрокиICalendar.Параметры["PARTSTAT"] = ДанныеУчастника.Состояние;
		ДанныеСтрокиICalendar.Параметры["CN"] = ДанныеУчастника.Email;
		ДанныеСтрокиICalendar.Значение = СтрШаблон("mailto:%1", ДанныеУчастника.Email);
		ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
		
	КонецЦикла;
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "CREATED";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.ДатаСоздания;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "DESCRIPTION";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.Описание;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "LAST-MODIFIED";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.ДатаИзменения;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "LOCATION";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.МестоПроведения;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "SEQUENCE";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.Серия;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "STATUS";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.Состояние;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "SUMMARY";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.Наименование;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "TRANSP";
	ДанныеСтрокиICalendar.Значение = "OPAQUE";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "END";
	ДанныеСтрокиICalendar.Значение = "VEVENT";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "END";
	ДанныеСтрокиICalendar.Значение = "VCALENDAR";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ТекстПриглашения = СтрСоединить(МассивТекстПриглашения, Символы.ПС);
	ТекстПриглашения = ТекстПриглашения + Символы.ПС;
	
	Возврат ТекстПриглашения;
	
КонецФункции

// Преобразовывает местную дату в формат iCalendar, основанный на ISO 8601.
//
Функция ДатаФорматаICalendar(Дата, ФорматДаты = "УниверсальноеВремя", ТипДаты = "") Экспорт
	
	Результат = "";
	Если ФорматДаты = "ТолькоДата" И ТипДаты = "ДатаНачала" Тогда
		Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("TZID=%1;VALUE=DATE:%2",
			ЧасовойПоясСеанса(),
			Формат(Дата, "ДФ=yyyyMMdd"));
	ИначеЕсли ФорматДаты = "ТолькоДата" И ТипДаты = "ДатаОкончания" Тогда
		Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("TZID=%1;VALUE=DATE:%2",
			ЧасовойПоясСеанса(),
			Формат(Дата + 86400, "ДФ=yyyyMMdd"));
	ИначеЕсли ФорматДаты = "ТолькоДата" Тогда
		Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("TZID=%1;VALUE=DATE:%2",
			ЧасовойПоясСеанса(),
			Формат(Дата, "ДФ=yyyyMMdd"));
	ИначеЕсли ФорматДаты = "ВремяСЧасовымПоясом" Тогда
		Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("TZID=%1:%2",
			ЧасовойПоясСеанса(),
			Формат(Дата, "ДФ=yyyyMMddTHHmmss"));
	ИначеЕсли ФорматДаты = "УниверсальноеВремя" Тогда
		Результат = Формат(УниверсальноеВремя(Дата), "ДФ=yyyyMMddTHHmmssZ");
	Иначе
		Результат = Формат(УниверсальноеВремя(Дата), "ДФ=yyyyMMddTHHmmssZ");
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Кодированное значение.
// 
// Параметры:
//  Значение - Строка, Дата, Число, ПеречислениеСсылка.СостоянияПриглашения, ПеречислениеСсылка.СостоянийМероприятий.
// 
// Возвращаемое значение:
//  Строка - Кодированное значение.
//  
Функция КодированноеЗначение(Значение) Экспорт
	
	Если ТипЗнч(Значение) = Тип("Строка") Тогда
		
		КодированноеЗначение = КодироватьСтрокуВiCalendar(Значение);
		
	ИначеЕсли ТипЗнч(Значение) = Тип("Дата") Тогда
		
		КодированноеЗначение = ДатаФорматаICalendar(Значение);
		
	ИначеЕсли ТипЗнч(Значение) = Тип("Число") Тогда
		
		КодированноеЗначение = Формат(Значение, "ЧН=0; ЧГ=;");
		
	ИначеЕсли ТипЗнч(Значение) = Тип("ПеречислениеСсылка.СостоянияПриглашения") Тогда
		
		Если Значение = Перечисления.СостоянияПриглашения.ПустаяСсылка()
			Или Значение = Перечисления.СостоянияПриглашения.Отправлено Тогда
			
			КодированноеЗначение = "NEEDS-ACTION";
			
		ИначеЕсли Значение = Перечисления.СостоянияПриглашения.Принято Тогда
			
			КодированноеЗначение = "ACCEPTED";
			
		ИначеЕсли Значение = Перечисления.СостоянияПриглашения.НеПринято Тогда
			
			КодированноеЗначение = "DECLINED";
			
		Иначе
			
			ВызватьИсключение СтрШаблон(
				НСтр("ru = 'Неизвестное значение состояния приглашения %1 (%2).'"),
				Значение,
				ТипЗнч(Значение));
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Значение) = Тип("ПеречислениеСсылка.СостоянияМероприятий") Тогда
		
		Если Значение = Перечисления.СостоянияМероприятий.ПустаяСсылка()
			Или Значение = Перечисления.СостоянияМероприятий.МероприятиеВСтадииПодготовки
			Или Значение = Перечисления.СостоянияМероприятий.МероприятиеПроведено Тогда
			
			КодированноеЗначение = "CONFIRMED";
			
		ИначеЕсли Значение = Перечисления.СостоянияМероприятий.МероприятиеОтменено Тогда
			
			КодированноеЗначение = "CANCELLED";
			
		Иначе
			
			ВызватьИсключение СтрШаблон(
				НСтр("ru = 'Неизвестное значение состояния мероприятия %1 (%2).'"),
				Значение,
				ТипЗнч(Значение));
			
		КонецЕсли;
		
	Иначе
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Неизвестный тип значения данных строки iCalendar %1 (%2).'"),
			Значение,
			ТипЗнч(Значение));
			
	КонецЕсли;
	
	Возврат КодированноеЗначение;
	
КонецФункции

// Кодирует текстовую строку в iCalendar, согласно RFC 5545.
Функция КодироватьСтрокуВiCalendar(Строка) Экспорт
	
	СтрокаiCalendar = СтрЗаменить(Строка, "\", "\\");
	СтрокаiCalendar = СтрЗаменить(СтрокаiCalendar, ";", "\;");
	СтрокаiCalendar = СтрЗаменить(СтрокаiCalendar, ",", "\,");
	СтрокаiCalendar = СтрЗаменить(СтрокаiCalendar, Символы.ПС, "\n");
	
	Возврат СтрокаiCalendar;
	
КонецФункции

// Раскодирует текстовую строку формата iCalendar, согласно RFC 5545.
Функция РаскодироватьСтрокуiCalendar(СтрокаiCalendar) Экспорт
	
	Строка = СтрЗаменить(СтрокаiCalendar, "\n", Символы.ПС);
	Строка = СтрЗаменить(Строка, "\N", Символы.ПС);
	Строка = СтрЗаменить(Строка, "\,", ",");
	Строка = СтрЗаменить(Строка, "\;", ";");
	Строка = СтрЗаменить(Строка, "\\", "\");
	
	Возврат Строка;
	
КонецФункции

// Формирует текст приглашения в формате iCalendar.
// 
// Параметры:
//  ДанныеПриглашения - Структура
//  Метод - Строка.
// 
// Возвращаемое значение:
//  Строка - Текст приглашения.
//
Функция ТекстПриглашенияПоICSФайлу(ДанныеПриглашения, Метод) Экспорт
	
	МассивТекстПриглашения = Новый Массив;
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "BEGIN";
	ДанныеСтрокиICalendar.Значение = "VCALENDAR";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "PRODID";
	ДанныеСтрокиICalendar.Значение =
		СтрШаблон(
			"-//%1//%2//%3//RU",
			Метаданные.Поставщик,
			Метаданные.Синоним,
			Метаданные.Версия);
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "VERSION";
	ДанныеСтрокиICalendar.Значение = "2.0";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "CALSCALE";
	ДанныеСтрокиICalendar.Значение = "GREGORIAN";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "METHOD";
	ДанныеСтрокиICalendar.Значение = Метод;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "BEGIN";
	ДанныеСтрокиICalendar.Значение = "VEVENT";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "DTSTART";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.ДатаНачала;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "DTEND";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.ДатаОкончания;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "DTSTAMP";
	ДанныеСтрокиICalendar.Значение = ТекущаяДатаСеанса();
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "ORGANIZER";
	ДанныеСтрокиICalendar.Параметры["CN"] = ДанныеПриглашения.ОрганизаторEmail;
	ДанныеСтрокиICalendar.Значение = СтрШаблон("mailto:%1", ДанныеПриглашения.ОрганизаторEmail);
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "UID";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.УникальныйИдентификатор;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	Для Каждого ДанныеУчастника Из ДанныеПриглашения.Участники Цикл
		
		ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
		ДанныеСтрокиICalendar.Ключ = "ATTENDEE";
		ДанныеСтрокиICalendar.Параметры["CUTYPE"] = "INDIVIDUAL";
		ДанныеСтрокиICalendar.Параметры["ROLE"] = "REQ-PARTICIPANT";
		ДанныеСтрокиICalendar.Параметры["RSVP"] = "TRUE";
		ДанныеСтрокиICalendar.Параметры["PARTSTAT"] = ДанныеУчастника.Состояние;
		ДанныеСтрокиICalendar.Параметры["CN"] = ДанныеУчастника.Email;
		ДанныеСтрокиICalendar.Значение = СтрШаблон("mailto:%1", ДанныеУчастника.Email);
		ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
		
	КонецЦикла;
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "CREATED";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.ДатаСоздания;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "DESCRIPTION";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.Описание;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "LAST-MODIFIED";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.ДатаИзменения;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "LOCATION";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.МестоПроведения;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "SEQUENCE";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.Серия;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "STATUS";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.Состояние;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "SUMMARY";
	ДанныеСтрокиICalendar.Значение = ДанныеПриглашения.Наименование;
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "TRANSP";
	ДанныеСтрокиICalendar.Значение = "OPAQUE";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "END";
	ДанныеСтрокиICalendar.Значение = "VEVENT";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ДанныеСтрокиICalendar = НовыйДанныеСтрокиICalendar();
	ДанныеСтрокиICalendar.Ключ = "END";
	ДанныеСтрокиICalendar.Значение = "VCALENDAR";
	ДобавитьСтроку(МассивТекстПриглашения, ДанныеСтрокиICalendar);
	
	ТекстПриглашения = СтрСоединить(МассивТекстПриглашения, Символы.ПС);
	ТекстПриглашения = ТекстПриглашения + Символы.ПС;
	
	Возврат ТекстПриглашения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует пустую структуру данных строки iCalendar.
// 
// Возвращаемое значение:
//  Структура - Строка iCalendar:
//   * Ключ - Строка. 
//   * Значение - Строка
//   * Параметры - Соответствие.
//
Функция НовыйДанныеСтрокиICalendar()
	
	ДанныеСтрокиICalendar = Новый Структура("Ключ, Значение, Параметры");
	ДанныеСтрокиICalendar.Ключ = "";
	ДанныеСтрокиICalendar.Значение = "";
	ДанныеСтрокиICalendar.Параметры = Новый Соответствие;
	
	Возврат ДанныеСтрокиICalendar;
	
КонецФункции

// Добавляет строку в массив.
// 
// Параметры:
//  МассивICalendar - Массив из Строка.
//  СтрокаICalendar - Структура - См. РаботаСICalendar.ДанныеСтрокиICalendar().
//
Процедура ДобавитьСтроку(МассивICalendar, ДанныеСтрокиICalendar)
	
	КодированноеЗначение = КодированноеЗначение(ДанныеСтрокиICalendar.Значение);
	Если Не ЗначениеЗаполнено(КодированноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрокаICalendar = Новый Массив;
	
	МассивСтрокаICalendar.Добавить(ДанныеСтрокиICalendar.Ключ);
	
	Для Каждого КлючИЗначение Из ДанныеСтрокиICalendar.Параметры Цикл
		
		МассивСтрокаICalendar.Добавить(";");
		МассивСтрокаICalendar.Добавить(КлючИЗначение.Ключ);
		МассивСтрокаICalendar.Добавить("=");
		МассивСтрокаICalendar.Добавить(КодированноеЗначение(КлючИЗначение.Значение));
		
	КонецЦикла;
	
	МассивСтрокаICalendar.Добавить(":");
	
	МассивСтрокаICalendar.Добавить(КодированноеЗначение);
	
	СтрокаICalendar = СтрСоединить(МассивСтрокаICalendar, "");
	
	Если СтрДлина(СтрокаICalendar) > 73 Тогда
		
		ДлинаПервойСтроки = 73;
		ДлинаОстальныхСтрок = 72;
		
		МассивСтрокаICalendar = Новый Массив;
		
		ПерваяСтрока = Лев(СтрокаICalendar, ДлинаПервойСтроки);
		МассивСтрокаICalendar.Добавить(ПерваяСтрока);
		СтрокаICalendar =
			?(СтрДлина(СтрокаICalendar) > ДлинаПервойСтроки,
				Сред(СтрокаICalendar, ДлинаПервойСтроки + 1),
				"");
		
		Пока ЗначениеЗаполнено(СтрокаICalendar) Цикл
			
			ОчереднаяСтрока = Лев(СтрокаICalendar, ДлинаОстальныхСтрок);
			СтрокаICalendar =
				?(СтрДлина(СтрокаICalendar) > ДлинаОстальныхСтрок,
					Сред(СтрокаICalendar, ДлинаОстальныхСтрок + 1),
					"");
			
			МассивСтрокаICalendar.Добавить(ОчереднаяСтрока);
			
		КонецЦикла;
		
		СтрокаICalendar = СтрСоединить(МассивСтрокаICalendar, Символы.ПС + " ");
		
	КонецЕсли;
	
	МассивICalendar.Добавить(СтрокаICalendar);
	
КонецПроцедуры

#КонецОбласти