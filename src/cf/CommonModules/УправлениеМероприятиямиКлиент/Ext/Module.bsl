////////////////////////////////////////////////////////////////////////////////
// Модуль для работы с мероприятиями.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Получает подсказку следующего действия мероприятия.
//
// Параметры:
//  СостояниеМероприятия - ПеречислениеСсылка.СостоянияМероприятий - Состояние мероприятия.
//  СостояниеПрограммы - ПеречислениеСсылка.СостоянияМероприятий - Состояние программы мероприятия.
//  СостояниеПриглашений - ПеречислениеСсылка.СостоянияМероприятий - Состояние отправки приглашений на мероприятие.
//  СостояниеМатериаловВыступающих - ПеречислениеСсылка.СостоянияМероприятий - Состояние материалов мероприятия.
//  СостояниеПротокола - ПеречислениеСсылка.СостоянияМероприятий - Состояние протокола мероприятия.
//  ЗаполненыОсновныеРеквизиты - Булево - Признак заполненности основных реквизитов мероприятия.
//  УчитыватьКакПротокольноеМероприятие - Булево - Признак протокольного мероприятия.
//  Объект - ДанныеФормыСтруктура - Данные формы мероприятия.
//
// Возвращаемое значение:
//  Строка - Подсказка следующего действия.
//
Функция ПолучитьПодсказкуСледующегоДействия(
	СостояниеМероприятия, СостояниеПрограммы, СостояниеПриглашений, СостояниеМатериаловВыступающих,
	СостояниеПротокола, ЗаполненыОсновныеРеквизиты, УчитыватьКакПротокольноеМероприятие, Объект) Экспорт
	
	Если СостояниеМероприятия = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.МероприятиеВСтадииПодготовки")
		Или Не ЗначениеЗаполнено(СостояниеМероприятия) Тогда
		
		Если Объект.ДатаОкончания < ТекущаяДата() И ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда 
			Возврат НСтр("ru = 'Срок проведения мероприятие прошел, и оно не отмечено как проведенное или отмененное.'");
		КонецЕсли;
		
		Если Не ЗаполненыОсновныеРеквизиты Тогда
			Возврат НСтр("ru = 'Заполните основную информацию о мероприятии: тему, время и место проведения, определите состав участников.'");
		КонецЕсли;
		
		Если СостояниеПрограммы = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПрограммаНеУтверждена")
			Или Не ЗначениеЗаполнено(СостояниеПрограммы) Тогда
			Возврат НСтр("ru = 'Подготовьте программу мероприятия и отправьте на утверждение.'");
		ИначеЕсли СостояниеПрограммы = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПрограммаНаУтверждении") Тогда
			Возврат НСтр("ru = 'Программа в процессе утверждения.'");
		ИначеЕсли СостояниеПрограммы <> ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПрограммаУтверждена") Тогда
			Возврат "";
		КонецЕсли;
		
		Если СостояниеПриглашений = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПриглашенияНеПриняты")
			Или Не ЗначениеЗаполнено(СостояниеПриглашений) Тогда
			Возврат НСтр("ru = 'Отправьте приглашения участникам мероприятия.'");
		ИначеЕсли СостояниеПриглашений = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПриглашенияОтправлены") Тогда
			Возврат НСтр("ru = 'Дождитесь ответа на приглашения.'");
		ИначеЕсли СостояниеПриглашений <> ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПриглашенияПриняты") Тогда
			Возврат "";
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СостояниеМатериаловВыступающих) Тогда
			Возврат НСтр("ru = 'Запросите материалы выступлений у участников мероприятия.'");
		ИначеЕсли СостояниеМатериаловВыступающих = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.МатериалыВыступающихЗапрошены") Тогда
			Возврат НСтр("ru = 'Дождитесь материалов выступлений.'");
		ИначеЕсли СостояниеМатериаловВыступающих = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПолученыМатериалыВыступающих") Тогда
			Возврат НСтр("ru = 'Ознакомьте с материалами всех участников мероприятия.'");
		ИначеЕсли СостояниеМатериаловВыступающих = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.МатериалыОтправленыНаОзнакомление") Тогда
			Возврат НСтр("ru = 'Убедитесь, что все участники ознакомлены с материалами выступлений.'");
		ИначеЕсли СостояниеМатериаловВыступающих <> ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.СМатериаламиОзнакомились") Тогда
			Возврат "";
		КонецЕсли;
		
		Возврат НСтр("ru = 'Мероприятие можно проводить. Отметьте, кто из участников отсутствовал на мероприятии, и зафиксируйте принятые решения в отдельном файле.'");
		
	ИначеЕсли СостояниеМероприятия = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.МероприятиеПроведено") Тогда
		
		Если Не УчитыватьКакПротокольноеМероприятие Тогда
			Возврат "";
		КонецЕсли;
		
		Если Объект.ТипПротокола = ПредопределенноеЗначение("Перечисление.ТипыПрограммыПротокола.ВТаблице")
			И Объект.ТипПрограммы = ПредопределенноеЗначение("Перечисление.ТипыПрограммыПротокола.ВТаблице") Тогда 
			
			ЕстьРешениеНеПринято = Ложь;
			Для Каждого Строка Из Объект.Программа Цикл
				
				Решение = "";
				Если Строка.ТребуетПринятияРешения Тогда 
					НайденныеСтроки = Объект.Протокол.НайтиСтроки(Новый Структура("НомерПунктаПрограммы", Строка.НомерПункта));
					Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
						Если ЗначениеЗаполнено(НайденнаяСтрока.Решили) Тогда 
							Решение = НСтр("ru = 'Принято'");
							Прервать;
						КонецЕсли;	
					КонецЦикла;	
					
					Если Решение = "" Тогда 
						ЕстьРешениеНеПринято = Истина;
						Прервать;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ЕстьРешениеНеПринято Тогда 
				Возврат НСтр("ru = 'Не по всем вопросам мероприятия приняты решения.'");
			КонецЕсли;	
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СостояниеПротокола) Тогда
			Возврат НСтр("ru = 'Создайте задание на подготовку протокола мероприятия.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколГотовиться")Тогда
			Возврат НСтр("ru = 'Дождитесь завершения подготовки протокола.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколПодготовлен")
			Или СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколНеСогласован") Тогда
			Возврат НСтр("ru = 'Согласуйте протокол мероприятия с участниками.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколНаСогласовании")Тогда
			Возврат НСтр("ru = 'Дождитесь завершения согласования протокола.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколСогласован")
			Или СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколНеУтвержден") Тогда
			Возврат НСтр("ru = 'Направьте протокол мероприятия на утверждение.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколНаУтверждении")Тогда
			Возврат НСтр("ru = 'Дождитесь утверждения протокола.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколУтвержден")Тогда
			Возврат НСтр("ru = 'Направьте протокол на исполнение.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколНаИсполнении")Тогда
			Возврат НСтр("ru = 'Дождитесь исполнения протокола.'");
		ИначеЕсли СостояниеПротокола <> ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколИсполнен")Тогда
			Возврат "";
		КонецЕсли;
		
		Возврат "";
		
	ИначеЕсли СостояниеМероприятия = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.МероприятиеОтменено") Тогда
		
		Возврат "";
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

// Меняет папку для массива мероприятий на новую.
//
// Параметры:
//  МассивМероприятий - Массив - Мероприятия, у которых необходимо изменить папку.
//  НоваяПапка - СправочникСсылка.ПапкиМероприятий - Новая папка мероприятий.
//
Процедура ИзменитьПапкуМероприятий(МассивМероприятий, НоваяПапка) Экспорт
	
	// Не указана новая папка
	Если Не ЗначениеЗаполнено(НоваяПапка) Тогда
		Возврат;
	КонецЕсли;
	
	// Нет элементов в массиве
	Если МассивМероприятий.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если УправлениеМероприятиямиВызовСервера.ИзменитьПапкуМероприятий(МассивМероприятий, НоваяПапка) Тогда
		
		Если МассивМероприятий.Количество() = 1 Тогда
			
			ПолноеОписание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Мероприятие ""%1"" перенесено в папку ""%2""'"), МассивМероприятий[0], НоваяПапка);
			
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Мероприятие перенесено.'"),
				ПолучитьНавигационнуюСсылку(МассивМероприятий[0]),
				ПолноеОписание,
				БиблиотекаКартинок.Информация32);
			
		Иначе
			
			ПолноеОписание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Мероприятия (%1 шт.) перенесены в папку ""%2""'"), МассивМероприятий.Количество(), НоваяПапка);
			
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Мероприятия перенесены.'"),
				,
				ПолноеОписание,
				БиблиотекаКартинок.Информация32);
			
		КонецЕсли;
		
		ОповеститьОбИзменении(Тип("СправочникСсылка.Мероприятия"));
		
	КонецЕсли;
	
КонецПроцедуры

// Оповещает о записи пункта протокола мероприятия.
//
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия - Мероприятие.
//  ПунктПротокола - СправочникСсылка.ПротоколыМероприятий - Пункт протокола мероприятия.
//
Процедура ОповеститьОЗаписиПунктаПротокола(Мероприятие, ПунктПротокола = Неопределено) Экспорт
	
	ПараметрыОповещения = Новый Структура("Мероприятие, ПунктПротокола", Мероприятие, ПунктПротокола);
	Оповестить("Запись_ПунктПротокола", ПараметрыОповещения);
	
КонецПроцедуры

// Отправляет приглашения на мероприятия.
// 
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия. -
// 
// Возвращаемое значение:
//  Булево - Приглашения отправлены.
//  
Функция ОтправитьПриглашения(Мероприятие) Экспорт
	
	РезультатОтправкиПриглашения =
		УправлениеМероприятиямиВызовСервера.ОтправитьПриглашения(Мероприятие);
	
	Если Не РезультатОтправкиПриглашения.ПриглашенияОтправлены Тогда
		ПоказатьПредупреждение(, РезультатОтправкиПриглашения.ТекстПредупреждения);
		Возврат Ложь;
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Приглашения отправлены'"),
		ПолучитьНавигационнуюСсылку(Мероприятие),
		Строка(Мероприятие),
		БиблиотекаКартинок.Информация32);
	
	Оповестить("ПриглашенияОтправлены", Мероприятие);
	ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(Мероприятие);
	
	Возврат Истина;
	
КонецФункции

// Отменяет мероприятие.
// 
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия.
//
Процедура ОтменитьМероприятие(Мероприятие) Экспорт
	
	ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения(
		"ОтменитьМероприятиеПослеВопроса",
		ЭтотОбъект,
		Мероприятие);
	
	ОбщегоНазначенияДокументооборотКлиент.ПоказатьВопросДаНет(
		ОписаниеОповещенияОЗавершении,
		НСтр("ru = 'При отмене мероприятия оно будет удалено из календарей участников и будет остановлена запущенная обработка, если она активна.
			|Отменить мероприятие?'"));
		
КонецПроцедуры

// Показывает состояние мероприятия.
// 
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия.
// 
Процедура ПоказатьСостояниеМероприятия(Мероприятие) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Мероприятие", Мероприятие);
	ПараметрыФормы.Вставить("ТолькоПросмотр", Истина);
	
	ОткрытьФорму("Справочник.Мероприятия.Форма.СостоянияМероприятия", ПараметрыФормы);
	
КонецПроцедуры

// Показывает пункт программы.
// 
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия.
//  НомерПункта - Число.
// 
Процедура ПоказатьПунктПрограммы(Мероприятие, НомерПункта) Экспорт
	
	Если Не ЗначениеЗаполнено(Мероприятие) Или Не ЗначениеЗаполнено(НомерПункта) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = УправлениеМероприятиямиВызовСервера.ПараметрыФормыВводПунктаПрограммы(
		Мероприятие,
		НомерПункта);
	Если ПараметрыФормы.ПунктНеНайден Тогда
		ПоказатьПредупреждение(, "ru = 'Не найден пункт программы.'");
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Мероприятия.Форма.ВводПунктаПрограммы", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтменитьМероприятиеПослеВопроса(Результат, Мероприятие) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеМероприятиямиВызовСервера.ОтменитьМероприятие(Мероприятие);
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Мероприятие отменено'"),
		ПолучитьНавигационнуюСсылку(Мероприятие),
		Строка(Мероприятие),
		БиблиотекаКартинок.Информация32);
	
	Оповестить("МероприятиеОтменено", Мероприятие);
	ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(Мероприятие);
	
КонецПроцедуры

#КонецОбласти