
#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытийЭлементовШапкиФормы

Процедура ОтправленПриИзменении(Форма, Элемент) Экспорт 
	
	Если Форма.Отправлен Тогда
		Форма.ДатаОтправки = ТекущаяДата();
		Если Не ЗначениеЗаполнено(Форма.СпособОтправки) Тогда
			Форма.СпособОтправки = Форма.СпособОтправкиПоУмолчанию;
		КонецЕсли;
	Иначе
		Форма.ДатаОтправки = Неопределено;
	КонецЕсли;
	
	Форма.Элементы.ДатаОтправки.Доступность = Форма.Отправлен;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Работа с "В ответ на"

Процедура ВОтветНаСтрокаПриИзменении(Форма, Элемент) Экспорт 
	
	Если Не ЗначениеЗаполнено(Форма.ВОтветНаСтрока) Тогда 
		Форма.ПредметПереписки = Неопределено;
		Форма.ВОтветНа = Неопределено; 
		Форма.Модифицированность = Истина;
		Форма.СписокВОтветНа.Очистить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВОтветНаСтрокаНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	Если Форма.НесколькоВОтветНа Тогда
		ПараметрыФормы.Вставить("ТекущаяСтрока", Форма.Элементы.СписокВОтветНа.ТекущиеДанные.Значение);
	Иначе
		ПараметрыФормы.Вставить("ТекущаяСтрока", Форма.ВОтветНа);
	КонецЕсли;
	
	Если Форма.Объект.Контрагенты.Количество() > 0 
		Или ЗначениеЗаполнено(Форма.Объект.Контрагент) Тогда
		
		Контрагенты = Новый Массив;
		Для Каждого СтрКонтрагент Из Форма.Объект.Контрагенты Цикл 
			Если Не ЗначениеЗаполнено(СтрКонтрагент.Контрагент) Тогда 
				Продолжить;
			КонецЕсли;
			
			Контрагенты.Добавить(СтрКонтрагент.Контрагент);
		КонецЦикла;
		
		Если ЗначениеЗаполнено(Форма.Объект.Контрагент) Тогда
			Контрагенты.Добавить(Форма.Объект.Контрагент);
		КонецЕсли;
		
		ПараметрыФормы.Вставить("Контрагенты", Контрагенты);
		
	КонецЕсли;
	
	ВидДокументаКэш = Форма.ВидДокументаКэш;
	Если ВидДокументаКэш.ЯвляетсяВходящейКорреспонденцией Тогда 
		ПараметрыФормы.Вставить("ТолькоИсходящаяКорреспонденция", Истина);
	Иначе 
		ПараметрыФормы.Вставить("ТолькоВходящаяКорреспонденция", Истина);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ОтображатьКонтрагентов", Истина);
	
	ОткрытьФорму("Справочник.ДокументыПредприятия.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

Процедура ВОтветНаСтрокаОчистка(Форма, СтандартнаяОбработка) Экспорт 
	
	Форма.ПредметПереписки = Неопределено;
	Форма.ВОтветНа = Неопределено; 
	Форма.Модифицированность = Истина;
	Форма.СписокВОтветНа.Очистить();

КонецПроцедуры

Процедура ВОтветНаСтрокаОткрытие(Форма, Элемент, СтандартнаяОбработка) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Форма.ВОтветНа) Тогда
		ПоказатьЗначение(, Форма.ВОтветНа);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВОтветНаСтрокаОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт 
	
	Объект = Форма.Объект;
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда 
		Возврат;
	КонецЕсли;
	
	РеквизитыВОтветНа = РаботаСКорреспонденциейВызовСервера.ДанныеВОтветНа(ВыбранноеЗначение);
	Если Форма.ВидДокументаКэш.ЯвляетсяВходящейКорреспонденцией Тогда
		Если ЗначениеЗаполнено(РеквизитыВОтветНа.РегистрационныйНомер) И ЗначениеЗаполнено(РеквизитыВОтветНа.ДатаРегистрации) Тогда
			ПредставлениеВыбранного = СтрШаблон(
				НСтр("ru = '№ %1 от %2'"), РеквизитыВОтветНа.РегистрационныйНомер, Формат(РеквизитыВОтветНа.ДатаРегистрации, "ДЛФ=D"));
		Иначе
			ПредставлениеВыбранного = РеквизитыВОтветНа.Заголовок;
		КонецЕсли;
	Иначе
		// Для Исходящих "В ответ" на формирутеся от номера документа
		Если ЗначениеЗаполнено(РеквизитыВОтветНа.ДатаКонтрагента)
			И ЗначениеЗаполнено(РеквизитыВОтветНа.НомерКонтрагента) Тогда
			ПредставлениеВыбранного = СтрШаблон(НСтр("ru = '№ %1 от %2'"),
				РеквизитыВОтветНа.НомерКонтрагента,
				Формат(РеквизитыВОтветНа.ДатаКонтрагента, "ДФ=dd.MM.yyyy;"));
			
			// Добавим также обычное отображение документа
			Если ЗначениеЗаполнено(РеквизитыВОтветНа.ДатаРегистрации)
				И ЗначениеЗаполнено(РеквизитыВОтветНа.РегистрационныйНомер) Тогда
				ПредставлениеВыбранного = ПредставлениеВыбранного + " " 
					+ СтрШаблон(НСтр("ru = '(№ %1 от %2)'"),
						РеквизитыВОтветНа.РегистрационныйНомер,
						Формат(РеквизитыВОтветНа.ДатаРегистрации, "ДФ=dd.MM.yyyy;"));
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(РеквизитыВОтветНа.ДатаРегистрации)
			И ЗначениеЗаполнено(РеквизитыВОтветНа.РегистрационныйНомер) Тогда
			ПредставлениеВыбранного = СтрШаблон(НСтр("ru = '№ %1 от %2'"),
				РеквизитыВОтветНа.РегистрационныйНомер,
				Формат(РеквизитыВОтветНа.ДатаРегистрации, "ДФ=dd.MM.yyyy;"));
		Иначе
			ПредставлениеВыбранного = РеквизитыВОтветНа.Заголовок;
		КонецЕсли;
	КонецЕсли;
	
	Если Не Форма.НесколькоВОтветНа Тогда
		СтандартнаяОбработка = Ложь;
		Форма.ВОтветНа = ВыбранноеЗначение;
		Форма.СписокВответНа.Очистить();
		Форма.СписокВответНа.Добавить(ВыбранноеЗначение, ПредставлениеВыбранного);
	Иначе
		СтандартнаяОбработка = Ложь;
		Если Форма.СписокВОтветНа.НайтиПоЗначению(ВыбранноеЗначение) <> Неопределено Тогда
			Сообщение = НСтр("ru = 'Документ ""%1"" уже есть в списке оснований.'");
			ПоказатьПредупреждение(, СтрШаблон(Сообщение, ВыбранноеЗначение));
			Возврат;
		КонецЕсли;
		ЭлементСЗ = Форма.СписокВОтветНа.НайтиПоИдентификатору(Форма.Элементы.СписокВОтветНа.ТекущаяСтрока);
		ЭлементСЗ.Значение = ВыбранноеЗначение;
		ЭлементСЗ.Представление = ПредставлениеВыбранного;
	КонецЕсли;
	
	Если Не Форма.НесколькоВОтветНа Или Форма.СписокВОтветНа.Количество() = 1 Тогда
	
		Форма.ВОтветНаСтрока = ПредставлениеВыбранного;
		
		Если Не ЗначениеЗаполнено(Объект.Проект) И ЗначениеЗаполнено(РеквизитыВОтветНа.Проект) Тогда 
			Объект.Проект = РеквизитыВОтветНа.Проект;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.ВопросДеятельности) И ЗначениеЗаполнено(РеквизитыВОтветНа.ВопросДеятельности) Тогда 
			Объект.ВопросДеятельности = РеквизитыВОтветНа.ВопросДеятельности;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
			
			Если ЗначениеЗаполнено(РеквизитыВОтветНа.Контрагент) Тогда
				Объект.Контрагент = РеквизитыВОтветНа.Контрагент;
			КонецЕсли;
			Если ЗначениеЗаполнено(РеквизитыВОтветНа.Адресат) Тогда
				Объект.КонтактноеЛицо = РеквизитыВОтветНа.Адресат;
			Иначе
				Объект.КонтактноеЛицо = Неопределено;
			КонецЕсли;
			
			Объект.Контрагенты.Очистить();
			Строка = Объект.Контрагенты.Добавить();
			Строка.Контрагент = Объект.Контрагент;
			Строка.КонтактноеЛицо = Объект.КонтактноеЛицо;
			Строка.ПодписалОтКонтрагента = Объект.ПодписалОтКонтрагента;
			СкопироватьКонтрагентаИзРеквизитовВСписок(Форма, Строка);
			
		КонецЕсли;
	
	КонецЕсли;
	
	МассивВОтветНа = Форма.СписокВОтветНа.ВыгрузитьЗначения();
	МассивВОтветНа.Добавить(ВыбранноеЗначение);
	ПредметыПереписки = СвязиОбъектов.ПолучитьСвязанныеОбъектыПоМассивуОбъектов(МассивВОтветНа,
		"ПредметПереписки");
	Если ПредметыПереписки.Количество() Тогда
		Форма.ПредметПереписки = ПредметыПереписки[0];
			Если Не Форма.НесколькоПредметовПереписки Тогда
				Форма.СписокПредметовПереписки.Очистить();
			КонецЕсли;
	КонецЕсли;
	
	Для Каждого СвязанныйОбъект Из ПредметыПереписки Цикл
		Если Форма.СписокПредметовПереписки.НайтиПоЗначению(СвязанныйОбъект) = Неопределено Тогда
			Форма.СписокПредметовПереписки.Добавить(СвязанныйОбъект);
		КонецЕсли;
	КонецЦикла;
	Форма.НесколькоПредметовПереписки = Форма.СписокПредметовПереписки.Количество() > 1;
	
	Форма.Модифицированность = Истина;
	
	РаботаСКорреспонденциейКлиентСервер.УстановитьВидимостьЭлементовВОтветНаИПредметПереписки(Форма);
	
КонецПроцедуры

Процедура ВОтветНаСтрокаАвтоПодбор(Форма, Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка) Экспорт 
	
	Если ЗначениеЗаполнено(Текст) Тогда
		
		Контрагенты = Новый Массив;
		Если Форма.Объект.Контрагенты.Количество() > 0 
			Или ЗначениеЗаполнено(Форма.Объект.Контрагент) Тогда
			
			Для Каждого СтрКонтрагент Из Форма.Объект.Контрагенты Цикл 
				Если Не ЗначениеЗаполнено(СтрКонтрагент.Контрагент) Тогда 
					Продолжить;
				КонецЕсли;
				
				Контрагенты.Добавить(СтрКонтрагент.Контрагент);
			КонецЦикла;
			
			Если ЗначениеЗаполнено(Форма.Объект.Контрагент) Тогда
				Контрагенты.Добавить(Форма.Объект.Контрагент);
			КонецЕсли;
		КонецЕсли;
		
		ТолькоИсходящаяКорреспонденция = Ложь;
		Если Форма.ВидДокументаКэш.ЯвляетсяВходящейКорреспонденцией Тогда 
			ТолькоИсходящаяКорреспонденция = Истина;
		КонецЕсли;
	
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСКорреспонденциейВызовСервера.ДанныеВыбораВОтветНа(
			Текст, Контрагенты, ТолькоИсходящаяКорреспонденция);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВОтветНаСтрокаОкончаниеВводаТекста(Форма, Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка) Экспорт 
	
	Если ЗначениеЗаполнено(Текст) Тогда
		
		Контрагенты = Новый Массив;
		Если Форма.Объект.Контрагенты.Количество() > 0 
			Или ЗначениеЗаполнено(Форма.Объект.Контрагент) Тогда
			Для Каждого СтрКонтрагент Из Форма.Объект.Контрагенты Цикл 
				Если Не ЗначениеЗаполнено(СтрКонтрагент.Контрагент) Тогда 
					Продолжить;
				КонецЕсли;
				
				Контрагенты.Добавить(СтрКонтрагент.Контрагент);
			КонецЦикла;
			
			Если ЗначениеЗаполнено(Форма.Объект.Контрагент) Тогда
				Контрагенты.Добавить(Форма.Объект.Контрагент);
			КонецЕсли;
		КонецЕсли;
		
		ТолькоИсходящаяКорреспонденция = Ложь;
		Если Форма.ВидДокументаКэш.ЯвляетсяВходящейКорреспонденцией Тогда 
			ТолькоИсходящаяКорреспонденция = Истина;
		КонецЕсли;
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСКорреспонденциейВызовСервера.ДанныеВыбораВОтветНа(
			Текст, Контрагенты, ТолькоИсходящаяКорреспонденция);
			
	ИначеЕсли Не Форма.НесколькоВОтветНа Тогда
		
		Форма.ПредметПереписки = Неопределено;
		Форма.ВОтветНа = Неопределено; 
		Форма.ВОтветНаСтрока = Неопределено;
		
	КонецЕсли;
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура НесколькоВОтветНа(Форма) Экспорт
	
	Если Форма.НесколькоВОтветНа Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("НесколькоВОтветНаПродолжение", ЭтотОбъект, Форма);
		
		Если Форма.СписокВответНа.Количество() > 1 Тогда
			ТекстВопроса = 
				НСтр("ru = 'Все документы из списка ""В ответ на"", кроме первого, будут удалены. Продолжить?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе
			ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
		КонецЕсли;
		
	Иначе
		
		Форма.НесколькоВОтветНа = Истина;
		РаботаСКорреспонденциейКлиентСервер.УстановитьВидимостьЭлементовВОтветНаИПредметПереписки(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НесколькоВОтветНаПродолжение(Результат, Форма) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда

		Пока Форма.СписокВОтветНа.Количество() > 1 Цикл
			Форма.СписокВОтветНа.Удалить(1);
		КонецЦикла;
		
		Форма.Модифицированность = Истина;
	
		Форма.НесколькоВОтветНа = Ложь;
		
		РаботаСКорреспонденциейКлиентСервер.УстановитьВидимостьЭлементовВОтветНаИПредметПереписки(Форма);

	КонецЕсли;
	
КонецПроцедуры

Процедура НесколькоПредметовПереписки(Форма) Экспорт
	
	Если Форма.НесколькоПредметовПереписки Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("НесколькоПредметовПерепискиПродолжение", ЭтотОбъект, Форма);
		
		Если Форма.СписокПредметовПереписки.Количество() > 1 Тогда
			ТекстВопроса = 
				НСтр("ru = 'Все документы из списка предметов переписки, кроме первого, будут удалены. Продолжить?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе
			ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
		КонецЕсли;
		
	Иначе
		
		Форма.НесколькоПредметовПереписки = Истина;
		РаботаСКорреспонденциейКлиентСервер.УстановитьВидимостьЭлементовВОтветНаИПредметПереписки(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НесколькоПредметовПерепискиПродолжение(Результат, Форма) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда

		Пока Форма.СписокПредметовПереписки.Количество() > 1 Цикл
			Форма.СписокПредметовПереписки.Удалить(1);
		КонецЦикла;
		
		Если Форма.СписокПредметовПереписки.Количество() 
			И ЗначениеЗаполнено(Форма.СписокПредметовПереписки[0].Значение) Тогда
			Форма.ПредметПереписки = Форма.СписокПредметовПереписки[0].Значение;
		ИначеЕсли Форма.СписокПредметовПереписки.Количество() = 0 Тогда
			Форма.ПредметПереписки = Неопределено;
		КонецЕсли;
		
		Форма.Модифицированность = Истина;
	
		Форма.НесколькоПредметовПереписки = Ложь;
		
		РаботаСКорреспонденциейКлиентСервер.УстановитьВидимостьЭлементовВОтветНаИПредметПереписки(Форма);

	КонецЕсли;
	
КонецПроцедуры

Процедура ПредметПерепискиОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	Если ЗначениеЗаполнено(Форма.ПредметПереписки) 
		И Форма.ПредметПереписки <> ВыбранноеЗначение Тогда
		НайденныйЭлемент = Форма.СписокПредметовПереписки.НайтиПоЗначению(Форма.ПредметПереписки);
		Форма.СписокПредметовПереписки.Удалить(НайденныйЭлемент);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение)
		И ТипЗнч(ВыбранноеЗначение) <> Тип("Тип")
		И Форма.СписокПредметовПереписки.НайтиПоЗначению(ВыбранноеЗначение) = Неопределено Тогда
		Форма.СписокПредметовПереписки.Добавить(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПредметПерепискиПриИзменении(Форма, Элемент) Экспорт
	
	Если ЗначениеЗаполнено(Форма.ПредметПереписки) 
		И Форма.СписокПредметовПереписки.НайтиПоЗначению(Форма.ПредметПереписки) = Неопределено Тогда
		Форма.СписокПредметовПереписки.Добавить(Форма.ПредметПереписки);
		
	ИначеЕсли Не ЗначениеЗаполнено(Форма.ПредметПереписки) Тогда 
		Форма.СписокПредметовПереписки.Очистить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПредметПерепискиОчистка(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	Форма.СписокПредметовПереписки.Очистить();
	
КонецПроцедуры

Процедура СписокПредметовПерепискиЗначениеОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	Если Форма.СписокПредметовПереписки.НайтиПоЗначению(ВыбранноеЗначение) <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		Сообщение = НСтр("ru = 'Предмет ""%1"" уже есть в списке предметов переписки.'");
		ПоказатьПредупреждение(, СтрШаблон(Сообщение, ВыбранноеЗначение));
	КонецЕсли;
	
КонецПроцедуры

Процедура ПредметПерепискиАвтоПодбор(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных,
	Ожидание, СтандартнаяОбработка) Экспорт

	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСКорреспонденциейВызовСервера.ДанныеВыбораПредметаПереписки(Текст);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПредметПерепискиОкончаниеВводаТекста(Форма, Элемент, Текст, ДанныеВыбора,
	ПараметрыПолученияДанных, СтандартнаяОбработка) Экспорт
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСКорреспонденциейВызовСервера.ДанныеВыбораПредметаПереписки(Текст);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПредметПерепискиНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	ПараметрыФормы = Новый Структура;
	Если Форма.НесколькоПредметовПереписки Тогда
		Если Форма.Элементы.СписокПредметовПереписки.ТекущиеДанные.Значение = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ПараметрыФормы.Вставить("ТекущаяСтрока", Форма.Элементы.СписокПредметовПереписки.ТекущиеДанные.Значение);
	Иначе
		Если Форма.ПредметПереписки = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ПараметрыФормы.Вставить("ТекущаяСтрока", Форма.ПредметПереписки);
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы.Вставить("ТолькоНеКорреспонденция", Истина);
	ОткрытьФорму("Справочник.ДокументыПредприятия.ФормаВыбора", ПараметрыФормы, Элемент);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыКорреспонденция

Процедура ДобавитьКорреспонденцию(
	Форма, Отказ, Копирование, ВидКорреспонденции = Неопределено) Экспорт 
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	ВидДокументаКэш = Форма.ВидДокументаКэш;
	
	Отказ = Истина;
	Если Объект.Ссылка.Пустая() Тогда 
		Если Не Форма.Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Создание:'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
	КонецЕсли;

	ТекущиеДанные = Элементы.Корреспонденция.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Объект.Ссылка);
	ПараметрыФормы.Вставить("УникальныйИдентификаторФормыВладельца", Форма.УникальныйИдентификатор);
	ПараметрыФормы.Вставить("УчетВходящейКорреспонденции", ВидДокументаКэш.ЯвляетсяВходящейКорреспонденцией);
	ПараметрыФормы.Вставить("УчетИсходящейКорреспонденции", ВидДокументаКэш.ЯвляетсяИсходящейКорреспонденцией);
	
	ПараметрыФормы.Вставить("ВидКорреспонденции", ВидКорреспонденции);
	
	Если Копирование Тогда 
		ПараметрыФормы.Вставить("ЗначениеКопирования", ТекущиеДанные.Корреспонденция);
		ОткрытьФорму("Документ.Корреспонденция.ФормаОбъекта", ПараметрыФормы, Элементы.Корреспонденция);
	Иначе 
		ОчиститьСообщения();
		ОткрытьФорму("Документ.Корреспонденция.ФормаОбъекта", ПараметрыФормы,
			Элементы.Корреспонденция);
	КонецЕсли;
	
КонецПроцедуры

Процедура КорреспонденцияПередНачаломИзменения(Форма, Элемент, Отказ) Экспорт 
	
	Отказ = Истина;
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	ВидДокументаКэш = Форма.ВидДокументаКэш;
	
	ТекущиеДанные = Элементы.Корреспонденция.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.Корреспонденция);
	ПараметрыФормы.Вставить("ОткрытиеИзДокумента", Истина);
	ПараметрыФормы.Вставить("УчетВходящейКорреспонденции", ВидДокументаКэш.ЯвляетсяВходящейКорреспонденцией);
	ПараметрыФормы.Вставить("УчетИсходящейКорреспонденции", ВидДокументаКэш.ЯвляетсяИсходящейКорреспонденцией);
	ПараметрыФормы.Вставить("УникальныйИдентификаторФормыВладельца", Форма.УникальныйИдентификатор);
	ОткрытьФорму("Документ.Корреспонденция.ФормаОбъекта", ПараметрыФормы,
		Элементы.Корреспонденция);
	
КонецПроцедуры

Процедура КорреспонденцияПередУдалением(Форма, Элемент, Отказ, ОписаниеОповещения) Экспорт 
	
	Отказ = Истина;
	
	ТекущиеДанные = Форма.Элементы.Корреспонденция.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения.ДополнительныеПараметры.Вставить("Корреспонденция", ТекущиеДанные.Корреспонденция);
	ПоказатьВопрос(ОписаниеОповещения, 
		СтрШаблон(НСтр("ru = 'Пометить ""%1"" на удаление?'"), ТекущиеДанные.Корреспонденция), 
		РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

Процедура СкопироватьКонтрагентаИзРеквизитовВСписок(Форма, СтрКонтрагент) Экспорт
	
	ВидДокументаКэш = Форма.ВидДокументаКэш;
	
	Если Не ВидДокументаКэш.ЯвляетсяИсходящейКорреспонденцией Тогда
		Возврат;
	КонецЕсли;
	
	СтрКонтрагент.ДатаОтправки = Форма.ДатаОтправки;
	СтрКонтрагент.ВходящийНомер = Форма.ВходящийНомер;
	СтрКонтрагент.ВходящаяДата = Форма.ВходящаяДата;
	СтрКонтрагент.Отправлен = Форма.Отправлен;
	СтрКонтрагент.СпособОтправки = Форма.СпособОтправки;
	
КонецПроцедуры

Процедура СкопироватьКонтрагентаИзСпискаВРеквизиты(Форма, СтрКонтрагент) Экспорт
	
	ВидДокументаКэш = Форма.ВидДокументаКэш;
	
	Если Не ВидДокументаКэш.ЯвляетсяИсходящейКорреспонденцией Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрКонтрагент = Неопределено Тогда 
		Форма.ДатаОтправки = Неопределено;
		Форма.ВходящийНомер = Неопределено;
		Форма.ВходящаяДата = Неопределено;
		Форма.Отправлен = Неопределено;
		Форма.СпособОтправки = Неопределено;
	Иначе 
		Форма.ДатаОтправки = СтрКонтрагент.ДатаОтправки;
		Форма.ВходящийНомер = СтрКонтрагент.ВходящийНомер;
		Форма.ВходящаяДата = СтрКонтрагент.ВходящаяДата;
		Форма.Отправлен = СтрКонтрагент.Отправлен;
		Форма.СпособОтправки = СтрКонтрагент.СпособОтправки;
	КонецЕсли;
	
КонецПроцедуры

Процедура КонтрагентыПриАктивизацииСтроки(Форма, Элемент) Экспорт
	
	Элементы = Форма["Элементы"];
	ДоступныеПоля = Форма["ДоступныеПоля"];
	
	ТекущиеДанные = Элементы.Контрагенты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ДоступныеПоля = "" Или ДоступныеПоля.Свойство("КонтрагентыДатаОтправки") Тогда
		Элементы.КонтрагентыДатаОтправки.ТолькоПросмотр = Не ТекущиеДанные.Отправлен;
	КонецЕсли;
	
	МассивПолей = Новый Массив;
	МассивПолей.Добавить("КонтактноеЛицо");
	МассивПолей.Добавить("Контрагент");
	МассивПолей.Добавить("СпособОтправки");
	
	ЕстьЗапретРедактированияКонтрагента = Ложь;
	
	Для Каждого Поле Из МассивПолей Цикл
		
		Элементы["Контрагенты" + Поле].ТолькоПросмотр =
			ЗапрещеноРедактироватьПолеКонтрагентыПоШаблону(Форма["КонтрагентыШаблона"], ТекущиеДанные, Поле);
		
		Если Элементы["Контрагенты" + Поле].ТолькоПросмотр И Не ЕстьЗапретРедактированияКонтрагента Тогда
			ЕстьЗапретРедактированияКонтрагента = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы["КонтрагентыКонтекстноеМенюУдалить"].Доступность = Не ЕстьЗапретРедактированияКонтрагента;
	Элементы["КонтрагентыУдалить"].Доступность = Не ЕстьЗапретРедактированияКонтрагента;
	
КонецПроцедуры

Процедура КонтрагентыОтправленПриИзменении(Форма, Элемент) Экспорт 
	
	Элементы = Форма.Элементы;
	ДоступныеПоля = Форма.ДоступныеПоля;
	
	ТекущиеДанные = Элементы.Контрагенты.ТекущиеДанные;
	Если ТекущиеДанные.Отправлен Тогда
		ТекущиеДанные.ДатаОтправки = ТекущаяДата();
		Если Не ЗначениеЗаполнено(ТекущиеДанные.СпособОтправки) Тогда
			ТекущиеДанные.СпособОтправки = Форма.СпособОтправкиПоУмолчанию;
		КонецЕсли;
	Иначе
		ТекущиеДанные.ДатаОтправки = Неопределено;
		ТекущиеДанные.СпособОтправки = ПредопределенноеЗначение("Справочник.СпособыДоставки.ПустаяСсылка");
	КонецЕсли;
	
	Если ДоступныеПоля = "" Или ДоступныеПоля.Свойство("КонтрагентыДатаОтправки") Тогда
		Элементы.КонтрагентыДатаОтправки.ТолькоПросмотр = Не ТекущиеДанные.Отправлен;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ПереадресацияДокумента

// Обработчик команды "Отправить ответ" в форме Документа предприятия (ответ переадресовавшему)
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма элемента справочника "ДокументыПредприятия"
Процедура ОтправитьОтветПереадресовавшему(Форма) Экспорт

	Объект = Форма.Объект;
	
	Если Не ЗначениеЗаполнено(Форма.Переадресовавший) Тогда 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Не заполнено поле ""Переадресован от""'"),,
			"Переадресовавший");
		Возврат;
	КонецЕсли;		
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОтправитьОтветПереадресовавшемуПродолжение",
		ЭтотОбъект,
		Форма);

	Если Объект.Ссылка.Пустая() Тогда
		ТекстВопроса = 
			НСтр("ru = 'Для отправки ответа переадресовавшему документ требуется записать. Выполнить запись?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе 
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.ОК);
	КонецЕсли;

КонецПроцедуры

Процедура ОтправитьОтветПереадресовавшемуПродолжение(Результат, Форма) Экспорт

	Объект = Форма.Объект;
	
	Если Результат = КодВозвратаДиалога.Нет Тогда 
		Возврат;	
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда 
		Если Не Форма.Записать() Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("УстановитьСвязь", Истина);
	ДополнительныеПараметры.Вставить("ТипСвязи", 
		ПредопределенноеЗначение("Справочник.ТипыСвязей.ОтветПереадресовавшему"));
	ДополнительныеПараметры.Вставить("ДокументДляСвязиПриЗаписи", Объект.Ссылка);
	ДополнительныеПараметры.Вставить("Получатель", Форма.Переадресовавший);
	ДополнительныеПараметры.Вставить("Адресат", Форма.КонтактноеЛицоПереадресовавшего);
	ДополнительныеПараметры.Вставить("ТипКорреспонденции", "ЯвляетсяИсходящейКорреспонденцией");
	
	Параметры = РаботаСШаблонамиДокументовКлиент.ДополнительныеПараметрыВыбораШаблонаДокумента();
	Параметры.ТипКорреспонденции = "ЯвляетсяИсходящейКорреспонденцией";
	Параметры.ВозможностьСозданияПустогоДокумента = Истина;
	ДелопроизводствоКлиент.СоздатьДокументПредприятия(Параметры, ДополнительныеПараметры);
	
КонецПроцедуры

// Обработчик команды "Переадресовать" в форме Документа предприятия
Процедура Переадресовать(Форма) Экспорт
	
	Объект = Форма.Объект;

	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПереадресоватьПродолжение",
		ЭтотОбъект,
		Форма);

	Если Объект.Ссылка.Пустая() Тогда
		ТекстВопроса = НСтр("ru = 'Для переадресации документ требуется записать. Выполнить запись?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе 
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.ОК);
	КонецЕсли;

КонецПроцедуры

Процедура ПереадресоватьПродолжение(Результат, Форма) Экспорт
	
	Объект = Форма.Объект;

	Если Результат = КодВозвратаДиалога.Нет Тогда 
		Возврат;	
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда 
					
		Если Не Форма.Записать() Тогда 
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("УстановитьСвязь", Истина);
	ДополнительныеПараметры.Вставить("ТипСвязи",
		ПредопределенноеЗначение("Справочник.ТипыСвязей.ПереадресованДокументом"));
	ДополнительныеПараметры.Вставить("ДокументДляСвязиПриЗаписи", Объект.Ссылка);
	ДополнительныеПараметры.Вставить("ТипКорреспонденции", "ЯвляетсяИсходящейКорреспонденцией");
	
	Параметры = РаботаСШаблонамиДокументовКлиент.ДополнительныеПараметрыВыбораШаблонаДокумента();
	Параметры.ТипКорреспонденции = "ЯвляетсяИсходящейКорреспонденцией";
	Параметры.ВозможностьСозданияПустогоДокумента = Истина;
	ДелопроизводствоКлиент.СоздатьДокументПредприятия(Параметры, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура КонтактноеЛицоПереадресовавшегоНачалоВыбора(Форма, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(Форма.Переадресовавший) Тогда 
		СтандартнаяОбработка = Ложь;
		
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнено поле ""Переадресован от""'"),,
			"Переадресовавший");
	КонецЕсли;	
	
КонецПроцедуры

Процедура ТребуетсяОтветПереадресовавшемуПриИзменении(Форма) Экспорт
	
	Если Форма.ТребуетсяОтветПереадресовавшему Тогда 
		Форма.Элементы.СрокОтветаПереадресовавшему.Доступность = Истина;
		Форма.Элементы.ОтправитьОтветПереадресовавшему.Доступность = Истина;
	Иначе
		Форма.Элементы.СрокОтветаПереадресовавшему.Доступность = Ложь;
		Форма.Элементы.ОтправитьОтветПереадресовавшему.Доступность = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

// Устанавливает заголовки элементов формы вида документа
// и шаблона документа в соответствии с направлением корреспонденции
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма шаблона или вида документа
//  ЭтоВходящаяКорреспонденция - Булево
//  ЭтоИсходящаяКорреспонденция - Булево
//  ПриИзменении - Булево - Истина, если процедура вызвана при изменении направления корреспонденции
//
Процедура УстановитьЗаголовкиЭлементовФормы(Форма, ЭтоВходящаяКорреспонденция,
	ЭтоИсходящаяКорреспонденция, ПриИзменении = Ложь) Экспорт
	
	Если ЭтоВходящаяКорреспонденция Тогда
		
		Форма.Элементы.ГруппаОрганизация.Заголовок = НСтр("ru = 'Кому'");
		
		Форма.Элементы.ГруппаКонтрагент.Заголовок = НСтр("ru = 'От кого'");
		Форма.Элементы.Контрагент.Заголовок = НСтр("ru = 'Отправитель'");
		Форма.Элементы.КонтактноеЛицо.Заголовок = НСтр("ru = 'Подписал'");

	ИначеЕсли ЭтоИсходящаяКорреспонденция Тогда
		
		Форма.Элементы.ГруппаОрганизация.Заголовок = НСтр("ru = 'От кого'");

		Форма.Элементы.ГруппаКонтрагент.Заголовок = НСтр("ru = 'Кому'");
		Форма.Элементы.Контрагент.Заголовок = НСтр("ru = 'Получатель'");
		Форма.Элементы.КонтактноеЛицо.Заголовок = НСтр("ru = 'Адресат'");

		Форма.Элементы.СтраницаКонтрагенты.Заголовок = НСтр("ru = 'Получатели'");
		Форма.Элементы.КонтрагентыКонтрагент.Заголовок = НСтр("ru = 'Получатель'");
		Форма.Элементы.КонтрагентыКонтактноеЛицо.Заголовок = НСтр("ru = 'Адресат'");
		Форма.Элементы.КонтрагентыОдинКонтрагент.Заголовок = НСтр("ru = 'Один получатель'");
		
	ИначеЕсли ПриИзменении Тогда 
	
		// Возвращать заголовки к стандартным нужно только если изменились реквизиты
		Форма.Элементы.ГруппаОрганизация.Заголовок = РедакцииКонфигурацииКлиентСервер.ИмяОрганизации();
		
		Форма.Элементы.ГруппаКонтрагент.Заголовок = НСтр("ru = 'Контрагент'");
		Форма.Элементы.Контрагент.Заголовок = НСтр("ru = 'Контрагент'");
		Форма.Элементы.КонтактноеЛицо.Заголовок = НСтр("ru = 'Контакт'");
		
		Форма.Элементы.СтраницаКонтрагенты.Заголовок = НСтр("ru = 'Контрагенты'");
		Форма.Элементы.КонтрагентыКонтрагент.Заголовок = НСтр("ru = 'Контрагент'");
		Форма.Элементы.КонтрагентыКонтактноеЛицо.Заголовок = НСтр("ru = 'Контакт'");
		Форма.Элементы.КонтрагентыОдинКонтрагент.Заголовок = НСтр("ru = 'Один контрагент'");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаОповещенияОПереадресацииДокументом(Форма, Параметр, Источник) Экспорт

	Элементы = Форма.Элементы;

	Если Параметр.ТипСвязи = ПредопределенноеЗначение("Справочник.ТипыСвязей.ОтветПереадресовавшему") Тогда
		Форма.ОтветПереадресовавшему = Параметр.СвязанныйОбъект;
		Если ЗначениеЗаполнено(Форма.ОтветПереадресовавшему) Тогда
			Элементы.ОтправитьОтветПереадресовавшему.Видимость = Ложь;
			Элементы.ОтветПереадресовавшему.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;

	Если Параметр.ТипСвязи = ПредопределенноеЗначение("Справочник.ТипыСвязей.ПереадресованДокументом") Тогда
		Форма.ПереадресованДокументом = Параметр.СвязанныйОбъект;
		Если ЗначениеЗаполнено(Форма.ПереадресованДокументом) Тогда
			РеквизитыПереадресата = ОбщегоНазначенияДокументооборотВызовСервера.ЗначенияРеквизитовОбъекта(
				Форма.ПереадресованДокументом, "Контрагент, КонтактноеЛицо");
			Форма.Переадресат = РеквизитыПереадресата.Контрагент;
			Форма.КонтактноеЛицоПереадресата = РеквизитыПереадресата.КонтактноеЛицо;
			Элементы.Переадресовать.Видимость = Ложь;
			Элементы.Переадресат.Видимость = Истина;
			Элементы.КонтактноеЛицоПереадресата.Видимость = Истина;
			Элементы.ПереадресованДокументом.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Функция ЗапрещеноРедактироватьПолеКонтрагентыПоШаблону(КонтрагентыШаблона, ТекущиеДанные, Поле)
	
	Если ЗначениеЗаполнено(ТекущиеДанные[Поле]) Тогда
		
		Попытка
			Если КонтрагентыШаблона.НайтиСтроки(Новый Структура(Поле, ТекущиеДанные[Поле])).Количество() > 0 Тогда
				Возврат Истина;
			Иначе
				Возврат Ложь;
			КонецЕсли;
		Исключение
			Возврат Ложь;
		КонецПопытки;
		
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти