
#Область ПрограммныйИнтерфейс

// +ЦППК "2.2.3"  "17.07.2023"
// "Программный вывод на форму добавленных реквизитов и команд" 
// выполняется после УправлениеСвойствами.ПриСозданииНаСервере
Процедура ЦППК_ПриСозданииНаСервере(Форма, ДополнительныеПараметры) Экспорт 
	
	Если Форма.ИмяФормы = "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента" Тогда	
		
		Элементы = Форма.Элементы;
		Команды = Форма.Команды;
		Объект = Форма.Объект;
		
		// Команда "Вставить штрихкод (в PDF)"
		Если ПолучитьФункциональнуюОпцию("ИспользоватьШтрихкоды") Тогда
			
			НоваяКоманда = Команды.Добавить("ЦППК_ВставитьШтрихкодPDF");             
			НоваяКоманда.Действие  = "ЦППК_ВставитьШтрихкодPDF";
			НоваяКоманда.Заголовок = НСтр("ru = 'Вставить штрихкод... (в PDF)'");
			НоваяКоманда.Отображение = ОтображениеКнопки.КартинкаИТекст;
			
			НовыйЭлемент = Элементы.Вставить("ЦППК_ВставитьШтрихкодPDF", Тип("КнопкаФормы"), Элементы.ФормаШтрихкоды, Элементы.ФайлыВставитьРегистрационныйНомер);
			НовыйЭлемент.ИмяКоманды = "ЦППК_ВставитьШтрихкодPDF";
			НовыйЭлемент.Заголовок  = НСтр("ru = 'Вставить штрихкод... (в PDF)'");
			НовыйЭлемент.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВДополнительномПодменю;
			
			НовыйЭлемент = Элементы.Вставить("ЦППК_КонтекстноеМенюФайлыВставитьШтрихкодPDF", Тип("КнопкаФормы"), Элементы.КонтекстноеМенюФайлыГруппаШтрихкоды, Элементы.КонтекстноеМенюФайлыВставитьРегистрационныйНомер);
			НовыйЭлемент.ИмяКоманды = "ЦППК_ВставитьШтрихкодPDF";
			НовыйЭлемент.Заголовок  = НСтр("ru = 'Вставить штрихкод... (в PDF)'");
			
			НовыйЭлемент = Элементы.Вставить("ЦППК_ВставитьШтрихкодPDFСоздание", Тип("КнопкаФормы"), Элементы.ФормаШтрихкодыСоздание, Элементы.ФайлыВставитьРегистрационныйНомерСоздание);
			НовыйЭлемент.ИмяКоманды = "ЦППК_ВставитьШтрихкодPDF";
			НовыйЭлемент.Заголовок  = НСтр("ru = 'Вставить штрихкод... (в PDF)'");
			НовыйЭлемент.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВДополнительномПодменю;
			
			НовыйЭлемент = Элементы.Вставить("ЦППК_КонтекстноеМенюФайлыВставитьШтрихкодPDFСоздание", Тип("КнопкаФормы"), Элементы.КонтекстноеМенюФайлыГруппаШтрихкодыСоздание, Элементы.КонтекстноеМенюФайлыВставитьРегистрационныйНомерСоздание);
			НовыйЭлемент.ИмяКоманды = "ЦППК_ВставитьШтрихкодPDF";
			НовыйЭлемент.Заголовок  = НСтр("ru = 'Вставить штрихкод... (в PDF)'");
			
		КонецЕсли;
		
		// ТТС_ПодразделениеКорреспондента
		НовыйЭлемент = Элементы.Вставить("ТТС_ПодразделениеКорреспондента", Тип("ПолеФормы"), Элементы.ГруппаКонтрагент, Элементы.ГруппаИндексыСПАРКРиски); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;  
		НовыйЭлемент.ПутьКДанным = "Объект.ТТС_ПодразделениеКорреспондента"; 
		НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;
		НовыйЭлемент.АвтоМаксимальнаяВысота = Истина;
		
		// № ЕАСД/МСЭД
		НовыйЭлемент = Элементы.Вставить("ЦППК_ЕАСД", Тип("ПолеФормы"), Элементы.ГруппаЛево, Элементы.КомментарийРеквизит); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;  
		НовыйЭлемент.ПутьКДанным = "Объект.ЦППК_ЕАСД";
		НовыйЭлемент.Заголовок  = НСтр("ru = '№ ЕАСД/МСЭД'");
		// ++AxelSoft Шарапова 14.10.2024 САНФ-029365
		НовыйЭлемент.Видимость = Ложь;
		//--AxelSoft Шарапова 14.10.2024 САНФ-029365
		
		ДобавляемыеРеквизиты = Новый Массив;
		
		// ++AxelSoft Шарапова 24.01.2025 САНФ-030728
		НовыйРеквизит = Новый РеквизитФормы("ДобавленыФайлы", Новый ОписаниеТипов("Булево")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);

		НовыйРеквизит = Новый РеквизитФормы("КлючевыеРеквизитыИзменились", Новый ОписаниеТипов("Булево")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
		НоваяКоманда = Команды.Добавить("КонвертироватьВPDF");             
		НоваяКоманда.Действие  		= "ЦППК_КонвертироватьВPDFПосле";
		НоваяКоманда.Заголовок  	= НСтр("ru = 'Конвертировать в PDF'"); 
		НоваяКоманда.Подсказка  	= НСтр("ru = 'Конвертировать в PDF'"); 
		НоваяКоманда.Отображение 	= ОтображениеКнопки.Картинка;
		НоваяКоманда.Картинка 		= БиблиотекаКартинок.ФорматPDF;
		
		НовыйЭлемент = Элементы.Вставить("КонвертироватьВPDF", Тип("КнопкаФормы"), Элементы.ГруппаКоманды, Элементы.Освободить);
		НовыйЭлемент.ИмяКоманды 	= "КонвертироватьВPDF";
		НовыйЭлемент.Заголовок  	= НСтр("ru = 'Конвертировать в PDF'"); 
		//--AxelSoft Шарапова 24.01.2025 САНФ-030728

		НовыйРеквизит = Новый РеквизитФормы("СтрокаДанныхВХранилище", Новый ОписаниеТипов("Строка")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы("ТекущееМестоРассмотрения",Новый ОписаниеТипов("ПеречислениеСсылка.МестоРассмотренияПоДокументуЗВДС")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы("ПерезаполнитьДействия_ТТС", Новый ОписаниеТипов("Булево"));	
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы("ТТС_ДатаРегистрацииЗаднимЧислом", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата))); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
		// ++AxelSoft Шарапова 08.10.2024 САНФ-029221      
		НовыйРеквизит = Новый РеквизитФормы("ЦППК_РешениеЦООтказ", Новый ОписаниеТипов("Булево")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		//--AxelSoft Шарапова 08.10.2024 САНФ-029221

		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		// Страница "ТТС_ДанныеЖурналов".
		НоваяГруппа = Элементы.Добавить("ТТС_ДанныеЖурналов", Тип("ГруппаФормы"), Элементы.ГруппаСтраницы);
		НоваяГруппа.Вид = ВидГруппыФормы.Страница;
		НоваяГруппа.Заголовок = НСтр("ru = 'Данные'");
		НоваяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		
		НовыйЭлемент = Элементы.Добавить("ЦППК_ЖурналыТУ_ВременнаяДекорация", Тип("ДекорацияФормы"), Элементы.ТТС_ДанныеЖурналов);
		НовыйЭлемент.Вид = ВидДекорацииФормы.Надпись;
		НовыйЭлемент.Заголовок = "Временная декорация"; 
		
		
		
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.ДокументыПредприятия.Форма.ИзменениеСрокаДействия" Тогда	
		
		Элементы = Форма.Элементы;
		Команды = Форма.Команды;
		
		ДобавляемыеРеквизиты = Новый Массив;
		
		// Реквизит "ДоИсполненияОбязательств".
		НовыйРеквизит = Новый РеквизитФормы("ДоИсполненияОбязательств", Новый ОписаниеТипов("Булево")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);	
		НовыйЭлемент = Элементы.Вставить("ДоИсполненияОбязательств", Тип("ПолеФормы"), , Элементы.ПорядокПродления); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;  
		НовыйЭлемент.ПутьКДанным = "ДоИсполненияОбязательств";
		НовыйЭлемент.Заголовок = НСтр("ru = 'До исполнения обязательств'");
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		НовыйЭлемент.УстановитьДействие("ПриИзменении", "ЦППК_ДоИсполненияОбязательствПриИзменении"); 
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.СтруктураПредприятия.Форма.ФормаЭлемента" Тогда	
		
		Элементы = Форма.Элементы;
		Команды = Форма.Команды;
		Объект = Форма.Объект; 
		
		НовыйЭлемент = Элементы.Вставить("ТТС_ГруппаПользователей", Тип("ПолеФормы"), , Элементы.ГруппаРанг); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
		НовыйЭлемент.ПутьКДанным = "Объект.ТТС_ГруппаПользователей"; 
		НовыйЭлемент.Ширина = 48;  
		
		НовыйЭлемент = Элементы.Вставить("ВерхнийУровень_ТТС", Тип("ПолеФормы"), , Элементы.ГруппаРанг); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка; 
		НовыйЭлемент.ПутьКДанным = "Объект.ВерхнийУровень_ТТС"; 
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право; 
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ПерсональныеНастройки.Форма.Разное" Тогда	
		
		Элементы = Форма.Элементы;
		Команды = Форма.Команды;
		
		ДобавляемыеРеквизиты = Новый Массив;
		
		// 
		НовыйРеквизит = Новый РеквизитФормы("ТТС_ОсновнойОтветственный", Новый ОписаниеТипов("СправочникСсылка.Пользователи")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);   
		НовыйРеквизит = Новый РеквизитФормы("ТТС_АвтоматическиПриниматьКИсполнению", Новый ОписаниеТипов("Булево")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		НовыйРеквизит = Новый РеквизитФормы("ТТС_КопироватьОписаниеЗадачДляПодзадач", Новый ОписаниеТипов("Булево")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		НовыйРеквизит = Новый РеквизитФормы("ТТС_КонтролерПоУмолчанию", Новый ОписаниеТипов("СправочникСсылка.Сотрудники")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		НовыйЭлемент = Элементы.Вставить("ТТС_ОсновнойОтветственный", Тип("ПолеФормы"), , Элементы.РежимОтображенияМестногоВремени); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;  
		НовыйЭлемент.ПутьКДанным = "ТТС_ОсновнойОтветственный";
		НовыйЭлемент.Заголовок = НСтр("ru = 'Основной ответственный'"); 
		
		НовыйЭлемент = Элементы.Вставить("ТТС_КонтролерПоУмолчанию", Тип("ПолеФормы"), , Элементы.РежимОтображенияМестногоВремени); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;  
		НовыйЭлемент.ПутьКДанным = "ТТС_КонтролерПоУмолчанию";
		НовыйЭлемент.Заголовок = НСтр("ru = 'Контролер по умолчанию'");
		
		НовыйЭлемент = Элементы.Добавить("ТТС_АвтоматическиПриниматьКИсполнению", Тип("ПолеФормы"), Элементы.ГруппаЗадачи); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;  
		НовыйЭлемент.ПутьКДанным = "ТТС_АвтоматическиПриниматьКИсполнению";
		НовыйЭлемент.Заголовок = НСтр("ru = 'Не принимать автоматически задачи к исполнению при открытии'");
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		
		НовыйЭлемент = Элементы.Добавить("ТТС_КопироватьОписаниеЗадачДляПодзадач", Тип("ПолеФормы"), Элементы.ГруппаЗадачи); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;  
		НовыйЭлемент.ПутьКДанным = "ТТС_КопироватьОписаниеЗадачДляПодзадач";
		НовыйЭлемент.Заголовок = НСтр("ru = 'Копировать описание задач для подзадач'");
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.НастройкаПрограммы.Форма.ПроцессыИЗадачи" Тогда	
		
		Элементы = Форма.Элементы;
		Команды = Форма.Команды;
		
		ДобавляемыеРеквизиты = Новый Массив;
		
		// 
		НовыйРеквизит = Новый РеквизитФормы("ОбяательноеЗаполнениеКомментарияВИсполнении", Новый ОписаниеТипов("Булево")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);   
		
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		НовыйЭлемент = Элементы.Добавить("ОбяательноеЗаполнениеКомментарияВИсполнении", Тип("ПолеФормы"), Элементы.ГруппаБизнесПроцессы); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;  
		НовыйЭлемент.ПутьКДанным = "ОбяательноеЗаполнениеКомментарияВИсполнении";
		НовыйЭлемент.Заголовок = НСтр("ru = 'Обязательное заполнение поля ""Комментарий"" в задаче ""Исполнение""'");; 
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		НовыйЭлемент.Подсказка = НСтр("ru = 'Если настройка установлена, добавляется проверка заполнения поля ""Комментарий"" в задаче исполнителя бизнес-процесса ""Исполнение""'");
		НовыйЭлемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка; 
		НовыйЭлемент.УстановитьДействие("ПриИзменении","ОбязательноеЗаполнениеКомментарияВИсполненииПриИзменении"); 
//		
	ИначеЕсли Форма.ИмяФормы = "Справочник.НастройкиДействийСогласования.Форма.ФормаЭлемента" Тогда	
		
		Элементы = Форма.Элементы;
		Команды = Форма.Команды;
						
		НовыйЭлемент = Элементы.Добавить("ЦППК_БезСогласованияСЗамечаниями", Тип("ПолеФормы"), Элементы.ГруппаНастройкиФлагов); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;  
		НовыйЭлемент.ПутьКДанным = "Объект.ЦППК_БезСогласованияСЗамечаниями";
		НовыйЭлемент.Заголовок = НСтр("ru = 'Не использовать согласование с замечаниями'");; 
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		НовыйЭлемент.Подсказка = НСтр("ru = 'Если настройка установлена, при согласовании не доступна кнопка ""Согласование с замечаниями""'");
		НовыйЭлемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка; 
		
		НовыйЭлемент = Элементы.Добавить("ЦППК_УпроститьПовторноеСогласование", Тип("ПолеФормы"), Элементы.ГруппаНастройкиФлагов); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;  
		НовыйЭлемент.ПутьКДанным = "Объект.ЦППК_УпроститьПовторноеСогласование";
		НовыйЭлемент.Заголовок = НСтр("ru = 'Упростить повторное согласование'");; 
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		НовыйЭлемент.Подсказка = НСтр("ru = 'Если настройка установлена, при повторном согласовании участники, ранее согласовавшие документ, перейдут в первый шаг обработки.""'");
		НовыйЭлемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка; 

	ИначеЕсли Форма.ИмяФормы = "Справочник.РазделыНоменклатурыДел.Форма.ФормаЭлемента" Тогда	
		
		Элементы = Форма.Элементы;
						
		НовыйЭлементТаблица = Элементы.Добавить("ЦППК_ОтветственныеЛица", Тип("ТаблицаФормы")); 
		НовыйЭлементТаблица.ПутьКДанным = "Объект.ЦППК_ОтветственныеЛица";
		
		НовыйЭлемент = Элементы.Добавить("Ответственный", Тип("ПолеФормы"), НовыйЭлементТаблица); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;  
		НовыйЭлемент.ПутьКДанным = "Объект.ЦППК_ОтветственныеЛица.Ответственный";
		
		НовыйЭлемент = Элементы.Добавить("Примечание", Тип("ПолеФормы"), НовыйЭлементТаблица); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;  
		НовыйЭлемент.ПутьКДанным = "Объект.ЦППК_ОтветственныеЛица.Примечание";

	ИначеЕсли Форма.ИмяФормы = "БизнесПроцесс.Исполнение.Форма.ФормаБизнесПроцесса" Тогда	
		
		Элементы = Форма.Элементы;
		СрокПроверки = Элементы.СрокОбработкиРезультатовПредставление;
		СрокПроверки.Заголовок = "Срок контроля";
		Элементы.Переместить(СрокПроверки, Элементы.ГруппаКонтрольныйСрокПроцесса, Элементы.Контролер);
		
		СрокКонтроля = Элементы.СрокИсполненияПроцессаПредставление;
		СрокКонтроля.Видимость = Ложь;

	ИначеЕсли Форма.ИмяФормы = "Документ.Задача.Форма.ФормаЭлемента" Тогда	
		
		Элементы = Форма.Элементы;
		
		ГруппаПланФактЗаголовки = Элементы.ГруппаПланФактЗаголовки;
        ГруппаПланФактЗаголовки.Видимость = Ложь;
		
		ГруппаПланФактНачало = Элементы.ГруппаПланФактНачало;
        ГруппаПланФактНачало.Видимость = Ложь;
		
		ГруппаПланФактЧелЧасов = Элементы.ГруппаПланФактЧелЧасов;
        ГруппаПланФактЧелЧасов.Видимость = Ложь;
		
		ЗначениеСрокФакт = Элементы.ЗначениеСрокФакт;
        ЗначениеСрокФакт.Видимость = Ложь;
		
		ЗначениеСрокПлан = Элементы.ЗначениеСрокПлан;		
        ЗначениеСрокПлан.РастягиватьПоГоризонтали = Ложь;
		
	// ЦППК Горбачев А.В. 08.07.2024 - САНФ-026651
	//
	// ++
	ИначеЕсли Форма.ИмяФормы = "Документ.Задача.Форма.Задачи" Тогда
		
		Элементы = Форма.Элементы;
		Команды = Форма.Команды;
		
		Если РольДоступна("ЦППК_ГрупповоеЗакрытиеЗадач") Тогда
			
			НоваяКоманда = Команды.Добавить("ЦППК_ГрупповоеЗакрытиеЗадач");             
			НоваяКоманда.Действие  = "ЦППК_ГрупповоеЗакрытиеЗадач";
			НоваяКоманда.Заголовок = НСтр("ru = 'Групповое закрытие задач'");
			НоваяКоманда.Картинка = БиблиотекаКартинок.СформироватьОтчет;
			НоваяКоманда.Отображение = ОтображениеКнопки.КартинкаИТекст;
			
			НовыйЭлемент = Элементы.Вставить("ЦППК_ГрупповоеЗакрытиеЗадач", Тип("КнопкаФормы"), Элементы.ГруппаОсновныеКоманды);
			НовыйЭлемент.ИмяКоманды = "ЦППК_ГрупповоеЗакрытиеЗадач";
			НовыйЭлемент.Заголовок  = НСтр("ru = 'Групповое закрытие задач'");
			
		КонецЕсли;
	// --
	
		// ++AxelSoft Шарапова 24.01.2025 САНФ-030728
		ДобавляемыеРеквизиты = Новый Массив;

		//НовыйРеквизит = Новый РеквизитФормы("БылаОткрытаФормаПодписи", Новый ОписаниеТипов("Булево")); 
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
		//НовыйРеквизит = Новый РеквизитФормы("ЭтоНагрузочноеТестирование", Новый ОписаниеТипов("Булево")); 
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
		//НовыйРеквизит = Новый РеквизитФормы("ВОтветНа", Новый ОписаниеТипов("СправочникСсылка.ДокументыПредприятия")); 
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
     
		//НовыйРеквизит = Новый РеквизитФормы("НеДействуетВСоответствии", Новый ОписаниеТипов("СправочникСсылка.ДокументыПредприятия")); 
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
     
		//НовыйРеквизит = Новый РеквизитФормы("ПерепискаПоПредмету", Новый ОписаниеТипов("СправочникСсылка.ДокументыПредприятия")); 
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
     
		//НовыйРеквизит = Новый РеквизитФормы("РегистрацияПриЗакрытии", Новый ОписаниеТипов("Булево")); 
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
     
		//НовыйРеквизит = Новый РеквизитФормы("СвязанныйДокументДляНумерации", Новый ОписаниеТипов("СправочникСсылка.ДокументыПредприятия")); 
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
     
		//НовыйРеквизит = Новый РеквизитФормы("ТипыВидыСвязанныхДокументовДляНумерации", Новый ОписаниеТипов("ТаблицаЗначений")); 
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		//
		//НовыйРеквизит = Новый РеквизитФормы("Тип", Новый ОписаниеТипов("Строка"), "ТипыВидыСвязанныхДокументовДляНумерации");
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизит); 	
		//
		//МассивТипа = Новый Массив;
		//МассивТипа.Добавить(Тип("СправочникСсылка.ВидыДокументов"));
		//МассивТипа.Добавить(Тип("Строка"));
		//НовыйРеквизит = Новый РеквизитФормы("Вид", МассивТипа, "ТипыВидыСвязанныхДокументовДляНумерации");
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
 		
		//НовыйРеквизит = Новый РеквизитФормы("ЦППК_ИсполнителиКОтбору", Новый ОписаниеТипов("СписокЗначений")); 
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
			
		НовыйРеквизит = Новый РеквизитФормы("ЦППК_Файлы", Новый ОписаниеТипов("ТаблицаЗначений")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы("Файл", Новый ОписаниеТипов("СправочникСсылка.Файлы"), "ЦППК_Файлы");
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);

		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);

		//--AxelSoft Шарапова 24.01.2025 САНФ-030728

	// ЦППК Горбачев А.В. 26.07.2024 - САНФ-027024
	//
	// ++
	ИначеЕсли Форма.ИмяФормы = "Документ.ДействиеЗадачи.Форма.ФормаЭлемента" Тогда
		
		Элементы = Форма.Элементы;
		Ключ = Форма.Параметры.Ключ;
		
		// ++AxelSoft NM 12.08.2024 САНФ-027688
		//Если РольДоступна("ЦППК_УказаниеОценкиПриСогласовании")
		Если (РольДоступна("ЦППК_УказаниеОценкиПриСогласовании") ИЛИ РольДоступна("АдминистраторСистемы") ИЛИ РольДоступна("ПолныеПрава"))
		//--AxelSoft NM 12.08.2024 САНФ-027688
			И ТипЗнч(Ключ) = Тип("ДокументСсылка.ДействиеЗадачи")
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ключ, "ВидДействия") = Справочники.ВидыДействийЗадач.Согласовать Тогда
			
			ЦППК_ДобавитьРеквизитДляОценкиЗадачи(Форма);
			ЦППК_ДобавитьЭлементыФормыДляОценкиЗадачи(Форма);
			
		КонецЕсли;
	// --
	
		// ++AxelSoft Шарапова 24.01.2025 САНФ-030728
		ДобавляемыеРеквизиты = Новый Массив;

		//НовыйРеквизит = Новый РеквизитФормы("БылаОткрытаФормаПодписи", Новый ОписаниеТипов("Булево")); 
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);

		НовыйРеквизит = Новый РеквизитФормы("ЦППК_Файлы", Новый ОписаниеТипов("ТаблицаЗначений")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы("Файл", Новый ОписаниеТипов("СправочникСсылка.Файлы"), "ЦППК_Файлы");
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
 		
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		//--AxelSoft Шарапова 24.01.2025 САНФ-030728
		                                       
	// ++AxelSoft Шарапова 26.08.2024 САНФ-028061
	ИначеЕсли Форма.ИмяФормы = "Справочник.ФизическиеЛица.Форма.ФормаЭлемента" Тогда
		
		Если НЕ Пользователи.РолиДоступны("ДобавлениеИзменениеФизическихЛиц") Тогда
			Форма.ТолькоПросмотр = Истина	
		КонецЕсли;	
	//--AxelSoft Шарапова 26.08.2024 САНФ-028061
		
	// ++AxelSoft Шарапова 26.02.2025 САНФ-032224
	ИначеЕсли Форма.ИмяФормы = "РегистрСведений.НастройкаСвязей.Форма.ФормаЗаписи" Тогда
		
		Элементы = Форма.Элементы;
		
		НовыйЭлемент = Элементы.Добавить("ЦППК_НеИспользовать", Тип("ПолеФормы"), Элементы.ГруппаСвойства); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;  
		НовыйЭлемент.ПутьКДанным = "Запись.ЦППК_НеИспользовать";
		НовыйЭлемент.Заголовок = НСтр("ru = 'Не использовать'");; 
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		НовыйЭлемент.Подсказка = НСтр("ru = 'Если флаг установлен, то настройку нельзя будет выбрать при создании связей.'");
		НовыйЭлемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка; 

	КонецЕсли;		
	//--AxelSoft Шарапова 26.02.2025 САНФ-032224 
	
КонецПроцедуры	

Процедура ЦППК_ПриСозданииНаСервереВидОбъекта(Форма) Экспорт
	
	
	
	Если Форма.ИмяФормы = "Справочник.ВидыДокументов.Форма.ФормаЭлемента" Тогда	
		
		Элементы = Форма.Элементы;
		Команды = Форма.Команды;
		Объект = Форма.Объект; 
		
		// Реквизиты "Журналы ТУ".
		// ++
		// "ТТС_ЯвляетсяЖурналомТУ".
		НовыйЭлемент = Элементы.Добавить("ТТС_ЯвляетсяЖурналомТУ", Тип("ПолеФормы"), Элементы.ГруппаОсновныеНастройки); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка; 
		НовыйЭлемент.ПутьКДанным = "Объект.ТТС_ЯвляетсяЖурналомТУ";
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		НовыйЭлемент.УстановитьДействие("ПриИзменении", "ЦППК_УстановитьВидимостьВидЖурналаТУ");
		
		// "ТТС_ВидЖурналаТУ".
		НовыйЭлемент = Элементы.Добавить("ТТС_ВидЖурналаТУ", Тип("ПолеФормы"), Элементы.ГруппаОсновныеНастройки); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;  
		НовыйЭлемент.ПутьКДанным = "Объект.ТТС_ВидЖурналаТУ";
		
		// Установка видимости элемента "ТТС_ВидЖурналаТУ".
		Элементы.ТТС_ВидЖурналаТУ.Видимость = Объект.ТТС_ЯвляетсяЖурналомТУ;
		// --
		
		// ЯвляетсяЗаявкойНаВозврат
		//НовыйЭлемент = Элементы.Вставить("ЯвляетсяЗаявкойНаВозврат", Тип("ПолеФормы"), Элементы.Право, Элементы.ПодписыватьРезолюцииЭП);   
		НовыйЭлемент = Элементы.Добавить("ЯвляетсяЗаявкойНаВозврат", Тип("ПолеФормы"), Элементы.Право); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;  
		НовыйЭлемент.ПутьКДанным = "Объект.ЯвляетсяЗаявкойНаВозврат";
		НовыйЭлемент.Подсказка = НСтр("ru = 'Реквизит служит для определения типа документа для последующей обоработки'");
		НовыйЭлемент.ОтображениеПодсказки =  ОтображениеПодсказки.Кнопка;    
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		
		// ++AxelSoft Шарапова 08.10.2024 САНФ-029223
		// ЯвляетсяОтветомЗаявкиНаВозврат
		НовыйЭлемент = Элементы.Добавить("ЦППК_ЯвляетсяОтветомЗаявкиНаВозврат", Тип("ПолеФормы"), Элементы.Право); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;  
		НовыйЭлемент.ПутьКДанным = "Объект.ЦППК_ЯвляетсяОтветомЗаявкиНаВозврат";
		НовыйЭлемент.Подсказка = НСтр("ru = 'Реквизит служит для определения типа документа для последующей обоработки'");
		НовыйЭлемент.ОтображениеПодсказки =  ОтображениеПодсказки.Кнопка;    
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		//--AxelSoft Шарапова 08.10.2024 САНФ-029223
		
		// Для документа «Ответ на Заявление на возврат денежных средств по претензии» 
		НовыйЭлемент = Элементы.Добавить("РасширениеРабочейГруппыДокументаПоВиду", Тип("ПолеФормы"), Элементы.Право); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;  
		НовыйЭлемент.ПутьКДанным = "Объект.РасширениеРабочейГруппыДокументаПоВиду";
		НовыйЭлемент.Подсказка = НСтр("ru = 'Для документа «Ответ на Заявление на возврат денежных средств по претензии»'");
		НовыйЭлемент.ОтображениеПодсказки =  ОтображениеПодсказки.Кнопка;    
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		
		// Для документа 
		НовыйЭлемент = Элементы.Добавить("ТТС_РасширениеРабочейГруппыПоПодразделению", Тип("ПолеФормы"), Элементы.Право); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;  
		НовыйЭлемент.ПутьКДанным = "Объект.ТТС_РасширениеРабочейГруппыПоПодразделению";
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		
		// Для документа «Ответ на Заявление на возврат денежных средств по претензии» 
		НовыйЭлемент = Элементы.Добавить("ТТС_УчетЗаявителей", Тип("ПолеФормы"), Элементы.Право); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;  
		НовыйЭлемент.ПутьКДанным = "Объект.ТТС_УчетЗаявителей";
		НовыйЭлемент.Подсказка = НСтр("ru = 'Для документа «Ответ на Заявление на возврат денежных средств по претензии'");
		НовыйЭлемент.ОтображениеПодсказки =  ОтображениеПодсказки.Кнопка;    
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		
		// Для номенклатуры дел 
		НовыйЭлемент = Элементы.Добавить("ЦППК_АвтоматическиЗаполнятьНоменклатуруДел", Тип("ПолеФормы"), Элементы.Право); 
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;  
		НовыйЭлемент.ПутьКДанным = "Объект.ЦППК_АвтоматическиЗаполнятьНоменклатуруДел";
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументыПредприятияПриСозданииНаСервереПеред(Форма) Экспорт
	
	// ++AxelSoft Котляров 02,07,2025
	МассивРеквизитов = Новый Массив;
	    
	// Реквизиты для таблицы измененных документов
	ДобавитьРеквизитТаблицы(
	    МассивРеквизитов, 
	    "ЦППК_СписокИзмененныхДокументов", 
	    "ТаблицаЗначений",
	    "ДокументыПредприятия");
	    
	// Реквизиты для таблицы начальных значений измененных документов    
	ДобавитьРеквизитТаблицы(
	    МассивРеквизитов, 
	    "ЦППК_СписокИзмененныхДокументовНачальное", 
	    "ТаблицаЗначений",
	    "ДокументыПредприятия");

	Форма.ИзменитьРеквизиты(МассивРеквизитов);		
	
	//AxelSoft Котляров 30.07.2025 САНФ-035473
	ДобавитьЭлементыВноситИзменения(Форма);

КонецПроцедуры 
	
	


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЦППК_ДобавитьРеквизитДляОценкиЗадачи(Форма) Экспорт
	
	ОписаниеЧисла_1_0 = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0, ДопустимыйЗнак.Любой));
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЦППК_ВыбраннаяОценка", ОписаниеЧисла_1_0, , "Выбранная оценка"));
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
КонецПроцедуры

Процедура ЦППК_ДобавитьЭлементыФормыДляОценкиЗадачи(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	
	// Группа "ЦППК_ОценкаВыполнения".
	НоваяГруппа = Элементы.Добавить("ЦППК_ОценкаВыполнения", Тип("ГруппаФормы"), Элементы.ГруппаКомандыДляВыполнения);
	НоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НоваяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	НоваяГруппа.Заголовок = "Оценка выполнения (не выбрана)";
	НоваяГруппа.Отображение = ОтображениеОбычнойГруппы.СлабоеВыделение;
	НоваяГруппа.ОтображатьЗаголовок = Истина;
	НоваяГруппа.Поведение = ПоведениеОбычнойГруппы.Всплывающая;
	НоваяГруппа.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
	НоваяГруппа.ВертикальноеПоложениеВГруппе = ВертикальноеПоложениеЭлемента.Центр;
	
	// Группа "ЦППК_ГруппаЗвезды".
	НоваяГруппа = Элементы.Добавить("ЦППК_ГруппаЗвезды", Тип("ГруппаФормы"), Элементы.ЦППК_ОценкаВыполнения);
	НоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НоваяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	НоваяГруппа.ОтображатьЗаголовок = Ложь;
	
	КартинкаЗвезды = БиблиотекаКартинок.ОформлениеЗвездаПустая;
	
	Для Счетчик = 1 По 5 Цикл
		
		// Декорация картинка "ЦППК_Звезда".
		НовыйЭлемент = Элементы.Добавить("ЦППК_Звезда" + Строка(Счетчик), Тип("ДекорацияФормы"), Элементы.ЦППК_ГруппаЗвезды);
		НовыйЭлемент.Вид = ВидДекорацииФормы.Картинка;
		НовыйЭлемент.Гиперссылка = Истина;
		НовыйЭлемент.Картинка = КартинкаЗвезды;
		НовыйЭлемент.УстановитьДействие("Нажатие", "ЦППК_ОбработкаЗвезды");
		
	КонецЦикла;
	
	// Поле ввода "ЦППК_ЗначениеОценки".
	НовыйЭлемент = Элементы.Добавить("ЦППК_ЗначениеОценки", Тип("ПолеФормы"), Элементы.ЦППК_ОценкаВыполнения);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеНадписи;
	НовыйЭлемент.ПутьКДанным = "ЦППК_ВыбраннаяОценка";
	НовыйЭлемент.Ширина = 1; 
	
	
	
КонецПроцедуры 

Процедура ЦППК_ДобавитьЭлементыФормы_ВидыДокументов(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	
 	// флажок ЦППК_УчитыватьВноситИзменения  Котляров 20250630 САНФ-034810
	НовыйЭлемент = Элементы.Вставить("ЦППК_УчитыватьВноситИзменения", Тип("ПолеФормы"), 
																	  Элементы.ГруппаДополнительныеНастройки, Элементы.ФормаДокумента);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
	НовыйЭлемент.ПутьКДанным = "Объект.ЦППК_УчитыватьВноситИзменения";
	НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	НовыйЭлемент.Заголовок = "Учитывать изменяющие документы";

КонецПроцедуры

Процедура ДобавитьЭлементыВноситИзменения(Форма) Экспорт
	
	// Котляров 30,06,2025 САНФ-034810
	Элементы = Форма.Элементы;
	Если Элементы.Найти("ЦППК_ПолеНадписиВноситИзменения") = Неопределено Тогда	
		НовыйЭлемент = Элементы.Вставить("ЦППК_ПолеНадписиВноситИзменения", Тип("ДекорацияФормы"), 
																			Элементы.ГруппаРеквизиты, Элементы.ГрифДоступа);
		НовыйЭлемент.Вид = ВидДекорацииФормы.Надпись;
		НовыйЭлемент.Гиперссылка = Истина;
		НовыйЭлемент.Заголовок = "Вносит изменения в ";
		НовыйЭлемент.УстановитьДействие("Нажатие", "ЦППК_ПолеНадписиВноситИзменения_Нажатие");
		НовыйЭлемент.Видимость = Ложь;

		НоваяГруппа = Элементы.Вставить("ТТС_ГруппаИзменен", Тип("ГруппаФормы"), 
															 Элементы.ГруппаРеквизиты, Элементы.ЦППК_ПолеНадписиВноситИзменения);	
		НоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		НоваяГруппа.Отображение = ОтображениеОбычнойГруппы.Нет;
		НоваяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		НоваяГруппа.Поведение = ПоведениеОбычнойГруппы.Обычное;
		
			НовыйЭлемент = Элементы.Добавить("Изменен", Тип("ПолеФормы"), Элементы.ТТС_ГруппаИзменен);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
			НовыйЭлемент.ПутьКДанным = "Объект.ЦППК_Изменен"; 
			НовыйЭлемент.Заголовок = "Изменен     " + Символы.НПП; 
			НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
			НовыйЭлемент.Видимость = Ложь;
			
			ИзмененВСоответствии = "ИзмененВСоответствии";
			СоздатьРеквизит(Форма, ИзмененВСоответствии ,ОписаниеТипаСправочник("ДокументыПредприятия"));
			НовыйЭлемент = Элементы.Добавить(ИзмененВСоответствии, Тип("ПолеФормы"), Элементы.ТТС_ГруппаИзменен);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
			НовыйЭлемент.Видимость = Ложь;
			НовыйЭлемент.Доступность = Ложь;
			НовыйЭлемент.ПутьКДанным = ИзмененВСоответствии;
			НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			НовыйЭлемент.Ширина = 100;
			
			СоздатьРеквизит(Форма, "ИзмененВСоответствииСтрока" ,ОписаниеТипаСправочник("ДокументыПредприятия"));
		
	КонецЕсли;

КонецПроцедуры


#КонецОбласти

#Область СозданиеРеквизитовЭлементов_Служебная
// Котляров 07.09.2025 
// В рамках задачи САНФ-034810  добавленны универсальные функции
#Область ОписаниеТипов

// Создание типа "Булево"
// Возвращаемое значение:
// ОписаниеТипов
//
Функция ОписаниеТипаБулево() Экспорт
	
	Возврат Новый ОписаниеТипов("Булево");	
	
КонецФункции

// Создание описания ссылочного типа справочника
//
// Параметры:
//  ИмяДокумента - Строка - Имя документа в дереве метаданных
// Возвращаемое значение:
// ОписаниеТипов
//
Функция ОписаниеТипаДокумент(ИмяДокумента) Экспорт
	
	Возврат Новый ОписаниеТипов("ДокументСсылка." + ИмяДокумента);	
	
КонецФункции

// Создание описания ссылочного типа справочника
//
// Параметры:
//  ИмяСправочника - Строка - Имя справочника в дереве метаданных
// Возвращаемое значение:
// ОписаниеТипов
//
Функция ОписаниеТипаСправочник(ИмяСправочника) Экспорт
	
	Возврат Новый ОписаниеТипов("СправочникСсылка." + ИмяСправочника);	
	
КонецФункции

	
#КонецОбласти


// Создание одного реквизита
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - Форма на которой создаются элементы
//  ИмяРеквизита - Строка - Имя реквизита
//	ОписаниеТипа - ОписаниеТипа - Описание типа реквизита
//
Процедура СоздатьРеквизит(Форма, ИмяРеквизита, ОписаниеТипа) Экспорт
	
	структураРеквизитов = Новый Структура;
	структураРеквизитов.Вставить(ИмяРеквизита,ОписаниеТипа);
	СоздатьРеквизиты(Форма,структураРеквизитов); 
	
КонецПроцедуры

 // Создание реквизитов
 // Параметры:
 //   Форма - ФормаКлиентскогоПриложения - Форма на которой создаются элементы 
 // структураРеквизитов - Структура - Где ключ это Имя реквизита, а значение это описание типа реквизита
 //
Процедура СоздатьРеквизиты(Форма, структураРеквизитов) Экспорт
	
	ДобавляемыеРеквизиты = Новый Массив;
	Для Каждого тРеквизит Из структураРеквизитов Цикл 
		НовыйРеквизит = Новый РеквизитФормы(тРеквизит.Ключ,тРеквизит.Значение); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит); 
	КонецЦикла;
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты); 
	
КонецПроцедуры


// Вспомогательная процедура для добавления реквизита таблицы значений 
// Параметры:
//	МассивРеквизитов - Массив - добавляемых реквизитов формы
//	ИмяТаблицы	- Строка - Имя добавляемой таблицы
//	ТипТаблицы	- Строка - ТаблицаЗначений
//	ТипСправочника	- Строка - Спр.ДокументыПредприятия
//
Процедура ДобавитьРеквизитТаблицы(	МассивРеквизитов, 
									ИмяТаблицы, 
									ТипТаблицы, 
									ТипСправочника)
									
	РеквизитТаблицы = Новый РеквизитФормы(ИмяТаблицы, Новый ОписаниеТипов(ТипТаблицы));
	МассивРеквизитов.Добавить(РеквизитТаблицы);
	
	КолонкаДокумент = Новый РеквизитФормы("Документ", ОписаниеТипаСправочник(ТипСправочника), ИмяТаблицы);
	МассивРеквизитов.Добавить(КолонкаДокумент);
	
	КолонкаДатаИзменения = Новый РеквизитФормы("ДатаИзменения", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата), ИмяТаблицы);
	МассивРеквизитов.Добавить(КолонкаДатаИзменения);
	
	КолонкаУжеУстановлен = Новый РеквизитФормы("УжеУстановлен", ОписаниеТипаБулево(), ИмяТаблицы);	
	МассивРеквизитов.Добавить(КолонкаУжеУстановлен);
	
	КолонкаИсточник = Новый РеквизитФормы("Источник", ОбщегоНазначения.ОписаниеТипаСтрока(50), ИмяТаблицы);	
	МассивРеквизитов.Добавить(КолонкаИсточник);
КонецПроцедуры
#КонецОбласти 


