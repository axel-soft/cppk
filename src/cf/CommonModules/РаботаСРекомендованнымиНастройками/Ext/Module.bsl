////////////////////////////////////////////////////////////////////////////////
// Модуль для работы с рекомендованными настройками (сервер).
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Сохраняет настройки формы текущего пользователя как рекомендованные.
//
// Параметры:
//  ИмяФорма                    - Строка - Полное имя формы.
//  КлючНазначенияИспользования - Строка - Ключ назначения использования.
//
Процедура СохранитьНастройкиКакРекомендованные(ИмяФормы, КлючНазначенияИспользования) Экспорт
	
	РекомендованныеНастройки = РекомендованныеНастройки();
	
	ТекущийПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
	ОтборНастроекПользователя = Новый Структура("Пользователь", ТекущийПользовательИБ.Имя);
	ВыборкаНастроекПользователя = ХранилищеСистемныхНастроек.Выбрать(ОтборНастроекПользователя);
	Пока ВыборкаНастроекСледующий(ВыборкаНастроекПользователя) Цикл
		
		СтруктураКлючаНастройки = СтруктураКлючаНастройки(ВыборкаНастроекПользователя.КлючОбъекта);
		
		// Проверим, что это настройка нужной формы с нужным назначением использования.
		Если СтруктураКлючаНастройки.ИмяФормы <> ИмяФормы
			Или СтруктураКлючаНастройки.КлючНазначенияИспользования <> КлючНазначенияИспользования Тогда
			Продолжить;
		КонецЕсли;
		
		// Проверим, что это обрабатываем настройка.
		ВариантыТермаНастройки = ВариантыТермовОбрабатываемыхНастроек().Найти(СтруктураКлючаНастройки.ТермНастройки);
		Если ВариантыТермаНастройки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		// Это нужная настройки - поместим её в рекомендованные настройки.
		Если ВариантыТермаНастройки.РусскийВариант = "ТекущиеПользовательскиеНастройки" Тогда
			
			РекомендованныеНастройки.ТекущиеПользовательскиеНастройки[СтруктураКлючаНастройки.ИмяРеквизита] =
				ВыборкаНастроекПользователя.Настройки;
			
		Иначе
			
			РекомендованныеНастройки[ВариантыТермаНастройки.РусскийВариант] = ВыборкаНастроекПользователя.Настройки;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаписатьРекомендованныеНастройки(ИмяФормы, КлючНазначенияИспользования, РекомендованныеНастройки);
	
КонецПроцедуры

// Устанавливает рекомендованные настройки формы, если они ещё не установлены.
//
// Параметры:
//  ИмяФорма                    - Строка - Полное имя формы.
//  КлючНазначенияИспользования - Строка - Ключ назначения использования.
//
Процедура УстановитьРекомендованныеНастройки(ИмяФормы, КлючНазначенияИспользования) Экспорт
	
	// Если отключено использование рекомендованных настроек либо нет прав - не устанавливаем рекомендованные настройки.
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСохранениеНастроекКакРекомендованных")
		Или Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.РекомендованныеНастройки) Тогда
		Возврат;
	КонецЕсли;
	
	// Если не заданы рекомендованные настройки - не устанавливаем рекомендованные настройки.
	ВерсияРекомендованныхНастроек = РегистрыСведений.РекомендованныеНастройки.ТекущаяВерсияНастроек(
		ИмяФормы,
		КлючНазначенияИспользования);
	Если Не ЗначениеЗаполнено(ВерсияРекомендованныхНастроек) Тогда
		Возврат;
	КонецЕсли;
	
	// Если рекомендованные настройки уже используются - не устанавливаем рекомендованные настройки.
	ИспользуемаяВерсияНастроек = РегистрыСведений.ИспользованиеРекомендованныхНастроек.ТекущаяВерсияНастроек(
		ИмяФормы,
		КлючНазначенияИспользования,
		ПользователиКлиентСервер.ТекущийПользователь());
	Если ВерсияРекомендованныхНастроек = ИспользуемаяВерсияНастроек Тогда
		Возврат;
	КонецЕсли;
	
	// Считываем рекомендованные настройки и устанавливаем их для текущего пользователя.
	ДанныеРекомендованныхНастроек = РегистрыСведений.РекомендованныеНастройки.ПолучитьНастройки(
		ИмяФормы,
		КлючНазначенияИспользования);
	Если ДанныеРекомендованныхНастроек.РекомендованныеНастройки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьНастройки(
		ИмяФормы,
		КлючНазначенияИспользования,
		ДанныеРекомендованныхНастроек.РекомендованныеНастройки,
		ДанныеРекомендованныхНастроек.ВерсияНастроек);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает термы обрабатываемых настроек.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Термы обрабатываемых настроек.
//   * КлючНастройкиРусский    - Строка - Русский вариант терма.
//   * КлючНастройкиАнглийский - Строка - Английский вариант терма.
//
Функция ВариантыТермовОбрабатываемыхНастроек()
	
	ВариантыТермовОбрабатываемыхНастроек = Новый ТаблицаЗначений;
	ВариантыТермовОбрабатываемыхНастроек.Колонки.Добавить("РусскийВариант");
	ВариантыТермовОбрабатываемыхНастроек.Колонки.Добавить("АнглийскийВариант");
	
	ВариантыТермаНастройки = ВариантыТермовОбрабатываемыхНастроек.Добавить();
	ВариантыТермаНастройки.РусскийВариант = "НастройкиФормы";
	ВариантыТермаНастройки.АнглийскийВариант = "FormSettings";
	
	ВариантыТермаНастройки = ВариантыТермовОбрабатываемыхНастроек.Добавить();
	ВариантыТермаНастройки.РусскийВариант = "ТекущиеПользовательскиеНастройки";
	ВариантыТермаНастройки.АнглийскийВариант = "CurrentUserSettings";
	
	ВариантыТермаНастройки = ВариантыТермовОбрабатываемыхНастроек.Добавить();
	ВариантыТермаНастройки.РусскийВариант = "ТекущиеДанные";
	ВариантыТермаНастройки.АнглийскийВариант = "CurrentData";
	
	Возврат ВариантыТермовОбрабатываемыхНастроек;
	
КонецФункции

// Выбирает следующий элемент из выборки настроек,
// с учетом возможной ошибки "Ошибка формата объекта настроек".
// При вызове вне транзакции в случае возникновения ошибки исключение пропускает.
// При вызове в транзакции в случае возникновения ошибки вызывает исключение.
//
// Параметры:
//  ВыборкаНастроекПользователя - СтандартноеХранилищеНастроекВыборка
// 
// Возвращаемое значение:
//  Булево - Выбран следующий элемент.
//
Функция ВыборкаНастроекСледующий(ВыборкаНастроек)
	
	НомерПопытки = 0;
	ОграничениеПопыток = 500;
	ЕстьСледующийЭлемент = Ложь;
	ПолучениеСледующегоЭлементаВыполнено = Ложь;
	
	Пока Не ПолучениеСледующегоЭлементаВыполнено Цикл
		
		НомерПопытки = НомерПопытки + 1;
		Если НомерПопытки >= ОграничениеПопыток Тогда
			ЕстьСледующийЭлемент = Ложь;
			Прервать;
		КонецЕсли;
		
		Попытка
			
			ЕстьСледующийЭлемент = ВыборкаНастроек.Следующий();
			ПолучениеСледующегоЭлементаВыполнено = Истина;
			
		Исключение
			
			Если ТранзакцияАктивна() Тогда
				ВызватьИсключение;
			КонецЕсли;
			
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ТекстЖурналаРегистрации = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
			СобытиеЖурналаРегистрации = НСтр("ru = 'Рекомендованные настройки'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ЗаписьЖурналаРегистрации(
				СобытиеЖурналаРегистрации,
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстЖурналаРегистрации);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат ЕстьСледующийЭлемент;
	
КонецФункции

// Записывает рекомендованные настройки в базу данных от имени текущего пользователя.
//
// Параметры:
//  ИмяФормы                    - Строка    - Полное имя формы.
//  КлючНазначенияИспользования - Строка    - Ключ назначения использования.
//  РекомендованныеНастройки    - Структура - Рекомендованные настройки.
//                                            См. РаботаСРекомендованнымиНастройками.РекомендованныеНастройки().
//
Процедура ЗаписатьРекомендованныеНастройки(ИмяФормы, КлючНазначенияИспользования, РекомендованныеНастройки)
	
	НачатьТранзакцию();
	Попытка
		
		ВерсияНастроек = РегистрыСведений.РекомендованныеНастройки.ЗаписатьНастройки(
			ИмяФормы,
			КлючНазначенияИспользования,
			РекомендованныеНастройки);
		РегистрыСведений.ИспользованиеРекомендованныхНастроек.ЗаписатьИспользованиеНастроек(
			ИмяФормы,
			КлючНазначенияИспользования,
			ПользователиКлиентСервер.ТекущийПользователь(),
			ВерсияНастроек);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Записывает рекомендованные настройки текущему пользователю.
//
// Параметры:
//  ИмяФормы                    - Строка                  - Полное имя формы.
//  КлючНазначенияИспользования - Строка                  - Ключ назначения использования.
//  РекомендованныеНастройки    - Структура               - Рекомендованные настройки.
//                                                          См. РаботаСРекомендованнымиНастройками.РекомендованныеНастройки().
//  ВерсияНастроек              - УникальныйИдентификатор - Версия рекомендованных настроек.
//
Процедура ЗаписатьНастройки(ИмяФормы, КлючНазначенияИспользования, РекомендованныеНастройки, ВерсияНастроек)
	
	ОбработанныеНастройки = Новый Массив;
	
	// Существующие настройки корректируем - лишние настройки удаляем, существующие перезаписываем.
	ТекущийПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
	ОтборНастроекПользователя = Новый Структура("Пользователь", ТекущийПользовательИБ.Имя);
	ВыборкаНастроекПользователя = ХранилищеСистемныхНастроек.Выбрать(ОтборНастроекПользователя);
	Пока ВыборкаНастроекСледующий(ВыборкаНастроекПользователя) Цикл
		
		СтруктураКлючаНастройки = СтруктураКлючаНастройки(ВыборкаНастроекПользователя.КлючОбъекта);
		
		// Проверим, что это настройка нужной формы с нужным назначением использования.
		Если СтруктураКлючаНастройки.ИмяФормы <> ИмяФормы
			Или СтруктураКлючаНастройки.КлючНазначенияИспользования <> КлючНазначенияИспользования Тогда
			Продолжить;
		КонецЕсли;
		
		// Проверим, что это обрабатываем настройка.
		ВариантыТермаНастройки = ВариантыТермовОбрабатываемыхНастроек().Найти(СтруктураКлючаНастройки.ТермНастройки);
		Если ВариантыТермаНастройки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		// Это нужная настройка настройка - запишем её.
		Если ВариантыТермаНастройки.РусскийВариант = "ТекущиеПользовательскиеНастройки" Тогда
			
			РекомендованнаяНастройка =
				РекомендованныеНастройки.ТекущиеПользовательскиеНастройки[СтруктураКлючаНастройки.ИмяРеквизита];
			
		Иначе
			
			РекомендованнаяНастройка = РекомендованныеНастройки[ВариантыТермаНастройки.РусскийВариант];
			
		КонецЕсли;
		
		ЗаписатьНастройку(
			ВыборкаНастроекПользователя.КлючОбъекта,
			ВыборкаНастроекПользователя.КлючНастроек,
			РекомендованнаяНастройка,
			ТекущийПользовательИБ.Имя);
		
		КлючОбъекта = КлючОбъекта(
			ИмяФормы,
			СтруктураКлючаНастройки.ИмяРеквизита,
			КлючНазначенияИспользования,
			ВариантыТермаНастройки.РусскийВариант);
		ОбработанныеНастройки.Добавить(КлючОбъекта);
		
	КонецЦикла;
	
	// Новые настройки добавляем.
	Для Каждого КлючИЗначениеНастройкиФормы Из РекомендованныеНастройки Цикл
		
		РусскийТермНастройки = КлючИЗначениеНастройкиФормы.Ключ;
		Если РусскийТермНастройки = "ТекущиеПользовательскиеНастройки" Тогда
			
			// Рекомендованные настройки списков.
			РекомендованныеНастройкиСписков = КлючИЗначениеНастройкиФормы.Значение;
			Для Каждого КлючИЗначениеНастройкиСписка Из РекомендованныеНастройкиСписков Цикл
				
				// Рекомендованная настройка списка.
				ИмяРеквизитаСписка = КлючИЗначениеНастройкиСписка.Ключ;
				РекомендованнаяНастройка = КлючИЗначениеНастройкиСписка.Значение;
				
				// Если настройка уже обработали ранее - пропустим её.
				КлючОбъекта = КлючОбъекта(ИмяФормы, ИмяРеквизитаСписка, КлючНазначенияИспользования, РусскийТермНастройки);
				Если ОбработанныеНастройки.Найти(КлючОбъекта) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				ЗаписатьНастройку(КлючОбъекта, "", РекомендованнаяНастройка, ТекущийПользовательИБ.Имя);
				
			КонецЦикла;
			
		Иначе
			
			// Рекомендованная настройка формы.
			РекомендованнаяНастройка = КлючИЗначениеНастройкиФормы.Значение;
			
			// Если настройка уже обработали ранее - пропустим её.
			КлючОбъекта = КлючОбъекта(ИмяФормы, "", КлючНазначенияИспользования, РусскийТермНастройки);
			Если ОбработанныеНастройки.Найти(КлючОбъекта) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаписатьНастройку(КлючОбъекта, "", РекомендованнаяНастройка, ТекущийПользовательИБ.Имя);
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Отмечаем что пользователю выданы нужные настройки.
	РегистрыСведений.ИспользованиеРекомендованныхНастроек.ЗаписатьИспользованиеНастроек(
		ИмяФормы,
		КлючНазначенияИспользования,
		ПользователиКлиентСервер.ТекущийПользователь(),
		ВерсияНастроек);
	
КонецПроцедуры

// Записывает рекомендованные настройки текущему пользователю.
//
// Параметры:
//  КлючОбъекта              - Строка       - Ключ объекта настройки.
//  КлючНастроек             - Строка       - Ключ сохраняемых настроек.
//  РекомендованнаяНастройка - Произвольный - Рекомендованная настройка.
//  ИмяПользователяИБ        - Строка       - Имя пользователя информационной базы, настройки которого сохраняются.
//
Процедура ЗаписатьНастройку(КлючОбъекта, КлючНастроек, РекомендованнаяНастройка, ИмяПользователяИБ)
	
	Если РекомендованнаяНастройка = Неопределено Тогда
		// Удаление лишней настройки.
		ХранилищеСистемныхНастроек.Удалить(
			КлючОбъекта,
			КлючНастроек,
			ИмяПользователяИБ);
	Иначе
		// Корректировка нужной настройки.
		ХранилищеСистемныхНастроек.Сохранить(
			КлючОбъекта,
			КлючНастроек,
			РекомендованнаяНастройка,,
			ИмяПользователяИБ);
	КонецЕсли;
	
КонецПроцедуры

// Формирует ключ объекта настройки.
//
// Параметры:
//   * ИмяФормы                    - Строка - Полное имя формы.
//   * ИмяРеквизита                - Строка - Имя реквизита.
//   * КлючНазначенияИспользования - Строка - Ключ назначения использования.
//   * ТермНастройки               - Строка - Терм настройки. 
// 
// Возвращаемое значение:
//  Строка - Ключ объекта настройки.
//
Функция КлючОбъекта(ИмяФормы, ИмяРеквизита, КлючНазначенияИспользования, ТермНастройки)
	
	МассивКлючаОбъекта = Новый Массив;
	
	// Имя формы.
	МассивКлючаОбъекта.Добавить(ИмяФормы);
	
	// Имя реквизита.
	Если ЗначениеЗаполнено(ИмяРеквизита) Тогда
		МассивКлючаОбъекта.Добавить(".");
		МассивКлючаОбъекта.Добавить(ИмяРеквизита);
	КонецЕсли;
	
	// Ключ назначения использования.
	Если ЗначениеЗаполнено(КлючНазначенияИспользования) Тогда
		МассивКлючаОбъекта.Добавить("/");
		МассивКлючаОбъекта.Добавить(КлючНазначенияИспользования);
	КонецЕсли;
	
	// Терм настройки.
	МассивКлючаОбъекта.Добавить("/");
	МассивКлючаОбъекта.Добавить(ТермНастройки);
	
	КлючОбъекта = СтрСоединить(МассивКлючаОбъекта);
	
	Возврат КлючОбъекта;
	
КонецФункции

// Структура рекомендованных настроек.
// 
// Возвращаемое значение:
//  Структура - Рекомендованные настройки.
//   * НастройкиФормы                   - НастройкиФормы, Неопределено - Рекомендованные настройки внешнего вида формы.
//   * ТекущиеДанные                    - Соответствие, Неопределено   - Рекомендованные значения полей формы.
//   * ТекущиеПользовательскиеНастройки - Соответствие, Неопределено   - Рекомендованные настройки динамических списка.
//      ** Ключ     - Строка                                    - Имя реквизита динамического списка.
//      ** Значение - ПользовательскиеНастройкиКомпоновкиДанных - Рекомендованные настройки динамического списка.
//
Функция РекомендованныеНастройки()
	
	РекомендованныеНастройки = Новый Структура("НастройкиФормы, ТекущиеДанные, ТекущиеПользовательскиеНастройки");
	РекомендованныеНастройки.ТекущиеПользовательскиеНастройки = Новый Соответствие;
	
	Возврат РекомендованныеНастройки;
	
КонецФункции

// Разбирает ключ настройки.
//
// Параметры:
//  КлючНастройки - Строка - Ключ настройки.
// 
// Возвращаемое значение:
//  Структура - Структура ключа настройки.
//   * ИмяФормы                    - Строка - Полное имя формы.
//   * ИмяРеквизита                - Строка - Имя реквизита.
//   * КлючНазначенияИспользования - Строка - Ключ назначения использования.
//   * ТермНастройки               - Строка - Терм настройки.
//
Функция СтруктураКлючаНастройки(КлючНастройки)
	
	СтруктураКлючаНастройки = Новый Структура("ИмяФормы, ИмяРеквизита, КлючНазначенияИспользования, ТермНастройки");
	СтруктураКлючаНастройки.ИмяФормы = "";
	СтруктураКлючаНастройки.КлючНазначенияИспользования = "";
	СтруктураКлючаНастройки.ИмяРеквизита = "";
	СтруктураКлючаНастройки.ТермНастройки = "";
	
	// Известные структуры ключей настройки состоят из двух или трёх частей.
	ЧастиКлючаНастройки = СтрРазделить(КлючНастройки, "/");
	КоличествоЧастейКлюча = ЧастиКлючаНастройки.Количество();
	Если КоличествоЧастейКлюча <> 2 И КоличествоЧастейКлюча <> 3 Тогда
		Возврат СтруктураКлючаНастройки;
	КонецЕсли;
	
	ИмяФормы = ЧастиКлючаНастройки[0];
	ТермНастройки = ЧастиКлючаНастройки[ЧастиКлючаНастройки.ВГраница()];
	КлючНазначенияИспользования = ?(КоличествоЧастейКлюча = 3, ЧастиКлючаНастройки[1], "");
	
	ИмяРеквизита = "";
	Если ТермНастройки = "ТекущиеПользовательскиеНастройки" Тогда
		
		ЧастиПутиРеквизита = СтрРазделить(ИмяФормы, ".");
		ИмяРеквизита = ЧастиПутиРеквизита[ЧастиПутиРеквизита.ВГраница()];
		ИмяФормы = СтрЗаменить(ИмяФормы, "." + ИмяРеквизита, "");
		
	КонецЕсли;
	
	// Только для корректных настроек формируем структуру.
	Если Не ЗначениеЗаполнено(ИмяФормы)
		Или Не ЗначениеЗаполнено(ТермНастройки) 
		Или СтруктураКлючаНастройки.ТермНастройки = "ТекущиеПользовательскиеНастройки" И Не ЗначениеЗаполнено(ИмяРеквизита) Тогда
		Возврат СтруктураКлючаНастройки;
	КонецЕсли;
	
	СтруктураКлючаНастройки.ИмяФормы = ИмяФормы;
	СтруктураКлючаНастройки.ИмяРеквизита = ИмяРеквизита;
	СтруктураКлючаНастройки.КлючНазначенияИспользования = КлючНазначенияИспользования;
	СтруктураКлючаНастройки.ТермНастройки = ТермНастройки;
	
	Возврат СтруктураКлючаНастройки;
	
КонецФункции

#КонецОбласти