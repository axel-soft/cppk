//  Содержит код типовых сценариев.

#Область СлужебныйПрограммныйИнтерфейс

	// Сценарий создания документа предприятия.
	// 
	// Параметры:
	//  РеквизитыДокумента - см. НагрузочноеТестирование.НовыйРеквизитыДокумента
	// 
	// Возвращаемое значение:
	//  Массив из см. НагрузочноеТестирование.НовыйШагСценария
	Функция СозданиеДокумента(РеквизитыДокумента) Экспорт
		
		Сценарий = СозданиеДокументаБезЗакрытияФормы(РеквизитыДокумента, Ложь);
		
		// Не выполняем сценарий при отсутствии соответствующих прав.
		Если Сценарий.Количество() = 0 Тогда
			Возврат Сценарий;
		КонецЕсли;
		
		
		// Закрытие формы документа предприятия.
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ЗакрытьФорму");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента");
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(2, 5);
		
		
		// Здесь может открыться окно, предлагающее запустить в обработку, нажмем в нем "не запускать":
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "ОбщаяФорма.ОповещениеПриИнтерактивномАвтоЗапускеОбработки");
		НовыйШаг.Параметры.Вставить("ИмяКоманды", "НеЗапускать");
		НовыйШаг.Параметры.Вставить("ИгнорироватьОтсутствиеФормы", Истина); // форма может и не открыться...
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 2);
		
		
		// Здесь может открыться окно, предлагающее зарегистрировать незарегистрированный документ, но у пользователя на
		// это может не хватать прав, поэтому команда "не регистрировать":
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "ОбщаяФорма.ПредупреждениеПриЗакрытииНезарегистрированного");
		НовыйШаг.Параметры.Вставить("ИмяКоманды", "НеРегистрировать");
		НовыйШаг.Параметры.Вставить("ИгнорироватьОтсутствиеФормы", Истина); // форма может и не открыться...
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 2);
		
		
		Возврат Сценарий;
		
	КонецФункции
	
	// Сценарий создания документа предприятия и запуск в обработку.
	// 
	// Параметры:
	//  РеквизитыДокумента - см. НагрузочноеТестирование.НовыйРеквизитыДокумента
	// 
	// Возвращаемое значение:
	//  Массив из см. НагрузочноеТестирование.НовыйШагСценария
	Функция СозданиеДокументаСОбработкой(РеквизитыДокумента) Экспорт
		
		Сценарий = СозданиеДокументаБезЗакрытияФормы(РеквизитыДокумента, Истина);
		
		// Не выполняем сценарий при отсутствии соответствующих прав.
		Если Сценарий.Количество() = 0 Тогда
			Возврат Сценарий;
		КонецЕсли;
		
		
		// Переключение на закладку "Обработка":
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ПереключитьТекущийЭлемент");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента");
		НовыйШаг.Параметры.Вставить("ТекущийЭлемент", "СтраницаОбработка");
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(3, 6);
		
		
		// Команда "Заполнить" на закладке "Обработка" - перезаполнение действий:
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы", 1);
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента");
		НовыйШаг.Параметры.Вставить("ИмяКоманды", "ДействияЗаполнить");
		
		
		#Область ВыборУчастникаВКарточкеДействия
			// На закладке "Обработка" заходим в первое действие в дереве:
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ОткрытьПервоеДействиеУчастника");
			НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 3);
			
			
			// В открывшейся форме действия меняется первый найденный участник на случайного
			// если нет участников, добавляется случайный:
			БросокМонетки = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 2);
			СлучайныйУчастник = Неопределено;
			Если БросокМонетки = 1 Тогда
				СлучайныйУчастник = НагрузочноеТестирование.СлучайныйЭлементСправочника("Сотрудники");
			Иначе
				// пусть с вероятностью 50% задачу ставит самому себе, чтобы самому их потом и выполнять в тесте:
				СлучайныйУчастник = Сотрудники.ОсновнойСотрудник();
			КонецЕсли;
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыбратьУчастникаВФормуДействия");
			НовыйШаг.Параметры.Вставить("Участник", СлучайныйУчастник);
			НовыйШаг.Параметры.Вставить("ИгнорироватьНевыполнение", Истина);
			НовыйШаг.Параметры.Вставить("ИгнорироватьОтсутствиеФормы", Истина); // форма может и не открыться...
			НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(3, 9);
			
			
			// Закрывает форму действия, имитируя нажатие кнопки "Готово", в результате обновляется дерево участников в
			// форме-владельце "документа предприятия":
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ЗаписатьИЗакрытьФормуДействия");
			НовыйШаг.Параметры.Вставить("ИгнорироватьНевыполнение", Истина);
			НовыйШаг.Параметры.Вставить("ИгнорироватьОтсутствиеФормы", Истина); // форма может и не открыться...
			НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 3);
		#КонецОбласти
		
		
		// Отправка документа в обработку:
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы", 3);
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента");
		НовыйШаг.Параметры.Вставить("ИмяКоманды", "ДействияОтправить");
		
		
		// Закрытие формы документа предприятия.
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ЗакрытьФорму");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента");
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(2, 5);
		
		
		// Здесь может открыться окно, предлагающее запустить в обработку, нажмем в нем "не запускать"
		// (запуск тестируется еще до закрытия формы):
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "ОбщаяФорма.ОповещениеПриИнтерактивномАвтоЗапускеОбработки");
		НовыйШаг.Параметры.Вставить("ИмяКоманды", "НеЗапускать");
		НовыйШаг.Параметры.Вставить("ИгнорироватьОтсутствиеФормы", Истина); // форма может и не открыться...
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 2);
		
		
		// Здесь может открыться окно, предлагающее зарегистрировать незарегистрированный документ
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "ОбщаяФорма.ПредупреждениеПриЗакрытииНезарегистрированного");
		НовыйШаг.Параметры.Вставить("ИмяКоманды", "НеРегистрировать");
		НовыйШаг.Параметры.Вставить("ИгнорироватьОтсутствиеФормы", Истина); // форма может и не открыться...
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 2);
		
		
		Возврат Сценарий;
		
	КонецФункции
	
	// Сценарий выполнения задачи.
	// Случайным образом выполняется один из сценариев:
	// - Выполнение задачи из "Задачи мне";
	// - Выполнение задачи из формы документа "Действие задачи"
	// 
	// Возвращаемое значение:
	//  Массив из см. НагрузочноеТестирование.НовыйШагСценария
	Функция ВыполнениеЗадачи() Экспорт
		
		Сценарий = Новый Массив();
		
		// Не выполняем сценарий при отсутствии соответствующих прав.
		Если Не ПравоДоступа("Добавление", Метаданные.Документы.ДействиеЗадачи) Тогда
			Возврат Сценарий;
		КонецЕсли;
		
		
		// Открытие формы "Задачи мне":
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ОткрытьФорму");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Документ.Задача.Форма.Задачи");
		ПараметрыФормы = Новый Структура("КлючНазначенияИспользования", "ЗадачиМне");
		НовыйШаг.Параметры.Вставить("ПараметрыФормы", ПараметрыФормы);
		НовыйШаг.Параметры.Вставить("ЗакрытьОткрытуюФорму", Истина); // вдруг открыта форма, но не в режиме "ЗадачиМне"
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(2, 5);
		
		
		// Переключение на динамический список действий задач:
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ПереключитьТекущийЭлемент");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Документ.Задача.Форма.Задачи");
		НовыйШаг.Параметры.Вставить("ТекущийЭлемент", "СписокДействияЗадач");
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 2);
		
		
		// Спозиционироваться на первой задаче и активизировать обработчик "ПриАктивизацииСтроки", чтобы она корректно
		// выделилась:
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Документ.Задача.Форма.Задачи");
		НовыйШаг.Параметры.Вставить("ИмяКоманды", "ВстатьНаПервуюЗадачу");
		НовыйШаг.Параметры.Вставить("ИгнорироватьНевыполнение", Истина);
		// Здесь пауза побольше, уменьшать не рекомендуется, при большой нагрузке позиционирование на задаче и
		// обновление области просмотра может занимать много времени:
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(4, 8);
		
		
		Автокомментарий = СтрШаблон(
			НСтр("ru = 'Автоматический комментарий согласования %1'"), Новый УникальныйИдентификатор());
		
		БросокМонетки = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 2);
		Если БросокМонетки = 1 Тогда
			// Заполнение комментария согласования на форме "Задач мне":
			Реквизиты = Новый Соответствие();
			Реквизиты.Вставить("РезультатДействияТекстом", Автокомментарий);
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ЗаполнитьРеквизитыФормы");
			НовыйШаг.Параметры.Вставить("ИмяФормы", "Документ.Задача.Форма.Задачи");
			НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
			НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(4, 7);
			
			
			// Вызов реакции на изменение комментарий согласования (запись в документ "Действие задачи"):
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВызватьОбработчикПоляФормы");
			НовыйШаг.Параметры.Вставить("ИмяФормы", "Документ.Задача.Форма.Задачи");
			НовыйШаг.Параметры.Вставить("ИмяОбработчика", "РезультатДействияТекстомПриИзменении");
			НовыйШаг.Параметры.Вставить("ИгнорироватьНевыполнение", Истина); // Если список задач пустой.
			
			
			// Выполнить первый вариант согласования, нажав первую кнопку из возможных трех (в зависимости от вида
			// действия, например "Согласовано", "Согласовано с замечаниями", "Не согласовано"):
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
			НовыйШаг.Параметры.Вставить("ИмяФормы", "Документ.Задача.Форма.Задачи");
			НовыйШаг.Параметры.Вставить("ИмяКоманды", "ВыполнитьДействиеЗадачиВариант1");
			НовыйШаг.Параметры.Вставить("ИгнорироватьНевыполнение", Истина);
			НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(4, 7);
		Иначе
			// Открыть "Действие задачи" отдельным окном:
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВызватьОбработчикПоляФормы");
			НовыйШаг.Параметры.Вставить("ИмяФормы", "Документ.Задача.Форма.Задачи");
			НовыйШаг.Параметры.Вставить("ИмяОбработчика", "СписокДействияЗадачВыбор");
			НовыйШаг.Параметры.Вставить("ИгнорироватьНевыполнение", Истина); // Если список задач пустой, то не откроет
			НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(4, 7);
			
			
			// Заполнение комментария согласования на форме "Действия задачи":
			Реквизиты = Новый Соответствие();
			Реквизиты.Вставить("РезультатДействияТекстом", Автокомментарий);
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ЗаполнитьРеквизитыФормы");
			НовыйШаг.Параметры.Вставить("ИмяФормы", "Документ.ДействиеЗадачи.Форма.ФормаЭлемента");
			НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
			НовыйШаг.Параметры.Вставить("ИгнорироватьОтсутствиеФормы", Истина); // форма могла и не открыться...
			НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(4, 7);
			
			
			// Вызов реакции на изменение комментарий согласования (запись в документ "Действие задачи"):
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВызватьОбработчикПоляФормы");
			НовыйШаг.Параметры.Вставить("ИмяФормы", "Документ.ДействиеЗадачи.Форма.ФормаЭлемента");
			НовыйШаг.Параметры.Вставить("ИмяОбработчика", "РезультатДействияТекстомПриИзменении");
			НовыйШаг.Параметры.Вставить("ИгнорироватьОтсутствиеФормы", Истина); // форма могла и не открыться...
			
			
			// Выполнить первый вариант согласования, нажав первую кнопку из возможных трех (в зависимости от вида
			// действия, например "Согласовано", "Согласовано с замечаниями", "Не согласовано"):
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
			НовыйШаг.Параметры.Вставить("ИмяФормы", "Документ.ДействиеЗадачи.Форма.ФормаЭлемента");
			НовыйШаг.Параметры.Вставить("ИмяКоманды", "ВыполнитьДействиеЗадачиВариант1");
			НовыйШаг.Параметры.Вставить("ИгнорироватьОтсутствиеФормы", Истина); // форма могла и не открыться...
			НовыйШаг.Параметры.Вставить("ИгнорироватьНевыполнение", Истина);
			НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(4, 7);
		КонецЕсли;
		
		
		// Здесь может открыться окно, предлагающее выбрать фактического исполнителя задачи
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "ОбщаяФорма.ВыборФактическогоИсполнителяЗадачи");
		НовыйШаг.Параметры.Вставить("ИмяКоманды", "Выбрать");
		НовыйШаг.Параметры.Вставить("ИгнорироватьОтсутствиеФормы", Истина); // форма может и не открыться...
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 2);
		
		
		// Также может открыться форма, уточняющая выбор подписывающего
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВызватьОбработчикПоляФормы");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДействияПодписания.Форма.ФормаВыбораПодписывающего");
		НовыйШаг.Параметры.Вставить("ИмяОбработчика", "ПодписывающиеВыборЗначения");
		НовыйШаг.Параметры.Вставить("ИгнорироватьОтсутствиеФормы", Истина); // форма может и не открыться...
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 2);
		
		
		Возврат Сценарий;
		
	КонецФункции
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
	// Сценарий создания документа предприятия.
	// 
	// Параметры:
	//  РеквизитыДокумента - см. НагрузочноеТестирование.НовыйРеквизитыДокумента
	//  СОбработкой - Булево - Документ создать с обработкой.
	// 
	// Возвращаемое значение:
	//  Массив из см. НагрузочноеТестирование.НовыйШагСценария
	Функция СозданиеДокументаБезЗакрытияФормы(РеквизитыДокумента, СОбработкой = Ложь)
		
		Сценарий = Новый Массив();
		
		// Не выполняем сценарий при отсутствии соответствующих прав.
		Если Не ПравоДоступа("Добавление", Метаданные.Справочники.ДокументыПредприятия) Тогда
			Возврат Сценарий;
		КонецЕсли;
		
		
		// Открытие формы списка документов предприятия.
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ОткрытьФорму");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаСпискаСПапками");
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(2, 5);
		
		
		// Переключение режима просмотра в форме списка документов предприятия.
		ВидПросмотра = НагрузочноеТестирование.СлучайныйВидПросмотраСпискаДокументовПредприятия();
		Реквизиты = Новый Соответствие();
		Реквизиты.Вставить("ВидПросмотра*", ВидПросмотра);
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаСпискаСПапками");
		НовыйШаг.Параметры.Вставить("ИмяКоманды", "ПереключитьРежимПросмотра");
		НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(2, 5);
		
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПапкиДокументов") Тогда
			Если ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.ПоПапкам Тогда
				// Выбор папки в форме списка документов предприятия.
				НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыбратьПапкуДокумента");
				НовыйШаг.Параметры.Вставить("ПапкаДокумента", РеквизитыДокумента.ПапкаДокумента);
				НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(2, 5);
			КонецЕсли;
		КонецЕсли;
		
		
		// Выполнение команды СоздатьДокумент в форме списка документов предприятия.
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаСпискаСПапками");
		НовыйШаг.Параметры.Вставить("ИмяКоманды", "СоздатьДокумент");
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(2, 5);
		
		
		Если НагрузочноеТестирование.ЕстьДоступныеЭлементыСправочника("ШаблоныДокументов") Тогда
			
			// Выбор шаблона создаваемого документа предприятия.
			ШаблонДокумента = НагрузочноеТестирование.СлучайныйШаблонДокумента(РеквизитыДокумента, СОбработкой);
			Если ЗначениеЗаполнено(ШаблонДокумента) Тогда
				РеквизитыШаблона = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
					ШаблонДокумента, "ВидДокумента, Организация");
				Если ЗначениеЗаполнено(РеквизитыШаблона.ВидДокумента) Тогда
					РеквизитыДокумента.ВидДокумента = РеквизитыШаблона.ВидДокумента;
				КонецЕсли;
				Если ЗначениеЗаполнено(РеквизитыШаблона.Организация) Тогда
					РеквизитыДокумента.Организация = РеквизитыШаблона.Организация;
				КонецЕсли;
			КонецЕсли;
			
			
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыбратьШаблонДокумента");
			НовыйШаг.Параметры.Вставить("Шаблон", ШаблонДокумента);
			НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(4, 8);
			
			
			// Выполнение команды СоздатьПоШаблону в форме выбора шаблона документа.
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
			НовыйШаг.Параметры.Вставить("ИмяФормы", "ОбщаяФорма.СозданиеДокументаПоШаблону");
			НовыйШаг.Параметры.Вставить("ИмяКоманды", "СоздатьПоШаблону");
			НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(2, 4);
			
		Иначе
			
			// Открытие формы документа предприятия.
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ОткрытьФорму");
			НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента");
			НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(2, 4);
			
		КонецЕсли;
		
		
		СоздатьШагиПоЗаполнениюДокумента(Сценарий, РеквизитыДокумента);
		
		
		// Запись, с регистрацией или без:
		Если СОбработкой И Пользователи.РолиДоступны("РегистрацияДокументовПредприятия", , Ложь) Тогда
			// Регистрация документа и запись:
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
			НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента");
			НовыйШаг.Параметры.Вставить("ИмяКоманды", "Зарегистрировать");
			// При регистрации может открыться форма и запись с регистрацией отменится, тогда регистрацию сделаем
			// на следующем шаге из открытой формы-предупреждения:
			НовыйШаг.Параметры.Вставить("ИгнорироватьНевыполнение", Истина); 
			НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 2);
		Иначе
			// Документы без запуска в обработку просто записываем.
			// Выполнение команды Записать формы документа предприятия.
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
			НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента");
			НовыйШаг.Параметры.Вставить("ИмяКоманды", "Записать");
			НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 2);
		КонецЕсли;
		
		
		// Здесь может открыться окно с предупреждением о регистрации:
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "ОбщаяФорма.ПредупреждениеПриРегистрации");
		НовыйШаг.Параметры.Вставить("ИмяКоманды", "Зарегистрировать");
		НовыйШаг.Параметры.Вставить("ИгнорироватьОтсутствиеФормы", Истина); // форма может и не открыться...
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 2);
		
		
		// Здесь может открыться окно, предлагающее запустить в обработку, нажмем в нем "не запускать":
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВыполнитьКомандуФормы");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "ОбщаяФорма.ОповещениеПриИнтерактивномАвтоЗапускеОбработки");
		НовыйШаг.Параметры.Вставить("ИмяКоманды", "НеЗапускать");
		НовыйШаг.Параметры.Вставить("ИгнорироватьОтсутствиеФормы", Истина); // форма может и не открыться...
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(1, 2);
		
		
		Возврат Сценарий;
		
	КонецФункции
	
	// Создать шаги по заполнению документа, с учетом нюансов вида документа и настроек. Процедура является частью
	// предыдущей процедуры по созданию документа, вынесена из нее.
	// 
	// Параметры:
	//  Сценарий - Массив из см. НагрузочноеТестирование.НовыйШагСценария
	//  РеквизитыДокумента - см. НагрузочноеТестирование.НовыйРеквизитыДокумента 
	Процедура СоздатьШагиПоЗаполнениюДокумента(Сценарий, РеквизитыДокумента)
	
		// Шаг заполнения реквизитов - ПЕРВЫЙ ЭТАП.
		Реквизиты = Новый Соответствие();
		Реквизиты.Вставить(
			"Объект.Заголовок*", СтрШаблон(НСтр("ru = 'Документ %1'"), Новый УникальныйИдентификатор()));
		// "ВидДокумента" мог затереться на предыдущем шаге, при выборе шаблона:
		Реквизиты.Вставить("Объект.ВидДокумента*", РеквизитыДокумента.ВидДокумента);
		КэшВидаДокумента = Делопроизводство.КэшВидаДокумента(РеквизитыДокумента.ВидДокумента);
		Реквизиты.Вставить("ВидДокументаКэш*", КэшВидаДокумента); // Вид документа мог измениться, подменяем.
		Реквизиты.Вставить("Объект.Организация*", РеквизитыДокумента.Организация);
		Реквизиты.Вставить("Объект.Контрагент*", РеквизитыДокумента.Контрагент);
		Реквизиты.Вставить("Объект.Папка*", РеквизитыДокумента.ПапкаДокумента);
		Реквизиты.Вставить("Объект.ДатаНачалаДействия", ТекущаяДатаСеанса());
		Реквизиты.Вставить("Объект.ДатаОкончанияДействия", ДобавитьМесяц(ТекущаяДатаСеанса(), 12));
		Реквизиты.Вставить("Объект.ПорядокПродления", Перечисления.ПорядокПродления.АвтоматическиНаГод);
		Реквизиты.Вставить("Объект.ГрифДоступа*", РеквизитыДокумента.ГрифДоступа);
		Реквизиты.Вставить("Объект.ВопросДеятельности", РеквизитыДокумента.ВопросДеятельности);
		СотрудникПользователя = Сотрудники.ОсновнойСотрудник();
		Реквизиты.Вставить("Объект.Ответственный", СотрудникПользователя);
		Реквизиты.Вставить("Объект.Подготовил", СотрудникПользователя);
		Если КэшВидаДокумента.ВестиУчетПоТематикам Тогда
			// Тематика должна соответствовать виду документа, чтоб пройти проверку заполнения:
			СлучайнаяТематика = НагрузочноеТестирование.СлучайныйЭлементМассива(
				НагрузочноеТестирование.ПодходящиеТематики(РеквизитыДокумента.ВидДокумента));
			Реквизиты.Вставить("Объект.Тематика*", СлучайнаяТематика);
		КонецЕсли;
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ЗаполнитьРеквизитыФормы");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента");
		НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(5, 15);
		
		
		// ВидДокумента мог измениться при открытии формы "СозданиеДокументаПоШаблону,т.к. там могут быть не все 
		// доступные шаблоны, поэтому нужно сымитировать изменение вида документа в форме:
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВызватьОбработчикПоляФормы", 0.3);
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента");
		НовыйШаг.Параметры.Вставить("ИмяОбработчика", "ВидИТематикаТекстПриИзменении");
		
		
		// Шаг заполнения реквизитов - ВТОРОЙ ЭТАП.
		// После отработки события При изменении "Вида документа", нужно еще заполнить обязательные поля:
		Реквизиты = Новый Соответствие();
		Реквизиты.Вставить("Объект.ВидДокумента*", РеквизитыДокумента.ВидДокумента); // мог затереться на предыдущем шаге
		Реквизиты.Вставить("ВидДокументаКэш*", КэшВидаДокумента); // Вид документа мог измениться, подменяем.
		Если КэшВидаДокумента.ВестиУчетПоНоменклатуреДел Тогда
			НоменклатураДел = НагрузочноеТестирование.СлучайныйЭлементСправочника("НоменклатураДел");
			Реквизиты.Вставить("Объект.НоменклатураДел*", НоменклатураДел);
			ПоляНД = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
				НоменклатураДел, "ФормаДокументов, Раздел.Подразделение, Организация");
			Если ЗначениеЗаполнено(ПоляНД.ФормаДокументов) Тогда
				Реквизиты.Вставить("Объект.ФормаДокумента*", ПоляНД.ФормаДокументов);
			КонецЕсли;
			Если ЗначениеЗаполнено(ПоляНД.РазделПодразделение) Тогда
				Реквизиты.Вставить("Объект.Подразделение*", ПоляНД.РазделПодразделение);
			КонецЕсли;
			// Организацию в таком случае подменяем везде на организацию из номенклатуры дел:
			РеквизитыДокумента.Организация = ПоляНД.Организация;
			Реквизиты.Вставить("Объект.Организация*", РеквизитыДокумента.Организация);
		КонецЕсли;
		ВестиУчетПоАдресатам = ПолучитьФункциональнуюОпцию(
			"ВестиУчетПоАдресатам", Новый Структура("ВидДокумента", РеквизитыДокумента.ВидДокумента));
		Если ВестиУчетПоАдресатам Тогда
			Реквизиты.Вставить(
				"Объект.Адресат",
				НагрузочноеТестирование.СлучайныйЭлементСправочника("Сотрудники"));
		КонецЕсли;
		Если КэшВидаДокумента.ЯвляетсяВходящейКорреспонденцией Тогда
			Реквизиты.Вставить(
				"АдресатВходящейКорреспонденции",
				НагрузочноеТестирование.СлучайныйЭлементСправочника("Сотрудники"));
		КонецЕсли;
		Если КэшВидаДокумента.ВестиУчетСторон Или КэшВидаДокумента.ЯвляетсяЗаявкойНаОплату Тогда
			Реквизиты.Вставить("Объект.Контрагент*", РеквизитыДокумента.Контрагент);
			Стороны = Новый Массив();
			Сторона = Новый Структура(
				"Сторона, ИндексКартинкиСтороны, ИсходныйНомерСтроки", 
				РеквизитыДокумента.Организация, 2, 1);
			Стороны.Добавить(Сторона);
			Сторона = Новый Структура(
				"Сторона, ИндексКартинкиСтороны, ИсходныйНомерСтроки", 
				РеквизитыДокумента.Контрагент, 2, 2);
			Стороны.Добавить(Сторона);
			Реквизиты.Вставить("Объект.Стороны*", Стороны);
			// Из "Стороны" в "Контрагенты" копируется автоматически.
			
			Если КэшВидаДокумента.ЯвляетсяЗаявкойНаОплату Тогда
				// "Получатель" в "ПередЗаписью в форме" копируется в "Стороны"
				Реквизиты.Вставить("Получатель*", РеквизитыДокумента.Контрагент);
			КонецЕсли;
		Иначе
			// Наоборот, надо очистить ТЧ "Стороны", она может оказаться заполненной из-за перевыбора "Вида документа":
			Реквизиты.Вставить("Объект.Стороны*", Новый Массив());
		КонецЕсли;
		Если КэшВидаДокумента.ЯвляетсяОбращениемОтГраждан Тогда
			Реквизиты.Вставить("ВидОбращения", Перечисления.ВидыОбращенийГраждан.Персональное);
		КонецЕсли;
		Если КэшВидаДокумента.ВестиУчетПоСтатьямДДС Тогда
			СтатьиДдс = Новый Массив();
			Статья = Новый Структура(); // поля соответствуют соответствующей таблице в форме.
			Статья.Вставить(
				"СтатьяДвиженияДенежныхСредств",
				НагрузочноеТестирование.СлучайныйЭлементСправочника("СтатьиДвиженияДенежныхСредств"));
			Статья.Вставить("Сумма", НагрузочноеТестирование.СлучайноеЧислоСразу(1000, 100000));
			Статья.Вставить("СуммаНДС", Окр(Статья.Сумма * 0.2 / 1.2, 2));
			СтатьиДдс.Добавить(Статья);
			Реквизиты.Вставить("СтатьиДвиженияДенежныхСредств*", СтатьиДдс);
			Реквизиты.Вставить("Объект.Сумма*", Статья.Сумма);
			Реквизиты.Вставить("Объект.СуммаНДС*", Статья.СуммаНДС);
		Иначе
			// Наоборот, очистить СтатьиДвиженияДенежныхСредств:
			Реквизиты.Вставить("СтатьиДвиженияДенежныхСредств*", Новый Массив());
			Реквизиты.Вставить("Объект.Сумма*", 0);
			Реквизиты.Вставить("Объект.СуммаНДС*", 0);
		КонецЕсли;
		// Принудительно уберем обязательные роли файлов, тестовые документы пишутся без файлов:
		Для Каждого С Из КэшВидаДокумента.РолиФайлов Цикл
			Если С.Обязательная Тогда
				С.Обязательная = Ложь;
				Реквизиты.Вставить("ВидДокументаКэш*", КэшВидаДокумента);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ЗаполнитьРеквизитыФормы");
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента");
		НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
		НовыйШаг.Пауза = НагрузочноеТестирование.СлучайноеЧислоСразу(9, 18);
		
		
		// Обработчик "ПриИзменении" контрагента, чтобы автоматически заполнились связанные реквизиты:
		НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВызватьОбработчикПоляФормы", 0.3);
		НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента");
		НовыйШаг.Параметры.Вставить("ИмяОбработчика", "КонтрагентПриИзменении");
		
		
		Если КэшВидаДокумента.ВестиУчетПоСтатьямДДС Тогда
			НовыйШаг = НагрузочноеТестирование.ДобавитьШагСценария(Сценарий, "ВызватьОбработчикПоляФормы", 0.3);
			НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента");
			НовыйШаг.Параметры.Вставить("ИмяОбработчика", "СформироватьПредставлениеСтатейДДС");
		КонецЕсли;
		
	КонецПроцедуры

#КонецОбласти