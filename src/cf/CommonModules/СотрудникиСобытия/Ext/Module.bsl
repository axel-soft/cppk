////////////////////////////////////////////////////////////////////////////////
// Сотрудники (события)
//  
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Вызов этой процедуры необходимо разместить в модуле сеанса в процедуре УстановкаПараметровСеанса
// согласно документации.
//
// Параметры:
//  ИменаПараметровСеанса - Массив, Неопределено - имена параметров сеанса для инициализации.
//                                                 Массив устанавливаемых идентификаторов параметров сеанса,
//                                                 которые нужно инициализировать, если обработчик вызывается
//                                                 перед использованием неинициализированных параметров сеанса.
//                                                 Неопределено, если обработчик события вызывается системой при начале сеанса.
//
Процедура УстановкаПараметровСеанса(ИменаПараметровСеанса) Экспорт
	
	Если ИменаПараметровСеанса <>  Неопределено
		И ИменаПараметровСеанса.Найти("СотрудникиПользователя") <> Неопределено Тогда 
		
		Если Сотрудники.СотрудникиПользователя().Количество() = 0
			И Не РольДоступна("ПолныеПрава")
			И Не ПользователиСерверПовтИсп.ПользовательЯвляетсяСлужебным()
			И РаботаСЧатБотомПовтИсп.ЧатБот() <> Пользователи.ТекущийПользователь() Тогда
			
			ВызватьИсключение НСтр("ru = 'Для текущего пользователя нет ни одного действительного сотрудника.
				|Обратитесь к администратору.'");
		КонецЕсли;
		
		ТекПользователь = Пользователи.ТекущийПользователь();
		ПараметрыСеанса.СотрудникиПользователя =
			Новый ФиксированныйМассив(Сотрудники.СотрудникиПоПользователю(ТекПользователь, Ложь));
			
	КонецЕсли;
	
	Если ИменаПараметровСеанса <> Неопределено
		И ИменаПараметровСеанса.Найти("РолиТекущегоПользователя") <> Неопределено Тогда
		
		ПараметрыСеанса.РолиТекущегоПользователя =
			Новый ФиксированныйМассив(
			СотрудникиВызовСервера.РолиТекущегоПользователя());
		
	КонецЕсли;
	
	Если ИменаПараметровСеанса <> Неопределено
		И ИменаПараметровСеанса.Найти("ОсновнойСотрудник") <> Неопределено Тогда
		
		ПараметрыСеанса.ОсновнойСотрудник =
			Сотрудники.ОсновнойСотрудникПользователя();
			
			Если Не ЗначениеЗаполнено(ПараметрыСеанса.ОсновнойСотрудник)
				И Не РольДоступна("ПолныеПрава")
				И Не ПользователиСерверПовтИсп.ПользовательЯвляетсяСлужебным()
				И РаботаСЧатБотомПовтИсп.ЧатБот() <> Пользователи.ТекущийПользователь() Тогда
				
				ВызватьИсключение НСтр("ru = 'Текущий пользователь не связан ни с одним основным сотрудником.
					|Обратитесь к администратору.'");
			КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняется при событии записи физического лица.
// Предназначена для обработки изменений физ. лица, влияющих на связанных сотрудников.
//
// Параметры:
//  ФизЛицо - СправочникОбъект.ФизическиеЛица
//
Процедура ПриЗаписиФизическогоЛица(ФизЛицо) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Сотрудники.Ссылка
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Владелец = &ФизЛицо
		|	И Сотрудники.Наименование <> &НовоеНаименование");
		
	ОбъектМетаданных = Метаданные.Справочники.Сотрудники;
	Если Не МультиязычностьПовтИсп.КонфигурацияИспользуетТолькоОдинЯзык(ОбъектМетаданных.ТабличныеЧасти.Найти("Представления") = Неопределено) Тогда
		
		Если МультиязычностьСервер.ИспользуетсяПервыйДополнительныйЯзык() Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,
				"Сотрудники.Наименование <> &НовоеНаименование",
				"(Сотрудники.Наименование <> &НовоеНаименование ИЛИ Сотрудники.НаименованиеЯзык1 <> &НовоеНаименованиеНаименованиеЯзык1)");
			
			Запрос.УстановитьПараметр("НовоеНаименованиеНаименованиеЯзык1", ФизЛицо.НаименованиеЯзык1);
		КонецЕсли;
		
	КонецЕсли;
		
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо.Ссылка);
	Запрос.УстановитьПараметр("НовоеНаименование", ФизЛицо.Наименование);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
		
		СотрудникОбъект = Выборка.Ссылка.ПолучитьОбъект();
		СотрудникОбъект.Записать();
		
		РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти