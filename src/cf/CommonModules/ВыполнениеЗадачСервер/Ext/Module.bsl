
#Область ПрограммныйИнтерфейс

// Выполняет задачу по правилу эскалации с указанным вариантом выполнения.
//
// Параметры:
//  Задача - ЗадачаСсылка - Ссылка на выполняемую задачу.
//  ВариантВыполнения - Булево - Вариант выполнения - положительный или отрицательный.
//  Комментарий - Строка - Комментарий выполнения задачи.
//  ФактическийИсполнительПолный - СправочникССылка.ФактическиеИсполнители
//
Процедура ВыполнитьЗадачуПоПравилуЭскалации(Задача, ВариантВыполнения, Комментарий,
	ФактическийИсполнительПолный = Неопределено) Экспорт
	
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("РезультатВыполнения", Комментарий);
	ПараметрыВыполнения.Вставить("Исполнитель", Сотрудники.ОсновнойСотрудникПользователя());
	ПараметрыВыполнения.Вставить("ДатаИсполнения", ТекущаяДатаСеанса());
	
	ПараметрыВыполнения.Вставить("ЭтоВыполнениеЗадачиПоЭскалации", Истина);
	
	РеквизитыЗадачи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Задача, "БизнесПроцесс, ТочкаМаршрута");
	БизнесПроцесс = РеквизитыЗадачи.БизнесПроцесс;
	ТочкаМаршрута = РеквизитыЗадачи.ТочкаМаршрута;
	ТочкиМаршрута = ОбщегоНазначения.МенеджерОбъектаПоСсылке(БизнесПроцесс).ТочкиМаршрута;
	
	Если ЗначениеЗаполнено(ФактическийИсполнительПолный) Тогда
		ПараметрыВыполнения.Вставить("ФактическийИсполнительПолный", ФактическийИсполнительПолный);
	КонецЕсли;
	
	Если ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Приглашение") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.Пригласить Тогда
			Если ВариантВыполнения Тогда
				ПараметрыВыполнения.Вставить("РезультатПриглашения",
					Перечисления.РезультатыПриглашения.Принято);
			Иначе
				ПараметрыВыполнения.Вставить("РезультатПриглашения",
					Перечисления.РезультатыПриглашения.НеПринято);
			КонецЕсли;
		ИначеЕсли ТочкаМаршрута = ТочкиМаршрута.Ознакомиться Тогда
			// Не даем возможность автоматически направлять на повторное приглашение.
			Если ВариантВыполнения Тогда
				ПараметрыВыполнения.Вставить("ПодтвердитьПриглашение", Истина);
			Иначе
				ПараметрыВыполнения.Вставить("ОтложитьПриглашение", Истина);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Рассмотрение") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.Рассмотреть Тогда
			// Не даем возможность автоматически отправлять на исполнение или ознакомление.
			ПараметрыВыполнения.Вставить("ВариантРассмотрения",
				Перечисления.ВариантыРассмотрения.Рассмотрено);
		ИначеЕсли ТочкаМаршрута = ТочкиМаршрута.Ознакомиться Тогда
			// Не даем возможность автоматически отправлять на исполнение или ознакомление.
			ПараметрыВыполнения.Вставить("ВариантОбработкиРезолюции",
				Перечисления.ВариантыОбработкиРезолюции.Обработано);
		КонецЕсли;
	ИначеЕсли ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Согласование") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.Согласовать Тогда
			// Не даем возможности автоматически согласовывать с замечаниями.
			Если ВариантВыполнения Тогда
				ПараметрыВыполнения.Вставить("РезультатСогласования",
					Перечисления.РезультатыСогласования.Согласовано);
			Иначе
				ПараметрыВыполнения.Вставить("РезультатСогласования",
					Перечисления.РезультатыСогласования.НеСогласовано);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Подписание") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.Подписать
			Или ТочкаМаршрута = ТочкиМаршрута.ОбеспечитьПодписание  Тогда
			Если ВариантВыполнения Тогда
				ПараметрыВыполнения.Вставить("РезультатПодписания",
					Перечисления.РезультатыПроцессаПодписания.Подписано);
			Иначе
				ПараметрыВыполнения.Вставить("РезультатПодписания",
					Перечисления.РезультатыПроцессаПодписания.НеПодписано);
			КонецЕсли;			
		КонецЕсли;
	ИначеЕсли ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Утверждение") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.Утвердить Тогда
			Если ВариантВыполнения Тогда
				ПараметрыВыполнения.Вставить("РезультатУтверждения",
					Перечисления.РезультатыУтверждения.Утверждено);
			Иначе
				ПараметрыВыполнения.Вставить("РезультатУтверждения",
					Перечисления.РезультатыУтверждения.НеУтверждено);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Регистрация") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.Зарегистрировать Тогда
			// Не даем возможность автоматически регистрировать документ.
			ПараметрыВыполнения.Вставить("РезультатРегистрации", 
				Перечисления.РезультатыРегистрации.НеЗарегистрировано);
		КонецЕсли;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		ЗаблокироватьДанныеДляРедактирования(Задача);
		ЗадачаОбъект = Задача.ПолучитьОбъект();
		ВыполнитьЗадачу(ЗадачаОбъект, ПараметрыВыполнения);
		РазблокироватьДанныеДляРедактирования(Задача);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Выполняет задачу по почте с указанным вариантом выполнения и комментарием.
//
// Параметры:
//  Параметры - Структура, содержит два элемента.
//	 ВариантВыполнения - ПеречислениеСсылка.ВариантыВыполненияПроцессовИЗадач, вариант выполнения задачи.
//	 Комментарий - Строка, комментарий пользователя.
//
Процедура ВыполнитьЗадачуПоПочте(ЗадачаСсылка, Параметры = Неопределено) Экспорт

	ВариантВыполнения = Параметры.ВариантВыполнения;
	
	ПараметрыВыполнения = Новый Структура;
	Если ЗначениеЗаполнено(Параметры.Комментарий) Тогда
		ПараметрыВыполнения.Вставить("РезультатВыполнения", Параметры.Комментарий);
	КонецЕсли;
	
	ПараметрыВыполнения.Вставить("ЭтоВыполнениеЗадачиПоПочте", Параметры.ЭтоВыполнениеЗадачиПоПочте);
	ПараметрыВыполнения.Вставить("ИсполнительЗадачиПоПочте", Параметры.ИсполнительЗадачиПоПочте);
	ПараметрыВыполнения.Вставить("ПользовательИсполнитель", Параметры.ПользовательИсполнитель);
	
	Если Параметры.Свойство("ФактическийИсполнительЗадачи") Тогда
		ПараметрыВыполнения.Вставить("ФактическийИсполнительЗадачи", Параметры.ФактическийИсполнительЗадачи);
	КонецЕсли;

	Если Параметры.Свойство("ФактическийИсполнительПолный") Тогда
		ПараметрыВыполнения.Вставить("ФактическийИсполнительПолный", Параметры.ФактическийИсполнительПолный);
	КонецЕсли;
	
	Если Параметры.Свойство("ВыбранныйПодписывающийИлиЗамещающий") Тогда
		ПараметрыВыполнения.Вставить("ВыбранныйПодписывающийИлиЗамещающий", Параметры.ВыбранныйПодписывающийИлиЗамещающий);
	КонецЕсли;
	
	РеквизитыЗадачи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ЗадачаСсылка, "БизнесПроцесс, ТочкаМаршрута");
	БизнесПроцесс = РеквизитыЗадачи.БизнесПроцесс;
	ТочкаМаршрута = РеквизитыЗадачи.ТочкаМаршрута;
	
	ТочкиМаршрута = ОбщегоНазначения.МенеджерОбъектаПоСсылке(БизнесПроцесс).ТочкиМаршрута;
	
	Если ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Приглашение") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.Пригласить Тогда
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Положительно Тогда
				ПараметрыВыполнения.Вставить("РезультатПриглашения", 
					Перечисления.РезультатыПриглашения.Принято);
			ИначеЕсли ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Отрицательно Тогда
				ПараметрыВыполнения.Вставить("РезультатПриглашения", 
					Перечисления.РезультатыПриглашения.НеПринято);
			КонецЕсли;
		ИначеЕсли ТочкаМаршрута = ТочкиМаршрута.Ознакомиться Тогда
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Положительно Тогда
				ПараметрыВыполнения.Вставить("ПодтвердитьПриглашение", Истина);
			ИначеЕсли ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.ПоложительноСЗамечаниями Тогда
				ПараметрыВыполнения.Вставить("ПовторитьПриглашение", Истина);
			ИначеЕсли ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Отрицательно Тогда
				ПараметрыВыполнения.Вставить("ОтложитьПриглашение", Истина);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Рассмотрение") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.Рассмотреть Тогда
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Положительно Тогда
				ПараметрыВыполнения.Вставить("ВариантРассмотрения",
					Перечисления.ВариантыРассмотрения.Рассмотрено);
			
			ИначеЕсли ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.ПоложительноСЗамечаниями Тогда
				
				ДействиеЗадачи = ДействияВызовСервера.ДействиеИРеквизитыЗадачи(ЗадачаСсылка).Действие;
				
				АктуальныеПомощники = ЗамещающиеИПомощники.ПодходящиеЗамещения(ДействиеЗадачи,
					Перечисления.ВидыЗамещения.Помощники);
				
				ВариантРассмотрения = (?(АктуальныеПомощники.Количество() > 0,
					Перечисления.ВариантыРассмотрения.НаправитьПомощнику,
					Перечисления.ВариантыРассмотрения.НаправитьАвтору));
				
				ПараметрыВыполнения.Вставить("ВариантРассмотрения", ВариантРассмотрения);
			
				Если Не ПараметрыВыполнения.Свойство("ОбрабатывающийРезолюцию") Тогда
					ОбрабатывающийРезолюцию = БизнесПроцессы.Рассмотрение.ОбрабатывающийРезолюцию(
						ЗадачаСсылка, ДействиеЗадачи);
					ПараметрыВыполнения.Вставить("ОбрабатывающийРезолюцию", ОбрабатывающийРезолюцию);
				КонецЕсли;
				
				РаботаСПроцессамиПоДействиямСобытия.ОбработатьДобавлениеОбрабатывающегоРезолюциюВПараметрыВыполнения(
					ЗадачаСсылка, ПараметрыВыполнения.ОбрабатывающийРезолюцию);
				
			КонецЕсли;

		ИначеЕсли ТочкаМаршрута = ТочкиМаршрута.Ознакомиться Тогда
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Положительно Тогда
				ПараметрыВыполнения.Вставить("ВариантОбработкиРезолюции", 
					Перечисления.ВариантыОбработкиРезолюции.Обработано);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.РешениеВопросовВыполненияЗадач") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.ОзнакомлениеСРезультатомРассмотрения Тогда
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Отрицательно Тогда
				ПараметрыВыполнения.Вставить("ОтправитьНаУточнение", Истина);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Согласование") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.Согласовать Тогда
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Положительно Тогда
				ПараметрыВыполнения.Вставить("РезультатСогласования", 
					Перечисления.РезультатыСогласования.Согласовано);
			ИначеЕсли ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Отрицательно Тогда
				ПараметрыВыполнения.Вставить("РезультатСогласования", 
					Перечисления.РезультатыСогласования.НеСогласовано);
			ИначеЕсли ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.ПоложительноСЗамечаниями Тогда
				ПараметрыВыполнения.Вставить("РезультатСогласования", 
					Перечисления.РезультатыСогласования.СогласованоСЗамечаниями);
			КонецЕсли;
			
			ПараметрыВыполнения.Вставить("ПоместитьАктивнуюВизуВИсторию", Истина);
			
		ИначеЕсли ТочкаМаршрута = ТочкиМаршрута.Ознакомиться Тогда
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Отрицательно Тогда
				ПараметрыВыполнения.Вставить("ПовторитьСогласование", Истина);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Подписание") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.Подписать
			Или ТочкаМаршрута = ТочкиМаршрута.ОбеспечитьПодписание Тогда
			
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Положительно Тогда
				ПараметрыВыполнения.Вставить("РезультатПодписания", 
					Перечисления.РезультатыПроцессаПодписания.Подписано);
			ИначеЕсли ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Отрицательно Тогда
				ПараметрыВыполнения.Вставить("РезультатПодписания", 
					Перечисления.РезультатыПроцессаПодписания.НеПодписано);
			КонецЕсли;
		ИначеЕсли ТочкаМаршрута = ТочкиМаршрута.ОбработатьРезультат Тогда
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Отрицательно Тогда
				ПараметрыВыполнения.Вставить("ОтправленоНаПовторноеПодписание", Истина);
			Иначе
				ПараметрыВыполнения.Вставить("ОтправленоНаПовторноеПодписание", Ложь);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Утверждение") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.Утвердить Тогда
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Положительно Тогда
				ПараметрыВыполнения.Вставить("РезультатУтверждения", 
					Перечисления.РезультатыУтверждения.Утверждено);
			ИначеЕсли ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Отрицательно Тогда
				ПараметрыВыполнения.Вставить("РезультатУтверждения", 
					Перечисления.РезультатыУтверждения.НеУтверждено);
			КонецЕсли;
		ИначеЕсли ТочкаМаршрута = ТочкиМаршрута.Ознакомиться Тогда
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Отрицательно Тогда
				ПараметрыВыполнения.Вставить("ПовторитьУтверждение", Истина);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Исполнение") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.Проверить Тогда
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Отрицательно Тогда
				ПараметрыВыполнения.Вставить("ОтправленоНаДоработку", Истина);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Регистрация") Тогда
		Если ТочкаМаршрута = ТочкиМаршрута.Зарегистрировать Тогда
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Положительно Тогда
				ПараметрыВыполнения.Вставить("РезультатРегистрации", 
					Перечисления.РезультатыРегистрации.Зарегистрировано);
			ИначеЕсли ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Отрицательно Тогда
				ПараметрыВыполнения.Вставить("РезультатРегистрации", 
					Перечисления.РезультатыРегистрации.НеЗарегистрировано);
			КонецЕсли;
		ИначеЕсли ТочкаМаршрута = ТочкиМаршрута.Ознакомиться Тогда
			Если ВариантВыполнения = Перечисления.ВариантыВыполненияПроцессовИЗадач.Отрицательно Тогда
				ПараметрыВыполнения.Вставить("ПовторитьРегистрацию", Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	
	НачатьТранзакцию();
	Попытка
		
		ЗаблокироватьДанныеДляРедактирования(ЗадачаСсылка);
		ЗадачаОбъект = ЗадачаСсылка.ПолучитьОбъект();
		ВыполнитьЗадачу(ЗадачаОбъект, ПараметрыВыполнения);
		РазблокироватьДанныеДляРедактирования(ЗадачаСсылка);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Направляет задачу на выполнение, с учетом фонового выполнения задач.
//
// Параметры:
//  Задача - ЗадачаСсылка.ЗадачаИсполнителя
//           ЗадачаОбъект.ЗадачаИсполнителя - выполняемая задача.
//  ПараметрыВыполнения - Структура - Параметры выполнения задачи.
//  ОтключитьОбновлениеЗадач - Булево.
//
Процедура ВыполнитьЗадачу(Задача, ПараметрыВыполнения, ОтключитьОбновлениеЗадач = Ложь) Экспорт
	
	ПраваПользователяПоОбъекту = ДокументооборотПраваДоступа.ПраваПользователяПоОбъекту(Задача);
	Если Не ПраваПользователяПоОбъекту.Изменение Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Недостаточно прав для выполнения задачи %1.'"),
			Задача);
	КонецЕсли;
	
	Если ТипЗнч(Задача) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		РеквизитыЗадачи = 
			ОбщегоНазначенияДокументооборот.ЗначенияРеквизитовОбъектаВПривилегированномРежиме(
			Задача, "ДатаИсполнения, ТекущийИсполнитель, РезультатВыполнения, Выполнена");
	Иначе	
		РеквизитыЗадачи = Задача;
	КонецЕсли;
	
	Если РеквизитыЗадачи.Выполнена Тогда
		ВызватьИсключение НСтр("ru = 'Задача уже выполнена.'");
	КонецЕсли;	
	
	Если Не ПараметрыВыполнения.Свойство("ДатаИсполнения") Тогда
		ПараметрыВыполнения.Вставить("ДатаИсполнения", РеквизитыЗадачи.ДатаИсполнения);
	КонецЕсли;
	
	Если Не ПараметрыВыполнения.Свойство("ИсполнительЗадачи") Тогда
		ПараметрыВыполнения.Вставить("ИсполнительЗадачи", РеквизитыЗадачи.ТекущийИсполнитель);
	КонецЕсли;
	
	Если ТипЗнч(ПараметрыВыполнения.ИсполнительЗадачи) = Тип("СправочникСсылка.ПолныеРоли") Тогда
		ПараметрыВыполнения.ИсполнительЗадачи = Сотрудники.ОсновнойСотрудник();
	КонецЕсли;
	
	Если Не ПараметрыВыполнения.Свойство("РезультатВыполнения") Тогда
		ПараметрыВыполнения.Вставить("РезультатВыполнения", РеквизитыЗадачи.РезультатВыполнения);
	КонецЕсли;
	
	Если Не ПараметрыВыполнения.Свойство("ПользовательИсполнитель") Тогда
		ПараметрыВыполнения.Вставить("ПользовательИсполнитель", Пользователи.ТекущийПользователь());
	КонецЕсли;
	
	// тут делаем вызов в Очередь заданий
	Если ОбработкаОчередиЗаданийСервер.ОбработатьВыполнениеЗадачи(Задача, ПараметрыВыполнения) Тогда
		Возврат; // все уже обработано
	КонецЕсли;	
	
	РаботаСПроцессамиПоДействиямСобытия.ПриВыполненииЗадачиСПараметрами(
		Задача, ПараметрыВыполнения);
	
	ВыполнитьЗадачуСПараметрамиНемедленно(Задача, ПараметрыВыполнения, ОтключитьОбновлениеЗадач);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Выполняет задачу с переданными параметрами. При этом выполняются обработчики
// ОбработкаПередВыполнениемЗадачи и ОбработкаПередВыполнениемЗадачи модуля менеджера
// соотвествующего бизнес-процесса.
// Если передается ссылка на задачу, то в рамках процедуры на время выполнения задача будет заблокирована,
// если передается объект, то блокировка не устанавливается.
//
// Параметры:
//   Задача - ЗадачаСсылка, ЗадачаОбъект - ссылка или объект на выполняемую задачу.
//   ПараметрыВыполнения - Структура - параметры выполнения задачи.
//   ОтключитьОбновлениеЗадач - Булево.
//
Процедура ВыполнитьЗадачуСПараметрамиНемедленно(Задача,
	ПараметрыВыполнения = Неопределено,
	ОтключитьОбновлениеЗадач = Ложь,
	ОтключитьПроверкуВыполнения = Ложь) Экспорт
	
	НачатьТранзакцию();
	Попытка
		
		Если ТипЗнч(Задача) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
			ЗаблокироватьДанныеДляРедактирования(Задача);
			ЗадачаОбъект = Задача.ПолучитьОбъект();
			РазблокироватьЗадачу = Истина;
		Иначе
			ЗадачаОбъект = Задача;
			РазблокироватьЗадачу = Ложь;
		КонецЕсли;
		
		БизнесПроцессМенеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ЗадачаОбъект.БизнесПроцесс);
		
		Если ПараметрыВыполнения <> Неопределено Тогда
			
			БизнесПроцессМенеджер.ОбработкаПередВыполнениемЗадачи(Задача.Ссылка, ЗадачаОбъект.БизнесПроцесс,
				ЗадачаОбъект.ТочкаМаршрута, ПараметрыВыполнения);
			
			Если ПараметрыВыполнения.Свойство("РезультатВыполнения") Тогда
				ЗадачаОбъект.РезультатВыполнения = ПараметрыВыполнения.РезультатВыполнения;
			КонецЕсли;
			
			Если ПараметрыВыполнения.Свойство("ДатаИсполнения") Тогда
				ЗадачаОбъект.ДатаИсполнения = ПараметрыВыполнения.ДатаИсполнения;
			КонецЕсли;
			
			Если ПараметрыВыполнения.Свойство("ИсполнительЗадачи") Тогда
				ЗадачаОбъект.Исполнитель= ПараметрыВыполнения.ИсполнительЗадачи;
			КонецЕсли;
			
			Если ПараметрыВыполнения.Свойство("ИсполнительЗадачиПоПочте") Тогда
				ЗадачаОбъект.Исполнитель= ПараметрыВыполнения.ИсполнительЗадачиПоПочте;
			КонецЕсли;
			
			Если ПараметрыВыполнения.Свойство("ФактическийИсполнительЗадачи") Тогда
				ЗадачаОбъект.ДополнительныеСвойства.Вставить(
					"ФактическийИсполнительЗадачи", ПараметрыВыполнения.ФактическийИсполнительЗадачи);
			КонецЕсли;
			
			Если ПараметрыВыполнения.Свойство("ОснованиеФактическогоИсполнителя") Тогда
				ЗадачаОбъект.ДополнительныеСвойства.Вставить(
					"ОснованиеФактическогоИсполнителя", ПараметрыВыполнения.ОснованиеФактическогоИсполнителя);
			КонецЕсли;
			
			Если ПараметрыВыполнения.Свойство("ПользовательИсполнитель") Тогда
				
				ПользователиДокументооборот.УстановитьОлицетворяемогоПользователя(
					ПараметрыВыполнения.ПользовательИсполнитель);
				
				ЗадачаОбъект.ДополнительныеСвойства.Вставить(
					"ПользовательИсполнитель", ПараметрыВыполнения.ПользовательИсполнитель);
				
			КонецЕсли;
			
			Если ПараметрыВыполнения.Свойство("ФактическийИсполнительПолный") Тогда
				ЗадачаОбъект.ДополнительныеСвойства.Вставить(
					"ФактическийИсполнительПолный", ПараметрыВыполнения.ФактическийИсполнительПолный);
			КонецЕсли;
			
			Если ПараметрыВыполнения.Свойство("ПереносСрока") Тогда
				ЗадачаОбъект.ДополнительныеСвойства.Вставить(
					"ПереносСрока", ПараметрыВыполнения.ПереносСрока);
			КонецЕсли;
		КонецЕсли;
		
		Если ОтключитьПроверкуВыполнения = Ложь Тогда
			РезультатПроверки = БизнесПроцессыИЗадачиСервер.ПроверитьУсловияЗапретаВыполнения(Задача.Ссылка, ПараметрыВыполнения);
			Если РезультатПроверки.ЗапретВыполнения Тогда
				ВызватьИсключение РезультатПроверки.ТекстПредупреждения;
			КонецЕсли;
		КонецЕсли;
		
		Если ОтключитьОбновлениеЗадач Тогда
			ЗадачаОбъект.ДополнительныеСвойства.Вставить("ОтключитьОбновлениеЗадач", Истина);
		КонецЕсли;
		
		ЗадачаОбъект.ВыполнитьЗадачу();
		
		Если ПараметрыВыполнения <> Неопределено Тогда
			БизнесПроцессМенеджер.ОбработкаПослеВыполненияЗадачи(Задача.Ссылка, ЗадачаОбъект.БизнесПроцесс,
					ЗадачаОбъект.ТочкаМаршрута, ПараметрыВыполнения);
		КонецЕсли;
		
		Если РазблокироватьЗадачу Тогда
			РазблокироватьДанныеДляРедактирования(ЗадачаОбъект.Ссылка);
		КонецЕсли;
		
		ПротоколированиеРаботыСотрудников.ЗаписатьИзменение(ЗадачаОбъект.Ссылка);
		
		ПользователиДокументооборот.ОчиститьОлицетворяемогоПользователя();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Выполнение задачи'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			ЗадачаОбъект.Ссылка.Метаданные(),
			ПолучитьНавигационнуюСсылку(ЗадачаОбъект.Ссылка),
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ПользователиДокументооборот.ОчиститьОлицетворяемогоПользователя();
		
		ВызватьИсключение;
		
	КонецПопытки;

КонецПроцедуры

// Возвращает ключевую операцию для замера времени выполнения
// задачи.
//
// Параметры:
//   Задача - ЗадачаСсылка
//   Параметры - Структура - параметры выполнения
//
Функция ИмяКлючевойОперацииДляЗадачи(Задача, Параметры) Экспорт
	
	ТочкаМаршрута = Задача.ТочкаМаршрута;
	
	КлючеваяОперация = "";
	
	Если ТочкаМаршрута = БизнесПроцессы.Исполнение.ТочкиМаршрута.Исполнить
		Или ТочкаМаршрута = БизнесПроцессы.Исполнение.ТочкиМаршрута.ОтветственноеИсполнение Тогда
		
		КлючеваяОперация = "ИсполнениеФоновоеВыполнениеКомандыИсполнено";
	ИначеЕсли ТочкаМаршрута = БизнесПроцессы.Ознакомление.ТочкиМаршрута.Ознакомиться Тогда
		КлючеваяОперация = "ОзнакомлениеФоновоеВыполнениеКомандыОзнакомился";
	ИначеЕсли ТочкаМаршрута = БизнесПроцессы.Приглашение.ТочкиМаршрута.Пригласить Тогда
		Если Параметры.РезультатПриглашения = Перечисления.РезультатыПриглашения.Принято Тогда
			КлючеваяОперация = "ПриглашениеФоновоеВыполнениеКомандыПринято";
		ИначеЕсли Параметры.РезультатПриглашения = Перечисления.РезультатыПриглашения.НеПринято Тогда
			КлючеваяОперация = "ПриглашениеФоновоеВыполнениеКомандыНеПринято";
		КонецЕсли;
	ИначеЕсли ТочкаМаршрута = БизнесПроцессы.Рассмотрение.ТочкиМаршрута.Рассмотреть Тогда
		КлючеваяОперация = "РассмотрениеФоновоеВыполнениеКомандыВыполнено";
	ИначеЕсли ТочкаМаршрута = БизнесПроцессы.Регистрация.ТочкиМаршрута.Зарегистрировать Тогда
		Если Параметры.РезультатРегистрации = Перечисления.РезультатыРегистрации.Зарегистрировано Тогда
			КлючеваяОперация = "РегистрацияФоновоеВыполнениеКомандыЗарегистрировано";
		ИначеЕсли Параметры.РезультатРегистрации = Перечисления.РезультатыРегистрации.НеЗарегистрировано Тогда
			КлючеваяОперация = "РегистрацияФоновоеВыполнениеКомандыНеЗарегистрировано";
		КонецЕсли;
	ИначеЕсли ТочкаМаршрута = БизнесПроцессы.Согласование.ТочкиМаршрута.Согласовать Тогда
		Если Параметры.РезультатСогласования = Перечисления.РезультатыСогласования.Согласовано Тогда
			КлючеваяОперация = "СогласованиеФоновоеВыполнениеКомандыСогласовано";
		ИначеЕсли Параметры.РезультатСогласования = Перечисления.РезультатыСогласования.СогласованоСЗамечаниями Тогда
			КлючеваяОперация = "СогласованиеФоновоеВыполнениеКомандыСогласованоСЗамечаниями";
		ИначеЕсли Параметры.РезультатСогласования = Перечисления.РезультатыСогласования.НеСогласовано Тогда
			КлючеваяОперация = "СогласованиеФоновоеВыполнениеКомандыНеСогласовано";
		КонецЕсли;
	ИначеЕсли ТочкаМаршрута = БизнесПроцессы.Утверждение.ТочкиМаршрута.Утвердить Тогда
		Если Параметры.РезультатУтверждения = Перечисления.РезультатыУтверждения.Утверждено Тогда
			КлючеваяОперация = "УтверждениеФоновоеВыполнениеКомандыУтверждено";
		ИначеЕсли Параметры.РезультатУтверждения = Перечисления.РезультатыУтверждения.НеУтверждено Тогда
			КлючеваяОперация = "УтверждениеФоновоеВыполнениеКомандыНеУтверждено";
		КонецЕсли;
	КонецЕсли;
	
	Возврат КлючеваяОперация;
	
КонецФункции

#КонецОбласти