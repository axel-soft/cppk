
#Область СлужебныйПрограммныйИнтерфейс

#Область СобытияЗадачПроцессов

// Отработает двойной клик на строке участника.
// Если действия исполняются процессами -откроет карточку задачи.
//  Только для активной или завершенной задачи.
//
//Параметры
//	Форма - УправляемаяФорма
//	ТекущиеДанные -строка таблицы Действия
//
// Вернет Истина, если отработал - открыл задачу.
Функция ОбработатьДвойнойКликНаУчастникаДействия(Форма, ТекущиеДанные) Экспорт
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ТекущиеДанные.ЭтоУчастник Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Если Не ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияВыполненияДействий.Выполняется")
		И Не ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияВыполненияДействий.Завершено") Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Если Не РаботаСПроцессамиПоОбработкамОбъектовКлиентПовтИсп.ВыполнятьОбработкуОбъектовПроцессами() Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	КлючОткрытия = Новый Структура;
	КлючОткрытия.Вставить("Действие", ТекущиеДанные.Действие);
	КлючОткрытия.Вставить("ИдентификаторУчастника", ТекущиеДанные.Идентификатор);
		
	КарточкаОткрыта = РаботаСЗадачамиКлиент.ОткрытьКарточкуИсполнителяЗадачи(КлючОткрытия);
		
	Возврат КарточкаОткрыта;
	
КонецФункции

// Позволяет перехватить событие показа диалога настроек процесса
//  - например не открывать его, или открыть какой то другой диалог
//
//Параметры
//	Процесс  - ссылка на бизнес процесс
//	РезультатВыполнения - строка, комментарий выполнения задачи
//	ОписаниеОповещения
//
//Возвращаемое значение
//  Булево - Истина, если отработали - значит вызывающий код больше не должен ничего делать
//
Функция ОбработатьОткрытиеДиалогаИзмененияПараметровПроцесса(
	Процесс, РезультатВыполнения, ОписаниеОповещения, КонтекстВыполненияЗадачи = Неопределено) Экспорт
	
	Если КонтекстВыполненияЗадачи = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не КонтекстВыполненияЗадачи.Свойство("ДанныеВыполнения")
		Или Не КонтекстВыполненияЗадачи.ДанныеВыполнения.Свойство("ДополнительныеПараметры")
		Или Не КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Свойство("ПроцессВыполняетДействие")
		Или Не КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.ПроцессВыполняетДействие
		Или Не КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Свойство("Действие")
		Или Не КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Свойство("ДействиеЗавершено")
		Или Не КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Свойство("ИдентификаторВышестоящегоИсполнения")
		Или Не КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Свойство("ИдентификаторПункта") Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОписаниеОповещения", ОписаниеОповещения);
	ПараметрыЗавершения.Вставить("РезультатВыполнения", РезультатВыполнения);
	ПараметрыЗавершения.Вставить("КонтекстВыполненияЗадачи", КонтекстВыполненияЗадачи);
	ПараметрыЗавершения.Вставить("Процесс", Процесс);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения(
		"ЗавершитьОбработкуОткрытияДиалогаИзмененияПараметровПроцесса",
		ЭтотОбъект,
		ПараметрыЗавершения);
	
	Если КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.ДействиеЗавершено Тогда
		
		// Если действие завершено, то не открываем диалог изменения,
		// а сразу отправляем на доработку всем участникам процесса.
		// Завершенное действие может до исполняться отдельными участниками.
		ВыполнитьОбработкуОповещения(ОповещениеОЗакрытии, КодВозвратаДиалога.ОК);
	
	ИначеЕсли ЗначениеЗаполнено(
		КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.ИдентификаторПункта) Тогда
		
		РежимДиалога = Истина;
		
		ДействияКлиент.ИзменитьПунктИсполнения(
			КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Действие,
			КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.ИдентификаторПункта,
			РежимДиалога,
			ОповещениеОЗакрытии);
		
	ИначеЕсли ЗначениеЗаполнено(
		КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.ИдентификаторВышестоящегоИсполнения) Тогда
		
		РежимДиалога = Истина;
		
		ДействияКлиент.ИзменитьПодчиненноеИсполнение(
			КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Действие,
			КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.ИдентификаторВышестоящегоИсполнения,
			РежимДиалога,
			ОповещениеОЗакрытии);
		
	Иначе
		ДействияКлиент.ИзменитьДействие(
			КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Действие,
			Истина,
			ОповещениеОЗакрытии);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Продолжение ОбработатьОткрытиеДиалогаИзмененияПараметровПроцесса
//
Процедура ЗавершитьОбработкуОткрытияДиалогаИзмененияПараметровПроцесса(Результат, ПараметрыЗавершения) Экспорт
	
	ОписаниеОповещения = ПараметрыЗавершения.ОписаниеОповещения;
	РезультатВыполнения = ПараметрыЗавершения.РезультатВыполнения;
	КонтекстВыполненияЗадачи = ПараметрыЗавершения.КонтекстВыполненияЗадачи;
	Процесс = ПараметрыЗавершения.Процесс;
	
	Если Результат <> КодВозвратаДиалога.ОК
		И Результат <> Истина Тогда
		
		Возврат;
	КонецЕсли;
	
	РезультатЗавершения = Новый Структура;
	РаботаСПроцессамиПоДействиямВызовСервера.ЗаполнитьРезультатНастроекПроцессаИСброситьРезультат(
		КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Действие,
		Процесс,
		РезультатЗавершения);
	
	РезультатЗавершения.Вставить("КодВозврата", КодВозвратаДиалога.ОК);
	РезультатЗавершения.Вставить("РезультатВыполнения", РезультатВыполнения);
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, РезультатЗавершения);
	
КонецПроцедуры

// Обрабатывает открытие диалога настройки подчиненного исполнения.
//

// Позволяет перехватить событие показа диалога настроек процесса
//  - например не открывать его, или открыть какой то другой диалог
//
//Параметры
//	КонтекстВыполненияЗадачи - Структура
//	ОписаниеОповещения - строка, комментарий выполнения задачи
//	ФормироватьРезолюцию - Булево
//
//Возвращаемое значение
//  Булево - Истина, если отработали - значит вызывающий код больше не должен ничего делать
//
Функция ОбработатьОткрытиеДиалогаНастройкиПодчиненногоИсполнения(
	КонтекстВыполненияЗадачи, ОписаниеОповещения, ФормироватьРезолюцию) Экспорт
	
	Если КонтекстВыполненияЗадачи = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не КонтекстВыполненияЗадачи.Свойство("ДанныеВыполнения")
		Или Не КонтекстВыполненияЗадачи.ДанныеВыполнения.Свойство("ДополнительныеПараметры")
		Или Не КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Свойство("ПроцессВыполняетДействие")
		Или Не КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.ПроцессВыполняетДействие
		Или Не КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Свойство("Действие")
		Или Не КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Свойство("НаименованиеИсполнения") Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	Действие = КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Действие;
	ВышестоящийУчастник = КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.ВышестоящийУчастник;
	НаименованиеИсполнения = КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.НаименованиеИсполнения;
	РезультатВыполнения = КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.РезультатВыполнения;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОписаниеОповещения", ОписаниеОповещения);
	ПараметрыЗавершения.Вставить("КонтекстВыполненияЗадачи", КонтекстВыполненияЗадачи);
	ПараметрыЗавершения.Вставить("ФормироватьРезолюцию", ФормироватьРезолюцию);
	
	ОбрабочтикЗаверешения = Новый ОписаниеОповещения(
		"ЗавершитьОбработкуОткрытияДиалогаНастройкиПодчиненногоИсполнения",
		ЭтотОбъект,
		ПараметрыЗавершения);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Действие", Действие);
	ПараметрыФормы.Вставить("ВышестоящийУчастник", ВышестоящийУчастник);
	ПараметрыФормы.Вставить("НаименованиеИсполнения", НаименованиеИсполнения);
	ПараметрыФормы.Вставить("Описание", РезультатВыполнения);
	ПараметрыФормы.Вставить("ЭтоНаправлениеНаИсполнение", Истина);
		
	ОткрытьФорму("Справочник.ДействияИсполнения.Форма.НастройкаДочернегоИсполнения",
		ПараметрыФормы,,,,,
		ОбрабочтикЗаверешения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	Возврат Истина;
	
КонецФункции

// Продолжение ОбработатьОткрытиеДиалогаНастройкиПодчиненногоИсполнения
//
Процедура ЗавершитьОбработкуОткрытияДиалогаНастройкиПодчиненногоИсполнения(Результат, ПараметрыЗавершения) Экспорт
	
	Если Результат <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = ПараметрыЗавершения.ОписаниеОповещения;
	КонтекстВыполненияЗадачи = ПараметрыЗавершения.КонтекстВыполненияЗадачи;
	ФормироватьРезолюцию = ПараметрыЗавершения.ФормироватьРезолюцию;
	
	Действие = КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.Действие;
	ВышестоящийУчастник = КонтекстВыполненияЗадачи.ДанныеВыполнения.ДополнительныеПараметры.ВышестоящийУчастник;
	
	РезультатЗавершения = Новый Структура;
	РезультатЗавершения.Вставить("КодВозврата", КодВозвратаДиалога.ОК);
	
	Если ФормироватьРезолюцию Тогда
		РезультатЗавершения.Вставить(
			"ТекстРезолюции",
			ДействияВызовСервера.ТекстРезолюцииПоПодчиненномуИсполнению(Действие, ВышестоящийУчастник));
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, РезультатЗавершения);
	
КонецПроцедуры

// Выполняет обработку завершения действия.
//
// Параметры:
//  Действие - ОпределяемыйТип.Действия
//
Функция ОбработатьЗавершениеСогласования(Действие) Экспорт
	
	Если Не РаботаСПроцессамиПоОбработкамОбъектовКлиентПовтИсп.ВыполнятьОбработкуОбъектовПроцессами() Тогда
		Возврат Ложь;
	КонецЕсли;

	Если Не ОбработкаОчередиЗаданийВызовСервера.ИспользоватьЗаданияДляКлиента() Тогда	
		Возврат Ложь;
	КонецЕсли;
		
	// При выполнении действий процессами + заданиями -  ничего не делаем,
	// но возвращаем признак того, что действие обработано,
	// чтобы исключить стандартную обработку действия без процессов.
	// Полноценная обработка завершения действия будет выполнена 
	// при сходе с точки процесса, с помощью очереди заданий.
	
	Возврат Истина;
	
КонецФункции

// Позволяет перехватить событие показа диалога подтверждения переноса срока задачи.
// Например не открывать диалог, или открыть какой то другой диалог.
//
// Параметры:
//  ДанныеВыполнения - Структура - Данные о выполнении. См. РаботаСЗадачамиВызовСервера.ВыполнитьДействиеЗадачи().
//
//Возвращаемое значение
//  Булево - Истина, если отработали - значит вызывающий код больше не должен ничего делать.
//
Функция ОбработатьПодтверждениеПереносаСрокаЗадачи(ДанныеВыполнения) Экспорт
	
	Если Не ДанныеВыполнения.ДополнительныеПараметры.Свойство("ПроцессПредметаРассмотренияВыполняетДействие")
		Или Не ДанныеВыполнения.ДополнительныеПараметры.ПроцессПредметаРассмотренияВыполняетДействие Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	// Отключаем подтверждение переноса срока задачи в иерархии процесса, если
	// процесс задачи выполняет действие. В этом случае корректировка срока
	// выполняется только в действии.
	// В обработке не предусмотрено расчета / пересчета плановых сроков.
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#КонецОбласти
