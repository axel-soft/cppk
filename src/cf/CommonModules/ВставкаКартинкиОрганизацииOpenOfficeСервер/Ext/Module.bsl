#Область ПрограммныйИнтерфейс

//Выполняет вставку изображения печати организации в файле Open Office Writer
//Параметры:
//			МассивТегов - Массив из Строка
//			ПечатиОрганизации - Соответствие - ключ Тег (Строка), Значение - массив дв данных картинок
//			ДвоичныеДанныеФайла - ДвоичныеДанные - двоичные данные файла, в котором осуществляется поиск тэга и вставка штрихкода
//			Расширение - Строка
//Возвращаемое значение:
//			ДвоичныеДанные - дв данные файла, в который вставлен штамп ЭП
Функция ВставитьПечатиОрганизацииВФайлOdt(
	Знач МассивТегов,
	Знач ПечатиОрганизации, 
	Знач ДвоичныеДанныеФайла, 
	Знач Расширение) Экспорт
	
	СтарыйПутьКФайлу = ПолучитьИмяВременногоФайла("odt");
	ДвоичныеДанныеФайла.Записать(СтарыйПутьКФайлу);
	НовыйПутьКФайлу = ПолучитьИмяВременногоФайла("odt");
	
	КопироватьФайл(СтарыйПутьКФайлу, СтрЗаменить(СтарыйПутьКФайлу, "odt", "zip"));
	ИмяФайлаСПутемZIP = СтрЗаменить(СтарыйПутьКФайлу, "odt", "zip");

	ВременнаяПапкаДляРазархивирования = ПолучитьИмяВременногоФайла("");
	ВременныйZIPФайл = ПолучитьИмяВременногоФайла("zip"); 

	Архив = Новый ЧтениеZipФайла();
	Архив.Открыть(ИмяФайлаСПутемZIP);
	Архив.ИзвлечьВсе(ВременнаяПапкаДляРазархивирования, РежимВосстановленияПутейФайловZIP.Восстанавливать);
	Архив.Закрыть();

	//Заполнение тела документа
	ЧтениеXML = Новый ЧтениеXML();
	ЧтениеXML.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/content.xml");
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.Отступ = Ложь;
	ЗаписьXML.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/content_update.xml");
	ЗаписьXML.ЗаписатьОбъявлениеXML();

	ВсеКартинкиШтампов = Новый Массив;
	Для Каждого КлючИЗначение Из ПечатиОрганизации Цикл
		
		МассивДвоичныеДанныеШтампов = КлючИЗначение.Значение;
		Для Каждого ДвДанные Из МассивДвоичныеДанныеШтампов Цикл
			ВсеКартинкиШтампов.Добавить(ДвДанные);
		КонецЦикла;	
		
	КонецЦикла;	
	
	ВсеИдКартинок = Новый Массив;

	// 30  -оптимальный размер картинки внутри файла
	ВысотаШтрихкода = 30;
	ШиринаШтрихкода = 30;

	Для Каждого ДвоичныеДанныеКартинки Из ВсеКартинкиШтампов Цикл

		ИДКартинки = "";
		ВизуализацияЭПOpenOfficeВызовСервера.СохранитьИзображениеВоВнутреннейСтруктуреФайла(ДвоичныеДанныеКартинки, 
			ВременнаяПапкаДляРазархивирования, ИДКартинки);
			
		СтруктФайла = Новый Структура("ДвоичныеДанныеКартинки, ИДКартинки", 
			ДвоичныеДанныеКартинки, ИДКартинки); 	
		ВсеИдКартинок.Добавить(СтруктФайла);	
			
		Картинка = Новый Картинка(ДвоичныеДанныеКартинки);
		ВысотаШтрихкода = Картинка.Высота();
		ШиринаШтрихкода = Картинка.Ширина();
		Если ВысотаШтрихкода > 30 Или ШиринаШтрихкода > 30 Тогда
			
			ШиринаКВысоте = ШиринаШтрихкода / ВысотаШтрихкода;
			
			Если ВысотаШтрихкода > ШиринаШтрихкода Тогда
				ВысотаШтрихкода = 30;
				ШиринаШтрихкода = Цел(ВысотаШтрихкода * ШиринаКВысоте); 
			Иначе
				ШиринаШтрихкода = 30;
				ВысотаШтрихкода = Цел(ШиринаШтрихкода / ШиринаКВысоте); 
			КонецЕсли;		
			 
		КонецЕсли;	
			
	КонецЦикла;		
	
	ВсеСтрокиВставкиШтампа = Новый Соответствие; // ключ - тэг, значение -Строка

	Для Каждого КлючИЗначение Из ПечатиОрганизации Цикл
		
		Тэг  = КлючИЗначение.Ключ;
		МассивДвоичныеДанныеШтампов = КлючИЗначение.Значение;

		СтрокаДляВставкиШтампаИтоговый = "";
	
		Для Каждого ДвоичныеДанныеКартинки Из МассивДвоичныеДанныеШтампов Цикл
	
			ИДКартинки = "";
			Для Каждого СтруктФайла Из ВсеИдКартинок Цикл
				Если СтруктФайла.ДвоичныеДанныеКартинки = ДвоичныеДанныеКартинки Тогда
					ИДКартинки = СтруктФайла.ИДКартинки;
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
			
			ЗаготовкаДляВставкиШтрихкода = 
				"<draw:frame draw:name=""" + Тэг + """ text:anchor-type=""as-char"" svg:y=""-3.395cm"" svg:width=""_ШиринаШтрихкода_mm"" svg:height=""_ВысотаШтрихкода_mm"" draw:z-index=""0"">
				|	<draw:image xlink:href=""Pictures/" + ИДКартинки + ".png"" xlink:type=""simple"" xlink:show=""embed"" xlink:actuate=""onLoad""/>
				|</draw:frame>";
				
			СтрокаДляВставкиШтампа = ЗаготовкаДляВставкиШтрихкода;
			
			СтрокаДляВставкиШтампа = СтрЗаменить(СтрокаДляВставкиШтампа, 
				"_ВысотаШтрихкода_", ВысотаШтрихкода);

			СтрокаДляВставкиШтампа = СтрЗаменить(СтрокаДляВставкиШтампа, 
				"_ШиринаШтрихкода_", ШиринаШтрихкода);
				
			Если СтрокаДляВставкиШтампаИтоговый <> "" Тогда
				СтрокаДляВставкиШтампаИтоговый = СтрокаДляВставкиШтампаИтоговый + " ";
			КонецЕсли;	
			СтрокаДляВставкиШтампаИтоговый = СтрокаДляВставкиШтампаИтоговый + СтрокаДляВставкиШтампа;
			
		КонецЦикла;
		
		ВсеСтрокиВставкиШтампа[Тэг] = СтрокаДляВставкиШтампаИтоговый; 
			
	КонецЦикла;	 
	
	ВставленныйШтрихкод = Ложь;
	
	// Обязательно нужно ставить Ложь, иначе будут пропадать пробелы
	ЧтениеXML.ИгнорироватьПробелы = Ложь;
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ЗаписьXML.ЗаписатьНачалоЭлемента(ЧтениеXML.Имя);
			Если ВставленныйШтрихкод И ЧтениеXML.Имя = "draw:image" Тогда
			КонецЕсли;
			Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
				
				ЗаписьXML.ЗаписатьАтрибут(ЧтениеXML.Имя,ЧтениеXML.Значение);
				
			КонецЦикла;
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			
			Найден = Ложь;
			НайденныйТэг = "";
			Для Каждого Тэг Из МассивТегов Цикл
				Если Найти(ЧтениеXML.Значение, Тэг) > 0 Тогда
					Найден = Истина;
					НайденныйТэг = Тэг; 
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
			
			Если Найден Тогда
				
				Тэг = НайденныйТэг;
				СтрокаДляВставкиШтампаИтоговый = ВсеСтрокиВставкиШтампа[Тэг];
                ЗаписьXML.ЗаписатьБезОбработки(СтрокаДляВставкиШтампаИтоговый);
                
			Иначе
              	ЗаписьXML.ЗаписатьТекст(ЧтениеXML.Значение);
			КонецЕсли;
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЦикла;	
	
	ЧтениеXML.Закрыть();
	ЗаписьXML.Закрыть();
	ПереместитьФайл(ВременнаяПапкаДляРазархивирования + "/content_update.xml", ВременнаяПапкаДляРазархивирования + "/content.xml");
	УдалитьФайлы(ВременнаяПапкаДляРазархивирования + "/content_update.xml");
	
	Архиватор = Новый ЗаписьZipФайла(ВременныйZIPФайл, "", "");
	Архиватор.Добавить(ВременнаяПапкаДляРазархивирования + "\*.*", РежимСохраненияПутейZIP.СохранятьОтносительныеПути, РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);
	Архиватор.Записать();

	ПереместитьФайл(ВременныйZIPФайл, НовыйПутьКФайлу);
	УдалитьФайлы(ВременнаяПапкаДляРазархивирования);	
	УдалитьФайлы(СтарыйПутьКФайлу);
	УдалитьФайлы(ВременныйZIPФайл);
	
	ДвоичныеДанныеЗаполненногоФайла = Новый ДвоичныеДанные(НовыйПутьКФайлу);
	УдалитьФайлы(НовыйПутьКФайлу);
	Возврат ДвоичныеДанныеЗаполненногоФайла;	
	
КонецФункции

#КонецОбласти