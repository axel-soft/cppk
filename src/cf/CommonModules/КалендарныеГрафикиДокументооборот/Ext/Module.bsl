#Область ПрограммныйИнтерфейс

// Возвращает дату, которая отличается указанной даты на количество дней,
// входящих в основной график работы.
// См. КалендарныеГрафики.ПолучитьДатуПоКалендарю
//
// Параметры:
//  ДатаОт			 - Дата  - Дата начала периода
//  КоличествоДней	 - Число - Количество рабочих дней, которое следует прибавить к дате начала периода
// 
// Возвращаемое значение:
// Дата - дата, увеличенная на количество дней, входящих в основной график
//
Функция ПолучитьДатуПоОсновномуКалендарю(Знач ДатаОт, Знач КоличествоДней) Экспорт
	
	ОсновнойГрафик = ГрафикиРаботы.ПолучитьОсновнойГрафикРаботы();
	ОсновнойКалендарь = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновнойГрафик, "Календарь");
	
	Возврат КалендарныеГрафики.ПолучитьДатуПоКалендарю(ОсновнойКалендарь,
		ДатаОт,
		КоличествоДней);

КонецФункции

// Производит склонение строк "календарный день" и "рабочий день" в соответствии
// с переданным количеством дней для использования этих строк в интерфейсах
// Параметры:
//  КоличествоДней - Число - число дней, в соответствии с которым требуется просклонять строки
// 
// Возвращаемое значение:
// Структура - структура строк с подписями, склоненными в соответствии с количеством дней
//
Функция СклонениеДней(Знач КоличествоДней) Экспорт

	Результат = Новый Структура("Календарные, Рабочие", 
		НСтр("ru='календарных дней'"), НСтр("ru='рабочих дней'"));
	
	Если КоличествоДней > 0 Тогда
		
		Склонение = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
			НСтр("ru = ';%1 календарный день;;%1 календарных дня;%1 календарных дней;%1 календарных дней'"),
			КоличествоДней);
		
		Результат.Календарные = СокрЛП(СтрЗаменить(Склонение, Строка(КоличествоДней), ""));
		
		Склонение = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
			НСтр("ru = ';%1 рабочий день;;%1 рабочих дня;%1 рабочих дней;%1 рабочих дней'"),
			КоличествоДней);
		
		Результат.Рабочие = СокрЛП(СтрЗаменить(Склонение, Строка(КоличествоДней), ""));
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

#КонецОбласти
