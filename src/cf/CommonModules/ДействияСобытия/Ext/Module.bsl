
#Область ПрограммныйИнтерфейс

// Вызывается при инициализации действия.
//
//
// Параметры:
//   ДанныеДействия - Структура - структура с данными действия. Используется для бесшовной интеграции.
//                  - ФормаКлиентскогоПриложения - форма действия. Используется для просмотра действия на стороне ДО.
//   ИзменениеДействияРазрешено - Булево
//
Процедура ЗаполнитьДанныеДействия(ДанныеДействия, ИзменениеДействияРазрешено) Экспорт
	
	Объект = ДанныеДействия.Объект;
	Элементы = ДанныеДействия.Элементы;
	Параметры = ДанныеДействия.Параметры;
	ОбработкаОбъекта = РегистрыСведений.ДействияОбработкиОбъектов.ОбработкаДействия(Объект.Ссылка);
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Протоколирование работы пользователей.
	ПротоколированиеРаботыСотрудников.ЗаписатьОткрытие(Объект.Ссылка);
	
	Если ДанныеДействия.Параметры.Свойство("Предмет") И Не ЗначениеЗаполнено(Объект.Предмет) Тогда
		
		Объект.Предмет = ДанныеДействия.Параметры.Предмет;
		
		Если ЗначениеЗаполнено(Объект.Предмет) Тогда
			Если ДелопроизводствоКлиентСервер.ЭтоДокумент(Объект.Предмет) Тогда
				
				РеквизитыПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Предмет,
					"Важность, ВидДокумента.ИспользоватьВажность");
				Если РеквизитыПредмета.ВидДокументаИспользоватьВажность = Истина Тогда
					Объект.Важность = РеквизитыПредмета.Важность;
				КонецЕсли;
				
			ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоМероприятие(Объект.Предмет) Тогда
				
				Объект.Важность = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Предмет, "Важность");
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДанныеДействия.Параметры.Свойство("ВидДействия") И Не ЗначениеЗаполнено(Объект.ВидДействия) Тогда
		Объект.ВидДействия = ДанныеДействия.Параметры.ВидДействия;
	КонецЕсли;
	
	ДанныеДействия.Заголовок = ДействияСервер.ПредставлениеДействия(Объект.Ссылка, Объект.ВидДействия);
	ДанныеДействия.ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	ДанныеДействия.СписокПредметов.Очистить();
	ДанныеДействия.СписокПредметов.Добавить("Предмет", НСтр("ru = 'Предмет'"));
	
	Если ТипЗнч(ДанныеДействия) = Тип("ФормаКлиентскогоПриложения") Тогда
		
		Если Элементы.Найти("ДатаОтсчетаДляРасчетаСроков") <> Неопределено Тогда
			ДанныеДействия.ДатаОтсчетаДляРасчетаСроков = ТекущаяДатаСеанса();
		КонецЕсли;
		
		УсловноеОформление = ДанныеДействия.УсловноеОформление;
		НастройкиДействий.НастроитьУсловноеОформлениеЭтапа(УсловноеОформление);
		НастройкиДействий.НастроитьУсловноеОформлениеПустогоУчастника(УсловноеОформление);
		НастройкиДействий.НастроитьУсловноеОформлениеПустогоУсловия(УсловноеОформление);
		НастройкиДействий.НастроитьУсловноеОформлениеКомментарияЗаполненияУчастника(
			УсловноеОформление, "Участники.Участник", "УчастникиПредставлениеСтроки");
		
	ИначеЕсли ТипЗнч(ДанныеДействия) = Тип("Структура") Тогда
		
		ДанныеДействия.ДатаОтсчетаДляРасчетаСроков = ТекущаяДатаСеанса();
		
	КонецЕсли;
	
	// Права от предмета. Если есть права на предмет, то есть права на Действие.
	Если Не ИзменениеДействияРазрешено Тогда
		
		ДанныеДействия.ТолькоПросмотр = Истина;
		Элементы.Автор.Доступность = Ложь;
		
		Элементы.ЗаписатьИЗакрыть.Видимость = Ложь;
		Элементы.ОписаниеОтложенногоНачалаВыполнения.Доступность = Ложь;
		
		Если ДанныеДействия.Параметры.РежимДиалога Тогда
			
			Элементы.ПродолжитьДиалог.Видимость = Истина;
			Элементы.ПродолжитьДиалог.КнопкаПоУмолчанию = Истина;
			
		Иначе
			
			Элементы.Закрыть.Заголовок = НСтр("ru = 'Закрыть'");
			Элементы.Закрыть.КнопкаПоУмолчанию = Истина;
			
		КонецЕсли;
		
	Иначе
		
		ДанныеДействия.ТолькоПросмотр = Ложь;
		
		Если ТипЗнч(ДанныеДействия) = Тип("ФормаКлиентскогоПриложения") Тогда
			РазрешенияТаблицей = ДанныеДействия.РеквизитФормыВЗначение("Разрешения");
		Иначе
			РазрешенияТаблицей = ДанныеДействия.Разрешения;
		КонецЕсли;
		
		Если Объект.Ссылка.Пустая() Тогда
			НастройкиДоступностиДействий.ЗаполнитьРазрешенияПоДействию(
				Объект, РазрешенияТаблицей);
		Иначе
			НастройкиДоступностиДействий.ЗаполнитьРазрешенияПоДействию(
				Объект.Ссылка, РазрешенияТаблицей);
		КонецЕсли;
		
		Если ТипЗнч(ДанныеДействия) = Тип("ФормаКлиентскогоПриложения") Тогда
			ДанныеДействия.ЗначениеВРеквизитФормы(РазрешенияТаблицей, "Разрешения");
		КонецЕсли;
		
		ДанныеДействия.МожноТолькоДобавлятьУчастников =
			РазрешенияТаблицей[0].Разрешение = Перечисления.ВариантыДоступностиИзмененияДействий.РазрешеноДобавлять;
		
	КонецЕсли;
	
	ДанныеДействия.МожноИзменятьЗащищенныхУчастников = ДействияСервер.РазрешеноИзменятьЗащищенныхУчастников();
	Если Параметры.Свойство("НастройкаОбработки") И ЗначениеЗаполнено(Параметры.НастройкаОбработки) Тогда
		ДанныеДействия.НастройкаОбработки = Параметры.НастройкаОбработки;
	КонецЕсли;
	
	// Отображение задержки запуска.
	Если ДействияКлиентСервер.ЕстьЭлемент(Элементы, "ГруппаОписаниеОтложенногоВыполнения") Тогда
		Элементы.ГруппаОписаниеОтложенногоВыполнения.Видимость = Ложь;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьОтложенноеНачалоВыполненияДействий") Тогда
			Элементы.ГруппаОписаниеОтложенногоВыполнения.Видимость = Истина;
			ДниИЧасыЗадержки = ДействияКлиентСервер.ДниИЧасыЗадержкиПоСроку(ДанныеДействия.Объект.ОтложенноеНачалоВыполнения);
			ДанныеДействия.ОтложенноеНачалоВыполненияДни = ДниИЧасыЗадержки.ЗадержкаДни;
			ДанныеДействия.ОтложенноеНачалоВыполненияЧасы = ДниИЧасыЗадержки.ЗадержкаЧасы;
			ДействияКлиентСервер.НастроитьОтображениеОтложенногоНачалаВыполненияДействия(ДанныеДействия);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) И (ОбработкаОчередиЗаданийСервер.ОбъектЕстьВОчереди(Объект.Ссылка)
		Или ОбработкаОчередиЗаданийСервер.ОбъектЕстьВОчереди(ОбработкаОбъекта)) Тогда
		
		Элементы.ГруппаНедоступноДляИзменения.Видимость = Истина;
		ДанныеДействия.ТолькоПросмотр = Истина;
		
		Элементы.ЗаписатьИЗакрыть.Видимость = Ложь;
		
		Если ДанныеДействия.Параметры.РежимДиалога Тогда
			
			Элементы.ПродолжитьДиалог.Видимость = Истина;
			Элементы.ПродолжитьДиалог.КнопкаПоУмолчанию = Истина;
			
		Иначе
			
			Элементы.Закрыть.Заголовок = НСтр("ru = 'Закрыть'");
			Элементы.Закрыть.КнопкаПоУмолчанию = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДействияСервер.УстановитьВидимостьВыполненияВнеПрограммы(ДанныеДействия);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДействиеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт 
	
	ДействиеОбъект.ДатаСоздания = ТекущаяДатаСеанса();
	ДействиеОбъект.Автор = Сотрудники.ОсновнойСотрудник();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("Предмет") Тогда
			ДействиеОбъект.Предмет = ДанныеЗаполнения.Предмет;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("ВидДействия") Тогда
			ДействиеОбъект.ВидДействия = ДанныеЗаполнения.ВидДействия;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("Автор") Тогда
			ДействиеОбъект.Автор = ДанныеЗаполнения.Автор;
		КонецЕсли;
		
	КонецЕсли;

	ДействиеОбъект.Создал = ДействиеОбъект.Автор;

	Если ЗначениеЗаполнено(ДействиеОбъект.Предмет) 
		И ДелопроизводствоКлиентСервер.ЭтоДокумент(ДействиеОбъект.Предмет) Тогда
		РеквизитыПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДействиеОбъект.Предмет,
			"Важность, ВидДокумента.ИспользоватьВажность");
		Если РеквизитыПредмета.ВидДокументаИспользоватьВажность = Истина Тогда
			ДействиеОбъект.Важность = РеквизитыПредмета.Важность;
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ДействиеОбъект.Предмет)
		И ДелопроизводствоКлиентСервер.ЭтоМероприятие(ДействиеОбъект.Предмет) Тогда
		ДействиеОбъект.Важность =
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДействиеОбъект.Предмет, "Важность");
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ДействиеОбъект.Автор) Тогда 
		Если ЗначениеЗаполнено(ДействиеОбъект.ВидДействия) Тогда 
			ТекстОшибки = СтрШаблон(НСтр("ru = 'Невозможно создать действие: ""%1"".
                                          |Не задан основной сотрудник. Обратитесь к администратору.'"),
			ДействиеОбъект.ВидДействия);
		Иначе 
			ТекстОшибки = НСтр("ru = 'Невозможно создать действие.
                                      |Не задан основной сотрудник. Обратитесь к администратору.'");
		КонецЕсли;
		
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Вызывается перед записью действия.
//
Процедура ДействияПередЗаписью(ДействиеОбъект, Отказ) Экспорт
	
	Если ДействиеОбъект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДействиеОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый", ДействиеОбъект.Ссылка.Пустая());
	
	Если Не ЗначениеЗаполнено(ДействиеОбъект.Автор) Тогда
		ДействиеОбъект.Автор = Сотрудники.ОсновнойСотрудник();
	КонецЕсли;
	
	Если Не ДействиеОбъект.Ссылка.Пустая()Тогда
		ПредыдущиеЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДействиеОбъект.Ссылка,
			"ПометкаУдаления");
	Иначе
		ПредыдущиеЗначенияРеквизитов = Новый Структура("ПометкаУдаления", Ложь);
	КонецЕсли;
	
	ДействиеОбъект.ДополнительныеСвойства.Вставить("ПредыдущаяПометкаУдаления",
		ПредыдущиеЗначенияРеквизитов.ПометкаУдаления);
	
КонецПроцедуры

Процедура ДействияПриЗаписи(ДействиеОбъект, Отказ) Экспорт
	
	Если ДействиеОбъект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПредыдущаяПометкаУдаления = Ложь;
	Если ДействиеОбъект.ДополнительныеСвойства.Свойство("ПредыдущаяПометкаУдаления") Тогда
		ПредыдущаяПометкаУдаления = ДействиеОбъект.ДополнительныеСвойства.ПредыдущаяПометкаУдаления;
	КонецЕсли;
	
	Если ДействиеОбъект.ПометкаУдаления <> ПредыдущаяПометкаУдаления Тогда
		ПротоколированиеРаботыСотрудников.ЗаписатьПометкуУдаления(ДействиеОбъект.Ссылка, ДействиеОбъект.ПометкаУдаления);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДействиеОбъект.Предмет) Тогда
			
		Если ДействиеОбъект.ДополнительныеСвойства.Свойство("НастройкаОбработки")
			И ЗначениеЗаполнено(ДействиеОбъект.ДополнительныеСвойства.НастройкаОбработки) Тогда 
			НастройкаОбработки = ДействиеОбъект.ДополнительныеСвойства.НастройкаОбработки;
		Иначе 
			НастройкаОбработки = Справочники.НастройкиОбработкиВидовОбъектов.ПустаяСсылка();
		КонецЕсли;
		
		Если ДействиеОбъект.ДополнительныеСвойства.ЭтоНовый Тогда
			
			Если ДействиеОбъект.ДополнительныеСвойства.Свойство("ОбработкаОбъекта")
				И ЗначениеЗаполнено(ДействиеОбъект.ДополнительныеСвойства.ОбработкаОбъекта) Тогда 
				ОбработкаОбъекта = ДействиеОбъект.ДополнительныеСвойства.ОбработкаОбъекта;
			Иначе 
				ОбработкаОбъекта = Справочники.ОбработкиОбъектов.НоваяИлиСуществующаяОбработкаОбъекта(
					ДействиеОбъект.Предмет);
			КонецЕсли;
			
			РегистрыСведений.ДействияОбработкиОбъектов.ДобавитьДействиеВОбработку(
				ОбработкаОбъекта, ДействиеОбъект.Ссылка, НастройкаОбработки);
				
		ИначеЕсли ЗначениеЗаполнено(НастройкаОбработки) Тогда
			
			РегистрыСведений.ДействияОбработкиОбъектов.ОбновитьНастройкуОбработкиДействия(
				ДействиеОбъект.Ссылка, НастройкаОбработки);
				
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи) Экспорт 
	
	ПротоколированиеРаботыСотрудников.ЗаписатьСоздание(
		ТекущийОбъект.Ссылка, ПараметрыЗаписи.ЭтоНовыйОбъект);
	ПротоколированиеРаботыСотрудников.ЗаписатьИзменение(ТекущийОбъект.Ссылка);
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Ссылка) И ОбработкаОчередиЗаданийСервер.ОбъектЕстьВОчереди(ТекущийОбъект.Ссылка) Тогда
		
		Форма.Элементы.ГруппаНедоступноДляИзменения.Видимость = Истина;
		
		Форма.ТолькоПросмотр = Истина;
		
		Форма.Элементы.ЗаписатьИЗакрыть.Видимость = Ложь;
		
		Если Форма.Параметры.РежимДиалога Тогда
			
			Форма.Элементы.ПродолжитьДиалог.Видимость = Истина;
			Форма.Элементы.ПродолжитьДиалог.КнопкаПоУмолчанию = Истина;
			
		Иначе
			
			Форма.Элементы.Закрыть.Заголовок = НСтр("ru = 'Закрыть'");
			Форма.Элементы.Закрыть.КнопкаПоУмолчанию = Истина;
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

#Область СобытияФормыПредмета

// Вызывается при создании формы предмета на сервере. 
// Для нового - заполняет действия в форме согласно настройкам.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//  Параметры - ДанныеФормыСтруктура.
//  ПараметрыВидаОбъекта - Структура - См. ДействияКлиентСервер.НовыйПараметрыВидаОбъекта().
//
Процедура ПриСозданииФормыПредметаНаСервере(Форма, Параметры, ПараметрыВидаОбъекта) Экспорт
	
	Объект = Форма.Объект;
	Если Объект.Ссылка.Пустая() И ЗначениеЗаполнено(ПараметрыВидаОбъекта.ВидОбъекта) Тогда 
		ПравилаОбработкиСервер.ЗаполнитьДействияВФормеПредмета(Форма, ПараметрыВидаОбъекта);
		
	КонецЕсли;
	
	Форма.ОбработкаПредставление = Формат(Форма.КоличествоДействий, "");
	УсловноеОформление = Форма.УсловноеОформление;
	НастройкиДействий.НастроитьУсловноеОформлениеДействий(УсловноеОформление);
	
	Если ДелопроизводствоКлиентСервер.ЭтоДокументПредприятия(Объект.Ссылка) Тогда
		ДействияСервер.ЗаполнитьРеквизитыПодписанияУтвержденияВФорме(
			Форма,
			ПараметрыВидаОбъекта,
			Объект.Ссылка.Пустая());
		
		ДействияСервер.УстановитьВидимостьКомандВыполненияВнеПрограммы(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при чтении предмета на сервере. Читает действия существующего
// в ИБ предмета.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//  Параметры - ДанныеФормыСтруктура.
//  ПараметрыВидаОбъекта - Структура - См. ДействияКлиентСервер.НовыйПараметрыВидаОбъекта().
//
Процедура ПриЧтенииПредметаНаСервере(Форма, Параметры, ПараметрыВидаОбъекта) Экспорт
	
	Объект = Форма.Объект;
	// Если открываем через Действие, то проверим настройки видимости действия
	Если Параметры.Свойство("Действие")
		И ЗначениеЗаполнено(Параметры.Действие) Тогда
		// Покажем всю обработку, если видимость не "Всем"
		РеквизитыДействия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Параметры.Действие, "ВидДействия.НастройкаВидимости, ВидДействия.ПоказыватьТолькоЕслиВызвано");
		Форма.ДействияПоказыватьВсе = РеквизитыДействия.ВидДействияНастройкаВидимости <> Перечисления.ВидимостьДействийВПредметах.Всем
			Или РеквизитыДействия.ВидДействияПоказыватьТолькоЕслиВызвано = Истина;

		Форма.Элементы.ДействияПоказатьВсе.Пометка = Форма.ДействияПоказыватьВсе;
	КонецЕсли;
	
	ПараметрыОбъектаОбработки = ДействияКлиентСервер.ПараметрыОбъектаОбработки(Объект.Ссылка, Объект);
	ДействияСервер.ПрочитатьДействияВФормуПредмета(Форма, ПараметрыОбъектаОбработки, ПараметрыВидаОбъекта);
	
	Форма.ОбработкаПредставление = Формат(Форма.КоличествоДействий, "");
	Если ДелопроизводствоКлиентСервер.ЭтоДокументПредприятия(Объект.Ссылка) Тогда
		ДействияСервер.ЗаполнитьРеквизитыПодписанияУтвержденияВФорме(
			Форма,
			ПараметрыВидаОбъекта,
			Объект.Ссылка.Пустая());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти