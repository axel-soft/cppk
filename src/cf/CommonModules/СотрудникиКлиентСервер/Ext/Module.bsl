
////////////////////////////////////////////////////////////////////////////////
// Сотрудники (клиент, сервер)
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Проверяет что переданное значение является ссылкой на справочник Сотрудники
// 
// Параметры:
//  Ссылка - Произвольный
// 
// Возвращаемое значение:
//  Булево - Это сотрудник
//
Функция ЭтоСотрудник(Ссылка) Экспорт
	Возврат ТипЗнч(Ссылка) = Тип("СправочникСсылка.Сотрудники");
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Проверяет корректно ли задан перид действия сотрудника.
//
// Параметры:
//  ДатаНачала - Дата
//  ДатаОкончания - Дата
//
// Возвращаемое значение:
//  Булево
//
Функция ПериодДействияЗаполненКорректно(ДатаНачала, ДатаОкончания) Экспорт
	
	Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания)
		И ДатаОкончания < ДатаНачала Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Возвращает описание ошибки некорректного заполнения периода действия.
//
// Возвращаемое значение:
//  Строка
//
Функция ОписаниеОшибкиНекорректногоЗаполненияПериодаДействия() Экспорт
	
#Если Клиент Тогда
	КодОсновногоЯзыка = ОбщегоНазначенияКлиент.КодОсновногоЯзыка();
#Иначе
	КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
#КонецЕсли

	Возврат НСтр("ru = 'Окончание периода должно быть больше или равна началу.'", КодОсновногоЯзыка);
	
КонецФункции

// Возвращает описание ошибки "Сотрудник не уникален".
//
// Возвращаемое значение:
//  Строка
//
Функция ОписаниеОшибкиСотрудникНеУникален() Экспорт

#Если Клиент Тогда
	КодОсновногоЯзыка = ОбщегоНазначенияКлиент.КодОсновногоЯзыка();
#Иначе
	КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
#КонецЕсли

	Возврат НСтр("ru = 'В заданном периоде действия уже имеется сотрудник с таким же именем, подразделением и должностью.'",
		КодОсновногоЯзыка);
КонецФункции

#КонецОбласти