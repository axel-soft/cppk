
#Область ПрограммныйИнтерфейс

// См. ИнтеграцияShare.ОпубликоватьИПолучитьСсылкуНаСкачиваниеДокумента
//
Процедура ОпубликоватьИПолучитьСсылкуНаСкачиваниеДокумента(ПараметрыДокумента, Отказ) Экспорт
	
	ИнтеграцияShare.ОпубликоватьИПолучитьСсылкуНаСкачиваниеДокумента(ПараметрыДокумента, Отказ);
	
КонецПроцедуры

// Загружает данные документа по публичной ссылке из сервиса 1С:Share.
//
// Параметры:
//  СсылкаДляСкачивания           - Строка - адрес ссылки для скачивания документа.
//  ОписаниеЭлектронногоДокумента - См. НовоеКраткоеОписаниеЭлектронногоДокумента
//  Отказ                         - Булево - признак отказа выполнения. Подробности См. в журнале регистрации.
//
Процедура ЗагрузитьКраткиеДанныеДокументаПоПубличнойСсылке(СсылкаДляСкачивания, ОписаниеЭлектронногоДокумента, Отказ) Экспорт
	
	ОписаниеЭлектронногоДокумента = ИнтеграцияShare.КраткиеДанныеДокументаПоПубличнойСсылке(СсылкаДляСкачивания, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  ПараметрыДокумента - См. ИнтеграцияShareКлиентСервер.НовыеПараметрыДокументаКПубликации
//  ИдентификаторФормы - УникальныйИдентификатор, Неопределено - уникальный идентификатор.
//
// Возвращаемое значение:
//  Неопределено
//  См. ДлительныеОперации.ВыполнитьФункцию
Функция ОпубликоватьЭлектронныйДокументВФоне(Знач ПараметрыДокумента, Знач ИдентификаторФормы = Неопределено) Экспорт
	
	НаименованиеЗадания = НСтр("ru = '1С:Share. Получение ссылки на документ.'", ОбщегоНазначения.КодОсновногоЯзыка());
	КлючФоновогоЗадания = СтрШаблон("Share_%1", Строка(
		ПараметрыДокумента.ЭлектронныйДокумент.УникальныйИдентификатор()));
	
	Если ЕстьАктивноеФоновоеЗадание(КлючФоновогоЗадания, НаименованиеЗадания) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ИдентификаторФормы = Неопределено Тогда
		ИдентификаторФормы = Новый УникальныйИдентификатор();
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(ИдентификаторФормы);
	ПараметрыВыполнения.ОжидатьЗавершение           = 2;
	ПараметрыВыполнения.ЗапуститьВФоне              = Истина;
	ПараметрыВыполнения.КлючФоновогоЗадания         = КлючФоновогоЗадания;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"ИнтеграцияShare.ОпубликованныеДанныеДокумента",
		ПараметрыДокумента);
	
КонецФункции

// Параметры:
//  ПараметрыДокумента - См. ИнтеграцияShare.НовоеКраткоеОписаниеЭлектронногоДокумента
//  ИдентификаторФормы - УникальныйИдентификатор, Неопределено - уникальный идентификатор.
//
// Возвращаемое значение:
//  Неопределено
//  См. ДлительныеОперации.ВыполнитьФункцию
Функция ДанныеЭлектронногоДокументаПоИдентификаторуВФоне(Знач ПараметрыДокумента, Знач ИдентификаторФормы = Неопределено) Экспорт
	
	НаименованиеЗадания = НСтр("ru = '1С:Share. Загрузка электронного документа по идентификатору.'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	КлючФоновогоЗадания = СтрШаблон("Share_%1", ПараметрыДокумента.ИдентификаторЭлектронногоДокумента);
	
	Если ЕстьАктивноеФоновоеЗадание(КлючФоновогоЗадания, НаименованиеЗадания) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ИдентификаторФормы = Неопределено Тогда
		ИдентификаторФормы = Новый УникальныйИдентификатор();
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(ИдентификаторФормы);
	ПараметрыВыполнения.ОжидатьЗавершение           = 0;
	ПараметрыВыполнения.ЗапуститьВФоне              = Истина;
	ПараметрыВыполнения.КлючФоновогоЗадания         = КлючФоновогоЗадания;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"ИнтеграцияShare.ДанныеЭлектронногоДокументаПоИдентификатору",
		ПараметрыДокумента);
	
КонецФункции

// Параметры:
//  ПараметрыДокумента - См. ИнтеграцияShare.НовоеОписаниеДанныхЭлектронногоДокумента
//  ИдентификаторФормы - УникальныйИдентификатор, Неопределено - уникальный идентификатор.
//
// Возвращаемое значение:
//  Неопределено
//  См. ДлительныеОперации.ВыполнитьФункцию
Функция ЗагрузитьЭлектронныйДокументВОбъектУчетаВФоне(Знач ПараметрыДокумента, Знач ИдентификаторФормы = Неопределено) Экспорт
	
	НаименованиеЗадания = НСтр("ru = '1С:Share. Загрузка электронного документа в объект учета.'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	КлючФоновогоЗадания = СтрШаблон("Share_%1", ПараметрыДокумента.ИдентификаторЭлектронногоДокумента);
	
	Если ЕстьАктивноеФоновоеЗадание(КлючФоновогоЗадания, НаименованиеЗадания) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ИдентификаторФормы = Неопределено Тогда
		ИдентификаторФормы = Новый УникальныйИдентификатор();
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(ИдентификаторФормы);
	ПараметрыВыполнения.ОжидатьЗавершение           = 0;
	ПараметрыВыполнения.ЗапуститьВФоне              = Истина;
	ПараметрыВыполнения.КлючФоновогоЗадания         = КлючФоновогоЗадания;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"ИнтеграцияShare.ЗагрузитьЭлектронныйДокументВОбъектУчета",
		ПараметрыДокумента);
	
КонецФункции

// Параметры:
//  ПараметрыДокумента - См. ИнтеграцияShareКлиентСервер.НовыеПараметрыДокументаКПубликации
//  ИдентификаторФормы - УникальныйИдентификатор, Неопределено - уникальный идентификатор.
//
// Возвращаемое значение:
//  Неопределено
//  См. ДлительныеОперации.ВыполнитьФункцию
Функция СоздатьВУчетеЭлектронныйДокументВФоне(Знач ПараметрыДокумента, Знач ИдентификаторФормы = Неопределено) Экспорт
	
	НаименованиеЗадания = НСтр("ru = '1С:Share. Создание объекта учета по электронному документу.'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	КлючФоновогоЗадания = СтрШаблон("Share_%1", ПараметрыДокумента.ИдентификаторЭлектронногоДокумента);
	
	Если ЕстьАктивноеФоновоеЗадание(КлючФоновогоЗадания, НаименованиеЗадания) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ИдентификаторФормы = Неопределено Тогда
		ИдентификаторФормы = Новый УникальныйИдентификатор();
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(ИдентификаторФормы);
	ПараметрыВыполнения.ОжидатьЗавершение           = 0;
	ПараметрыВыполнения.ЗапуститьВФоне              = Истина;
	ПараметрыВыполнения.КлючФоновогоЗадания         = КлючФоновогоЗадания;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"ИнтеграцияShare.СоздатьВУчетеЭлектронныйДокумент",
		ПараметрыДокумента);
	
КонецФункции

// См. ИнтеграцияShare.ПараметрыОбъектаУчетаКПубликации
Функция ПараметрыОбъектаУчетаКПубликации(Знач ОбъектУчета) Экспорт
	
	Возврат ИнтеграцияShare.ПараметрыОбъектаУчетаКПубликации(ОбъектУчета);
	
КонецФункции

// См. ИнтеграцияShare.РезультатГлобальногоПоискаДокументаПоПубличнойССылке
Функция РезультатГлобальногоПоискаДокументаПоПубличнойССылке(Знач СсылкаДляСкачивания) Экспорт
	
	Возврат ИнтеграцияShare.РезультатГлобальногоПоискаДокументаПоПубличнойССылке(СсылкаДляСкачивания);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьАктивноеФоновоеЗадание(Знач КлючФоновогоЗадания, Знач НаименованиеЗадания)
	
	Отбор = Новый Структура();
	Отбор.Вставить("Ключ"     , КлючФоновогоЗадания);
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	
	НайденныеФоновыеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	Если ЗначениеЗаполнено(НайденныеФоновыеЗадания) Тогда
		Комментарий = СтрШаблон(НСтр("ru = 'Не удалось запустить фоновое задание с ключом %1 по причине:
			|найдено активное фоновое задание с таким же ключом.'", ОбщегоНазначения.КодОсновногоЯзыка()),
			КлючФоновогоЗадания);
		ЗаписьЖурналаРегистрации(НаименованиеЗадания, УровеньЖурналаРегистрации.Предупреждение, , ,Комментарий);
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти