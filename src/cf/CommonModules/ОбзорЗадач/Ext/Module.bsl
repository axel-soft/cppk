////////////////////////////////////////////////////////////////////////////////
// Обзор задач сервер: Содержит процедуры по формированию HTML представления задач.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает текст HTML для показа важных реквизитов предмета задачи (если предмет один, и это документ)
//
// Параметры:
//   ПредметДокумент - СправочникСсылка.ДокументыПредприятия - документ.
//   КешДанных - Структура - кеш данных, который требуется для ускорения работы различных механизмов.
//   КодЯзыка - Строка
//
// Возвращаемое значение:
//   Строка - текст HTML.
//
Функция ПолучитьОбзорПредметаЗадачи(ПредметДокумент, КешДанных = Неопределено, КодЯзыка = Неопределено) Экспорт
	
	HTMLТекст = ОбзорЗадачВызовСервераПереопределяемый.ПолучитьОбзорПредметаЗадачи(ПредметДокумент);
	Если ЗначениеЗаполнено(HTMLТекст) Тогда 
		Возврат HTMLТекст;
	КонецЕсли;
	
	HTMLТекст = "";
	
	Если Не ДокументооборотПраваДоступа.ПраваПользователяПоОбъекту(ПредметДокумент,, КешДанных).Чтение Тогда
		Возврат HTMLТекст;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ОбзорСпискаДокументов.ПолучитьЗапросДляДокумента(ПредметДокумент);

	Запрос.УстановитьПараметр("ТекущийДокумент", ПредметДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		ДанныеОбзора = ОбзорСпискаДокументов.ДанныеОбзора(РезультатЗапроса, КодЯзыка);
		РазложитьТекстHTML = РаботаС_HTML.РазложитьТекстHTML(ДанныеОбзора.HtmlТекст);
		HTMLТекст = РазложитьТекстHTML.Тело;
		
		// Транслируем стиль отступа перед <p>.
		HTMLТекст = СтрЗаменить(HTMLТекст, "<p>", "<br><p>");
		
	КонецЕсли;
	
	ЧислоВПереписке = ЧислоОбъектовВПереписке(ПредметДокумент);
	Если ЧислоВПереписке > 1 Тогда
		
		HTMLТекст = HTMLТекст
			+ СтрШаблон(
				"<A href=""v8doc:tasks/ShowCorrespondence/%1"">",
				ПолучитьНавигационнуюСсылку(ПредметДокумент))
			+ СтрШаблон(НСтр("ru = 'Переписка по документу: <b>%1</b>'", КодЯзыка), 
				ЧислоВПереписке)
			+ "</A>";
		HTMLТекст = HTMLТекст + "<br>";
		
	КонецЕсли;
	
	Возврат HTMLТекст;
	
КонецФункции

// Возвращает текст HTML для показа важных реквизитов предмета задачи (если предмет один, и это мероприятие).
//
// Параметры:
//   ПредметМероприятие - СправочникСсылка.Мероприятия - Мероприятие.
//   КешДанных - Структура - кеш данных, который требуется для ускорения работы различных механизмов.
//   КодЯзыка - Строка
//
// Возвращаемое значение:
//   Строка - текст HTML.
//
Функция ПолучитьОбзорПредметаЗадачиМероприятия(ПредметМероприятие, КешДанных, КодЯзыка) Экспорт
	
	ТекстHTML = "";
	
	Если Не ДокументооборотПраваДоступа.ПраваПользователяПоОбъекту(ПредметМероприятие,, КешДанных).Чтение Тогда
		Возврат ТекстHTML;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	РеквизитыМероприятия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПредметМероприятие,
		"Описание");
	
	// Дополнительные реквизиты.
	БылиДобавленыРеквизиты = ОбзорОбъектов.ДобавитьОбзорДополнительныхРеквизитов(
		ТекстHTML,
		ПредметМероприятие);
	Если БылиДобавленыРеквизиты Тогда
		ОбзорОбъектов.ДобавитьРазделитель(ТекстHTML);
	КонецЕсли;
	
	// Описание
	Если ЗначениеЗаполнено(РеквизитыМероприятия.Описание) Тогда
		ОбзорОбъектов.ДобавитьЗначение(ТекстHTML, РеквизитыМероприятия.Описание);
	КонецЕсли;
	
	Возврат ТекстHTML;
	
КонецФункции

// Получает ссылку на документ - если основной предмет один, и это документ
//
// Параметры:
//   Предметы - табличная часть Предметы от задачи или процесса
//
// Возвращаемое значение:
//   СправочникСсылка - ссылка вх исх внутр документ или Неопределено
Функция ПолучитьОсновнойПредметДокумент(Предметы) Экспорт
	
	Если Предметы.Количество() = 1 Тогда
		
		ПредметСтрока = Предметы[0];
		
		Предмет = ПредметСтрока.Предмет;
		Если ЗначениеЗаполнено(Предмет) И ДелопроизводствоКлиентСервер.ЭтоДокумент(Предмет) Тогда			
			Возврат Предмет;
		КонецЕсли;	
		
		Возврат Неопределено;
		
	КонецЕсли;	
	
	Документ = Неопределено;
	ЧислоОсновныхПредметов = 0;
	
	Для Каждого ПредметСтрока Из Предметы Цикл
		
		Если ПредметСтрока.РольПредмета = Перечисления.РолиПредметов.Основной Тогда
			
			ЧислоОсновныхПредметов = ЧислоОсновныхПредметов + 1;
			
			Предмет = ПредметСтрока.Предмет;
			Если ЗначениеЗаполнено(Предмет) И ДелопроизводствоКлиентСервер.ЭтоДокумент(Предмет) Тогда			
				Документ = Предмет;
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	Если ЧислоОсновныхПредметов = 1  Тогда
		Возврат Документ;
	КонецЕсли;	
	
	Возврат Неопределено;
	
КонецФункции	

// Получает ссылку на мероприятие - если основной предмет один, и это мероприятие.
//
// Параметры:
//   Предметы - ТаблицаЗначений - Табличная часть Предметы от задачи или процесса.
//
// Возвращаемое значение:
//   СправочникСсылка.Мероприятия
//   Неопределено
//
Функция ПолучитьОсновнойПредметМероприятие(Предметы) Экспорт
	
	Если Предметы.Количество() = 1 Тогда
		
		ПредметСтрока = Предметы[0];
		
		Предмет = ПредметСтрока.Предмет;
		Если ЗначениеЗаполнено(Предмет) И ДелопроизводствоКлиентСервер.ЭтоМероприятие(Предмет) Тогда			
			Возврат Предмет;
		КонецЕсли;	
		
		Возврат Неопределено;
		
	КонецЕсли;	
	
	Мероприятие = Неопределено;
	ЧислоОсновныхПредметов = 0;
	
	Для Каждого ПредметСтрока Из Предметы Цикл
		
		Если ПредметСтрока.РольПредмета = Перечисления.РолиПредметов.Основной Тогда
			
			ЧислоОсновныхПредметов = ЧислоОсновныхПредметов + 1;
			
			Предмет = ПредметСтрока.Предмет;
			Если ЗначениеЗаполнено(Предмет) И ДелопроизводствоКлиентСервер.ЭтоМероприятие(Предмет) Тогда			
				Мероприятие = Предмет;
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	Если ЧислоОсновныхПредметов = 1  Тогда
		Возврат Мероприятие;
	КонецЕсли;	
	
	Возврат Неопределено;
	
КонецФункции	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Подсчитывает число объектов в переписке.
//
// Параметры:
//  Предмет - СправочникСсылка
//          - ДокументСсылка
// 
// Возвращаемое значение:
//  Число
//
Функция ЧислоОбъектовВПереписке(Предмет)
	
	Дерево = Новый ДеревоЗначений;
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ДокументыПредприятия"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ВходящееПисьмо"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ИсходящееПисьмо"));
	ДопустимыеТипы = Новый ОписаниеТипов(МассивТипов);
	Дерево.Колонки.Добавить("Ссылка", ДопустимыеТипы);
	
	Дерево.Колонки.Добавить("ДатаРегистрации", 
		Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.Дата)));

	Дерево.Колонки.Добавить("ДатаСоздания", 
		Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	
	Дерево.Колонки.Добавить("Заголовок", Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("РегистрационныйНомер", Новый ОписаниеТипов("Строка"));
	
	Дерево.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	
	Дерево.Колонки.Добавить("Текущий", Новый ОписаниеТипов("Булево"));
	
	Если ЗначениеЗаполнено(Предмет) Тогда
	
		// Для Внутренних документов - все как в форме ИсторияПереписки
		Если ТипЗнч(Предмет) = Тип("СправочникСсылка.ДокументыПредприятия") Тогда
			
			Делопроизводство.ЗаполнитьДерево(Дерево, Предмет);
			
			ЧислоОбъектовПереписки = НайтиЧислоЭлементов(Дерево.Строки);
			Возврат ЧислоОбъектовПереписки + 1; // добавляем сам документ
			
		КонецЕсли;	
		
	КонецЕсли;	
	
	Возврат 0;
		
КонецФункции

// Рассчитывает количество строк.
//
// Параметры:
//  Строки - КоллекцияСтрокДереваЗначений.
// 
// Возвращаемое значение:
//  Число - Количество строк.
//
Функция НайтиЧислоЭлементов(Строки)
	
	ЧислоСтрок = Строки.Количество();
	Для Каждого Строка Из Строки Цикл
		ЧислоСтрок = ЧислоСтрок + НайтиЧислоЭлементов(Строка.Строки);
	КонецЦикла;
	
	Возврат ЧислоСтрок;
	
КонецФункции

#КонецОбласти