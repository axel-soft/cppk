////////////////////////////////////////////////////////////////////////////////
// Подсистема "Напоминания пользователя" (клиент) - переопределение в конфигурации Документооборот.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Показывает текущие напоминания, согласно настроенному варианту показа.
// 
// Параметры:
//  ТекущиеНапоминания - Массив из Структура.
//
Процедура ПоказатьТекущиеНапоминания(ТекущиеНапоминания) Экспорт
	
	Если ТекущиеНапоминания.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытаФормаВсехНапоминаний = ОткрытаФормаВсехНапоминаний();
	Оповестить("ЗакрытьФормуНапоминания");
	
	КоличествоНапоминаний = ТекущиеНапоминания.Количество();
	Если КоличествоНапоминаний > 1 Или ОткрытаФормаВсехНапоминаний Тогда
		
		ПоказатьВсеТекущиеНапоминания();
		
	ИначеЕсли КоличествоНапоминаний = 1 Тогда
		
		Для Каждого ТекущееНапоминание Из ТекущиеНапоминания Цикл
			ПоказатьНапоминание(ТекущееНапоминание);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Прекращает напоминания.
//
// Параметры:
//  ПрекращаемыеНапоминания - Массив - Напоминания, которые необходимо прекратить.
//                                     См. НапоминанияПользователяКлиентСервер.ОписаниеНапоминания().
//
Процедура ПрекратитьНапоминания(ПрекращаемыеНапоминания) Экспорт
	
	Если ПрекращаемыеНапоминания.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	РезультатыПрекращенияНапоминаний =
		НапоминанияПользователяДокументооборотВызовСервера.ПрекратитьНапоминания(ПрекращаемыеНапоминания);
	
	Для Каждого ПрекращаемоеНапоминание Из ПрекращаемыеНапоминания Цикл
		НапоминанияПользователяКлиент.УдалитьЗаписьИзКэшаОповещений(ПрекращаемоеНапоминание);
	КонецЦикла;
	
	Для Каждого РезультатПрекращенияНапоминания Из РезультатыПрекращенияНапоминаний Цикл
		
		Если РезультатПрекращенияНапоминания.ПодключеноНовоеНапоминание Тогда
			НапоминанияПользователяКлиент.ОбновитьЗаписьВКэшеОповещений(РезультатПрекращенияНапоминания.НовоеНапоминание);
		Иначе
			Оповестить("Удаление_НапоминанияПользователя_Документооборот",, РезультатПрекращенияНапоминания.ИсточникНапоминания);
		КонецЕсли;
		
	КонецЦикла;
	
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.НапоминанияПользователя"));
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// Инициализирует переменные общего обработчика ожидания.
//
Процедура ИнициализироватьПеременныеОбщегоОбработчикаОжидания() Экспорт
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске();
	Если Не ПараметрыРаботыКлиента.ДоступноИспользованиеРазделенныхДанных Тогда
		ПроверятьНапоминания = Ложь;
	Иначе
		ПроверятьНапоминания = ПараметрыРаботыКлиента.НастройкиНапоминаний.ИспользоватьНапоминания
	КонецЕсли;
	
	ПараметрыПриложения["Напоминания.ПроверятьНапоминания"] = ПроверятьНапоминания;
	
	// Для работы механизма. Значение устанавливается на 1 минут
	// раньше текущей даты для того что бы проверка была запущена сразу после начала работы.
	ПараметрыПриложения["Напоминания.ДатаПроверкиНапоминаний"] =
		?(ПроверятьНапоминания, ОбщегоНазначенияКлиент.ДатаСеанса() - 60, Дата(1, 1, 1));
	
КонецПроцедуры

// Проверяет готовые к запуску общие обработчики ожидания.
//
// Параметры:
//  ПараметрыВыполнения - Структура - Параметры выполнения общего обработчика ожидания.
//
Процедура ОбщиеОбработчикиОжиданияКЗапуску(ПараметрыВыполнения) Экспорт
	
	ПараметрыВыполнения.Вставить("ПроверитьНапоминания", Ложь);
	
	Если ПараметрыПриложения["Напоминания.ПроверятьНапоминания"]
		И ОбщегоНазначенияКлиент.ДатаСеанса() - ПараметрыПриложения["Напоминания.ДатаПроверкиНапоминаний"] >= 60 Тогда
		ПараметрыВыполнения.ПроверитьНапоминания = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Выполняет действие общего обработчика ожидания на клиенте.
//
// Параметры:
//  РезультатыВыполнения - Структура - Результаты выполнения общего обработчика ожидания на сервере.
//
Процедура ВыполнитьДействиеОбщегоОбработчикаОжидания(РезультатыВыполнения) Экспорт
	
	Если Не РезультатыВыполнения.ПровереныНапоминания Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПриложения["Напоминания.ДатаПроверкиНапоминаний"] = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	Если РезультатыВыполнения.ТекущиеНапоминания.Количество() > 0 Тогда
		ПоказатьТекущиеНапоминания(РезультатыВыполнения.ТекущиеНапоминания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Проверяет, открыта ли форма показа всех напоминаний.
//
// Возвращаемое значение:
//  Булево - Открыта форма показа всех напоминаний.
//
Функция ОткрытаФормаВсехНапоминаний()
	
	ОткрытаФормаВсехНапоминаний = ОбщегоНазначенияДокументооборотКлиент.ОткрытаФорма(ИмяФормыТекущиеНапоминания());
	
	Возврат ОткрытаФормаВсехНапоминаний;
	
КонецФункции

// Открывает форму показа всех текущих напоминаний.
//
Процедура ПоказатьВсеТекущиеНапоминания()
	
	ФормаТекущиеНапоминания = ПолучитьФорму(ИмяФормыТекущиеНапоминания());
	Если ФормаТекущиеНапоминания.Открыта() Тогда
		Возврат;
	КонецЕсли;
	
	ФормаТекущиеНапоминания.Открыть();
	
КонецПроцедуры

// Открывает форму показа одного напоминания.
//
// Параметры:
//  Напоминание - Структура - Напоминание.
//   * ВремяСобытия                      - Дата                                                  - Дата предмета, по которой рассчитан срок.
//   * ИмяРеквизитаИсточника -           - Строка                                                - Реквизит предмета, для расчета срока.
//   * ИндексКартинки                    - Число                                                 - Индекс картинки напоминания.
//   * ИнтервалВремениНапоминания        - Число                                                 - Установлено согласно способу установки время.
//   * Источник                          - СправочникСсылка.ЗаписиРабочегоКалендаря              - Предмет напоминания.
//   * Описание                          - Строка                                                - Текст напоминания.
//   * Пользователь                      - СправочникСсылка.Пользователи                         - Кто должен получить напоминание.
//   * СпособУстановкиВремениНапоминания - ПеречислениеСсылка.СпособыУстановкиВремениНапоминания - Способ установки времени напоминания.
//   * СрокНапоминания                   - Дата                                                  - Когда должно сработать напоминание.
//
Процедура ПоказатьНапоминание(Напоминание)
	
	ПараметрыФормы = Новый Структура("Напоминание", Напоминание);
	ФормаОповещения = ПолучитьФорму(
		ИмяФормыОдногоНапоминания(),
		ПараметрыФормы,,
		Напоминание.Источник.УникальныйИдентификатор());
	Если ФормаОповещения.Открыта() Тогда
		Возврат;
	КонецЕсли;
	
	ФормаОповещения.Открыть();
	
КонецПроцедуры

// Возвращает имя формы показа одного текущего напоминания.
//
// Возвращаемое значение:
//  Строка - Возвращает имя формы показа одного напоминания.
//
Функция ИмяФормыОдногоНапоминания()
	
	ИмяФормыОдногоНапоминания = "РегистрСведений.НапоминанияПользователя.Форма.ФормаОповещенияДокументооборот";
	
	Возврат ИмяФормыОдногоНапоминания;
	
КонецФункции

// Возвращает имя формы показа всех текущих напоминаний.
//
// Возвращаемое значение:
//  Строка - Возвращает имя формы показа всех текущих напоминания.
//
Функция ИмяФормыТекущиеНапоминания()
	
	ИмяФормыТекущиеНапоминания = "РегистрСведений.НапоминанияПользователя.Форма.ФормаОповещения";
	
	Возврат ИмяФормыТекущиеНапоминания;
	
КонецФункции

#КонецОбласти