
#Область СлужебныйПрограммныйИнтерфейс

// Обработчик подписки на событие ДобавлениеВМоиДокументыПередЗаписью.
// Формирует структуру старых реквизитов источника
//
// Параметры:
//   Источник - ЛюбаяСсылка - ссылка на объект-источник события
//
Процедура ДобавлениеВМоиДокументыПередЗаписьюПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка 
		Или Источник.ДополнительныеСвойства.Свойство("РеорганизацияРолейСОбъектамиАдресации") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДелопроизводствоПовтИсп.МоиДокументыИспользуются() Тогда
		Возврат;
	КонецЕсли;
	
	СотрудникПустаяСсылка = Справочники.Сотрудники.ПустаяСсылка();
	
	Если ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.ДействиеЗадачи") Тогда 		
		Если ЗначениеЗаполнено(Источник.Ссылка) Тогда 
			СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Ссылка, 
				"Исполнитель, Задача.Автор, ПометкаУдаления, СостояниеУчастникаЗадачи, Проведен");
			Источник.ДополнительныеСвойства.Вставить("СтароеВыполнена",
				РаботаСЗадачами.ЭтоДействиеВыполненоИлиНаОбработкеРезультата(Источник.Ссылка));
			Источник.ДополнительныеСвойства.Вставить("СтароеОтменена",
				РаботаСЗадачами.ЭтоОтмененноеДействия(Источник.Ссылка));
		Иначе
			СтарыеРеквизиты = Новый Структура("Исполнитель, ЗадачаАвтор, ПометкаУдаления, Проведен, СостояниеУчастникаЗадачи",
				СотрудникПустаяСсылка,
				СотрудникПустаяСсылка,
				Ложь,
				Ложь,
				Справочники.СостоянияУчастниковЗадач.ПустаяСсылка());
			Источник.ДополнительныеСвойства.Вставить("СтароеВыполнена", Ложь);
			Источник.ДополнительныеСвойства.Вставить("СтароеОтменена", Ложь);
		КонецЕсли;  		
		Источник.ДополнительныеСвойства.Вставить("СтарыйИсполнитель", 		СтарыеРеквизиты.Исполнитель);
		Источник.ДополнительныеСвойства.Вставить("СтарыйАвтор", 			СтарыеРеквизиты.ЗадачаАвтор);
		Источник.ДополнительныеСвойства.Вставить("СтараяПометкаУдаления", 	СтарыеРеквизиты.ПометкаУдаления);
		Источник.ДополнительныеСвойства.Вставить("СтароеСостояние", 		СтарыеРеквизиты.СостояниеУчастникаЗадачи);
		Источник.ДополнительныеСвойства.Вставить("СтароеПроведен", 			СтарыеРеквизиты.Проведен);
	КонецЕсли;
	
	Если ДелопроизводствоКлиентСервер.ЭтоДокумент(Источник.Ссылка) Тогда 
		
		Если ЗначениеЗаполнено(Источник.Ссылка) Тогда 
			СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Ссылка, 
				"Ответственный, ПометкаУдаления, Подготовил, Подписал, Стороны");
		Иначе
			ПустаяТаблицаСторон = Новый ТаблицаЗначений;
			ПустаяТаблицаСторон.Колонки.Добавить("Сторона");
			ПустаяТаблицаСторон.Колонки.Добавить("Подписал");
			
			СтарыеРеквизиты = Новый Структура;
			СтарыеРеквизиты.Вставить("Ответственный", СотрудникПустаяСсылка);
			СтарыеРеквизиты.Вставить("ПометкаУдаления", Ложь);
			СтарыеРеквизиты.Вставить("Подготовил", СотрудникПустаяСсылка);
			СтарыеРеквизиты.Вставить("Стороны", ПустаяТаблицаСторон);
			СтарыеРеквизиты.Вставить("Подписал", СотрудникПустаяСсылка);
			 
		КонецЕсли;
		
		Источник.ДополнительныеСвойства.Вставить("СтарыйОтветственный", 	СтарыеРеквизиты.Ответственный);
		Источник.ДополнительныеСвойства.Вставить("СтараяПометкаУдаления",	СтарыеРеквизиты.ПометкаУдаления);
		Источник.ДополнительныеСвойства.Вставить("СтарыйПодготовил", СтарыеРеквизиты.Подготовил);
		Источник.ДополнительныеСвойства.Вставить("СтарыйПодписал", СтарыеРеквизиты.Подписал);
		СтарыеПодписанты = РаботаСПодписямиДокументов.ПодписантыСторонДокумента(СтарыеРеквизиты.Стороны);
		Источник.ДополнительныеСвойства.Вставить("СтарыеПодписанты", СтарыеПодписанты);
		
	КонецЕсли;	
	
КонецПроцедуры

// Обработчик подписки на событие ДобавлениеВМоиДокументыПриЗаписи.
// Записывает документ в регистр МоиДокументы.
//
// Параметры:
//   Источник - ЛюбаяСсылка - ссылка на объект-источник события
//
Процедура ДобавлениеВМоиДокументыПриЗаписиПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка 
		Или Источник.ДополнительныеСвойства.Свойство("РеорганизацияРолейСОбъектамиАдресации") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДелопроизводствоПовтИсп.МоиДокументыИспользуются() Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник.Ссылка) = Тип("ЗадачаСсылка.ЗадачаИсполнителя")
		И Источник.ДополнительныеСвойства.Свойство("ВидЗаписи")
		И Источник.ДополнительныеСвойства.ВидЗаписи <> 
			"ЗаписьСОбновлением_МоихДокументов_КешаИнформацииОбОбъектах_ВизСогласования_ПредметовПодчиненныхПроцессов_ДопРеквизитовПоПредметам_СобытийИзмененияПредметов" Тогда
		
		Возврат;
	КонецЕсли;
		
	ДобавлениеВМоиДокументыЯвляюсьОтветственнымЗаДокумент(Источник);
	
	ДобавлениеВМоиДокументыЯвляюсьАвторомДокумента(Источник);
	
КонецПроцедуры

// Обработчик подписки на событие ДобавлениеВМоиДокументыПриЗаписи.
// Записывает документ в регистр МоиДокументы.
//
// Параметры:
//   Источник - ЛюбаяСсылка - ссылка на объект-источник события
//
Процедура ДобавлениеВМоиДокументыПриПроведении(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка 
		Или Источник.ДополнительныеСвойства.Свойство("РеорганизацияРолейСОбъектамиАдресации") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДелопроизводствоПовтИсп.МоиДокументыИспользуются() Тогда
		Возврат;
	КонецЕсли;

	ДобавлениеВМоиДокументыПоручениеНазначеноМне(Источник);
	ДобавлениеВМоиДокументыОтправленаЗадачаОтМеня(Источник); 
	
КонецПроцедуры

// Обработчик подписки на событие ДобавлениеВМоиДокументыПриЗаписиРегистра.
// Исключает документ в регистр МоиДокументы при изменении состояния.
//
// Параметры:
//   Источник - РегистрСведенийНаборЗаписей.ТекущиеСостоянияДокументов - 
//				набор записей регистра ТекущиеСостоянияДокументов
//
Процедура ДобавлениеВМоиДокументыПриЗаписиРегистраПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	Если Источник.ОбменДанными.Загрузка 
		Или Источник.ДополнительныеСвойства.Свойство("РеорганизацияРолейСОбъектамиАдресации") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДелопроизводствоПовтИсп.МоиДокументыИспользуются() Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого Строка Из Источник Цикл
		
		Если ДелопроизводствоКлиентСервер.ЭтоИсходящийДокумент(Строка.Документ) Тогда 
			// документ исключается, когда зарегистрирован и отправлен 
			Исключается = Ложь;
			РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Строка.Документ, 
				"Ссылка, РегистрационныйНомер");
			Корреспонденция = РаботаСКорреспонденцией.КорреспонденцияДокумента(Строка.Документ);
			Если ЗначениеЗаполнено(Корреспонденция) Тогда
				Получатели = Корреспонденция.Корреспонденты.Выгрузить();
			
				Исключается = ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер)
					И Получатели.Найти(Ложь, "Отправлен") = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоДокументПредприятия(Строка.Документ) Тогда 	
			// документ исключается, когда зарегистрирован и исполнен 
			
			РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Строка.Документ, 
				"Ссылка, РегистрационныйНомер");
			
			ВсеСостояния = Делопроизводство.ПолучитьВсеСостоянияДокумента(РеквизитыДокумента.Ссылка);
			
			Исключается = ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер)
				И ВсеСостояния.Найти(Перечисления.СостоянияДокументов.Исполнен, "Состояние") <> Неопределено;
			
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если Исключается Тогда 
			МоиДокументы.УдалитьЗаписьИзМоиДокументы(Строка.Документ,
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомДокумента,
				Строка.Документ.Подготовил);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавлениеВМоиДокументыПоручениеНазначеноМне(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Источник.Ссылка) <> Тип("ДокументСсылка.ДействиеЗадачи") Тогда 
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("ДанныеЗадачи") Тогда
		РеквизитыЗадачи = Источник.ДополнительныеСвойства.ДанныеЗадачи;
	Иначе
		РеквизитыЗадачи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Источник.Задача, "Приложения");
	КонецЕсли;
	
	КешНСИЗадач = РаботаСЗадачамиПовтИсп.КешНСИЗадач();
	НовоеСостояние = Источник.СостояниеУчастникаЗадачи;
	НовыйВидСостояния = КешНСИЗадач.ВидыСостоянийУчастниковЗадач[НовоеСостояние];
	
	ЭтоОтмененноеДействия =
		Перечисления.ВидыСостоянийУчастниковЗадач.ЭтоОтмененноеДействие(НовыйВидСостояния);
	ЭтоВыполненноеДействие =
		Перечисления.ВидыСостоянийУчастниковЗадач.ЭтоВыполненноеДействие(НовыйВидСостояния)
		Или Перечисления.ВидыСостоянийУчастниковЗадач.ЭтоОжидающееПроверкиДействие(НовыйВидСостояния);
	СтароеВыполнена = Источник.ДополнительныеСвойства.СтароеВыполнена;
	СтароеОтменена = Источник.ДополнительныеСвойства.СтароеОтменена;
	СтароеПроведен = Источник.ДополнительныеСвойства.СтароеПроведен;
	СтараяПометкаУдаления = Источник.ДополнительныеСвойства.СтараяПометкаУдаления; 
	СтароеСостояние = Источник.ДополнительныеСвойства.СтароеСостояние; 
	СтарыйВидСостояния = КешНСИЗадач.ВидыСостоянийУчастниковЗадач[СтароеСостояние];
	
	ЭтоОжидающаяВыполненияЗадача =
		Перечисления.ВидыСостоянийУчастниковЗадач.ЭтоОжидаемоеДействие(НовыйВидСостояния);
	
	СтароеЭтоОжидающаяВыполненияЗадача = 
		Перечисления.ВидыСостоянийУчастниковЗадач.ЭтоОжидаемоеДействие(СтарыйВидСостояния);
	
	Если Источник.ДополнительныеСвойства.СтарыйИсполнитель = Источник.Исполнитель
		И СтараяПометкаУдаления = Источник.ПометкаУдаления
		И СтароеВыполнена = ЭтоВыполненноеДействие
		И СтароеОтменена = ЭтоОтмененноеДействия
		И СтароеПроведен = Источник.Проведен 
		И СтароеЭтоОжидающаяВыполненияЗадача = ЭтоОжидающаяВыполненияЗадача Тогда
		Возврат;
	КонецЕсли;

	// Предметы берем из Задачи
	Предметы = РеквизитыЗадачи.Приложения.Выгрузить().ВыгрузитьКолонку("Приложение");
	Если Предметы.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Для Каждого Предмет Из Предметы Цикл
		
		Если Не ДелопроизводствоКлиентСервер.ЭтоДокумент(Предмет) Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтароеПроведен <> Источник.Проведен
			Или СтароеВыполнена <> ЭтоВыполненноеДействие 
			Или СтараяПометкаУдаления <> Источник.ПометкаУдаления
			Или СтароеОтменена <> ЭтоОтмененноеДействия 
			Или СтароеЭтоОжидающаяВыполненияЗадача <> ЭтоОжидающаяВыполненияЗадача Тогда
			
			Если ЭтоОжидающаяВыполненияЗадача И ((Не СтароеПроведен И Источник.Проведен)
				Или (СтароеВыполнена И Не ЭтоВыполненноеДействие)
				Или (СтароеОтменена И Не ЭтоОтмененноеДействия)
				Или (СтараяПометкаУдаления И Источник.ПометкаУдаления И НЕ ЭтоВыполненноеДействие)
				Или Не СтароеЭтоОжидающаяВыполненияЗадача) Тогда 
				
				МоиДокументы.ДобавитьЗаписьВМоиДокументы(Предмет, 
					Перечисления.ПричиныДобавленияВМоиДокументы.НазначенаЗадачаМне,
					Источник.Исполнитель, Источник.Ссылка);
					
			ИначеЕсли (СтароеПроведен И Не Источник.Проведен)
				Или (Не СтароеВыполнена И ЭтоВыполненноеДействие) Тогда
				
				МоиДокументы.УдалитьЗаписьИзМоиДокументы(Предмет,
					Перечисления.ПричиныДобавленияВМоиДокументы.НазначенаЗадачаМне,
					Источник.Исполнитель, Источник.Ссылка);
					
			ИначеЕсли (Не СтароеОтменена И ЭтоОтмененноеДействия)
				Или СтараяПометкаУдаления <> Источник.ПометкаУдаления 
				Или (СтароеЭтоОжидающаяВыполненияЗадача И Не ЭтоОжидающаяВыполненияЗадача) Тогда
				
				МоиДокументы.УдалитьЗаписьИзМоиДокументы(Предмет,
					Перечисления.ПричиныДобавленияВМоиДокументы.НазначенаЗадачаМне,
					Источник.Исполнитель, Источник.Ссылка);
					
			КонецЕсли;
			
		КонецЕсли;
		
		// изменился исполнитель
		СтарыйИсполнитель = Источник.ДополнительныеСвойства.СтарыйИсполнитель;
		Если СтарыйИсполнитель <> Источник.Исполнитель Тогда 
			
			Если ЗначениеЗаполнено(СтарыйИсполнитель) Тогда 
				МоиДокументы.УдалитьЗаписьИзМоиДокументы(Предмет,
					Перечисления.ПричиныДобавленияВМоиДокументы.НазначенаЗадачаМне,
					СтарыйИсполнитель, Источник.Ссылка);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Источник.Исполнитель) Тогда 
				МоиДокументы.ДобавитьЗаписьВМоиДокументы(Предмет, 
					Перечисления.ПричиныДобавленияВМоиДокументы.НазначенаЗадачаМне,
					Источник.Исполнитель, Источник.Ссылка);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

// Добавление в мои документы "Отправлена задача от меня".
// 
// Параметры:
//  Источник - ДокументОбъект.Задача.
//
Процедура ДобавлениеВМоиДокументыОтправленаЗадачаОтМеня(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Источник.Ссылка) <> Тип("ДокументСсылка.Задача") Тогда 
		Возврат;
	КонецЕсли;
	
	ЭтоОжидающаяВыполненияЗадача =
		Перечисления.ВидыСостоянийЗадач.ЭтоОжидающаяВыполненияЗадача(
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Источник.СостояниеЗадачи,
				"ВидСостояния"));
	
	СтароеЭтоОжидающаяВыполненияЗадача =
		Перечисления.ВидыСостоянийЗадач.ЭтоОжидающаяВыполненияЗадача(
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Источник.ДополнительныеСвойства.ПредыдущиеЗначенияРеквизитов.СостояниеЗадачи,
				"ВидСостояния"));
	
	СтароеПроведен = Источник.ДополнительныеСвойства.ПредыдущиеЗначенияРеквизитов.Проведен;
	СтараяПометкаУдаления = Источник.ДополнительныеСвойства.ПредыдущиеЗначенияРеквизитов.ПометкаУдаления;
	СтарыйАвтор = Источник.ДополнительныеСвойства.ПредыдущиеЗначенияРеквизитов.Автор;
	
	Если СтарыйАвтор = Источник.Автор 
		И СтараяПометкаУдаления = Источник.ПометкаУдаления
		И СтароеПроведен = Источник.Проведен
		И СтароеЭтоОжидающаяВыполненияЗадача = ЭтоОжидающаяВыполненияЗадача Тогда
		Возврат;
	КонецЕсли;

	Предметы = Источник.Приложения.Выгрузить().ВыгрузитьКолонку("Приложение");
	Если Предметы.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Для Каждого Предмет Из Предметы Цикл
		
		Если Не ДелопроизводствоКлиентСервер.ЭтоДокумент(Предмет) Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтароеПроведен <> Источник.Проведен
			Или СтараяПометкаУдаления <> Источник.ПометкаУдаления
			Или СтароеЭтоОжидающаяВыполненияЗадача <> ЭтоОжидающаяВыполненияЗадача Тогда
			
			Если (Не СтароеПроведен И Источник.Проведен И ЭтоОжидающаяВыполненияЗадача)
				Или (СтараяПометкаУдаления И Источник.ПометкаУдаления И ЭтоОжидающаяВыполненияЗадача)
				Или (Не СтароеЭтоОжидающаяВыполненияЗадача И ЭтоОжидающаяВыполненияЗадача) Тогда 
				
				МоиДокументы.ДобавитьЗаписьВМоиДокументы(
					Предмет, 
					Перечисления.ПричиныДобавленияВМоиДокументы.ОтправленаЗадачаОтМеня,
					Источник.Автор, Источник.Ссылка);
					
			ИначеЕсли (СтароеПроведен И Не Источник.Проведен)
				Или (Не СтараяПометкаУдаления И Источник.ПометкаУдаления)
				Или (СтароеЭтоОжидающаяВыполненияЗадача И Не ЭтоОжидающаяВыполненияЗадача) Тогда
				
				МоиДокументы.УдалитьЗаписьИзМоиДокументы(
					Предмет,
					Перечисления.ПричиныДобавленияВМоиДокументы.ОтправленаЗадачаОтМеня,
					Источник.Автор, Источник.Ссылка);
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Изменился Автор.
		Если СтарыйАвтор <> Источник.Автор Тогда 
			
			Если ЗначениеЗаполнено(СтарыйАвтор) Тогда 
				МоиДокументы.УдалитьЗаписьИзМоиДокументы(
					Предмет,
					Перечисления.ПричиныДобавленияВМоиДокументы.ОтправленаЗадачаОтМеня,
					СтарыйАвтор, Источник.Ссылка);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Источник.Автор) Тогда 
				МоиДокументы.ДобавитьЗаписьВМоиДокументы(
					Предмет, 
					Перечисления.ПричиныДобавленияВМоиДокументы.ОтправленаЗадачаОтМеня,
					Источник.Автор, Источник.Ссылка);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ДобавлениеВМоиДокументыЯвляюсьОтветственнымЗаДокумент(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ДелопроизводствоКлиентСервер.ЭтоДокумент(Источник.Ссылка) Тогда 
		Возврат;
	КонецЕсли;
	
	Документ = Источник.Ссылка;
	
	// изменилась пометка удаления
	СтараяПометкаУдаления = Источник.ДополнительныеСвойства.СтараяПометкаУдаления;
	Если СтараяПометкаУдаления <> Источник.ПометкаУдаления Тогда 
		
		Если Не СтараяПометкаУдаления И Источник.ПометкаУдаления Тогда 
			
			МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьОтветственнымЗаДокумент,
				Источник.Ответственный);
			
		ИначеЕсли СтараяПометкаУдаления И Не Источник.ПометкаУдаления Тогда 		
			
			МоиДокументы.ДобавитьЗаписьВМоиДокументы(Документ, 
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьОтветственнымЗаДокумент,
				Источник.Ответственный);
			
		КонецЕсли;
	КонецЕсли;
	
	// изменился ответственный
	СтарыйОтветственный = Источник.ДополнительныеСвойства.СтарыйОтветственный;
	Если СтарыйОтветственный <> Источник.Ответственный Тогда 
		
		Если ЗначениеЗаполнено(СтарыйОтветственный) Тогда 
			МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьОтветственнымЗаДокумент,
				СтарыйОтветственный);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Источник.Ответственный) Тогда 
			МоиДокументы.ДобавитьЗаписьВМоиДокументы(Документ, 
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьОтветственнымЗаДокумент,
				Источник.Ответственный);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавлениеВМоиДокументыЯвляюсьАвторомДокумента(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ДелопроизводствоКлиентСервер.ЭтоДокумент(Источник.Ссылка) Тогда 
		Возврат;
	КонецЕсли;
	
	Исключается = Ложь;
	Если ДелопроизводствоКлиентСервер.ЭтоИсходящийДокумент(Источник.Ссылка) Тогда 
		
		Подготовил = Источник.Подготовил;
		Корреспонденция = РаботаСКорреспонденцией.КорреспонденцияДокумента(Источник.Ссылка);
		Если ЗначениеЗаполнено(Корреспонденция) Тогда
			Получатели = Корреспонденция.Корреспонденты.Выгрузить();
		
			Исключается = ЗначениеЗаполнено(Источник.РегистрационныйНомер)
				И Получатели.Найти(Ложь, "Отправлен") = Неопределено;
		КонецЕсли;
			
		
	ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоВходящийДокумент(Источник.Ссылка) Тогда 
		// Входящие документы по причине "Являюсь автором" в мои документы не записываем. 
		Подготовил = Источник.ДополнительныеСвойства.СтарыйПодготовил;
		
	ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоДокументПредприятия(Источник.Ссылка) Тогда 
		
		Подготовил = Источник.Подготовил;
		
		// документ исключается, когда зарегистрирован и исполнен 
		ВсеСостояния = Делопроизводство.ПолучитьВсеСостоянияДокумента(Источник.Ссылка);
		Исключается = ЗначениеЗаполнено(Источник.РегистрационныйНомер)
			И ВсеСостояния.Найти(Перечисления.СостоянияДокументов.Исполнен, "Состояние") <> Неопределено;
		
	КонецЕсли; 
	
	Документ = Источник.Ссылка;
	
	// изменилась пометка удаления
	СтараяПометкаУдаления = Источник.ДополнительныеСвойства.СтараяПометкаУдаления;
	Если СтараяПометкаУдаления <> Источник.ПометкаУдаления Тогда 
		
		Если Не СтараяПометкаУдаления И Источник.ПометкаУдаления Тогда 
			
			МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомДокумента,
				Подготовил);
			
		ИначеЕсли СтараяПометкаУдаления И Не Источник.ПометкаУдаления И Не Исключается Тогда
			
			МоиДокументы.ДобавитьЗаписьВМоиДокументы(Документ, 
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомДокумента,
				Подготовил);
			
		КонецЕсли;
	КонецЕсли;
	
	// изменился подготовивший
	СтарыйПодготовил = Источник.ДополнительныеСвойства.СтарыйПодготовил;
	Если СтарыйПодготовил <> Подготовил Тогда 
		
		Если ЗначениеЗаполнено(СтарыйПодготовил) Тогда 
			МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомДокумента,
				СтарыйПодготовил);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Подготовил) И Не Исключается Тогда 
			МоиДокументы.ДобавитьЗаписьВМоиДокументы(Документ, 
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомДокумента,
				Подготовил);
		КонецЕсли;
			
	КонецЕсли;
		
	Если Исключается Тогда 
		МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
			Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомДокумента,
			Подготовил);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
