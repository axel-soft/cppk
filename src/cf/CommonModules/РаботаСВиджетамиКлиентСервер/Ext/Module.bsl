////////////////////////////////////////////////////////////////////////////////
// Общий модуль для работы с виджетами.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Определяет параметр действия виджета.
Функция ПараметрВиджета(Форма, ИмяВиджета, ИмяЭлемента, ИмяПараметра) Экспорт
	
	Найден = Ложь;
	ПараметрВиджета = Неопределено;
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	ПараметрыОтбора = Новый Структура("ИмяВиджета, ИмяЭлемента, ИмяПараметра", ИмяВиджета, ИмяЭлемента, ИмяПараметра);
	НайденныеСтроки = Форма.ТаблицаПараметровВиджетов.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() > 0 Тогда
		ПараметрВиджета = НайденныеСтроки[0].ЗначениеПараметра;
		Найден = Истина;
	КонецЕсли;
#Иначе
	// Для исключения избыточных клиент-серверных вызовов, на клиенте не используем НайтиСтроки.
	Для Каждого СтрокаПараметраВиджета Из Форма.ТаблицаПараметровВиджетов Цикл
		Если СтрокаПараметраВиджета.ИмяВиджета = ИмяВиджета
			И СтрокаПараметраВиджета.ИмяЭлемента = ИмяЭлемента
			И СтрокаПараметраВиджета.ИмяПараметра = ИмяПараметра Тогда
			ПараметрВиджета = СтрокаПараметраВиджета.ЗначениеПараметра;
			Найден = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
#КонецЕсли
	
	Если Не Найден Тогда
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Не найдено значение параметра %1.'"), ИмяПараметра);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Если ТипЗнч(ПараметрВиджета) = Тип("СписокЗначений") Тогда
		ПараметрВиджета = ПараметрВиджета.ВыгрузитьЗначения();
	КонецЕсли;
	
	Возврат ПараметрВиджета;
	
КонецФункции

// Устанавливает параметр действия виджета.
Функция УстановитьПараметрВиджета(Форма, ИмяВиджета, ИмяЭлемента, ИмяПараметра, ЗначениеПараметра) Экспорт
	
	Найден = Ложь;
	ПараметрВиджета = Неопределено;
	Для Каждого СтрокаПараметраВиджета Из Форма.ТаблицаПараметровВиджетов Цикл
		Если СтрокаПараметраВиджета.ИмяВиджета = ИмяВиджета
			И СтрокаПараметраВиджета.ИмяЭлемента = ИмяЭлемента
			И СтрокаПараметраВиджета.ИмяПараметра = ИмяПараметра Тогда
			СтрокаПараметраВиджета.ЗначениеПараметра = ЗначениеПараметра;
			Найден = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Не Найден Тогда
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Не найдено значение параметра %1.'"), ИмяПараметра);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Возврат ПараметрВиджета;
	
КонецФункции

// Показывать блок навигации.
Процедура ПоказатьБлок(Форма, ИмяВиджета, Блок) Экспорт
	
	ТекущийБлок = ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "ТекущийБлокНавигации");
	Если Блок = ТекущийБлок Тогда
		Возврат;
	КонецЕсли;
	
	СнятьВыделениеБлока(Форма, ИмяВиджета, ТекущийБлок);
	ВыделитьБлок(Форма, ИмяВиджета, Блок);
	УстановитьПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "ТекущийБлокНавигации", Блок);
	
	ОбновитьНавигациюБлоков(Форма, ИмяВиджета);
	
КонецПроцедуры

// Возвращает предыдущий блок.
Функция ПредыдущийБлок(Форма, ИмяВиджета, Блок = Неопределено) Экспорт
	
	Если Блок = Неопределено Тогда
		Блок = ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "ТекущийБлокНавигации");
	КонецЕсли;
	
	ПредыдущийБлок = Блок;
	
	БлокиНавигации = ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "БлокиНавигации");
	ИндексБлока = БлокиНавигации.Найти(Блок);
	Если Не ЗначениеЗаполнено(ИндексБлока) Тогда
		Возврат ПредыдущийБлок;
	КонецЕсли;
	
	ПредыдущийБлок = БлокиНавигации[ИндексБлока - 1];
	
	Возврат ПредыдущийБлок;
	
КонецФункции

// Возвращает следующий блок.
Функция СледующийБлок(Форма, ИмяВиджета, Блок = Неопределено) Экспорт
	
	Если Блок = Неопределено Тогда
		Блок = ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "ТекущийБлокНавигации");
	КонецЕсли;
	
	СледующийБлок = Блок;
	
	БлокиНавигации = ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "БлокиНавигации");
	ИндексБлока = БлокиНавигации.Найти(Блок);
	Если ИндексБлока = Неопределено Или ИндексБлока = БлокиНавигации.ВГраница() Тогда
		Возврат СледующийБлок;
	КонецЕсли;
	
	СледующийБлок = БлокиНавигации[ИндексБлока + 1];
	
	Возврат СледующийБлок;
	
КонецФункции

// Найти блок по имени элемента команды "Показать блок".
Функция НайтиБлокПоИмениКомандыПоказатьБлок(Форма, ИмяВиджета, ИмяКомандыПоказать) Экспорт
	
	НайденныйБлок = Неопределено;
	Для Каждого Блок Из ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "БлокиНавигации") Цикл
		ИменаЭлементовБлока = ПараметрВиджета(Форма, ИмяВиджета, Блок, "ИменаЭлементовБлока");
		Если ИменаЭлементовБлока.ИмяКомандыПоказать = ИмяКомандыПоказать Тогда
			НайденныйБлок = Блок;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НайденныйБлок = Неопределено Тогда
		ТекстОшибки = НСтр("ru = 'Блок не найден по имени команды ""Показать блок"".'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Возврат НайденныйБлок;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Снимает выделение блока.
Процедура СнятьВыделениеБлока(Форма, ИмяВиджета, Блок)
	
	Если Не ЗначениеЗаполнено(Блок) Тогда
		Возврат;
	КонецЕсли;
	
	ЦветДоступногоБлока = ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "ЦветДоступногоБлока");
	
	ЭлементыБлока = ЭлементыБлока(Форма, ИмяВиджета, Блок);
	ЭлементыБлока.КомандаПоказать.ЦветТекста = ЦветДоступногоБлока;
	ЭлементыБлока.РазделительНавигации.Картинка = БиблиотекаКартинок.РазделительБлока;
	
КонецПроцедуры

// Возвращает элементы блока.
Функция ЭлементыБлока(Форма, ИмяВиджета, Блок)
	
	ИменаЭлементовБлока = ПараметрВиджета(Форма, ИмяВиджета, Блок, "ИменаЭлементовБлока");
	ЭлементыБлока = Новый Структура("КомандаПоказать, РазделительНавигации, СтраницаБлока");
	ЭлементыБлока.КомандаПоказать = Форма.Элементы[ИменаЭлементовБлока.ИмяКнопкиПоказать];
	ЭлементыБлока.РазделительНавигации = Форма.Элементы[ИменаЭлементовБлока.ИмяРазделителяНавигации];
	ЭлементыБлока.СтраницаБлока = Форма.Элементы[ИменаЭлементовБлока.ИмяСтраницыБлока];
	
	Возврат ЭлементыБлока;
	
КонецФункции

// Обновляет навигацию блоков.
Процедура ОбновитьНавигациюБлоков(Форма, ИмяВиджета)
	
	ВидимыеБлоки = ВидимыеБлоки(Форма, ИмяВиджета);
	Для Каждого Блок Из ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "БлокиНавигации") Цикл
		ЭлементыБлока = ЭлементыБлока(Форма, ИмяВиджета, Блок);
		ВидимостьБлока = ВидимыеБлоки.Найти(Блок) <> Неопределено;
		ЭлементыБлока.КомандаПоказать.Видимость = ВидимостьБлока;
		ЭлементыБлока.РазделительНавигации.Видимость = ВидимостьБлока;
	КонецЦикла;
	
	// Доступность команд "Показать следующий блок" и "Показать предыдущий блок"
	// устанавливаем с учетом смены текущего элемента, если после установки текущий элемент
	// будет больше не доступен.
	УстановитьДоступностьКоманды(
		Форма,
		ИмяВиджета,
		Форма.Элементы[ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "ИмяЭлементаПоказатьПредыдущийБлок")],
		ЕстьПредыдущийБлок(Форма, ИмяВиджета),
		ЭлементыБлока(Форма, ИмяВиджета, ПредыдущийБлок(Форма, ИмяВиджета)).КомандаПоказать);
	УстановитьДоступностьКоманды(
		Форма,
		ИмяВиджета,
		Форма.Элементы[ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "ИмяЭлементаПоказатьСледующийБлок")],
		ЕстьСледующийБлок(Форма, ИмяВиджета),
		ЭлементыБлока(Форма, ИмяВиджета, СледующийБлок(Форма, ИмяВиджета)).КомандаПоказать);
	
КонецПроцедуры

// Проверяет наличие предыдущего блока.
Функция ЕстьПредыдущийБлок(Форма, ИмяВиджета, Блок = Неопределено)
	
	Если Блок = Неопределено Тогда
		Блок = ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "ТекущийБлокНавигации");
	КонецЕсли;
	
	ПредыдущийБлок = ПредыдущийБлок(Форма, ИмяВиджета, Блок);
	ЕстьПредыдущийБлок = (ПредыдущийБлок <> Блок);
	
	Возврат ЕстьПредыдущийБлок;
	
КонецФункции

// Проверяет наличие следующего блока.
Функция ЕстьСледующийБлок(Форма, ИмяВиджета, Блок = Неопределено)
	
	Если Блок = Неопределено Тогда
		Блок = ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "ТекущийБлокНавигации");
	КонецЕсли;
	
	СледующийБлок = СледующийБлок(Форма, ИмяВиджета, Блок);
	ЕстьСледующийБлок = (СледующийБлок <> Блок);
	
	Возврат ЕстьСледующийБлок;
	
КонецФункции

// Устанавливает доступность команды.
Процедура УстановитьДоступностьКоманды(Форма, ИмяВиджета, ЭлементКоманды, ДоступностьЭлементаКоманды, НовыйТекущийЭлемент)
	
	// Устанавливаем текущим элемент текущий блок,
	// если после обновления доступности команды текущий элемент станет недоступным.
	// Это нужно для того, чтобы у пользователя не перескакивал текущий элемент.
	Если Не ДоступностьЭлементаКоманды И Форма.ТекущийЭлемент = ЭлементКоманды Тогда
		Форма.ТекущийЭлемент = НовыйТекущийЭлемент;
	КонецЕсли;
	ЭлементКоманды.Доступность = ДоступностьЭлементаКоманды;
	
КонецПроцедуры

// Возвращает видимые блоки.
Функция ВидимыеБлоки(Форма, ИмяВиджета)
	
	МаксимальноеКоличествоВидимыхБлоков = ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "МаксимальноеКоличествоВидимыхБлоков");
	
	ВидимыеБлоки = Новый Массив;
	ВидимыеБлоки.Добавить(ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "ТекущийБлокНавигации"));
	
	// Следующий блок.
	Если ВидимыеБлоки.Количество() < МаксимальноеКоличествоВидимыхБлоков Тогда
		Если ЕстьСледующийБлок(Форма, ИмяВиджета) Тогда
			ВидимыеБлоки.Добавить(СледующийБлок(Форма, ИмяВиджета));
		КонецЕсли;
	КонецЕсли;
	
	// Предыдущий блок.
	Если ВидимыеБлоки.Количество() < МаксимальноеКоличествоВидимыхБлоков Тогда
		Если ЕстьПредыдущийБлок(Форма, ИмяВиджета) Тогда
			ВидимыеБлоки.Добавить(ПредыдущийБлок(Форма, ИмяВиджета));
		КонецЕсли;
	КонецЕсли;
	
	// Предыдущий блок 2.
	Если ВидимыеБлоки.Количество() < МаксимальноеКоличествоВидимыхБлоков Тогда
		Если ЕстьПредыдущийБлок(Форма, ИмяВиджета) Тогда
			ПредыдущийБлок = ПредыдущийБлок(Форма, ИмяВиджета);
			Если ЕстьПредыдущийБлок(Форма, ИмяВиджета, ПредыдущийБлок) Тогда
				ВидимыеБлоки.Добавить(ПредыдущийБлок(Форма, ИмяВиджета, ПредыдущийБлок));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Следующий блок 2.
	Если ВидимыеБлоки.Количество() < МаксимальноеКоличествоВидимыхБлоков Тогда
		Если ЕстьСледующийБлок(Форма, ИмяВиджета) Тогда
			СледующийБлок = СледующийБлок(Форма, ИмяВиджета);
			Если ЕстьСледующийБлок(Форма, ИмяВиджета, СледующийБлок) Тогда
				ВидимыеБлоки.Добавить(СледующийБлок(Форма, ИмяВиджета, СледующийБлок));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Предыдущий блок 3.
	Если ВидимыеБлоки.Количество() < МаксимальноеКоличествоВидимыхБлоков Тогда
		Если ЕстьПредыдущийБлок(Форма, ИмяВиджета) Тогда
			ПредыдущийБлок = ПредыдущийБлок(Форма, ИмяВиджета);
			Если ЕстьПредыдущийБлок(Форма, ИмяВиджета, ПредыдущийБлок) Тогда
				ПредыдущийБлок2 = ПредыдущийБлок(Форма, ИмяВиджета, ПредыдущийБлок);
				Если ЕстьПредыдущийБлок(Форма, ИмяВиджета, ПредыдущийБлок2) Тогда
					ВидимыеБлоки.Добавить(ПредыдущийБлок(Форма, ИмяВиджета, ПредыдущийБлок2));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Следующий блок 3.
	Если ВидимыеБлоки.Количество() < МаксимальноеКоличествоВидимыхБлоков Тогда
		Если ЕстьСледующийБлок(Форма, ИмяВиджета) Тогда
			СледующийБлок = СледующийБлок(Форма, ИмяВиджета);
			Если ЕстьСледующийБлок(Форма, ИмяВиджета, СледующийБлок) Тогда
				СледующийБлок2 = СледующийБлок(Форма, ИмяВиджета, СледующийБлок);
				Если ЕстьСледующийБлок(Форма, ИмяВиджета, СледующийБлок2) Тогда
					ВидимыеБлоки.Добавить(СледующийБлок(Форма, ИмяВиджета, СледующийБлок2));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Предыдущий блок 4.
	Если ВидимыеБлоки.Количество() < МаксимальноеКоличествоВидимыхБлоков Тогда
		Если ЕстьПредыдущийБлок(Форма, ИмяВиджета) Тогда
			ПредыдущийБлок = ПредыдущийБлок(Форма, ИмяВиджета);
			Если ЕстьПредыдущийБлок(Форма, ИмяВиджета, ПредыдущийБлок) Тогда
				ПредыдущийБлок2 = ПредыдущийБлок(Форма, ИмяВиджета, ПредыдущийБлок);
				Если ЕстьПредыдущийБлок(Форма, ИмяВиджета, ПредыдущийБлок2) Тогда
					ПредыдущийБлок3 = ПредыдущийБлок(Форма, ИмяВиджета, ПредыдущийБлок2);
					Если ЕстьПредыдущийБлок(Форма, ИмяВиджета, ПредыдущийБлок3) Тогда
						ВидимыеБлоки.Добавить(ПредыдущийБлок(Форма, ИмяВиджета, ПредыдущийБлок3));
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Следующий блок 4.
	Если ВидимыеБлоки.Количество() < МаксимальноеКоличествоВидимыхБлоков Тогда
		Если ЕстьСледующийБлок(Форма, ИмяВиджета) Тогда
			СледующийБлок = СледующийБлок(Форма, ИмяВиджета);
			Если ЕстьСледующийБлок(Форма, ИмяВиджета, СледующийБлок) Тогда
				СледующийБлок2 = СледующийБлок(Форма, ИмяВиджета, СледующийБлок);
				Если ЕстьСледующийБлок(Форма, ИмяВиджета, СледующийБлок2) Тогда
					СледующийБлок3 = СледующийБлок(Форма, ИмяВиджета, СледующийБлок2);
					Если ЕстьСледующийБлок(Форма, ИмяВиджета, СледующийБлок3) Тогда
						ВидимыеБлоки.Добавить(СледующийБлок(Форма, ИмяВиджета, СледующийБлок3));
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВидимыеБлоки;
	
КонецФункции

// Выделяет блок.
Процедура ВыделитьБлок(Форма, ИмяВиджета, Блок)
	
	ЭлементыБлока = ЭлементыБлока(Форма, ИмяВиджета, Блок);
	ЭлементыБлока.КомандаПоказать.ЦветТекста = ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "ЦветТекущегоБлока");
	ЭлементыБлока.РазделительНавигации.Картинка = БиблиотекаКартинок.ВыделениеБлока;
	
	ИмяЭлементаСтраницыБлоков = ПараметрВиджета(Форма, ИмяВиджета, ИмяВиджета, "ИмяЭлементаСтраницыБлоков");
	Форма.Элементы[ИмяЭлементаСтраницыБлоков].ТекущаяСтраница = ЭлементыБлока.СтраницаБлока;
	
КонецПроцедуры

#КонецОбласти