// @strict-types


#Область ПрограммныйИнтерфейс

// Возвращает параметры формы подписания данных для ДО
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура:
//    * ИменаРеквизитов - ФиксированнаяСтруктура:
//      ** ДоверенностьСертификата - Строка 
//      ** ДоступныеДоверенностиСертификата - Строка
//      ** ВнешниеДоверенностиСертификатов - Строка
//      ** ВыводилиПредупреждениеНеУстановленыСертификатыЭП - Строка
//    * ИменаЭлементов - ФиксированнаяСтруктура:
//      ** Группы - ФиксированнаяСтруктура:
//        *** ГруппаМЧД - Строка
//      ** Элементы - ФиксированнаяСтруктура:
//        *** НадписьДоверенность - Строка
// 
Функция ПараметрыФормыПодписанияДанных() Экспорт
	
	ИменаРеквизитов = Новый Структура;
	ИменаРеквизитов.Вставить("ДоверенностьСертификата", "ДоверенностьСертификата");
	ИменаРеквизитов.Вставить("ДоступныеДоверенностиСертификата", "ДоступныеДоверенностиСертификата");
	ИменаРеквизитов.Вставить("ВнешниеДоверенностиСертификатов", "ВнешниеДоверенностиСертификатов");
	ИменаРеквизитов.Вставить("ВыводилиПредупреждениеНеУстановленыСертификатыЭП",
		"ВыводилиПредупреждениеНеУстановленыСертификатыЭП");
	
	Группы = Новый Структура;
	Группы.Вставить("ГруппаМЧД", "ГруппаМЧД");
	
	Элементы = Новый Структура;
	Элементы.Вставить("НадписьДоверенность", "НадписьДоверенность");
	
	ИменаЭлементов = Новый Структура;
	ИменаЭлементов.Вставить("Группы", Новый ФиксированнаяСтруктура(Группы));
	ИменаЭлементов.Вставить("Элементы", Новый ФиксированнаяСтруктура(Элементы));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИменаРеквизитов", Новый ФиксированнаяСтруктура(ИменаРеквизитов));
	ПараметрыФормы.Вставить("ИменаЭлементов", Новый ФиксированнаяСтруктура(ИменаЭлементов));
	
	Возврат Новый ФиксированнаяСтруктура(ПараметрыФормы);
	
КонецФункции

// Возвращает параметры формы подписания данных для ДО
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура:
//    * ИменаРеквизитов - ФиксированнаяСтруктура:
//      ** ВыводилиПредупреждениеНеУстановленыСертификатыЭП - Строка
// 
Функция ПараметрыФормыШифрованияДанных() Экспорт
	
	ИменаРеквизитов = Новый Структура;
	ИменаРеквизитов.Вставить("ОбязательныеДляШифрованияСертификаты", "ОбязательныеДляШифрованияСертификаты");
	
	СертификатыШифрования = Новый Структура;
	СертификатыШифрования.Вставить("ИмяТаблицы", "СертификатыШифрования");
	СертификатыШифрования.Вставить("ОбязательныйДляШифрования", "ОбязательныйДляШифрования");
	ИменаРеквизитов.Вставить("СертификатыШифрования", Новый ФиксированнаяСтруктура(СертификатыШифрования));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИменаРеквизитов", Новый ФиксированнаяСтруктура(ИменаРеквизитов));
	
	Возврат Новый ФиксированнаяСтруктура(ПараметрыФормы);
	
КонецФункции

// Возвращает параметры формы расшифровки данных для ДО
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура:
//    * ИменаРеквизитов - ФиксированнаяСтруктура:
//      ** ВыводилиПредупреждениеНеУстановленыСертификатыЭП - Строка
// 
Функция ПараметрыФормыРасшифровкиДанных() Экспорт
	
	ИменаРеквизитов = Новый Структура;
	ИменаРеквизитов.Вставить("ВыводилиПредупреждениеНеУстановленыСертификатыЭП",
		"ВыводилиПредупреждениеНеУстановленыСертификатыЭП");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИменаРеквизитов", Новый ФиксированнаяСтруктура(ИменаРеквизитов));
	
	Возврат Новый ФиксированнаяСтруктура(ПараметрыФормы);
	
КонецФункции

// Возвращает параметры формы для отображения страниц сертификатов
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура:
//    * ИменаРеквизитов - ФиксированнаяСтруктура:
//      ** ОписаниеДанныхСертификата - ФиксированнаяСтруктура:
//        *** ИмяТаблицы - Строка
//        *** Свойство - Строка
//        *** Значение - Строка
//    * ИменаЭлементов - ФиксированнаяСтруктура:
//      ** Страницы - ФиксированнаяСтруктура:
//        *** СтраницыСертификаты - Строка
//        *** СтраницаСертификат - Строка
//        *** СтраницаВыборСертификата - Строка
//      ** Группы - ФиксированнаяСтруктура:
//        *** ГруппаСертификатШапка - Строка
//        *** ГруппаОписаниеСертификата - Строка
//        *** ГруппаВыборСертификатаШапка - Строка
//      ** Элементы - ФиксированнаяСтруктура:
//        *** СертификатЗаголовок - Строка
//        *** СертификатЗаголовокОтступ - Строка
//        *** ОписаниеДанныхСертификата - Строка
//        *** ОписаниеДанныхСертификатаСвойство - Строка
//        *** ОписаниеДанныхСертификатаЗначение - Строка
//        *** ВыборСертификатаЗаголовок - Строка
//        *** ВыборСертификатаЗаголовокОтступ - Строка
//        *** СертификатСписокВыбора - Строка
//        *** СертификатСписокВыбораЗначение - Строка
//      ** Кнопки - ФиксированнаяСтруктура:
//        *** ПоказатьДанныеСертификата - Строка
//        *** ПоказатьДанныеСертификатаСписок - Строка
//    * ИменаКоманд - ФиксированнаяСтруктура:
//      ** ПоказатьДанныеСертификата - Строка 
// 
Функция ПараметрыФормыДляОтрображенияСертификатов() Экспорт
	
	ИменаРеквизитов = Новый Структура;
	
	ОписаниеДанныхСертификата = Новый Структура;
	ОписаниеДанныхСертификата.Вставить("ИмяТаблицы", "ОписаниеДанныхСертификата");
	ОписаниеДанныхСертификата.Вставить("Свойство", "Свойство");
	ОписаниеДанныхСертификата.Вставить("Значение", "Значение");
	ИменаРеквизитов.Вставить("ОписаниеДанныхСертификата", Новый ФиксированнаяСтруктура(ОписаниеДанныхСертификата));
	
	Страницы = Новый Структура;
	Страницы.Вставить("СтраницыСертификаты", "СтраницыСертификаты");
	Страницы.Вставить("СтраницаСертификат", "СтраницаСертификат");
	Страницы.Вставить("СтраницаВыборСертификата", "СтраницаВыборСертификата");
	
	Группы = Новый Структура;
	Группы.Вставить("ГруппаСертификатШапка", "ГруппаСертификатШапка");
	Группы.Вставить("ГруппаОписаниеСертификата", "ГруппаОписаниеСертификата");
	Группы.Вставить("ГруппаВыборСертификатаШапка", "ГруппаВыборСертификатаШапка");
	
	Элементы = Новый Структура;
	Элементы.Вставить("СертификатЗаголовок", "СертификатЗаголовок");
	Элементы.Вставить("СертификатЗаголовокОтступ", "СертификатЗаголовокОтступ");
	Элементы.Вставить("ОписаниеДанныхСертификата", "ОписаниеДанныхСертификата");
	Элементы.Вставить("ОписаниеДанныхСертификатаСвойство", "ОписаниеДанныхСертификатаСвойство");
	Элементы.Вставить("ОписаниеДанныхСертификатаЗначение", "ОписаниеДанныхСертификатаЗначение");
	Элементы.Вставить("ВыборСертификатаЗаголовок", "ВыборСертификатаЗаголовок");
	Элементы.Вставить("ВыборСертификатаЗаголовокОтступ", "ВыборСертификатаЗаголовокОтступ");
	Элементы.Вставить("СертификатСписокВыбора", "СертификатСписокВыбора");
	Элементы.Вставить("СертификатСписокВыбораЗначение", "СертификатСписокВыбораЗначение");
	
	Кнопки = Новый Структура;
	Кнопки.Вставить("ПоказатьДанныеСертификата", "ПоказатьДанныеСертификата");
	Кнопки.Вставить("ПоказатьДанныеСертификатаСписок", "ПоказатьДанныеСертификатаСписок");
	
	ИменаЭлементов = Новый Структура;
	ИменаЭлементов.Вставить("Страницы", Новый ФиксированнаяСтруктура(Страницы));
	ИменаЭлементов.Вставить("Группы", Новый ФиксированнаяСтруктура(Группы));
	ИменаЭлементов.Вставить("Элементы", Новый ФиксированнаяСтруктура(Элементы));
	ИменаЭлементов.Вставить("Кнопки", Новый ФиксированнаяСтруктура(Кнопки));
	
	ИменаКоманд = Новый Структура;
	ИменаКоманд.Вставить("ПоказатьДанныеСертификата", "ПоказатьДанныеСертификата");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИменаРеквизитов", Новый ФиксированнаяСтруктура(ИменаРеквизитов));
	ПараметрыФормы.Вставить("ИменаЭлементов", Новый ФиксированнаяСтруктура(ИменаЭлементов));
	ПараметрыФормы.Вставить("ИменаКоманд", Новый ФиксированнаяСтруктура(ИменаКоманд));
	
	Возврат Новый ФиксированнаяСтруктура(ПараметрыФормы);
	
КонецФункции

// Возвращает имя реквизита, содержащего имя события обработчика ожидания
// 
// Возвращаемое значение:
//  Строка - Имя реквизита события обработчика ожидания
Функция ИмяРеквизитаСобытияОбработчикаОжидания() Экспорт
	
	Возврат "СобытиеОбработчикаОжидания";
	
КонецФункции

// Параметры формы сертификата.
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура:
//    * ИменаРеквизитов - ФиксированнаяСтруктура:
//      ** ОбязательныйДляШифрованияНачальноеЗначение - Строка - 
//    * ИменаЭлементов - ФиксированнаяСтруктура:
//      ** ОбязательныйДляШифрования - Строка - 
Функция ПараметрыФормыСертификата() Экспорт
	
	ИменаРеквизитов = Новый Структура;
	ИменаРеквизитов.Вставить("ОбязательныйДляШифрованияНачальноеЗначение",
		"ОбязательныйДляШифрованияНачальноеЗначение");
	
	ИменаЭлементов = Новый Структура;
	ИменаЭлементов.Вставить("ОбязательныйДляШифрования", "ОбязательныйДляШифрования");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИменаРеквизитов", Новый ФиксированнаяСтруктура(ИменаРеквизитов));
	ПараметрыФормы.Вставить("ИменаЭлементов", Новый ФиксированнаяСтруктура(ИменаЭлементов));
	
	Возврат Новый ФиксированнаяСтруктура(ПараметрыФормы);
	
КонецФункции

// Параметры формы сертификатов и программ ЭП и шифрования
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура:
//    * ИменаРеквизитов - ФиксированнаяСтруктура:
//      ** КолонкаСертификатДляШифрования - Строка
//      ** КолонкаСертификатДляШифрованияОтсутствует - Строка
//      ** ДействияПриОтправкеПоПочтеСЭП - Строка
//      ** ДействияПриСохраненииСЭП - Строка
//      ** СохранятьДоверенностиВместеСПодписью - Строка
//    * ИменаЭлементов - ФиксированнаяСтруктура:
//      ** КолонкаСертификатДляШифрования - Строка
//      ** ДействияПриОтправкеПоПочтеСЭП - Строка
//      ** СохранятьДоверенностиВместеСПодписью - Строка
//      ** ДействияПриСохраненииДанныхСЭП - Строка
Функция ПараметрыФормыСертификатовИПрограмм() Экспорт
	
	ИменаРеквизитов = Новый Структура;
	ИменаРеквизитов.Вставить("КолонкаСертификатДляШифрования", "СертификатДляШифрования");
	ИменаРеквизитов.Вставить("КолонкаСертификатДляШифрованияОтсутствует", "СертификатДляШифрованияОтсутствует");
	ИменаРеквизитов.Вставить("ДействияПриОтправкеПоПочтеСЭП", "ДействияПриОтправкеПоПочтеСЭП");
	ИменаРеквизитов.Вставить("ДействияПриСохраненииСЭП", "ДействияПриСохраненииСЭПДокументооборот");
	ИменаРеквизитов.Вставить("СохранятьДоверенностиВместеСПодписью", "СохранятьДоверенностиВместеСПодписью");
	
	ИменаЭлементов = Новый Структура;
	ИменаЭлементов.Вставить("КолонкаСертификатДляШифрования", "ПрограммыСертификатДляШифрования");
	ИменаЭлементов.Вставить("ДействияПриОтправкеПоПочтеСЭП", "ДействияПриОтправкеПоПочтеСЭП");
	ИменаЭлементов.Вставить("СохранятьДоверенностиВместеСПодписью", "СохранятьДоверенностиВместеСПодписью");
	ИменаЭлементов.Вставить("ДействияПриСохраненииДанныхСЭП", "ДействияПриСохраненииДанныхСЭП");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИменаРеквизитов", Новый ФиксированнаяСтруктура(ИменаРеквизитов));
	ПараметрыФормы.Вставить("ИменаЭлементов", Новый ФиксированнаяСтруктура(ИменаЭлементов));
	
	Возврат Новый ФиксированнаяСтруктура(ПараметрыФормы);
	
КонецФункции

// Параметры формы сохранения вместе с ЭП
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура:
//    * ИменаРеквизитов - ФиксированнаяСтруктура:
//      ** КолонкаДоверенностьСсылка - Строка
//      ** КолонкаДоверенностьПредставление - Строка
//      ** КолонкаАдресДанныхВыгрузкиДоверенности - Строка
//      ** СохранятьДоверенность - Строка
//      ** СохранятьДоверенностьНачальноеЗначение - Строка
//    * ИменаЭлементов - ФиксированнаяСтруктура:
//      ** КолонкаДоверенностьПредставление - Строка
//      ** СохранятьДоверенность - Строка
Функция ПараметрыФормыСохраненияВместеСЭП() Экспорт
	
	ИменаРеквизитов = Новый Структура;
	ИменаРеквизитов.Вставить("КолонкаДоверенностьСсылка", "ДоверенностьСсылка");
	ИменаРеквизитов.Вставить("КолонкаДоверенностьПредставление", "ДоверенностьПредставление");
	ИменаРеквизитов.Вставить("КолонкаАдресДанныхВыгрузкиДоверенности", "АдресДанныхВыгрузкиДоверенности");
	ИменаРеквизитов.Вставить("СохранятьДоверенность", "СохранятьДоверенность");
	ИменаРеквизитов.Вставить("СохранятьДоверенностьНачальноеЗначение", "СохранятьДоверенностьНачальноеЗначение");
	
	ИменаЭлементов = Новый Структура;
	ИменаЭлементов.Вставить("КолонкаДоверенностьПредставление", "ДоверенностьПредставление");
	ИменаЭлементов.Вставить("СохранятьДоверенность", "СохранятьДоверенность");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИменаРеквизитов", Новый ФиксированнаяСтруктура(ИменаРеквизитов));
	ПараметрыФормы.Вставить("ИменаЭлементов", Новый ФиксированнаяСтруктура(ИменаЭлементов));
	
	Возврат Новый ФиксированнаяСтруктура(ПараметрыФормы);
	
КонецФункции

#Область ОбеспечениеРаботыЭП

// Создает объект описания защищенного соединения OpenSSL или КриптоПро.
// В веб-клиенте безопасность соединения OpenSSL не обеспечивается, соединение КриптоПро не поддерживается.
// См. также описание объектов ЗащищенноеСоединениеOpenSSL и ЗащищенноеСоединениеКриптоПро в синтаксис-помощнике.
//
// Параметры:
//  СертификатКлиента - СертификатКлиентаФайл
//                    - СертификатКлиентаWindows
//                    - Неопределено - клиентский сертификат OpenSSL.
//  СертификатыУдостоверяющихЦентров - СертификатыУдостоверяющихЦентровФайл
//                                   - СертификатыУдостоверяющихЦентровWindows
//                                   - СертификатыУдостоверяющихЦентровLinux
//                                   - СертификатыУдостоверяющихЦентровОС
//                                   - Неопределено - сертификаты удостоверяющих центров OpenSSL. 
//  ВидСоединения - Строка, Неопределено - "OpenSSL" (по умолчанию), "КриптоПро"
//  
// Возвращаемое значение:
//  ЗащищенноеСоединениеOpenSSL,
//  ЗащищенноеСоединениеКриптоПро
//
Функция НовоеЗащищенноеСоединение(Знач СертификатКлиента = Неопределено, Знач СертификатыУдостоверяющихЦентров = Неопределено, Знач ВидСоединения = Неопределено) Экспорт

	Если ЗначениеЗаполнено(ВидСоединения) Тогда
		ОжидаемыеЗначения = Новый Массив;
		ОжидаемыеЗначения.Добавить("OpenSSL");
		ОжидаемыеЗначения.Добавить("КриптоПро");
		ОбщегоНазначенияКлиентСервер.ПроверитьПараметр("ОбщегоНазначенияКлиентСервер.НовоеЗащищенноеСоединение", "ВидСоединения", ВидСоединения, Тип("Строка"),, ОжидаемыеЗначения);
	КонецЕсли;
	
#Если ВебКлиент Или МобильныйКлиент Тогда
	
	Если ВидСоединения = "КриптоПро" Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Защищенное соединение %1 недоступно в веб-клиенте.'"),
				НСтр("ru = 'КриптоПро'"));
	КонецЕсли;
	
	Возврат Новый ЗащищенноеСоединениеOpenSSL; // Для обратной совместимости.
#Иначе
	Если СертификатыУдостоверяющихЦентров = Неопределено Тогда
		ВерсииПлатформыДляИспользованияСертификатов = "8.3.22.2470; 8.3.23.2122; 8.3.24.1446";
	
		СистемнаяИнформация = Новый СистемнаяИнформация;
		ТекущийНомерВерсии = ОбщегоНазначенияКлиентСервер.ВерсияКонфигурацииБезНомераСборки(СистемнаяИнформация.ВерсияПриложения);
		ИспользоватьСертификатыУдостоверяющихЦентров = ОбщегоНазначенияКлиентСервер.СравнитьВерсииБезНомераСборки(ТекущийНомерВерсии, "8.3.21") > 0;
		
		Если ИспользоватьСертификатыУдостоверяющихЦентров Тогда
			Если ОбщегоНазначенияКлиентСервер.СравнитьВерсииБезНомераСборки(ТекущийНомерВерсии, "8.3.25") < 0 Тогда
				Для Каждого НомерСборки Из СтрРазделить(ВерсииПлатформыДляИспользованияСертификатов, "; ", Ложь) Цикл
					Если СтрНачинаетсяС(НомерСборки, ТекущийНомерВерсии + ".") Тогда
						ИспользоватьСертификатыУдостоверяющихЦентров = 
							ОбщегоНазначенияКлиентСервер.СравнитьВерсии(СистемнаяИнформация.ВерсияПриложения, НомерСборки) >= 0;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если ИспользоватьСертификатыУдостоверяющихЦентров Тогда
				СертификатыУдостоверяющихЦентров = Новый СертификатыУдостоверяющихЦентровОС();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ВидСоединения = "КриптоПро" Тогда
		СистемнаяИнформация = Новый СистемнаяИнформация;
		Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(СистемнаяИнформация.ВерсияПриложения, "8.3.24.0") >= 0 Тогда
			ЗащищенноеСоединениеКриптоПро = Неопределено;
			// АПК:487-выкл Поддержка новых методов платформы (исполняемый код безопасен)
			Выполнить("ЗащищенноеСоединениеКриптоПро = Новый ЗащищенноеСоединениеКриптоПро(СертификатКлиента, СертификатыУдостоверяющихЦентров)");
			// АПК:487-вкл
			Возврат ЗащищенноеСоединениеКриптоПро;
		Иначе
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для создания защищенного соединения %1 необходима версия платформы не ниже 8.3.24. Текущая версия платформы %2.'"),
				НСтр("ru = 'КриптоПро'"), СистемнаяИнформация.ВерсияПриложения);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Новый ЗащищенноеСоединениеOpenSSL(СертификатКлиента, СертификатыУдостоверяющихЦентров);
#КонецЕсли
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти
