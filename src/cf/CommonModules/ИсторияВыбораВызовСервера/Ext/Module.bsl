#Область ПрограммныйИнтерфейс

// Очищает историю выбора пользователей
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи
//  Запротоколировать - Булево - Если Истина, то пишет факт очистки истории в протокол
//
Процедура ОчиститьИсториюВыбораПользователя(Пользователь=Неопределено, Запротоколировать=Истина) Экспорт
	
	Если Пользователь = Неопределено Тогда
		
		Пользователь = Пользователи.ТекущийПользователь();
		
	КонецЕсли;
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Пользователь.ИдентификаторПользователяИБ);
	Если ПользовательИБ <> Неопределено Тогда
		
		ХранилищеСистемныхНастроек.Удалить("ИсторияВыбора",,ПользовательИБ.Имя);
		Если Запротоколировать Тогда
			
			СотрудникиПользователя = Сотрудники.СотрудникиПользователя(Пользователь);
			Для Каждого СотрудникПользователя Из СотрудникиПользователя Цикл
				
				ПротоколированиеРаботыСотрудников.ЗаписатьИсторияВыбораСотрудникаОчищена(
					СотрудникПользователя, Пользователи.ТекущийПользователь());
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Очищает историю выбора всех пользователей за исключением недействительных и помеченных на удаление
//
Процедура ОчиститьИсториюВыбораВсехПользователей() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Пользователь,
		|	Пользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ,
		|	СотрудникиПользователей.Сотрудник КАК СотрудникПользователя
		|ИЗ
		|	РегистрСведений.СотрудникиПользователей КАК СотрудникиПользователей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО СотрудникиПользователей.Пользователь = Пользователи.Ссылка
		|ГДЕ
		|	Пользователи.ПометкаУдаления = ЛОЖЬ
		|	И Пользователи.Недействителен = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Пользователь";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	ПользовательКоторыйЗапустилОчистку = Пользователи.ТекущийПользователь();
	ПредПользователь = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Пользователь = Выборка.Пользователь;
		Если Пользователь <> ПредПользователь Тогда
		
			ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(
				Выборка.ИдентификаторПользователяИБ);
			
			Если ПользовательИБ <> Неопределено Тогда
				
				ХранилищеСистемныхНастроек.Удалить("ИсторияВыбора",,ПользовательИБ.Имя);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ПротоколированиеРаботыСотрудников.ЗаписатьИсторияВыбораСотрудникаОчищена(
			Выборка.СотрудникПользователя, ПользовательКоторыйЗапустилОчистку);
		
		ПредПользователь = Пользователь;
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает Истина, если у пользователя сохранена история выбора, Ложь - если она уже очищена
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - 
//
Функция УПользователяЕстьИсторияВыбора(Пользователь=Неопределено) Экспорт
	
	Если Пользователь = Неопределено Тогда
		
		Пользователь = Пользователи.ТекущийПользователь();
		
	КонецЕсли;
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Пользователь.ИдентификаторПользователяИБ);
	Если ПользовательИБ <> Неопределено Тогда 
		Возврат ОбщегоНазначения.ХранилищеСистемныхНастроекЗагрузить("ИсторияВыбора",,,,ПользовательИБ.Имя) <> Неопределено;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти