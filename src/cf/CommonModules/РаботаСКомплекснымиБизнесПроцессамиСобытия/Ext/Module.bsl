////////////////////////////////////////////////////////////////////////////////
// Работа с комплексными бизнес процессами (события): содержит методы обработки
// событий, связанных с комплексными процессами.
//  
////////////////////////////////////////////////////////////////////////////////

#Область СобытияСхемПроцессов

// Обрабатывает получение формы схемы процесса.
// 
// Предназначена для вызова из ОбработкаПолученияФормы. 
// 
// Параметры:
// 	ВидФормы, Параметры, ВыбраннаяФорма, СтандартнаяОбработка - стандартные параметры
// 	платформенного обработчика событий ОбработкаПолученияФормы.
// 	
// Возвращаемое значение:
// 	Булево - Истина, если получение формы обработано, иначе - Ложь.
//
Функция ОбработатьПолучениеФормыСхемыПроцессов(
	ВидФормы, Параметры, ВыбраннаяФорма, СтандартнаяОбработка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не Параметры.Свойство("Ключ") Или ВидФормы <> "ФормаОбъекта" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПараметрыСхемы = Справочники.ПараметрыСхемДляКомплексныхПроцессов.ПараметрыПоСхеме(Параметры.Ключ);
	
	Если Не ЗначениеЗаполнено(ПараметрыСхемы) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ВладелецСхемы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыСхемы, "ВладелецСхемы");
	
	Параметры.Ключ = ВладелецСхемы;
	Если ТипЗнч(ВладелецСхемы) = Тип("СправочникСсылка.ШаблоныКомплексныхБизнесПроцессов") Тогда
		ВыбраннаяФорма = Метаданные.Справочники.ШаблоныКомплексныхБизнесПроцессов.Формы.КарточкаСхемы;
	ИначеЕсли ТипЗнч(ВладелецСхемы) = Тип("БизнесПроцессСсылка.КомплексныйПроцесс") Тогда
		ВыбраннаяФорма = Метаданные.БизнесПроцессы.КомплексныйПроцесс.Формы.КарточкаСхемы;
	Иначе
		ВызватьИсключение НСтр("ru = 'Неизвестный тип владельца схемы для комплексных процессов.'");		
	КонецЕсли;
	
	Параметры.Вставить("Процесс", ВладелецСхемы);
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СобытияПараметровСхемДляКомплексныхПроцессов

// Обрабатывает получение формы параметров схемы.
// 
// Предназначена для вызова из ОбработкаПолученияФормы. 
// 
// Параметры:
// 	ВидФормы, Параметры, ВыбраннаяФорма, СтандартнаяОбработка - стандартные параметры
// 	платформенного обработчика событий ОбработкаПолученияФормы.
// 	
// Возвращаемое значение:
// 	Булево - Истина, если получение формы обработано, иначе - Ложь.
//
Функция ОбработатьПолучениеФормыПараметровСхемы(
	ВидФормы, Параметры, ВыбраннаяФорма, СтандартнаяОбработка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не Параметры.Свойство("Ключ") И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВладелецСхемы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВладелецСхемы");
	Если Не ОбщегоНазначения.СсылкаСуществует(ВладелецСхемы) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
		
	Параметры.Ключ = ВладелецСхемы;
		
	Если ТипЗнч(ВладелецСхемы) = Тип("СправочникСсылка.ШаблоныКомплексныхБизнесПроцессов") Тогда
		ВыбраннаяФорма = Метаданные.Справочники.ШаблоныКомплексныхБизнесПроцессов.ОсновнаяФормаОбъекта;
	ИначеЕсли ТипЗнч(ВладелецСхемы) = Тип("БизнесПроцессСсылка.КомплексныйПроцесс") Тогда
		ВыбраннаяФорма = Метаданные.БизнесПроцессы.КомплексныйПроцесс.ОсновнаяФормаОбъекта;
	Иначе
		ВызватьИсключение НСтр("ru = 'Неизвестный тип владельца схемы для комплексных процессов.'");
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти