///// Юрлица /////////////////////////////////////////////////////////////////////
// Процедуры, связанные с юридическими лицами - и организациями и контрагентами
// вызовы из форм элементов справочников Контрагенты и Организации
//////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ИсторияНаименований

// Открыть форму редактирования истории КПП.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения -  Форма элемента - владельца истории.
Процедура ОткрытьФормуИсторииКПП(Форма) Экспорт
	
	ПараметрыФормы = Новый Структура(
			"АктуальныйКПП,
			|ИсторияКПП,
			|ТолькоПросмотр", 
			Форма.Объект.КПП,
			Форма.ИсторияКПП,
			Форма.ТолькоПросмотр);
	ОткрытьФорму("ОбщаяФорма.РедактированиеИсторииКПП", ПараметрыФормы, Форма);
	
КонецПроцедуры

// Установить актуальное значение наименований в историю наименований.
// Наименование и полное наименование вносятся в хронологически последнюю строку истории в форме. 
// История в форме всегда отсортирована по периоду.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения -  Форма элемента - владельца истории.
//
Процедура УстановитьАктуальноеЗначениеИсторииНаименований(Форма) Экспорт
	
	ТаблицаИсторииВФорме = Форма.ИсторияНаименований;
	КоличествоСтрок = ТаблицаИсторииВФорме.Количество();
	Если КоличествоСтрок > 0 Тогда
		АктуальнаяСтрока = ТаблицаИсторииВФорме[КоличествоСтрок - 1];
		АктуальнаяСтрока.Наименование		= Форма.Объект.Наименование;
		АктуальнаяСтрока.НаименованиеПолное	= Форма.Объект.НаименованиеПолное;
		
		Форма.ИсторияНаименований_Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Обновить историю наименований в форме элемента после редактирования.
// Из формы показа истории возвращается отредактированная история и помещается в реквизит формы и
// актуальная запись помещается в объект формы (в шапку справочника).
// Логика везде такая. В регистр будет записаны записи, только если
// данные хоть раз менялись, иначе считаются актуальными данные из реквизитов
// справочника, и в регистре истории записей нет.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения	 - форма элемента Контрагенты или Организации, переданная из модуля формы
//  ТаблицаИсторииНовая	 - ДанныеФормыКоллекция	 - Таблица истории, пришедшая из формы редактирования истории
//                                                 Если данные в истории не менялись, то здесь будет одна запись, актуальная.
//
Процедура ОбновитьИсториюНаименованийВФорме(Форма, ТаблицаИсторииНовая) Экспорт
	
	Форма.Модифицированность = Истина;
	Форма.ИсторияНаименований_Модифицированность = Истина;
	
	ТаблицаИсторииВФорме = Форма.ИсторияНаименований;
	ТаблицаИсторииВФорме.Очистить();
	
	Если ТаблицаИсторииНовая.Количество() > 1 Тогда
		Для Каждого СтрокаИстории Из ТаблицаИсторииНовая Цикл
			СтрокаИсторииВФорме = ТаблицаИсторииВФорме.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаИсторииВФорме, СтрокаИстории);
		КонецЦикла;
	КонецЕсли;
	
	ЮрлицаКлиентСервер.ОбновитьЗаголовокДекорацииИсторииНаименований(Форма);
	
	// Сами реквизиты шапки теперь тоже надо обновить, по последней строке истории:
	АктуальнаяСтрока = ТаблицаИсторииНовая[ТаблицаИсторииНовая.Количество()-1];
	Форма.Объект.Наименование		= АктуальнаяСтрока.Наименование;
	Форма.Объект.НаименованиеПолное	= АктуальнаяСтрока.НаименованиеПолное;
	
КонецПроцедуры

#КонецОбласти

#Область ИсторияКПП

// Открыть форму редактирования истории наименований.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения -  Форма элемента - владельца истории.
Процедура ОткрытьФормуИсторииНаименований(Форма) Экспорт
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("АктуальноеНаименованиеПолное",	Форма.Объект.НаименованиеПолное);
	ПараметрыФормы.Вставить("АктуальноеНаименование",		Форма.Объект.Наименование);
	ПараметрыФормы.Вставить("ИсторияНаименований",			Форма.ИсторияНаименований);
	ПараметрыФормы.Вставить("ТолькоПросмотр",				Форма.ТолькоПросмотр);
	
	ОткрытьФорму("ОбщаяФорма.РедактированиеИсторииНаименований", ПараметрыФормы, Форма);
	
КонецПроцедуры

// Установить актуальное значение КПП в историю КПП 
// КПП вносится в хронологически последнюю строку истории в форме. История в форме всегда отсортирована по периоду.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения -  Форма элемента - владельца истории.
//
Процедура УстановитьАктуальноеЗначениеИсторииКПП(Форма) Экспорт
	
	ТаблицаИсторииВФорме = Форма.ИсторияКПП;
	КоличествоСтрок = ТаблицаИсторииВФорме.Количество();
	Если КоличествоСтрок > 0 Тогда
		АктуальнаяСтрока = ТаблицаИсторииВФорме[КоличествоСтрок - 1];
		АктуальнаяСтрока.КПП = Форма.Объект.КПП;
		
		Форма.ИсторияКПП_Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Обновить историю КПП в форме элемента после редактирования
// Из формы редактирования истории возвращается отредактированная история и помещается в реквизит формы и
// актуальная запись помещается в объект формы (в шапку справочника).
// Логика везде такая. В регистр будет записаны записи, только если
// данные хоть раз менялись, иначе считаются актуальными данные из реквизитов
// справочника, и в регистре истории записей нет.
//
// Параметры:
//  Форма				- ФормаКлиентскогоПриложения -  Форма элемента - владельца истории.
//  ТаблицаИсторииНовая	- ДанныеФормыКоллекция	 - Таблица истории, пришедшая из формы редактирования истории
//                                                 Если данные в истории не менялись, то здесь будет одна запись, актуальная.
//
Процедура ОбновитьИсториюКППВФорме(Форма, ТаблицаИсторииНовая) Экспорт
	
	Форма.Модифицированность = Истина;
	Форма.ИсторияКПП_Модифицированность = Истина;
	
	ТаблицаИсторииВФорме = Форма.ИсторияКПП;
	ТаблицаИсторииВФорме.Очистить();
	
	Если ТаблицаИсторииНовая.Количество() > 1 Тогда
		Для Каждого СтрокаИстории Из ТаблицаИсторииНовая Цикл
			СтрокаИсторииВФорме = ТаблицаИсторииВФорме.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаИсторииВФорме, СтрокаИстории);
		КонецЦикла;
	КонецЕсли;
	
	ЮрлицаКлиентСервер.ОбновитьЗаголовокДекорацииИсторииКПП(Форма);
	
	// Сам КПП теперь тоже надо обновить, по последней строке истории:
	Форма.Объект.КПП = ТаблицаИсторииНовая[ТаблицаИсторииНовая.Количество()-1].КПП;
	
КонецПроцедуры

#КонецОбласти

// Константа - Текст оповещения, что успешно прошло заполнение.
// 
// Возвращаемое значение:
//  Строка -
Функция ТекстОповещение_ЗаполненоПоИНН() Экспорт
	
	Возврат НСтр("ru = 'Заполнено по данным гос. реестра.'");
	
КонецФункции

// Константа - текст вопроса при перезаполнении при заполнении по ИНН из госреестров.
// 
// Возвращаемое значение:
//  Строка -
Функция ТекстВопроса_Перезаполнить() Экспорт

	Возврат НСтр("ru='Перезаполнить текущие реквизиты?'");

КонецФункции

#КонецОбласти

