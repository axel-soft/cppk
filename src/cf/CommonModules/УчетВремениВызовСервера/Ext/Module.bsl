////////////////////////////////////////////////////////////////////////////////
// Учет времени (вызов сервера).
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает фактические работы на дату по Сотруднику
//	
Функция ПолучитьРаботыЗаДень(Дата, Сотрудник) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФактическиеТрудозатраты.Сотрудник КАК Сотрудник,
	|	ФактическиеТрудозатраты.Источник КАК Источник,
	|	ФактическиеТрудозатраты.Проект КАК Проект,
	|	ФактическиеТрудозатраты.ПроектнаяЗадача КАК ПроектнаяЗадача,
	|	ФактическиеТрудозатраты.ВидРабот КАК ВидРабот,
	|	ФактическиеТрудозатраты.ДатаДобавления КАК ДатаДобавления,
	|	ФактическиеТрудозатраты.Начало КАК Начало,
	|	ФактическиеТрудозатраты.Окончание КАК Окончание,
	|	ФактическиеТрудозатраты.Длительность КАК Длительность,
	|	ФактическиеТрудозатраты.ЕжедневныйОтчет КАК ЕжедневныйОтчет,
	|	ФактическиеТрудозатраты.ОписаниеРаботы КАК ОписаниеРаботы,
	|	ФактическиеТрудозатраты.НомерДобавления КАК НомерДобавленияИсходный
	|ИЗ
	|	РегистрСведений.ФактическиеТрудозатраты КАК ФактическиеТрудозатраты
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(ФактическиеТрудозатраты.ДатаДобавления, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаОтчета, ДЕНЬ)
	|	И ФактическиеТрудозатраты.Сотрудник = &Сотрудник";
	Запрос.УстановитьПараметр("ДатаОтчета", Дата);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Заполняет время начала и окончания дня в зависимости от настроек пользователя
//
Процедура ЗаполнитьНачалоИОкончаниеДня(Объект) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьГрафикиРаботы") Тогда 
		Возврат;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда 
		Возврат;
	КонецЕсли;
	
	ГрафикРаботы = ГрафикиРаботы.ГрафикРаботыСотрудника(Объект.Сотрудник);
	СтруктураВозврата = ГрафикиРаботы.ПолучитьНачалоИОкончаниеРабочегоДня(Объект.Дата, ГрафикРаботы);
	
	Если ЗначениеЗаполнено(СтруктураВозврата.НачалоДня) Тогда 
		Объект.НачалоДня = СтруктураВозврата.НачалоДня;
		Объект.НачалоДня = Объект.НачалоДня - Секунда(Объект.НачалоДня);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураВозврата.ОкончаниеДня) Тогда 
		Объект.ОкончаниеДня = СтруктураВозврата.ОкончаниеДня;
		Объект.ОкончаниеДня = Объект.ОкончаниеДня - Секунда(Объект.ОкончаниеДня);
	КонецЕсли;	
	
КонецПроцедуры	

// Переключить хронометраж.
// 
// Параметры:
//  Ссылка - см. РегистрСведений.ХронометражРабочегоВремениСотрудников.Объект
//  ПараметрыУчетаВремени - См. УчетВремениКлиентСервер.НовыйПараметрыУчетаВремени
// 
// Возвращаемое значение:
//  Структура:
//   * ПараметрыОповещения - Структура
//   * ПараметрыУчетаВремени - см. УчетВремениКлиентСервер.НовыйПараметрыУчетаВремени
// 
Функция ПереключитьХронометраж(Знач Ссылка, Знач ПараметрыУчетаВремени) Экспорт
	
	ПараметрыОповещения = Новый Структура;
	
	ПереключитьХронометражНеМеняяПодсказку = Новый Структура("Подсказка");
	ЭлементПереключитьХронометраж = Новый Структура("Пометка");
	УчетВремени.ПереключитьХронометражСервер(
		ПараметрыОповещения,
		ПараметрыУчетаВремени.ДатаНачалаХронометража,
		ПараметрыУчетаВремени.ДатаКонцаХронометража,
		ПараметрыУчетаВремени.ВключенХронометраж,
		Ссылка,
		ПараметрыУчетаВремени.ВидыРабот,
		ПереключитьХронометражНеМеняяПодсказку,
		ЭлементПереключитьХронометраж);
	
	НовыеПараметрыУчетаВремени = УчетВремениКлиентСервер.НовыйПараметрыУчетаВремени();
	НовыеПараметрыУчетаВремени.ДатаНачалаХронометража = ПараметрыУчетаВремени.ДатаНачалаХронометража;
	НовыеПараметрыУчетаВремени.ДатаКонцаХронометража = ПараметрыУчетаВремени.ДатаКонцаХронометража;
	НовыеПараметрыУчетаВремени.ВключенХронометраж = ПараметрыУчетаВремени.ВключенХронометраж;
	НовыеПараметрыУчетаВремени.ВидыРабот = ПараметрыУчетаВремени.ВидыРабот;
	НовыеПараметрыУчетаВремени.ЭлементПереключитьХронометражПометка = ЭлементПереключитьХронометраж.Пометка;
	
	РезультатПереключенияХронометража = Новый Структура;
	РезультатПереключенияХронометража.Вставить("ПараметрыОповещения", ПараметрыОповещения);
	РезультатПереключенияХронометража.Вставить("ПараметрыУчетаВремени", НовыеПараметрыУчетаВремени);
	
	Возврат РезультатПереключенияХронометража;
	
КонецФункции

#КонецОбласти