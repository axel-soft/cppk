
////////////////////////////////////////////////////////////////////////////////
// <Сроки исполнения процессов клиент сервер: содержит процедуры и функции по работе со сроками процессов.>
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает формат даты для сроков процессов в зависимости
// от настройки ИспользоватьДатуИВремяВСрокахЗадач.
//
// Параметры:
//  ИспользоватьДатуИВремяВСрокахЗадач - Булево - значение настройки.
//
// Возвращаемое значение:
//  Строка
//
Функция ФорматДатыСроковПроцессовИЗадач(ИспользоватьДатуИВремяВСрокахЗадач) Экспорт
	
	Возврат ОбщегоНазначенияДокументооборотКлиентСервер.ФорматДатыСроков(
		ИспользоватьДатуИВремяВСрокахЗадач);
	
КонецФункции

// Убирает секунды в переданной дате.
//
// Параметры
//   ДатаИВремя - Дата
//
Процедура УбратьСекундыВДате(ДатаИВремя) Экспорт
	
	ДатаИВремя = НачалоДня(ДатаИВремя) + Час(ДатаИВремя) * 3600 + Минута(ДатаИВремя) * 60;
	
КонецПроцедуры

// Возвращает представление длительности.
//
// Параметры:
//  Дни, Часы, Минуты - Число - длительность в днях, часах и минутах
//
// Возвращаемое значение:
//  Строка - представление длительности строкой.
//
Функция ПредставлениеДлительности(Дни, Часы, Минуты) Экспорт
	
	Возврат ОбщегоНазначенияДокументооборотКлиентСервер.ПредставлениеДлительности(
		Дни, Часы, Минуты);
	
КонецФункции

// Возвращает длительность по представлению
//
// Параметры:
//   ПредставлениеДлительности - Строка - представление длительности
//
// Возвращаемое значение:
//   Структура
//     * Дни - Число
//     * Часы - Число
//     * Минуты - Число
//
Функция ДлительностьПоПредставлению(ПредставлениеДлительности) Экспорт
	
	Возврат ОбщегоНазначенияДокументооборотКлиентСервер.ДлительностьПоПредставлению(
		ПредставлениеДлительности);
	
КонецФункции

// Возвращает дату по представлению
//
// Параметры:
//   ПредставлениеДаты - Строка - дата в виде строки
//
// Возвращаемое значение:
//   Дата, Неопределено - если по представлению не удалось определить дату, то возвращается Неопределено.
//
Функция ДатаПоПредставлению(ПредставлениеДаты) Экспорт
	
	Возврат ОбщегоНазначенияДокументооборотКлиентСервер.ДатаПоПредставлению(ПредставлениеДаты);
	
КонецФункции

// Возвращает варианты установки срока исполнения
//
// Возвращаемое значение:
//  Структура:
//   * ТочныйСрок
//   * ОтносительныйСрок
//
Функция ВариантыУстановкиСрокаИсполнения() Экспорт
	
	Возврат ОбщегоНазначенияДокументооборотКлиентСервер.ВариантыУстановкиСрокаИсполнения();
	
КонецФункции

// Определяет, является ли текущий исполнитель Ответственным
//
// Параметры:
//  СтрокаИсполнителя - СтрокаТаблицыЗначений, ДанныеФормыЭлементКоллекции - строка в таблице Исполнители.
//
// Возвращаемое значение:
//   Булево - возвращает Истину, если в текущей строке есть поле Ответственный, и оно имеет значение Истина.
//
Функция ЭтоСтрокаОтветственного(СтрокаИсполнителя) Экспорт
	
	Возврат ЗначениеСвойстваОбъекта(СтрокаИсполнителя, "Ответственный", Ложь);
	
КонецФункции

// Возвращает свойство объекта. В случае отсутствия свойства, возвращает пустое значение.
//
// Параметры:
//  Объект - Произвольный - Любой объект с полями/реквизитами/свойствами.
//  ИмяСвойства - Строка - Имя свойства, значение которого необходимо определить.
//  ПустоеЗначение - Произвольный - Пустое значение свойства.
//
// Возвращаемое значение:
//  Произвольный
//
Функция ЗначениеСвойстваОбъекта(Объект, ИмяСвойства, ПустоеЗначение) Экспорт
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить(ИмяСвойства, ПустоеЗначение);
	
	ЗаполнитьЗначенияСвойств(СтруктураПоиска, Объект);
	
	Возврат СтруктураПоиска[ИмяСвойства];
	
КонецФункции

#Область ПрограммныйИнтерфейс_КарточкиПроцессовИШаблонов

// Возвращает структуру параметров для настройки доступности
// элемента управления сроком.
//
// Используется в процедуре НастроитьЭлементУправленияСроком.
//
// Может быть переопределена в
// СрокиИсполненияПроцессовКлиентСерверПереопределяемый.ПриОпределенииПараметровДоступностиЭлементаУправления
//
// Возвращаемое значение:
//  Структура
//   * ДоступностьПоШаблону - Булево - настройка доступности реквизита по шаблону процесса.
//
Функция ПараметрыДоступностиЭлементаУправления() Экспорт
	
	Параметры = Новый Структура;
	
	СтандартнаяОбработка = Истина;
	
	СрокиИсполненияПроцессовКлиентСерверПереопределяемый.
		ПриОпределенииПараметровДоступностиЭлементаУправления(
			Параметры, СтандартнаяОбработка);
	
	Параметры.Вставить("ДоступностьПоШаблону");
	
	Возврат Параметры;
	
КонецФункции

// Настраивает возможность изменения значения элемента управления сроком.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма процесса.
//  ЭлементУправленияСроком - ПолеФормы - поле формы управления сроком.
//  РеквизитПредставлениеСрока - Строка - реквизит содержащий представление срока.
//  ПараметрыДоступности - Структура - см. функцию ПараметрыДоступностиЭлементаУправления.
//
Процедура НастроитьЭлементУправленияСроком(Форма,
	ЭлементУправленияСроком,
	РеквизитПредставлениеСрока,
	ПараметрыДоступности) Экспорт
	
	ДоступностьПоШаблону = ПараметрыДоступности.ДоступностьПоШаблону;
	
	СтандартнаяОбработка = Истина;
	
	СрокиИсполненияПроцессовКлиентСерверПереопределяемый.ПриНастройкеЭлементаУправленияСроком(
		Форма, ЭлементУправленияСроком, РеквизитПредставлениеСрока,
		ПараметрыДоступности, СтандартнаяОбработка);
		
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	// Устанавливаем значения по умолчанию (включаем доступность всех полей)
	ЭлементУправленияСроком.ТолькоПросмотр = Ложь;
	
	// Устанвавливаем заначение в зависимости от параметров формы
	Если Форма.ТолькоПросмотр Тогда
		// Если форма процесса недоступна для изменения, тогда не даем менять сроки.
		ЭлементУправленияСроком.ТолькоПросмотр = Истина;
	ИначеЕсли ДоступностьПоШаблону = Ложь И ЗначениеЗаполнено(РеквизитПредставлениеСрока) Тогда
		// Если изменение запрещено по шаблону и сроки заполнены, тогда запрещаем менять.
		ЭлементУправленияСроком.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет представление сроков исполнения в карточке процесса/шаблона
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - форма процесса
//
Процедура ЗаполнитьПредставлениеСроковИсполненияВФорме(Форма) Экспорт
	
	Если Форма.Объект.Свойство("Исполнители") Тогда
		ЗаполнитьПредставлениеСроковВТаблицеИсполнителей(
			Форма.Объект.Исполнители,
			Форма.ИспользоватьДатуИВремяВСрокахЗадач,
			ЗначениеЗаполнено(Форма.ДатаОтсчетаДляРасчетаСроков));
	КонецЕсли;
	
	Если Форма.Объект.Свойство("Исполнитель") Тогда
		
		Если ЗначениеЗаполнено(Форма.ДатаОтсчетаДляРасчетаСроков) Тогда
			СрокИсполнения = Форма.Объект.СрокИсполнения;
		Иначе
			СрокИсполнения = Дата(1,1,1);
		КонецЕсли;
		
		ЗаполнитьПредставлениеСроковУчастника(
			Форма.СрокИсполненияПредставление,
			СрокИсполнения,
			Форма.Объект.СрокИсполненияДни,
			Форма.Объект.СрокИсполненияЧасы,
			Форма.Объект.СрокИсполненияМинуты,
			Форма.Объект.ВариантУстановкиСрокаИсполнения,
			Форма.ИспользоватьДатуИВремяВСрокахЗадач);
	КонецЕсли;
	
	Если Форма.Объект.Свойство("СрокОбработкиРезультатов") Тогда
		
		Если ЗначениеЗаполнено(Форма.ДатаОтсчетаДляРасчетаСроков) Тогда
			СрокОбработкиРезультатов = Форма.Объект.СрокОбработкиРезультатов;
		Иначе
			СрокОбработкиРезультатов = Дата(1,1,1);
		КонецЕсли;
		
		ЗаполнитьПредставлениеСроковУчастника(
			Форма.СрокОбработкиРезультатовПредставление,
			СрокОбработкиРезультатов,
			Форма.Объект.СрокОбработкиРезультатовДни,
			Форма.Объект.СрокОбработкиРезультатовЧасы,
			Форма.Объект.СрокОбработкиРезультатовМинуты,
			Форма.Объект.ВариантУстановкиСрокаОбработкиРезультатов,
			Форма.ИспользоватьДатуИВремяВСрокахЗадач);
	КонецЕсли;
	
	Если Форма.Объект.Свойство("Участники") Тогда
		ЗаполнитьПредставлениеСроковВДеревеУчастников(
			Форма.УчастникиПроцесса,
			Форма.ИспользоватьДатуИВремяВСрокахЗадач,
			ЗначениеЗаполнено(Форма.ДатаОтсчетаДляРасчетаСроков))
	КонецЕсли;
	
	Если Форма.Объект.Свойство("СрокИсполненияПроцесса") Тогда
		
		Дата = Дата(1,1,1);
		Если ЗначениеЗаполнено(Форма.ДатаОтсчетаДляРасчетаСроков)
			И ЗначениеЗаполнено(Форма.Объект.СрокИсполненияПроцесса) Тогда
			
			Дата = Форма.Объект.СрокИсполненияПроцесса;
		КонецЕсли;
		
		Дни = 0;
		Часы = 0;
		Минуты = 0;
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("СрокИсполненияПроцессаДни");
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Форма);
		
		Если СтруктураПоиска.СрокИсполненияПроцессаДни <> Неопределено Тогда
			Дни = Форма.СрокИсполненияПроцессаДни;
			Часы = Форма.СрокИсполненияПроцессаЧасы;
			Минуты = Форма.СрокИсполненияПроцессаМинуты;
		КонецЕсли;
		
		ЗаполнитьПредставлениеСрокаИсполненияПроцесса(
			Форма.СрокИсполненияПроцессаПредставление,
			Дата, Дни, Часы, Минуты,
			Форма.ИспользоватьДатуИВремяВСрокахЗадач);
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет представление срока исполнения в таблице исполнителей процесса.
//
// Параметры:
//  РеквизитИсполнители - ДанныеФормыКоллекция - таблица исполнителей процесса.
//  ИспользоватьДатуИВремяВСрокахЗадач - Булево - признак использования даты и времени
//                                                в сроках исполнения.
//  ВключитьВПредставлениеТочныйСрок - Булево - признак, определяющий необходимость
//                                              включения в представление точного срока.
//
Процедура ЗаполнитьПредставлениеСроковВТаблицеИсполнителей(
	РеквизитИсполнители,
	ИспользоватьДатуИВремяВСрокахЗадач,
	ВключитьВПредставлениеТочныйСрок = Истина) Экспорт
	
	Для Каждого СтрИсполнитель Из РеквизитИсполнители Цикл
		
		Если ВключитьВПредставлениеТочныйСрок Тогда
			СрокИсполнения = СтрИсполнитель.СрокИсполнения;
		Иначе
			СрокИсполнения = Дата(1,1,1);
		КонецЕсли;
		
		СтрИсполнитель.СрокИсполненияПредставление = ПредставлениеСрокаИсполнения(
			СрокИсполнения,
			СтрИсполнитель.СрокИсполненияДни,
			СтрИсполнитель.СрокИсполненияЧасы,
			СтрИсполнитель.СрокИсполненияМинуты,
			ИспользоватьДатуИВремяВСрокахЗадач,
			СтрИсполнитель.ВариантУстановкиСрокаИсполнения);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет представление срока исполнения в дереве участников процесса.
//
// Параметры:
//  ДеревоУчастников - ДанныеФормыКоллекцияЭлементовДерева - дерево участников.
//  ИспользоватьДатуИВремяВСрокахЗадач - Булево - признак использования даты и времени
//                                                в сроках исполнения.
//  ВключитьВПредставлениеТочныйСрок - Булево - признак, определяющий необходимость
//                                              включения в представление точного срока.
//
Процедура ЗаполнитьПредставлениеСроковВДеревеУчастников(
	ДеревоУчастников, ИспользоватьДатуИВремяВСрокахЗадач, ВключитьВПредставлениеТочныйСрок) Экспорт
	
	СтрокиДереваДляОбработки = Новый Массив;
	
	Для Каждого ПодчиненнаяСтрока Из ДеревоУчастников.ПолучитьЭлементы() Цикл
		СтрокиДереваДляОбработки.Добавить(ПодчиненнаяСтрока);
	КонецЦикла;
	
	Пока СтрокиДереваДляОбработки.Количество() > 0 Цикл
		
		СтрокаДерева = СтрокиДереваДляОбработки[0];
		
		Если ВключитьВПредставлениеТочныйСрок Тогда
			СрокИсполнения = СтрокаДерева.СрокИсполнения;
		Иначе
			СрокИсполнения = Дата(1,1,1);
		КонецЕсли;
		
		СтрокаДерева.СрокИсполненияПредставление = ПредставлениеСрокаИсполнения(
			СрокИсполнения,
			СтрокаДерева.СрокИсполненияДни,
			СтрокаДерева.СрокИсполненияЧасы,
			СтрокаДерева.СрокИсполненияМинуты,
			ИспользоватьДатуИВремяВСрокахЗадач,
			СтрокаДерева.ВариантУстановкиСрокаИсполнения);
		
		Для Каждого ПодчиненнаяСтрока Из СтрокаДерева.ПолучитьЭлементы() Цикл
			СтрокиДереваДляОбработки.Добавить(ПодчиненнаяСтрока);
		КонецЦикла;
		
		СтрокиДереваДляОбработки.Удалить(0);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет представление срока исполнения участника процесса.
//
// Параметры:
//  СрокИсполненияПредставление - Строка - представление срока исполнения.
//  СрокИсполнения - Дата - срок исполнения датой.
//  СрокИсполненияДни, СрокИсполненияЧасы, СрокИсполненияМинуты - Число - относительный срок исполнения.
//  ВариантУстановкиСрокаИсполнения - ПеречислениеСсылка.ВариантыУстановкиСрокаИсполнения - вариант установки срока.
//  ИспользоватьДатуИВремяВСрокахЗадач - Булево - признак использования даты и времени в сроках исполнения.
//
Процедура ЗаполнитьПредставлениеСроковУчастника(
	СрокИсполненияПредставление,
	СрокИсполнения,
	СрокИсполненияДни,
	СрокИсполненияЧасы,
	СрокИсполненияМинуты,
	ВариантУстановкиСрокаИсполнения,
	ИспользоватьДатуИВремяВСрокахЗадач) Экспорт
	
	СрокИсполненияПредставление = ПредставлениеСрокаИсполнения(
			СрокИсполнения,
			СрокИсполненияДни,
			СрокИсполненияЧасы,
			СрокИсполненияМинуты,
			ИспользоватьДатуИВремяВСрокахЗадач,
			ВариантУстановкиСрокаИсполнения);
	
КонецПроцедуры

// Заполняет представление срока исполнения процесса.
//
// Параметры:
//  СрокИсполненияПредставление - Строка - представление срока исполнения процесса.
//  СрокИсполнения - Дата - Срок исполнения процесса датой.
//  СрокИсполненияДни, СрокИсполненияЧасы, СрокИсполненияМинуты - Число - относительный срок исполнения процесса.
//  ИспользоватьДатуИВремяВСрокахЗадач - Булево - признак использования даты и времени в сроках исполнения.
//
Процедура ЗаполнитьПредставлениеСрокаИсполненияПроцесса(
	СрокИсполненияПредставление,
	СрокИсполнения,
	СрокИсполненияДни,
	СрокИсполненияЧасы,
	СрокИсполненияМинуты,
	ИспользоватьДатуИВремяВСрокахЗадач) Экспорт
	
	Если ЗначениеЗаполнено(СрокИсполнения)
		И (ЗначениеЗаполнено(СрокИсполненияДни)
			Или ЗначениеЗаполнено(СрокИсполненияЧасы)
			Или ЗначениеЗаполнено(СрокИсполненияМинуты)) Тогда
		
		СрокИсполненияПредставление = ПредставлениеСрокаИсполнения(
			СрокИсполнения,
			СрокИсполненияДни,
			СрокИсполненияЧасы,
			СрокИсполненияМинуты,
			ИспользоватьДатуИВремяВСрокахЗадач,
			ПредопределенноеЗначение("Перечисление.ВариантыУстановкиСрокаИсполнения.ОтносительныйСрок"));
		
	ИначеЕсли ЗначениеЗаполнено(СрокИсполненияДни)
			Или ЗначениеЗаполнено(СрокИсполненияЧасы)
			Или ЗначениеЗаполнено(СрокИсполненияМинуты) Тогда
		
		СрокИсполненияПредставление = ПредставлениеДлительности(
			СрокИсполненияДни,
			СрокИсполненияЧасы,
			СрокИсполненияМинуты);
	Иначе
		ФормаДаты = ФорматДатыСроковПроцессовИЗадач(ИспользоватьДатуИВремяВСрокахЗадач);
		СрокИсполненияПредставление = Формат(СрокИсполнения, ФормаДаты);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает представление срока исполнения в виде
// дата (длительность) или длительность (дата).
//
// Параметры:
//  Дата - Дата - срок исполнения датой.
//  Дни, Часы, Минуты - Число - длительность исполнения.
//  ИспользоватьДатуИВремяВСрокахЗадач - Булево - признак использования даты и времени в сроках
//                                       процессов и задач.
//  ВариантУстановкиСрока - ПеречислениеСсылка.ВариантыУстановкиСрокаИсполнения - вариант
//                          установки срока исполнения.
//
Функция ПредставлениеСрокаИсполнения(Дата, Дни, Часы, Минуты,
	ИспользоватьДатуИВремяВСрокахЗадач, ВариантУстановкиСрока) Экспорт
	
	Возврат ОбщегоНазначенияДокументооборотКлиентСервер.ПредставлениеСрокаИсполнения(
		Дата, Дни, Часы, Минуты,
		ИспользоватьДатуИВремяВСрокахЗадач, ВариантУстановкиСрока);
	
КонецФункции

#КонецОбласти

#КонецОбласти
