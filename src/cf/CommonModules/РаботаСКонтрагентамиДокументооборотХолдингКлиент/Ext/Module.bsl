// @strict-types


#Область ПрограммныйИнтерфейс

// Обработка нажатия подключаемого элемента в форме карточки контрагента
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения:
//    * Объект - СправочникОбъект.Контрагенты
//  Элемент - ПолеФормы
//  СтандартнаяОбработка - Булево
Процедура КарточкаКонтрагентаНажатие(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	Если Элемент.Имя = РаботаСКонтрагентамиДокументооборотХолдингКлиентСервер.ИмяЭлементаУзлаОбмена() Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ДанныеВыбора = ОбщегоНазначенияДокументооборотХолдингВызовСервера.УзлыКОДДанныеВыбора(Форма.Объект.УзелОбработки);
		Если ДанныеВыбора.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыОбработчика = Новый Структура;
		ПараметрыОбработчика.Вставить("Форма", Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораУзлаОбмена", ЭтотОбъект, ПараметрыОбработчика);
		
		Форма.ПоказатьВыборИзМеню(ОписаниеОповещения, ДанныеВыбора, Элемент);
				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик выбора узла обмена на форме.
// 
// Параметры:
//  Результат - ЭлементСпискаЗначений:
//    * Значение - СправочникСсылка.УзлыКОД
//  ДополнительныеПараметры - Структура:
//    * Форма - ФормаКлиентскогоПриложения:
//      ** Объект - СправочникОбъект.Контрагенты
//
Процедура ПослеВыбораУзлаОбмена(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	ИмяРеквизитаУзлаОбмена = РаботаСКонтрагентамиДокументооборотХолдингКлиентСервер.ИмяРеквизитаУзлаОбмена();
	
	Форма[ИмяРеквизитаУзлаОбмена] = Результат.Представление;
	Форма.Объект.УзелОбработки = Результат.Значение.УникальныйИдентификатор();
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти
