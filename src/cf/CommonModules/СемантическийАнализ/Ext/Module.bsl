///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ПолучитьСущностиВТексте(ТекстДляАнализа, ТаблицаСущностей) Экспорт
	
	// ТаблицаСущностей - должна содержать колонки:
	// * Ссылка - Произвольная ссылка
	// * СтрокаДляПоиска - Строка - где слова поиска разделены "|", например "|Пример||строки||поиска|".
	
	ВремяНачалаЗапроса = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Результат = Новый Структура;
	Результат.Вставить("РезультатЗапроса", Новый Массив);
	Результат.Вставить("ДанныеОтладки", Новый Структура);
	
	Токены = СтрРазделить(ТекстДляАнализа, " ");
	
	Контакты = ТаблицаСущностей;
	
	ПредФильтрКонтакты = Контакты;
	ТокеныКонтакта = Новый Массив;
	Позиция = 0;
	Для Индекс = 0 По Токены.ВГраница() Цикл
		
		Токен = Токены[Индекс];
		
		ТекФильтрКонтакты = НайтиВМассивеПоВхождению(ПредФильтрКонтакты, Токен);
		
		Если ТекФильтрКонтакты.Количество() = 0 Тогда 
			КакЕсть = СтрСоединить(ТокеныКонтакта, " ");
			
			СтрокаРезультата = Новый Структура;
			СтрокаРезультата.Вставить("КакЕсть", КакЕсть);
			СтрокаРезультата.Вставить("ИндексНачало", Позиция);
			СтрокаРезультата.Вставить("ИндексКонец", Позиция + СтрДлина(КакЕсть));
			СтрокаРезультата.Вставить("Тип", "$УчетныеЗаписи");
			СтрокаРезультата.Вставить("Значение", СписокПодходящихСсылок(ПредФильтрКонтакты));
			
			Результат.РезультатЗапроса.Добавить(СтрокаРезультата);
			
			Позиция = Позиция + СтрДлина(КакЕсть) + 1;
			
			ТокеныКонтакта = Новый Массив;
			ТокеныКонтакта.Добавить(Токен);
			
			ПредФильтрКонтакты = НайтиВМассивеПоВхождению(Контакты, Токен);
			ТекФильтрКонтакты = ПредФильтрКонтакты;
		Иначе
			ПредФильтрКонтакты = ТекФильтрКонтакты;
			ТокеныКонтакта.Добавить(Токен);
		КонецЕсли;
		
		Если Индекс = Токены.ВГраница() Тогда
			КакЕсть = СтрСоединить(ТокеныКонтакта, " ");
			
			СтрокаРезультата = Новый Структура;
			СтрокаРезультата.Вставить("КакЕсть", КакЕсть);
			СтрокаРезультата.Вставить("ИндексНачало", Позиция);
			СтрокаРезультата.Вставить("ИндексКонец", Позиция + СтрДлина(КакЕсть));
			СтрокаРезультата.Вставить("Тип", "$УчетныеЗаписи");
			СтрокаРезультата.Вставить("Значение", СписокПодходящихСсылок(ТекФильтрКонтакты));
			
			Результат.РезультатЗапроса.Добавить(СтрокаРезультата);
		КонецЕсли;
		
	КонецЦикла;
	
	ВремяКонцаЗапроса = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Результат.ДанныеОтладки.Вставить("ВремяНачала", ВремяНачалаЗапроса);
	Результат.ДанныеОтладки.Вставить("ВремяКонца", ВремяКонцаЗапроса);
	Результат.ДанныеОтладки.Вставить("Состояние", "");
	
	Возврат Результат;
	
КонецФункции

Процедура ПолучитьСущностиВТекстеВФоне(Параметры, АдресРезультата) Экспорт
	
	Результат = ПолучитьСущностиВТексте(Параметры.ТекстДляАнализа, Параметры.ТаблицаСущностей);
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НайтиВМассивеПоВхождению(Массив, Знач Слово)
	
	Слово = "|" + ВРег(Слово) + "|";
	
	Результат = Новый Массив;
	Для Каждого Элемент Из Массив Цикл
		Позиция = СтрНайти(ВРег(Элемент.СтрокаДляПоиска), Слово);
		Если Позиция > 0 Тогда
			Результат.Добавить(Элемент);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СписокПодходящихСсылок(Список)
	
	Результат = Новый Массив;
	
	Для Каждого Элемент Из Список Цикл
		Результат.Добавить(Элемент.Ссылка);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
