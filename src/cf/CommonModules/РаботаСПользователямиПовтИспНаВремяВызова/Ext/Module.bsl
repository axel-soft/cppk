////////////////////////////////////////////////////////////////////////////////
// Работа с пользователями (повторное использование на время вызова)
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Определяет подчиненных и их подразделения.
// 
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
//  ТолькоДействующие - Булево.
//
// Возвращаемое значение:
//  Структура - данные подразлелений подчиненных:
//   * ПодразделенияПодчиненных - ТаблицаЗначений:
//    ** Подразделение - СправочникСсылка.СтруктураПредприятия.
//    ** Подчиненный - СправочникСсылка.Сотрудники.
//   * ИерархияПодчиненныхПодразделений - см. РаботаСПользователями.ИерархияПодчиненныхПодразделений.
//
Функция ДанныеПодразделенийПодчиненных(Пользователь, ТолькоДействующие) Экспорт
	
	ПодразделенияПодчиненных = Новый ТаблицаЗначений;
	ПодразделенияПодчиненных.Колонки.Добавить("Подразделение");
	ПодразделенияПодчиненных.Колонки.Добавить("Подчиненный");
	
	// Получим подчиненные подразделения.
	ИерархияПодчиненныхПодразделений = РаботаСПользователями.ИерархияПодчиненныхПодразделений(Пользователь);
	ИерархияПодчиненныхПодразделений.Индексы.Добавить("ПодчиненноеПодразделение, Руководитель");
	
	ПодчиненныеПодразделения = ИерархияПодчиненныхПодразделений.ВыгрузитьКолонку("ПодчиненноеПодразделение");
	
	// Получим подчиненных.
	СотрудникиВПодразделениях = Сотрудники.СотрудникиВПодразделениях(
		ПодчиненныеПодразделения,
		ТолькоДействующие);
	Для Каждого КлючИЗначение Из СотрудникиВПодразделениях Цикл
		
		Подразделение = КлючИЗначение.Ключ;
		СотрудникиПодразделения = КлючИЗначение.Значение;
		
		Для Каждого Сотрудник Из СотрудникиПодразделения Цикл
			
			СтрокаПодчиненного = ПодразделенияПодчиненных.Добавить();
			СтрокаПодчиненного.Подразделение = Подразделение;
			СтрокаПодчиненного.Подчиненный = Сотрудник;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ДанныеПодразделенийПодчиненных = Новый Структура;
	ДанныеПодразделенийПодчиненных.Вставить("ПодразделенияПодчиненных", ПодразделенияПодчиненных);
	ДанныеПодразделенийПодчиненных.Вставить("ИерархияПодчиненныхПодразделений", ИерархияПодчиненныхПодразделений);
	
	Возврат ДанныеПодразделенийПодчиненных;
	
КонецФункции

#КонецОбласти