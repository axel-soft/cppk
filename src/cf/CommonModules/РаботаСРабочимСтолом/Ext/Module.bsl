////////////////////////////////////////////////////////////////////////////////
// Общий модуль для работы с рабочим столом.
//
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

// Создает рабочий стол.
Процедура СоздатьРабочийСтол(Форма, РабочийСтол) Экспорт

	ИнициализироватьФорму(Форма);

	ДанныеРабочегоСтола = Справочники.РабочиеСтолы.ДанныеРабочегоСтола(РабочийСтол);
	Для Каждого ЭлементРабочегоСтола Из ДанныеРабочегоСтола.Элементы Цикл
		СоздатьЭлементРабочегоСтола(Форма, ДанныеРабочегоСтола, ЭлементРабочегоСтола);
	КонецЦикла;

	РаботаСВиджетами.ОбновитьРеквизитыВиджетов(Форма);

КонецПроцедуры

// Удаляет рабочий стол.
Процедура УдалитьРабочийСтол(Форма) Экспорт
	
	// Удаляем виджеты.
	РаботаСВиджетами.УдалитьВиджеты(Форма);
	
	// Удаляем элементы рабочего стола.
	Для Каждого КорневаяГруппаРабочегоСтола Из КорневыеГруппыРабочегоСтола(Форма) Цикл
		Форма.Элементы.Удалить(КорневаяГруппаРабочегоСтола);
	КонецЦикла;

	// Очищаем служебные реквизиты рабочего стола.
	Форма.ТаблицаКорневыхГруппРабочегоСтола.Очистить();

КонецПроцедуры

// Заполняет поставляемые данные.
// 
Процедура ЗаполнитьПоставляемыеДанные() Экспорт

	Справочники.АлгоритмыПроверки.ЗаполнитьПоставляемыеДанные();
	Справочники.ГрупповыеПоказатели.ЗаполнитьПоставляемыеДанные();
	Справочники.РабочиеСтолы.ЗаполнитьПоставляемыеДанные();
	Справочники.БлокиНавигации.ЗаполнитьПоставляемыеДанные();
	Справочники.Виджеты.ЗаполнитьПоставляемыеДанные();
	Справочники.КомандыВиджетов.ЗаполнитьПоставляемыеДанные();
	Справочники.ПоказателиВиджетов.ЗаполнитьПоставляемыеДанные();

КонецПроцедуры

// Запоминает состояние рабочего стола.
Процедура ЗапомнитьСостояниеРабочегоСтола(Форма) Экспорт

	РаботаСВиджетами.ЗапомнитьСостояниеВиджетов(Форма);

КонецПроцедуры

// Восстанавливает состояние рабочего стола.
Процедура ВосстановитьСостояниеРабочегоСтола(Форма) Экспорт

	РаботаСВиджетами.ВосстановитьСостояниеВиджетов(Форма);

КонецПроцедуры

// Возвращает рабочий стол.
Функция РабочийСтол() Экспорт

	РабочийСтол = РегистрыСведений.НастройкиРабочихСтолов.ЗначениеНастройки(
		Пользователи.ТекущийПользователь(), Перечисления.НастройкиРабочегоСтола.ВариантРабочегоСтола);
	Если Не ЗначениеЗаполнено(РабочийСтол) Тогда
		РабочийСтол = Справочники.РабочиеСтолы.РабочийСтолПоУмолчанию();
	КонецЕсли;

	Возврат РабочийСтол;

КонецФункции

// Определяет цветовую схему рабочего стола.
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.ЦветовыеСхемыРабочегоСтола - Цветовая схема рабочего стола.
//
Функция ЦветоваяСхемаРабочегоСтола() Экспорт

	ЦветоваяСхема = РегистрыСведений.НастройкиРабочихСтолов.ЗначениеНастройки(
		Пользователи.ТекущийПользователь(), Перечисления.НастройкиРабочегоСтола.ЦветоваяСхема);
	Если Не ЗначениеЗаполнено(ЦветоваяСхема) Тогда
		ЦветоваяСхема = Перечисления.ЦветовыеСхемыРабочегоСтола.Цветная;
	КонецЕсли;

	Возврат ЦветоваяСхема;

КонецФункции

// Проверяет условие рабочего стола.
// 
// Параметры:
//  Условие - СправочникСсылка.АлгоритмыПроверки
// 
// Возвращаемое значение:
//  Булево
//  
Функция ПроверитьУсловие(Условие) Экспорт

	Если Не ЗначениеЗаполнено(Условие) Тогда
		Возврат Истина;
	КонецЕсли;

	Если ТипЗнч(Условие) = Тип("Строка") Тогда
		СсылкаНаАлгоритм = Справочники.АлгоритмыПроверки[Условие];
	Иначе
		СсылкаНаАлгоритм = Условие;
	КонецЕсли;

	Возврат РаботаСРабочимСтоломПовтИсп.АлгоритмПоПользователюВыполняется(СсылкаНаАлгоритм);

КонецФункции

// Проверяет, что форма уже инициализирована.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
// 
// Возвращаемое значение:
//  Булево - Форма уже инициализирована.
//  
Функция ФормаИнициализирована(Форма) Экспорт

	ИмяТаблицы = "ТаблицаКорневыхГруппРабочегоСтола";
	ФормаИнициализирована =  РаботаСФормами.РеквизитСуществует(Форма, ИмяТаблицы);

	Возврат ФормаИнициализирована;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Инициализирует форму для работы рабочего стола.
Процедура ИнициализироватьФорму(Форма)

	ДобавляемыеРеквизиты = Новый Массив;
	ИнициализироватьТаблицуКорневыеГруппыРабочегоСтола(Форма, ДобавляемыеРеквизиты);
	Если ДобавляемыеРеквизиты.Количество() <> 0 Тогда
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	КонецЕсли;

	РаботаСВиджетами.ИнициализироватьФорму(Форма);

КонецПроцедуры

// Устанавливает элемент рабочего стола.
Процедура УстановитьКорневаяГруппаРабочегоСтола(Форма, ИмяКорневойГруппы)

	КорневаяГруппаРабочегоСтола = Форма.ТаблицаКорневыхГруппРабочегоСтола.Добавить();
	КорневаяГруппаРабочегоСтола.ИмяКорневойГруппы = ИмяКорневойГруппы;

КонецПроцедуры

// Возвращает массив элементов рабочего стола.
Функция КорневыеГруппыРабочегоСтола(Форма)

	КорневыеГруппыРабочегоСтола = Новый Массив;
	Для Каждого СтрокаЭлементаРабочегоСтола Из Форма.ТаблицаКорневыхГруппРабочегоСтола Цикл
		КорневаяГруппаРабочегоСтола = Форма.Элементы[СтрокаЭлементаРабочегоСтола.ИмяКорневойГруппы];
		КорневыеГруппыРабочегоСтола.Добавить(КорневаяГруппаРабочегоСтола);
	КонецЦикла;

	Возврат КорневыеГруппыРабочегоСтола;

КонецФункции

// Инициализирует таблицу реквизитов виджетов.
Процедура ИнициализироватьТаблицуКорневыеГруппыРабочегоСтола(Форма, ДобавляемыеРеквизиты)

	ИмяТаблицы = "ТаблицаКорневыхГруппРабочегоСтола";
	Если РаботаСФормами.РеквизитСуществует(Форма, ИмяТаблицы) Тогда
		Возврат;
	КонецЕсли;

	Колонки = Новый Массив;
	Колонки.Добавить(Новый Структура("Имя, Тип", "ИмяКорневойГруппы", "Строка"));

	РаботаСФормами.ДобавляемыеРеквизитыДобавитьТаблицу(ДобавляемыеРеквизиты, ИмяТаблицы, Колонки);

КонецПроцедуры

// Создает элемент рабочего стола.
Функция СоздатьЭлементРабочегоСтола(Форма, ДанныеРабочегоСтола, ЭлементРабочегоСтола)

	ЭтоМобильныйКлиент = ПараметрыСеанса.ЭтоМобильныйКлиент;

	Родитель = РодительЭлементаРабочегоСтола(ДанныеРабочегоСтола, ЭлементРабочегоСтола);

	Если ЭлементРабочегоСтола.Тип = Перечисления.ТипыЭлементовРабочегоСтола.Группа Тогда

		СозданныйЭлемент = РаботаСФормами.ДобавитьОбычнуюГруппу(
			Форма, ЭлементРабочегоСтола.Имя, Родитель);

		Если Родитель = Неопределено Тогда
			Если ЭтоМобильныйКлиент Тогда
				СозданныйЭлемент.ЦветФона = ЦветаСтиля.МК_ЦветФонаГруппы;
			КонецЕсли;
			УстановитьКорневаяГруппаРабочегоСтола(Форма, СозданныйЭлемент.Имя);
		КонецЕсли;

	ИначеЕсли ЭлементРабочегоСтола.Тип = Перечисления.ТипыЭлементовРабочегоСтола.Страницы Тогда

		СозданныйЭлемент = РаботаСФормами.ДобавитьСтраницы(
				Форма, ЭлементРабочегоСтола.Имя, Родитель, ЭтоМобильныйКлиент);

		Если Родитель = Неопределено Тогда
			УстановитьКорневаяГруппаРабочегоСтола(Форма, СозданныйЭлемент.Имя);
		КонецЕсли;

	ИначеЕсли ЭлементРабочегоСтола.Тип = Перечисления.ТипыЭлементовРабочегоСтола.Страница Тогда

		Если Не ЭтоМобильныйКлиент Тогда
			СозданныйЭлемент = РаботаСФормами.ДобавитьСтраницу(
				Форма, ЭлементРабочегоСтола.Имя, Родитель, ЭтоМобильныйКлиент);
		Иначе
			СозданныйЭлемент = Форма.Элементы.Найти(ЭлементРабочегоСтола.Имя);
		КонецЕсли;

	ИначеЕсли ЭлементРабочегоСтола.Тип = Перечисления.ТипыЭлементовРабочегоСтола.Виджет Тогда

		Попытка

			СозданныйЭлемент = РаботаСВиджетами.СоздатьВиджет(
				Форма, ЭлементРабочегоСтола.ДанныеВиджета, Родитель);

		Исключение

			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);

			ПодробноеПредставлениеОшибки = СтрШаблон(
				НСтр("ru = 'Не удалось создать виджет %1 по причине:
					 |%2'"), ЭлементРабочегоСтола.ДанныеВиджета.Имя, ПодробноеПредставлениеОшибки);

			ВызватьИсключение ПодробноеПредставлениеОшибки;

		КонецПопытки;

	ИначеЕсли ЭлементРабочегоСтола.Тип = Перечисления.ТипыЭлементовРабочегоСтола.БлокНавигации Тогда

		Попытка

			Если Не ЭтоМобильныйКлиент Тогда

				СозданныйЭлемент = РаботаСВиджетами.СоздатьВиджет(
					Форма, ЭлементРабочегоСтола.ДанныеВиджета, Родитель);

			КонецЕсли;

		Исключение

			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
			ПодробноеПредставлениеОшибки = СтрШаблон(
				НСтр("ru = 'Не удалось создать блок навигации %1 по причине:
					 |%2'"), ЭлементРабочегоСтола.ДанныеВиджета.Имя, ПодробноеПредставлениеОшибки);

			ВызватьИсключение ПодробноеПредставлениеОшибки;

		КонецПопытки;

	Иначе

		ТекстОшибки = НСтр("ru = 'Неизвестный тип элемента рабочего стола.'");
		ВызватьИсключение ТекстОшибки;

	КонецЕсли;

	Если СозданныйЭлемент = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;

	ЭлементРабочегоСтола.ЭлементФормы = СозданныйЭлемент;
	НастроитьЭлементРабочегоСтола(ЭлементРабочегоСтола);

	Возврат СозданныйЭлемент;

КонецФункции

// Настраивает элемент рабочего стола.
Функция НастроитьЭлементРабочегоСтола(ЭлементРабочегоСтола)

	ИменаСвойств = Справочники.РабочиеСтолы.НастраиваемыеСвойстваЭлементаРабочегоСтола();
	Для Каждого ИмяСвойства Из ИменаСвойств Цикл
		НастроитьСвойствоЭлементаРабочегоСтола(ЭлементРабочегоСтола, ИмяСвойства);
	КонецЦикла;

КонецФункции

// Настраивает свойство элемента рабочего стола.
Функция НастроитьСвойствоЭлементаРабочегоСтола(ЭлементРабочегоСтола, ИмяСвойства)

	Если ЭлементРабочегоСтола[ИмяСвойства] <> Неопределено Тогда
		ЭлементРабочегоСтола.ЭлементФормы[ИмяСвойства] = ЭлементРабочегоСтола[ИмяСвойства];
	КонецЕсли;

КонецФункции

// Возвращает значение родителя элемента рабочего стола.
Функция РодительЭлементаРабочегоСтола(ДанныеРабочегоСтола, ЭлементРабочегоСтола)

	Если Не ЗначениеЗаполнено(ЭлементРабочегоСтола.Родитель) Тогда
		Возврат Неопределено;
	КонецЕсли;

	Родитель = ДанныеРабочегоСтола.Элементы.Найти(ЭлементРабочегоСтола.Родитель, "Имя").ЭлементФормы;
	Если Родитель = Неопределено Тогда
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'Не найден родитель ""%1"" элемента рабочего стола ""%2"".'"), ЭлементРабочегоСтола.Родитель,
			ЭлементРабочегоСтола.Имя);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	Возврат Родитель;

КонецФункции

#КонецОбласти