////////////////////////////////////////////////////////////////////////////////
// Подсистема "Пользователи".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// По номеру возвращает нужное число ****
Функция ПолучитьСтрокуРанга(Ранг) Экспорт
	
	СтрокаРанга = "";
	
	Если ТипЗнч(Ранг) = Тип("Число") И Ранг <> 0 Тогда
		
		Для Пер = 0 По Ранг-1 Цикл
			СтрокаРанга = СтрокаРанга + "*";
		КонецЦикла;	
		
	КонецЕсли;	
	
	Возврат СтрокаРанга;
	
КонецФункции

// Возвращает список пользователей и контейнеров для ввода текста и автоподбора.
//
// Параметры:
//   Текст - Строка - символы, введенные пользователем.
//   ВключаяКонтейнеры - Булево - Истина, если в результат следует включать контейнеры пользователей.
//
// Возвращаемое значение:
//   СписокЗначений - пользователи (контейнеры) и их представления с уточнением.
//
Функция СформироватьДанныеВыбора(Текст, ВключаяКонтейнеры = Ложь) Экспорт
	
	ДополнениеТипа = Неопределено;
	Если ВключаяКонтейнеры Тогда
		ДополнениеТипа = Новый ОписаниеТипов(
			"СправочникСсылка.ПолныеРоли, СправочникСсылка.РабочиеГруппы,
			|СправочникСсылка.СтруктураПредприятия, СправочникСсылка.Проекты");
	КонецЕсли;
	
	ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбора(Текст, ДополнениеТипа);
	
	Возврат ДанныеВыбора;
	
КонецФункции

// Проверяет, что текущий пользователь является служебным пользователем <Не указан>
//
// Возвращаемое значение:
//  Булево
//
Функция ТекущийПользовательНеУказан() Экспорт
	
	Возврат (Пользователи.ТекущийПользователь() = Пользователи.СсылкаНеуказанногоПользователя());
	
КонецФункции

// Возвращает олицетворяемого пользователя в текущем сеансе.
// Олицетворяемый пользователь - тот, от имени кого действия выполняем, хотя авторизованы по другим.
// Например, фоновые задания очереди выполняют задачи от пользователи "<Не указан>",
// но в историю задач должно попасть что задачу выполнил тот, 
// кто нажал "Выполнено" и создал это задание в очереди, например, Фролова.
// 
// Возвращаемое значение:
//  СправочникСсылка.Пользователи - Олицетворяемый пользователь.
//  
Функция ОлицетворяемыйПользователь() Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыСеанса.ОлицетворяемыйПользователь) Тогда
		ОлицетворяемыйПользователь = ПараметрыСеанса.ОлицетворяемыйПользователь;
	Иначе
		ОлицетворяемыйПользователь = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Возврат ОлицетворяемыйПользователь;
	
КонецФункции

// Устанавливает олицетворяемого пользователя в текущем сеансе.
// 
// Параметры:
//  ОлицетворяемыйПользователь - СправочникСсылка.Пользователи.
//
Процедура УстановитьОлицетворяемогоПользователя(ОлицетворяемыйПользователь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыСеанса.ОлицетворяемыйПользователь = ОлицетворяемыйПользователь;
	
КонецПроцедуры

// Очищает олицетворяемого пользователя в текущем сеансе.
Процедура ОчиститьОлицетворяемогоПользователя() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыСеанса.ОлицетворяемыйПользователь = Справочники.Пользователи.ПустаяСсылка();
	
КонецПроцедуры

// Возвращает физ. лицо пользователя.
// Если пользователь не указан, то возвращает физ. лицо текущего пользователя. 
// 
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи
// 
// Возвращаемое значение:
//  СправочникСсылка.ФизическиеЛица
//  
Функция ФизЛицоПользователя(Пользователь = Неопределено) Экспорт
	
	Если Пользователь = Неопределено Тогда
		Пользователь = Пользователи.ТекущийПользователь();
	КонецЕсли; 
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователь, "ФизЛицо");
	
КонецФункции

// Возвращает пользователя, связанного с физ. лицом.
// 
// Параметры:
//  ФизЛицо - СправочникСсылка.Пользователи
// 
// Возвращаемое значение:
//  СправочникСсылка.Пользователи
//
Функция ПользовательФизЛица(ФизЛицо) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Пользователи.Ссылка,
		|	Пользователи.Недействителен КАК Недействителен
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.ФизЛицо = &ФизЛицо
		|
		|УПОРЯДОЧИТЬ ПО
		|	Недействителен УБЫВ";
	
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.Пользователи.ПустаяСсылка();
	
КонецФункции

// Возвращает пользователей физ. лиц.
// 
// Параметры:
//  ФизЛица - Массив из СправочникСсылка.ФизическиеЛица
// 
// Возвращаемое значение:
//  Массив из СправочникСсылка.Пользователи
//
Функция ПользователиФизЛиц(ФизЛица) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Пользователи.Ссылка
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.ФизЛицо В (&ФизЛица)";
		
	Запрос.УстановитьПараметр("ФизЛица", ФизЛица);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

// Возвращает пользователей по физ лицам.
// 
// Параметры:
//  ФизЛица - Массив
//   * СправочникСсылка.ФизическиеЛица
// 
// Возвращаемое значение:
//  Соответствие
//   * Ключ - СправочникСсылка.ФизическиеЛица
//   * Значение - СправочникСсылка.Пользователи
//
Функция ПользователиПоФизЛицам(ФизЛица) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Пользователи.Ссылка,
		|	Пользователи.ФизЛицо
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.ФизЛицо В (&ФизЛица)";
		
	Запрос.УстановитьПараметр("ФизЛица", ФизЛица);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = Новый Соответствие();
	
	Пока Выборка.Следующий() Цикл
		Результат[Выборка.ФизЛицо] = Выборка.Ссылка;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает физ. лиц пользователей.
//
// Параметры:
//  МассивПользователей - Массив
//   * СправочникСсылка.Пользователи
//
// Возвращаемое значение:
//  Массив
//   * СправочникСсылка.ФизическиеЛица
//
Функция ФизЛицаПользователей(МассивПользователей) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Пользователи.ФизЛицо КАК ФизЛицо
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО Пользователи.ФизЛицо = ФизическиеЛица.Ссылка
		|ГДЕ
		|	Пользователи.Ссылка В (&Пользователи)";
	
	Запрос.УстановитьПараметр("Пользователи", МассивПользователей);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо");
	
КонецФункции

#КонецОбласти
