///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Вызывается перед открытием формы нового письма.
// Открытие формы может быть отменено изменением параметра СтандартнаяОбработка.
//
// Параметры:
//  ПараметрыОтправки    - Структура - см. описание в РаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо;
//  ОбработчикЗавершения - ОписаниеОповещения - описание процедуры, которая будет вызвана после завершения
//                                              отправки письма.
//  СтандартнаяОбработка - Булево - признак продолжения открытия формы нового письма после выхода из этой
//                                  процедуры. Если установить Ложь, форма письма открыта не будет.
//
Процедура ПередОткрытиемФормыОтправкиПисьма(ПараметрыОтправки, ОбработчикЗавершения, СтандартнаяОбработка) Экспорт
	
	Если Не ПараметрыОтправки.Свойство("Тема") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстПисьмаИз1СShare = ИнтеграцияShareДокументооборотКлиентСервер.ТекстПисьмаИз1СShare();
	ЭтоОтправкаСсылки1СShare = СтрЗаканчиваетсяНа(ПараметрыОтправки.Тема, ТекстПисьмаИз1СShare);
	Если ЭтоОтправкаСсылки1СShare Тогда		
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыОтправки.Тема = СтрЗаменить(ПараметрыОтправки.Тема, ТекстПисьмаИз1СShare, "");
		ПараметрыОтправки.Вложения = Новый Массив;
		ПараметрыОтправки.Вставить("Объекты", Новый Массив);
		
		Основание = Новый Структура;
		Основание.Вставить("ТекстПисьма", ПараметрыОтправки.Текст);
		Основание.Вставить("Тема", ПараметрыОтправки.Тема);	
		ПараметрыОтправки.Вставить("Основание", Основание);		

		Получатель = ПараметрыОтправки.Получатель;		
		Если ЗначениеЗаполнено(Получатель) Тогда
			ПараметрыОтправки.Вставить("Кому", Получатель); 
			СписокПочтовыхАдресов = Новый СписокЗначений;
			Если ТипЗнч(Получатель) = Тип("Строка") Тогда				
				АдресИнфо = Новый Структура("Контакт, Адрес, ОтображаемоеИмя",
					"", Получатель, "");
				СписокПочтовыхАдресов.Добавить(АдресИнфо);				
			ИначеЕсли ТипЗнч(Получатель) = Тип("Массив") Тогда	
				Для Каждого Стр Из Получатель Цикл
					АдресИнфо = Новый Структура("Контакт, Адрес, ОтображаемоеИмя",
						"", Стр.Адрес, "");
					СписокПочтовыхАдресов.Добавить(АдресИнфо);
				КонецЦикла;	
			КонецЕсли;			
			ПараметрыОтправки.Вставить("СписокПочтовыхАдресов", СписокПочтовыхАдресов);
		КонецЕсли;	
		
		ИспользованиеЛегкойПочты = ПолучитьФункциональнуюОпциюИнтерфейса("ИспользованиеЛегкойПочты");
		ИспользованиеВстроеннойПочты = ПолучитьФункциональнуюОпциюИнтерфейса("ИспользованиеВстроеннойПочты");

		Если Не ИспользованиеЛегкойПочты И Не ИспользованиеВстроеннойПочты Тогда
			ТекстСообщения = НСтр(
				"ru = 'Для отправки письма требуется включить использование встроенной или легкой почты.'");
			ПоказатьПредупреждение( , ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		Если ИспользованиеВстроеннойПочты Тогда
			ОткрытьФорму("Документ.ИсходящееПисьмо.ФормаОбъекта", ПараметрыОтправки);
		ИначеЕсли ИспользованиеЛегкойПочты Тогда
			ОткрытьФорму("Обработка.ПочтовоеСообщение.Форма.Форма", ПараметрыОтправки, , Новый УникальныйИдентификатор);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Позволяет переопределить обновление токена
//
// Параметры:
//
// АдресПолный -Строка, возвращаемый параметр
// СерверВходящейПочты -Строка
// Oauth_redirection_uri -Строка 
// OauthАвторизацияКлиент -Строка  
//
// Возвращает Истина, если переопределило процедуру
Функция СформироватьАдресДляАвторизацииOAuth(
	АдресПолный, 
	СерверВходящейПочты,
	OauthАвторизацияКлиент, 
	Oauth_redirection_uri) Экспорт
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти