#Область ПрограммныйИнтерфейс

// Первоначальная выгрузка данных.
//
// Параметры:
//  ПараметрыСинхронизации - инициализированные параметры синхронизации в начале синхронизации
Функция ПервоначальнаяВыгрузкаДанных(ПараметрыСинхронизации) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДатаНачалаВыгрузки = МП_Служебный.ОпределитьДатуУстареванияДанных(ПараметрыСинхронизации.МобильноеПриложение,
		ПараметрыСинхронизации);
	
	Запрос = ИнициализироватьЗапрос(ПараметрыСинхронизации, ДатаНачалаВыгрузки);
	
	СтруктураРезультатовЗапроса = Новый Структура;
	
	ДобавитьНСИПользователиИРоли(СтруктураРезультатовЗапроса, Запрос);
	
	Если ПараметрыСинхронизации.СинхронизацияПочты Тогда
		
		ДобавитьПочту(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос);
		
	КонецЕсли;
	
	Если ПараметрыСинхронизации.СинхронизацияКалендаря Тогда
		
		ДобавитьКалендарь(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос);
				
	КонецЕсли;
	
	Если ПараметрыСинхронизации.СинхронизацияКонтроля Тогда
		
		ДобавитьКонтроль(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос);
		
	КонецЕсли;
	
	Если ПараметрыСинхронизации.СинхронизацияЗадач Тогда
		
		ДобавитьЗадачиИПоручения(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос);
		
	КонецЕсли;
	
	Если ПараметрыСинхронизации.СинхронизацияОтсутствий 
		И ПолучитьФункциональнуюОпцию("ИспользоватьОтсутствия") = Истина Тогда
		
		ДобавитьОтсутствия(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос);
	КонецЕсли;
	
	Если ПараметрыСинхронизации.СинхронизацияСамочувствий
		И ПолучитьФункциональнуюОпцию("УчетСамочувствияСотрудников") = Истина Тогда
		
		ДобавитьСамочувствия(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос)
	КонецЕсли;
	
	Если ПараметрыСинхронизации.СинхронизацияУчетаВремени Тогда
		ДобавитьОбъектыУчетаВремени(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос);
	КонецЕсли;
	
	Если ПараметрыСинхронизации.СинхронизацияМероприятий Тогда
		ДобавитьМероприятия(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос);
	КонецЕсли;
	
	ДобавитьНастройкиВложений(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос);
	
	ДобавитьПрочиеНастройкиСинхронизации(ПараметрыСинхронизации, СтруктураРезультатовЗапроса);
	
	СтруктураСериализованныхДанных = 
		МП_ФормированиеИсходящегоСообщения.ВыгружаемыеДанныеВJS(СтруктураРезультатовЗапроса);
		
	КоличествоОбъектов = СтруктураСериализованныхДанных.КоличествоОбъектов;
	
	Если КоличествоОбъектов > 0 Тогда
		
		МП_ФормированиеИсходящегоСообщения.ПоместитьДанныеВСообщениеОбмена(ПараметрыСинхронизации.МобильноеПриложение,
			СтруктураСериализованныхДанных.ТекстJSON, 
			МП_ФормированиеИсходящегоСообщения.СведенияОбИсходящемСообщении(КоличествоОбъектов));
		
	КонецЕсли;
	
	Возврат СтруктураРезультатовЗапроса;
	
КонецФункции

#КонецОбласти

#Область РазделыСинхронизации
Процедура ДобавитьНСИПользователиИРоли(СтруктураРезультатовЗапроса, Запрос)
	
	Запрос.Текст = ТекстЗапросНСИПользователиИРоли();
	
	Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	Для каждого ТаблицаВТ Из Запрос.МенеджерВременныхТаблиц.Таблицы Цикл
		
		Результат = ТаблицаВТ.ПолучитьДанные();
		
		Если Не Результат.Пустой() Тогда
			СтруктураРезультатовЗапроса.Вставить(ТаблицаВТ.ПолноеИмя, Результат);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Процедура ДобавитьПочту(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос)
	
	ОсновнаяУчетнаяЗапись = ВстроеннаяПочтаСервер.ПолучитьПерсональнуюНастройку("ОсновнаяУчетнаяЗапись");
	
	ПодписьДляНовыхПисем =
		ВстроеннаяПочтаСервер.ПолучитьПерсональнуюНастройку("ПодписьДляНовыхПисем");
	
	ПодписьПриОтветеИПересылке =
		ВстроеннаяПочтаСервер.ПолучитьПерсональнуюНастройку("ПодписьПриОтветеИПересылке");
	
	Запрос.УстановитьПараметр("ОсновнаяУчетнаяЗапись", ОсновнаяУчетнаяЗапись);
	
	Запрос.УстановитьПараметр("ПодписьДляНовыхПисем", ПодписьДляНовыхПисем);
	
	Запрос.УстановитьПараметр("ПодписьПриОтветеИПересылке", ПодписьПриОтветеИПересылке);
	
	СотрудникиПользователя = Сотрудники.СотрудникиПользователя(Запрос.Параметры.Пользователь);
	Запрос.УстановитьПараметр("СотрудникиПользователя", СотрудникиПользователя);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ПараметрыСеанса.ФизическоеЛицоПользователя);
	
	Запрос.Текст = ТекстЗапросаНСИпочта();
	
	Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	Для каждого ТаблицаВТ Из Запрос.МенеджерВременныхТаблиц.Таблицы Цикл
		
		Результат = ТаблицаВТ.ПолучитьДанные();
		
		Если Не Результат.Пустой() Тогда
			СтруктураРезультатовЗапроса.Вставить(ТаблицаВТ.ПолноеИмя, Результат);
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = ТекстЗапросаПапки();
	
	РезультатПапки = Запрос.Выполнить();
	
	Если РезультатПапки.Пустой() тогда
		ВызватьИсключение ("Не указаны папки писем для синхронизации");
	КонецЕсли;
	
	СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипПапкаПисем(), РезультатПапки);
	
	Запрос.Текст = ТекстЗапросаПочта();
	
	Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	Результат = Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("Почта").ПолучитьДанные();
	
	Если Не Результат.Пустой() Тогда
		
		ТаблицаПочта = Результат.Выгрузить();
		
		МП_Изменения.ЗаполнитьСпецифическиеКолонкиПисьма(ТаблицаПочта);
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипПисьмо(), ТаблицаПочта);
		
		МП_Изменения.ИзмененияВсеОстальноеПоТаблицамЗаголовковПочта(
		ТаблицаПочта, СтруктураРезультатовЗапроса, ПараметрыСинхронизации);
	КонецЕсли;
	
	МП_Изменения.ОтобратьВложенияПочты(
		СтруктураРезультатовЗапроса, ПараметрыСинхронизации, Запрос.МенеджерВременныхТаблиц);

КонецПроцедуры

Процедура ДобавитьКалендарь(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос)
	
	Запрос.Текст = ТекстЗапросаКалендарь();
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		ТаблицаКалендарь = Результат.Выгрузить();
		
		МП_Изменения.ОтобратьПредметыКалендарь(СтруктураРезультатовЗапроса, ПараметрыСинхронизации, ТаблицаКалендарь);
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипЗаписьКалендаря(), ТаблицаКалендарь);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьКонтроль(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос)

	ТипыБП = БизнесПроцессы.ТипВсеСсылки().Типы();
	
	Запрос.УстановитьПараметр("ТипыБП", ТипыБП);
	
	Запрос.УстановитьПараметр("СостояниеОтветПолучен", НСтр("ru = 'Ответ получен'"));
	
	Запрос.УстановитьПараметр("СостояниеОтветНеПолучен", НСтр("ru = 'Ответ не получен'")); 
	
	Запрос.УстановитьПараметр("СостояниеИсполнено", НСтр("ru = 'Исполнено'"));
		
	Запрос.Текст = ТекстЗапросаКонтроль();
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		ТаблицаКонтроль = Результат.Выгрузить();
		
		МП_Изменения.ОтобратьПредметыКонтроль(СтруктураРезультатовЗапроса, ПараметрыСинхронизации, ТаблицаКонтроль);
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипКонтроль(), ТаблицаКонтроль);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЗадачиИПоручения(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос)

	Запрос.Текст = ТекстЗапросаЗадачиМне();
	
	Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	РезультатЗадачи = Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ИзмененияЗадач").ПолучитьДанные();
	
	Если Не РезультатЗадачи.Пустой() Тогда
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипЗадачаЗаголовки(), РезультатЗадачи);
		
		МП_Изменения.ИзмененияВсеОстальноеПоТаблицамЗаголовковЗадач(
			ПараметрыСинхронизации,
			СтруктураРезультатовЗапроса,
			Неопределено,
			Запрос.МенеджерВременныхТаблиц);
			
	КонецЕсли; 
	
	Запрос.Текст = ТекстЗапросаПроцессыИсполнения();
	
	Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	РезультатПроцессыИсполнения =
		Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ИзмененияПроцессовИсполнения").ПолучитьДанные(); 
	
	Если Не РезультатПроцессыИсполнения.Пустой() Тогда
		
		СтруктураРезультатовЗапроса.Вставить(
		МП_СлужебныйПовтИсп.ТипПроцессИсполненияЗаголовки(),
			РезультатПроцессыИсполнения);
			
		МП_Изменения.ИзмененияВсеОстальноеПоТаблицамЗаголовковПроцессовИсполнения(
			ПараметрыСинхронизации,
			СтруктураРезультатовЗапроса,
			Неопределено,
			Запрос.МенеджерВременныхТаблиц);
			
	КонецЕсли;

	
КонецПроцедуры

Процедура ДобавитьОтсутствия(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос)
	
	Запрос.Текст = ТекстЗапросаМоиОтсутствияИВидыОтсутствий();
	
	Результаты = Запрос.ВыполнитьПакет();
	РезультатМоиОтсутствия = Результаты[0];
	РезультатВидыОтсутствий = Результаты[1];
	Если Не РезультатМоиОтсутствия.Пустой() Тогда
		
		ТаблицаМоиОтсутствия = РезультатМоиОтсутствия.Выгрузить();
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипМоеОтсутствие(), ТаблицаМоиОтсутствия);
		
	КонецЕсли;
	
	Если Не РезультатВидыОтсутствий.Пустой() Тогда
		
		ТаблицаВидыОтсутствий = РезультатВидыОтсутствий.Выгрузить();
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипВидОтсутствия(), ТаблицаВидыОтсутствий);
		
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьСамочувствия(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос)
	
	Запрос.Текст = ТекстЗапросаМоиСамочувствия();
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если Не Результат[0].Пустой() Тогда
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипВремяЗамера(), Результат[0].Выгрузить());
		
	КонецЕсли;
	
	Если Не Результат[1].Пустой() Тогда
		
		ТаблицаМоиСамочувствия = Результат[1].Выгрузить();
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипМоеСамочувствие(), ТаблицаМоиСамочувствия);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьМероприятия(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос)
	
	Запрос.Текст = ТекстЗапросаМероприятия();
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		ТаблицаМероприятия = Результат.Выгрузить();
		
		МП_Изменения.ЗаполнитьСпецифическиеКолонкиМероприятие(СтруктураРезультатовЗапроса, ПараметрыСинхронизации, 
			ТаблицаМероприятия);
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипМероприятие(), ТаблицаМероприятия);
		
	КонецЕсли;
	
КонецПроцедуры	

Процедура ДобавитьОбъектыУчетаВремени(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос)
	
	Запрос.Текст = ТекстЗапросаУчетВремени();
	Результаты = Запрос.ВыполнитьПакет();
	РезультатВидыРабот = Результаты[0];
	РезультатЕжедневныеРаботы = Результаты[1];
	РезультатЕженедельныеРаботы = Результаты[2];
	РезультатФактическиеТрудозатраты = Результаты[3];
	РезультатИспользуемыеПроекты = Результаты[4];
	
	Если Не РезультатВидыРабот.Пустой() Тогда
		
		ТаблицаВидыРабот = РезультатВидыРабот.Выгрузить();
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипВидРабот(), ТаблицаВидыРабот);
		
	КонецЕсли;
	
	Если Не РезультатЕжедневныеРаботы.Пустой() Тогда
		
		ТаблицаЕжедневныеРаботы = РезультатЕжедневныеРаботы.Выгрузить();
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипЕжедневныйОтчет(), ТаблицаЕжедневныеРаботы);
		
	КонецЕсли;
	
	Если Не РезультатЕженедельныеРаботы.Пустой() Тогда
		
		ТаблицаЕженедельныеРаботы = РезультатЕженедельныеРаботы.Выгрузить();
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипЕженедельныйОтчет(), ТаблицаЕженедельныеРаботы);
		
	КонецЕсли;
	
	Если Не РезультатФактическиеТрудозатраты.Пустой() Тогда
		
		ТаблицаФактическиеТрудозатраты = РезультатФактическиеТрудозатраты.Выгрузить();
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипТрудозатраты(), ТаблицаФактическиеТрудозатраты);
		
	КонецЕсли;
	
	Если Не РезультатИспользуемыеПроекты.Пустой() Тогда
		
		ТаблицаИспользуемыеПроекты = РезультатИспользуемыеПроекты.Выгрузить();
		
		СтруктураРезультатовЗапроса.Вставить(МП_СлужебныйПовтИсп.ТипПроект(), ТаблицаИспользуемыеПроекты);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьНастройкиВложений(ПараметрыСинхронизации, СтруктураРезультатовЗапроса, Запрос)
	
	Запрос.Текст = ТекстЗапросаМаксРазмерВложения();
	
	Результат = Запрос.Выполнить();
	
	ТипНастройкиСинхронизации = МП_СлужебныйПовтИсп.ТипНастройкиСинхронизации();
	
	МП_Изменения.ИнициализироватьТаблицуПоТипу(
		СтруктураРезультатовЗапроса, ТипНастройкиСинхронизации);
	
	СтрокаНастроек = СтруктураРезультатовЗапроса[ТипНастройкиСинхронизации].Добавить();
	
	СтрокаНастроек.ВидНастройки = "МаксимальныйРазмерВложения";
	СтрокаНастроек.Значение = Результат.Выгрузить()[0].Значение;
	СтрокаНастроек.НастройкаСтрокой = Истина;
	
	Если ПараметрыСинхронизации.ОграничениеФорматовПередаваемыхФайлов Тогда
		
		СтрокаНастроек = СтруктураРезультатовЗапроса[ТипНастройкиСинхронизации].Добавить();
		СтрокаНастроек.ВидНастройки = "ФорматыПередаваемыхФайлов";
		СтрокаНастроек.Значение = ПараметрыСинхронизации.ФорматыПередаваемыхФайлов;
		СтрокаНастроек.НастройкаСтрокой = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьПрочиеНастройкиСинхронизации(ПараметрыСинхронизации, СтруктураРезультатовЗапроса)
	
	ТипНастройкиСинхронизации = МП_СлужебныйПовтИсп.ТипНастройкиСинхронизации();

	МП_Изменения.ИнициализироватьТаблицуПоТипу(
		СтруктураРезультатовЗапроса, ТипНастройкиСинхронизации);
	
	СтрокаНастроек = СтруктураРезультатовЗапроса[ТипНастройкиСинхронизации].Добавить();
	СтрокаНастроек.ВидНастройки = "СинхронизацияСамочувствий";
	СтрокаНастроек.Значение = ПараметрыСинхронизации.СинхронизацияСамочувствий И 
		ПолучитьФункциональнуюОпцию("УчетСамочувствияСотрудников") = Истина;
	СтрокаНастроек.НастройкаСтрокой = Истина;
	
	СтрокаНастроек = СтруктураРезультатовЗапроса[ТипНастройкиСинхронизации].Добавить();
	СтрокаНастроек.ВидНастройки = "СинхронизацияОтсутствий";
	СтрокаНастроек.Значение = ПараметрыСинхронизации.СинхронизацияОтсутствий И 
		ПолучитьФункциональнуюОпцию("ИспользоватьОтсутствия") = Истина;
	СтрокаНастроек.НастройкаСтрокой = Истина;
	
	СтрокаНастроек = СтруктураРезультатовЗапроса[ТипНастройкиСинхронизации].Добавить();
	СтрокаНастроек.ВидНастройки = "СинхронизацияМероприятий";
	СтрокаНастроек.Значение = ПараметрыСинхронизации.СинхронизацияМероприятий И 
		ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеМероприятиями") = Истина;
	СтрокаНастроек.НастройкаСтрокой = Истина;
	
	СтрокаНастроек = СтруктураРезультатовЗапроса[ТипНастройкиСинхронизации].Добавить();
	СтрокаНастроек.ВидНастройки = "СинхронизацияУчетаВремени";
	СтрокаНастроек.Значение = ПараметрыСинхронизации.СинхронизацияУчетаВремени;
	СтрокаНастроек.НастройкаСтрокой = Истина;
	
	Если ПараметрыСинхронизации.СинхронизацияУчетаВремени = Истина Тогда
		
		СтрокаНастроек = СтруктураРезультатовЗапроса[ТипНастройкиСинхронизации].Добавить();
		СтрокаНастроек.ВидНастройки = "ПроектПоУмолчанию";
		
		ПроектПоУмолчанию = ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСПроектами", "ПроектПоУмолчанию");
		Если ЗначениеЗаполнено(ПроектПоУмолчанию) Тогда
			СтрокаНастроек.Значение = XMLСтрока(ПроектПоУмолчанию);
		КонецЕсли;
		СтрокаНастроек.НастройкаСтрокой = Истина;
		
		СтрокаНастроек = СтруктураРезультатовЗапроса[ТипНастройкиСинхронизации].Добавить();
		СтрокаНастроек.ВидНастройки = "СпособУказанияВремени";
		СпособУказанияВремени = ХранилищеОбщихНастроек.Загрузить("НастройкиУчетаВремени", "СпособУказанияВремени");
		Если Не ЗначениеЗаполнено(СпособУказанияВремени) Тогда
			СпособУказанияВремени = Перечисления.СпособыУказанияВремени.Длительность;
		КонецЕсли;
		СтрокаНастроек.Значение = ОбщегоНазначения.ИмяЗначенияПеречисления(СпособУказанияВремени);
		СтрокаНастроек.НастройкаСтрокой = Истина;
		
		СтрокаНастроек = СтруктураРезультатовЗапроса[ТипНастройкиСинхронизации].Добавить();
		СтрокаНастроек.ВидНастройки = "СпособУказанияВремени";
		СпособУказанияВремени = ХранилищеОбщихНастроек.Загрузить("НастройкиУчетаВремени", "СпособУказанияВремени");
		Если Не ЗначениеЗаполнено(СпособУказанияВремени) Тогда
			СпособУказанияВремени = Перечисления.СпособыУказанияВремени.Длительность;
		КонецЕсли;
		СтрокаНастроек.Значение = ОбщегоНазначения.ИмяЗначенияПеречисления(СпособУказанияВремени);
		СтрокаНастроек.НастройкаСтрокой = Истина;
		
		ВидРаботПоУмолчанию = ХранилищеОбщихНастроек.Загрузить("НастройкиУчетаВремени", "ВидРабот");
		СтрокаНастроек = СтруктураРезультатовЗапроса[ТипНастройкиСинхронизации].Добавить();
		СтрокаНастроек.ВидНастройки = "ВидРаботПоУмолчанию";
		СтрокаНастроек.Значение =  XMLСтрока(ВидРаботПоУмолчанию);
		СтрокаНастроек.НастройкаСтрокой = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапросовДляПервоначальнойВыгрузкиДанных

Функция ТекстЗапросаПочта()
	
	// Получение состояний аналогично запросу в ЖурналДокументов.ЭлектроннаяПочта.ФормаСписка
	Возврат
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЭлектроннаяПочта.Ссылка КАК Ссылка,
		|	ЭлектроннаяПочта.ЕстьВложения КАК ЕстьВложения,
		|	ЭлектроннаяПочта.Дата КАК Дата,
		|	ЭлектроннаяПочта.Папка КАК Папка,
		|	ВЫБОР
		|		КОГДА КешИнформацииОбОбъектах.Объект ЕСТЬ NULL
		|			ТОГДА 0
		|		КОГДА КешИнформацииОбОбъектах.ЕстьОшибкиПриемкиОтправкиПочты
		|		И ЭлектроннаяПочта.Отправлено = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА 6
		|		КОГДА КешИнформацииОбОбъектах.ЕстьОшибкиПриемкиОтправкиПочты
		|		И ТИПЗНАЧЕНИЯ(ЭлектроннаяПочта.Ссылка) = ТИП(Документ.ВходящееПисьмо)
		|			ТОГДА 6
		|		КОГДА КешИнформацииОбОбъектах.Отозван
		|			ТОГДА 9
		|		КОГДА ЭлектроннаяПочта.ОтправкаОтменена
		|			ТОГДА 5
		|		КОГДА КешИнформацииОбОбъектах.ПолученОтвет
		|			ТОГДА 4
		|		КОГДА КешИнформацииОбОбъектах.ОтправленОтвет
		|		И КешИнформацииОбОбъектах.Перенаправлен
		|			ТОГДА 8
		|		КОГДА НЕ КешИнформацииОбОбъектах.ОтправленОтвет
		|		И КешИнформацииОбОбъектах.Перенаправлен
		|			ТОГДА 7
		|		КОГДА КешИнформацииОбОбъектах.ОтправленОтвет
		|		И КешИнформацииОбОбъектах.Переслан
		|			ТОГДА 3
		|		КОГДА КешИнформацииОбОбъектах.ОтправленОтвет
		|		И НЕ КешИнформацииОбОбъектах.Переслан
		|			ТОГДА 1
		|		КОГДА НЕ КешИнформацииОбОбъектах.ОтправленОтвет
		|		И КешИнформацииОбОбъектах.Переслан
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексСостоянияПисьма,
		|	ЭлектроннаяПочта.Важность КАК Важность,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЭлектроннаяПочта.Отправитель) КАК Отправитель,
		|	ЭлектроннаяПочта.УчетнаяЗапись КАК УчетнаяЗапись,
		|	КешИнформацииОбОбъектах.СрокИсполнения КАК СрокИсполнения,
		|	ЭлектроннаяПочта.Тема КАК Тема,
		|	ЭлектроннаяПочта.ПометкаУдаления КАК ПометкаУдаления,
		|	МАКСИМУМ(ФлагиОбъектов.Флаг) КАК Флаг,
		|	ЭлектроннаяПочта.ДатаОтправкиПолучения КАК ДатаОтправки,
		|	ОтметкиВремениСсылочныхДанных.Отметка КАК ОтметкаВремени,
		|	СведенияОПрочтении.Прочтен КАК Прочитан,
		|	ЛОЖЬ КАК ТолькоЗаголовок,
		|	КешИнформацииОбОбъектах.СостояниеКонтроля КАК СостояниеКонтроля
		|ПОМЕСТИТЬ ПочтаБезТекстов
		|ИЗ
		|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПапкиПисемДляСинхронизации КАК ПапкиПисемДляСинхронизации
		|		ПО ЭлектроннаяПочта.Папка = ПапкиПисемДляСинхронизации.Папка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КешИнформацииОбОбъектах КАК КешИнформацииОбОбъектах
		|		ПО ЭлектроннаяПочта.Ссылка = КешИнформацииОбОбъектах.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиВремениСсылочныхОбъектов КАК ОтметкиВремениСсылочныхДанных
		|		ПО ЭлектроннаяПочта.Ссылка = ОтметкиВремениСсылочныхДанных.Ключ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПрочтении КАК СведенияОПрочтении
		|		ПО ЭлектроннаяПочта.Ссылка = СведенияОПрочтении.Объект
		|		И СведенияОПрочтении.Пользователь = &Пользователь
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФлагиОбъектов КАК ФлагиОбъектов
		|		ПО ЭлектроннаяПочта.Ссылка = ФлагиОбъектов.Объект
		|		И ФлагиОбъектов.ФизическоеЛицо = &ФизическоеЛицо
		|ГДЕ
		|	НЕ ЭлектроннаяПочта.ПометкаУдаления
		|	И ЭлектроннаяПочта.Дата > &ДатаНачалаВыгрузки
		|СГРУППИРОВАТЬ ПО
		|	ЭлектроннаяПочта.Ссылка,
		|	ЭлектроннаяПочта.ЕстьВложения,
		|	ЭлектроннаяПочта.Дата,
		|	ЭлектроннаяПочта.Папка,
		|	ВЫБОР
		|		КОГДА КешИнформацииОбОбъектах.Объект ЕСТЬ NULL
		|			ТОГДА 0
		|		КОГДА КешИнформацииОбОбъектах.ЕстьОшибкиПриемкиОтправкиПочты
		|		И ЭлектроннаяПочта.Отправлено = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА 6
		|		КОГДА КешИнформацииОбОбъектах.ЕстьОшибкиПриемкиОтправкиПочты
		|		И ТИПЗНАЧЕНИЯ(ЭлектроннаяПочта.Ссылка) = ТИП(Документ.ВходящееПисьмо)
		|			ТОГДА 6
		|		КОГДА КешИнформацииОбОбъектах.Отозван
		|			ТОГДА 9
		|		КОГДА ЭлектроннаяПочта.ОтправкаОтменена
		|			ТОГДА 5
		|		КОГДА КешИнформацииОбОбъектах.ПолученОтвет
		|			ТОГДА 4
		|		КОГДА КешИнформацииОбОбъектах.ОтправленОтвет
		|		И КешИнформацииОбОбъектах.Перенаправлен
		|			ТОГДА 8
		|		КОГДА НЕ КешИнформацииОбОбъектах.ОтправленОтвет
		|		И КешИнформацииОбОбъектах.Перенаправлен
		|			ТОГДА 7
		|		КОГДА КешИнформацииОбОбъектах.ОтправленОтвет
		|		И КешИнформацииОбОбъектах.Переслан
		|			ТОГДА 3
		|		КОГДА КешИнформацииОбОбъектах.ОтправленОтвет
		|		И НЕ КешИнформацииОбОбъектах.Переслан
		|			ТОГДА 1
		|		КОГДА НЕ КешИнформацииОбОбъектах.ОтправленОтвет
		|		И КешИнформацииОбОбъектах.Переслан
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ЭлектроннаяПочта.Важность,
		|	ЭлектроннаяПочта.УчетнаяЗапись,
		|	КешИнформацииОбОбъектах.СрокИсполнения,
		|	ЭлектроннаяПочта.Тема,
		|	ЭлектроннаяПочта.ПометкаУдаления,
		|	ЭлектроннаяПочта.ДатаОтправкиПолучения,
		|	ОтметкиВремениСсылочныхДанных.Отметка,
		|	СведенияОПрочтении.Прочтен,
		|	КешИнформацииОбОбъектах.СостояниеКонтроля
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПочтаБезТекстов.Ссылка,
		|	ПочтаБезТекстов.ЕстьВложения,
		|	ПочтаБезТекстов.Дата,
		|	ПочтаБезТекстов.Папка,
		|	ПочтаБезТекстов.ИндексСостоянияПисьма,
		|	ПочтаБезТекстов.Важность,
		|	ПочтаБезТекстов.Отправитель,
		|	ПочтаБезТекстов.УчетнаяЗапись,
		|	ПочтаБезТекстов.СрокИсполнения,
		|	ПочтаБезТекстов.Тема,
		|	ПочтаБезТекстов.ПометкаУдаления,
		|	ПочтаБезТекстов.Флаг,
		|	ПочтаБезТекстов.ДатаОтправки,
		|	ПочтаБезТекстов.ОтметкаВремени,
		|	ПочтаБезТекстов.Прочитан,
		|	ПочтаБезТекстов.ТолькоЗаголовок,
		|	ПочтаБезТекстов.СостояниеКонтроля,
		|	ТИПЗНАЧЕНИЯ(ПочтаБезТекстов.Ссылка) = ТИП(Документ.ВходящееПисьмо) КАК Входящее,
		|	ЕСТЬNULL(ПочтаБезТекстов.Ссылка.ТекстХранилище, ПочтаБезТекстов.Ссылка.ТекстПисьмаПростойТекстХранилище) КАК ТекстХранилище,
		|	ПочтаБезТекстов.Ссылка.ТекстПисьмаHTMLХранилище КАК ТекстHTMLХранилище,
		|	ПочтаБезТекстов.Ссылка.ТипТекста КАК ТипТекста
		|ПОМЕСТИТЬ Почта
		|ИЗ
		|	ПочтаБезТекстов КАК ПочтаБезТекстов";
	
КонецФункции

Функция ТекстЗапросаНСИпочта()
	
	Возврат 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ШаблоныТекстовПисем.Ссылка КАК Ссылка,
		|	ПОДСТРОКА(ШаблоныТекстовПисем.Шаблон, 1, 1000) КАК Шаблон,
		|	ШаблоныТекстовПисем.Наименование КАК Наименование,
		|	ВЫБОР
		|		КОГДА ШаблоныТекстовПисем.Ссылка = &ПодписьДляНовыхПисем
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПодписьДляНовыхПисем,
		|	ВЫБОР
		|		КОГДА ШаблоныТекстовПисем.Ссылка = &ПодписьПриОтветеИПересылке
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПодписьПриОтветеИПересылке,
		|	ШаблоныТекстовПисем.ПометкаУдаления КАК ПометкаУдаления
		|ПОМЕСТИТЬ MailTextTemplate
		|ИЗ
		|	Справочник.ШаблоныТекстов КАК ШаблоныТекстовПисем
		|ГДЕ
		|	ШаблоныТекстовПисем.Автор = &Пользователь
		|	И НЕ ШаблоныТекстовПисем.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УчетныеЗаписиЭлектроннойПочты.Ссылка КАК Ссылка,
		|	УчетныеЗаписиЭлектроннойПочты.АдресЭлектроннойПочты КАК Адрес,
		|	УчетныеЗаписиЭлектроннойПочты.ИспользоватьДляОтправки КАК МожетИспользоватьсяДляОтправки,
		|	УчетныеЗаписиЭлектроннойПочты.Ссылка = &ОсновнаяУчетнаяЗапись КАК ОсновнаяУчетнаяЗапись,
		|	УчетныеЗаписиЭлектроннойПочты.Наименование КАК Наименование,
		|	УчетныеЗаписиЭлектроннойПочты.ПометкаУдаления КАК ПометкаУдаления
		|ПОМЕСТИТЬ MailAccount
		|ИЗ
		|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
		|ГДЕ
		|	УчетныеЗаписиЭлектроннойПочты.ВариантИспользования = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияПочты.Встроенная)
		|	И УчетныеЗаписиЭлектроннойПочты.ОтветственныеЗаОбработкуПисем.Сотрудник В (&СотрудникиПользователя)
		|	И НЕ УчетныеЗаписиЭлектроннойПочты.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(АдресатыПочтовыхСообщений.Ссылка) КАК Ссылка,
		|	СведенияОбАдресатах.Представление КАК Наименование,
		|	АдресатыПочтовыхСообщений.Адрес КАК Адрес,
		|	АдресатыПочтовыхСообщений.ПометкаУдаления КАК ПометкаУдаления
		|ПОМЕСТИТЬ Addressee
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАдресатах КАК СведенияОбАдресатах
		|		ПО Пользователи.Ссылка = СведенияОбАдресатах.Контакт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АдресатыПочтовыхСообщений КАК АдресатыПочтовыхСообщений
		|		ПО (СведенияОбАдресатах.АдресатСообщения = АдресатыПочтовыхСообщений.Ссылка)
		|ГДЕ
		|	НЕ Пользователи.ПометкаУдаления
		|	И НЕ Пользователи.Недействителен
		|	И НЕ АдресатыПочтовыхСообщений.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	АдресатыПочтовыхСообщений.Адрес,
		|	СведенияОбАдресатах.Представление,
		|	АдресатыПочтовыхСообщений.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МАКСИМУМ(АдресатыПочтовыхСообщений.Ссылка),
		|	СведенияОбАдресатах.Представление,
		|	АдресатыПочтовыхСообщений.Адрес,
		|	АдресатыПочтовыхСообщений.ПометкаУдаления
		|ИЗ
		|	Справочник.РолиИсполнителей КАК РолиИсполнителей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАдресатах КАК СведенияОбАдресатах
		|		ПО РолиИсполнителей.Ссылка = СведенияОбАдресатах.Контакт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АдресатыПочтовыхСообщений КАК АдресатыПочтовыхСообщений
		|		ПО (СведенияОбАдресатах.АдресатСообщения = АдресатыПочтовыхСообщений.Ссылка)
		|ГДЕ
		|	НЕ РолиИсполнителей.ПометкаУдаления
		|	И НЕ АдресатыПочтовыхСообщений.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	АдресатыПочтовыхСообщений.Адрес,
		|	СведенияОбАдресатах.Представление,
		|	АдресатыПочтовыхСообщений.ПометкаУдаления";
		
	
КонецФункции

функция ТекстЗапросНСИПользователиИРоли()
	
	Возврат
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Пользователи.Ссылка КАК Ссылка,
		|	Пользователи.Наименование КАК Наименование,
		|	Пользователи.ПометкаУдаления КАК ПометкаУдаления
		|ПОМЕСТИТЬ User
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	НЕ Пользователи.Недействителен
		|	И НЕ Пользователи.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РолиИсполнителей.Ссылка КАК Ссылка,
		|	РолиИсполнителей.Наименование КАК Наименование,
		|	РолиИсполнителей.ПометкаУдаления КАК ПометкаУдаления
		|ПОМЕСТИТЬ Role
		|ИЗ
		|	Справочник.РолиИсполнителей КАК РолиИсполнителей
		|ГДЕ
		|	НЕ РолиИсполнителей.ПометкаУдаления"
	
КонецФункции

Функция ТекстЗапросаПапки()
	
	Возврат
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СинхронизацияПапокПисемСМобильнымКлиентом.Папка КАК Папка,
		|	ПапкиУчетныхЗаписей.УчетнаяЗапись КАК УчетнаяЗапись
		|ПОМЕСТИТЬ ПапкиПисемДляСинхронизации
		|ИЗ
		|	РегистрСведений.СинхронизацияПапокПисемСМобильнымКлиентом КАК СинхронизацияПапокПисемСМобильнымКлиентом
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПапкиУчетныхЗаписей КАК ПапкиУчетныхЗаписей
		|		ПО СинхронизацияПапокПисемСМобильнымКлиентом.Папка = ПапкиУчетныхЗаписей.Папка
		|ГДЕ
		|	СинхронизацияПапокПисемСМобильнымКлиентом.Пользователь = &Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПапкиПисемДляСинхронизации.Папка КАК Ссылка,
		|	ПапкиПисем.ПометкаУдаления КАК ПометкаУдаления,
		|	ПапкиПисем.ВидПапки КАК ВидПапки,
		|	ПапкиПисем.Родитель КАК Родитель,
		|	ИСТИНА КАК Синхронизировать,
		|	ПапкиПисемДляСинхронизации.УчетнаяЗапись КАК УчетнаяЗапись,
		|	ПапкиПисем.Наименование КАК Наименование,
		|	ЕСТЬNULL(ОтметкиВремениСсылочныхДанных.Отметка, """") КАК ОтметкаВремени
		|ИЗ
		|	ПапкиПисемДляСинхронизации КАК ПапкиПисемДляСинхронизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиВремениСсылочныхДанных КАК ОтметкиВремениСсылочныхДанных
		|		ПО ПапкиПисемДляСинхронизации.Папка = ОтметкиВремениСсылочныхДанных.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПапкиПисем КАК ПапкиПисем
		|		ПО ПапкиПисемДляСинхронизации.Папка = ПапкиПисем.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МП_ОтправленныеСсылочныеДанные.Ссылка,
		|	ИСТИНА,
		|	NULL,
		|	NULL,
		|	ЛОЖЬ,
		|	NULL,
		|	NULL,
		|	NULL
		|ИЗ
		|	РегистрСведений.МП_ОтправленныеСсылочныеДанные КАК МП_ОтправленныеСсылочныеДанные
		|ГДЕ
		|	МП_ОтправленныеСсылочныеДанные.МобильноеПриложение = &МобильноеПриложение
		|	И МП_ОтправленныеСсылочныеДанные.Ссылка ССЫЛКА Справочник.ПапкиПисем
		|	И НЕ МП_ОтправленныеСсылочныеДанные.Ссылка В
		|				(ВЫБРАТЬ
		|					ПапкиПисемДляСинхронизации.Папка КАК Папка
		|				ИЗ
		|					ПапкиПисемДляСинхронизации КАК ПапкиПисемДляСинхронизации)
		|
		|СГРУППИРОВАТЬ ПО
		|	МП_ОтправленныеСсылочныеДанные.Ссылка";
	
КонецФункции

Функция ТекстЗапросаЗадачиМне()
	
	Возврат
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗадачиПоИсполнителю.Ссылка КАК Ссылка,
		|	ЗадачиПоИсполнителю.Наименование КАК Наименование,
		|	ЗадачиПоИсполнителю.Автор КАК Автор,
		|	ЗадачиПоИсполнителю.Исполнитель КАК Исполнитель,
		|	ЗадачиПоИсполнителю.СрокИсполнения КАК СрокИсполнения,
		|	ЗадачиПоИсполнителю.Дата КАК ДатаСоздания,
		|	КешИнформацииОбОбъектах.ЕстьФайлы КАК ЕстьВложения,
		|	ВЫБОР
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.НаКонтроле)
		|			ТОГДА ВЫБОР
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
		|					ТОГДА 1
		|				ИНАЧЕ 3
		|			КОНЕЦ
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СнятсКонтроля)
		|			ТОГДА 4
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.НаКонтролеНесколько)
		|			ТОГДА ВЫБОР
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
		|					ТОГДА 5
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполненияОбщий = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполненияОбщий >= &ТекущаяДата
		|					ТОГДА 8
		|				ИНАЧЕ 6
		|			КОНЕЦ
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СнятсКонтроляНесколько)
		|			ТОГДА 7
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СмешанноНесколько)
		|			ТОГДА ВЫБОР
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
		|					ТОГДА 9
		|				ИНАЧЕ 10
		|			КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СостояниеКонтроля,
		|	ЗадачиПоИсполнителю.ПринятаКИсполнению КАК ПринятаКИсполнению,
		|	ЛОЖЬ КАК ТолькоЗаголовок,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ЗадачиПоИсполнителю.БизнесПроцесс) = ТИП(БизнесПроцесс.Исполнение)
		|			ТОГДА ЗадачиПоИсполнителю.БизнесПроцесс
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ПроцессИсполнение,
		|	ЗадачиПоИсполнителю.РольИсполнителя.Владелец КАК РольИсполнителя,
		|	ЗадачиПоИсполнителю.БизнесПроцесс КАК БизнесПроцесс,
		|	ЗадачиПоИсполнителю.СостояниеБизнесПроцесса КАК Состояние,
		|	ЗадачиПоИсполнителю.СостояниеБизнесПроцесса.Порядок КАК СостояниеИндекс,
		|	ОтметкиВремениСсылочныхДанных.Отметка КАК ОтметкаВремени,
		|	ЗадачиПоИсполнителю.ПометкаУдаления КАК ПометкаУдаления,
		|	ВЫРАЗИТЬ(ЗадачиПоИсполнителю.РезультатВыполнения КАК СТРОКА(500)) КАК КомментарийИсполнителя,
		|	МАКСИМУМ(ФлагиОбъектов.Флаг) КАК Флаг,
		|	ЗадачиПоИсполнителю.Важность КАК Важность
		|ПОМЕСТИТЬ ИзмененияЗадач
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачиПоИсполнителю
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФлагиОбъектов КАК ФлагиОбъектов
		|		ПО ЗадачиПоИсполнителю.Ссылка = ФлагиОбъектов.Объект
		|		И ФлагиОбъектов.ФизическоеЛицо = &ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КешИнформацииОбОбъектах КАК КешИнформацииОбОбъектах
		|		ПО ЗадачиПоИсполнителю.Ссылка = КешИнформацииОбОбъектах.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиВремениСсылочныхОбъектов КАК ОтметкиВремениСсылочныхДанных
		|		ПО ЗадачиПоИсполнителю.Ссылка = ОтметкиВремениСсылочныхДанных.Ключ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОчередьЗаданийДокументооборота КАК ОчередьЗаданийДокументооборота
		|		ПО ЗадачиПоИсполнителю.Ссылка = ОчередьЗаданийДокументооборота.ПредметЗадания
		|		И ОчередьЗаданийДокументооборота.СтатусЗадания <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданий.Завершено)
		|ГДЕ
		|	ЗадачиПоИсполнителю.СостояниеБизнесПроцесса = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Активен)
		|	И НЕ ТИПЗНАЧЕНИЯ(ЗадачиПоИсполнителю.БизнесПроцесс) = ТИП(БизнесПроцесс.КомплексныйПроцесс)
		|	И НЕ ЗадачиПоИсполнителю.ПометкаУдаления
		|	И ЗадачиПоИсполнителю.ИсключенаИзПроцесса = ЛОЖЬ
		|	И ИСТИНА В
		|		(ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА
		|		ИЗ
		|			РегистрСведений.ИсполнителиРолейИДелегаты КАК ИсполнителиРолейИДелегаты
		|		ГДЕ
		|			ИсполнителиРолейИДелегаты.РольСотрудник = ЗадачиПоИсполнителю.ТекущийИсполнитель
		|			И ИсполнителиРолейИДелегаты.ИсполнительДелегат В (&СотрудникиПользователя)
		|			И ИсполнителиРолейИДелегаты.ИмяОбластиДелегирования В ("""", ""Задачи"", ""ЗадачиПросмотр"")
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА
		|		ИЗ
		|			РегистрСведений.СотрудникиПользователей КАК СотрудникиПользователей
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсполнителиРолейИДелегаты КАК ИсполнителиРолейИДелегаты
		|				ПО СотрудникиПользователей.Сотрудник = ИсполнителиРолейИДелегаты.РольСотрудник
		|				И ИсполнителиРолейИДелегаты.ИмяОбластиДелегирования В ("""", ""Задачи"", ""ЗадачиПросмотр"")
		|				И ИсполнителиРолейИДелегаты.ИсполнительДелегат В (&СотрудникиПользователя)
		|		ГДЕ
		|			СотрудникиПользователей.Пользователь = ЗадачиПоИсполнителю.ТекущийИсполнитель)
		|	И НЕ ЗадачиПоИсполнителю.Выполнена
		|	И (ОчередьЗаданийДокументооборота.СтатусЗадания ЕСТЬ NULL
		|	ИЛИ ОчередьЗаданийДокументооборота.СтатусЗадания <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданий.Выполняется))
		|	И НЕ ТИПЗНАЧЕНИЯ(ЗадачиПоИсполнителю.БизнесПроцесс) = ТИП(БизнесПроцесс.РешениеВопросовВыполненияЗадач)
		|СГРУППИРОВАТЬ ПО
		|	ЗадачиПоИсполнителю.Ссылка,
		|	ЗадачиПоИсполнителю.Наименование,
		|	ЗадачиПоИсполнителю.Автор,
		|	ЗадачиПоИсполнителю.Исполнитель,
		|	ЗадачиПоИсполнителю.СрокИсполнения,
		|	ЗадачиПоИсполнителю.Дата,
		|	КешИнформацииОбОбъектах.ЕстьФайлы,
		|	ВЫБОР
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.НаКонтроле)
		|			ТОГДА ВЫБОР
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
		|					ТОГДА 1
		|				ИНАЧЕ 3
		|			КОНЕЦ
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СнятсКонтроля)
		|			ТОГДА 4
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.НаКонтролеНесколько)
		|			ТОГДА ВЫБОР
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
		|					ТОГДА 5
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполненияОбщий = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполненияОбщий >= &ТекущаяДата
		|					ТОГДА 8
		|				ИНАЧЕ 6
		|			КОНЕЦ
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СнятсКонтроляНесколько)
		|			ТОГДА 7
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СмешанноНесколько)
		|			ТОГДА ВЫБОР
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
		|					ТОГДА 9
		|				ИНАЧЕ 10
		|			КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ЗадачиПоИсполнителю.ПринятаКИсполнению,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ЗадачиПоИсполнителю.БизнесПроцесс) = ТИП(БизнесПроцесс.Исполнение)
		|			ТОГДА ЗадачиПоИсполнителю.БизнесПроцесс
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ЗадачиПоИсполнителю.РольИсполнителя.Владелец,
		|	ЗадачиПоИсполнителю.БизнесПроцесс,
		|	ЗадачиПоИсполнителю.СостояниеБизнесПроцесса,
		|	ЗадачиПоИсполнителю.СостояниеБизнесПроцесса.Порядок,
		|	ОтметкиВремениСсылочныхДанных.Отметка,
		|	ЗадачиПоИсполнителю.ПометкаУдаления,
		|	ВЫРАЗИТЬ(ЗадачиПоИсполнителю.РезультатВыполнения КАК СТРОКА(500)),
		|	ЗадачиПоИсполнителю.Важность";
	
КонецФункции

функция ТекстЗапросаПроцессыИсполнения()
	
	Возврат
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Исполнение.Наименование КАК Наименование,
		|	Исполнение.Автор КАК Автор,
		|	ВЫБОР
		|		КОГДА Исполнение.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.Высокая)
		|			ТОГДА 2
		|		КОГДА Исполнение.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.Низкая)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ВажностьНомерКартинки,
		|	Исполнение.Важность КАК Важность,
		|	Исполнение.ВедущаяЗадача КАК ГлавнаяЗадача,
		|	Исполнение.Дата КАК ДатаСоздания,
		|	Исполнение.ДатаНачала КАК ДатаСтарта,
		|	Исполнение.Состояние КАК Состояние,
		|	Исполнение.СрокИсполненияПроцесса КАК Срок,
		|	КешИнформацииОбОбъектах.ЕстьФайлы КАК ЕстьВложения,
		|	ВЫРАЗИТЬ(Исполнение.Описание КАК СТРОКА(500)) КАК Описание,
		|	ВЫБОР
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.НаКонтроле)
		|			ТОГДА ВЫБОР
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
		|					ТОГДА 1
		|				ИНАЧЕ 3
		|			КОНЕЦ
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СнятсКонтроля)
		|			ТОГДА 4
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.НаКонтролеНесколько)
		|			ТОГДА ВЫБОР
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
		|					ТОГДА 5
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполненияОбщий = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполненияОбщий >= &ТекущаяДата
		|					ТОГДА 8
		|				ИНАЧЕ 6
		|			КОНЕЦ
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СнятсКонтроляНесколько)
		|			ТОГДА 7
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СмешанноНесколько)
		|			ТОГДА ВЫБОР
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
		|					ТОГДА 9
		|				ИНАЧЕ 10
		|			КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СостояниеКонтроля,
		|	Исполнение.Ссылка КАК Ссылка,
		|	ОтметкиВремениСсылочныхДанных.Отметка КАК ОтметкаВремени,
		|	ЛОЖЬ КАК ТолькоЗаголовок,
		|	Исполнение.ПометкаУдаления
		|	ИЛИ Исполнение.Завершен КАК ПометкаУдаления,
		|	Исполнение.ДатаЗавершения КАК ДатаЗавершения,
		|	МАКСИМУМ(ФлагиОбъектов.Флаг) КАК Флаг
		|ПОМЕСТИТЬ ИзмененияПроцессовИсполнения
		|ИЗ
		|	БизнесПроцесс.Исполнение КАК Исполнение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиВремениСсылочныхОбъектов КАК ОтметкиВремениСсылочныхДанных
		|		ПО Исполнение.Ссылка = ОтметкиВремениСсылочныхДанных.Ключ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФлагиОбъектов КАК ФлагиОбъектов
		|		ПО Исполнение.Ссылка = ФлагиОбъектов.Объект
		|		И ФлагиОбъектов.ФизическоеЛицо = &ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КешИнформацииОбОбъектах КАК КешИнформацииОбОбъектах
		|		ПО Исполнение.Ссылка = КешИнформацииОбОбъектах.Объект
		|ГДЕ
		|	НЕ Исполнение.Завершен
		|	И НЕ Исполнение.ПометкаУдаления
		|	И Исполнение.Автор = &Пользователь
		|СГРУППИРОВАТЬ ПО
		|	Исполнение.Наименование,
		|	Исполнение.Автор,
		|	ВЫБОР
		|		КОГДА Исполнение.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.Высокая)
		|			ТОГДА 2
		|		КОГДА Исполнение.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.Низкая)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ,
		|	Исполнение.Важность,
		|	Исполнение.ВедущаяЗадача,
		|	Исполнение.Дата,
		|	Исполнение.ДатаНачала,
		|	Исполнение.Состояние,
		|	Исполнение.СрокИсполненияПроцесса,
		|	КешИнформацииОбОбъектах.ЕстьФайлы,
		|	ВЫРАЗИТЬ(Исполнение.Описание КАК СТРОКА(500)),
		|	ВЫБОР
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.НаКонтроле)
		|			ТОГДА ВЫБОР
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
		|					ТОГДА 1
		|				ИНАЧЕ 3
		|			КОНЕЦ
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СнятсКонтроля)
		|			ТОГДА 4
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.НаКонтролеНесколько)
		|			ТОГДА ВЫБОР
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
		|					ТОГДА 5
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполненияОбщий = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполненияОбщий >= &ТекущаяДата
		|					ТОГДА 8
		|				ИНАЧЕ 6
		|			КОНЕЦ
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СнятсКонтроляНесколько)
		|			ТОГДА 7
		|		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СмешанноНесколько)
		|			ТОГДА ВЫБОР
		|				КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
		|					ТОГДА 9
		|				ИНАЧЕ 10
		|			КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Исполнение.Ссылка,
		|	ОтметкиВремениСсылочныхДанных.Отметка,
		|	Исполнение.ПометкаУдаления
		|	ИЛИ Исполнение.Завершен,
		|	Исполнение.ДатаЗавершения";
	
КонецФункции

Функция ТекстЗапросаКалендарь()
	
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаписиРабочегоКалендаря.Ссылка КАК Ссылка,
	|	ЗаписиРабочегоКалендаря.Наименование КАК Наименование,
	|	ЗаписиРабочегоКалендаря.Сотрудник КАК Сотрудник,
	|	ЗаписиРабочегоКалендаря.ВесьДень КАК ВесьДень,
	|	ЗаписиРабочегоКалендаря.ДатаНачала КАК ДатаНачала,
	|	ЗаписиРабочегоКалендаря.ДатаНачалаПовторения КАК ДатаНачалаПовторения,
	|	ЗаписиРабочегоКалендаря.ДатаОкончания КАК ДатаОкончания,
	|	ЗаписиРабочегоКалендаря.ДатаОкончанияПовторения КАК ДатаОкончанияПовторения,
	|	ЗаписиРабочегоКалендаря.ИнтервалПовторения КАК ИнтервалПовторения,
	|	ЗаписиРабочегоКалендаря.КоличествоПовторов КАК КоличествоПовторов,
	|	ЗаписиРабочегоКалендаря.Описание КАК Описание,
	|	ЗаписиРабочегоКалендаря.ПовторениеПоДнямМесяца КАК ПовторениеПоДнямМесяца,
	|	ЗаписиРабочегоКалендаря.ПовторениеПоМесяцам КАК ПовторениеПоМесяцам,
	|	ЗаписиРабочегоКалендаря.ПравилоОкончанияПовторения КАК ПравилоОкончанияПовторения,
	|	ЗаписиРабочегоКалендаря.Связанная КАК Связанная,
	|	ЗаписиРабочегоКалендаря.Предмет КАК Предмет,
	|	ЗаписиРабочегоКалендаря.Состояние КАК Состояние,
	|	ЗаписиРабочегоКалендаря.ТипЗаписиКалендаря КАК ТипЗаписиКалендаря,
	|	ЗаписиРабочегоКалендаря.ЧастотаПовторения КАК ЧастотаПовторения,
	|	ЗаписиРабочегоКалендаря.ИсключенияПовторения.(
	|		ДатаИсключения КАК ДатаИсключения,
	|		ЗаписьИсключения КАК ЗаписьИсключения) КАК ИсключенияПовторения,
	|	ЗаписиРабочегоКалендаря.ПовторениеПоДням.(
	|		ДеньНедели КАК ДеньНедели,
	|		НомерВхождения КАК НомерВхождения) КАК ПовторениеПоДням,
	|	ЗаписиРабочегоКалендаря.ПометкаУдаления КАК ПометкаУдаления,
	|	ОтметкиВремениСсылочныхДанных.Отметка КАК ОтметкаВремени,
	|	ВЫБОР
	|		КОГДА НЕ НастройкиОтображенияЗаписейОтработано.ЗначениеНастройки ЕСТЬ NULL
	|			ТОГДА НастройкиОтображенияЗаписейОтработано.ЗначениеНастройки
	|		КОГДА НЕ НастройкиОтображенияЗаписейОтработано1.ЗначениеНастройки ЕСТЬ NULL
	|			ТОГДА НастройкиОтображенияЗаписейОтработано1.ЗначениеНастройки
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Отработано,
	|	ВЫБОР
	|		КОГДА НЕ НастройкиОтображенияЗаписейЦвета.ЗначениеНастройки ЕСТЬ NULL
	|		И НастройкиОтображенияЗаписейЦвета.ЗначениеНастройки <> ЗНАЧЕНИЕ(Перечисление.ЦветаРабочегоКалендаря.Нет)
	|			ТОГДА НастройкиОтображенияЗаписейЦвета.ЗначениеНастройки
	|		КОГДА НЕ НастройкиОтображенияЗаписейЦвета1.ЗначениеНастройки ЕСТЬ NULL
	|		И НастройкиОтображенияЗаписейЦвета1.ЗначениеНастройки <> ЗНАЧЕНИЕ(Перечисление.ЦветаРабочегоКалендаря.Нет)
	|			ТОГДА НастройкиОтображенияЗаписейЦвета1.ЗначениеНастройки
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ЦветаРабочегоКалендаря.ПустаяСсылка)
	|	КОНЕЦ КАК Цвет
	|ИЗ
	|	Справочник.ЗаписиРабочегоКалендаря КАК ЗаписиРабочегоКалендаря
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиВремениСсылочныхДанных КАК ОтметкиВремениСсылочныхДанных
	|		ПО ЗаписиРабочегоКалендаря.Ссылка = ОтметкиВремениСсылочныхДанных.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОтображенияЗаписейРабочегоКалендаря КАК
	|			НастройкиОтображенияЗаписейОтработано
	|		ПО (НастройкиОтображенияЗаписейОтработано.ФизическоеЛицо = &ФизЛицоПользователя)
	|		И ЗаписиРабочегоКалендаря.Ссылка = НастройкиОтображенияЗаписейОтработано.Событие
	|		И
	|			(НастройкиОтображенияЗаписейОтработано.Настройка = ЗНАЧЕНИЕ(Перечисление.НастройкиЗаписейРабочегоКалендаря.Отработана))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОтображенияЗаписейРабочегоКалендаряПользователя КАК
	|			НастройкиОтображенияЗаписейОтработано1
	|		ПО (НастройкиОтображенияЗаписейОтработано1.Пользователь = &Пользователь)
	|		И ЗаписиРабочегоКалендаря.Ссылка = НастройкиОтображенияЗаписейОтработано1.Событие
	|		И
	|			(НастройкиОтображенияЗаписейОтработано1.Настройка = ЗНАЧЕНИЕ(Перечисление.НастройкиЗаписейРабочегоКалендаря.Отработана))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОтображенияЗаписейРабочегоКалендаря КАК НастройкиОтображенияЗаписейЦвета
	|		ПО (НастройкиОтображенияЗаписейЦвета.ФизическоеЛицо = &ФизЛицоПользователя)
	|		И ЗаписиРабочегоКалендаря.Ссылка = НастройкиОтображенияЗаписейЦвета.Событие
	|		И (НастройкиОтображенияЗаписейЦвета.Настройка = ЗНАЧЕНИЕ(Перечисление.НастройкиЗаписейРабочегоКалендаря.Цвет))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОтображенияЗаписейРабочегоКалендаряПользователя КАК
	|			НастройкиОтображенияЗаписейЦвета1
	|		ПО ЗаписиРабочегоКалендаря.Ссылка = НастройкиОтображенияЗаписейЦвета1.Событие
	|		И (НастройкиОтображенияЗаписейЦвета1.Пользователь = &Пользователь)
	|		И (НастройкиОтображенияЗаписейЦвета1.Настройка = ЗНАЧЕНИЕ(Перечисление.НастройкиЗаписейРабочегоКалендаря.Цвет))
	|ГДЕ
	|	НЕ ЗаписиРабочегоКалендаря.ПометкаУдаления
	|	И ЗаписиРабочегоКалендаря.Сотрудник = &Сотрудник
	|	И (ЗаписиРабочегоКалендаря.ДатаОкончания >= &ДатаНачалаВыгрузки
	|	ИЛИ ЗаписиРабочегоКалендаря.ПравилоОкончанияПовторения = ЗНАЧЕНИЕ(Перечисление.ПравилаОкончанияПовторения.Никогда))";

КонецФункции

Функция ТекстЗапросаКонтроль()
	
	Возврат
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Контроль.Ссылка КАК Ссылка,
		|	Контроль.Автор КАК Автор,
		|	Контроль.Наименование КАК Наименование,
		|	Контроль.ДатаПостановкиНаКонтроль КАК ДатаПостановкиНаКонтроль,
		|	Контроль.ДатаСнятияСКонтроля КАК ДатаСнятияСКонтроля,
		|	Контроль.ИсполнителиСтрокой КАК ИсполнителиСтрокой,
		|	Контроль.Источник КАК Источник,
		|	Контроль.Контролер КАК Контролер,
		|	Контроль.Описание КАК Описание,
		|	Контроль.ПоставленНаКонтроль КАК ПоставленНаКонтроль,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(Контроль.Предмет) = ТИП(Справочник.ВеткиПереписки)
		|			ТОГДА Контроль.Предмет.КорневоеПисьмо
		|		ИНАЧЕ Контроль.Предмет
		|	КОНЕЦ КАК Предмет,
		|	Контроль.СнятСКонтроля КАК СнятСКонтроля,
		|	Контроль.СрокИсполнения КАК СрокИсполнения,
		|	Контроль.Исполнители.(
		|		ДатаИсполнения КАК ДатаИсполнения,
		|		ДатаКонтроля КАК ДатаКонтроля,
		|		Исполнено КАК Исполнено,
		|		Ответственный КАК Ответственный,
		|		Проконтролировано КАК Проконтролировано,
		|		ВЫБОР
		|			КОГДА ТИПЗНАЧЕНИЯ(Контроль.Исполнители.Исполнитель) = ТИП(Справочник.ПолныеРоли)
		|				ТОГДА Контроль.Исполнители.Исполнитель.Владелец
		|			ИНАЧЕ Контроль.Исполнители.Исполнитель
		|		КОНЕЦ КАК Исполнитель,
		|		Источник КАК Источник,
		|		ПРЕДСТАВЛЕНИЕССЫЛКИ(Контроль.Исполнители.Исполнитель) КАК ИсполнительСтрокой,
		|		ВЫБОР
		|			КОГДА Контроль.Исполнители.Исполнитель ССЫЛКА Справочник.Пользователи
		|				ТОГДА ""User""
		|			КОГДА Контроль.Исполнители.Исполнитель ССЫЛКА Справочник.АдресатыПочтовыхСообщений
		|				ТОГДА ""Addressee""
		|			ИНАЧЕ ""Role""
		|		КОНЕЦ КАК ТипИсполнителя,
		|		ВЫБОР
		|			КОГДА ТИПЗНАЧЕНИЯ(Контроль.Предмет) = ТИП(Справочник.ВеткиПереписки)
		|				ТОГДА ВЫБОР
		|						КОГДА ТИПЗНАЧЕНИЯ(Контроль.Исполнители.Источник) = ТИП(Документ.ВходящееПисьмо)
		|							ТОГДА &СостояниеОтветПолучен
		|						КОГДА ТИПЗНАЧЕНИЯ(Контроль.Исполнители.Источник) = ТИП(Документ.ИсходящееПисьмо)
		|							ТОГДА &СостояниеОтветНеПолучен
		|					КОНЕЦ
		|			КОГДА ТИПЗНАЧЕНИЯ(Контроль.Предмет) В (&ТипыБП)
		|					ИЛИ ТИПЗНАЧЕНИЯ(Контроль.Предмет) = ТИП(Задача.ЗадачаИсполнителя)
		|				ТОГДА ВЫБОР
		|						КОГДА Контроль.Исполнители.Исполнено
		|							ТОГДА &СостояниеИсполнено
		|					КОНЕЦ
		|		КОНЕЦ КАК Состояние
		|	) КАК Исполнители,
		|	ОтметкиВремениСсылочныхДанных.Отметка КАК ОтметкаВремени,
		|	Контроль.ПометкаУдаления КАК ПометкаУдаления
		|ИЗ
		|	Справочник.Контроль КАК Контроль
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиВремениСсылочныхДанных КАК ОтметкиВремениСсылочныхДанных
		|		ПО Контроль.Ссылка = ОтметкиВремениСсылочныхДанных.Ссылка
		|ГДЕ
		|	ИСТИНА В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|			ИЗ
		|				РегистрСведений.ИсполнителиРолейИДелегаты КАК ИсполнителиРолейИДелегаты
		|			ГДЕ
		|				ИсполнителиРолейИДелегаты.РольСотрудник = Контроль.Контролер
		|				И ИсполнителиРолейИДелегаты.ИсполнительДелегат В (&СотрудникиПользователя)
		|				И ИсполнителиРолейИДелегаты.ИмяОбластиДелегирования В ("""", ""Контроль"")
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|			ИЗ
		|				РегистрСведений.СотрудникиПользователей КАК СотрудникиПользователей
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсполнителиРолейИДелегаты КАК ИсполнителиРолейИДелегаты
		|					ПО
		|						СотрудникиПользователей.Сотрудник = ИсполнителиРолейИДелегаты.РольСотрудник
		|							И ИсполнителиРолейИДелегаты.ИмяОбластиДелегирования В ("""", ""Контроль"")
		|							И ИсполнителиРолейИДелегаты.ИсполнительДелегат В (&СотрудникиПользователя)
		|			ГДЕ
		|				СотрудникиПользователей.Пользователь = Контроль.Контролер)
		|	И НЕ Контроль.СнятСКонтроля
		|	И НЕ Контроль.ПометкаУдаления";
	
КонецФункции

Функция ТекстЗапросаМоиОтсутствияИВидыОтсутствий()
	
	Возврат
		"ВЫБРАТЬ
		|	Отсутствие.Ссылка КАК Ссылка,
		|	Отсутствие.ПометкаУдаления КАК ПометкаУдаления,
		|	Отсутствие.Номер КАК Номер,
		|	Отсутствие.Дата КАК Дата,
		|	Отсутствие.БудуРазбиратьЗадачи КАК БудуРазбиратьЗадачи,
		|	Отсутствие.ВесьДень КАК ВесьДень,
		|	Отсутствие.ВидОтсутствия КАК ВидОтсутствия,
		|	Отсутствие.ДатаНачала КАК ДатаНачала,
		|	Отсутствие.ДатаОкончания КАК ДатаОкончания,
		|	Отсутствие.Комментарий КАК Комментарий,
		|	Отсутствие.ПериодСтрокой КАК ПериодСтрокой,
		|	Отсутствие.Заместители.(
		|		Заместитель КАК Заместитель,
		|		Комментарий КАК Комментарий
		|	) КАК Заместители,
		|	ОтметкиВремениСсылочныхДанных.Отметка КАК ОтметкаВремени
		|ИЗ
		|	Документ.Отсутствие КАК Отсутствие
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиВремениСсылочныхДанных КАК ОтметкиВремениСсылочныхДанных
		|		ПО Отсутствие.Ссылка = ОтметкиВремениСсылочныхДанных.Ссылка
		|ГДЕ
		|	Отсутствие.Сотрудник = &Пользователь
		|	И НЕ Отсутствие.ПометкаУдаления
		|	И Отсутствие.ДатаОкончания >= &ДатаНачалаВыгрузки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыОтсутствий.Ссылка КАК Ссылка,
		|	ВидыОтсутствий.Наименование КАК Наименование,
		|	ВидыОтсутствий.Комментарий КАК Комментарий,
		|	ВидыОтсутствий.ЭтоУдаленнаяРабота КАК ЭтоУдаленнаяРабота
		|ИЗ
		|	Справочник.ВидыОтсутствий КАК ВидыОтсутствий
		|ГДЕ
		|	НЕ ВидыОтсутствий.ПометкаУдаления";
		
КонецФункции

Функция ТекстЗапросаМаксРазмерВложения() Экспорт
	
	Возврат
		"ВЫБРАТЬ
		|	МаксимальныйРазмерФайла.Значение КАК Значение
		|ИЗ
		|	Константа.МаксимальныйРазмерФайла КАК МаксимальныйРазмерФайла";
	
КонецФункции

Функция ТекстЗапросаМоиСамочувствия()
	
	Возврат
		"ВЫБРАТЬ
		|	ГрафикУчетаСамочувствияСотрудников.Ссылка КАК Ссылка,
		|	ГрафикУчетаСамочувствияСотрудников.ВремяЗамера КАК ВремяЗамера,
		|	ГрафикУчетаСамочувствияСотрудников.Недействительная КАК Недействительная,
		|	ГрафикУчетаСамочувствияСотрудников.ПометкаУдаления КАК ПометкаУдаления
		|ИЗ
		|	Справочник.ГрафикУчетаСамочувствияСотрудников КАК ГрафикУчетаСамочувствияСотрудников
		|ГДЕ
		|	НЕ ГрафикУчетаСамочувствияСотрудников.ПометкаУдаления
		|	И НЕ ГрафикУчетаСамочувствияСотрудников.Недействительная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СамочувствиеСотрудника.Ссылка КАК Ссылка,
		|	СамочувствиеСотрудника.ПометкаУдаления КАК ПометкаУдаления,
		|	СамочувствиеСотрудника.Номер КАК Номер,
		|	СамочувствиеСотрудника.Дата КАК Дата,
		|	ОтметкиВремениСсылочныхДанных.Отметка КАК ОтметкаВремени,
		|	СамочувствиеСотрудника.Температура КАК Температура,
		|	СамочувствиеСотрудника.Самочувствие КАК Самочувствие,
		|	СамочувствиеСотрудника.ПовышеннаяТемпература КАК ПовышеннаяТемпература,
		|	СамочувствиеСотрудника.ДатаЗамера КАК ДатаЗамера,
		|	СамочувствиеСотрудника.ТочкаЗамера КАК ТочкаЗамера
		|ИЗ
		|	Документ.СамочувствиеСотрудника КАК СамочувствиеСотрудника
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СотрудникиПользователей КАК СотрудникиПользователей
		|		ПО СамочувствиеСотрудника.Сотрудник = СотрудникиПользователей.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиВремениСсылочныхДанных КАК ОтметкиВремениСсылочныхДанных
		|		ПО СамочувствиеСотрудника.Ссылка = ОтметкиВремениСсылочныхДанных.Ссылка
		|ГДЕ
		|	СотрудникиПользователей.Пользователь = &Пользователь
		|	И НЕ СамочувствиеСотрудника.ПометкаУдаления
		|	И СамочувствиеСотрудника.Дата > &ДатаНачалаВыгрузки";
	
Конецфункции

Функция ТекстЗапросаМероприятия()
	
	Возврат
		"ВЫБРАТЬ
		|	СправочникМероприятия.Ссылка КАК Ссылка,
		|	СправочникМероприятия.ДатаНачала КАК ДатаНачала,
		|	СправочникМероприятия.ДатаОкончания КАК ДатаОкончания,
		|	СправочникМероприятия.Наименование КАК Наименование,
		|	СправочникМероприятия.Предмет КАК Предмет,
		|	УчастникиМероприятия.СостояниеПриглашения КАК СостояниеПриглашения,
		|	КешИнформацииОбОбъектах.ЕстьФайлы КАК ЕстьФайлы,
		|	КешИнформацииОбОбъектах.СостояниеКонтроля КАК СостояниеКонтроля,
		|	СправочникМероприятия.Важность КАК Важность,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(СправочникМероприятия.Организатор) КАК ОрганизаторСтрокой,
		|	СправочникМероприятия.ПериодСтрокой КАК ПериодСтрокой,
		|	СправочникМероприятия.Подготовил КАК Подготовил,
		|	ВЫБОР
		|		КОГДА 1 В
		|				(ВЫБРАТЬ
		|					1
		|				ИЗ
		|					РегистрСведений.СостоянияМероприятий КАК СостоянияМероприятий
		|				ГДЕ
		|					СостоянияМероприятий.Мероприятие = СправочникМероприятия.Ссылка
		|					И СостоянияМероприятий.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияМероприятий.МероприятиеПроведено))
		|			ТОГДА 4
		|		КОГДА 1 В
		|				(ВЫБРАТЬ
		|					1
		|				ИЗ
		|					РегистрСведений.СостоянияМероприятий КАК СостоянияМероприятий
		|				ГДЕ
		|					СостоянияМероприятий.Мероприятие = СправочникМероприятия.Ссылка
		|					И СостоянияМероприятий.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияМероприятий.МероприятиеОтменено))
		|			ТОГДА 5
		|		КОГДА СправочникМероприятия.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
		|				И 1 В
		|					(ВЫБРАТЬ
		|						1
		|					ИЗ
		|						РегистрСведений.СостоянияМероприятий КАК СостоянияМероприятий
		|					ГДЕ
		|						СостоянияМероприятий.Мероприятие = СправочникМероприятия.Ссылка
		|						И СостоянияМероприятий.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияМероприятий.МероприятиеВСтадииПодготовки))
		|			ТОГДА 1
		|		КОГДА СправочникМероприятия.ДатаОкончания < &ТекущаяДата
		|				И 1 В
		|					(ВЫБРАТЬ
		|						1
		|					ИЗ
		|						РегистрСведений.СостоянияМероприятий КАК СостоянияМероприятий
		|					ГДЕ
		|						СостоянияМероприятий.Мероприятие = СправочникМероприятия.Ссылка
		|						И СостоянияМероприятий.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияМероприятий.МероприятиеВСтадииПодготовки))
		|			ТОГДА 3
		|		КОГДА 1 В
		|				(ВЫБРАТЬ
		|					1
		|				ИЗ
		|					РегистрСведений.СостоянияМероприятий КАК СостоянияМероприятий
		|				ГДЕ
		|					СостоянияМероприятий.Мероприятие = СправочникМероприятия.Ссылка
		|					И СостоянияМероприятий.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияМероприятий.МероприятиеВСтадииПодготовки))
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексКартинкиСостояния,
		|	ОтметкиВремениСсылочныхДанных.Отметка КАК ОтметкаВремени
		|ИЗ
		|	Справочник.Мероприятия КАК СправочникМероприятия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчастникиМероприятия КАК УчастникиМероприятия
		|		ПО СправочникМероприятия.Ссылка = УчастникиМероприятия.Мероприятие
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КешИнформацииОбОбъектах КАК КешИнформацииОбОбъектах
		|		ПО СправочникМероприятия.Ссылка = КешИнформацииОбОбъектах.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиВремениСсылочныхДанных КАК ОтметкиВремениСсылочныхДанных
		|		ПО СправочникМероприятия.Ссылка = ОтметкиВремениСсылочныхДанных.Ссылка
		|ГДЕ
		|	УчастникиМероприятия.Исполнитель В
		|			(ВЫБРАТЬ
		|				СотрудникиПользователей.Сотрудник КАК Пользователь
		|			ИЗ
		|				РегистрСведений.СотрудникиПользователей КАК СотрудникиПользователей
		|			ГДЕ
		|				СотрудникиПользователей.Пользователь = &Пользователь
		|		
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ
		|				&Пользователь)
		|	И СправочникМероприятия.ДатаОкончания >= &ДатаНачалаВыгрузки";
	
Конецфункции

Функция ТекстЗапросаУчетВремени() Экспорт
	
	Возврат
		"ВЫБРАТЬ
		|	ВидыРабот.Ссылка КАК Ссылка,
		|	ВидыРабот.ПометкаУдаления КАК ПометкаУдаления,
		|	ВидыРабот.Родитель КАК Родитель,
		|	ВидыРабот.ЭтоГруппа КАК ЭтоГруппа,
		|	ВидыРабот.Код КАК Код,
		|	ВидыРабот.Наименование КАК Наименование,
		|	ВидыРабот.ВидВремени КАК ВидВремени,
		|	ОтметкиВремениСсылочныхДанных.Отметка КАК ОтметкаВремени
		|ИЗ
		|	Справочник.ВидыРабот КАК ВидыРабот
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиВремениСсылочныхДанных КАК ОтметкиВремениСсылочныхДанных
		|		ПО ВидыРабот.Ссылка = ОтметкиВремениСсылочныхДанных.Ссылка
		|ГДЕ
		|	НЕ ВидыРабот.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕжедневныйОтчет.Ссылка КАК Ссылка,
		|	ЕжедневныйОтчет.ДлительностьРабот КАК ДлительностьРабот,
		|	ЕжедневныйОтчет.НачалоДня КАК НачалоДня,
		|	ЕжедневныйОтчет.НекорректнаяДлительность КАК НекорректнаяДлительность,
		|	ЕжедневныйОтчет.ОкончаниеДня КАК ОкончаниеДня,
		|	ЕжедневныйОтчет.Дата КАК Дата,
		|	ЕжедневныйОтчет.Ссылка КАК ID,
		|	ОтметкиВремениСсылочныхДанных.Отметка КАК ОтметкаВремени,
		|	ЕжедневныйОтчет.СпособУказанияВремени КАК СпособУказанияВремени,
		|	ЕжедневныйОтчет.ДлительностьРабочая КАК ДлительностьРабочая
		|ИЗ
		|	Документ.ЕжедневныйОтчет КАК ЕжедневныйОтчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиВремениСсылочныхДанных КАК ОтметкиВремениСсылочныхДанных
		|		ПО ЕжедневныйОтчет.Ссылка = ОтметкиВремениСсылочныхДанных.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СотрудникиПользователей КАК СотрудникиПользователей
		|		ПО ЕжедневныйОтчет.Сотрудник = СотрудникиПользователей.Сотрудник
		|ГДЕ
		|	(ЕжедневныйОтчет.Сотрудник = &Пользователь
		|			ИЛИ СотрудникиПользователей.Пользователь = &Пользователь)
		|	И ЕжедневныйОтчет.Дата >= &ДатаНачалаВыгрузки
		|	И НЕ ЕжедневныйОтчет.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕженедельныйОтчет.Ссылка КАК Ссылка,
		|	ЕженедельныйОтчет.ДлительностьРабот КАК ДлительностьРабот,
		|	ЕженедельныйОтчет.ДлительностьРабочая КАК ДлительностьРабочая,
		|	ЕженедельныйОтчет.ДниНедели.(
		|		ДеньНедели КАК ДеньНедели,
		|		Дата КАК Дата,
		|		ВидДня КАК ВидДня,
		|		НачалоДня КАК НачалоДня,
		|		ОкончаниеДня КАК ОкончаниеДня,
		|		ЕжедневныйОтчет КАК ЕжедневныйОтчет,
		|		ДлительностьРабот КАК ДлительностьРабот,
		|		ДлительностьРабочая КАК ДлительностьРабочая
		|	) КАК ДниНедели,
		|	ЕженедельныйОтчет.Достижения КАК Достижения,
		|	ЕженедельныйОтчет.Планы КАК Планы,
		|	ЕженедельныйОтчет.Неудачи КАК Неудачи,
		|	ЕженедельныйОтчет.Дата КАК Дата,
		|	ЕженедельныйОтчет.Ссылка КАК ID,
		|	ОтметкиВремениСсылочныхДанных.Отметка КАК ОтметкаВремени
		|ИЗ
		|	Документ.ЕженедельныйОтчет КАК ЕженедельныйОтчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиВремениСсылочныхДанных КАК ОтметкиВремениСсылочныхДанных
		|		ПО ЕженедельныйОтчет.Ссылка = ОтметкиВремениСсылочныхДанных.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СотрудникиПользователей КАК СотрудникиПользователей
		|		ПО ЕженедельныйОтчет.Сотрудник = СотрудникиПользователей.Сотрудник
		|ГДЕ
		|	(ЕженедельныйОтчет.Сотрудник = &Пользователь
		|			ИЛИ СотрудникиПользователей.Пользователь = &Пользователь)
		|	И ЕженедельныйОтчет.Дата >= &ДатаНачалаВыгрузки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФактическиеТрудозатраты.Начало КАК Начало,
		|	ФактическиеТрудозатраты.Окончание КАК Окончание,
		|	ФактическиеТрудозатраты.ДатаДобавления КАК ДатаДобавления,
		|	ФактическиеТрудозатраты.НомерДобавления КАК НомерДобавления,
		|	ФактическиеТрудозатраты.ВидРабот КАК ВидРабот,
		|	ФактическиеТрудозатраты.ЕжедневныйОтчет КАК ОтчетИсточник,
		|	ФактическиеТрудозатраты.ОписаниеРаботы КАК ОписаниеРаботы,
		|	ФактическиеТрудозатраты.Длительность КАК Длительность,
		|	ФактическиеТрудозатраты.Проект КАК Проект,
		|	МП_ИзмененныеТрудозатраты.ОтметкаВремени КАК ОтметкаВремени,
		|	МП_ИзмененныеТрудозатраты.Удалена КАК Удалена
		|ИЗ
		|	РегистрСведений.ФактическиеТрудозатраты КАК ФактическиеТрудозатраты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МП_ИзмененныеТрудозатраты КАК МП_ИзмененныеТрудозатраты
		|		ПО ФактическиеТрудозатраты.Сотрудник = МП_ИзмененныеТрудозатраты.Пользователь
		|			И (КОНЕЦПЕРИОДА(ФактическиеТрудозатраты.ДатаДобавления, ДЕНЬ) = МП_ИзмененныеТрудозатраты.День)
		|			И ФактическиеТрудозатраты.НомерДобавления = МП_ИзмененныеТрудозатраты.НомерДобавления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СотрудникиПользователей КАК СотрудникиПользователей
		|		ПО ФактическиеТрудозатраты.Сотрудник = СотрудникиПользователей.Сотрудник
		|ГДЕ
		|	(ФактическиеТрудозатраты.Сотрудник = &Пользователь
		|			ИЛИ СотрудникиПользователей.Пользователь = &Пользователь)
		|	И ФактическиеТрудозатраты.ДатаДобавления >= НАЧАЛОПЕРИОДА(&ДатаНачалаВыгрузки, ДЕНЬ)
		|	И НЕ ФактическиеТрудозатраты.Удалена
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МП_СинхронизацияПроектов.Проект КАК Ссылка,
		|	ЕСТЬNULL(МП_СинхронизацияПроектов.Удален, Проекты.ПометкаУдаления) КАК ПометкаУдаления,
		|	Проекты.Наименование КАК Наименование,
		|	Проекты.Код КАК Код,
		|	Проекты.Состояние КАК Состояние,
		|	Проекты.Руководитель КАК Руководитель
		|ИЗ
		|	РегистрСведений.МП_СинхронизацияПроектов КАК МП_СинхронизацияПроектов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
		|		ПО МП_СинхронизацияПроектов.Проект = Проекты.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ФактическиеТрудозатраты.Проект,
		|	NULL,
		|	Проекты.Наименование,
		|	Проекты.Код,
		|	Проекты.Состояние,
		|	Проекты.Руководитель
		|ИЗ
		|	РегистрСведений.ФактическиеТрудозатраты КАК ФактическиеТрудозатраты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
		|		ПО ФактическиеТрудозатраты.Проект = Проекты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СотрудникиПользователей КАК СотрудникиПользователей
		|		ПО ФактическиеТрудозатраты.Сотрудник = СотрудникиПользователей.Сотрудник
		|ГДЕ
		|	(ФактическиеТрудозатраты.Сотрудник = &Пользователь
		|			ИЛИ СотрудникиПользователей.Пользователь = &Пользователь)
		|	И ФактическиеТрудозатраты.ДатаДобавления >= НАЧАЛОПЕРИОДА(&ДатаНачалаВыгрузки, ДЕНЬ)
		|	И НЕ ФактическиеТрудозатраты.Удалена";
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ИнициализироватьЗапрос(ПараметрыСинхронизации, ДатаНачалаВыгрузки) 
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МобильноеПриложение", ПараметрыСинхронизации.МобильноеПриложение);
	
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСинхронизации.ТекущийПользователь);
	
	Запрос.УстановитьПараметр("СотрудникиПользователя",
		Сотрудники.ПользовательИЕгоСотрудники(ПараметрыСинхронизации.ТекущийПользователь));
	Запрос.УстановитьПараметр("ФизическоеЛицо", ПараметрыСеанса.ФизическоеЛицоПользователя);	
	
	Запрос.УстановитьПараметр("ФизЛицоПользователя",
		ПользователиДокументооборот.ФизЛицоПользователя(ПараметрыСинхронизации.ТекущийПользователь));
	
	Запрос.УстановитьПараметр("ДатаНачалаВыгрузки", ДатаНачалаВыгрузки);
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	Возврат Запрос;
	
КонецФункции
#КонецОбласти


