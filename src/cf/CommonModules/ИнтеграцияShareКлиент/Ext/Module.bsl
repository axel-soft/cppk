
#Область ПрограммныйИнтерфейс

// Открывает форму с ссылкой для скачивания публикуемого электронного документа.
// При открытии формы выполняется публикация электронного документа в сервис 1С:Share.
// Перед публикацией может быть выведена форма для выбора присоединенных файлов к публикуемому документу.
// Может вызываться из подключаемых команд.
// 
// Параметры:
//  СсылкаНаДокумент - ДокументСсылка, СправочникСсылка - ссылка на формируемый электронный документ для скачивания.
//  ПараметрыВыполненияКоманды - ПараметрыВыполненияКоманды, Структура - параметры команды:
//   * Источник  - ФормаКлиентскогоПриложения - форма владельца.
//   * Параметры - Структура - произвольные дополнительные параметры команды с клиента для передачи в переопределяемые методы.
//   Параметры передаются в метод ИнтеграцияShareПереопределяемый.ПриОпределенииВизуализацииПубликуемогоДокумента.
//
Процедура ПоделитьсяДокументом(Знач СсылкаНаДокумент, Знач ПараметрыВыполненияКоманды = Неопределено) Экспорт
	
	ОчиститьСообщения();
	Если СсылкаНаДокумент = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'",
			ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
	КонецЕсли;
	
	ПараметрыОбъектаУчета = ИнтеграцияShareВызовСервера.ПараметрыОбъектаУчетаКПубликации(СсылкаНаДокумент);
	
	Если ПараметрыОбъектаУчета.ЯвляетсяГруппой Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Данная функция недоступна для группы.'",
			ОбщегоНазначенияКлиент.КодОсновногоЯзыка()));
		Возврат;
	КонецЕсли;
	
	ПараметрыДокумента = ИнтеграцияShareКлиентСервер.НовыеПараметрыДокументаКПубликации();
	ПараметрыДокумента.ЭлектронныйДокумент = СсылкаНаДокумент;
	ПараметрыДокумента.ФайлыДокумента      = ПараметрыОбъектаУчета.ДанныеФайлов;
	
	ФормаВладельца = Неопределено;
	Если ТипЗнч(ПараметрыВыполненияКоманды) = Тип("ПараметрыВыполненияКоманды") Тогда
		Если ТипЗнч(ПараметрыВыполненияКоманды.Источник) = Тип("ФормаКлиентскогоПриложения") Тогда
			ФормаВладельца = ПараметрыВыполненияКоманды.Источник;
		КонецЕсли;
		ПараметрыДокумента.ДополнительныеПараметры = ПараметрыВыполненияКоманды.Параметры;
		
	ИначеЕсли ТипЗнч(ПараметрыВыполненияКоманды) = Тип("Структура") Тогда
		Если ПараметрыВыполненияКоманды.Свойство("Источник")
			И ТипЗнч(ПараметрыВыполненияКоманды.Источник) = Тип("ФормаКлиентскогоПриложения") Тогда
			ФормаВладельца = ПараметрыВыполненияКоманды.Источник;
		КонецЕсли;
		Если ПараметрыВыполненияКоманды.Свойство("Параметры") Тогда
			ПараметрыДокумента.ДополнительныеПараметры = ПараметрыВыполненияКоманды.Параметры;
		КонецЕсли;
	КонецЕсли;
	
	ОткрытьФормуВыбораФайловДокументаКПубликации(ПараметрыДокумента, ФормаВладельца);
	
КонецПроцедуры

// Открывает форму для загрузки документа по ссылке из сервиса 1С:Share.
//
Процедура ОткрытьФормуЗагрузитьДокументПоСсылке() Экспорт
	
	ОткрытьФорму(ИмяФормыЗагрузкиДокументаПоСсылке());
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// Выполняется поиск короткой ссылки электронного документа при глобальном поиске.
//
// Параметры:
//  СтрокаПоиска          - Строка - введенная строка в поле глобального поиска.
//  ПланГлобальногоПоиска - ПланГлобальногоПоиска - виды поиска.
//
Процедура ПриГлобальномПоиске(СтрокаПоиска, ПланГлобальногоПоиска) Экспорт
	
	Если ЭтоДоменСервисаКороткихСсылокShare(СтрокаПоиска) Тогда
		ПланГлобальногоПоиска.Очистить();
		ПланГлобальногоПоиска.Добавить("ЗаполнитьРезультатГлобальногоПоискаДокумента", "ИнтеграцияShareКлиент", Ложь, Истина);
	КонецЕсли;

КонецПроцедуры

// Выполняется при выборе результата глобального поиска по короткой ссылке электронного документа.
//
// Параметры:
//  ЭлементРезультата    - ЭлементРезультатаГлобальногоПоиска - выбранная строка результата поиска.
//  СтандартнаяОбработка - Булево - признак обработки по умолчанию.
//
Процедура ПриВыбореРезультатаГлобальногоПоиска(ЭлементРезультата, СтандартнаяОбработка) Экспорт
	
	Если ЭлементРезультата.Описание <> ИнтеграцияShareКлиентСервер.ИмяРезультатаГлобальногоПоискаЗагрузитьДокумент() Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	СтандартнаяОбработка = Ложь;
	ДанныеДокумента      = ЭлементРезультата.Значение;
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьЭлектронныйДокументПродолжение", ЭтотОбъект, ДанныеДокумента);
	
	ЗагрузитьЭлектронныйДокументПоИдентификаторуВФоне(ДанныеДокумента, Оповещение);
	
	ТекстСообщения = НСтр("ru = 'Загружается документ:'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
	ПоказатьОповещениеПользователя(ТекстСообщения, , ДанныеДокумента.ПредставлениеДокумента, БиблиотекаКартинок.ДиалогИнформация);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ПубликацияДокумента

Процедура ОпубликоватьЭлектронныйДокументЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыДокумента = РезультатОперацииВФоне(Результат);

	Если Не (ЗначениеЗаполнено(ПараметрыДокумента) И ТипЗнч(ПараметрыДокумента) = Тип("Структура")) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатПроверки = ПараметрыДокумента.РезультатПроверкиПакета;
	
	Если ЗначениеЗаполнено(ПараметрыДокумента.ДанныеОпубликованногоДокумента)
		И ЗначениеЗаполнено(ПараметрыДокумента.ДанныеОпубликованногоДокумента.СсылкаДляСкачиванияДокумента) Тогда
		ОткрытьФормуПоделитьсяДокументом(ПараметрыДокумента, ДополнительныеПараметры.ФормаВладельца);
	ИначеЕсли РезультатПроверки.ПревышенРазмерПакета Тогда
		Если ЗначениеЗаполнено(РезультатПроверки.ДанныеФайловКПубликации) Тогда
			ОткрытьФормуВыбораФайловДокументаКПубликации(ПараметрыДокумента, ДополнительныеПараметры.ФормаВладельца);
		Иначе
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Размер электронного документа ""%1"" (%2 МБ)
				|превышает допустимый размер (%3 МБ)'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка()),
				Строка(ПараметрыДокумента.ЭлектронныйДокумент),
				ИнтеграцияShareКлиентСервер.РазмерФайлаИзБайтовВМегабайты(РезультатПроверки.РазмерПакетаБезПрисоединенныхФайлов),
				ИнтеграцияShareКлиентСервер.РазмерФайлаИзБайтовВМегабайты(РезультатПроверки.МаксимальныйРазмерПакета));

			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьВыборФайловДокументаКПубликации(РезультатВыбораФайловКПубликации, ПараметрыОповещения) Экспорт
	
	Если ТипЗнч(РезультатВыбораФайловКПубликации) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыДокумента = ИнтеграцияShareКлиентСервер.НовыеПараметрыДокументаКПубликации();
	ПараметрыДокумента.ЭлектронныйДокумент     = ПараметрыОповещения.ЭлектронныйДокумент;
	ПараметрыДокумента.ФайлыДокумента          = ПараметрыОповещения.ФайлыДокумента;
	ПараметрыДокумента.РезультатПроверкиПакета = ИнтеграцияShareКлиентСервер.НовыйРезультатПроверкиПакета();
	ПараметрыДокумента.РезультатПроверкиПакета.ДанныеФайловКПубликации = РезультатВыбораФайловКПубликации;
	ПараметрыДокумента.ДополнительныеПараметры = ПараметрыОповещения.ДополнительныеПараметры;
	
	Оповещение = Новый ОписаниеОповещения("ОпубликоватьЭлектронныйДокументЗавершение", ЭтотОбъект, ПараметрыОповещения);
	
	ОпубликоватьЭлектронныйДокумент(ПараметрыДокумента, Оповещение, ПараметрыОповещения.ФормаВладельца);
	
КонецПроцедуры
	
#КонецОбласти

#Область ЗагрузкаДокумента

// Параметры:
//  КороткаяСсылкаНаДокумент - Строка - ссылка для скачивания документа.
//
// Возвращаемое значение:
//  Булево - признак короткой ссылки сформированной в сервисе 1С:Share.
Функция ЭтоДоменСервисаКороткихСсылокShare(КороткаяСсылкаНаДокумент) Экспорт
	
	ДанныеРесурса = ОбщегоНазначенияКлиентСервер.СтруктураURI(КороткаяСсылкаНаДокумент);
	
	Возврат ДанныеРесурса.ИмяСервера = ИнтеграцияShareКлиентСервер.АдресСервиса()
		Или ДанныеРесурса.ИмяСервера = АдресСервисаНовый();
	
КонецФункции

// Заполняет результат глобального поиска.
// 
// Параметры:
//  СсылкаДляСкачивания         - Строка - ссылка на скачивание электронного документа. 
//  РезультатыГлобальногоПоиска - РезультатГлобальногоПоиска - содержит результаты поиска.
//  ДополнительныеПараметры     - Структура - дополнительные параметры.
//
Процедура ЗаполнитьРезультатГлобальногоПоискаДокумента(СсылкаДляСкачивания, РезультатыГлобальногоПоиска, ДополнительныеПараметры) Экспорт

	ОчиститьСообщения();
	РезультатыГлобальногоПоиска.Очистить();

	РезультатПоиска = ИнтеграцияShareВызовСервера.РезультатГлобальногоПоискаДокументаПоПубличнойССылке(
		СсылкаДляСкачивания);

	Если РезультатПоиска = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Для Каждого СтрокаПоиска Из РезультатПоиска Цикл
		РезультатыГлобальногоПоиска.Добавить(СтрокаПоиска.Значение, СтрокаПоиска.Представление, СтрокаПоиска.Картинка,
			, СтрокаПоиска.ОписаниеДействия);
	КонецЦикла;

КонецПроцедуры

// Загружает электронный документ из сервиса 1С:Share в информационную базу по идентификатору.
//
// Параметры:
//  ОписаниеЭлектронногоДокумента - Структура из см. ИнтеграцияShare.НовоеКраткоеОписаниеЭлектронногоДокумента
//  ОповещениеПриЗавершении - ОписаниеОповещения, Неопределено - оповещение, которое необходимо вызвать после
//                             завершения метода.
//  ВладелецФормы           - ФормаКлиентскогоПриложения, Неопределено - владелец открываемой формы,
//                             которому будет отправлено оповещение о выборе.
//
Процедура ЗагрузитьЭлектронныйДокументПоИдентификаторуВФоне(Знач ОписаниеЭлектронногоДокумента,
	Знач ОповещениеПриЗавершении = Неопределено, Знач ВладелецФормы = Неопределено) Экспорт
	
	УникальныйИдентификаторФормы = Неопределено;
	Если ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения") Тогда
		УникальныйИдентификаторФормы = ВладелецФормы.УникальныйИдентификатор;
	КонецЕсли;

	ДлительнаяОперация = ИнтеграцияShareВызовСервера.ДанныеЭлектронногоДокументаПоИдентификаторуВФоне(
		ОписаниеЭлектронногоДокумента,
		УникальныйИдентификаторФормы);
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ВладелецФормы);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьСообщения    = Истина;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеПриЗавершении, ПараметрыОжидания);

КонецПроцедуры

// Загружает электронный документ в объект учета прикладной базы в фоне.
//
// Параметры:
//  ДанныеДокумента         - См. ИнтеграцияShare.НовоеОписаниеДанныхЭлектронногоДокумента
//  ОповещениеПриЗавершении - ОписаниеОповещения, Неопределено - оповещение, которое необходимо вызвать после
//                             завершения метода.
//  ВладелецФормы           - ФормаКлиентскогоПриложения, Неопределено - владелец открываемой формы, которому будет
//                             отправлено оповещение о выборе.
//  УникальныйИдентификатор - УникальныйИдентификатор, Неопределено - уникальный идентификатор.
//
Процедура ЗагрузитьЭлектронныйДокументВОбъектУчетаВФоне(Знач ДанныеДокумента, Знач ОповещениеПриЗавершении = Неопределено,
	Знач ВладелецФормы = Неопределено, Знач УникальныйИдентификатор = Неопределено) Экспорт
	
	ДлительнаяОперация = ИнтеграцияShareВызовСервера.ЗагрузитьЭлектронныйДокументВОбъектУчетаВФоне(
		ДанныеДокумента, УникальныйИдентификатор);
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ВладелецФормы);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьСообщения    = Истина;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеПриЗавершении, ПараметрыОжидания);

КонецПроцедуры

// Параметры:
// Результат - Неопределено - если задание было отменено или произошла ошибка.
//           - См. ДлительныеОперацииКлиент.НовыйРезультатДлительнойОперации
//
// Возвращаемое значение:
//  - Неопределено - если задание было отменено или произошла ошибка.
//  - См. ДлительныеОперацииКлиент.НовыйРезультатДлительнойОперации
Функция РезультатОперацииВФоне(Знач Результат) Экспорт
	
	Если Результат = Неопределено Или ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Результат.Свойство("Статус") И Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
		Возврат Неопределено;
	КонецЕсли;
	
	Если Результат.Свойство("АдресРезультата") И ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда
		Возврат ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Процедура ОткрытьФормуСопоставленияНоменклатурыПриЗагрузкиДокумента(Знач ДанныеДокумента, Знач Оповещение) Экспорт

	Настройки  = Новый Структура("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

	СопоставлениеНоменклатурыКонтрагентовКлиент.ОткрытьСопоставлениеНоменклатуры(
		ДанныеДокумента.НоменклатураСопоставления, Настройки, Оповещение);

КонецПроцедуры

// Создает электронный документ в информационной базе.
//
// Параметры:
//  ДанныеДокумента         - См. ИнтеграцияShare.НовыеДанныеЭлектронногоДокументаДляЗагрузки
//  ОповещениеПриЗавершении - ОписаниеОповещения, Неопределено - оповещение, которое необходимо вызвать после
//                             завершения метода.
//  ВладелецФормы           - ФормаКлиентскогоПриложения, Неопределено - владелец открываемой формы,
//                             которому будет отправлено оповещение о выборе.
//  УникальныйИдентификатор - УникальныйИдентификатор, Неопределено - уникальный идентификатор.
//
Процедура СоздатьВУчетеЭлектронныйДокументВФоне(Знач ДанныеДокумента, Знач ОповещениеПриЗавершении = Неопределено,
	Знач ВладелецФормы = Неопределено, Знач УникальныйИдентификатор = Неопределено) Экспорт
	
	ДлительнаяОперация = ИнтеграцияShareВызовСервера.СоздатьВУчетеЭлектронныйДокументВФоне(ДанныеДокумента,
		УникальныйИдентификатор);
		
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ВладелецФормы);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьСообщения    = Истина;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеПриЗавершении, ПараметрыОжидания);

КонецПроцедуры

// Переопределяет действия после загрузки документа по ссылке.
//
// Параметры:
//  ДанныеДокумента - См. ИнтеграцияShare.НовыеДанныеЭлектронногоДокументаДляЗагрузки
Процедура ПослеЗагрузкиДокументаПоСсылке(Знач ДанныеДокумента) Экспорт
	
	ДанныеЗагруженногоДокумента = ИнтеграцияShareКлиентСервер.НовыеДанныеЗагруженногоДокумента();
	ЗаполнитьЗначенияСвойств(ДанныеЗагруженногоДокумента, ДанныеДокумента);
	ДанныеЗагруженногоДокумента.ОбъектУчета = ДанныеДокумента.ДокументУчета;

	ИнтеграцияShareКлиентПереопределяемый.ПослеЗагрузкиДокументаПоСсылке(ДанныеЗагруженногоДокумента);

КонецПроцедуры

// Возвращаемое значение:
//  Строка - имя формы ЗагрузитьДокументПоСсылке обработки СервисShare.
Функция ИмяФормыЗагрузкиДокументаПоСсылке() Экспорт
	 
	Возврат "Обработка.СервисShare.Форма.ЗагрузитьДокументПоСсылке";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПубликацияДокумента

// Открывается форма для выбора файлов документов перед публикацией в сервис.
//
// Параметры:
//  ПараметрыДокумента - см. ИнтеграцияShareКлиентСервер.НовыеПараметрыДокументаКПубликации
//  ФормаВладельца - ФормаКлиентскогоПриложения
//
Процедура ОткрытьФормуВыбораФайловДокументаКПубликации(ПараметрыДокумента, ФормаВладельца)
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ЭлектронныйДокумент", ПараметрыДокумента.ЭлектронныйДокумент);
	ПараметрыОповещения.Вставить("ФормаВладельца", ФормаВладельца);
	ПараметрыОповещения.Вставить("ФайлыДокумента", ПараметрыДокумента.ФайлыДокумента);
	ПараметрыОповещения.Вставить("ДополнительныеПараметры", ПараметрыДокумента.ДополнительныеПараметры);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайловДокументаКПубликации", ЭтотОбъект,
		ПараметрыОповещения);
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияShareКлиентПереопределяемый.ПриОткрытииФормыВыбораФайловДокументаКПубликации(
		ОписаниеОповещения, ПараметрыДокумента.ЭлектронныйДокумент, ПараметрыДокумента.РезультатПроверкиПакета,
		СтандартнаяОбработка);
	
	Если СтандартнаяОбработка = Ложь Тогда
		Возврат;
	ИначеЕсли Не ЗначениеЗаполнено(ПараметрыДокумента.ФайлыДокумента) Тогда
		// Нет присоединенных файлов для выбора к публикации.
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Новый Массив);
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Обработка.СервисShare.Форма.ВыборФайловКПубликации", ПараметрыДокумента,,,,, ОписаниеОповещения);
	
КонецПроцедуры

// Открывает форму "Поделиться документом" для вывода ссылки на скачивание опубликованного электронного документа
// в сервисе 1С:Share. 
// 
// Параметры:
//  ПараметрыДокумента - см. ИнтеграцияShareКлиентСервер.НовыеПараметрыДокументаКПубликации
//  ФормаВладельца - ФормаКлиентскогоПриложения
//
Процедура ОткрытьФормуПоделитьсяДокументом(ПараметрыДокумента, ФормаВладельца)
	
	ОткрытьФорму("Обработка.СервисShare.Форма.ПоделитьсяДокументом",
		Новый Структура("ПараметрыДокумента", ПараметрыДокумента), ФормаВладельца);
	
КонецПроцедуры

// Параметры:
//  ПараметрыДокумента - Структура из См. ИнтеграцияShareКлиентСервер.НовыеПараметрыДокументаКПубликации()
//  ОповещениеПриЗавершении - ОписаниеОповещения, Неопределено - оповещение, которое необходимо вызвать после
//                             завершения метода.
//  ВладелецФормы           - ФормаКлиентскогоПриложения, Неопределено - владелец открываемой формы,
//                             которому будет отправлено оповещение о выборе.
//
Процедура ОпубликоватьЭлектронныйДокумент(Знач ПараметрыДокумента, Знач ОповещениеПриЗавершении = Неопределено,
	Знач ВладелецФормы = Неопределено)
	
	УникальныйИдентификаторФормы = Неопределено;
	Если ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения") Тогда
		УникальныйИдентификаторФормы = ВладелецФормы.УникальныйИдентификатор;
	КонецЕсли;

	ДлительнаяОперация = ИнтеграцияShareВызовСервера.ОпубликоватьЭлектронныйДокументВФоне(ПараметрыДокумента,
		УникальныйИдентификаторФормы);
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru = 'Формируется ссылка для скачивания:'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
	ПоказатьОповещениеПользователя(ТекстСообщения, , ПараметрыДокумента.ЭлектронныйДокумент,
		БиблиотекаКартинок.ДиалогИнформация);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ВладелецФормы);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ВыводитьСообщения    = Истина;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеПриЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаДокумента

Процедура ЗагрузитьЭлектронныйДокументПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	ДанныеДокумента = РезультатОперацииВФоне(Результат);

	Если ДанныеДокумента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияShareКлиентПереопределяемый.ПриЗагрузкеДокументаПоСсылке(ДанныеДокумента, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеДокумента.ДанныеЗагрузкиДокумента)
		И ЗначениеЗаполнено(ДанныеДокумента.ДанныеЗагрузкиДокумента.ОбъектУчета) Тогда
		ИнтеграцияShareДокументооборотКлиент.ПоказатьНайденныйЗагруженныйДокумент(ДанныеДокумента,
			ДанныеДокумента.ДанныеЗагрузкиДокумента.ОбъектУчета);
		Возврат;
	КонецЕсли;
	
	ОписаниеПриЗавершении = Новый ОписаниеОповещения("ЗагрузитьЭлектронныйДокументЗавершение", ЭтотОбъект,
		ДанныеДокумента);

	ЗагрузитьЭлектронныйДокументВОбъектУчетаВФоне(ДанныеДокумента, ОписаниеПриЗавершении);
	
КонецПроцедуры

Процедура ЗагрузитьЭлектронныйДокументПослеСопоставления(СопоставлениеНоменклатуры, ДополнительныеПараметры) Экспорт
	
	Если СопоставлениеНоменклатуры = Неопределено И ДополнительныеПараметры.ЕстьФормаВладелец = Истина Тогда
		// В случае наличия формы владельца требуется вернуть пустой результат, чтобы изменить интерфейсы на форме.
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Неопределено);
		Возврат;
	ИначеЕсли СопоставлениеНоменклатуры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, ДополнительныеПараметры.ДанныеДокумента);
	
КонецПроцедуры

Процедура ЗагрузитьЭлектронныйДокументЗавершение(Результат, Знач ДополнительныеПараметры) Экспорт
	
	ДанныеДокумента = РезультатОперацииВФоне(Результат);

	Если ДанныеДокумента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ЗагрузитьЭлектронныйДокументЗавершение", ЭтотОбъект);
	
	Если ДанныеДокумента.ТребуетсяСопоставлениеНоменклатуры Тогда
		
		ДанныеДокумента.ТребуетсяСопоставлениеНоменклатуры = Ложь;

		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ДанныеДокумента", ДанныеДокумента);
		ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
		ДополнительныеПараметры.Вставить("ЕстьФормаВладелец", Ложь);
		
		Оповещение = Новый ОписаниеОповещения("ЗагрузитьЭлектронныйДокументПослеСопоставления", ЭтотОбъект,
			ДополнительныеПараметры);

		ОткрытьФормуСопоставленияНоменклатурыПриЗагрузкиДокумента(ДанныеДокумента, Оповещение);
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеДокумента.ДокументУчета) Тогда
		ПоказатьЗначение(Неопределено, ДанныеДокумента.ДокументУчета);
		ПослеЗагрузкиДокументаПоСсылке(ДанныеДокумента);
		Возврат;
	КонецЕсли;
	
	СоздатьВУчетеЭлектронныйДокументВФоне(ДанныеДокумента, ОповещениеПриЗавершении);
	
КонецПроцедуры

Функция АдресСервисаНовый()

	Возврат "sh.1c.ru";
	
КонецФункции

#КонецОбласти

#КонецОбласти
