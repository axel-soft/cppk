////////////////////////////////////////////////////////////////////////////////
// Работа с реестрами (сервер).
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Определяет команды доступных реестров.
// 
// Возвращаемое значение:
//  Массив из Структура - Команд доступных реестров. См. Справочники.Реестры.КомандыРеестра.
//
Функция КомандыДоступныхРеестров() Экспорт
	
	КомандыДоступныхРеестров = РаботаСРабочимСтоломПовтИсп.КомандыДоступныхРеестров();
	
	НастроенныеДанныеРеестров = Новый Массив;
	Для Каждого КомандыРеестра Из КомандыДоступныхРеестров Цикл
		
		Если Не ЗначениеЗаполнено(КомандыРеестра.Открыть) Тогда
			Продолжить;
		КонецЕсли;
		
		НастроенныеДанныеРеестров.Добавить(КомандыРеестра.ДанныеРеестра);
		
	КонецЦикла;
	
	Если НастроенныеДанныеРеестров.Найти(Перечисления.ДанныеРеестров.ДокументыПредприятия) = Неопределено Тогда
		
		КомандыРеестра = Справочники.Реестры.КомандыРеестра();
		КомандыРеестра.Реестр = Справочники.Реестры.ПустаяСсылка();
		КомандыРеестра.Открыть = Справочники.КомандыВиджетов.ДокументыПредприятия;
		КомандыРеестра.Создать = Справочники.КомандыВиджетов.ДокументыПредприятияСоздать;
		КомандыРеестра.ДанныеРеестра = Перечисления.ДанныеРеестров.ДокументыПредприятия;
		
		КомандыДоступныхРеестров.Добавить(КомандыРеестра);
		
	КонецЕсли;
	
	Если НастроенныеДанныеРеестров.Найти(Перечисления.ДанныеРеестров.Мероприятия) = Неопределено
		И ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеМероприятиями") Тогда
		
		КомандыРеестра = Справочники.Реестры.КомандыРеестра();
		КомандыРеестра.Реестр = Справочники.Реестры.ПустаяСсылка();
		КомандыРеестра.Открыть = Справочники.КомандыВиджетов.Мероприятия;
		КомандыРеестра.Создать = Справочники.КомандыВиджетов.МероприятияСоздать;
		КомандыРеестра.ДанныеРеестра = Перечисления.ДанныеРеестров.Мероприятия;
		
		КомандыДоступныхРеестров.Добавить(КомандыРеестра);
		
	КонецЕсли;
	
	Возврат КомандыДоступныхРеестров;
	
КонецФункции

// Определяет доступные реестры.
// 
// Возвращаемое значение:
//  Массив из СправочникСсылка.Реестры - Доступные реестры.
//
Функция ДоступныеРеестры() Экспорт
	
	Возврат Справочники.Реестры.ДоступныеРеестры();
	
КонецФункции

// Обновляет реестр по источнику.
// 
// Параметры:
// 	Источник - СправочникСсылка.ВидыДокументов, СправочникСсылка.ВидыМероприятий.
// 	ВключитьВРеестры - Булево.
// 	
// Возвращаемое значение:
// 	СправочникСсылка.Реестры - Ссылка на новый реестр, если он был создан.
//
Функция ОбновитьРеестрПоИсточнику(Источник, ВключитьВРеестры) Экспорт
	
	НовыйРеестр = Справочники.Реестры.ПустаяСсылка();
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРеестры") Тогда
		Возврат НовыйРеестр;
	КонецЕсли;
	
	РеестрПоИсточнику = Справочники.Реестры.НайтиПоИсточнику(Источник);
	Если ВключитьВРеестры И ЗначениеЗаполнено(РеестрПоИсточнику) Тогда
		
		// Реестр уже есть, создание не требуется.
		
	ИначеЕсли ВключитьВРеестры И Не ЗначениеЗаполнено(РеестрПоИсточнику) Тогда
			
		// Создадим реестр по источнику.
		РеестрПоИсточникуОбъект = Справочники.Реестры.СоздатьЭлемент();
		РеестрПоИсточникуОбъект.Наименование = Строка(Источник);
		РеестрПоИсточникуОбъект.Источник = Источник;
		РеестрПоИсточникуОбъект.ДанныеРеестра = Перечисления.ДанныеРеестров.НайтиПоТипуИсточника(ТипЗнч(Источник));
		
		СтрокаВидаЭлементов = РеестрПоИсточникуОбъект.ВидыЭлементовРеестра.Добавить();
		СтрокаВидаЭлементов.ВидЭлементовРеестра = Источник;
		
		СтрокаДоступа = РеестрПоИсточникуОбъект.Доступ.Добавить();
		СтрокаДоступа.Контейнер = Справочники.РабочиеГруппы.ВсеПользователи;
		
		РеестрПоИсточникуОбъект.Записать();
		
		НовыйРеестр = РеестрПоИсточникуОбъект.Ссылка;
		
	ИначеЕсли Не ВключитьВРеестры И ЗначениеЗаполнено(РеестрПоИсточнику) Тогда
		
		// Удалим реестр по источнику.
		РеестрПоИсточникуОбъект = РеестрПоИсточнику.ПолучитьОбъект();
		РеестрПоИсточникуОбъект.УстановитьПометкуУдаления(Истина);
		
	ИначеЕсли Не ВключитьВРеестры И Не ЗначениеЗаполнено(РеестрПоИсточнику) Тогда
		
		// Реестра уже нет, удаление не требуется.
		
	КонецЕсли;
	
	Возврат НовыйРеестр;
	
КонецФункции

// Определяет данные реестры.
//
// Параметры:
//  Реестр - СправочникСсылка.Реестры.
// 
// Возвращаемое значение:
//  Структура - Данные реестры. См. Справочники.Реестры.НовоеОписаниеРеестра().
//
Функция ОписаниеРеестра(Реестр) Экспорт
	
	Возврат Справочники.Реестры.ОписанияРеестров(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Реестр))[Реестр];
	
КонецФункции

#КонецОбласти