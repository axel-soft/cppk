
#Область ПрограммныйИнтерфейс

//Выполняет вставку изображения визуализации ЭП вместо тэга в файле Open Office Writer
// Параметры:
//			МассивТегов - Массив из Строка
//	 		ШтампыПодписейЭП - Соответствие из КлючИЗначение:
//			 * Ключ - Строка - см. ВизуализацияЭПКлиентСервер.ТегВсеПодписи
//			                   см. ВизуализацияЭПКлиентСервер.ТегНашиПодписи
//			                   см. ВизуализацияЭПКлиентСервер.ТегПодписиКонтрагентов
//			 * Значение - Массив из см. РаботаСЭП.НовыйДанныеОтметки.
//			ДвоичныеДанныеФайла - ДвоичныеДанные - ДД файла Open Office Writer, в который производится вставка
//			ВысотаШтрихкода - Число
//			НастройкиШтампаЭП - Структура
// Возвращаемое значение:
//			ДвоичныеДанные - файла Open Office Writer, в который вставлен штамп ЭП
Функция ВставитьВизуализациюВФайлODTВместоТэга(
	Знач МассивТегов, 
	Знач ШтампыПодписейЭП, 
	Знач ДвоичныеДанныеФайла, 
	Знач ВысотаШтрихкодаШаблон,
	НастройкиШтампаЭП) Экспорт
	
	СтарыйПутьКФайлу = ПолучитьИмяВременногоФайла("odt");
	ДвоичныеДанныеФайла.Записать(СтарыйПутьКФайлу);
	НовыйПутьКФайлу = ПолучитьИмяВременногоФайла("odt");
	
	КопироватьФайл(СтарыйПутьКФайлу, СтрЗаменить(СтарыйПутьКФайлу, "odt", "zip"));
	ИмяФайлаСПутемZIP = СтрЗаменить(СтарыйПутьКФайлу, "odt", "zip");

	ВременнаяПапкаДляРазархивирования = ПолучитьИмяВременногоФайла("");
	ВременныйZIPФайл = ПолучитьИмяВременногоФайла("zip"); 

	Архив = Новый ЧтениеZipФайла();
	Архив.Открыть(ИмяФайлаСПутемZIP);
	Архив.ИзвлечьВсе(ВременнаяПапкаДляРазархивирования, РежимВосстановленияПутейФайловZIP.Восстанавливать);
	Архив.Закрыть();

	//Заполнение тела документа
	ЧтениеXML = Новый ЧтениеXML();
	ЧтениеXML.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/content.xml");
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.Отступ = Ложь;
	ЗаписьXML.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/content_update.xml");
	ЗаписьXML.ЗаписатьОбъявлениеXML();

	ВсеИдКартинок = Новый Массив;

	Для Каждого КлючИЗначение Из ШтампыПодписейЭП Цикл
		
		Тэг  = КлючИЗначение.Ключ;
		ДанныеОтметок = ШтампыПодписейЭП[Тэг];
		Для Каждого ДанныеОтметки Из ДанныеОтметок Цикл
			
			ДвоичныеДанныеКартинки = ДанныеОтметки.ДвоичныеДанныеОтметки;
			
			ИДКартинки = "";
			СохранитьИзображениеВоВнутреннейСтруктуреФайла(ДвоичныеДанныеКартинки, 
				ВременнаяПапкаДляРазархивирования, ИДКартинки);
				
			СтруктФайла = Новый Структура("ДвоичныеДанныеКартинки, ИДКартинки", 
				ДвоичныеДанныеКартинки, ИДКартинки); 	
			ВсеИдКартинок.Добавить(СтруктФайла);	
			
		КонецЦикла;		
	КонецЦикла;		
	
	ВсеСтрокиВставкиШтампа = Новый Соответствие; // ключ - тэг, значение -Строка

	Для Каждого КлючИЗначение Из ШтампыПодписейЭП Цикл
		
		Тэг  = КлючИЗначение.Ключ;
		СтрокаДляВставкиШтампаИтоговый = "";
		ДанныеОтметок = ШтампыПодписейЭП[Тэг];
		Для Каждого ДанныеОтметки Из ДанныеОтметок Цикл
			
			ДвоичныеДанныеКартинки = ДанныеОтметки.ДвоичныеДанныеОтметки;
			ТипЭП = ДанныеОтметки.ТипЭП;   
			ЭтоВизуализацияПЭП = (ТипЭП = "ПЭП");
			
			ТекКартинка = Новый Картинка(ДвоичныеДанныеКартинки);
			ТекВысота = ТекКартинка.Высота();
			
			ТекВысотаКартинки = Цел(ТекВысота * 22 / 310);  // перевод из старого значения ВысотаКартинки 22 (для высоты картинки в пикселах 310)
			
			ИДКартинки = "";
			Для Каждого СтруктФайла Из ВсеИдКартинок Цикл
				Если СтруктФайла.ДвоичныеДанныеКартинки = ДвоичныеДанныеКартинки Тогда
					ИДКартинки = СтруктФайла.ИДКартинки;
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
			
			ЗаготовкаДляВставкиШтрихкода = 
				"<draw:frame draw:name=""" + Тэг + """ text:anchor-type=""as-char"" svg:y=""-3.395cm"" svg:width=""_ШиринаШтрихкода_mm"" svg:height=""_ВысотаШтрихкода_mm"" draw:z-index=""0"">
				|	<draw:image xlink:href=""Pictures/" + ИДКартинки + ".png"" xlink:type=""simple"" xlink:show=""embed"" xlink:actuate=""onLoad""/>
				|</draw:frame>";
				
			СтрокаДляВставкиШтампа = ЗаготовкаДляВставкиШтрихкода;
			
			СтрокаДляВставкиШтампа = СтрЗаменить(СтрокаДляВставкиШтампа, 
				"_ВысотаШтрихкода_", ТекВысотаКартинки);
			
			ВысотаШтрихкода = ВысотаШтрихкодаШаблон;
			Если ЭтоВизуализацияПЭП Тогда
				ВысотаШтрихкода = Цел(ВысотаШтрихкода * 4 / 5);
			КонецЕсли; 	

			ШиринаШтрихкода = ВысотаШтрихкода * 4;
			СтрокаДляВставкиШтампа = СтрЗаменить(СтрокаДляВставкиШтампа, 
				"_ШиринаШтрихкода_", ШиринаШтрихкода);
				
			Если СтрокаДляВставкиШтампаИтоговый <> "" Тогда
				СтрокаДляВставкиШтампаИтоговый = СтрокаДляВставкиШтампаИтоговый + " ";
			КонецЕсли;	
			СтрокаДляВставкиШтампаИтоговый = СтрокаДляВставкиШтампаИтоговый + СтрокаДляВставкиШтампа;
			
		КонецЦикла;
		
		ВсеСтрокиВставкиШтампа[Тэг] = СтрокаДляВставкиШтампаИтоговый; 
			
	КонецЦикла;	 
	
	ВставленныйШтрихкод = Ложь;
	
	// Обязательно нужно ставить Ложь, иначе будут пропадать пробелы
	ЧтениеXML.ИгнорироватьПробелы = Ложь;
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ЗаписьXML.ЗаписатьНачалоЭлемента(ЧтениеXML.Имя);
			Если ВставленныйШтрихкод И ЧтениеXML.Имя = "draw:image" Тогда
			КонецЕсли;
			Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
				
				ЗаписьXML.ЗаписатьАтрибут(ЧтениеXML.Имя,ЧтениеXML.Значение);
				
			КонецЦикла;
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			
			Найден = Ложь;
			НайденныйТэг = "";
			Для Каждого Тэг Из МассивТегов Цикл
				Если Найти(ЧтениеXML.Значение, Тэг) > 0 Тогда
					Найден = Истина;
					НайденныйТэг = Тэг; 
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
			
			Если Найден Тогда
				
				Тэг = НайденныйТэг;
				СтрокаДляВставкиШтампаИтоговый = ВсеСтрокиВставкиШтампа[Тэг];
                ЗаписьXML.ЗаписатьБезОбработки(СтрокаДляВставкиШтампаИтоговый);
                
			Иначе
              	ЗаписьXML.ЗаписатьТекст(ЧтениеXML.Значение);
			КонецЕсли;
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЦикла;	
	
	ЧтениеXML.Закрыть();
	ЗаписьXML.Закрыть();
	ПереместитьФайл(ВременнаяПапкаДляРазархивирования + "/content_update.xml", ВременнаяПапкаДляРазархивирования + "/content.xml");
	УдалитьФайлы(ВременнаяПапкаДляРазархивирования + "/content_update.xml");
	
	Архиватор = Новый ЗаписьZipФайла(ВременныйZIPФайл, "", "");
	Архиватор.Добавить(ВременнаяПапкаДляРазархивирования + "\*.*", РежимСохраненияПутейZIP.СохранятьОтносительныеПути, РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);
	Архиватор.Записать();

	ПереместитьФайл(ВременныйZIPФайл, НовыйПутьКФайлу);
	УдалитьФайлы(ВременнаяПапкаДляРазархивирования);	
	УдалитьФайлы(СтарыйПутьКФайлу);
	УдалитьФайлы(ВременныйZIPФайл);
	
	ДвоичныеДанныеЗаполненногоФайла = Новый ДвоичныеДанные(НовыйПутьКФайлу);
	УдалитьФайлы(НовыйПутьКФайлу);
	Возврат ДвоичныеДанныеЗаполненногоФайла;	
	
КонецФункции

// Сохраняет картинку чтобы в файл ОпенОффис она попала
// 
// Параметры:
// 	ДвоичныеДанныеКартинки - ДвоичныеДанные
// 	ВременнаяПапкаДляРазархивирования - Строка - путь каталога
// 	ИДКартинки - Строка
Процедура СохранитьИзображениеВоВнутреннейСтруктуреФайла(ДвоичныеДанныеКартинки, 
	ВременнаяПапкаДляРазархивирования, ИДКартинки) Экспорт
	
	//сохранение картинки в внутренней структуре документа
	ИДКартинки = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");
	//непосредственное сохранение
	КартинкаШК = Новый Картинка(ДвоичныеДанныеКартинки);
	СоздатьКаталог(ВременнаяПапкаДляРазархивирования + "/Pictures");
	КартинкаШК.Записать(ВременнаяПапкаДляРазархивирования + "/Pictures/" + ИДКартинки + ".png");
	
	//изменение META-INF/manifest.xml
	ЧтениеXMLМанифест = Новый ЧтениеXML();
	ЧтениеXMLМанифест.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/META-INF/manifest.xml");
	ЗаписьXMLМанифест = Новый ЗаписьXML;
	ЗаписьXMLМанифест.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/META-INF/manifest_update.xml");
	ЗаписьXMLМанифест.ЗаписатьОбъявлениеXML();
	
	Пока ЧтениеXMLМанифест.Прочитать() Цикл
		Если ЧтениеXMLМанифест.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ЗаписьXMLМанифест.ЗаписатьНачалоЭлемента(ЧтениеXMLМанифест.Имя);
			Пока ЧтениеXMLМанифест.ПрочитатьАтрибут() Цикл
				ЗаписьXMLМанифест.ЗаписатьАтрибут(ЧтениеXMLМанифест.Имя,ЧтениеXMLМанифест.Значение); 
			КонецЦикла;
		ИначеЕсли ЧтениеXMLМанифест.ТипУзла = ТипУзлаXML.Текст Тогда
			ЗаписьXMLМанифест.ЗаписатьТекст(ЧтениеXMLМанифест.Значение);
		ИначеЕсли ЧтениеXMLМанифест.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если ЧтениеXMLМанифест.Имя = "manifest:manifest" Тогда
				НоваяСтрока = "<manifest:file-entry manifest:media-type=""image/png"" manifest:full-path=""Pictures/" + ИДКартинки + ".png""/>";
				ЗаписьXMLМанифест.ЗаписатьБезОбработки(НоваяСтрока);
			КонецЕсли;
			ЗаписьXMLМанифест.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЦикла;
	ЧтениеXMLМанифест.Закрыть();
	ЗаписьXMLМанифест.Закрыть();
	ПереместитьФайл(ВременнаяПапкаДляРазархивирования + "/META-INF/manifest_update.xml", ВременнаяПапкаДляРазархивирования + "/META-INF/manifest.xml");
	УдалитьФайлы(ВременнаяПапкаДляРазархивирования + "/META-INF/manifest_update.xml");
	
КонецПроцедуры

//Выполняет вставку изображения визуализации ЭП в указанное место в файле Open Office Writer 
//Параметры:
//			ДанныеОтметок - Массив из см. РаботаСЭП.НовыйДанныеОтметки.
//			ДвоичныеДанныеФайла - ДвоичныеДанные - двоичные данные файла Open Office Writer, в который производится вставка
//			НастройкиШтампаЭП - Структура
//			ВысотаКартинки -Число
//Возвращает:
//			ДвоичныеДанные файла Open Office Writer, в который вставлено изображение штрихкода
//Примечание: 
//	Если смещение по горизонтали или по вертикали указано как MAX или MIN, 
//	то изображение штрихкода будет приклеено к соответствующему углу ПЕЧАТНОЙ ОБЛАСТИ файла.
//	Если смещение задано в виде количества миллиметров, то смещение изображения штрихкода будет
//	установлено от КРАЯ СТРАНИЦЫ.
Функция ВставитьИзображениеЭПВФайлODTСУказаниемПоложения(
	Знач ДанныеОтметок, 
	Знач ДвоичныеДанныеФайла, 
	НастройкиШтампаЭП, 
	Знач ВысотаКартинкиШаблон) Экспорт 
	
	ПоложениеНаСтранице = НастройкиШтампаЭП.РасположениеШтампаЭП;
	СтраницаВставкиШтампаЭП = НастройкиШтампаЭП.СтраницаВставкиШтампаЭП;
	
	СтарыйПутьКФайлу = ПолучитьИмяВременногоФайла("odt");
	ДвоичныеДанныеФайла.Записать(СтарыйПутьКФайлу);
	НовыйПутьКФайлу = ПолучитьИмяВременногоФайла("odt");
	
	КопироватьФайл(СтарыйПутьКФайлу, СтрЗаменить(СтарыйПутьКФайлу, "odt", "zip"));
	ИмяФайлаСПутемZIP = СтрЗаменить(СтарыйПутьКФайлу, "odt", "zip");

	ВременнаяПапкаДляРазархивирования = ПолучитьИмяВременногоФайла("");
	ВременныйZIPФайл = ПолучитьИмяВременногоФайла("zip"); 

	Архив = Новый ЧтениеZipФайла();
	Архив.Открыть(ИмяФайлаСПутемZIP);
	Архив.ИзвлечьВсе(ВременнаяПапкаДляРазархивирования, РежимВосстановленияПутейФайловZIP.Восстанавливать);
	Архив.Закрыть();
	
	ЧислоСтраниц = 1;
	Если СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Последняя Тогда
		
		ЧтениеТекста = Новый ЧтениеТекста(
			ВременнаяПапкаДляРазархивирования + "/meta.xml",
			КодировкаТекста.UTF8);
		ТекстXml = ЧтениеТекста.Прочитать();
		ЧтениеТекста.Закрыть();

		СтрокаНачала ="page-count="""; 
		ПозицияТэга = СтрНайти(ТекстXml, СтрокаНачала);
		Если ПозицияТэга <> 0 Тогда
			
			СтрокаЧисла = "";
			
			ПозицияНачала = ПозицияТэга + СтрДлина(СтрокаНачала);
			СимволПослеСтроки = Сред(ТекстXml, ПозицияНачала, 1);
			Если СимволПослеСтроки = """" Тогда
				ПозицияКонца = СтрНайти(ТекстXml, """", НаправлениеПоиска.СНачала, 
					ПозицияНачала + 1);
				Если ПозицияКонца <> 0 Тогда	
					СтрокаЧисла = Сред(ПозицияНачала + 1, ПозицияКонца - ПозицияНачала - 1);
				КонецЕсли;	 
			Иначе
				
				// ищем первый символ - не цифра
				Для Поз = ПозицияНачала По ПозицияНачала + 10 Цикл
					Символ = Сред(ТекстXml, Поз, 1);
					Если Не ЭтоЦифра(Символ) Тогда
						СтрокаЧисла = Сред(ТекстXml, ПозицияНачала, Поз - ПозицияНачала);
						Прервать;
					КонецЕсли;	
				КонецЦикла;		
						
			КонецЕсли;	 
			
			Если ЗначениеЗаполнено(СтрокаЧисла)  Тогда  
				ЧислоСтраниц = ОбщегоНазначенияДокументооборотКлиентСервер.СтрокаВЧисло(СтрокаЧисла);
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЕсли;	
	
	НовыеСтилиИтоговый = "";
	СтрокаДляВставкиШтампаИтоговый = "";
	ЧислоШтампов = ДанныеОтметок.Количество();
	НомерПодписи = 0;
	
	Секция  = "";  // тело документа, или хедер или футер
	
	СмещениеПоYНакопленное = 0;
	РасстояниеYНакопленное = 0;
	
	ВертикальноеСмещениеОриг = "";
	ГоризонтальноеСмещениеОриг = "";
	
	ЧислоСтолбцов = 1;
	ТекСтолбец = 0;
	ЧислоШтамповВСтолбце = 10;
	СмещениеПоXНакопленное = 0;
	РасстояниеXНакопленное = 0;
	
	ЧислоСтолбцов = Цел(ЧислоШтампов / ЧислоШтамповВСтолбце);
	Остаток = ЧислоШтампов - ЧислоШтамповВСтолбце * ЧислоСтолбцов;
	Если Остаток <> 0 Тогда
		ЧислоСтолбцов = ЧислоСтолбцов + 1;
	КонецЕсли;	
	
	Для Каждого ДанныеОтметки Из ДанныеОтметок Цикл
		
		ДвоичныеДанныеКартинки = ДанныеОтметки.ДвоичныеДанныеОтметки;
		
		ТипЭП = ДанныеОтметки.ТипЭП;    
		ЭтоВизуализацияПЭП = (ТипЭП = "ПЭП");
		
		ТекКартинка = Новый Картинка(ДвоичныеДанныеКартинки);
		ТекВысота = ТекКартинка.Высота();  
		ТекШирина = ТекКартинка.Ширина();
		
		ТекВысотаКартинки = Цел(ТекВысота * 22 / 310);  // перевод из старого значения ВысотаКартинки 22 (для высоты картинки в пикселах 310)
		СмещениеПоYНаОднуПодпись = ТекВысота * 2.3 / 310;// перевод из старого значения 2.3 (для высоты картинки в пикселах 310)
		
		СмещениеПоXНаОднуПодпись = ТекШирина * 9.0 / 1200;  // перевод из старого значения 10 (для высоты картинки в пикселах 310)

		ИДКартинки = "";
		СохранитьИзображениеВоВнутреннейСтруктуреФайла(ДвоичныеДанныеКартинки, ВременнаяПапкаДляРазархивирования, ИДКартинки);

		ВертикальноеСмещение = "";
		ГоризонтальноеСмещение = "";
		
		Если ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ПравыйНижний") Тогда
			ВертикальноеСмещение = "bottom";
			ГоризонтальноеСмещение = "right";
		ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ПравыйВерхний") Тогда
			ВертикальноеСмещение = "top";
			ГоризонтальноеСмещение = "right";
		ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ЛевыйВерхний") Тогда
			ВертикальноеСмещение = "top";
			ГоризонтальноеСмещение = "left";
		ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ЛевыйНижний") Тогда
			ВертикальноеСмещение = "bottom";
			ГоризонтальноеСмещение = "left";
		КонецЕсли;
		
		ЗаготовкаДляСтилей = 
		"<style:style style:name=""fr" + ИДКартинки + """ style:family=""graphic"" style:parent-style-name=""Graphics"">
		|	<style:graphic-properties
		|		style:wrap=""run-through""
		|		style:vertical-pos=""_ВертикальноеСмещение_"" 
		|		style:vertical-rel=""_ОтносительноЧегоСчитатьВертикальноеСмещение_""        
		|		style:horizontal-pos=""_ГоризонтальноеСмещение_"" 
		|		style:horizontal-rel=""_ОтносительноЧегоСчитатьГоризонтальноеСмещение_"">
		|	</style:graphic-properties>
		|</style:style>";
		
		ЗаготовкаДляВставкиШтрихкода = 
		"<draw:frame draw:style-name=""fr" + ИДКартинки + """ draw:name=""Графический объект1"" text:anchor-type=""page"" _ВертикальноеСмещениеЧисло_ _ГоризонтальноеСмещениеЧисло_ text:anchor-page-number=""_НомерСтраницы_"" svg:width=""_ШиринаШтрихкода_mm"" svg:height=""_ВысотаШтрихкода_mm"" draw:z-index=""3"">
		|	<draw:image xlink:href=""Pictures/" + ИДКартинки + ".png"" xlink:type=""simple"" xlink:show=""embed"" xlink:actuate=""onLoad""/>
		|</draw:frame>";

		Если СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Каждая  Тогда
			
			ЗаготовкаДляВставкиШтрихкода = 
			"<draw:frame draw:style-name=""Mfr1"" draw:name=""Графический объект1"" 
			|text:anchor-type=""paragraph"" _ПозицияX_ _ПозицияY_ svg:width=""_ШиринаШтрихкода_mm"" 
			|svg:height=""_ВысотаШтрихкода_mm"" draw:z-index=""0"">
			|	<draw:image xlink:href=""Pictures/" + ИДКартинки + ".png"" xlink:type=""simple"" 
			|xlink:show=""embed"" xlink:actuate=""onLoad""/>
			|</draw:frame>";
			
		КонецЕсли;	
		
		Если ЧислоШтампов > 1
		 И СтраницаВставкиШтампаЭП <> Перечисления.СтраницаВставкиКартинки.Каждая  Тогда

			ЗаготовкаДляВставкиШтрихкода = 
			"<draw:frame draw:style-name=""fr" + ИДКартинки + """ draw:name=""Графический объект1"" text:anchor-type=""page"" _ВертикальноеСмещениеЧисло_ _ГоризонтальноеСмещениеЧисло_ text:anchor-page-number=""_НомерСтраницы_"" svg:x=""_ГорПозиция_cm"" svg:y=""_ВертПозиция_cm"" svg:width=""_ШиринаШтрихкода_mm"" svg:height=""_ВысотаШтрихкода_mm"" draw:z-index=""0"">
			|	<draw:image xlink:href=""Pictures/" + ИДКартинки + ".png"" xlink:type=""simple"" xlink:show=""embed"" xlink:actuate=""onLoad""/>
			|</draw:frame>";
				
		КонецЕсли;	 
		
		ЗаготовкаДляВставкиШтрихкода = СтрЗаменить(ЗаготовкаДляВставкиШтрихкода, 
			"_НомерСтраницы_",
			Строка(ЧислоСтраниц)
			);

		РасстояниеY = РасстояниеYНакопленное;
		РасстояниеYНакопленное = РасстояниеYНакопленное 
			+ ТекВысота * 2.923 / 310;// перевод из старого значения 2.923 (для высоты картинки в пикселах 310) 
		
		Если ВертикальноеСмещение = "bottom" Тогда
			// тут  "-"
			ЗаготовкаДляВставкиШтрихкода = СтрЗаменить(ЗаготовкаДляВставкиШтрихкода, 
				"_ПозицияY_",
				СтрШаблон("svg:y=""-%1cm""", 
					Формат(РасстояниеY, "ЧДЦ=3; ЧРД=.; ЧН=0; ЧГ=0;"  ))
				);
		Иначе
			ЗаготовкаДляВставкиШтрихкода = СтрЗаменить(ЗаготовкаДляВставкиШтрихкода, 
				"_ПозицияY_",
				СтрШаблон("svg:y=""%1cm""", 
					Формат(РасстояниеY, "ЧДЦ=3; ЧРД=.; ЧН=0; ЧГ=0;"  ))
				);
		КонецЕсли;		
			
		Если ГоризонтальноеСмещение = "right" Тогда	
			РасстояниеX = 10.199;
		Иначе	
			РасстояниеX = 0.1;
		КонецЕсли;	
		ЗаготовкаДляВставкиШтрихкода = СтрЗаменить(ЗаготовкаДляВставкиШтрихкода, 
			"_ПозицияX_",
			СтрШаблон("svg:x=""%1cm""", 
				Формат(РасстояниеX, "ЧДЦ=3; ЧРД=.; ЧН=0; ЧГ=0;"  ))
			);
				
		//запись стилей
		НовыеСтили = ЗаготовкаДляСтилей;
		ОтносительноЧегоСчитатьВертикальноеСмещение =  	"page-content";
		ОтносительноЧегоСчитатьГоризонтальноеСмещение =	"page-content";
		ВертикальноеСмещениеЧисло = "";
		ГоризонтальноеСмещениеЧисло = "";
		
		Секция  = "";  // тело документа, или хедер или футер
		Если СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Каждая Тогда
			Если ВертикальноеСмещение = "bottom" Тогда
				Секция = "footer";
			ИначеЕсли ВертикальноеСмещение = "top" Тогда
				Секция = "header";
			КонецЕсли;
		КонецЕсли;
		
		ВертикальноеСмещениеОриг = ВертикальноеСмещение;
		ГоризонтальноеСмещениеОриг = ГоризонтальноеСмещение;
		
		Если ЧислоШтампов > 1 Тогда
			Если ВертикальноеСмещение = "bottom" Или ВертикальноеСмещение = "top" Тогда
				ВертикальноеСмещение = "from-top";
				ОтносительноЧегоСчитатьВертикальноеСмещение = "page";
			КонецЕсли;	
			
			Если ГоризонтальноеСмещение = "left" Или ГоризонтальноеСмещение = "right" Тогда
				ГоризонтальноеСмещение = "from-left";
				ОтносительноЧегоСчитатьГоризонтальноеСмещение = "page";
			КонецЕсли;	
			
		КонецЕсли;			
		
		НовыеСтили = СтрЗаменить(НовыеСтили, "_ВертикальноеСмещение_", ВертикальноеСмещение);
		НовыеСтили = СтрЗаменить(НовыеСтили, "_ГоризонтальноеСмещение_", ГоризонтальноеСмещение);
		НовыеСтили = СтрЗаменить(НовыеСтили, "_ОтносительноЧегоСчитатьВертикальноеСмещение_", ОтносительноЧегоСчитатьВертикальноеСмещение);
		НовыеСтили = СтрЗаменить(НовыеСтили, "_ОтносительноЧегоСчитатьГоризонтальноеСмещение_", ОтносительноЧегоСчитатьГоризонтальноеСмещение);
		
		Если НовыеСтилиИтоговый <> "" Тогда
			НовыеСтилиИтоговый = НовыеСтилиИтоговый + " ";
		КонецЕсли;	
		НовыеСтилиИтоговый = НовыеСтилиИтоговый + НовыеСтили;
		
		СтрокаДляВставкиШтампа = ЗаготовкаДляВставкиШтрихкода;
		СтрокаДляВставкиШтампа = СтрЗаменить(СтрокаДляВставкиШтампа, "_ВертикальноеСмещениеЧисло_", ВертикальноеСмещениеЧисло);
		СтрокаДляВставкиШтампа = СтрЗаменить(СтрокаДляВставкиШтампа, "_ГоризонтальноеСмещениеЧисло_", ГоризонтальноеСмещениеЧисло);
		СтрокаДляВставкиШтампа = СтрЗаменить(СтрокаДляВставкиШтампа, "_ВысотаШтрихкода_", ТекВысотаКартинки);
		
		ВысотаКартинки = ВысотаКартинкиШаблон;
		Если ЭтоВизуализацияПЭП Тогда
			ВысотаКартинки = Цел(ВысотаКартинки * 4 / 5);
		КонецЕсли; 	
		
		ШиринаШтрихкода = ВысотаКартинки * 4;// //83;
		СтрокаДляВставкиШтампа = СтрЗаменить(СтрокаДляВставкиШтампа, 
			"_ШиринаШтрихкода_", ШиринаШтрихкода);

		Если ЧислоШтампов > 1 Тогда
			
			Если ВертикальноеСмещениеОриг = "bottom" Тогда
				
				ВертПозиция = 21.7 - СмещениеПоYНакопленное;
				СтрокаДляВставкиШтампа = СтрЗаменить(СтрокаДляВставкиШтампа, "_ВертПозиция_", 
					Формат(ВертПозиция, "ЧДЦ=3; ЧРД=.; ЧН=0; ЧГ=0;"  ));
					
			ИначеЕсли ВертикальноеСмещениеОриг = "top" Тогда
						
				ВертПозиция = СмещениеПоYНакопленное;
				СтрокаДляВставкиШтампа = СтрЗаменить(СтрокаДляВставкиШтампа, "_ВертПозиция_", 
					Формат(ВертПозиция, "ЧДЦ=3; ЧРД=.; ЧН=0; ЧГ=0;"  ));
						
			КонецЕсли;
				
			Если ГоризонтальноеСмещениеОриг = "left" Тогда
				ГорПозиция = 0.5 + СмещениеПоXНакопленное;
			Иначе
				ГорПозиция = 12.00 - СмещениеПоXНакопленное;
			КонецЕсли;
					
			СтрокаДляВставкиШтампа = СтрЗаменить(СтрокаДляВставкиШтампа, "_ГорПозиция_", 
				Формат(ГорПозиция, "ЧДЦ=3; ЧРД=.; ЧН=0; ЧГ=0;"  ));
				
			СмещениеПоYНакопленное = СмещениеПоYНакопленное + СмещениеПоYНаОднуПодпись;
				
		КонецЕсли;			
		

		Если СтрокаДляВставкиШтампаИтоговый <> "" Тогда
			СтрокаДляВставкиШтампаИтоговый = СтрокаДляВставкиШтампаИтоговый + " ";
		КонецЕсли;	
		СтрокаДляВставкиШтампаИтоговый = СтрокаДляВставкиШтампаИтоговый + СтрокаДляВставкиШтампа;
		
		НомерПодписи = НомерПодписи + 1;
		
		Если НомерПодписи > ЧислоШтамповВСтолбце Тогда
			НомерПодписи = 0;
			ТекСтолбец = ТекСтолбец + 1;
			СмещениеПоXНакопленное = СмещениеПоXНакопленное + СмещениеПоXНаОднуПодпись;
			
			СмещениеПоYНакопленное = 0;
			РасстояниеYНакопленное = 0;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	ВставкаВыполнена = Ложь;
	ВставитьСтиль = Ложь;
	ВставитьШтрихкод = Ложь;
	
	ИмяФайлаКонтента = ВременнаяПапкаДляРазархивирования + "/content.xml";
	ИмяФайлаКонтентаНовое = ВременнаяПапкаДляРазархивирования + "/content_update.xml";
	
	Если СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Каждая Тогда
		
		ИмяФайлаКонтента = ВременнаяПапкаДляРазархивирования + "/styles.xml";
		ИмяФайлаКонтентаНовое = ВременнаяПапкаДляРазархивирования + "/styles_update.xml";
		
	КонецЕсли;	
	
	Если СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Первая
		Или СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Последняя Тогда
			
		//Заполнение тела документа
		ЧтениеXML = Новый ЧтениеXML();
		ЧтениеXML.ОткрытьФайл(ИмяФайлаКонтента);
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.Отступ = Ложь;
		ЗаписьXML.ОткрытьФайл(ИмяФайлаКонтентаНовое);
		ЗаписьXML.ЗаписатьОбъявлениеXML();
		
		// Обязательно нужно ставить Ложь, иначе будут пропадать пробелы
		ЧтениеXML.ИгнорироватьПробелы = Ложь;
		
		Пока ЧтениеXML.Прочитать() Цикл
			Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				
				Если ЧтениеXML.Имя = "office:automatic-styles" И НЕ ВставкаВыполнена Тогда
					ВставитьСтиль = Истина;
				КонецЕсли;
				
				Если ЧтениеXML.Имя = "text:p" И НЕ ВставкаВыполнена Тогда
					ВставитьШтрихкод = Истина;
				КонецЕсли;
				
				ЗаписьXML.ЗаписатьНачалоЭлемента(ЧтениеXML.Имя);
				Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
					ЗаписьXML.ЗаписатьАтрибут(ЧтениеXML.Имя,ЧтениеXML.Значение); 
				КонецЦикла;
				
				Если ВставитьСтиль = Истина И НЕ ВставкаВыполнена Тогда
					
					ЗаписьXML.ЗаписатьБезОбработки(НовыеСтилиИтоговый);
					
				КонецЕсли;
				
				Если ВставитьШтрихкод = Истина И НЕ ВставкаВыполнена Тогда
	                ЗаписьXML.ЗаписатьБезОбработки(СтрокаДляВставкиШтампаИтоговый);
					ВставкаВыполнена = Истина;
				КонецЕсли;
	
			ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
				ЗаписьXML.ЗаписатьТекст(ЧтениеXML.Значение);
			ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
							
				ЗаписьXML.ЗаписатьКонецЭлемента();
			КонецЕсли;
		КонецЦикла;	
		
		ЧтениеXML.Закрыть();
		ЗаписьXML.Закрыть();
		
	ИначеЕсли СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Каждая Тогда
			
		ЧтениеТекста = Новый ЧтениеТекста(
			ИмяФайлаКонтента,
			КодировкаТекста.UTF8);
		ТекстXml = ЧтениеТекста.Прочитать();
		ЧтениеТекста.Закрыть();
		
		Если Секция = "header" Тогда
			ТекстXml = СтрЗаменить(ТекстXml, "<style:header-style/>",
			"<style:header-style><style:header-footer-properties fo:min-height=""0cm"" fo:margin-bottom=""2.499cm""/></style:header-style>");
		ИначеЕсли Секция = "footer" Тогда
			
			Если СтрНайти(ТекстXml, "<style:footer-style/>") <> 0 Тогда
				ТекстXml = СтрЗаменить(ТекстXml, "<style:footer-style/>",
				"<style:footer-style><style:header-footer-properties fo:min-height=""0cm"" fo:margin-bottom=""0.499cm""/></style:footer-style>");
			Иначе
				
				Если СтрНайти(ТекстXml, "</style:page-layout>") <> 0 Тогда
				ТекстXml = СтрЗаменить(ТекстXml, "</style:page-layout>",
				"<style:footer-style><style:header-footer-properties fo:min-height=""0cm"" fo:margin-bottom=""0.499cm""/></style:footer-style></style:page-layout>"
				);
				КонецЕсли;
				
			КонецЕсли;		
		КонецЕсли;	

		ТекстXml = СтрЗаменить(ТекстXml, "<office:automatic-styles>",
			"<office:automatic-styles>" + 
			"<style:style style:name=""Mfr1"" style:family=""graphic"" style:parent-style-name=""Graphics"">
			|<style:graphic-properties _ВертНастройки_ style:horizontal-pos=""center"" 
			|style:horizontal-rel=""paragraph"" style:mirror=""none"" 
			|fo:clip=""rect(0cm, 0cm, 0cm, 0cm)"" draw:luminance=""0%"" 
			|draw:contrast=""0%"" draw:red=""0%"" draw:green=""0%"" 
			|draw:blue=""0%"" draw:gamma=""100%"" draw:color-inversion=""false"" 
			|draw:image-opacity=""100%"" draw:color-mode=""standard"" style:flow-with-text=""false"" />
			|</style:style>");

		Если ЧислоШтампов <= 1 Тогда
			ТекстXml = СтрЗаменить(ТекстXml, 
				"_ВертНастройки_",
				"");
		Иначе
				ТекстXml = СтрЗаменить(ТекстXml, 
					"_ВертНастройки_",
					"style:vertical-pos=""from-top"" style:vertical-rel=""paragraph""");
		КонецЕсли;		
			
		Если ЧислоШтампов <= 1 Тогда
				
			Если ГоризонтальноеСмещениеОриг = "left" Тогда
				ТекстXml = СтрЗаменить(ТекстXml, 
					"style:horizontal-pos=""center""",
					"style:horizontal-pos=""left""");
			ИначеЕсли ГоризонтальноеСмещениеОриг = "right" Тогда
					ТекстXml = СтрЗаменить(ТекстXml, 
						"style:horizontal-pos=""center""",
						"style:horizontal-pos=""right""");
			КонецЕсли;
					
		Иначе			

			Если ГоризонтальноеСмещениеОриг = "left" Тогда
				ТекстXml = СтрЗаменить(ТекстXml, 
					"style:horizontal-pos=""center""",
					"style:horizontal-pos=""from-left""");
			ИначеЕсли ГоризонтальноеСмещениеОриг = "right" Тогда
					ТекстXml = СтрЗаменить(ТекстXml, 
						"style:horizontal-pos=""center""",
						"style:horizontal-pos=""from-left""");
			КонецЕсли;
			
		КонецЕсли;		
			
			
			
		Если Секция = "header" Тогда	
			ВсяСтрокаЗамены = "<style:header><text:p text:style-name=""Header"">"
			+ СтрокаДляВставкиШтампаИтоговый
			+ "</text:p></style:header>";
		Иначе
			ВсяСтрокаЗамены = "<style:footer><text:p text:style-name=""Footer"">"
			+ СтрокаДляВставкиШтампаИтоговый
			+ "</text:p></style:footer>";
		КонецЕсли;	
			
		
		ПозицияТэга = СтрНайти(ТекстXml, "<style:master-page");
		Если ПозицияТэга <> 0 Тогда
			
			ПозицияЗавершениеСкобки = СтрНайти(ТекстXml, ">", 
				НаправлениеПоиска.СНачала, ПозицияТэга + 1);
				
			ПозицияНачалаЗамены = ПозицияЗавершениеСкобки + 1;
			ПозицияЧтоБеремПосле = ПозицияЗавершениеСкобки + 1;
				
			СимволПередСкобкой = Сред(ТекстXml, ПозицияЗавершениеСкобки - 1, 1);
			Если СимволПередСкобкой = "/" Тогда
				
				ПозицияНачалаЗамены = ПозицияЗавершениеСкобки - 1;
				ВсяСтрокаЗамены = ">" + ВсяСтрокаЗамены;
				ВсяСтрокаЗамены = ВсяСтрокаЗамены + "</style:master-page>";
				
			КонецЕсли;		
			
			ТекстXml = Лев(ТекстXml, ПозицияНачалаЗамены - 1)
			 + ВсяСтрокаЗамены
			  + Сред(ТекстXml, ПозицияЧтоБеремПосле);
			  
		КонецЕсли;
		
		ЗаписьТекста = Новый ЗаписьТекста(
			ИмяФайлаКонтентаНовое,
			КодировкаТекста.UTF8);
		ЗаписьТекста.Записать(ТекстXml);
		ЗаписьТекста.Закрыть();
		
		
	КонецЕсли;	
	
	ПереместитьФайл(ИмяФайлаКонтентаНовое, ИмяФайлаКонтента);
	УдалитьФайлы(ИмяФайлаКонтентаНовое);
	
	Архиватор = Новый ЗаписьZipФайла(ВременныйZIPФайл, "", "");
	Архиватор.Добавить(ВременнаяПапкаДляРазархивирования + "\*.*", РежимСохраненияПутейZIP.СохранятьОтносительныеПути, РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);
	Архиватор.Записать();

	ПереместитьФайл(ВременныйZIPФайл, НовыйПутьКФайлу);
	УдалитьФайлы(ВременнаяПапкаДляРазархивирования);	
	УдалитьФайлы(СтарыйПутьКФайлу);
	УдалитьФайлы(ВременныйZIPФайл);
	
	ДвоичныеДанныеЗаполненногоФайла = Новый ДвоичныеДанные(НовыйПутьКФайлу);
	УдалитьФайлы(НовыйПутьКФайлу);
	Возврат ДвоичныеДанныеЗаполненногоФайла;	
			
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭтоЦифра(Символ)

	Возврат СтрНайти("0123456789", Символ) > 0;

КонецФункции

#КонецОбласти
