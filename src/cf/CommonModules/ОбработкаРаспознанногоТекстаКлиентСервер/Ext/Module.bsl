///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ТекстИзРезультатаРаспознавания(РезультатРаспознавания) Экспорт
	
	Фраза = СокрЛП(РезультатРаспознавания.ДанныеФраз[0].Фраза);
	
	///////////////////////////////
	// Привидение результатов работы сервиса и локальной модели к похожему варианту
	
	ЭтоРезультатЛокальнойМодели = (СтрНайти(Фраза, ".") > 0);
	Если ЭтоРезультатЛокальнойМодели Тогда
		Фраза = СтрЗаменить(НРег(Фраза), ".", "");
	КонецЕсли;
	
	ТипПредТокена = "Неопределено";
	ТипТокена = "Неопределено";
	// Знак
	// Слово
	// Число
	// Модификатор
	// Неопределено
	ПробелПослеСлова = Ложь;
	ПробелПослеЧисла = Ложь;
	СБольшойБуквы = Ложь;
	БольшимиБуквами = Ложь;
	
	ВозможныеКоманды = ОбработкаРаспознанногоТекстаКлиентСерверПовтИсп.Команды();
	ВозможныеТокены = ОбработкаРаспознанногоТекстаКлиентСерверПовтИсп.ЗаменяемыеЗнаки();
	
	Позиция = 0;
	Токены = Новый Массив;
	
	Пока Позиция < СтрДлина(Фраза) Цикл
		
		ТокенКоманды = ПоискТокена(ВозможныеКоманды, Фраза, Позиция + 1);
		Если ТокенКоманды.Найдено Тогда
			
			Если ТокенКоманды.Токен = "СБольшойБуквы" Тогда 
				СБольшойБуквы = Истина;
			КонецЕсли;
			
			Если ТокенКоманды.Токен = "БольшимиБуквами" Тогда 
				БольшимиБуквами = Истина;
			КонецЕсли;
			
			Позиция = Позиция + СтрДлина(ТокенКоманды.Паттерн) + 1;
			
			Продолжить;
		КонецЕсли;
		
		ТокенЗнака = ПоискТокена(ВозможныеТокены, Фраза, Позиция + 1);
		Если ТокенЗнака.Найдено Тогда
			Если Токены.Количество() > 0 И Не ПустаяСтрока(Токены.Получить(Токены.ВГраница())) Тогда
				Если ТокенЗнака.ПробелДоСлова И ТипПредТокена = "Слово"
				 Или ТокенЗнака.ПробелДоЧисла И ТипПредТокена = "Число" Тогда
					Токены.Добавить(" ");
				КонецЕсли;
			КонецЕсли;
			
			Токены.Добавить(ТокенЗнака.Токен);
			
			ПробелПослеСлова = ТокенЗнака.ПробелПослеСлова;
			ПробелПослеЧисла = ТокенЗнака.ПробелПослеЧисла;
			
			Позиция = Позиция + СтрДлина(ТокенЗнака.Паттерн) + 1;
			
			Если ТокенЗнака.Токен = "."
			 Или ТокенЗнака.Токен = "!"
			 Или ТокенЗнака.Токен = "?"
			 Или ТокенЗнака.Токен = Символы.ПС Тогда
				СБольшойБуквы = Истина;
			КонецЕсли;
			
			ТипТокена = "Знак";
		Иначе
			ПозицияСледующегоПробела = СтрНайти(Фраза, " ", , Позиция + 1);
			Если ПозицияСледующегоПробела = 0 Тогда
				Токен = Сред(Фраза, Позиция + 1);
				Позиция = СтрДлина(Фраза);
			Иначе
				Токен = Сред(Фраза, Позиция + 1, ПозицияСледующегоПробела - Позиция - 1);
				Позиция = ПозицияСледующегоПробела;
			КонецЕсли;
			
			Токены.Добавить(Токен);
			
			Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Токен) Тогда
				ТипТокена = "Число";
			Иначе
				ТипТокена = "Слово";
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТипПредТокена = "Знак" И ПробелПослеСлова И ТипТокена = "Слово"
		 Или ТипПредТокена = "Знак" И ПробелПослеЧисла И ТипТокена = "Число"
		 Или ТипПредТокена = "Слово" И ТипТокена = "Слово"
		 Или ТипПредТокена = "Слово" И ТипТокена = "Число"
		 Или ТипПредТокена = "Число" И ТипТокена = "Слово" Тогда
			
			Токены.Вставить(Токены.ВГраница(), " ");
		КонецЕсли;
		
		Если ТипТокена = "Слово" И СБольшойБуквы Тогда
			Токен = Токены.Получить(Токены.ВГраница());
			Токены.Установить(Токены.ВГраница(), ТРег(Токен));
			СБольшойБуквы = Ложь;
		КонецЕсли;
		
		Если ТипТокена = "Слово" И БольшимиБуквами Тогда
			Токен = Токены.Получить(Токены.ВГраница());
			Токены.Установить(Токены.ВГраница(), ВРег(Токен));
		КонецЕсли;
		
		ТипПредТокена = ТипТокена;
		
	КонецЦикла;
	
	Если Токены.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Результат = СокрЛП(СтрСоединить(Токены));
	
	Если Токены.Получить(0) = Символы.ПС Тогда
		Результат = Символы.ПС + Результат;
	КонецЕсли;
	
	Если Токены.Количество() > 1 И Токены.Получить(Токены.ВГраница()) = Символы.ПС Тогда
		Результат = Результат + Символы.ПС;
	КонецЕсли;
	
	// Жесткие устоявшиеся замены
	Результат = СтрЗаменить(Результат, ":""", ": """);
	
	Возврат Результат;
	
КонецФункции

Функция ТРегВнутр(Слово) Экспорт
	
	// ТРег в веб-клиенте метод преобразует только символы латинского алфавита.
	// Потому ТРег платформы не подходит
	
	Соответствие = ОбработкаРаспознанногоТекстаКлиентСерверПовтИсп.СоответствиеДляТрег();
	
	Результат = Соответствие.Получить(Лев(Слово, 1));
	Если Результат = Неопределено Тогда
		Возврат Слово;
	КонецЕсли;
	
	Возврат Результат + Сред(Слово, 2);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПоискТокена(ВозможныеТокены, Знач Фраза, Знач Позиция = 0)
	
	Результат = Новый Структура;
	Результат.Вставить("Найдено", Ложь);
	Результат.Вставить("Паттерн", "");
	Результат.Вставить("Токен", "");
	Результат.Вставить("ПробелДоСлова", Ложь);
	Результат.Вставить("ПробелПослеСлова", Ложь);
	Результат.Вставить("ПробелДоЧисла", Ложь);
	Результат.Вставить("ПробелПослеЧисла", Ложь);
	
	Для Каждого Паттерн Из ВозможныеТокены Цикл
		
		Если ЭтоТокен(Паттерн.Паттерн, Фраза, Позиция) Тогда
			Результат.Найдено = Истина;
			Результат.Паттерн = Паттерн.Паттерн;
			Результат.Токен = Паттерн.Токен;
			Результат.ПробелДоСлова = Паттерн.ПробелДоСлова;
			Результат.ПробелПослеСлова = Паттерн.ПробелПослеСлова;
			Результат.ПробелДоЧисла = Паттерн.ПробелДоЧисла;
			Результат.ПробелПослеЧисла = Паттерн.ПробелПослеЧисла;
			Возврат Результат;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ЭтоТокен(Паттерн, Знач Фраза, Знач Позиция = 0)
	
	Фраза = НРег(Сред(Фраза, Позиция));
	Возврат СтрНачинаетсяС(Фраза, Паттерн + " ")
		Или СтрНачинаетсяС(Фраза, Паттерн + Символы.ПС)
		Или СтрНачинаетсяС(Фраза, Паттерн) И СтрДлина(Фраза) = СтрДлина(Паттерн);
	
КонецФункции

#КонецОбласти