////////////////////////////////////////////////////////////////////////////////
// Подсистема "Мультипредметность"
// Модуль МультипредметностьПереопределяемый: сервер, внешнее соединение
//
// Содержит переопределяемые процедуры и функции, обрабатываемые на сервере.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает пустую ссылку на процесс в зависимости от переданного параметра 
// Параметры:
//  ШаблонСсылка - ссылка на шаблон процесса
//
Функция ПолучитьСсылкуНаПроцессПоШаблону(Шаблон) Экспорт
	
	ПроцессСсылка = Неопределено;
	
	Если ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Шаблон)) Тогда
		Ссылка = Шаблон;
	Иначе
		Ссылка = Шаблон.Ссылка;
	КонецЕсли;
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.ШаблоныИсполнения") Тогда
		ПроцессСсылка = БизнесПроцессы.Исполнение.ПустаяСсылка();
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ШаблоныКомплексныхБизнесПроцессов") Тогда
		ПроцессСсылка = БизнесПроцессы.КомплексныйПроцесс.ПустаяСсылка();
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ШаблоныОзнакомления") Тогда
		ПроцессСсылка = БизнесПроцессы.Ознакомление.ПустаяСсылка();
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ШаблоныПриглашения") Тогда
		ПроцессСсылка = БизнесПроцессы.Приглашение.ПустаяСсылка();
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ШаблоныРассмотрения") Тогда
		ПроцессСсылка = БизнесПроцессы.Рассмотрение.ПустаяСсылка();
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ШаблоныРегистрации") Тогда
		ПроцессСсылка = БизнесПроцессы.Регистрация.ПустаяСсылка();
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ШаблоныСогласования") Тогда
		ПроцессСсылка = БизнесПроцессы.Согласование.ПустаяСсылка();
	
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ШаблоныПодписания") Тогда
		ПроцессСсылка = БизнесПроцессы.Подписание.ПустаяСсылка();
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ШаблоныУтверждения") Тогда
		ПроцессСсылка = БизнесПроцессы.Утверждение.ПустаяСсылка();
		
	КонецЕсли;
		
	Возврат ПроцессСсылка;

	
КонецФункции

// Возвращает основной проект по предметам заполнения
//
Функция ПолучитьОсновнойПроектПоПредметам(Предметы) Экспорт
	
	Если ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Предметы)) Тогда
		Предмет = Предметы;
		Если ДелопроизводствоКлиентСервер.ЭтоСсылкаНаДокумент(Предмет)
		 Или ДелопроизводствоКлиентСервер.ЭтоФайл(Предмет)
		 Или ДелопроизводствоКлиентСервер.ЭтоМероприятие(Предмет) Тогда 
			Возврат Предмет.Проект;
		КонецЕсли;
	Иначе
		
		ОсновныеПредметы = Новый Массив;
		Для Каждого СтрокаПредмета Из Предметы Цикл
			Если СтрокаПредмета.РольПредмета = Перечисления.РолиПредметов.Основной Тогда
				ОсновныеПредметы.Добавить(СтрокаПредмета);
			КонецЕсли;
		КонецЦикла;
		
		Если ОсновныеПредметы.Количество() > 0 Тогда
			Предмет = ОсновныеПредметы[0].Предмет;
			Если ДелопроизводствоКлиентСервер.ЭтоСсылкаНаДокумент(Предмет)
			 Или ДелопроизводствоКлиентСервер.ЭтоФайл(Предмет)
			 Или ДелопроизводствоКлиентСервер.ЭтоМероприятие(Предмет) Тогда 
				Возврат Предмет.Проект;
			КонецЕсли;
		Иначе
			Для Каждого СтрокаПредмета Из Предметы Цикл
				Предмет = СтрокаПредмета.Предмет;
				Если ЗначениеЗаполнено(Предмет) 
				 И (ДелопроизводствоКлиентСервер.ЭтоСсылкаНаДокумент(Предмет)
				 Или ДелопроизводствоКлиентСервер.ЭтоФайл(Предмет)
				 Или ДелопроизводствоКлиентСервер.ЭтоМероприятие(Предмет)) Тогда 
					Возврат Предмет.Проект;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Справочники.Проекты.ПустаяСсылка();
	
КонецФункции

// Возвращает массив типов документов входящих и исходящих писем
//
Функция ПолучитьТипыПисем() Экспорт
	
	ТипыПисем = Новый Массив;
	ТипыПисем.Добавить(Тип("ДокументСсылка.ВходящееПисьмо"));
	ТипыПисем.Добавить(Тип("ДокументСсылка.ИсходящееПисьмо"));
	
	Возврат ТипыПисем;
	
КонецФункции

#КонецОбласти

#Область ПрограммныйИнтерфейс_ПроверкаПравНаПредметы

// Вызывается из Мультипредметность.ПредметыДляПроверкиПрав при определении
// предметов для проверка прав.
//
// Параметры:
//  Предметы - Массив - Предметы для проверки прав.
//  СсылкаНаПроцесс - БизнесПроцессСсылка - процесс, файлы которого исключаются из проверки.
//  Результат - Структура - в этот параметр, в качестве результата следует поместить 2 массива предметов.
//   * ДляПроверкиПравДоступаУчастников - Массив
//   * ДляПроверкиНарушенияПолитикиДоступа - Массив - предметы, по которым возможно автоматическое
//                                                    расширение рабочих групп.
//  СтандартнаяОбработка - Булево - в случае значения Истина параметры результат будет определен
//                                  способом по умолчанию.
//
Процедура ПриОпределенииПредметовДляПроверкиПрав(
	Предметы, СсылкаНаПроцесс, Результат, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Результат = Новый Структура;
	Результат.Вставить("ДляПроверкиПравДоступаУчастников", Новый Массив);
	Результат.Вставить("ДляПроверкиНарушенияПолитикиДоступа", Новый Массив);
	
	ДляПроверкиПравДоступаУчастников = Новый Массив;
	ДляПроверкиНарушенияПолитикиДоступа = Новый Массив;
	
	Для Каждого Предмет Из Предметы Цикл
		
		Если Не ЗначениеЗаполнено(Предмет) Тогда
			Продолжить;
		КонецЕсли;
		
		ТипПредмета = ТипЗнч(Предмет);
		
		Если ТипПредмета = Тип("СправочникСсылка.Файлы") 
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Предмет, "ВладелецФайла") = СсылкаНаПроцесс Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если ТипПредмета = Тип("СправочникСсылка.СообщенияОбсуждений")
			Или ТипПредмета = Тип("СправочникСсылка.ТемыОбсуждений")
			Или ТипПредмета = Тип("СправочникСсылка.УведомленияПрограммы") Тогда
			
			Продолжить;
		КонецЕсли;
		
		ОбъектДляРасширенияРГ = РаботаСРабочимиГруппами.ОбъектДляАвтоматическогоРасширенияРабочейГруппы(Предмет);
		Если РаботаСРабочимиГруппами.ПоОбъектуВедетсяАвтоматическоеЗаполнениеРабочейГруппы(ОбъектДляРасширенияРГ) Тогда
			ДляПроверкиНарушенияПолитикиДоступа.Добавить(Предмет);
		Иначе
			ДляПроверкиПравДоступаУчастников.Добавить(Предмет);
		КонецЕсли;
		
	КонецЦикла;
	
	Результат.ДляПроверкиПравДоступаУчастников = ДляПроверкиПравДоступаУчастников;
	Результат.ДляПроверкиНарушенияПолитикиДоступа = ДляПроверкиНарушенияПолитикиДоступа;
	
КонецПроцедуры

#КонецОбласти