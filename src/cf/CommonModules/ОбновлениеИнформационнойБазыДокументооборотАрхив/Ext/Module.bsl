////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы конфигурации Документооборот - Архив
//  
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура ПерейтиНаВерсию_3_0_5_1(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	ДокументооборотПраваДоступа.УстановитьИспользованиеПравДоступа(Ложь);
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.ДокументыПредприятия КАК Документы
			|ГДЕ
			|	Документы.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)
			|
			|Объединить все
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.ДействияИсполнения КАК Действие
			|ГДЕ
			|	Действие.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)
			|
			|Объединить все
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.ДействияОзнакомления КАК Действие
			|ГДЕ
			|	Действие.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)
			|
			|Объединить все
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.ДействияПодписания КАК Действие
			|ГДЕ
			|	Действие.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)
			|
			|Объединить все
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.ДействияРегистрации КАК Действие
			|ГДЕ
			|	Действие.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)
			|
			|Объединить все
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.ДействияСогласования КАК Действие
			|ГДЕ
			|	Действие.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)
			|
			|Объединить все
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.ДействияУтверждения КАК Действие
			|ГДЕ
			|	Действие.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Параметры.ПрогрессВыполнения.ВсегоОбъектов = 
				Параметры.ПрогрессВыполнения.ВсегоОбъектов + Выборка.Количество;
		КонецЦикла;
		
	КонецЕсли; 
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 500
		|	Ссылка
		|ИЗ
		|	Справочник.ДокументыПредприятия КАК Документы
		|ГДЕ
		|	Документы.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)
		|
		|Объединить все
		|
		|ВЫБРАТЬ ПЕРВЫЕ 500
		|	Ссылка
		|ИЗ
		|	Справочник.ДействияИсполнения КАК Действие
		|ГДЕ
		|	Действие.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)
		|
		|Объединить все
		|
		|ВЫБРАТЬ ПЕРВЫЕ 500
		|	Ссылка
		|ИЗ
		|	Справочник.ДействияОзнакомления КАК Действие
		|ГДЕ
		|	Действие.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)
		|
		|Объединить все
		|
		|ВЫБРАТЬ ПЕРВЫЕ 500
		|	Ссылка
		|ИЗ
		|	Справочник.ДействияПодписания КАК Действие
		|ГДЕ
		|	Действие.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)
		|
		|Объединить все
		|
		|ВЫБРАТЬ ПЕРВЫЕ 500
		|	Ссылка
		|ИЗ
		|	Справочник.ДействияРегистрации КАК Действие
		|ГДЕ
		|	Действие.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)
		|
		|Объединить все
		|
		|ВЫБРАТЬ ПЕРВЫЕ 500
		|	Ссылка
		|ИЗ
		|	Справочник.ДействияСогласования КАК Действие
		|ГДЕ
		|	Действие.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)
		|
		|Объединить все
		|
		|ВЫБРАТЬ ПЕРВЫЕ 500
		|	Ссылка
		|ИЗ
		|	Справочник.ДействияУтверждения КАК Действие
		|ГДЕ
		|	Действие.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.ПустаяСсылка)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
					
		Попытка
			
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ДокументДействиеОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			ДокументДействиеОбъект.Важность = Перечисления.ВариантыВажностиОбъектов.Обычная;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументДействиеОбъект);
					
			РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать объект: %1 по причине:
					|%2'"),
				Выборка.Ссылка,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстСообщения);
					
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_5_1 не удалось обработать некоторые документы или действия (пропущены): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = Выборка.Количество() = 0;	
	ДокументооборотПраваДоступа.УстановитьИспользованиеПравДоступа(Истина);
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_3(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	// Заполнение данных по корреспонденции
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Ссылка,
		|	Основание,
		|	ВидОбращения,
		|	ДатаКонтрагента,
		|	НомерКонтрагента,
		|	Переадресовавший,
		|	ЭтоПовторноеОбращение,
		|	ЭтоДубликатОбращения,
		|	СпособПолучения
		|Поместить Корреспонденция
		|ИЗ
		|	Документ.Корреспонденция КАК Документы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ Первые 1000
		|	Документы.Документ,
		|	Документы.ДатаСортировки,
		|	Документы.ПометкаУдаления,
		|	Корреспонденция.ВидОбращения,
		|	Корреспонденция.ДатаКонтрагента,
		|	Корреспонденция.НомерКонтрагента,
		|	Корреспонденция.Переадресовавший,
		|	Корреспонденция.ЭтоПовторноеОбращение,
		|	Корреспонденция.ЭтоДубликатОбращения,
		|	Корреспонденция.СпособПолучения
		|ИЗ
		|	РегистрСведений.ДанныеДокументовПредприятия КАК Документы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Корреспонденция КАК Корреспонденция
		|		ПО Корреспонденция.Основание = Документы.Документ
		|ГДЕ
		|	Документы.ВидОбращения <> Корреспонденция.ВидОбращения
		|	ИЛИ Документы.ИсходящаяДата <> Корреспонденция.ДатаКонтрагента
		|	ИЛИ Документы.ИсходящийНомер <> Корреспонденция.НомерКонтрагента
		|	ИЛИ Документы.Переадресовавший <> Корреспонденция.Переадресовавший
		|	ИЛИ Документы.Повторное <> Корреспонденция.ЭтоПовторноеОбращение
		|	ИЛИ Документы.Дубликат <> Корреспонденция.ЭтоДубликатОбращения
		|	ИЛИ Документы.СпособПолучения <> Корреспонденция.СпособПолучения";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			// Запишем новый набор записей.
			НаборЗаписей = РегистрыСведений.ДанныеДокументовПредприятия.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(Выборка.Документ);
			НаборЗаписей.Отбор.ДатаСортировки.Установить(Выборка.ДатаСортировки);
			НаборЗаписей.Отбор.ПометкаУдаления.Установить(Выборка.ПометкаУдаления);
			
			НаборЗаписей.Прочитать();
	
			Если НаборЗаписей.Количество() > 0 Тогда
				ЗаписьРегистра = НаборЗаписей[0];
			Иначе
				ЗаписьРегистра = НаборЗаписей.Добавить();
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Выборка);
			ЗаписьРегистра.ИсходящийНомер = Выборка.НомерКонтрагента;
			ЗаписьРегистра.ИсходящаяДата = Выборка.ДатаКонтрагента;
			ЗаписьРегистра.Повторное = Выборка.ЭтоПовторноеОбращение;
			ЗаписьРегистра.Дубликат = Выборка.ЭтоДубликатОбращения;
			Если ЗначениеЗаполнено(Выборка.НомерКонтрагента)
				И ЗначениеЗаполнено(Выборка.ДатаКонтрагента) Тогда
				ИсходящийНомерИДата =
					СтрШаблон(НСтр("ru = '%1 от %2'"),
					СокрЛП(Выборка.НомерКонтрагента),
					Формат(Выборка.ДатаКонтрагента, "ДЛФ=D"));
				ЗаписьРегистра.ИсходящийНомерИДата = ИсходящийНомерИДата;
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать объект: %1 по причине:
					|%2'"),
				Выборка.Документ,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстСообщения);
					
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_5_3 не удалось обработать некоторые документы (пропущены): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = Выборка.Количество() = 0;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_4() Экспорт
	
	Константы.ИспользоватьСогласованиеСЗамечаниями.Установить(Истина);
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_5() Экспорт
	
	ПроцессОбъект = Справочники.ШаблоныКомплексныхБизнесПроцессов.ПоУмолчанию.ПолучитьОбъект();
	ПроцессОбъект.ЗаполнитьШаблонПоУмолчанию();
	ПроцессОбъект.Записать();
	
	МенеджерСхем = Справочники.УдалитьСхемыКомплексныхПроцессов;
	МенеджерСхем.ПеренестиНастройкиСхемШаблоновКомплексныхПроцессовВНовуюСтруктуруДанных();
	МенеджерСхем.ПеренестиНастройкиСхемАктивныхКомплексныхПроцессовВНовуюСтруктуруДанных();
	МенеджерСхем.ЗаменитьТочкуМаршрутаВАктивныхСлужебныхЗадачахКомплексныхПроцессов();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_6(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(ОбработкиОбъектов.Ссылка) КАК Количество
			|ИЗ
			|	Справочник.ОбработкиОбъектов КАК ОбработкиОбъектов
			|ГДЕ
			|	ОбработкиОбъектов.Код = ""0000000000""";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Параметры.ПрогрессВыполнения.ВсегоОбъектов = 
				Параметры.ПрогрессВыполнения.ВсегоОбъектов + Выборка.Количество;
		КонецЦикла;
		
	КонецЕсли; 
	
	// Обновление кода справочника
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 500
		|	ОбработкиОбъектов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ОбработкиОбъектов КАК ОбработкиОбъектов
		|ГДЕ
		|	ОбработкиОбъектов.Код = ""0000000000""";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
					
		Попытка
			
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ОбработкаОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			ОбработкаОбъект.УстановитьНовыйКод();
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ОбработкаОбъект);
					
			РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать обработку объекта: %1 по причине:
					|%2'"),
				Выборка.Ссылка,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстСообщения);
					
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_5_6 не удалось обработать некоторые обработки объектов (пропущены): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = Выборка.Количество() = 0;	
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_7() Экспорт
	
	ИдентификаторПрофиляПользователи = "c999acb1-d5f5-11de-a544-00179ab398dc";
	
	УправлениеДоступомДокументооборот.ДобавитьРольВПолномочия(
		Метаданные.Роли.ДобавлениеИзменениеКонтактныхЛиц,
		ИдентификаторПрофиляПользователи);
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_9(Параметры) Экспорт    
	
	Запрос = Новый Запрос;
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(ДействияОбработкиОбъектов.Действие) КАК Количество
			|ИЗ
			|	РегистрСведений.ДействияОбработкиОбъектов КАК ДействияОбработкиОбъектов
			|ГДЕ
			|	ДействияОбработкиОбъектов.НастройкаОбработки = ЗНАЧЕНИЕ(Справочник.НастройкиОбработкиВидовОбъектов.ПустаяСсылка)
			|	И Не ДействияОбработкиОбъектов.Действие.ПометкаУдаления
			|	И ДействияОбработкиОбъектов.Действие.НастройкаДействия <> ЗНАЧЕНИЕ(Справочник.НастройкиДействийИсполнения.ПустаяСсылка)
			|	И ДействияОбработкиОбъектов.Действие.НастройкаДействия <> ЗНАЧЕНИЕ(Справочник.НастройкиДействийОзнакомления.ПустаяСсылка)
			|	И ДействияОбработкиОбъектов.Действие.НастройкаДействия <> ЗНАЧЕНИЕ(Справочник.НастройкиДействийПодписания.ПустаяСсылка)
			|	И ДействияОбработкиОбъектов.Действие.НастройкаДействия <> ЗНАЧЕНИЕ(Справочник.НастройкиДействийРегистрации.ПустаяСсылка)
			|	И ДействияОбработкиОбъектов.Действие.НастройкаДействия <> ЗНАЧЕНИЕ(Справочник.НастройкиДействийСогласования.ПустаяСсылка)
			|	И ДействияОбработкиОбъектов.Действие.НастройкаДействия <> ЗНАЧЕНИЕ(Справочник.НастройкиДействийУтверждения.ПустаяСсылка)";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Параметры.ПрогрессВыполнения.ВсегоОбъектов = 
				Параметры.ПрогрессВыполнения.ВсегоОбъектов + Выборка.Количество;
		КонецЦикла;
		
	КонецЕсли; 
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДействияОбработкиОбъектов.Обработка КАК Обработка,
		|	ДействияОбработкиОбъектов.Действие КАК Действие,
		|	ДействияОбработкиОбъектов.Обработка.ДатаСоздания КАК ДатаОбработки,
		|	ДокументыПредприятия.ВидДокумента КАК ВидДокумента
		|ИЗ
		|	РегистрСведений.ДействияОбработкиОбъектов КАК ДействияОбработкиОбъектов
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|	ПО (ДокументыПредприятия.Ссылка = ДействияОбработкиОбъектов.Обработка.Владелец)
		|ГДЕ
		|	ДействияОбработкиОбъектов.НастройкаОбработки = ЗНАЧЕНИЕ(Справочник.НастройкиОбработкиВидовОбъектов.ПустаяСсылка)
		|	И ДействияОбработкиОбъектов.Действие.НастройкаДействия <> ЗНАЧЕНИЕ(Справочник.НастройкиДействийИсполнения.ПустаяСсылка)
		|	И ДействияОбработкиОбъектов.Действие.НастройкаДействия <> ЗНАЧЕНИЕ(Справочник.НастройкиДействийОзнакомления.ПустаяСсылка)
		|	И ДействияОбработкиОбъектов.Действие.НастройкаДействия <> ЗНАЧЕНИЕ(Справочник.НастройкиДействийПодписания.ПустаяСсылка)
		|	И ДействияОбработкиОбъектов.Действие.НастройкаДействия <> ЗНАЧЕНИЕ(Справочник.НастройкиДействийРегистрации.ПустаяСсылка)
		|	И ДействияОбработкиОбъектов.Действие.НастройкаДействия <> ЗНАЧЕНИЕ(Справочник.НастройкиДействийСогласования.ПустаяСсылка)
		|	И ДействияОбработкиОбъектов.Действие.НастройкаДействия <> ЗНАЧЕНИЕ(Справочник.НастройкиДействийУтверждения.ПустаяСсылка)
		|	И Не ДействияОбработкиОбъектов.Действие.ПометкаУдаления
		|УПОРЯДОЧИТЬ ПО
		|	ДатаОбработки УБЫВ,
		|	Обработка";
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	ВсеНастройкиПоВидам = Новый Соответствие();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		КлючПоиска = СокрЛП(Выборка.ВидДокумента) + СокрЛП(НачалоДня(Выборка.ДатаОбработки));
		ТекНастройка = ВсеНастройкиПоВидам.Получить(КлючПоиска);
		Если ТекНастройка = Неопределено Тогда	
			ТекНастройка = Справочники.НастройкиОбработкиВидовОбъектов.НастройкаОбработкиДляВидаОбъекта(
				Выборка.ВидДокумента, Выборка.ДатаОбработки);

			// Настройка не задана.
			Если Не ЗначениеЗаполнено(ТекНастройка) Тогда
				Продолжить;
			КонецЕсли;
			
			ВсеНастройкиПоВидам.Вставить(КлючПоиска, ТекНастройка);
		КонецЕсли;
		
		НачатьТранзакцию();
					
		Попытка
			
			// Запишем новый набор записей.
			НаборЗаписей = РегистрыСведений.ДействияОбработкиОбъектов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Действие.Установить(Выборка.Действие);
			
			НаборЗаписей.Прочитать();
	
			Если НаборЗаписей.Количество() > 0 Тогда
				ЗаписьРегистра = НаборЗаписей[0];
			Иначе
				ЗаписьРегистра = НаборЗаписей.Добавить();
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Выборка);
			ЗаписьРегистра.НастройкаОбработки = ТекНастройка;
									
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
					
			ЗафиксироватьТранзакцию();
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать действие: %1 по причине:
					|%2'"),
				Выборка.Действие,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстСообщения);
					
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_5_9 не удалось обработать некоторые настройки (пропущены): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = Выборка.Количество() = 0;	
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_10() Экспорт
	
	// Создает предопределенный алгоритм "Все руководители"
	Справочники.Алгоритмы.ЗаполнитьПредопределенные();
	ОбновлениеИнформационнойБазыДокументооборот.СоздатьРабочуюГруппуРуководителиПодразделений();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_27() Экспорт
	
	Сотрудники.ЗаменитьНаСотрудникаОтветственногоЗаУдалениеНеактивныхВерсий();
	Сотрудники.ЗаменитьПользователяНаСотрудникаДляЗаданияРаспознавания();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_31() Экспорт
	
	ОбновлениеИнформационнойБазыДокументооборот.СкопироватьНастройкиДоступностиПоСостояниюДляНовогоПоля("ВажностьДокумента", "ФормаДокумента");
	ИдентификаторПрофиляПользователи = "c999acb1-d5f5-11de-a544-00179ab398dc";
	УправлениеДоступомДокументооборот.ДобавитьРольВПолномочия(
		Метаданные.Роли.ДобавлениеИзменениеФизическихЛиц,
		ИдентификаторПрофиляПользователи);
		
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_33(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	РегистрСведений.ДанныеБизнесПроцессов КАК ДанныеБизнесПроцессов
			|ГДЕ
			|	ДанныеБизнесПроцессов.УзелОбработки <> &УникальныйИдентификаторПустой";
		Запрос.УстановитьПараметр("УникальныйИдентификаторПустой", УникальныйИдентификаторПустой());	
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		Параметры.ПрогрессВыполнения.ВсегоОбъектов = Выборка.Количество;
		
	КонецЕсли; 
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДанныеБизнесПроцессов.БизнесПроцесс
		|ИЗ
		|	РегистрСведений.ДанныеБизнесПроцессов КАК ДанныеБизнесПроцессов
		|ГДЕ
		|	ДанныеБизнесПроцессов.УзелОбработки <> &УникальныйИдентификаторПустой";
		
	Запрос.УстановитьПараметр("УникальныйИдентификаторПустой", УникальныйИдентификаторПустой());
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
					
		Попытка
			
			ЗаблокироватьДанныеДляРедактирования(Выборка.БизнесПроцесс);
			
			Процесс = Выборка.БизнесПроцесс.ПолучитьОбъект();
			Процесс.УзелОбработки = УникальныйИдентификаторПустой();
			РаботаСБизнесПроцессами.ЗаписатьПроцесс(Процесс, "ЗаписьСОбновлениемОбщегоСпискаПроцессов");
					
			РазблокироватьДанныеДляРедактирования(Выборка.БизнесПроцесс);
			ЗафиксироватьТранзакцию();
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось запись РС ДанныеБизнесПроцессов: %1 по причине:
					|%2'"),
				Выборка.БизнесПроцесс,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстСообщения);
					
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_5_33 не удалось обработать некоторые записи РС ДанныеБизнесПроцессов (пропущены): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = Выборка.Количество() = 0;	
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_34() Экспорт
	
	// Обновляем настройки уведомлений.
	РегистрыСведений.НастройкиУведомлений.УстановитьПодпискуПоУмолчанию(
		Перечисления.СобытияУведомлений.ОзнакомлениеСПоложительнымРезультатомПроцесса,
		Перечисления.СпособыУведомления.ПоПочте,
		Истина);

	РегистрыСведений.НастройкиУведомлений.УстановитьПодпискуПоУмолчанию(
		Перечисления.СобытияУведомлений.ОзнакомлениеСПоложительнымРезультатомПроцесса,
		Перечисления.СпособыУведомления.Окном,
		Истина);

	РегистрыСведений.НастройкиУведомлений.УстановитьПодпискуПоУмолчанию(
		Перечисления.СобытияУведомлений.ОзнакомлениеСПоложительнымРезультатомДействияОбработки,
		Перечисления.СпособыУведомления.ПоПочте,
		Истина);

	РегистрыСведений.НастройкиУведомлений.УстановитьПодпискуПоУмолчанию(
		Перечисления.СобытияУведомлений.ОзнакомлениеСПоложительнымРезультатомДействияОбработки,
		Перечисления.СпособыУведомления.Окном,
		Истина);
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_35() Экспорт

	Сотрудники.ЗаменитьПользователейНаСотрудниковВСпискеКонтроляСамочувствия();

КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_36() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДоступностьШаблоновПроцессов.Шаблон КАК Шаблон
	|ИЗ
	|	РегистрСведений.ДоступностьШаблоновПроцессов КАК ДоступностьШаблоновПроцессов
	|ГДЕ
	|	ДоступностьШаблоновПроцессов.Шаблон ССЫЛКА Справочник.УдалитьШаблоныПоручения
	|	ИЛИ ДоступностьШаблоновПроцессов.Шаблон ССЫЛКА Справочник.УдалитьШаблоныСоставныхБизнесПроцессов";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// удалим запись
		НаборЗаписей = РегистрыСведений.ДоступностьШаблоновПроцессов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Шаблон.Установить(Выборка.Шаблон);		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		
	КонецЦикла;	

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПредметыИУчастникиДействийКомплексныхПроцессов.ШаблонДействия КАК ШаблонДействия
	|ИЗ
	|	РегистрСведений.ПредметыИУчастникиДействийКомплексныхПроцессов КАК ПредметыИУчастникиДействийКомплексныхПроцессов
	|ГДЕ
	|	ПредметыИУчастникиДействийКомплексныхПроцессов.ШаблонДействия ССЫЛКА Справочник.УдалитьШаблоныПоручения
	|	ИЛИ ПредметыИУчастникиДействийКомплексныхПроцессов.ШаблонДействия
	|		ССЫЛКА Справочник.УдалитьШаблоныСоставныхБизнесПроцессов";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// удалим запись
		НаборЗаписей = РегистрыСведений.ПредметыИУчастникиДействийКомплексныхПроцессов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ШаблонДействия.Установить(Выборка.ШаблонДействия);		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		
	КонецЦикла;	

КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_41() Экспорт
	
	// Автоподстановки в адресной книге.
	Справочники.АдреснаяКнига.ЗаполнитьПредопределенныеРазделы();
	Выборка = Справочники.АвтоподстановкиДляОбъектов.ВыбратьИерархически();
	Пока Выборка.Следующий() Цикл
		РазделыАдреснойКниги =
			Справочники.АвтоподстановкиДляОбъектов.РазделыАдреснойКниги(Выборка.ТипОбъекта);
		Для Каждого РазделАдреснойКниги Из РазделыАдреснойКниги Цикл
			Справочники.АдреснаяКнига.ОбновитьДанныеОбъекта(
				Выборка.Ссылка,
				Выборка.Родитель,
				РазделАдреснойКниги);
		КонецЦикла;
		РегистрыСведений.ОбъектыПоискаВАдреснойКниге.ОбновитьСловаПоискаПоАвтоподстановкеДляОбъектов(Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_43() Экспорт
	
	РегистрыСведений.ДокументыЭДОКСозданиюВДО.ЗаполнитьДокументыЭДОКСозданиюВДОПриОбновлении();
		
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_46() Экспорт
	
	Справочники.РабочиеСтолы.ЗаполнитьПоставляемыеДанные();
		
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_47() Экспорт
	
	// Настройки уведомлений.
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	НастройкиУведомлений.Пользователь,
		|	НастройкиУведомлений.Настройка,
		|	НастройкиУведомлений.ВидСобытия,
		|	НастройкиУведомлений.СпособУведомления,
		|	НастройкиУведомлений.Объект
		|ИЗ
		|	РегистрСведений.НастройкиУведомлений КАК НастройкиУведомлений
		|ГДЕ
		|	НастройкиУведомлений.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.СобытияУведомлений.УдалитьСозданиеЗаписиКалендаря)");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.НастройкиУведомлений.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Пользователь.Установить(Выборка.Пользователь);
		НаборЗаписей.Отбор.Настройка.Установить(Выборка.Настройка);
		НаборЗаписей.Отбор.ВидСобытия.Установить(Выборка.ВидСобытия);
		НаборЗаписей.Отбор.СпособУведомления.Установить(Выборка.СпособУведомления);
		НаборЗаписей.Отбор.Объект.Установить(Выборка.Объект);
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		
	КонецЦикла;
	
	// Обработанные уведомления.
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ОбработанныеУведомления.ВидСобытия,
		|	ОбработанныеУведомления.ОбъектУведомления,
		|	ОбработанныеУведомления.Пользователь
		|ИЗ
		|	РегистрСведений.ОбработанныеУведомления КАК ОбработанныеУведомления
		|ГДЕ
		|	ОбработанныеУведомления.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.СобытияУведомлений.УдалитьСозданиеЗаписиКалендаря)");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.ОбработанныеУведомления.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ВидСобытия.Установить(Выборка.ВидСобытия);
		НаборЗаписей.Отбор.ОбъектУведомления.Установить(Выборка.ОбъектУведомления);
		НаборЗаписей.Отбор.Пользователь.Установить(Выборка.Пользователь);
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		
	КонецЦикла;
	
	// Очередь уведомлений.
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ОчередьУведомлений.ВидСобытия,
		|	ОчередьУведомлений.Объект,
		|	ОчередьУведомлений.ОбъектПодписки,
		|	ОчередьУведомлений.Пользователь,
		|	ОчередьУведомлений.СпособУведомления
		|ИЗ
		|	РегистрСведений.ОчередьУведомлений КАК ОчередьУведомлений
		|ГДЕ
		|	ОчередьУведомлений.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.СобытияУведомлений.УдалитьСозданиеЗаписиКалендаря)");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.ОчередьУведомлений.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ВидСобытия.Установить(Выборка.ВидСобытия);
		НаборЗаписей.Отбор.Объект.Установить(Выборка.Объект);
		НаборЗаписей.Отбор.ОбъектПодписки.Установить(Выборка.ОбъектПодписки);
		НаборЗаписей.Отбор.Пользователь.Установить(Выборка.Пользователь);
		НаборЗаписей.Отбор.СпособУведомления.Установить(Выборка.СпособУведомления);
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_48() Экспорт

	Сотрудники.ЗаменитьПользователейНаСотрудниковВНастройкахРабочихКалендарей();
	Сотрудники.ЗаменитьДоступноеВремяПользователейНаСотрудников();

КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_49() Экспорт
	
	БизнесПроцессы.Утверждение.ЗаполнитьОбрабатывающегоРезультатПоАвтору();
	БизнесПроцессы.Согласование.ЗаполнитьОбрабатывающегоРезультатПоАвтору();
	БизнесПроцессы.Регистрация.ЗаполнитьОбрабатывающегоРезультатПоАвтору();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_50() Экспорт
	
	Сотрудники.ЗаменитьЗанятостьПользователейНаСотрудников();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_54() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПротоколыМероприятий.Ссылка
		|ИЗ
		|	Справочник.ПротоколыМероприятий КАК ПротоколыМероприятий
		|ГДЕ
		|	ПротоколыМероприятий.ПредставлениеИсполнителей = """"");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПунктПротоколаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ПунктПротоколаОбъект.ОбновитьПредставлениеИсполнителей();
		
		Если Не ПунктПротоколаОбъект.Модифицированность() Тогда
			Продолжить;
		КонецЕсли;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПунктПротоколаОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_55() Экспорт
	
	ДокументооборотПраваДоступа.УстановитьИспользованиеПравДоступа(Ложь);
	
	// В профиль "Ответственные за НСИ"
	УправлениеДоступомДокументооборот.ДобавитьРольВПолномочия(
		"ДобавлениеИзменениеНастроекОбработкиОбъектов", 
		"7bc7f2da-db69-11de-a544-00179ab398dc");
	ДокументооборотПраваДоступа.УстановитьИспользованиеПравДоступа(Истина);
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_56() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	БлокиНавигацииКоманды.Ссылка
		|ИЗ
		|	Справочник.БлокиНавигации.Команды КАК БлокиНавигацииКоманды
		|ГДЕ
		|	БлокиНавигацииКоманды.УдалитьПоказатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиВиджетов.ПустаяСсылка)");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		БлокНавигацииОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Для Каждого СтрокаКоманды Из БлокНавигацииОбъект.Команды Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаКоманды.УдалитьПоказатель) Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаКоманды.ОсновнаяКомандаПоказатель = СтрокаКоманды.УдалитьПоказатель;
			СтрокаКоманды.УдалитьПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
			
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(БлокНавигацииОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_57() Экспорт
	
	КалендарныеГрафики.СоздатьПроизводственныйКалендарьНа2022Год()
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_58() Экспорт
	
	Справочники.Алгоритмы.ЗаполнитьПредопределенные();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_59() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомандыВиджетов.Ссылка
		|ИЗ
		|	Справочник.КомандыВиджетов КАК КомандыВиджетов
		|ГДЕ
		|	КомандыВиджетов.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияВиджетов.ПустаяСсылка)
		|	И КомандыВиджетов.ИсточникСтрока <> """"");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
		
	КонецЦикла;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПоказателиВиджетов.Ссылка
		|ИЗ
		|	Справочник.ПоказателиВиджетов КАК ПоказателиВиджетов
		|ГДЕ
		|	ПоказателиВиджетов.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияВиджетов.ПустаяСсылка)
		|	И ПоказателиВиджетов.Источник <> """"");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_60() Экспорт
	
	Справочники.РезультатыДействийЗадач.ЗаполнитьПоставляемыеДанные();
	Справочники.НаборыСостоянийЗадач.ЗаполнитьПоставляемыеДанные();
	Справочники.СостоянияУчастниковЗадач.ЗаполнитьПоставляемыеДанные();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_61() Экспорт
	
	Справочники.АвтоподстановкиДляОбъектов.ЗаполнитьПредопределенные();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_62() Экспорт
	
	ОписанияОбластейДелегирования =
		НастраиваемоеДелегированиеПрав.ОписанияНачальногоЗаполненияОбластейДелегирования();
	
	ИОМКУдалению = Новый Массив;
	ИОМКУдалению.Добавить("? ВходящиеДокументы");
	ИОМКУдалению.Добавить("? ИсходящиеДокументы");
	ИОМКУдалению.Добавить("? ВидыВходящихДокументов");
	ИОМКУдалению.Добавить("? ВидыИсходящихДокументов");
	ИОМКУдалению.Добавить("? ШаблоныВходящихДокументов");
	ИОМКУдалению.Добавить("? ШаблоныИсходящихДокументов");
	ИОМКУдалению.Добавить("? ОбработкаВнутреннегоДокумента");
	ИОМКУдалению.Добавить("? ОбработкаВходящегоДокумента");
	ИОМКУдалению.Добавить("? ОбработкаИсходящегоДокумента");
	ИОМКУдалению.Добавить("? Поручение");
	
	Для Каждого ОписаниеОбласти Из ОписанияОбластейДелегирования Цикл
		
		ОбластьДелегированияСсылка = Справочники.УдалитьОбластиДелегированияПрав.ПолучитьСсылку(
			Новый УникальныйИдентификатор(ОписаниеОбласти.Идентификатор));
		
		ОбластьОбъект = ОбластьДелегированияСсылка.ПолучитьОбъект();
		СоставОбласти = ОбластьОбъект.Состав;
		
		Индекс = 0;
		Пока Индекс < СоставОбласти.Количество() Цикл
			СтрокаИОМ = СоставОбласти[Индекс];
			
			Если ИОМКУдалению.Найти(СтрокаИОМ.ОбъектМетаданных.Имя) <> Неопределено Тогда
				СоставОбласти.Удалить(СтрокаИОМ);
			Иначе
				Индекс = Индекс + 1;
			КонецЕсли;
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ОбластьОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_63(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.ВизыСогласования КАК ВизыСогласования
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбУчастникахДействий КАК СведенияОбУчастникахДействий
			|		ПО (СведенияОбУчастникахДействий.Действие = ВизыСогласования.Источник)
			|		И (СведенияОбУчастникахДействий.ИдентификаторУчастника = ВизыСогласования.ИдентификаторУчастника)
			|ГДЕ
			|	(ВизыСогласования.УстановилРезультат = ЗНАЧЕНИЕ(Справочник.ФактическиеИсполнители.ПустаяСсылка)
			|	ИЛИ ВизыСогласования.УстановилРезультат = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
			|	ИЛИ ВизыСогласования.УстановилРезультат = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
			|	ИЛИ ВизыСогласования.УстановилРезультат = НЕОПРЕДЕЛЕНО)
			|	И СведенияОбУчастникахДействий.ФактическийИсполнитель <> ЗНАЧЕНИЕ(Справочник.ФактическиеИсполнители.ПустаяСсылка)";
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		Параметры.ПрогрессВыполнения.ВсегоОбъектов = Выборка.Количество;
		
	КонецЕсли; 
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ВизыСогласования.Ссылка КАК Ссылка,
		|	СведенияОбУчастникахДействий.ФактическийИсполнитель КАК ФактическийИсполнитель
		|ИЗ
		|	Справочник.ВизыСогласования КАК ВизыСогласования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбУчастникахДействий КАК СведенияОбУчастникахДействий
		|		ПО (СведенияОбУчастникахДействий.Действие = ВизыСогласования.Источник)
		|		И (СведенияОбУчастникахДействий.ИдентификаторУчастника = ВизыСогласования.ИдентификаторУчастника)
		|ГДЕ
		|	(ВизыСогласования.УстановилРезультат = ЗНАЧЕНИЕ(Справочник.ФактическиеИсполнители.ПустаяСсылка)
		|	ИЛИ ВизыСогласования.УстановилРезультат = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|	ИЛИ ВизыСогласования.УстановилРезультат = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|	ИЛИ ВизыСогласования.УстановилРезультат = НЕОПРЕДЕЛЕНО)
		|	И СведенияОбУчастникахДействий.ФактическийИсполнитель <> ЗНАЧЕНИЕ(Справочник.ФактическиеИсполнители.ПустаяСсылка)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
					
		Попытка
			
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ВизаСогласования = Выборка.Ссылка.ПолучитьОбъект();
			
			ВизаСогласования.УстановилРезультат = Выборка.ФактическийИсполнитель;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ВизаСогласования);
					
			РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать визу согласования: %1 по причине:
					|%2'"),
				Выборка.Ссылка,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстСообщения);
					
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_5_63 не удалось обработать некоторые визы согласования (пропущены): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = Выборка.Количество() = 0;	
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_64() Экспорт
	
	Справочники.АдреснаяКнига.ЗаполнитьПредопределенныеРазделы();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_66() Экспорт
	
	ОбновлениеИнформационнойБазыДокументооборот.ЗаполнитьНастройкиВариантовОтчетовДокументооборот();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_67() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ГруппировкиЗадач.Ссылка
		|ИЗ
		|	Справочник.ГруппировкиЗадач КАК ГруппировкиЗадач
		|ГДЕ
		|	ГруппировкиЗадач.Исполнитель ССЫЛКА Справочник.Сотрудники");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ГруппировкаЗадач = Выборка.Ссылка.ПолучитьОбъект();
		ГруппировкаЗадач.Наименование = 
			РаботаСЗадачамиПовтИсп.ПредставлениеУчастника(ГруппировкаЗадач.Исполнитель, Истина);
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ГруппировкаЗадач);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_68() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СведенияОбАдресатах.Контакт КАК Контакт,
		|	СведенияОбАдресатах.АдресатСообщения КАК АдресатСообщения
		|ИЗ
		|	РегистрСведений.СведенияОбАдресатах КАК СведенияОбАдресатах
		|ГДЕ
		|	СведенияОбАдресатах.Контакт ССЫЛКА Справочник.Пользователи");
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Набор = РегистрыСведений.СведенияОбАдресатах.СоздатьНаборЗаписей();
		
		Набор.Отбор.АдресатСообщения.Установить(Выборка.АдресатСообщения);
		Набор.Отбор.Контакт.Установить(Выборка.Контакт);
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор);
	КонецЦикла;
	
	НаборЗаписей = РегистрыСведений.СпособыУведомленияПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(Справочники.РабочиеГруппы.ВсеПользователи);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Если Запись.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.EmailПользователя Тогда
			Запись.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.EmailСотрудника;
		ИначеЕсли Запись.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ТелефонПользователя Тогда
			Запись.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ТелефонСотрудника;
		КонецЕсли;
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);

	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_69(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
			|ГДЕ
			|	СпособыУведомленияПользователей.ВидКонтактнойИнформации В
			|	(ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailПользователя),
			|		ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонПользователя))";
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		Параметры.ПрогрессВыполнения.ВсегоОбъектов = Выборка.Количество;
	КонецЕсли; 
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 500
		|	СпособыУведомленияПользователей.Пользователь КАК Пользователь
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации В
		|	(ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailПользователя),
		|		ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонПользователя))";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	КоличествоПроблем = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
					
		Попытка
			
			БлокировкаДанных = Новый БлокировкаДанных;
			ЭлементБлокировки = 
				БлокировкаДанных.Добавить("РегистрСведений.СпособыУведомленияПользователей");
			ЭлементБлокировки.УстановитьЗначение("Пользователь", Выборка.Пользователь);
			БлокировкаДанных.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.СпособыУведомленияПользователей.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Пользователь.Установить(Выборка.Пользователь);
			НаборЗаписей.Прочитать();
			
			Для Каждого Запись Из НаборЗаписей Цикл
				Если Запись.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.EmailПользователя Тогда
					Запись.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.EmailСотрудника;
				ИначеЕсли Запись.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ТелефонПользователя Тогда
					Запись.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ТелефонСотрудника;
				КонецЕсли;
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
			
			ОбработаноОбъектов = ОбработаноОбъектов + НаборЗаписей.Количество();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			КоличествоПроблем = КоличествоПроблем + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать записи РС СпособыУведомленияПользователей пользователя %1. Причина:
					|%2'"),
				Выборка.Пользователь,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстСообщения);
					
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И КоличествоПроблем > 0 Тогда
		
		ТекстСообщения =
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_5_69 не удалось обработать записи РС СпособыУведомленияПользователей.'");
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = Выборка.Количество() = 0;	
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_70() Экспорт
	
	РегистрыСведений.ПравилаУчетаВидовЭДДО.ЗаполнитьГрифДоступаПоУмолчанию();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_71() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПоказателиВиджетов.Ссылка
		|ИЗ
		|	Справочник.ПоказателиВиджетов КАК ПоказателиВиджетов
		|ГДЕ
		|	ПоказателиВиджетов.Заголовок = """"");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПоказательОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ПоказательОбъект.Заголовок = ПоказательОбъект.Наименование;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_75() Экспорт
	
	Справочники.Метрики.ЗаполнитьПредопределенные();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_78() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДелаХраненияДокументов.Ссылка КАК Ссылка,
		|	ДелаХраненияДокументов.НомерТома КАК НомерТома,
		|	ДелаХраненияДокументов.НомерЧасти КАК НомерЧасти,
		|	НоменклатураДелСпр.ПолноеНаименование КАК ЗаголовокНоменклатурыДел
		|ИЗ
		|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураДел КАК НоменклатураДелСпр
		|		ПО ДелаХраненияДокументов.НоменклатураДел = НоменклатураДелСпр.Ссылка
		|ГДЕ
		|	(ВЫРАЗИТЬ(ДелаХраненияДокументов.ПолноеНаименование КАК СТРОКА(10))) = """"");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДелоОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДелоОбъект.ПолноеНаименование = ДелопроизводствоКлиентСервер.АвтоЗаголовокДела(
			Выборка.ЗаголовокНоменклатурыДел, Выборка.НомерТома, Выборка.НомерЧасти);
		ДелоОбъект.Наименование = Делопроизводство.НаименованиеДела(ДелоОбъект);
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДелоОбъект);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_79() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	НоменклатураДел.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НоменклатураДел КАК НоменклатураДел
		|ГДЕ
		|	НоменклатураДел.СрокОперативногоХранения = 0");
	РезультатЗапроса = Запрос.Выполнить();
	Пока Не РезультатЗапроса.Пустой() Цикл
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоменклатураОбъект = Выборка.Ссылка.ПолучитьОбъект();
			НоменклатураОбъект.СрокОперативногоХранения = 1;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НоменклатураОбъект);
		КонецЦикла;
		РезультатЗапроса = Запрос.Выполнить();
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_80() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДелаХраненияДокументов.Ссылка КАК Ссылка,
		|	ДелаХраненияДокументов.НоменклатураДел.ФормаДокументов КАК НоменклатураДелФормаДокументов
		|ИЗ
		|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
		|ГДЕ
		|	ДелаХраненияДокументов.ФормаДокументов = ЗНАЧЕНИЕ(Перечисление.ВариантыФормДокументов.ПустаяСсылка)");
	РезультатЗапроса = Запрос.Выполнить();
	Пока Не РезультатЗапроса.Пустой() Цикл
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДелоОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДелоОбъект.ФормаДокументов = Выборка.НоменклатураДелФормаДокументов;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДелоОбъект);
		КонецЦикла;
		РезультатЗапроса = Запрос.Выполнить();
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_81() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ПередачаДелВАрхив.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПередачаДелВАрхив КАК ПередачаДелВАрхив
		|ГДЕ
		|	НЕ ПередачаДелВАрхив.Проведен
		|	И НЕ ПередачаДелВАрхив.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1000
		|	УничтожениеДел.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.УничтожениеДел КАК УничтожениеДел
		|ГДЕ
		|	НЕ УничтожениеДел.Проведен
		|	И НЕ УничтожениеДел.ПометкаУдаления");
	РезультатЗапроса = Запрос.Выполнить();
	Пока Не РезультатЗапроса.Пустой() Цикл
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.Проведен = Истина;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		КонецЦикла;
		РезультатЗапроса = Запрос.Выполнить();
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_5_82() Экспорт
	
	НаборЗаписей = РегистрыСведений.СпособыУведомленияПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(Справочники.РабочиеГруппы.ВсеПользователи);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Если Запись.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.EmailПользователя Тогда
			Запись.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.EmailСотрудника;
		ИначеЕсли Запись.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ТелефонПользователя Тогда
			Запись.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ТелефонСотрудника;
		КонецЕсли;
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_6_2() Экспорт
	
	ДокументооборотПраваДоступа.УстановитьИспользованиеПравДоступа(Ложь);
	// В профиль Ответственные за ЭДО
	УправлениеДоступомДокументооборот.ДобавитьРольВПолномочия("ИспользованиеСервиса1СТакском", 
		"2be49dd2-337f-4b3a-af9d-17fe9f8325ec");
	ДокументооборотПраваДоступа.УстановитьИспользованиеПравДоступа(Истина);
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_6_3() Экспорт
	
	Справочники.АвтоподстановкиДляОбъектов.ЗаполнитьПредопределенные();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_6_4() Экспорт

	// Мобильное приложение (офлайн) не поддерживается
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМобильныеПриложения") Тогда
		Константы.ИспользоватьМобильныеПриложения.Установить(Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_2(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.ВидыДействий КАК ВидыДействий
			|ГДЕ
			|	ВидыДействий.НастройкаВидимости = ЗНАЧЕНИЕ(Перечисление.ВидимостьДействийВПредметах.ПустаяСсылка)";
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		Параметры.ПрогрессВыполнения.ВсегоОбъектов = Выборка.Количество;
	КонецЕсли; 
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 500
		|	ВидыДействий.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ВидыДействий КАК ВидыДействий
		|ГДЕ
		|	ВидыДействий.НастройкаВидимости = ЗНАЧЕНИЕ(Перечисление.ВидимостьДействийВПредметах.ПустаяСсылка)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	КоличествоПроблем = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
					
		Попытка
			
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ВидДействия = Выборка.Ссылка.ПолучитьОбъект();
			
			ВидДействия.НастройкаВидимости = Перечисления.ВидимостьДействийВПредметах.Всем;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ВидДействия);
					
			РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать вид действия: %1 по причине:
					|%2'"),
				Выборка.Ссылка,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстСообщения);
					
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И КоличествоПроблем > 0 Тогда
		
		ТекстСообщения =
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_7_2 не удалось обработать все Виды действий.'");
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = Выборка.Количество() = 0;	
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_4() Экспорт
	
	ImageMagick = Константы.ИспользоватьImageMagickДляРаспознаванияPDF.Получить();
	Константы.ИспользоватьGhostscript.Установить(ImageMagick);
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_5() Экспорт

	// Очистим РС ПРедпросмотрФайлов
	
	ГотовитьПредставленияФайловДляПредпросмотраНаКлиенте 
		= Константы.ГотовитьПредставленияФайловДляПредпросмотраНаКлиенте.Получить();
		
	// если превью готовится через очередь, стирать нельзя. Иначе сотрем
	Если Не ГотовитьПредставленияФайловДляПредпросмотраНаКлиенте Тогда
		
		НаборЗаписей = РегистрыСведений.ПредпросмотрФайлов.СоздатьНаборЗаписей();
		НаборЗаписей.Записать(); // без отбора, стираем все.
		
	КонецЕсли;		
				
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_7() Экспорт
	
	Константы.СпособВставкиШтампаЭПВPDF.Установить(Перечисления.СпособыВставкиШтампаЭПВPDF.ImageMagickGhostscript);
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_8() Экспорт
	
	Справочники.АвтоподстановкиДляОбъектов.ЗаполнитьПредопределенные();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_9() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПравилаЭскалацииЗадач.Ссылка
		|ИЗ
		|	Справочник.ПравилаЭскалации КАК ПравилаЭскалацииЗадач
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ПравилаЭскалацииЗадач.НаправлениеЭскалации) = ТИП(СТРОКА)");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ПравилоЭскалацииЗадач = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ПравилоЭскалацииЗадач.НаправлениеЭскалации =
			ЭскалацияЗадач.СконвертированнаяАвтоподстановка(
				ПравилоЭскалацииЗадач.НаправлениеЭскалации);
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПравилоЭскалацииЗадач);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_10() Экспорт
	
	Справочники.АдреснаяКнига.ЗаполнитьПредопределенныеРазделы();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_11() Экспорт
	
	Выборка = Справочники.АвтоподстановкиДляОбъектов.ВыбратьИерархически();
	Пока Выборка.Следующий() Цикл
		РазделыАдреснойКниги =
			Справочники.АвтоподстановкиДляОбъектов.РазделыАдреснойКниги(Выборка.ТипОбъекта);
		Для Каждого РазделАдреснойКниги Из РазделыАдреснойКниги Цикл
			Справочники.АдреснаяКнига.ОбновитьДанныеОбъекта(
				Выборка.Ссылка,
				Выборка.Родитель,
				РазделАдреснойКниги);
		КонецЦикла;
		РегистрыСведений.ОбъектыПоискаВАдреснойКниге.ОбновитьСловаПоискаПоАвтоподстановкеДляОбъектов(Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_12() Экспорт
	
	Выборка = Справочники.АвтоподстановкиДляПроцессов.ВыбратьИерархически();
	Пока Выборка.Следующий() Цикл
		Справочники.АдреснаяКнига.ОбновитьДанныеОбъекта(
			Выборка.Ссылка,
			Выборка.Родитель,
			Справочники.АдреснаяКнига.АвтоподстановкиДляПроцессов);
		Справочники.АдреснаяКнига.ОбновитьДанныеОбъекта(
			Выборка.Ссылка,
			Выборка.Родитель,
			Справочники.АдреснаяКнига.ВсеАвтоподстановки);
		РегистрыСведений.ОбъектыПоискаВАдреснойКниге.ОбновитьСловаПоискаПоАвтоподстановкеДляОбъектов(Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_13() Экспорт
	
	Справочники.ПоказателиВиджетов.ЗаполнитьПоставляемыеДанные();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_14() Экспорт

	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПравилаКоммуникаций КАК Таблица");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЭлементОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		ЭлементОбъект.ПодготовитьОграничения();
		ЭлементОбъект.ПодготовитьНазначения(
			ЭлементОбъект.Назначение, ЭлементОбъект.Ограничения.Количество() > 0);
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ЭлементОбъект);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_15() Экспорт
	
	Константы.СрокХраненияУведомленийПрограммы.Установить(90); // 90 дней
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_24(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СУММА(ВложенныйЗапрос.Количество)
			|ИЗ
			|	(ВЫБРАТЬ
			|		КОЛИЧЕСТВО(*) КАК Количество
			|	ИЗ
			|		БизнесПроцесс.Согласование КАК Согласование
			|	ГДЕ
			|		Согласование.ИсточникДанных = ЗНАЧЕНИЕ(Справочник.ИсточникиДанных.ДО21)
			|		И Согласование.ОбрабатывающийРезультат = Неопределено
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		КОЛИЧЕСТВО(*)
			|	ИЗ
			|		БизнесПроцесс.Регистрация КАК Регистрация
			|	ГДЕ
			|		Регистрация.ИсточникДанных = ЗНАЧЕНИЕ(Справочник.ИсточникиДанных.ДО21)
			|		И Регистрация.ОбрабатывающийРезультат = Неопределено
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		КОЛИЧЕСТВО(*)
			|	ИЗ
			|		БизнесПроцесс.Утверждение КАК Утверждение
			|	ГДЕ
			|		Утверждение.ИсточникДанных = ЗНАЧЕНИЕ(Справочник.ИсточникиДанных.ДО21)
			|		И Утверждение.ОбрабатывающийРезультат = Неопределено) КАК ВложенныйЗапрос";
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		Параметры.ПрогрессВыполнения.ВсегоОбъектов = Выборка.Количество;
	КонецЕсли; 
	
	ПараметрыСеанса.ЗагрузкаОбработанныхДанныхИзДругойСистемы = Истина;
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 500
		|	Согласование.Ссылка КАК Ссылка
		|ИЗ
		|	БизнесПроцесс.Согласование КАК Согласование
		|ГДЕ
		|	Согласование.ИсточникДанных = ЗНАЧЕНИЕ(Справочник.ИсточникиДанных.ДО21)
		|	И Согласование.ОбрабатывающийРезультат = Неопределено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 500
		|	Регистрация.Ссылка
		|ИЗ
		|	БизнесПроцесс.Регистрация КАК Регистрация
		|ГДЕ
		|	Регистрация.ИсточникДанных = ЗНАЧЕНИЕ(Справочник.ИсточникиДанных.ДО21)
		|	И Регистрация.ОбрабатывающийРезультат = Неопределено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 500
		|	Утверждение.Ссылка
		|ИЗ
		|	БизнесПроцесс.Утверждение КАК Утверждение
		|ГДЕ
		|	Утверждение.ИсточникДанных = ЗНАЧЕНИЕ(Справочник.ИсточникиДанных.ДО21)
		|	И Утверждение.ОбрабатывающийРезультат = Неопределено";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			
			Блокировка = Новый БлокировкаДанных();
			ЭлементБлокировки = Блокировка.Добавить(ОбщегоНазначения.ИмяТаблицыПоСсылке(Выборка.Ссылка));
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			ПроцессОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ПроцессОбъект.ОбрабатывающийРезультат = ПроцессОбъект.Автор;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПроцессОбъект);
			
			ИнтеграцияЗадач.ОбновитьЗадачуПоИсточнику(Выборка.Ссылка);
			
			РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать процесс: %1 по причине:
					|%2'"),
				Выборка.Ссылка,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка, , ,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		
		ТекстСообщения =
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_7_24 не удалось обработать все процессы.'");
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = Выборка.Количество() = 0;
	
	ПараметрыСеанса.ЗагрузкаОбработанныхДанныхИзДругойСистемы = Ложь;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_26() Экспорт
	
	ОбновлениеИнформационнойБазыДокументооборот.ЗаполнитьНастройкиВариантовОтчетовДокументооборот();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_27() Экспорт
	
	Справочники.АвтоподстановкиДляОбъектов.ЗаполнитьПредопределенные();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_28(Параметры) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ПараметрыСеанса.ЗагрузкаОбработанныхДанныхИзДругойСистемы = Истина;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДокументыПредприятияСтороны.Ссылка КАК Ссылка,
		|	МИНИМУМ(ДокументыПредприятияСтороны.Подписан) КАК Подписан
		|ПОМЕСТИТЬ ПодписаниеОрганизациейПоСторонам
		|ИЗ
		|	Справочник.ВидыДокументов КАК ВидыДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДокументыПредприятия.Стороны КАК ДокументыПредприятияСтороны
		|		ПО (ДокументыПредприятияСтороны.Ссылка.ВидДокумента = ВидыДокументов.Ссылка)
		|		И (ВидыДокументов.ВестиУчетСторон)
		|ГДЕ
		|	ДокументыПредприятияСтороны.Сторона ССЫЛКА Справочник.Организации
		|СГРУППИРОВАТЬ ПО
		|	ДокументыПредприятияСтороны.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументыПредприятия.Ссылка КАК Ссылка,
		|	ДокументыПредприятия.РезультатПодписания = ЗНАЧЕНИЕ(Перечисление.РезультатыПодписания.Подписано) КАК Подписан
		|ПОМЕСТИТЬ ПодписаниеОрганизациейПоРеквизитам
		|ИЗ
		|	Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументыПредприятияСтороны.Ссылка КАК Ссылка,
		|	МИНИМУМ(ДокументыПредприятияСтороны.Подписан) КАК Подписан
		|ПОМЕСТИТЬ ПодписаниеКонтрагентомПоСторонам
		|ИЗ
		|	Справочник.ВидыДокументов КАК ВидыДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДокументыПредприятия.Стороны КАК ДокументыПредприятияСтороны
		|		ПО (ДокументыПредприятияСтороны.Ссылка.ВидДокумента = ВидыДокументов.Ссылка)
		|		И (ВидыДокументов.ВестиУчетСторон)
		|ГДЕ
		|	ДокументыПредприятияСтороны.Сторона ССЫЛКА Справочник.Контрагенты
		|СГРУППИРОВАТЬ ПО
		|	ДокументыПредприятияСтороны.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументыПредприятия.Ссылка КАК Ссылка,
		|	ДокументыПредприятия.ПодписалОтКонтрагента <> ЗНАЧЕНИЕ(Справочник.КонтактныеЛица.ПустаяСсылка) КАК Подписан
		|ПОМЕСТИТЬ ПодписаниеКонтрагентомПоРеквизитам
		|ИЗ
		|	Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДействияПодписания.Предмет КАК Ссылка,
		|	МИНИМУМ(ВЫБОР
		|		КОГДА РезультатыДействий.Результат = ЗНАЧЕНИЕ(Перечисление.РезультатыПодписания.Подписано)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ) КАК Подписан
		|ПОМЕСТИТЬ РезультатыПодписанияПоДействиям
		|ИЗ
		|	Справочник.ДействияПодписания КАК ДействияПодписания
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатыДействий КАК РезультатыДействий
		|		ПО ДействияПодписания.Ссылка = РезультатыДействий.Действие
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияДействий КАК СостоянияДействий
		|		ПО (ДействияПодписания.Ссылка = СостоянияДействий.Действие
		|		И СостоянияДействий.Функция = НЕОПРЕДЕЛЕНО
		|		И СостоянияДействий.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияВыполненияДействий.Завершено))
		|ГДЕ
		|	НЕ ДействияПодписания.ПомещеноВИсторию
		|	И НЕ ДействияПодписания.ПометкаУдаления
		|	И ДействияПодписания.Предмет ССЫЛКА Справочник.ДокументыПредприятия
		|СГРУППИРОВАТЬ ПО
		|	ДействияПодписания.Предмет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документы.Ссылка КАК Ссылка,
		|	Документы.ПодписанУтвержден КАК ПодписанУтвержден,
		|	ВЫБОР
		|		КОГДА ВидыДокументов.ВестиУчетСторон
		|			ТОГДА ВЫБОР
		|				КОГДА ВидыДокументов.ВариантПодписания = ЗНАЧЕНИЕ(Перечисление.ВариантыПодписания.ТолькоМы)
		|					ТОГДА ВЫБОР
		|						КОГДА НЕ РезультатыПодписанияПоДействиям.Подписан ЕСТЬ NULL
		|							ТОГДА РезультатыПодписанияПоДействиям.Подписан
		|						ИНАЧЕ ПодписаниеОрганизациейПоСторонам.Подписан
		|					КОНЕЦ
		|				КОГДА ВидыДокументов.ВариантПодписания = ЗНАЧЕНИЕ(Перечисление.ВариантыПодписания.МыИКонтрагенты)
		|					ТОГДА ВЫБОР
		|						КОГДА НЕ РезультатыПодписанияПоДействиям.Подписан ЕСТЬ NULL
		|							ТОГДА РезультатыПодписанияПоДействиям.Подписан
		|							И ПодписаниеКонтрагентомПоСторонам.Подписан
		|						ИНАЧЕ ПодписаниеОрганизациейПоСторонам.Подписан
		|						И ПодписаниеКонтрагентомПоСторонам.Подписан
		|					КОНЕЦ
		|				КОГДА ВидыДокументов.ВариантПодписания = ЗНАЧЕНИЕ(Перечисление.ВариантыПодписания.ТолькоКонтрагенты)
		|					ТОГДА ПодписаниеКонтрагентомПоСторонам.Подписан
		|			КОНЕЦ
		|		КОГДА ВидыДокументов.ЯвляетсяИсходящейКорреспонденцией
		|			ТОГДА ВЫБОР
		|				КОГДА НЕ РезультатыПодписанияПоДействиям.Подписан ЕСТЬ NULL
		|					ТОГДА РезультатыПодписанияПоДействиям.Подписан
		|				ИНАЧЕ ПодписаниеОрганизациейПоРеквизитам.Подписан
		|			КОНЕЦ
		|		КОГДА ВидыДокументов.ЯвляетсяВходящейКорреспонденцией
		|			ТОГДА ПодписаниеКонтрагентомПоРеквизитам.Подписан
		|		КОГДА ВидыДокументов.ВестиУчетПоОрганизациям
		|		И ВидыДокументов.ВестиУчетПоКонтрагентам
		|			ТОГДА ВЫБОР
		|				КОГДА НЕ РезультатыПодписанияПоДействиям.Подписан ЕСТЬ NULL
		|					ТОГДА РезультатыПодписанияПоДействиям.Подписан
		|				ИНАЧЕ ПодписаниеОрганизациейПоРеквизитам.Подписан
		|			КОНЕЦ
		|			И ПодписаниеКонтрагентомПоРеквизитам.Подписан
		|		КОГДА ВидыДокументов.ВестиУчетПоОрганизациям
		|			ТОГДА ПодписаниеОрганизациейПоРеквизитам.Подписан
		|		КОГДА ВидыДокументов.ВестиУчетПоКонтрагентам
		|			ТОГДА ПодписаниеКонтрагентомПоРеквизитам.Подписан
		|		КОГДА НЕ РезультатыПодписанияПоДействиям.Подписан ЕСТЬ NULL
		|			ТОГДА РезультатыПодписанияПоДействиям.Подписан
		|	КОНЕЦ КАК Подписан
		|ПОМЕСТИТЬ ИтоговаяТаблица
		|ИЗ
		|	Справочник.ДокументыПредприятия КАК Документы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыДокументов КАК ВидыДокументов
		|		ПО (Документы.ВидДокумента = ВидыДокументов.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПодписаниеОрганизациейПоСторонам КАК ПодписаниеОрганизациейПоСторонам
		|		ПО (Документы.Ссылка = ПодписаниеОрганизациейПоСторонам.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПодписаниеОрганизациейПоРеквизитам КАК ПодписаниеОрганизациейПоРеквизитам
		|		ПО (Документы.Ссылка = ПодписаниеОрганизациейПоРеквизитам.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПодписаниеКонтрагентомПоСторонам КАК ПодписаниеКонтрагентомПоСторонам
		|		ПО (Документы.Ссылка = ПодписаниеКонтрагентомПоСторонам.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПодписаниеКонтрагентомПоРеквизитам КАК ПодписаниеКонтрагентомПоРеквизитам
		|		ПО (Документы.Ссылка = ПодписаниеКонтрагентомПоРеквизитам.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РезультатыПодписанияПоДействиям КАК РезультатыПодписанияПоДействиям
		|		ПО (Документы.Ссылка = РезультатыПодписанияПоДействиям.Ссылка)
		|ГДЕ
		|	НЕ Документы.ПометкаУдаления
		|	И Документы.ПодписанУтвержден ПОДОБНО ""%Не подписан%""
		|	И НЕ ВидыДокументов.ЯвляетсяЗаявкойНаОплату
		|	И (ВидыДокументов.ВестиУчетСторон
		|	ИЛИ ВидыДокументов.ВестиУчетПоКонтрагентам
		|	ИЛИ ВидыДокументов.ВестиУчетПоОрганизациям
		|	ИЛИ НЕ РезультатыПодписанияПоДействиям.Подписан ЕСТЬ NULL)";
	
	ОкончаниеЗапросаДляКоличества = "
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(ИтоговаяТаблица.Ссылка) КАК Ссылка
		|ИЗ
		|	ИтоговаяТаблица КАК ИтоговаяТаблица
		|ГДЕ
		|	ИтоговаяТаблица.Подписан";
	
	ОкончаниеЗапросаДляОбработки = "
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 500
		|	ИтоговаяТаблица.Ссылка КАК Ссылка
		|ИЗ
		|	ИтоговаяТаблица КАК ИтоговаяТаблица
		|ГДЕ
		|	ИтоговаяТаблица.Подписан
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИтоговаяТаблица.Ссылка.ДатаСоздания УБЫВ";
	
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		ЗапросКоличестваДокументов = Новый Запрос;
		ЗапросКоличестваДокументов.Текст = ТекстЗапроса + Символы.ВК + ";" + Символы.ВК + ОкончаниеЗапросаДляКоличества;
		Параметры.ПрогрессВыполнения.ВсегоОбъектов = ЗапросКоличестваДокументов.Выполнить().Выгрузить()[0].Ссылка;
	КонецЕсли;
	
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	ЗапросДокументов = Новый Запрос;
	ЗапросДокументов.Текст = ТекстЗапроса + Символы.ВК + ";" + Символы.ВК + ОкончаниеЗапросаДляОбработки;
	ДокументыКОбработке = ЗапросДокументов.Выполнить().Выгрузить(); 
	
	Для Каждого СтрокаКОбработке Из ДокументыКОбработке Цикл
		
		НачатьТранзакцию();
		
		Документ = СтрокаКОбработке.Ссылка; 
						
		Попытка
			
			БлокировкаДанных = Новый БлокировкаДанных;

			ЭлементБлокировки = БлокировкаДанных.Добавить("Справочник.ДокументыПредприятия");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Документ);

			ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.ДанныеДокументовПредприятия");
			ЭлементБлокировки.УстановитьЗначение("Документ", Документ);

			БлокировкаДанных.Заблокировать();
			

			ДокументОбъект = Документ.ПолучитьОбъект();
			ДокументОбъект.ПодписанУтвержден = Делопроизводство.СтрокаПодписалУтвердил(ДокументОбъект);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
			Делопроизводство.ЗаписатьДанныеДокумента(
				Документ, "ПодписанУтвержден", ДокументОбъект.ПодписанУтвержден);
					
			ЗафиксироватьТранзакцию();
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать объект: %1 по причине:
													|%2'"),
				Документ,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстСообщения);
					
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_7_28 не удалось обработать некоторые документы (пропущены): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = ОбработаноОбъектов = 0;
	
	ПараметрыСеанса.ЗагрузкаОбработанныхДанныхИзДругойСистемы = Ложь;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_7_31(Параметры) Экспорт
	
	ОбъектМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
		Метаданные.Документы.Задача);
	Дескриптор = ДокументооборотПраваДоступаПовтИсп.ПолучитьИндивидуальныйДескриптор(
		ОбъектМетаданных,
		Справочники.Проекты.ПустаяСсылка(),
		Ложь); 
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	РегистрСведений.ДескрипторыДляОбъектов КАК ДескрипторыДляОбъектов
			|ГДЕ
			|	ДескрипторыДляОбъектов.Дескриптор = &Дескриптор");
		
		Запрос.УстановитьПараметр("Дескриптор", Дескриптор);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		Параметры.ПрогрессВыполнения.ВсегоОбъектов = Выборка.Количество;
		
	КонецЕсли; 
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДескрипторыДляОбъектов.Объект КАК Ссылка
		|ИЗ
		|	РегистрСведений.ДескрипторыДляОбъектов КАК ДескрипторыДляОбъектов
		|ГДЕ
		|	ДескрипторыДляОбъектов.Дескриптор = &Дескриптор");
	
	Запрос.УстановитьПараметр("Дескриптор", Дескриптор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			ДокументооборотПраваДоступа.ОпределитьДескрипторыОбъекта(Выборка.Ссылка);
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать объект: %1 по причине:
					|%2'"),
				Выборка.Ссылка,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		
		ТекстСообщения =
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_7_31 не удалось обработать все объекты.'");
		
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = ОбработаноОбъектов = 0;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_8_2() Экспорт
	
	Константы.СпособСогласованияВРежимеЗамечаний.Установить(
		Перечисления.СпособыСогласованияВРежимеЗамечаний.MicrosoftOfficeWord);
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_8_4() Экспорт
	
	ОбновлениеИнформационнойБазыДокументооборот.СоздатьВидБизнесСобытий(
		Справочники.ВидыБизнесСобытий.ОтменаВыполненияЗадачи,
		НСтр("ru='Задачи: отмена выполнения'"));
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_8_5() Экспорт
	
	РегистрыСведений.НастройкиУведомлений.ЗаполнитьПодпискиПоУмолчанию();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_8_6(Параметры) Экспорт
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.ДействияПодписания КАК Действия
			|ГДЕ
			|	Действия.ПорядокВыполненияУчастниками = Значение(Перечисление.ПорядокВыполненияЭтапаДействия.ПустаяСсылка)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.ДействияСогласования КАК Действия
			|ГДЕ
			|	Действия.ПорядокВыполненияУчастниками = Значение(Перечисление.ПорядокВыполненияЭтапаДействия.ПустаяСсылка)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.НастройкиДействийПодписания КАК НастройкиДействий
			|ГДЕ
			|	НастройкиДействий.ПорядокВыполненияУчастниками = Значение(Перечисление.ПорядокВыполненияЭтапаДействия.ПустаяСсылка)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.НастройкиДействийСогласования КАК НастройкиДействий
			|ГДЕ
			|	НастройкиДействий.ПорядокВыполненияУчастниками = Значение(Перечисление.ПорядокВыполненияЭтапаДействия.ПустаяСсылка)");
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Параметры.ПрогрессВыполнения.ВсегоОбъектов = Параметры.ПрогрессВыполнения.ВсегоОбъектов + Выборка.Количество;
		КонецЦикла;
		
	КонецЕсли; 
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 300
		|	Действия.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ДействияПодписания КАК Действия
		|ГДЕ
		|	Действия.ПорядокВыполненияУчастниками = Значение(Перечисление.ПорядокВыполненияЭтапаДействия.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 300
		|	Действия.Ссылка
		|ИЗ
		|	Справочник.ДействияСогласования КАК Действия
		|ГДЕ
		|	Действия.ПорядокВыполненияУчастниками = Значение(Перечисление.ПорядокВыполненияЭтапаДействия.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 300
		|	НастройкиДействий.Ссылка
		|ИЗ
		|	Справочник.НастройкиДействийПодписания КАК НастройкиДействий
		|ГДЕ
		|	НастройкиДействий.ПорядокВыполненияУчастниками = Значение(Перечисление.ПорядокВыполненияЭтапаДействия.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 300
		|	НастройкиДействий.Ссылка
		|ИЗ
		|	Справочник.НастройкиДействийСогласования КАК НастройкиДействий
		|ГДЕ
		|	НастройкиДействий.ПорядокВыполненияУчастниками = Значение(Перечисление.ПорядокВыполненияЭтапаДействия.ПустаяСсылка)");

	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			
			Блокировка = Новый БлокировкаДанных();
			ЭлементБлокировки = Блокировка.Добавить(ОбщегоНазначения.ИмяТаблицыПоСсылке(Выборка.Ссылка));
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			ДействиеНастройкаОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если (ДействияКлиентСервер.ЭтоДействиеПодписания(Выборка.Ссылка) 
				Или ТипЗнч(Выборка.Ссылка) = Тип("СправочникСсылка.НастройкиДействийПодписания"))
				И ДействиеНастройкаОбъект.СпособПодписания = Перечисления.СпособыПодписанияПредметаДействия.НаБумаге Тогда
				ДействиеНастройкаОбъект.ПорядокВыполненияУчастниками = Перечисления.ПорядокВыполненияЭтапаДействия.Последовательно;
			Иначе
				ДействиеНастройкаОбъект.ПорядокВыполненияУчастниками = Перечисления.ПорядокВыполненияЭтапаДействия.Параллельно;
			КонецЕсли;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДействиеНастройкаОбъект);
			
			РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать действие/настройку: %1 по причине:
					|%2'"),
				Выборка.Ссылка,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка, , ,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		
		ТекстСообщения =
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_8_6 не удалось обработать все объекты.'");
		
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = ОбработаноОбъектов = 0;
	
КонецПроцедуры

// Разрешает ручное редактирование РГ в видах мероприятий и проектов
Процедура ПерейтиНаВерсию_3_0_8_8() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыМероприятий.Ссылка
	|ИЗ
	|	Справочник.ВидыМероприятий КАК ВидыМероприятий
	|ГДЕ
	|	НЕ ВидыМероприятий.РазрешитьРучноеИзменениеСписковДоступа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыПроектов.Ссылка
	|ИЗ
	|	Справочник.ВидыПроектов КАК ВидыПроектов
	|ГДЕ
	|	НЕ ВидыПроектов.РазрешитьРучноеИзменениеСписковДоступа";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.РазрешитьРучноеИзменениеСписковДоступа = Истина;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
		
	КонецЦикла;
	
КонецПроцедуры

// Удаляет настройки доступности для виз согласования
Процедура ПерейтиНаВерсию_3_0_8_9() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиДоступности.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НастройкиДоступностиПоСостоянию.НастройкиДоступности КАК НастройкиДоступности
	|ГДЕ
	|	НастройкиДоступности.ИмяПоляКоманды = ""ВизыСогласования""";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
	 	СтруктураДляПоиска = Новый Структура("ИмяПоляКоманды", "ВизыСогласования"); 
		МассивНастроек = Объект.НастройкиДоступности.НайтиСтроки(СтруктураДляПоиска);
		Если МассивНастроек.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли; 
	      
		Для Каждого Строка Из МассивНастроек Цикл 
	    	Объект.НастройкиДоступности.Удалить(Строка); 
	    КонецЦикла; 

		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_8_11() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПравилаЭскалацииЗадач.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПравилаЭскалации КАК ПравилаЭскалацииЗадач
	|ГДЕ
	|	ПравилаЭскалацииЗадач.ТипПредметаЭскалации = ЗНАЧЕНИЕ(Перечисление.ТипыПредметовЭскалации.ПустаяССылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.ТипПредметаЭскалации = Перечисления.ТипыПредметовЭскалации.Процессы;

		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_8_12(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ПустойИД", 
		ОбщегоНазначенияДокументооборотКлиентСервер.ПустойУникальныйИдентификатор());
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДействияЭтапы.Ссылка КАК Действие
			|ПОМЕСТИТЬ ВсеСогласования
			|ИЗ
			|	Справочник.ДействияСогласования.Этапы КАК ДействияЭтапы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДействияЭтапы.Ссылка КАК Действие
			|ПОМЕСТИТЬ ВсеПодписания
			|ИЗ
			|	Справочник.ДействияПодписания.Этапы КАК ДействияЭтапы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДействияУчастники.Ссылка КАК Действие,
			|	ДействияУчастники.Идентификатор КАК Идентификатор,
			|	ДействияУчастники.ИдентификаторЭтапа КАК ИдентификаторЭтапа
			|ПОМЕСТИТЬ ВсеУчастникиСогласования
			|ИЗ
			|	Справочник.ДействияСогласования.Участники КАК ДействияУчастники
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеСогласования КАК ВсеСогласования
			|		ПО (ВсеСогласования.Действие = ДействияУчастники.Ссылка)
			|ГДЕ
			|	ДействияУчастники.ИдентификаторЭтапа <> &ПустойИД
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДействияУчастники.Ссылка КАК Действие,
			|	ДействияУчастники.Идентификатор КАК Идентификатор,
			|	ДействияУчастники.ИдентификаторЭтапа КАК ИдентификаторЭтапа
			|ПОМЕСТИТЬ ВсеУчастникиПодписания
			|ИЗ
			|	Справочник.ДействияПодписания.Участники КАК ДействияУчастники
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеПодписания КАК ВсеПодписания
			|		ПО (ВсеПодписания.Действие = ДействияУчастники.Ссылка)
			|ГДЕ
			|	ДействияУчастники.ИдентификаторЭтапа <> &ПустойИД
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(СостоянияДействий.Состояние) КАК Количество
			|ИЗ
			|	РегистрСведений.СостоянияДействий КАК СостоянияДействий
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеУчастникиСогласования КАК ВсеУчастникиСогласования
			|		ПО (ВсеУчастникиСогласования.Действие = СостоянияДействий.Действие)
			|		И ВсеУчастникиСогласования.Идентификатор = СостоянияДействий.ИдентификаторУчастника
			|ГДЕ
			|	СостоянияДействий.ИдентификаторПункта = &ПустойИД
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(СостоянияДействий.Состояние)
			|ИЗ
			|	РегистрСведений.СостоянияДействий КАК СостоянияДействий
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеУчастникиПодписания КАК ВсеУчастникиПодписания
			|		ПО (ВсеУчастникиПодписания.Действие = СостоянияДействий.Действие)
			|		И ВсеУчастникиПодписания.Идентификатор = СостоянияДействий.ИдентификаторУчастника
			|ГДЕ
			|	СостоянияДействий.ИдентификаторПункта = &ПустойИД
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(РезультатыДействий.Результат)
			|ИЗ
			|	РегистрСведений.РезультатыДействий КАК РезультатыДействий
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеУчастникиПодписания КАК ВсеУчастникиПодписания
			|		ПО (ВсеУчастникиПодписания.Действие = РезультатыДействий.Действие)
			|		И ВсеУчастникиПодписания.Идентификатор = РезультатыДействий.ИдентификаторУчастника
			|ГДЕ
			|	РезультатыДействий.ИдентификаторПункта = &ПустойИД
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(РезультатыДействий.Результат)
			|ИЗ
			|	РегистрСведений.РезультатыДействий КАК РезультатыДействий
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеУчастникиСогласования КАК ВсеУчастникиСогласования
			|		ПО (ВсеУчастникиСогласования.Действие = РезультатыДействий.Действие)
			|		И ВсеУчастникиСогласования.Идентификатор = РезультатыДействий.ИдентификаторУчастника
			|ГДЕ
			|	РезультатыДействий.ИдентификаторПункта = &ПустойИД";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Параметры.ПрогрессВыполнения.ВсегоОбъектов = Параметры.ПрогрессВыполнения.ВсегоОбъектов + Выборка.Количество;
		КонецЦикла;
	КонецЕсли; 
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДействияЭтапы.Ссылка КАК Действие
		|ПОМЕСТИТЬ ВсеСогласования
		|ИЗ
		|	Справочник.ДействияСогласования.Этапы КАК ДействияЭтапы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДействияЭтапы.Ссылка КАК Действие
		|ПОМЕСТИТЬ ВсеПодписания
		|ИЗ
		|	Справочник.ДействияПодписания.Этапы КАК ДействияЭтапы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДействияУчастники.Ссылка КАК Действие,
		|	ДействияУчастники.Идентификатор КАК Идентификатор,
		|	ДействияУчастники.ИдентификаторЭтапа КАК ИдентификаторЭтапа
		|ПОМЕСТИТЬ ВсеУчастникиСогласования
		|ИЗ
		|	Справочник.ДействияСогласования.Участники КАК ДействияУчастники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеСогласования КАК ВсеСогласования
		|		ПО (ВсеСогласования.Действие = ДействияУчастники.Ссылка)
		|ГДЕ
		|	ДействияУчастники.ИдентификаторЭтапа <> &ПустойИД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДействияУчастники.Ссылка КАК Действие,
		|	ДействияУчастники.Идентификатор КАК Идентификатор,
		|	ДействияУчастники.ИдентификаторЭтапа КАК ИдентификаторЭтапа
		|ПОМЕСТИТЬ ВсеУчастникиПодписания
		|ИЗ
		|	Справочник.ДействияПодписания.Участники КАК ДействияУчастники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеПодписания КАК ВсеПодписания
		|		ПО (ВсеПодписания.Действие = ДействияУчастники.Ссылка)
		|ГДЕ
		|	ДействияУчастники.ИдентификаторЭтапа <> &ПустойИД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 5000
		|	СостоянияДействий.Состояние,
		|	СостоянияДействий.Действие,
		|	СостоянияДействий.ИдентификаторУчастника,
		|	СостоянияДействий.Функция,
		|	СостоянияДействий.Участник,
		|	СостоянияДействий.Дата,
		|	СостоянияДействий.ИдентификаторПункта,
		|	ВсеУчастникиСогласования.ИдентификаторЭтапа
		|ИЗ
		|	РегистрСведений.СостоянияДействий КАК СостоянияДействий
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеУчастникиСогласования КАК ВсеУчастникиСогласования
		|		ПО (ВсеУчастникиСогласования.Действие = СостоянияДействий.Действие)
		|		И ВсеУчастникиСогласования.Идентификатор = СостоянияДействий.ИдентификаторУчастника
		|ГДЕ
		|	СостоянияДействий.ИдентификаторПункта = &ПустойИД
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 5000
		|	СостоянияДействий.Состояние,
		|	СостоянияДействий.Действие,
		|	СостоянияДействий.ИдентификаторУчастника,
		|	СостоянияДействий.Функция,
		|	СостоянияДействий.Участник,
		|	СостоянияДействий.Дата,
		|	СостоянияДействий.ИдентификаторПункта,
		|	ВсеУчастникиПодписания.ИдентификаторЭтапа
		|ИЗ
		|	РегистрСведений.СостоянияДействий КАК СостоянияДействий
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеУчастникиПодписания КАК ВсеУчастникиПодписания
		|		ПО (ВсеУчастникиПодписания.Действие = СостоянияДействий.Действие)
		|		И ВсеУчастникиПодписания.Идентификатор = СостоянияДействий.ИдентификаторУчастника
		|ГДЕ
		|	СостоянияДействий.ИдентификаторПункта = &ПустойИД";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	// Сначала обновим состояния действий
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			БлокировкаДанных = Новый БлокировкаДанных;
			ЭлементБлокировки = 
				БлокировкаДанных.Добавить("РегистрСведений.СостоянияДействий");
			ЭлементБлокировки.УстановитьЗначение("Действие", Выборка.Действие);
			БлокировкаДанных.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.СостоянияДействий.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Действие.Установить(Выборка.Действие);
			НаборЗаписей.Отбор.ИдентификаторПункта.Установить(Выборка.ИдентификаторПункта);
			НаборЗаписей.Отбор.ИдентификаторУчастника.Установить(Выборка.ИдентификаторУчастника);
			НаборЗаписей.Отбор.Участник.Установить(Выборка.Участник);
			НаборЗаписей.Отбор.Функция.Установить(Выборка.Функция);
			
			// Сначала удалим
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			НаборЗаписей = РегистрыСведений.СостоянияДействий.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Действие.Установить(Выборка.Действие);
			НаборЗаписей.Отбор.ИдентификаторПункта.Установить(Выборка.ИдентификаторЭтапа);
			НаборЗаписей.Отбор.ИдентификаторУчастника.Установить(Выборка.ИдентификаторУчастника);
			НаборЗаписей.Отбор.Участник.Установить(Выборка.Участник);
			НаборЗаписей.Отбор.Функция.Установить(Выборка.Функция);
			
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() > 0 Тогда
				ЗаписьРегистра = НаборЗаписей[0];
			Иначе
				ЗаписьРегистра = НаборЗаписей.Добавить();
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Выборка);
			ЗаписьРегистра.ИдентификаторПункта = Выборка.ИдентификаторЭтапа;			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать объект: %1 по причине:
					|%2'"),
				Выборка.Действие,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	// Теперь заполним Результаты действий
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДействияЭтапы.Ссылка КАК Действие
		|ПОМЕСТИТЬ ВсеСогласования
		|ИЗ
		|	Справочник.ДействияСогласования.Этапы КАК ДействияЭтапы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДействияЭтапы.Ссылка КАК Действие
		|ПОМЕСТИТЬ ВсеПодписания
		|ИЗ
		|	Справочник.ДействияПодписания.Этапы КАК ДействияЭтапы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДействияУчастники.Ссылка КАК Действие,
		|	ДействияУчастники.Идентификатор КАК Идентификатор,
		|	ДействияУчастники.ИдентификаторЭтапа КАК ИдентификаторЭтапа
		|ПОМЕСТИТЬ ВсеУчастникиСогласования
		|ИЗ
		|	Справочник.ДействияСогласования.Участники КАК ДействияУчастники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеСогласования КАК ВсеСогласования
		|		ПО (ВсеСогласования.Действие = ДействияУчастники.Ссылка)
		|ГДЕ
		|	ДействияУчастники.ИдентификаторЭтапа <> &ПустойИД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДействияУчастники.Ссылка КАК Действие,
		|	ДействияУчастники.Идентификатор КАК Идентификатор,
		|	ДействияУчастники.ИдентификаторЭтапа КАК ИдентификаторЭтапа
		|ПОМЕСТИТЬ ВсеУчастникиПодписания
		|ИЗ
		|	Справочник.ДействияПодписания.Участники КАК ДействияУчастники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеПодписания КАК ВсеПодписания
		|		ПО (ВсеПодписания.Действие = ДействияУчастники.Ссылка)
		|ГДЕ
		|	ДействияУчастники.ИдентификаторЭтапа <> &ПустойИД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 5000
		|	РезультатыДействий.Результат,
		|	РезультатыДействий.Действие,
		|	РезультатыДействий.ИдентификаторУчастника,
		|	РезультатыДействий.Функция,
		|	РезультатыДействий.Участник,
		|	РезультатыДействий.Дата,
		|	РезультатыДействий.ИдентификаторПункта,
		|	ВсеУчастникиСогласования.ИдентификаторЭтапа
		|ИЗ
		|	РегистрСведений.РезультатыДействий КАК РезультатыДействий
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеУчастникиСогласования КАК ВсеУчастникиСогласования
		|		ПО (ВсеУчастникиСогласования.Действие = РезультатыДействий.Действие)
		|		И ВсеУчастникиСогласования.Идентификатор = РезультатыДействий.ИдентификаторУчастника
		|ГДЕ
		|	РезультатыДействий.ИдентификаторПункта = &ПустойИД
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 5000
		|	РезультатыДействий.Результат,
		|	РезультатыДействий.Действие,
		|	РезультатыДействий.ИдентификаторУчастника,
		|	РезультатыДействий.Функция,
		|	РезультатыДействий.Участник,
		|	РезультатыДействий.Дата,
		|	РезультатыДействий.ИдентификаторПункта,
		|	ВсеУчастникиПодписания.ИдентификаторЭтапа
		|ИЗ
		|	РегистрСведений.РезультатыДействий КАК РезультатыДействий
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеУчастникиПодписания КАК ВсеУчастникиПодписания
		|		ПО (ВсеУчастникиПодписания.Действие = РезультатыДействий.Действие)
		|		И ВсеУчастникиПодписания.Идентификатор = РезультатыДействий.ИдентификаторУчастника
		|ГДЕ
		|	РезультатыДействий.ИдентификаторПункта = &ПустойИД";
	
	Выборка = Запрос.Выполнить().Выбрать();

	// Сначала обновим состояния действий
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			БлокировкаДанных = Новый БлокировкаДанных;
			ЭлементБлокировки = 
				БлокировкаДанных.Добавить("РегистрСведений.РезультатыДействий");
			ЭлементБлокировки.УстановитьЗначение("Действие", Выборка.Действие);
			БлокировкаДанных.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.РезультатыДействий.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Действие.Установить(Выборка.Действие);
			НаборЗаписей.Отбор.ИдентификаторПункта.Установить(Выборка.ИдентификаторПункта);
			НаборЗаписей.Отбор.ИдентификаторУчастника.Установить(Выборка.ИдентификаторУчастника);
			НаборЗаписей.Отбор.Участник.Установить(Выборка.Участник);
			НаборЗаписей.Отбор.Функция.Установить(Выборка.Функция);
			
			// Сначала удалим
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			НаборЗаписей = РегистрыСведений.РезультатыДействий.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Действие.Установить(Выборка.Действие);
			НаборЗаписей.Отбор.ИдентификаторПункта.Установить(Выборка.ИдентификаторЭтапа);
			НаборЗаписей.Отбор.ИдентификаторУчастника.Установить(Выборка.ИдентификаторУчастника);
			НаборЗаписей.Отбор.Участник.Установить(Выборка.Участник);
			НаборЗаписей.Отбор.Функция.Установить(Выборка.Функция);
			
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() > 0 Тогда
				ЗаписьРегистра = НаборЗаписей[0];
			Иначе
				ЗаписьРегистра = НаборЗаписей.Добавить();
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Выборка);
			ЗаписьРегистра.ИдентификаторПункта = Выборка.ИдентификаторЭтапа;	
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать объект: %1 по причине:
					|%2'"),
				Выборка.Действие,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		
		ТекстСообщения =
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_8_12 не удалось обработать все объекты.'");
		
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = ОбработаноОбъектов = 0;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_8_15() Экспорт
	
	РегистрыСведений.ПраваРолей.ОбновитьДанныеРегистра();
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Организации.Ссылка КАК Ссылка,
		|	ОрганизацииДоступ.Участник КАК Участник
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.Доступ КАК ОрганизацииДоступ
		|		ПО (ОрганизацииДоступ.Ссылка = Организации.Ссылка)
		|ГДЕ
		|	ОрганизацииДоступ.Участник ЕСТЬ NULL";
	
	РГВсеПользователи = Справочники.РабочиеГруппы.ВсеПользователи;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.Доступ.Добавить().Участник = РГВсеПользователи;

		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
		ДокументооборотПраваДоступа.ОбновитьПраваПоЗначениюРазрезаДоступа(Выборка.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_8_16() Экспорт
	
	Справочники.АлгоритмыПроверки.ЗаполнитьПоставляемыеДанные();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_8_17() Экспорт
	
	ОбновлениеИнформационнойБазыДокументооборот.ЗаполнитьНастройкиВариантовОтчетовДокументооборот();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_8_19() Экспорт
	
	// С СВ нельзя работать без пользователя, установим пользователя регзаданию ОбновлениеОбсуждений
	РеглЗадание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.ОбновлениеОбсуждений);
	РеглЗадание.ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	РеглЗадание.Записать();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_8_20() Экспорт
	
	КалендарныеГрафики.СоздатьПроизводственныйКалендарьНа2023Год(); 
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_9_2() Экспорт
	
	Константы.ИспользоватьОтложенноеНачалоВыполненияДействий.Установить(Истина); 
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_9_3() Экспорт
	
	Константы.КачествоПреобразованияPDFДляПредпросмотра.Установить(150); 
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_9_4() Экспорт
	
	ВладелецТокена = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("РегистрСведений.СклоненияПредставленийОбъектов");
	Токен = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ВладелецТокена, "ТокенДоступаКСервисуMorpher", Истина);
	
	Если Не ЗначениеЗаполнено(Токен) Тогда
		Константы.ИспользоватьСервисСклоненияMorpher.Установить(Ложь); 
	КонецЕсли;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_9_6() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	УдалитьСообщенияPushУведомлений.ОбъектУведомления,
		|	УдалитьСообщенияPushУведомлений.Пользователь,
		|	УдалитьСообщенияPushУведомлений.Сообщение,
		|	УдалитьСообщенияPushУведомлений.ДатаОтправки
		|ИЗ
		|	РегистрСведений.УдалитьСообщенияPushУведомлений КАК УдалитьСообщенияPushУведомлений";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
		
	Пока Выборка.Следующий() Цикл
		НачатьТранзакцию();
		
		МП_ОтправкаУведомлений.ЗаписатьСообщениеВРегистрPushУведомления(Выборка.Пользователь,
			Выборка.ОбъектУведомления,
			Выборка.ДатаОтправки,
			Выборка.Сообщение);
			
		НаборЗаписейДляОчистки = РегистрыСведений.УдалитьСообщенияPushУведомлений.СоздатьНаборЗаписей();
		НаборЗаписейДляОчистки.Отбор.Пользователь.Установить(Выборка.Пользователь);
		НаборЗаписейДляОчистки.Отбор.ОбъектУведомления.Установить(Выборка.ОбъектУведомления);
		НаборЗаписейДляОчистки.Отбор.Сообщение.Установить(Выборка.Сообщение);
		НаборЗаписейДляОчистки.Записать();
		
		ЗафиксироватьТранзакцию();
	КонецЦикла;
		
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_9_9(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СостоянияСрезПоследних.ДелоХраненияДокументов КАК ДелоХраненияДокументов,
			|	СостоянияСрезПоследних.Состояние КАК СостояниеРанее
			|ПОМЕСТИТЬ ВсеДела
			|ИЗ
			|	РегистрСведений.СостоянияДелХраненияДокументов.СрезПоследних(&Период,) КАК СостоянияСрезПоследних
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	РегистрСведений.ДанныеДокументовПредприятия КАК Документы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеДела КАК ВсеДела
			|		ПО (ВсеДела.ДелоХраненияДокументов = Документы.Дело)
			|ГДЕ
			|	Документы.СостояниеДелаХранения <> ВсеДела.СостояниеРанее";
		
		Запрос.Параметры.Вставить("Период", ТекущаяДатаСеанса());
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Параметры.ПрогрессВыполнения.ВсегоОбъектов = 
				Параметры.ПрогрессВыполнения.ВсегоОбъектов + Выборка.Количество;
		КонецЦикла;
		
	КонецЕсли; 
	
	// Заполнение данных
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СостоянияСрезПоследних.ДелоХраненияДокументов КАК ДелоХраненияДокументов,
		|	СостоянияСрезПоследних.Состояние КАК СостояниеРанее
		|ПОМЕСТИТЬ ВсеДела
		|ИЗ
		|	РегистрСведений.СостоянияДелХраненияДокументов.СрезПоследних(&Период,) КАК СостоянияСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1000
		|	Документы.Документ,
		|	Документы.ДатаСортировки,
		|	Документы.ПометкаУдаления,
		|	Документы.СостояниеДелаХранения,
		|	ВсеДела.ДелоХраненияДокументов,
		|	ВсеДела.СостояниеРанее КАК СостояниеДела
		|ИЗ
		|	РегистрСведений.ДанныеДокументовПредприятия КАК Документы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеДела КАК ВсеДела
		|		ПО (ВсеДела.ДелоХраненияДокументов = Документы.Дело)
		|ГДЕ
		|	Документы.СостояниеДелаХранения <> ВсеДела.СостояниеРанее";
	Запрос.Параметры.Вставить("Период", ТекущаяДатаСеанса());
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			// Запишем новый набор записей.
			НаборЗаписей = РегистрыСведений.ДанныеДокументовПредприятия.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(Выборка.Документ);
			НаборЗаписей.Отбор.ДатаСортировки.Установить(Выборка.ДатаСортировки);
			НаборЗаписей.Отбор.ПометкаУдаления.Установить(Выборка.ПометкаУдаления);
			
			НаборЗаписей.Прочитать();
	
			Если НаборЗаписей.Количество() > 0 Тогда
				ЗаписьРегистра = НаборЗаписей[0];
			Иначе
				ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
				Продолжить;
			КонецЕсли;
			
			ЗаписьРегистра.СостояниеДелаХранения = Выборка.СостояниеДела;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение

			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать объект: %1 по причине:
					|%2'"),
				Выборка.Документ,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстСообщения);
					
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_9_9 не удалось обработать некоторые документы (пропущены): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Если ОбработаноОбъектов > 0 Тогда
		Делопроизводство.УстановитьИспользуетсяПередачаДелХранения();
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = ОбработаноОбъектов = 0;	
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_9_10() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПравилаОбработкиПисем.Ссылка
	|ИЗ
	|	Справочник.ПравилаОбработкиПисем КАК ПравилаОбработкиПисем
	|ГДЕ
	|	ПравилаОбработкиПисем.ПометкаУдаления = ЛОЖЬ
	|	И ПравилаОбработкиПисем.Описание = """"";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Правило = Выборка.Ссылка;
		ДляРеквизита = Истина;
		Описание = Справочники.ПравилаОбработкиПисем.ПолучитьОписаниеПравила(Правило, ДляРеквизита);
		
		ПравилоОбъект = Правило.ПолучитьОбъект();
		ПравилоОбъект.Описание = Описание;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПравилоОбъект);	
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_9_11() Экспорт
	
	Справочники.АвтоподстановкиДляОбъектов.ЗаполнитьПредопределенные();
	Справочники.АлгоритмыПроверки.ЗаполнитьПоставляемыеДанные();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_9_12() Экспорт
	
	РегистрыСведений.ПодчиненностьПодразделений.ОбновитьДанныеПолностью();
	
	РегистрыСведений.СотрудникиВКонтейнерах.ОбновитьДанныеПолностью();
	
	РегистрыСведений.СоставСубъектовПравДоступа.ОбновитьВсеДанные(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка КАК Подразделение
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	СтруктураПредприятия.Родитель <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|	И СтруктураПредприятия.Руководитель В (&ПустыеЗначенияСотрудников)";
	Запрос.УстановитьПараметр("ПустыеЗначенияСотрудников", Сотрудники.МассивПустыхСсылокПользователя());
	
	ПодразделенияКПересчету = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Подразделение");
	ДокументооборотПраваДоступа.АктуализироватьПраваСотрудниковПодразделенийПоССПД(ПодразделенияКПересчету);
	
	Справочники.Алгоритмы.ЗаполнитьПредопределенные();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_9_13() Экспорт
	
	ОбновлениеИнформационнойБазыДокументооборот.ЗаполнитьНастройкиВариантовОтчетовДокументооборот();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_9_15() Экспорт
	
	Справочники.АвтоподстановкиДляПроцессов.ЗаполнитьПредопределенные();
	
КонецПроцедуры

// Заменяет состояние "Исполнен" на "На исполнении" для предметов обработки,
// у которых есть незавершенные задачи проверяющих
Процедура ПерейтиНаВерсию_3_0_9_16() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТекущиеСостоянияДокументов.Документ КАК Предмет,
	|	ТекущиеСостоянияДокументов.Действие,
	|	ТекущиеСостоянияДокументов.ДатаУстановки,
	|	ТекущиеСостоянияДокументов.Установил
	|ИЗ
	|	РегистрСведений.ТекущиеСостоянияДокументов КАК ТекущиеСостоянияДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияДействий КАК СостоянияДействий
	|		ПО ТекущиеСостоянияДокументов.Действие = СостоянияДействий.Действие
	|		И СостоянияДействий.Функция = ЗНАЧЕНИЕ(Перечисление.ФункцииУчастниковИсполнения.ОбрабатывающийРезультат)
	|		И СостоянияДействий.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияВыполненияДействий.Выполняется)
	|ГДЕ
	|	ТекущиеСостоянияДокументов.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.Исполнен)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Делопроизводство.ЗаписатьСостояниеДокумента(
			Выборка.Предмет,
			Выборка.ДатаУстановки,
			Перечисления.СостоянияДокументов.НаИсполнении,
			Выборка.Установил,
			Выборка.Действие);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_9_17() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПравилаКоммуникаций КАК Таблица");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЭлементОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ЭлементОбъект.ПодготовитьОграничения();
		ЭлементОбъект.ПодготовитьНазначения(
			ЭлементОбъект.Назначение, ЭлементОбъект.Ограничения.Количество() > 0);
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ЭлементОбъект);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_9_18() Экспорт
	
	Справочники.АвтоподстановкиДляОбъектов.ЗаполнитьПредопределенные();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_1() Экспорт
	
	// Новое бизнес-событие.
	ОбновлениеИнформационнойБазыДокументооборот.СоздатьВидБизнесСобытий(Справочники.ВидыБизнесСобытий.ИзменениеЗадачи, НСтр("ru='Задачи: изменение'"));
	
	// Новая подписка по-умолчанию.
	РегистрыСведений.НастройкиУведомлений.ЗаполнитьПодпискиПоУмолчанию();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_2() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 10000
		|	ОчередьУведомлений.ВидСобытия,
		|	ОчередьУведомлений.Объект,
		|	ОчередьУведомлений.ОбъектПодписки,
		|	ОчередьУведомлений.Пользователь,
		|	ОчередьУведомлений.СпособУведомления,
		|	ОчередьУведомлений.ДополнительноеОписание,
		|	ОчередьУведомлений.КоличествоПопытокОтправки,
		|	ОчередьУведомлений.УдалитьОтметкиВремениИдентификаторНабораЗаписей
		|ИЗ
		|	РегистрСведений.ОчередьУведомлений КАК ОчередьУведомлений
		|ГДЕ
		|	ОчередьУведомлений.ДатаПомещенияВОчередь = ДАТАВРЕМЯ(1, 1, 1)");
	
	ЕстьДанныеКОбработке = Истина;
	
	Пока ЕстьДанныеКОбработке Цикл
		
		ЕстьДанныеКОбработке = Ложь;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ЕстьДанныеКОбработке = Истина;
			
			НаборЗаписей = РегистрыСведений.ОчередьУведомлений.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ВидСобытия.Установить(Выборка.ВидСобытия);
			НаборЗаписей.Отбор.Объект.Установить(Выборка.Объект);
			НаборЗаписей.Отбор.ОбъектПодписки.Установить(Выборка.ОбъектПодписки);
			НаборЗаписей.Отбор.Пользователь.Установить(Выборка.Пользователь);
			НаборЗаписей.Отбор.СпособУведомления.Установить(Выборка.СпособУведомления);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.ВидСобытия = Выборка.ВидСобытия;
			НоваяЗапись.Объект = Выборка.Объект;
			НоваяЗапись.ОбъектПодписки = Выборка.ОбъектПодписки;
			НоваяЗапись.Пользователь = Выборка.Пользователь;
			НоваяЗапись.СпособУведомления = Выборка.СпособУведомления;
			
			НоваяЗапись.ДополнительноеОписание = Выборка.ДополнительноеОписание;
			НоваяЗапись.КоличествоПопытокОтправки = Выборка.КоличествоПопытокОтправки;
			НоваяЗапись.УдалитьОтметкиВремениИдентификаторНабораЗаписей = Выборка.УдалитьОтметкиВремениИдентификаторНабораЗаписей;
			
			НоваяЗапись.ДатаПомещенияВОчередь = ТекущаяДатаСеанса();
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_4() Экспорт

	ИдентификаторПрофиляПользователи = "c999acb1-d5f5-11de-a544-00179ab398dc";
	УправлениеДоступомДокументооборот.ДобавитьРольВПолномочия(
		Метаданные.Роли.БазовыеПраваРаботаСРечью,
		ИдентификаторПрофиляПользователи);
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_5() Экспорт

	Константы.РасширенияФайловICalendar.Установить("ICS ICAL IFB ICALENDAR");
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_6(Параметры) Экспорт
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		
		ЗапросВсегоОбъектов = Новый Запрос(
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(Бронь.Ссылка) КАК Количество
			|ИЗ
			|	Документ.Бронь КАК Бронь
			|ГДЕ
			|	Бронь.СостояниеБрони = ЗНАЧЕНИЕ(Перечисление.СостоянияБроней.ПустаяСсылка)");
		РезультатЗапросаВсего = ЗапросВсегоОбъектов.Выполнить();
		ВыборкаВсегоОбъектов = РезультатЗапросаВсего.Выбрать();
		Параметры.ПрогрессВыполнения.ВсегоОбъектов = ?(ВыборкаВсегоОбъектов.Следующий(), ВыборкаВсегоОбъектов.Количество, 0);
		
	КонецЕсли;
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	// Заполнение реквизита "Состояние брони" документа "Бронь".
	ЗапросПорцииОбъектов = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	Бронь.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Бронь КАК Бронь
		|ГДЕ
		|	Бронь.СостояниеБрони = ЗНАЧЕНИЕ(Перечисление.СостоянияБроней.ПустаяСсылка)");
	
	РезультатЗапросаПорции = ЗапросПорцииОбъектов.Выполнить();
	ВыборкаПорцииОбъектов = РезультатЗапросаПорции.Выбрать();
	Пока ВыборкаПорцииОбъектов.Следующий() Цикл
		
		Попытка
			
			НачатьТранзакцию();
			Попытка
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить("Документ.Бронь");
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПорцииОбъектов.Ссылка);
				Блокировка.Заблокировать();
				
				БроньОбъект = ВыборкаПорцииОбъектов.Ссылка.ПолучитьОбъект();
				Если Не ЗначениеЗаполнено(БроньОбъект.СостояниеБрони) Тогда
					
					Если БроньОбъект.ПометкаУдаления Тогда
						БроньОбъект.СостояниеБрони = Перечисления.СостоянияБроней.Отменена;
						БроньОбъект.ПричинаОтмены = НСтр("ru = 'Бронь помечена на удаление'");
					Иначе
						БроньОбъект.СостояниеБрони = Перечисления.СостоянияБроней.Подтверждена;
					КонецЕсли;
					
					ОбновлениеИнформационнойБазы.ЗаписатьДанные(БроньОбъект);
					
				КонецЕсли;
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				ОтменитьТранзакцию();
				ВызватьИсключение;
			КонецПопытки;
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать бронь %1 по причине:
					|%2'"),
				ВыборкаПорцииОбъектов.Ссылка,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.Бронь,
				ВыборкаПорцииОбъектов.Ссылка,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_10_6 не удалось обработать некоторые брони (пропущены): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = ОбработаноОбъектов = 0;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_7() Экспорт

	ОбновлениеИнформационнойБазыДокументооборот.СоздатьВидБизнесСобытий(Справочники.ВидыБизнесСобытий.ОтменаБрони, НСтр("ru='Брони: отмена'"));
	
	РегистрыСведений.НастройкиУведомлений.ЗаполнитьПодпискиПоУмолчанию();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_8() Экспорт
	
	// Заполненение справочников для МЭДО
	Справочники.ПрофилиГруппДоступа.ОбновитьПоставляемыеПрофили();
	УправлениеДоступомДокументооборот.ДобавитьРольВПолномочия(
		Метаданные.Роли.БазовыеПраваМЭДО, "c999acb1-d5f5-11de-a544-00179ab398dc");
	
	Справочники.ВидыДокументовМЭДО.ПервоначальноеЗаполнение();
	Справочники.ПричиныОтказаВРегистрацииМЭДО.ПервоначальноеЗаполнение();
	Справочники.МестаСоставленияДокументовМЭДО.ПервоначальноеЗаполнение();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_9() Экспорт
	
	// Заполненение констант для МЭДО
	РазмерПорции = Константы.РазмерПорцииОбработкиМЭДО.Получить();
	Если РазмерПорции = 0 Тогда
		// Переход на константу из настройки организации:
		Запрос = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Настройки.УдалитьРазмерПорции
			|ИЗ
			|	РегистрСведений.НастройкиОрганизацийМЭДО КАК Настройки
			|ГДЕ
			|	Настройки.УдалитьРазмерПорции <> 0");
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			РазмерПорции = Выборка.УдалитьРазмерПорции;
		Иначе
			РазмерПорции = 50; // по умолчанию.
		КонецЕсли;
		Константы.РазмерПорцииОбработкиМЭДО.Установить(РазмерПорции);
	КонецЕсли;
	
	Если Константы.ВремяХраненияЖурналаСобытийМЭДО.Получить() = 0 Тогда
		Константы.ВремяХраненияЖурналаСобытийМЭДО.Установить(365); // по умолчанию
	КонецЕсли;
	
КонецПроцедуры

// Перенос данных ТекстХранилище из справочника Файлы в регистр.
Процедура ПерейтиНаВерсию_3_0_10_10(Параметры) Экспорт
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		
		ЗапросВсегоОбъектов = Новый Запрос(
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(Файлы.Ссылка) КАК Количество
			|ИЗ
			|	Справочник.Файлы КАК Файлы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекстыФайлов КАК ТекстыФайлов
			|		ПО ТекстыФайлов.Файл = Файлы.Ссылка
			|ГДЕ
			|	ТекстыФайлов.Файл ЕСТЬ NULL");
		РезультатЗапросаВсего = ЗапросВсегоОбъектов.Выполнить();
		ВыборкаВсегоОбъектов = РезультатЗапросаВсего.Выбрать();
		Параметры.ПрогрессВыполнения.ВсегоОбъектов = ?(ВыборкаВсегоОбъектов.Следующий(), ВыборкаВсегоОбъектов.Количество, 0);
		
	КонецЕсли;
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	ЗапросПорцииОбъектов = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	Файлы.Ссылка КАК Ссылка,
		|	Файлы.УдалитьТекстХранилище
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекстыФайлов КАК ТекстыФайлов
		|		ПО ТекстыФайлов.Файл = Файлы.Ссылка
		|ГДЕ
		|	ТекстыФайлов.Файл ЕСТЬ NULL");
	
	РезультатЗапросаПорции = ЗапросПорцииОбъектов.Выполнить();
	ВыборкаПорцииОбъектов = РезультатЗапросаПорции.Выбрать();
	Пока ВыборкаПорцииОбъектов.Следующий() Цикл
		
		Попытка
			
			НачатьТранзакцию();
			Попытка

				НаборЗаписей = РегистрыСведений.ТекстыФайлов.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Файл.Установить(ВыборкаПорцииОбъектов.Ссылка);
				
				Запись = НаборЗаписей.Добавить();
				Запись.Файл = ВыборкаПорцииОбъектов.Ссылка;
				Запись.ТекстХранилище = ВыборкаПорцииОбъектов.УдалитьТекстХранилище;
				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				ОтменитьТранзакцию();
				ВызватьИсключение;
			КонецПопытки;
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать файл %1 по причине:
					|%2'"),
				ВыборкаПорцииОбъектов.Ссылка,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Справочники.Файлы,
				ВыборкаПорцииОбъектов.Ссылка,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_10_10 не удалось обработать некоторые файлы (пропущены): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = ОбработаноОбъектов = 0;
	
КонецПроцедуры

// Перенос данных ТекстХранилище из справочника ВерсииФайлов в регистр.
Процедура ПерейтиНаВерсию_3_0_10_11(Параметры) Экспорт
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		
		ЗапросВсегоОбъектов = Новый Запрос(
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(ВерсииФайлов.Ссылка) КАК Количество
			|ИЗ
			|	Справочник.ВерсииФайлов КАК ВерсииФайлов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекстыВерсийФайлов КАК ТекстыВерсийФайлов
			|		ПО ТекстыВерсийФайлов.Версия = ВерсииФайлов.Ссылка
			|ГДЕ
			|	ТекстыВерсийФайлов.Версия ЕСТЬ NULL");
		РезультатЗапросаВсего = ЗапросВсегоОбъектов.Выполнить();
		ВыборкаВсегоОбъектов = РезультатЗапросаВсего.Выбрать();
		Параметры.ПрогрессВыполнения.ВсегоОбъектов = ?(ВыборкаВсегоОбъектов.Следующий(), ВыборкаВсегоОбъектов.Количество, 0);
		
	КонецЕсли;
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	ЗапросПорцииОбъектов = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	ВерсииФайлов.Ссылка КАК Ссылка,
		|	ВерсииФайлов.УдалитьИзвлеченныйТекст,
		|	ВерсииФайлов.УдалитьРаспознанныйТекст,
		|	ВерсииФайлов.УдалитьСтатусИзвлеченияТекста,
		|	ВерсииФайлов.УдалитьСтатусРаспознаванияТекста,
		|	ВерсииФайлов.УдалитьТекстХранилище
		|ИЗ
		|	Справочник.ВерсииФайлов КАК ВерсииФайлов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекстыВерсийФайлов КАК ТекстыВерсийФайлов
		|		ПО ТекстыВерсийФайлов.Версия = ВерсииФайлов.Ссылка
		|ГДЕ
		|	ТекстыВерсийФайлов.Версия ЕСТЬ NULL");
	
	РезультатЗапросаПорции = ЗапросПорцииОбъектов.Выполнить();
	ВыборкаПорцииОбъектов = РезультатЗапросаПорции.Выбрать();
	Пока ВыборкаПорцииОбъектов.Следующий() Цикл
		
		Попытка
			
			НачатьТранзакцию();
			Попытка

				НаборЗаписей = РегистрыСведений.ТекстыВерсийФайлов.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Версия.Установить(ВыборкаПорцииОбъектов.Ссылка);
				
				Запись = НаборЗаписей.Добавить();
				
				Запись.Версия = ВыборкаПорцииОбъектов.Ссылка;
				Запись.ТекстХранилище = ВыборкаПорцииОбъектов.УдалитьТекстХранилище;
				Запись.ИзвлеченныйТекст = ВыборкаПорцииОбъектов.УдалитьИзвлеченныйТекст;
				Запись.РаспознанныйТекст = ВыборкаПорцииОбъектов.УдалитьРаспознанныйТекст;
				Запись.СтатусИзвлеченияТекста = ВыборкаПорцииОбъектов.УдалитьСтатусИзвлеченияТекста;
				Запись.СтатусРаспознаванияТекста = ВыборкаПорцииОбъектов.УдалитьСтатусРаспознаванияТекста;
				Запись.ДатаИзвлечения = ТекущаяДатаСеанса();
				Запись.ДатаРаспознавания = ТекущаяДатаСеанса();
				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				ОтменитьТранзакцию();
				ВызватьИсключение;
			КонецПопытки;
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать версию файла %1 по причине:
					|%2'"),
				ВыборкаПорцииОбъектов.Ссылка,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Справочники.ВерсииФайлов,
				ВыборкаПорцииОбъектов.Ссылка,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_10_11 не удалось обработать некоторые версии файлов (пропущены): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = ОбработаноОбъектов = 0;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_12() Экспорт

	Задание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.ОбновлениеКэширующихДанных);
	Задание.Использование = Истина;
	Задание.Записать();

КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_15() Экспорт
	
	Справочники.АвтоподстановкиДляОбъектов.ЗаполнитьПредопределенные();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_16(Параметры) Экспорт
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.ДействияПодписания КАК Действия
			|ГДЕ
			|	Действия.ПорядокВыполненияУчастниками = Значение(Перечисление.ПорядокВыполненияЭтапаДействия.Параллельно)
			|	И Действия.СпособПодписания = Значение(Перечисление.СпособыПодписанияПредметаДействия.НаБумаге)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК Количество
			|ИЗ
			|	Справочник.НастройкиДействийПодписания КАК НастройкиДействий
			|ГДЕ
			|	НастройкиДействий.ПорядокВыполненияУчастниками = Значение(Перечисление.ПорядокВыполненияЭтапаДействия.Параллельно)
			|	И НастройкиДействий.СпособПодписания = Значение(Перечисление.СпособыПодписанияПредметаДействия.НаБумаге)");
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Параметры.ПрогрессВыполнения.ВсегоОбъектов = Параметры.ПрогрессВыполнения.ВсегоОбъектов + Выборка.Количество;
		КонецЦикла;
		
	КонецЕсли; 
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 300
		|	Действия.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ДействияПодписания КАК Действия
		|ГДЕ
		|	Действия.ПорядокВыполненияУчастниками = Значение(Перечисление.ПорядокВыполненияЭтапаДействия.Параллельно)
		|	И Действия.СпособПодписания = Значение(Перечисление.СпособыПодписанияПредметаДействия.НаБумаге)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 300
		|	НастройкиДействий.Ссылка
		|ИЗ
		|	Справочник.НастройкиДействийПодписания КАК НастройкиДействий
		|ГДЕ
		|	НастройкиДействий.ПорядокВыполненияУчастниками = Значение(Перечисление.ПорядокВыполненияЭтапаДействия.Параллельно)
		|	И НастройкиДействий.СпособПодписания = Значение(Перечисление.СпособыПодписанияПредметаДействия.НаБумаге)");

	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			
			Блокировка = Новый БлокировкаДанных();
			ЭлементБлокировки = Блокировка.Добавить(ОбщегоНазначения.ИмяТаблицыПоСсылке(Выборка.Ссылка));
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			ДействиеНастройкаОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДействиеНастройкаОбъект.ПорядокВыполненияУчастниками = Перечисления.ПорядокВыполненияЭтапаДействия.Последовательно;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДействиеНастройкаОбъект);
			
			РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
			
			ОбработаноОбъектов = ОбработаноОбъектов + 1;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось обработать действие/настройку: %1 по причине:
					|%2'"),
				Выборка.Ссылка,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка, , ,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		
		ТекстСообщения =
			НСтр("ru = 'Процедуре ПерейтиНаВерсию_3_0_10_16 не удалось обработать все объекты.'");
		
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработаноОбъектов;
	Параметры.ОбработкаЗавершена = ОбработаноОбъектов = 0;
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_17() Экспорт
	
	ИдентификаторПрофиляДелопроизводители = "eeb325ab-db51-11de-a544-00179ab398dc";
	
	УправлениеДоступомДокументооборот.ДобавитьРольВПолномочия(
		Метаданные.Роли.ЗапускДействийРегламентированнойОбработкиВнеОчереди,
		ИдентификаторПрофиляДелопроизводители);
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_18() Экспорт

	Если ДокументооборотПраваДоступаПовтИсп.ВключеноИспользованиеПравДоступа() Тогда
		ДокументооборотПраваДоступа.ОпределитьПраваОбъектовТаблицы(
			ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.ДействиеЗадачи));
	КонецЕсли;

КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_19() Экспорт

	Справочники.Алгоритмы.ЗаполнитьПредопределенные();
		
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_20() Экспорт
	
	ИдентификаторПрофиляДелопроизводители = "eeb325ab-db51-11de-a544-00179ab398dc";
	
	УправлениеДоступомДокументооборот.ДобавитьРольВПолномочия(
		Метаданные.Роли.ПомещениеДействийВИсторию,
		ИдентификаторПрофиляДелопроизводители);
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_21() Экспорт
	
	Если Не КОДСервер.ЭтоЦентральныйУзел() Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыДокументооборот.СоздатьВидБизнесСобытий(Справочники.ВидыБизнесСобытий.ОтменаБрони, НСтр("ru='Брони: отмена'"));
	
	РегистрыСведений.НастройкиУведомлений.ЗаполнитьПодпискиПоУмолчанию();
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_22() Экспорт

	// Детекторы бизнес событий - заполним реквизит  ВариантРаботыВУзлахКОД
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДетекторыБизнесСобытий.Ссылка
	|ИЗ
	|	Справочник.ДетекторыБизнесСобытий КАК ДетекторыБизнесСобытий
	|ГДЕ
	|	ДетекторыБизнесСобытий.ВариантРаботыВУзлахКОД = &ВариантРаботыВУзлахКОД";
	
	Запрос.УстановитьПараметр("ВариантРаботыВУзлахКОД", Перечисления.ВариантыРаботыВУзлахКОД.ПустаяСсылка());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДетекторОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДетекторОбъект.ВариантРаботыВУзлахКОД = Перечисления.ВариантыРаботыВУзлахКОД.ВКаждомУзле;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДетекторОбъект);
		
	КонецЦикла;		
	
КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_23() Экспорт
	
	Если Не ОбщегоНазначенияДокументооборот.ЭтоДокументооборотХолдинга()
			Или Не ПолучитьФункциональнуюОпцию("ИспользоватьКОД") Тогда
		Возврат;
	КонецЕсли;
	
	ТекУзел = Справочники.УзлыКОД.ЭтотУзел;
	
	ТекУзелОбъект = ТекУзел.ПолучитьОбъект();
	
	Попытка
		ТекУзелОбъект.ПрефиксШтрихкода = Число(ТекУзелОбъект.Код);
	Исключение	
		// не ошибка, скажем "ЦУ" в число не сможем сконвертить.
	КонецПопытки;	
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ТекУзелОбъект);

КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_24() Экспорт
	
	Если Не ОбщегоНазначенияДокументооборот.ЭтоДокументооборотХолдинга()
			Или Не ОбщегоНазначенияДокументооборот.ЭтоЦентральныйУзел() Тогда
		Возврат;
	КонецЕсли;
			
	Константы.ПредельныйВозрастФайловДляВыгрузкиИсторииКОД.Установить(60);
	Константы.ШагУстановкиОтметокИсторическихДанных.Установить(86400);

КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_27() Экспорт
	
	Если Не ОбщегоНазначенияДокументооборот.ЭтоДокументооборотХолдинга()
			Или Не ОбщегоНазначенияДокументооборот.ЭтоЦентральныйУзел() Тогда
		Возврат;
	КонецЕсли;
			
	Константы.ПредельноеКоличествоОбъектовНСИДляПереносаВУзлыКОД.Установить(10000);
	ОбновлениеИнформационнойБазыДокументооборот.УстановитьИдентификаторыСотрудниковПользователей();
	ОбновлениеИнформационнойБазыДокументооборот.УстановитьИдентификаторыОсновныхСотрудников();

КонецПроцедуры

Процедура ПерейтиНаВерсию_3_0_10_28() Экспорт
	
	ОбновлениеИнформационнойБазыХолдинг.ЗаменитьСсылкиВВидахДоступа();
	
КонецПроцедуры


#КонецОбласти
