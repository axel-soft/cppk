
#Область ПрограммныйИнтерфейс

// Добавляет задание обновления действия в очередь заданий.
//
// Параметры:
//	Обработка - СправочникОбъект.ОбработкиОбъектов - Обработка, для которой необходимо добавить задание.
//
// Возвращаемое значение:
//	Булево - Истина - Задание добавлено.
//
Функция ДобавитьЗаданиеОбновитьОбработкуОбъекта(Обработка) Экспорт
	
	Если Не ОбщегоНазначенияДокументооборотХолдинг.ОбъектМожноОбработатьВОчередиЗаданий(Обработка) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Обработка.ДополнительныеСвойства.Вставить("ВерсияФормата", КОДСервер.ТекущаяВерсияФормата());
	Обработка.ДополнительныеСвойства.Вставить("ХэшСуммаОбъекта",
		КОДСервер.ХешСуммаMD5СериализованногоОбъекта(Обработка, , Обработка.ДополнительныеСвойства.ВерсияФормата));
	Обработка.ДополнительныеСвойства.Вставить("АвторИзменения", ПользователиДокументооборот.ОлицетворяемыйПользователь());
	
	ЗаполнитьДанныеОбработкиОтправка(Обработка.ДополнительныеСвойства, Обработка);
	ОбработкаОчередиЗаданийСервер.ДобавитьЗаданиеОбновитьОбработкуОбъекта(Обработка, Обработка.ДополнительныеСвойства); 
	
	Возврат Истина;

КонецФункции

// Добавляет задания остановки, продолжения процесса в очередь заданий.
//
// Параметры:
//	ОбработкаОбъекта - СправочникСсылка.ОбработкиОбъектов - Обработка, для которой необходимо добавить задание.
//	СостояниеОбработки - ПеречислениеСсылка.СостоянияОбработкиОбъектов - Состояние обработки
//
// Возвращаемое значение:
//	Булево - Истина - Задание добавлено.
//
Функция ЗаданиеОстановитьПродолжитьОбработкуОбъектаДобавлено(ОбработкаОбъекта, СостояниеОбработки) Экспорт
	
	Если Не ОбщегоНазначенияДокументооборотХолдинг.ОбъектМожноОбработатьВОчередиЗаданий(ОбработкаОбъекта) Тогда
		Возврат Ложь;
	КонецЕсли;
		
	ТипЗадания = Перечисления.ТипыЗаданий.ОстановитьОбработку;
	Если СостояниеОбработки = Перечисления.СостоянияОбработкиОбъектов.Выполняется Тогда
		ТипЗадания = Перечисления.ТипыЗаданий.ПродолжитьОбработку;
	КонецЕсли;
	
	Если ОбработкаОчередиЗаданийСервер.ОбъектЕстьВОчереди(ОбработкаОбъекта, , ТипЗадания) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("АвторИзменения", ПользователиДокументооборот.ОлицетворяемыйПользователь());
	ОбработкаОчередиЗаданийСервер.ДобавитьЗаданиеОстановитьПродолжитьОбработкуОбъекта(ОбработкаОбъекта,
		СостояниеОбработки, ПараметрыЗадания);
	
	Возврат Истина;
	
КонецФункции

// Добавляет задание перехода к выполнению действия в очередь заданий.
//
// Параметры:
//  Действие - ОпределяемыйТип.Действия.
//
Процедура ДобавитьЗаданиеПерейтиКВыполнениюДействияВнеОчереди(Действие) Экспорт
	
	ОбработкаОбъекта = РегистрыСведений.ДействияОбработкиОбъектов.ОбработкаДействия(Действие);
	Если ОбработкаОчередиЗаданийСервер.ОбъектЕстьВОчереди(ОбработкаОбъекта, ,
		Перечисления.ТипыЗаданий.ПерейтиКВыполнениюДействияВнеОчереди) Тогда
		Возврат;
	КонецЕсли;
	
	УзелОбработки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбработкаОбъекта, "УзелОбработки");
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("АвторИзменения", ПользователиДокументооборот.ОлицетворяемыйПользователь());
	ОбработкаОчередиЗаданийСервер.ДобавитьЗаданиеПерейтиКВыполнениюДействияВнеОчереди(Действие, УзелОбработки,
		ПараметрыЗадания);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполнить данные обработки для отправки.
// 
// Параметры:
//  ОбработкаОбъекта - СправочникОбъект.ОбработкиОбъектов - Обработка, для которой необходимо добавить задание.
//  ДанныеДляЗаполнения - Структура - данные заполнения
//
Процедура ЗаполнитьДанныеОбработкиОтправка(ДанныеДляЗаполнения, ОбработкаОбъекта)
	
	ЗаписьСообщения = КОДОтправка.ИнициализироватьЗаписьСообщения(
	ОтметкиВремени.ПредставлениеОтметки(ОтметкиВремени.Текущая()), 0, , , ДанныеДляЗаполнения.ВерсияФормата);
	ПолноеИмяОбъекта = ОбработкаОбъекта.Метаданные().ПолноеИмя();
	
	ТипДанных = КОДПовтИсп.ТипДанныхОбмена(ПолноеИмяОбъекта);
	Если ТипДанных = Неопределено Тогда
		ВызватьИсключение 
		СтрШаблон(НСтр("ru = 'Объект %1 не является типом данных КОД'"), ПолноеИмяОбъекта);
	КонецЕсли;
	
	ОбъектXDTO = КОДОтправка.НовыйОбъектXDTO(ТипДанных.ПолноеИмя, ЗаписьСообщения);
	КОДОтправка.ЗаполнитьСсылочныйОбъект(ОбъектXDTO, ОбработкаОбъекта, ЗаписьСообщения);
	КОДОтправка.ЗаполнитьОдноименныеСвойстваXDTOРеквизитами(ОбъектXDTO, ОбработкаОбъекта, ЗаписьСообщения);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	ЗаписьJSON.ЗаписатьИмяСвойства("object");
	ЗаписьСообщения.ФабрикаXDTO.ЗаписатьJSON(ЗаписьJSON, ОбъектXDTO, НазначениеТипаXML.Явное);
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	ДанныеДляЗаполнения.Вставить("ОбъектJSON", ЗаписьJSON.Закрыть());

КонецПроцедуры

#КонецОбласти