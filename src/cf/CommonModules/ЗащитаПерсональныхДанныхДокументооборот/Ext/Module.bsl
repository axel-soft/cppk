// @strict-types

#Область ПрограммныйИнтерфейс

#Область УничтожениеПерсональныхДанных

// См. ЗащитаПерсональныхДанныхПереопределяемый.ПриЗаполненииСведенийОбУничтожаемыхПерсональныхДанных
Процедура ПриЗаполненииСведенийОбУничтожаемыхПерсональныхДанных(ТаблицаСведений) Экспорт
	
	// Физические лица
	МетаданныеФизическиеЛица = Метаданные.Справочники.ФизическиеЛица;
	СтандартныеРеквизиты = МетаданныеФизическиеЛица.СтандартныеРеквизиты;
	Ресурсы = МетаданныеФизическиеЛица.Реквизиты;
	КонтактнаяИнформацияРеквизиты = МетаданныеФизическиеЛица.ТабличныеЧасти.КонтактнаяИнформация.Реквизиты;
	
	ЭлементПДн = ТаблицаСведений.Добавить();
	ЭлементПДн.Объект = МетаданныеФизическиеЛица.ПолноеИмя();
	ЭлементПДн.ПолеСубъект = СтандартныеРеквизиты.Ссылка.Имя;
	
	Поля = Новый Массив; // Массив из Строка
	Поля.Добавить(СтандартныеРеквизиты.Наименование.Имя);
	Поля.Добавить(Ресурсы.ДатаРождения.ПолноеИмя());
	Поля.Добавить(Ресурсы.ФайлФотографии.ПолноеИмя());
	Поля.Добавить(Ресурсы.ИНН.ПолноеИмя());
	Поля.Добавить(Ресурсы.Пол.ПолноеИмя());
	Поля.Добавить(Ресурсы.СтраховойНомерПФР.ПолноеИмя());
	Поля.Добавить(Метаданные.ОбщиеРеквизиты.НаименованиеЯзык1.ПолноеИмя());
	Поля.Добавить(Метаданные.ОбщиеРеквизиты.НаименованиеЯзык2.ПолноеИмя());
	ЭлементПДн.Поля = Поля;
	ЭлементПДн.КатегорияДанных = "ЛичныеДанные";
	
	// Контактная информация физических лиц
	ЭлементПДн = ТаблицаСведений.Добавить();
	ЭлементПДн.Объект = МетаданныеФизическиеЛица.ПолноеИмя();
	ЭлементПДн.ПолеСубъект = СтандартныеРеквизиты.Ссылка.Имя;
	ДобавитьКонтактнуюИнформациюВТаблицуУничтожаемыхПДн(КонтактнаяИнформацияРеквизиты, ЭлементПДн);
	
	// История ФИО Физических лиц
	МетаданныеФИОФизическихЛиц = Метаданные.РегистрыСведений.ФИОФизическихЛиц;
	СтандартныеРеквизиты = МетаданныеФИОФизическихЛиц.СтандартныеРеквизиты;
	Ресурсы = МетаданныеФИОФизическихЛиц.Ресурсы;
	
	ЭлементПДн = ТаблицаСведений.Добавить();
	ЭлементПДн.Объект = МетаданныеФИОФизическихЛиц.ПолноеИмя();
	ЭлементПДн.ПолеСубъект = МетаданныеФИОФизическихЛиц.Измерения.ФизическоеЛицо.ПолноеИмя();
	
	Поля = Новый Массив; // Массив из Строка
	Поля.Добавить(Ресурсы.ФИО.ПолноеИмя());
	Поля.Добавить(Ресурсы.ФИОЯзык1.ПолноеИмя());
	Поля.Добавить(Ресурсы.ФИОЯзык2.ПолноеИмя()); 
	Поля.Добавить(Ресурсы.ИменительныйПадеж.ПолноеИмя());
	Поля.Добавить(Ресурсы.РодительныйПадеж.ПолноеИмя());
	Поля.Добавить(Ресурсы.ВинительныйПадеж.ПолноеИмя());
	Поля.Добавить(Ресурсы.ДательныйПадеж.ПолноеИмя());
	Поля.Добавить(Ресурсы.ТворительныйПадеж.ПолноеИмя());
	Поля.Добавить(Ресурсы.ПредложныйПадеж.ПолноеИмя());
	ЭлементПДн.Поля = Поля;
	ЭлементПДн.КатегорияДанных = "ЛичныеДанные";
	
	// Справочник Контрагенты по реквизиту ФизЛицо
	МетаданныеКонтрагенты = Метаданные.Справочники.Контрагенты;
	СтандартныеРеквизиты = МетаданныеКонтрагенты.СтандартныеРеквизиты;
	Ресурсы = МетаданныеКонтрагенты.Реквизиты;
	КонтактнаяИнформацияРеквизиты = МетаданныеКонтрагенты.ТабличныеЧасти.КонтактнаяИнформация.Реквизиты;
	
	ЭлементПДн = ТаблицаСведений.Добавить();
	ЭлементПДн.Объект = МетаданныеКонтрагенты.ПолноеИмя();
	ЭлементПДн.ПолеСубъект = МетаданныеКонтрагенты.Реквизиты.ФизЛицо.ПолноеИмя();
	
	Поля = Новый Массив; // Массив из Строка
	Поля.Добавить(СтандартныеРеквизиты.Наименование.Имя);
	Поля.Добавить(Ресурсы.НаименованиеПолное.Имя);
	Поля.Добавить(Метаданные.ОбщиеРеквизиты.НаименованиеЯзык1.ПолноеИмя());
	Поля.Добавить(Метаданные.ОбщиеРеквизиты.НаименованиеЯзык2.ПолноеИмя());
	ЭлементПДн.Поля = Поля;
	ЭлементПДн.КатегорияДанных = "ЛичныеДанные";
	
	// Контактная информация контрагентов
	ЭлементПДн = ТаблицаСведений.Добавить();
	ЭлементПДн.Объект = МетаданныеКонтрагенты.ПолноеИмя();
	ЭлементПДн.ПолеСубъект = МетаданныеКонтрагенты.Реквизиты.ФизЛицо.ПолноеИмя();
	ДобавитьКонтактнуюИнформациюВТаблицуУничтожаемыхПДн(КонтактнаяИнформацияРеквизиты, ЭлементПДн);
	
	
	
	// Справочник Контактные лица по реквизиту ФизЛицо
	МетаданныеКонтактныеЛица = Метаданные.Справочники.КонтактныеЛица;
	СтандартныеРеквизиты = МетаданныеКонтактныеЛица.СтандартныеРеквизиты;
	Ресурсы = МетаданныеКонтактныеЛица.Реквизиты;
	
	ЭлементПДн = ТаблицаСведений.Добавить();
	ЭлементПДн.Объект = МетаданныеКонтактныеЛица.ПолноеИмя();
	ЭлементПДн.ПолеСубъект = Ресурсы.ФизЛицо.ПолноеИмя();
	
	Поля = Новый Массив; // Массив из Строка
	Поля.Добавить(СтандартныеРеквизиты.Наименование.Имя);
	ЭлементПДн.Поля = Поля;

	// Контактная информация контактных лиц
	ЭлементПДн = ТаблицаСведений.Добавить();
	ЭлементПДн.Объект = МетаданныеКонтактныеЛица.ПолноеИмя();
	ЭлементПДн.ПолеСубъект = Ресурсы.ФизЛицо.ПолноеИмя();
	ДобавитьКонтактнуюИнформациюВТаблицуУничтожаемыхПДн(КонтактнаяИнформацияРеквизиты, ЭлементПДн);


	
	// Регистр сведений «Документы физических лиц».
	МетаданныеДокументыФизЛиц = Метаданные.РегистрыСведений.ДокументыФизическихЛиц;
	ДокументыФизЛицРесурсы = МетаданныеДокументыФизЛиц.Ресурсы;
	
	ЭлементПДн = ТаблицаСведений.Добавить();
	ЭлементПДн.Объект = МетаданныеДокументыФизЛиц.ПолноеИмя();
	ЭлементПДн.ПолеСубъект = МетаданныеДокументыФизЛиц.Измерения.Физлицо.ПолноеИмя();
	
	Поля = Новый Массив; // Массив из Строка
	Поля.Добавить(ДокументыФизЛицРесурсы.Серия.Имя);
	Поля.Добавить(ДокументыФизЛицРесурсы.Номер.Имя);
	Поля.Добавить(ДокументыФизЛицРесурсы.ДатаВыдачи.Имя);
	Поля.Добавить(ДокументыФизЛицРесурсы.СрокДействия.Имя);
	Поля.Добавить(ДокументыФизЛицРесурсы.КемВыдан.Имя);
	Поля.Добавить(ДокументыФизЛицРесурсы.КодПодразделения.Имя);
	Поля.Добавить(ДокументыФизЛицРесурсы.Представление.Имя);
	Поля.Добавить(ДокументыФизЛицРесурсы.УдалитьВидДокумента.Имя);
	ЭлементПДн.Поля = Поля;
	
	
	
	// Пользователи по реквизиту «ФизЛицо»
	МетаданныеПользователи = Метаданные.Справочники.Пользователи;
	СтандартныеРеквизиты = МетаданныеПользователи.СтандартныеРеквизиты;
	Ресурсы = МетаданныеПользователи.Реквизиты;
	КонтактнаяИнформацияРеквизиты = МетаданныеПользователи.ТабличныеЧасти.КонтактнаяИнформация.Реквизиты;
	
	ЭлементПДн = ТаблицаСведений.Добавить();
	ЭлементПДн.Объект = МетаданныеПользователи.ПолноеИмя();
	ЭлементПДн.ПолеСубъект = Ресурсы.ФизЛицо.ПолноеИмя();
	
	Поля = Новый Массив; // Массив из Строка
	Поля.Добавить(СтандартныеРеквизиты.Наименование.Имя);
	Поля.Добавить(Ресурсы.ПредставлениеВДокументах.ПолноеИмя());
	Поля.Добавить(Ресурсы.ПредставлениеВПереписке.ПолноеИмя());
	Поля.Добавить(Ресурсы.ПредставлениеВПерепискеСРангом.ПолноеИмя());
	Поля.Добавить(Ресурсы.Фотография.ПолноеИмя());
	ЭлементПДн.Поля = Поля;
	ЭлементПДн.КатегорияДанных = "ЛичныеДанные";
	
	// Контактная информация пользователей
	ЭлементПДн = ТаблицаСведений.Добавить();
	ЭлементПДн.Объект = МетаданныеПользователи.ПолноеИмя();
	ЭлементПДн.ПолеСубъект = СтандартныеРеквизиты.Ссылка.Имя;
	ДобавитьКонтактнуюИнформациюВТаблицуУничтожаемыхПДн(КонтактнаяИнформацияРеквизиты, ЭлементПДн);



	// Сотрудники по владельцу
	МетаданныеСотрудники = Метаданные.Справочники.Сотрудники;
	СтандартныеРеквизиты = МетаданныеСотрудники.СтандартныеРеквизиты;
	Ресурсы = МетаданныеСотрудники.Реквизиты;
	КонтактнаяИнформацияРеквизиты = МетаданныеСотрудники.ТабличныеЧасти.КонтактнаяИнформация.Реквизиты;
	
	ЭлементПДн = ТаблицаСведений.Добавить();
	ЭлементПДн.Объект = МетаданныеСотрудники.ПолноеИмя();
	ЭлементПДн.ПолеСубъект = СтандартныеРеквизиты.Владелец.Имя;
	
	Поля = Новый Массив; // Массив из Строка
	Поля.Добавить(СтандартныеРеквизиты.Наименование.Имя);
	Поля.Добавить(Ресурсы.ПредставлениеВДокументах.ПолноеИмя());
	Поля.Добавить(Ресурсы.ПредставлениеВПереписке.ПолноеИмя());
	Поля.Добавить(Метаданные.ОбщиеРеквизиты.НаименованиеЯзык1.ПолноеИмя());
	Поля.Добавить(Метаданные.ОбщиеРеквизиты.НаименованиеЯзык2.ПолноеИмя());
	ЭлементПДн.Поля = Поля;
	ЭлементПДн.КатегорияДанных = "ЛичныеДанные";
	
	// Контактная информация пользователей
	ЭлементПДн = ТаблицаСведений.Добавить();
	ЭлементПДн.Объект = МетаданныеСотрудники.ПолноеИмя();
	ЭлементПДн.ПолеСубъект = СтандартныеРеквизиты.Ссылка.Имя;
	ДобавитьКонтактнуюИнформациюВТаблицуУничтожаемыхПДн(КонтактнаяИнформацияРеквизиты, ЭлементПДн);

	
КонецПроцедуры

// См. ЗащитаПерсональныхДанныхПереопределяемый.ПередСкрытиемПерсональныхДанныхСубъектов
Процедура ПередСкрытиемПерсональныхДанныхСубъектов(Субъекты, ТаблицаИсключений, ОтказОтСкрытия) Экспорт
	
	СубъектыФизЛица = ОбщегоНазначенияДокументооборотКлиентСервер.ЭлементыМассиваЗаданногоТипа(Субъекты,
		Тип("СправочникСсылка.ФизическиеЛица"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	Сотрудники.Ссылка,
		|	Сотрудники.Владелец
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Владелец В (&Субъекты)
		|	И Сотрудники.Действует";
	Запрос.УстановитьПараметр("Субъекты", СубъектыФизЛица);
	ДействующиеСотрудникиВыборка = Запрос.Выполнить().Выбрать();
	
	Пока ДействующиеСотрудникиВыборка.Следующий() Цикл
		
		НовоеИсключение = ТаблицаИсключений.Добавить();
		НовоеИсключение.Субъект = ДействующиеСотрудникиВыборка.Владелец;
		НовоеИсключение.ПричинаОтменыУничтожения = НСтр("ru = 'Субъект персональных данных является действующим сотрудником.'");
		
		ОтказОтСкрытия = Ложь;
		
	КонецЦикла;
	
КонецПроцедуры

// См. ЗащитаПерсональныхДанныхПереопределяемый.ПередУничтожениемПерсональныхДанных
Процедура ПередУничтожениемПерсональныхДанных(Объект, Субъекты, ВыполнитьЗаписьОбъекта) Экспорт
	
	Если ТипЗнч(Объект) = Тип("СправочникОбъект.Сотрудники") Тогда
		Объект.ДополнительныеСвойства.Вставить(
			"ПараметрыОбновленияДанныхКэширующихОбъектов",
			Справочники.Сотрудники.ЗначенияПараметровОбновленияДанныхКэширующихОбъектов(Объект));
	КонецЕсли;

	Если ТипЗнч(Объект) = Тип("СправочникОбъект.Пользователи") Тогда
		
		ПараметрыОбработкиПользователяИБ = Новый Структура;
		
		ОписаниеПользователяИБ = Новый Структура;
		ОписаниеПользователяИБ.Вставить("Действие", "Записать");
		ОписаниеПользователяИБ.Вставить("ВходВПрограммуРазрешен", Ложь);
		ОписаниеПользователяИБ.Вставить("Имя", Объект.Наименование);
		ОписаниеПользователяИБ.Вставить("АдресЭлектроннойПочты",
			УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
				Объект, Справочники.ВидыКонтактнойИнформации.EmailПользователя));
		
		Объект.ДополнительныеСвойства.Вставить("ОписаниеПользователяИБ", ОписаниеПользователяИБ);

		ПользователиСлужебный.НачатьОбработкуПользователяИБ(Объект, ПараметрыОбработкиПользователяИБ);
		Объект.ДополнительныеСвойства.Вставить("ПараметрыОбработкиПользователяИБ", ПараметрыОбработкиПользователяИБ);
		
	КонецЕсли;

КонецПроцедуры

// См. ЗащитаПерсональныхДанныхПереопределяемый.ПослеУничтоженияПерсональныхДанных
Процедура ПослеУничтоженияПерсональныхДанных(Объект, Субъекты) Экспорт

	Если ТипЗнч(Объект) = Тип("СправочникОбъект.Сотрудники") Тогда
		ПараметрыОбновления = Объект.ДополнительныеСвойства.ПараметрыОбновленияДанныхКэширующихОбъектов; // Структура
		Справочники.Сотрудники.ОбновитьДанныеКэширующихОбъектов(
			Объект, ПараметрыОбновления);
	КонецЕсли;

	// еще надо чистить почту для восстановления пароля
	Если ТипЗнч(Объект) = Тип("СправочникОбъект.Пользователи") Тогда
		ПараметрыОбработкиПользователяИБ = Объект.ДополнительныеСвойства.ПараметрыОбработкиПользователяИБ; // Структура
		ПользователиСлужебный.ЗавершитьОбработкуПользователяИБ(
			Объект, ПараметрыОбработкиПользователяИБ);
	КонецЕсли;

КонецПроцедуры

// См. ЗащитаПерсональныхДанныхПереопределяемый.ПриРасчетеСроковХраненияПерсональныхДанных
Процедура ПриРасчетеСроковХраненияПерсональныхДанных(ДанныеСубъектов, СрокиХранения) Экспорт

	// Рассчитываем срок хранения ПДн с учетом наличия согласий на обработку
	// Если есть согласие, и в нем указан срок, берем этот срок. Если срок не указан - храним бессрочно.
	// Если после согласия есть отзыв, берем срок из него.
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка КАК Субъект,
		|	&ДатаНеУничтожать КАК СрокХранения
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СогласияНаОбработкуПерсональныхДанных.СрезПоследних(, Субъект В (&Субъекты)) КАК
		|			СогласияНаОбработкуПерсональныхДанныхСрезПоследних
		|		ПО (ФизическиеЛица.Ссылка = СогласияНаОбработкуПерсональныхДанныхСрезПоследних.Субъект)
		|ГДЕ
		|	ФизическиеЛица.Ссылка В (&Субъекты)
		|	И СогласияНаОбработкуПерсональныхДанныхСрезПоследних.Субъект ЕСТЬ NULL";
	Запрос.УстановитьПараметр("Субъекты", ДанныеСубъектов.ВыгрузитьКолонку("Субъект"));
	Запрос.УстановитьПараметр("ДатаНеУничтожать", ДатаНеУничтожать());
	
	ФизлицаИСрокиХранения = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаТаблицы Из ФизлицаИСрокиХранения Цикл
	
		НоваяСтрока = СрокиХранения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		
	КонецЦикла;

КонецПроцедуры

// См. ЗащитаПерсональныхДанных.ДобавитьКомандуПечатиСогласияНаОбработкуПерсональныхДанных
Процедура ДобавитьКомандуПечатиСогласияНаОбработкуПерсональныхДанных(КомандыПечати) Экспорт
	
	Если Не ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Документы.СогласиеНаОбработкуПерсональныхДанных) Тогда
		Возврат;
	КонецЕсли; 
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетДоступаКПерсональнымДанным") Тогда
		Возврат;
	КонецЕсли;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СогласиеНаОбработкуПерсональныхДанных";
	КомандаПечати.Представление = НСтр("ru = 'Согласие на обработку ПДн...'");
	КомандаПечати.Обработчик = "ЗащитаПерсональныхДанныхКлиент.ОткрытьФормуСогласиеНаОбработкуПерсональныхДанных";
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьКонтактнуюИнформациюВТаблицуУничтожаемыхПДн(КонтактнаяИнформацияРеквизиты, ЭлементПДн)
	
	Поля = Новый Массив; // Массив из Строка 
	Поля.Добавить(КонтактнаяИнформацияРеквизиты.ЗначенияПолей.ПолноеИмя());
	Поля.Добавить(КонтактнаяИнформацияРеквизиты.Значение.ПолноеИмя());
	Поля.Добавить(КонтактнаяИнформацияРеквизиты.Представление.ПолноеИмя());
	Поля.Добавить(КонтактнаяИнформацияРеквизиты.АдресЭП.ПолноеИмя());
	Поля.Добавить(КонтактнаяИнформацияРеквизиты.НомерТелефона.ПолноеИмя());
	Поля.Добавить(КонтактнаяИнформацияРеквизиты.НомерТелефонаБезКодов.ПолноеИмя());
	ЭлементПДн.Поля = Поля;
	ЭлементПДн.КатегорияДанных = "КонтактнаяИнформация";
	
КонецПроцедуры

// Возвращаемое значение:
//  Дата
Функция ДатаНеУничтожать() Экспорт
	
	Возврат Дата(3999, 12, 31);
	
КонецФункции

#КонецОбласти
 