#Область ПрограммныйИнтерфейс

// Возвращает список этапов
//
// Параметры:
//   Текст - Строка - символы, введенные пользователем.
//   Тип - ПеречислениеСсылка.ТипыДействий
//	 ЭтапыИсключения - Массив Из ОпределяемыйТип.НаименованиеЭтапа - Эти этапы не должны показываться в списке выбора.
//
// Возвращаемое значение:
//   СписокЗначений Из ОпределяемыйТип.НаименованиеЭтапа - подходящие этапы
//
Функция ДанныеВыбора(Текст, Тип, ЭтапыИсключения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЭтапыДействий.НаименованиеЭтапа КАК Наименование
		|ИЗ
		|	Справочник.НастройкиДействийСогласования.Этапы КАК ЭтапыДействий
		|ГДЕ
		|	НЕ ЭтапыДействий.Ссылка.ПометкаУдаления
		|	И ЭтапыДействий.НаименованиеЭтапа ПОДОБНО &Наименование
		|	И НЕ ЭтапыДействий.НаименованиеЭтапа В (&ЭтапыИсключения)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НаименованияЗадач.Этап
		|ИЗ
		|	РегистрСведений.НаименованияЗадачУчастниковДействий КАК НаименованияЗадач
		|ГДЕ
		|	НаименованияЗадач.Этап ПОДОБНО &Наименование
		|	И НЕ НаименованияЗадач.Этап В (&ЭтапыИсключения)
		|	И ТИПЗНАЧЕНИЯ(НаименованияЗадач.Функция) = ТИП(Перечисление.ФункцииУчастниковСогласования)";
	
	Запрос.УстановитьПараметр("Наименование", "%" + Текст + "%");
	
	Если Тип = ПредопределенноеЗначение("Перечисление.ТипыДействий.Подписание") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "НастройкиДействийСогласования", "НастройкиДействийПодписания");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ФункцииУчастниковСогласования", "ФункцииУчастниковПодписания");
	ИначеЕсли Тип = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|	ОБЪЕДИНИТЬ
		|" + СтрЗаменить(СтрЗаменить(Запрос.Текст, "НастройкиДействийСогласования", "НастройкиДействийПодписания"),
			 "ФункцииУчастниковСогласования", "ФункцииУчастниковПодписания");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ЭтапыИсключения", ЭтапыИсключения); 
	ДанныеВыбора = Новый СписокЗначений;
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Таблица.Сортировать("Наименование");
	
	Для Каждого Выборка Из Таблица Цикл
		Если ДанныеВыбора.НайтиПоЗначению(Выборка.Наименование) = Неопределено Тогда
			ДанныеВыбора.Добавить(Выборка.Наименование);
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеВыбора.Количество() = 0 Тогда
		ДанныеВыбора.Добавить(Текст);
	КонецЕсли;
	
	Возврат ДанныеВыбора;
	
КонецФункции

#КонецОбласти