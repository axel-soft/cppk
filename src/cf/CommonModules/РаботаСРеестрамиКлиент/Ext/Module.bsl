////////////////////////////////////////////////////////////////////////////////
// Работа с реестрами (клиент).
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Открывает форму настройки реестра.
//
// Параметры:
//  Реестр - СправочникСсылка.Реестры.
//
Процедура НастроитьРеестр(Реестр) Экспорт
	
	Если Не ЗначениеЗаполнено(Реестр) Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(
		"Справочник.Реестры.ФормаОбъекта",
		Новый Структура("Ключ, НастроитьРеестр", Реестр, Истина));
	
КонецПроцедуры

// Открывает реестр.
//
// Параметры:
//  Реестр - СправочникСсылка.Реестры.
//
Процедура ОткрытьРеестр(Реестр) Экспорт
	
	ОписаниеРеестра = ОписаниеРеестра(Реестр);
	Если ОписаниеРеестра.ДанныеРеестра = ПредопределенноеЗначение("Перечисление.ДанныеРеестров.ДокументыПредприятия") Тогда
		
		ОткрытьРеестрДокументовПредприятия(ОписаниеРеестра);
		
	ИначеЕсли ОписаниеРеестра.ДанныеРеестра = ПредопределенноеЗначение("Перечисление.ДанныеРеестров.Мероприятия") Тогда
		
		ОткрытьРеестрМероприятий(ОписаниеРеестра);
		
	Иначе
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Неизвестный вид реестра %1'"),
			ОписаниеРеестра.ДанныеРеестра);
		
	КонецЕсли;
	
КонецПроцедуры

// Создает новый элемент в реестре.
//
// Параметры:
//  Реестр - СправочникСсылка.Реестры.
//
Процедура СоздатьЭлементРеестра(Реестр) Экспорт
	
	ОписаниеРеестра = ОписаниеРеестра(Реестр);
	Если ОписаниеРеестра.ДанныеРеестра = ПредопределенноеЗначение("Перечисление.ДанныеРеестров.ДокументыПредприятия") Тогда
		
		СоздатьЭлементРеестраДокументовПредприятия(ОписаниеРеестра);
		
	ИначеЕсли ОписаниеРеестра.ДанныеРеестра = ПредопределенноеЗначение("Перечисление.ДанныеРеестров.Мероприятия") Тогда
		
		СоздатьЭлементРеестраМероприятий(ОписаниеРеестра);
		
	Иначе
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Неизвестный вид реестра %1'"),
			ОписаниеРеестра.ДанныеРеестра)
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Открывает реестр документов предприятия.
//
// Параметры:
//  ОписаниеРеестра - Структура - Данные реестры. См. Справочники.Реестры.НовоеОписаниеРеестра().
//
Процедура ОткрытьРеестрДокументовПредприятия(ОписаниеРеестра)
	
	Если ОписаниеРеестра.ВидыЭлементовРеестра.Количество() = 0 Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Невозможно открыть реестр - нет доступных видов документов.'"));
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", ОписаниеРеестра.Заголовок);
	
	ДоступныеВидыДокументов = Новый СписокЗначений;
	ДоступныеВидыДокументов.ЗагрузитьЗначения(ОписаниеРеестра.ВидыЭлементовРеестра);
	ПараметрыФормы.Вставить("ДоступныеВидыДокументов", ДоступныеВидыДокументов);
	ПараметрыФормы.Вставить("КлючНазначенияИспользования", ОписаниеРеестра.КлючНазначенияИспользования);
	
	ОткрытьФорму(
		"Справочник.ДокументыПредприятия.ФормаСписка",
		ПараметрыФормы,,
		ОписаниеРеестра.Реестр,,
		ПолучитьНавигационнуюСсылку(ОписаниеРеестра.Реестр));
	
КонецПроцедуры

// Открывает реестр мероприятий.
//
// Параметры:
//  ОписаниеРеестра - Структура - Данные реестры. См. Справочники.Реестры.НовоеОписаниеРеестра().
//
Процедура ОткрытьРеестрМероприятий(ОписаниеРеестра)
	
	Если ОписаниеРеестра.ВидыЭлементовРеестра.Количество() = 0 Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Невозможно открыть реестр - нет доступных видов мероприятий.'"));
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", ОписаниеРеестра.Заголовок);
	
	ДоступныеВидыМероприятий = Новый СписокЗначений;
	ДоступныеВидыМероприятий.ЗагрузитьЗначения(ОписаниеРеестра.ВидыЭлементовРеестра);
	ПараметрыФормы.Вставить("ДоступныеВидыМероприятий", ДоступныеВидыМероприятий);
	ПараметрыФормы.Вставить("КлючНазначенияИспользования", ОписаниеРеестра.КлючНазначенияИспользования);
	
	ОткрытьФорму(
		"Справочник.Мероприятия.ФормаСписка",
		ПараметрыФормы,,
		ОписаниеРеестра.Реестр,,
		ПолучитьНавигационнуюСсылку(ОписаниеРеестра.Реестр));
	
КонецПроцедуры

// Создает новый элемент в реестре документов предприятия.
//
// Параметры:
//  ОписаниеРеестра - Структура - Данные реестры. См. Справочники.Реестры.НовоеОписаниеРеестра().
//
Процедура СоздатьЭлементРеестраДокументовПредприятия(ОписаниеРеестра)
	
	Если ОписаниеРеестра.ВидыЭлементовРеестра.Количество() = 0 Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Невозможно создать элемент реестра - нет доступных видов документов.'"));
	КонецЕсли;
	
	ДоступныеВидыДокументов = Новый СписокЗначений;
	ДоступныеВидыДокументов.ЗагрузитьЗначения(ОписаниеРеестра.ВидыЭлементовРеестра);
	
	Параметры = РаботаСШаблонамиДокументовКлиент.ДополнительныеПараметрыВыбораШаблонаДокумента();
	Параметры.ДоступныеВидыДокументов = ДоступныеВидыДокументов;
	
	ДелопроизводствоКлиент.СоздатьДокументПредприятия(Параметры);
	
КонецПроцедуры

// Создает новый элемент в реестре мероприятий.
//
// Параметры:
//  ОписаниеРеестра - Структура - Данные реестры. См. Справочники.Реестры.НовоеОписаниеРеестра().
//
Процедура СоздатьЭлементРеестраМероприятий(ОписаниеРеестра)
	
	Если ОписаниеРеестра.ВидыЭлементовРеестра.Количество() = 0 Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Невозможно создать элемент реестра - нет доступных видов мероприятий.'"));
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	
	ДоступныеВидыМероприятий = Новый СписокЗначений;
	ДоступныеВидыМероприятий.ЗагрузитьЗначения(ОписаниеРеестра.ВидыЭлементовРеестра);
	ПараметрыФормы.Вставить("ДоступныеВидыМероприятий", ДоступныеВидыМероприятий);
	
	ОткрытьФорму("Справочник.Мероприятия.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

// Определяет данные реестры.
//
// Параметры:
//  Реестр - СправочникСсылка.Реестры.
// 
// Возвращаемое значение:
//  Структура - Данные реестры. См. Справочники.Реестры.НовоеОписаниеРеестра().
//
Функция ОписаниеРеестра(Реестр)
	
	КэшДанныхРеестров = КэшДанныхРеестров();
	Если КэшДанныхРеестров[Реестр] = Неопределено Тогда
		КэшДанныхРеестров[Реестр] = РаботаСРеестрамиВызовСервера.ОписаниеРеестра(Реестр);
	КонецЕсли;
	
	Возврат КэшДанныхРеестров[Реестр];
	
КонецФункции

// Возвращает клиентский кэш данных реестров.
// 
// Возвращаемое значение:
//  Соответствие - Кэш данных реестров.
//   * Ключ - СправочникСсылка.Реестры - Реестр.
//   * Значение - Структура - Данные реестры. См. Справочники.Реестры.НовоеОписаниеРеестра().
//
Функция КэшДанныхРеестров()
	
	ИмяПараметра = "Реестры.ОписанияРеестров";
	Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
		ПараметрыПриложения[ИмяПараметра] = Новый Соответствие;
	КонецЕсли;
	
	Возврат ПараметрыПриложения[ИмяПараметра];
	
КонецФункции

#КонецОбласти