// @strict-types


#Область ПрограммныйИнтерфейс

// Вызывается на клиенте перед началом действий отправки по ЭДО
// 
// Параметры:
//   КонтекстОтправки - Произвольный - см. ключ "КонтекстОтправки" результата, возвращаемого
//                                     методом см. СинхронизацияЭДО.ОтправитьОбъекты.
//   Отказ - Булево - Истина, если отправку необходимо отменить.
//
Процедура ПередОтправкойОбъектовЭДО(КонтекстОтправки, Отказ) Экспорт
	
	Если МиграцияДанныхИзВнешнихСистемКлиентПовтИсп.БлокироватьОбменСВнешнимиРесурсами() Тогда
		ВывестиПредупреждениеОБлокировкеОбменаПоМиграции();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Перед выполнением обмена ЭДО.
// 
// Параметры:
// 	ФормаВладелец - ФормаКлиентскогоПриложения - форма, из которой выполняется обмен.
//  Отказ - Булево - Истина, если обмен производить нельзя
//
Процедура ПередВыполнениемОбменаЭДО(ФормаВладелец, Отказ) Экспорт
	
	Если МиграцияДанныхИзВнешнихСистемКлиентПовтИсп.БлокироватьОбменСВнешнимиРесурсами() Тогда
		ВывестиПредупреждениеОБлокировкеОбменаПоМиграции();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Перед выполнением приема входящих документов ДО
// 
// Параметры:
//  ПараметрыВыполнения см. ОбменСКонтрагентамиДОСлужебныйКлиент.НовыеПараметрыВыполненияДействийПоВходящимДокументамДО
//  Отказ - Булево
//
Процедура ПередПриемомПоЭДО(ПараметрыВыполнения, Отказ) Экспорт
	
	Если МиграцияДанныхИзВнешнихСистемКлиентПовтИсп.БлокироватьОбменСВнешнимиРесурсами() Тогда
		ВывестиПредупреждениеОБлокировкеОбменаПоМиграции();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Перед выполнением приема входящих документов ДО
// 
// Параметры:
//  ПараметрыВыполнения см. ОбменСКонтрагентамиДОСлужебныйКлиент.НовыеПараметрыВыполненияДействийПоВходящимДокументамДО
//  Отказ - Булево
//
Процедура ПередОтказомПоЭДО(ПараметрыВыполнения, Отказ) Экспорт
	
	Если МиграцияДанныхИзВнешнихСистемКлиентПовтИсп.БлокироватьОбменСВнешнимиРесурсами() Тогда
		ВывестиПредупреждениеОБлокировкеОбменаПоМиграции();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Открывает форму создания нового исходящего пакета ЭДО с подбором документов
// 
// Параметры:
//  Документы - Массив из ОпределяемыйТип.ДокументДОДляЭДО - Массив ссылок на документы,
//                                                               из которых должен состоять пакет
//  ВладелецФормы - ФормаКлиентскогоПриложения - Владелец открываемой формы
//  Отказ - Булево
//
Процедура ПередОткрытиемФормыСозданияПакетаЭДО(Документы, ВладелецФормы, Отказ) Экспорт
	
	Если МиграцияДанныхИзВнешнихСистемКлиентПовтИсп.БлокироватьОбменСВнешнимиРесурсами() Тогда
		ВывестиПредупреждениеОБлокировкеОбменаПоМиграции();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Перед открытием формы изменения состава пакета ЭДО
// 
// Параметры:
//  ИдентификаторПакета - УникальныйИдентификатор - УИД пакета ЭДО состав которого необходимо изменить
//  ВладелецФормы - ФормаКлиентскогоПриложения - Владелец открываемой формы
//  Отказ - Булево
//
Процедура ПередОткрытиемФормыИзмененияСоставаПакетаЭДО(ИдентификаторПакета, ВладелецФормы, Отказ) Экспорт
	
	Если МиграцияДанныхИзВнешнихСистемКлиентПовтИсп.БлокироватьОбменСВнешнимиРесурсами() Тогда
		ВывестиПредупреждениеОБлокировкеОбменаПоМиграции();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Перед запуском процедуры добавления документа к существующему пакету ЭДО
// 
// Параметры:
//  Документ - ОпределяемыйТип.ДокументДОДляЭДО - Документ ДО, который необходимо добавить к пакету
//  Форма - ФормаКлиентскогоПриложения - Форма из которой вызывает процедура
//  Отказ - Булево
//
Процедура ПередДобавлениемДокументаКПакету(Документ, Форма, Отказ) Экспорт
	
	Если МиграцияДанныхИзВнешнихСистемКлиентПовтИсп.БлокироватьОбменСВнешнимиРесурсами() Тогда
		ВывестиПредупреждениеОБлокировкеОбменаПоМиграции();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Перед началом создания документов ДО в автоматическом режиме
// 
// Параметры:
//  ИдентификаторФормы - УникальныйИдентификатор - Идентификатор формы из которой запущена операция
//  Отказ - Булево
//
Процедура ПередСозданиемДокументовДОВАвтоматическомРежиме(ИдентификаторФормы, Отказ) Экспорт
	
	Если МиграцияДанныхИзВнешнихСистемКлиентПовтИсп.БлокироватьОбменСВнешнимиРесурсами() Тогда
		ВывестиПредупреждениеОБлокировкеОбменаПоМиграции();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Перед началом ручного создания документа ДО по входящему ЭДО
// 
// Параметры:
//  ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументВходящийЭДО - Докумен ЭДО
//  Отказ - Булево
//
Процедура ПередСозданиемДокументаДО(ЭлектронныйДокумент, Отказ) Экспорт
	
	Если МиграцияДанныхИзВнешнихСистемКлиентПовтИсп.БлокироватьОбменСВнешнимиРесурсами() Тогда
		ВывестиПредупреждениеОБлокировкеОбменаПоМиграции();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Перед удалением входящего ЭДО из списка к созданию документов ДО
// 
// Параметры:
//  ДокументЭДО - ДокументСсылка.ЭлектронныйДокументВходящийЭДО - Докумен ЭДО
//  Отказ - Булево
//
Процедура ПередУдалениемДокументаЭДОИзСпискаКСозданиюВДО(ДокументЭДО, Отказ) Экспорт
	
	Если МиграцияДанныхИзВнешнихСистемКлиентПовтИсп.БлокироватьОбменСВнешнимиРесурсами() Тогда
		ВывестиПредупреждениеОБлокировкеОбменаПоМиграции();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Перед поставновкой входящих ЭДО в очередь к автоматическому отражению в документах ДО
// 
// Параметры:
//  ДокументыЭДО - Массив из ДокументСсылка.ЭлектронныйДокументВходящийЭДО - входящие документы ЭДО
//  Отказ - Булево
//
Процедура ПередПостановкойДокументовЭДОКАвтоматическомуОтражению(ДокументыЭДО, Отказ) Экспорт
	
	Если МиграцияДанныхИзВнешнихСистемКлиентПовтИсп.БлокироватьОбменСВнешнимиРесурсами() Тогда
		ВывестиПредупреждениеОБлокировкеОбменаПоМиграции();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Перед выполнением действий по исходящим документам
// 
// Параметры:
//   ПараметрыВыполнения см. ОбменСКонтрагентамиДОСлужебныйКлиент.НовыеПараметрыВыполненияДействийПоИсходящимДокументамЭДО
//   Отказ - Булево
//
Процедура ПередВыполнениемДействийПоИсходящимДокументам(ПараметрыВыполнения, Отказ) Экспорт
	
	Если МиграцияДанныхИзВнешнихСистемКлиентПовтИсп.БлокироватьОбменСВнешнимиРесурсами() Тогда
		ВывестиПредупреждениеОБлокировкеОбменаПоМиграции();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВывестиПредупреждениеОБлокировкеОбменаПоМиграции()
	
	ПоказатьПредупреждение(, ОбменСКонтрагентамиДОМиграцияКлиентСервер.ТекстСообщенияОБлокировкеПриМиграции(), ,
		НСтр("ru = 'Обмен недоступен'"));
	
КонецПроцедуры

#КонецОбласти