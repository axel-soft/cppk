#Область ПрограммныйИнтерфейс

// Обработка события нажатия на ячейку "Настройки" 
//
// Параметры:
//  Элемент						 - ЭлементыФормы - Табличная часть "ВходящиеДокументы"
//  ВыбраннаяСтрока				 - Число
//  Поле						 - ПолеФормы
//  СтандартнаяОбработка		 - Булево
//  КлючНастроекРучногоСоздания	 - См. НовыйКлючНастроекРучногоСоздания
//
Процедура ВходящиеДокументыВыбор_НастройкиОтраженияДокументовВУчете(Элемент, ВыбраннаяСтрока, 
	Поле, СтандартнаяОбработка, КлючНастроекРучногоСоздания) Экспорт
	
	Если Поле.Имя = "Настройки" Тогда
		
		ПараметрыОповещения = Новый Структура("ТекущиеДанные", Элемент.ТекущиеДанные);
		ОповещениеПриСохраненииНастроек = Новый ОписаниеОповещения("ЗакрытаФормаНастроек", ЭтотОбъект, ПараметрыОповещения);
		
		ОткрытьФорму("РегистрСведений.ШаблоныДляСозданияДокументовПоВходящимЭДО.Форма.ВыборШаблоновДляСозданияДокументовПоВходящимЭДО", 
			КлючНастроекРучногоСоздания, Элемент.Родитель,,,,
			ОповещениеПриСохраненииНастроек, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

// Обработка выбора способа обработки
//
// Параметры:
//  Форма			 - ФормаКлиентскогоПриложения
//  ТекущиеДанные	 - ДанныеФормыЭлементКоллекции
//
Процедура ОбработкаВыбораСпособаОбработки_НастройкиОтраженияДокументовВУчете(Форма, ТекущиеДанные) Экспорт
	
	Если ТекущиеДанные.СпособОбработки = "Вручную" Тогда
		
		ДанныеДляПредставления = ОтражениеВУчетеДОВызовСервера.ДанныеДляПредставленияНастройкиРучногоОтраженияВУчете(
			Форма.Организация,
			Форма.Контрагент,
			Форма.ИдентификаторОрганизации,
			Форма.ИдентификаторКонтрагента,
			ТекущиеДанные.ВидДокумента);
			
		ПредставлениеНастроек = РаботаСШаблонамиДокументовКлиентСервер.ПредставлениеНастроекОтражения(ДанныеДляПредставления);
		ТекущиеДанные.Настройки = ПредставлениеНастроек;
		ТекущиеДанные.ИндексКартинки = ?(ДанныеДляПредставления.КоличествоШаблонов > 0, 3, 2);
		
	ИначеЕсли СтрНачинаетсяС(ВРег(ТекущиеДанные.СпособОбработки), "АВТОМАТИЧЕСКИ") Тогда
		
		ИнтерфейсЭДОДокументооборотКлиент.ОбновитьИнформациюВСтрокеТаблицыВходящиеДокументыНастройкиПолученияЭДО(ТекущиеДанные);
		
	Иначе
		
		ТекущиеДанные.Настройки = "";
		ТекущиеДанные.ИндексКартинки = 0;
		
	КонецЕсли;
	
КонецПроцедуры

// Создать документ учета по документу ЭДО
//
// Параметры:
//  ЭлектронныйДокумент	 - ДокументСсылка.ЭлектронныйДокументВходящийЭДО
//  СтандартнаяОбработка - Булево
//
Процедура ПриСозданииУчетногоДокумента(ЭлектронныйДокумент, СтандартнаяОбработка) Экспорт
	
	РезультатПолучения = 
		ОтражениеВУчетеДОВызовСервера.РезультатПолученияСпискаШаблоновДляРучногоСозданияДокумента(ЭлектронныйДокумент);
	
	Если Не РезультатПолучения.ДокументДолженБытьОтраженВручную Тогда
		СтандартнаяОбработка = Истина;
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если РезультатПолучения.УжеЕстьЭД Тогда
		
		ПоказатьПредупреждение(, ПредупреждениеБольшеОдногоОбъектаУчета());
		Возврат;
		
	КонецЕсли;
	
	СписокШаблонов = РезультатПолучения.СписокШаблонов;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Документ", ЭлектронныйДокумент);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СозданиеПослеВыбораШаблона",
		ЭтотОбъект, ПараметрыОповещения);
	
	ВыбратьШаблон(СписокШаблонов, ОписаниеОповещения);
	
КонецПроцедуры

// Подобрать документ учета по документу ЭДО
//
// Параметры:
//  ЭлектронныйДокумент	 - ДокументСсылка.ЭлектронныйДокументВходящийЭДО
//  СтандартнаяОбработка - Булево
//
Процедура ПодобратьДокументУчетаПоДокументуЭДО(ЭлектронныйДокумент, СтандартнаяОбработка) Экспорт
	
	РезультатПолучения = 
		ОтражениеВУчетеДОВызовСервера.РезультатПолученияСпискаШаблоновДляРучногоСозданияДокумента(ЭлектронныйДокумент);
	
	СтандартнаяОбработка = Ложь;
	Если Не РезультатПолучения.ДокументДолженБытьОтраженВручную Тогда;
		
		ТекстПредупреждения = 
			НСтр("ru='Нельзя подбирать существующий документ, если выбран способ отражения не ""Вручную""'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстПредупреждения);
		Возврат;
		
	КонецЕсли;
	
	Если РезультатПолучения.УжеЕстьЭД Тогда
		
		ПоказатьПредупреждение(, ПредупреждениеБольшеОдногоОбъектаУчета());
		Возврат;
		
	КонецЕсли;
	
	СписокШаблонов = РезультатПолучения.СписокШаблонов;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Документ", ЭлектронныйДокумент);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодборПослеВыбораШаблона",
		ЭтотОбъект, ПараметрыОповещения);
	
	ВыбратьШаблон(СписокШаблонов, ОписаниеОповещения);
	
КонецПроцедуры

// Возвращает ключ для получения настроек ручного создания
//
// Возвращаемое значение:
//  Структура:
//  * Получатель				 - ОпределяемыйТип.Организация
//  * Отправитель				 - ОпределяемыйТип.УчастникЭДО
//  * ИдентификаторПолучателя	 - Строка
//  * ИдентификаторОтправителя   - Строка
//  * ВидДокумента			     - СправочникСсылка.ВидыДокументовЭДО
//
Функция НовыйКлючНастроекРучногоСоздания() Экспорт
	
	НовыйКлюч = Новый Структура;
	НовыйКлюч.Вставить("Получатель");
	НовыйКлюч.Вставить("Отправитель");
	НовыйКлюч.Вставить("ИдентификаторПолучателя");
	НовыйКлюч.Вставить("ИдентификаторОтправителя");
	НовыйКлюч.Вставить("ВидДокумента");
	
	Возврат НовыйКлюч;
	
КонецФункции

// Открывает выбор шаблона
//
// Параметры:
//  СписокШаблонов		 - СписокЗначений Из Структура
//  ОповещениеОВыборе	 - ОписаниеОповещения
//  ПараметрыФормы       - Структура - можно передать любые другие параметры формы
//
Процедура ВыбратьШаблон(СписокШаблонов, ОповещениеОВыборе, ПараметрыФормы=Неопределено) Экспорт
	
	Если СписокШаблонов.Количество() = 1 Тогда
		
		ВыполнитьОбработкуОповещения(ОповещениеОВыборе, СписокШаблонов[0]);
		
	ИначеЕсли СписокШаблонов.Количество() > 1 Тогда
		
		СписокШаблонов.ПоказатьВыборЭлемента(ОповещениеОВыборе, НСтр("ru='Выберите шаблон'"));
		
	Иначе
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("НаименованиеКнопкиВыбора", НСтр("ru='Выбрать'"));
		ДополнительныеПараметры.Вставить("ЗаголовокФормы", НСтр("ru='Выберите шаблон'"));
		ДополнительныеПараметры.Вставить("ПоказыватьТолькоДокументыПригодныеДляЭДО", Истина);
		
		Если ЗначениеЗаполнено(ПараметрыФормы) Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ДополнительныеПараметры, ПараметрыФормы, Истина);
		КонецЕсли;
		
		РаботаСШаблонамиДокументовКлиент.ПоказатьФормуСозданияДокументаПоШаблону(ОповещениеОВыборе, "ШаблоныДокументов", 
			ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

#Область ПодборДокументаДляИсходящегоЭДО

// Вызывается при подборе объекта учета по исходящему ЭДО
// 
// Параметры:
//  ДокументЭДО - ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  СпособОбработки - Строка
//  ОбработчикПодбора - ОписаниеОповещения
//  СтандартнаяОбработка - Булево
Процедура ПриПодбореОбъектаУчетаПоИсходящемуЭДО(ДокументЭДО, СпособОбработки,
		ОбработчикПодбора, СтандартнаяОбработка) Экспорт
	
	СпособыОбработки = ОбменЭДОДокументооборотКлиентСервер.СпособыОбработкиИсходящегоДокумента();
	Если СпособОбработки <> СпособыОбработки.Документ Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПодбора = ОтражениеВУчетеДОВызовСервера.ПараметрыПодбораДокументаДОДляИсходящегоЭДО(ДокументЭДО);
	
	Если ПараметрыПодбора.ОбъектыУчета.Количество() > 0 Тогда
		Предупреждение = НСтр("ru = 'С документом ЭДО уже связаны документы ДО. С документом ЭДО может быть связан только один документ. Перед добавлением связи разорвите предыдущие связи документа ЭДО с документами ДО.'");
		ПоказатьПредупреждение(, Предупреждение);
		Возврат;
	КонецЕсли;
	
	Контекст = Новый Структура;
	Контекст.Вставить("ДокументЭДО", ДокументЭДО);
	Контекст.Вставить("ОбработчикПодбора", ОбработчикПодбора);
	
	ОбработчикВыбора = Новый ОписаниеОповещения("ОбработчикВыбораДокументаДОДляИсходящегоЭДО", ЭтотОбъект, Контекст);
	
	ОткрытьФорму("Справочник.ДокументыПредприятия.ФормаВыбора",
		ПараметрыПодбора.ПараметрыФормыВыбора ,,,,, ОбработчикВыбора); 
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// После закрытия формы настроек изменяет представление настроек, если надо
//
// Параметры:
//  Результат	 - см. ОтражениеВУчетеДО.НовыеДанныеДляПредставленияНастройкиРучногоОтраженияВУчет
//  Параметры	 - Структура:
//   * ТекущиеДанные - ДанныеФормыЭлементКоллекции
//
Процедура ЗакрытаФормаНастроек(Результат, Параметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		
		Если Результат.КоличествоШаблонов = 0 Тогда
			
			Параметры.ТекущиеДанные.ИндексКартинки = 2;
			
		Иначе
			
			Параметры.ТекущиеДанные.ИндексКартинки = 3;
			
		КонецЕсли;
		
		Параметры.ТекущиеДанные.Настройки = РаботаСШаблонамиДокументовКлиентСервер.ПредставлениеНастроекОтражения(Результат);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СозданиеПослеВыбораШаблона(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РезультатСтруктура = Неопределено;
	Если ТипЗнч(Результат) = Тип("ЭлементСпискаЗначений") Тогда
		
		РезультатСтруктура = Результат.Значение;
		
	Иначе
		
		РезультатСтруктура = Результат;
		
	КонецЕсли;
	
	Шаблон = РезультатСтруктура.ШаблонДокумента;
	Тематика = Неопределено;
	Если РезультатСтруктура.Свойство("ТематикаДокумента") Тогда
		Тематика = РезультатСтруктура.ТематикаДокумента;
	КонецЕсли;
	
	ЭлектронныйДокумент = Параметры.Документ;
	
	Отказ = Ложь;
	ПередСозданиемДокументаДО(ЭлектронныйДокумент, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеБЭД = ОтражениеВУчетеДОВызовСервера.ДанныеДокументооборотаБЭДДляОтражения(ЭлектронныйДокумент);
	Если ДанныеБЭД = Неопределено Тогда
		ПоказатьПредупреждение(,СтрШаблон(НСтр("ru = 'Не удалось получить данные документооборота ЭДО по входящему документу.
									|Проверьте существование сообщения ЭДО информации отправителя по документу %1'"),
									ЭлектронныйДокумент));
		Возврат;
	КонецЕсли;
	
	ПараметрыФормыСозданияДокумента = Новый Структура;
	ПараметрыФормыСозданияДокумента.Вставить("Основание", ЭлектронныйДокумент);
	ПараметрыФормыСозданияДокумента.Вставить("ДанныеБЭД", ДанныеБЭД);
	ПараметрыФормыСозданияДокумента.Вставить("ШаблонДокумента", Шаблон);
	ПараметрыФормыСозданияДокумента.Вставить("ТематикаДокумента", Тематика);
	
	ОткрытьФорму("Справочник.ДокументыПредприятия.Форма.ФормаЭлемента", ПараметрыФормыСозданияДокумента); 
	
КонецПроцедуры

Процедура ПодборПослеВыбораШаблона(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РезультатСтруктура = Неопределено;
	Если ТипЗнч(Результат) = Тип("ЭлементСпискаЗначений") Тогда
		
		РезультатСтруктура = Результат.Значение;
		
	Иначе
		
		РезультатСтруктура = Результат;
		
	КонецЕсли;
	
	Тематика = Неопределено;
	Если РезультатСтруктура.Свойство("ТематикаДокумента") Тогда
		Тематика = РезультатСтруктура.ТематикаДокумента;
	КонецЕсли;
	
	ПараметрыФормыВыбораДокумента = ОтражениеВУчетеДОВызовСервера.ПараметрыДляВыбораДокумента(
		РезультатСтруктура.ШаблонДокумента,
		Параметры.Документ,
		Тематика);
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Документ", Параметры.Документ);
	ПослеВыбораДокумента = Новый ОписаниеОповещения("ПослеВыбораДокумента", ЭтотОбъект, ПараметрыОповещения);
	
	ОткрытьФорму("Справочник.ДокументыПредприятия.ФормаВыбора", ПараметрыФормыВыбораДокумента,,,,, ПослеВыбораДокумента); 
	
КонецПроцедуры

Процедура ПослеВыбораДокумента(Результат, Параметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли; 
	
	ОтражениеВУчетеДОВызовСервера.УстановитьСвязьЭлектронногоДокументаСОбъектомУчета(Параметры.Документ, Результат);
	Оповестить(ИнтерфейсДокументовЭДОКлиент.ИмяСобытияОбновленияСостоянияЭДО());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

// Перед интерактивным отражением документа ЭДО
//
// Параметры:
//  ЭлектронныйДокумент	 - ДокументСсылка.ЭлектронныйДокументВходящийЭДО
//  Отказ				 - Булево
//
Процедура ПередСозданиемДокументаДО(ЭлектронныйДокумент, Отказ)
	
	ОбменСКонтрагентамиДОМиграцияКлиент.ПередСозданиемДокументаДО(ЭлектронныйДокумент, Отказ);
	ОбменСКонтрагентамиДОХолдингКлиент.ПередСозданиемДокументаДО(ЭлектронныйДокумент, Отказ);
	
КонецПроцедуры

// Текст предупреждения о том, что нельзя связывать документ с более, чем 1 документом учета
// 
// Возвращаемое значение:
//  Строка
//
Функция ПредупреждениеБольшеОдногоОбъектаУчета()
	
	Возврат НСтр("ru = 'С входящим документом ЭДО уже связан документ 1С:Документооборот.'");
	
КонецФункции

#Область ПодборДокументаДляИсходящегоЭДО

// Обработчик выбора документа ДО при подборе объекта учета для исходящего ЭДО
// 
// Параметры:
//  ДокументДО - СправочникСсылка.ДокументыПредприятия
//  Контекст - Структура:
//    * ДокументЭДО - ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//    * ОбработчикПодбора - ОписаниеОповещения
//
Процедура ОбработчикВыбораДокументаДОДляИсходящегоЭДО(ДокументДО, Контекст) Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументДО) Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(Контекст.ОбработчикПодбора, ДокументДО);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти