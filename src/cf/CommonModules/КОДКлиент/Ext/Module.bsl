
#Область ПрограммныйИнтерфейс

// Конструктор параметров создания файла настроек узла.
//
// Возвращаемое значение:
//	Структура:
//		* ИдентификаторФормы - УникальныйИдентификатор, Неопределено - Идентификатор формы, из которой была вызвана процедура создания файла настроек.
//		* Узел - СправочникСсылка.УзлыКОД, Неопределено - Узел, настройки которого необходимо выгрузить в файл.
//
Функция ПараметрыСозданияФайлаНастроекУзла() Экспорт
	
	Контекст = Новый Структура;
	Контекст.Вставить("ИдентификаторФормы", Неопределено);
	Контекст.Вставить("Узел", Неопределено);
	
	Возврат Контекст;
	
КонецФункции

// Выполняет создание файла инициализации периферийного узла.
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - Форма, из которой была вызвана процедура создания файла настроек.
//	Узел - СправочникСсылка.УзлыКОД - Узел, для которого необходимо создать файл инициализации.
//
Процедура СоздатьФайлНастроекУзла(Форма, Узел) Экспорт
	
	ПараметрыВыполнения = ПараметрыСозданияФайлаНастроекУзла();
	ПараметрыВыполнения.ИдентификаторФормы = Форма.УникальныйИдентификатор;
	ПараметрыВыполнения.Узел = Узел;
	
	ДлительнаяОперация = КОДВызовСервера.НачатьСозданиеФайлаНастроекУзла(ПараметрыВыполнения);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		ДлительнаяОперация,
		Новый ОписаниеОповещения("СоздатьФайлНастроекУзлаОбработатьРезультат", КОДСлужебныйКлиент, ПараметрыВыполнения),
		ПараметрыОжидания);
	
КонецПроцедуры

// Выполняет показ диалога выбора файла настроек.
//
// Параметры:
//	Оповещение - ОписаниеОповещения - Оповещение, которое должно быть выполнено после успешного выбора файла.
//	ИмяФайла - Строка - Путь начальному файлу настроек.
//
Процедура ВыбратьФайлНастроек(Оповещение, ИмяФайла = Неопределено) Экспорт
	
	Контекст = КонтекстВыбораФайлаНастроекУзла();
	Контекст.Оповещение = Оповещение;
	Контекст.ИмяФайла = ИмяФайла;
	
	Оповещение = Новый ОписаниеОповещения(
		"ВыбратьФайлНастроекПослеПроверкиРасширенияРаботыСФайлами", КОДСлужебныйКлиент, Контекст);
	
	СообщениеОбУстановкеРасширения =
		НСтр("ru = 'Для выбора файла необходимо установить расширение для работы с 1С:Предприятием.'",
			ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
	
	ФайловаяСистемаКлиент.ПодключитьРасширениеДляРаботыСФайлами(
		Оповещение, СообщениеОбУстановкеРасширения, Ложь);
	
КонецПроцедуры

// Конструктор параметров загрузки файла настроек узла.
//
// Возвращаемое значение:
//	Структура:
//		* ИмяФайла - Строка - Путь к файлу настроек.
//		* Форма - ФормаКлиентскогоПриложения, Неопределено - Форма, из которой был вызван обработчик загрузки настроек.
//		* ВключитьРегламентныеЗаданияОбмена - Булево - Признак необходимости включения регламентных заданий обмена данными.
//		* ОбработчикЗавершения - ОписаниеОповещения, Неопределено - Обработчик, который должен быть вызван после успешной загрузки настроек.
//
Функция ПараметрыЗагрузкиФайлаНастроекУзла() Экспорт
	
	Контекст = Новый Структура;
	Контекст.Вставить("ИмяФайла", "");
	Контекст.Вставить("Форма", Неопределено);
	Контекст.Вставить("ВключитьРегламентныеЗаданияОбмена", Ложь);
	Контекст.Вставить("ОбработчикЗавершения", Неопределено);
	
	Возврат Контекст;
	
КонецФункции

// Выполняет загрузку файла настроек узла.
//
// Параметры:
//	Контекст - см. ПараметрыЗагрузкиФайлаНастроекУзла
//
Процедура ЗагрузитьНастройкиУзлаИзФайла(Контекст) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ЗагрузитьНастройкиУзлаПослеСозданияДвоичныхДанных", КОДСлужебныйКлиент, Контекст);
		
	НачатьСозданиеДвоичныхДанныхИзФайла(ОписаниеОповещения, Контекст.ИмяФайла);
	
КонецПроцедуры

// Подготавливает узел к отложенной настройке (вариант инициализации узла "Периферийный узел - Настроить узел позже").
//
// Параметры:
//	Контекст - Структура:
//		* Форма - ФормаКлиентскогоПриложения.
//		* ОбработчикЗавершения - ОписаниеОповещения.
//
Процедура ПодготовитьУзелКОтложеннойНастройке(Контекст) Экспорт
	
	ДлительнаяОперация = КОДВызовСервера.НачатьПодготовкуКОтложеннойНастройкеУзла();
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Контекст.Форма);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		ДлительнаяОперация,
		Новый ОписаниеОповещения("ПодготовитьУзелКОтложеннойНастройкеОбработатьРезультат", КОДСлужебныйКлиент, Контекст),
		ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Конструктор параметров выбора файла настроек узла.
//
// Возвращаемое значение:
//	Структура:
//		* Оповещение - ОписаниеОповещения, Неопределено - Оповещение, которое должно быть выполнено после успешного выбора файла.
//		* ИмяФайла - Строка - Путь начальному файлу настроек.
//
Функция КонтекстВыбораФайлаНастроекУзла()
	
	Контекст = Новый Структура;
	Контекст.Вставить("Оповещение", Неопределено);
	Контекст.Вставить("ИмяФайла", "");
	
	Возврат Контекст;
	
КонецФункции

#КонецОбласти
