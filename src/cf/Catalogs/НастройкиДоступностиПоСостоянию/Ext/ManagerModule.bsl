#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
// Заполняет действия в НДПС, если они не заполнены.
// Создает новые строки с состояниями и видами действий, после чего копирует в них существующие
// настройки по таким же состояниям
// 
// Параметры:
//  Настройка - СправочникСсылка.НастройкиДоступностиПоСостоянию - Настройка
Процедура ЗаполнитьДействияВНДПС(Настройка, Записывать = Истина) Экспорт
	
	Если ТипЗнч(Настройка) = Тип("СправочникОбъект.НастройкиДоступностиПоСостоянию") Тогда
		НастройкаОбъект = Настройка;
	ИначеЕсли ТипЗнч(Настройка) = Тип("СправочникСсылка.НастройкиДоступностиПоСостоянию") Тогда
		НастройкаОбъект = Настройка.ПолучитьОбъект();
	КонецЕсли;
	
	ВариантНастройки = НастройкаОбъект.ВариантНастройкиДляВидовДокументов;
	
	ВидыДействий = Новый Массив;
	
	Если ВариантНастройки = Перечисления.ВариантыНастройкиДоступностиДляВидовДокументов.ДляВсехВидовДокументов Тогда
		ВидыДействий = ДействияСервер.ВсеВидыДействий();
	Иначе
		ВидыДокументов = Новый Массив;
		
		НаборЗаписей = РегистрыСведений.НастройкиДоступностиДляВидовДокументов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НастройкаДоступностиПоСостоянию.Установить(Настройка);
		НаборЗаписей.Прочитать();
		
		Для Каждого Запись Из НаборЗаписей Цикл
			ВидыДокументов.Добавить(Запись.ВидДокумента);
		КонецЦикла;
		
		ВидыДействий = ДействияСервер.ДействующиеВидыДействийПоВидамОбъектов(ВидыДокументов);
	КонецЕсли;
	
	Если ВидыДействий.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ВидыИСостояния = ДействияСервер.СостоянияДокументовВидовДействий(ВидыДействий);
	
	ВсеПоля = Делопроизводство.ПолучитьИменаПолейИКомандДляНастройкиДоступности();
	
	НовыеНастройки = НастройкаОбъект.НастройкиДоступности.Выгрузить(
		Новый Структура("Состояние", Перечисления.СостоянияДокументов.Проект));
	
	Для Каждого СтрокаПоля Из ВсеПоля Цикл
		Для Каждого КлючИЗначение Из ВидыИСостояния Цикл
			Для Каждого Состояние Из КлючИЗначение.Значение Цикл
				
				НовСтр = НовыеНастройки.Добавить();
				НовСтр.ВидДействия = КлючИЗначение.Ключ;
				НовСтр.ИмяПоляКоманды = СтрокаПоля.ИмяПоляКоманды;
				НовСтр.Состояние = Состояние;
				
				ИсходныеСтроки = НастройкаОбъект.НастройкиДоступности.НайтиСтроки(
					Новый Структура("ИмяПоляКоманды, Состояние, ВидДействия",
						НовСтр.ИмяПоляКоманды, НовСтр.Состояние, Справочники.ВидыДействий.ПустаяСсылка()));
				
				Если ИсходныеСтроки.Количество() Тогда
					НовСтр.Доступность = ИсходныеСтроки[0].Доступность;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	НастройкаОбъект.НастройкиДоступности.Загрузить(НовыеНастройки);
	
	Если Записывать Тогда
		НастройкаОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

// Заполняет действия во всех НДПС по переданному виду документа
// См. ЗаполнитьДействияВНДПС
// 
// Параметры:
//  ВидДокумента - СправочникСсылка.ВидыДокументов
// 
Процедура ЗаполнитьДействияВНДПСПоВиду(ВидДокумента) Экспорт
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	НастройкиДоступностиДляВидовДокументов.НастройкаДоступностиПоСостоянию КАК НастройкаДоступностиПоСостоянию
			|ИЗ
			|	РегистрСведений.НастройкиДоступностиДляВидовДокументов КАК НастройкиДоступностиДляВидовДокументов
			|ГДЕ
			|	НЕ НастройкиДоступностиДляВидовДокументов.НастройкаДоступностиПоСостоянию.ПометкаУдаления
			|	И НастройкиДоступностиДляВидовДокументов.ВидДокумента В(&ВидыДокументов)
			|	И НастройкиДоступностиДляВидовДокументов.НастройкаДоступностиПоСостоянию.ВариантНастройкиДляВидовДокументов = ЗНАЧЕНИЕ(Перечисление.ВариантыНастройкиДоступностиДляВидовДокументов.ДляВыбранныхВидовДокументов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	НастройкиДоступностиПоСостоянию.Ссылка
			|ИЗ
			|	Справочник.НастройкиДоступностиПоСостоянию КАК НастройкиДоступностиПоСостоянию
			|ГДЕ
			|	НЕ НастройкиДоступностиПоСостоянию.ПометкаУдаления
			|	И НастройкиДоступностиПоСостоянию.ТипДокумента = &ТипДокумента
			|	И НастройкиДоступностиПоСостоянию.ВариантНастройкиДляВидовДокументов = ЗНАЧЕНИЕ(Перечисление.ВариантыНастройкиДоступностиДляВидовДокументов.ДляВсехВидовДокументов)";
		
		Запрос.УстановитьПараметр("ТипДокумента", Перечисления.ТипыОбъектов.ДокументыПредприятия);
		
		ВидыДокументов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВидДокумента);
		РодителиВида = ОбщегоНазначенияДокументооборот.ВсеРодителиЭлемента(ВидДокумента);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВидыДокументов, РодителиВида);
		Запрос.УстановитьПараметр("ВидыДокументов", ВидыДокументов);
		
		Настройки = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НастройкаДоступностиПоСостоянию");
		
		Для Каждого Настройка Из Настройки Цикл
			ЗаполнитьДействияВНДПС(Настройка);
		КонецЦикла;
		
КонецПроцедуры

// Возвращает таблицу с переименованными и добавленными/удаленными полями НДПС в 3.0
// 
// Параметры:
//  ТипДокумента - ПеречислениеСсылка.ТипыОбъектов -
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Замены полей из 2.1:
// * СтароеПоле - Строка - Имя поля в 2.1. Если отсутствует - поля раньше не было.
// * НовоеПоле - Строка - Имя поля в 3.0. Если отсутствует - поле удалено.
// * ТипДокумента - ПеречислениеСсылка.ТипыОбъектов - тип документа, к которому относится замена поля
Функция ЗаменыПолейИз21В30() Экспорт
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("СтароеПоле");
	Результат.Колонки.Добавить("НовоеПоле");
	Результат.Колонки.Добавить("ТипДокумента");

	// Все типы документов
	ДобавитьСтрокуВТаблицуЗамен(Результат, "", "Обработка");
	ДобавитьСтрокуВТаблицуЗамен(Результат, "", "ВременныйНомер");
	ДобавитьСтрокуВТаблицуЗамен(Результат, "", "ОтменяетДокументы");
	
	// документы предприятия
	ДобавитьСтрокуВТаблицуЗамен(Результат, "", "ВопросыОбращения", Перечисления.ТипыОбъектов.ДокументыПредприятия);
	ДобавитьСтрокуВТаблицуЗамен(Результат, "", "ВОтветНа", Перечисления.ТипыОбъектов.ДокументыПредприятия);
	ДобавитьСтрокуВТаблицуЗамен(Результат, "", "НомерКонтрагента", Перечисления.ТипыОбъектов.ДокументыПредприятия);
	ДобавитьСтрокуВТаблицуЗамен(Результат, "", "ПредметПереписки", Перечисления.ТипыОбъектов.ДокументыПредприятия);
	ДобавитьСтрокуВТаблицуЗамен(Результат, "", "СпособОтправкиПолучения", Перечисления.ТипыОбъектов.ДокументыПредприятия);
		
	Возврат Результат;
	
КонецФункции

Процедура ДобавитьСтрокуВТаблицуЗамен(ТаблицаЗамен, СтароеПоле, НовоеПоле, ТипДокумента = Неопределено)
	
		НоваяСтрока = ТаблицаЗамен.Добавить();
		НоваяСтрока.СтароеПоле = СтароеПоле;
		НоваяСтрока.НовоеПоле = НовоеПоле;
		НоваяСтрока.ТипДокумента = ТипДокумента;
	
КонецПроцедуры

#КонецЕсли