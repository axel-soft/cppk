#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Рассчитывает хэш-сумму объекта
// 
Функция РассчитатьХэш() Экспорт
	
	// Упорядочивание всех табличных частей
	Сравнение = Новый СравнениеЗначений;
	Контрагенты.Сортировать("ГруппаДоступа Возр", Сравнение);
	ФизическиеЛица.Сортировать("ГруппаДоступа Возр", Сравнение);
	НастройкаПрав.Сортировать("Пользователь Возр, Право Возр", Сравнение);
	
	// Сформируем параметра расчета хэша.
	ПараметрыРасчетаХэша =
		Справочники.ДескрипторыДоступаОбъектов.НовыеПараметрыРасчетаХэша();
	
	ПараметрыРасчетаХэша.ВидОбъекта = ВидОбъекта;
	ПараметрыРасчетаХэша.ВопросДеятельности = ВопросДеятельности;
	ПараметрыРасчетаХэша.ГрифДоступа = ГрифДоступа;
	ПараметрыРасчетаХэша.Организация = Организация;
	ПараметрыРасчетаХэша.Папка = Папка;
	ПараметрыРасчетаХэша.ПапкаПередаетВсеПрава = ПапкаПередаетВсеПрава;
	ПараметрыРасчетаХэша.Проект = Проект;
	ПараметрыРасчетаХэша.Подразделение = Подразделение;
	ПараметрыРасчетаХэша.КонтейнерСотрудников = КонтейнерСотрудников;
	ПараметрыРасчетаХэша.Изменение = Изменение;
	ПараметрыРасчетаХэша.ОбъектДоступа = ОбъектДоступа;
	ПараметрыРасчетаХэша.ДляЛокальныхАдминистраторов = ДляЛокальныхАдминистраторов;
	ПараметрыРасчетаХэша.Контрагенты = Контрагенты.Выгрузить();
	ПараметрыРасчетаХэша.ФизическиеЛица = ФизическиеЛица.Выгрузить();
	ПараметрыРасчетаХэша.НастройкаПрав = НастройкаПрав.Выгрузить();
	
	// Рассчитаем хэш.
	Хэш = Справочники.ДескрипторыДоступаОбъектов.РассчитатьХэш(ПараметрыРасчетаХэша);
	
КонецФункции

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Если это очистка устаревших дескрипторов, пересчет прав не нужен
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Справочники.ДескрипторыДоступаОбъектов.РассчитатьПрава(Ссылка, Неопределено);
	
КонецПроцедуры

// Заполняет реквизит ЭтоПустойДескриптор
// 
Функция ЗаполнитьПризнакПустого() Экспорт
	
	ЭтоПустойДескриптор = 
		Не (ЗначениеЗаполнено(ВидОбъекта)
		Или ЗначениеЗаполнено(ВопросДеятельности)
		Или ЗначениеЗаполнено(ГрифДоступа)
		Или ЗначениеЗаполнено(Организация)
		Или ЗначениеЗаполнено(Подразделение)
		Или ЗначениеЗаполнено(Папка)
		Или ЗначениеЗаполнено(Проект)
		Или ЗначениеЗаполнено(КонтейнерСотрудников)
		Или ЗначениеЗаполнено(ОбъектДоступа)
		Или Контрагенты.Количество() > 0
		Или ФизическиеЛица.Количество() > 0
		Или НастройкаПрав.Количество() > 0
		Или Группа = Истина
		Или ИдентификаторОбъектаМетаданных = 
			ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.ПапкиДокументов")
		Или ИдентификаторОбъектаМетаданных = 
			ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.ПапкиФайлов")
		Или ИдентификаторОбъектаМетаданных = 
			ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.ПапкиПисем")
		Или ИдентификаторОбъектаМетаданных = 
			ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.ПапкиМероприятий")
		Или ИдентификаторОбъектаМетаданных = 
			ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.ПапкиПроектов")	
		Или ИдентификаторОбъектаМетаданных = 
			ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.ПапкиФорума"));
		
КонецФункции

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли