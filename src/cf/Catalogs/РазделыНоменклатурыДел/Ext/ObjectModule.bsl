#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Организация) Тогда 
		Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(Родитель) Тогда 
		
		РеквизитыРодителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Родитель, "Год, Организация, Подразделение");
		
		Если Год <> РеквизитыРодителя.Год Тогда
			ОбщегоНазначения.СообщитьПользователю(	
				НСтр("ru = 'Год раздела не совпадает с годом вышестоящего раздела'"),
				ЭтотОбъект,
				"Год",,
				Отказ);
		КонецЕсли;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям")
			И Организация <> РеквизитыРодителя.Организация Тогда
			ОбщегоНазначения.СообщитьПользователю(	
				РедакцииКонфигурацииКлиентСервер.ОшибкаРазделыНоменклатурыДел(),
				ЭтотОбъект,
				"Организация",,
				Отказ);
		КонецЕсли;		
	
		Если Подразделение <> РеквизитыРодителя.Подразделение Тогда  
			Если Не ЗначениеЗаполнено(Подразделение) Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Вышестоящий раздел отнесен к подразделению %1, укажите подразделение текущего раздела'"), 
					РеквизитыРодителя.Подразделение);
				ОбщегоНазначения.СообщитьПользователю(
					ТекстСообщения,
					ЭтотОбъект,
					"Подразделение",,
					Отказ);
			ИначеЕсли Не Делопроизводство.ЭтоДочернееПодразделение(Подразделение, РеквизитыРодителя.Подразделение) Тогда 
				ОбщегоНазначения.СообщитьПользователю(	
					НСтр("ru = 'Указанное подразделение не в подчинении подразделения вышестоящего раздела'"),
					ЭтотОбъект,
					"Подразделение",,
					Отказ);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ПометкаУдаления Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	РазделыНоменклатурыДел.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.РазделыНоменклатурыДел КАК РазделыНоменклатурыДел
			|ГДЕ
			|	РазделыНоменклатурыДел.Индекс = &Индекс
			|	И РазделыНоменклатурыДел.Год = &Год
			|	И Не РазделыНоменклатурыДел.ПометкаУдаления
			|	И РазделыНоменклатурыДел.Ссылка <> &Ссылка";
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
			Запрос.Текст = Запрос.Текст + " И (Организация = &Организация) ";
			Запрос.УстановитьПараметр("Организация", Организация);
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Индекс", Индекс);
		Запрос.УстановитьПараметр("Год", Год);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда 
			ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Раздел номенклатуры дел с указанным индексом уже зарегистрирован'"),
			ЭтотОбъект,,,
			Отказ);
		КонецЕсли;
	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
	Иначе 
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ПометкаУдаления, Подразделение, Организация");
		ДополнительныеСвойства.Вставить("ПометкаУдаления", Реквизиты.ПометкаУдаления);
		ДополнительныеСвойства.Вставить("Подразделение", Реквизиты.Подразделение);
		ДополнительныеСвойства.Вставить("Организация", Реквизиты.Организация);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ЭтоНовый") 
		И ДополнительныеСвойства.ЭтоНовый Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ПометкаУдаления") 
		И ДополнительныеСвойства.ПометкаУдаления <> ПометкаУдаления Тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НоменклатураДел.Ссылка
		|ИЗ
		|	Справочник.НоменклатураДел КАК НоменклатураДел
		|ГДЕ
		|	НоменклатураДел.Раздел = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			Объект.Заблокировать();
			Объект.УстановитьПометкуУдаления(Ссылка.ПометкаУдаления);
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("Подразделение") 
		И ДополнительныеСвойства.Подразделение <> Подразделение Тогда 
		
		УстановитьПривилегированныйРежим(Истина);
		
		// Меняем подразделение у дел находящихся в номенклатуре дел текущего раздела
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ДелаХраненияДокументов.Ссылка
			|ИЗ
			|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
			|ГДЕ
			|	ДелаХраненияДокументов.НоменклатураДел.Раздел = &Ссылка";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл 
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ДелоОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДелоОбъект.Записать();
		КонецЦикла;
		
		// Меняем подразделение у подчиненных разделов
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	РазделыНоменклатурыДел.Ссылка
			|ИЗ
			|	Справочник.РазделыНоменклатурыДел КАК РазделыНоменклатурыДел
			|ГДЕ
			|	НЕ РазделыНоменклатурыДел.ПометкаУдаления
			|	И РазделыНоменклатурыДел.Родитель = &Ссылка
			|	И РазделыНоменклатурыДел.Подразделение <> &Подразделение";
			
		Если ЗначениеЗаполнено(Подразделение) Тогда 
			Запрос.Текст = Запрос.Текст + "
			|	И НЕ РазделыНоменклатурыДел.Подразделение В ИЕРАРХИИ (&Подразделение)";
		КонецЕсли;	
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Запрос.Параметры.Вставить("Подразделение", Подразделение);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			РазделНоменклатурыДелОбъект = Выборка.Ссылка.ПолучитьОбъект();
			РазделНоменклатурыДелОбъект.Подразделение = Ссылка.Подразделение;
			РазделНоменклатурыДелОбъект.Записать();
		КонецЦикла;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("Организация") 
		И ДополнительныеСвойства.Организация <> Организация 
		И ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда 
		
		УстановитьПривилегированныйРежим(Истина);
		
		// Меняем организацию у номенклатуры дел и дел находящихся в текущем разделе
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ДелаХраненияДокументов.Ссылка
			|ИЗ
			|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
			|ГДЕ
			|	ДелаХраненияДокументов.НоменклатураДел.Раздел = &Ссылка
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	НоменклатураДел.Ссылка
			|ИЗ
			|	Справочник.НоменклатураДел КАК НоменклатураДел
			|ГДЕ
			|	НоменклатураДел.Раздел = &Ссылка";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл 
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ВыборкаОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			Если ТипЗнч(ВыборкаОбъект) = Тип("СправочникОбъект.НоменклатураДел") Тогда 
				ВыборкаОбъект.Организация = Организация;
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ВыборкаОбъект);
			РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
		КонецЦикла;
		
		// Меняем организацию у подчиненных разделов
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	РазделыНоменклатурыДел.Ссылка
			|ИЗ
			|	Справочник.РазделыНоменклатурыДел КАК РазделыНоменклатурыДел
			|ГДЕ
			|	НЕ РазделыНоменклатурыДел.ПометкаУдаления
			|	И РазделыНоменклатурыДел.Родитель = &Ссылка
			|	И РазделыНоменклатурыДел.Организация <> &Организация";
			
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Запрос.Параметры.Вставить("Организация", Организация);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			РазделНоменклатурыДелОбъект = Выборка.Ссылка.ПолучитьОбъект();
			РазделНоменклатурыДелОбъект.Организация = Организация;
			РазделНоменклатурыДелОбъект.Записать();
			РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли