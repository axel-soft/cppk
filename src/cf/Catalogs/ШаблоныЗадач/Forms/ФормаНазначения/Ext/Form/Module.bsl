#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ДанныеНазначения);
	Создал = Параметры.Создал;
	
	ОбновитьДоступностьЭлементов();
	
	УстановитьВидыПриложений();
	УстановитьФункциюУчастников();
	УстановитьПараметрыВыбораДополнительныхУсловий();
	УстановитьПараметрыВыбораТематики();
	
	ЗаполнитьКомуПриНеобходимости();
	ОбновитьПредставлениеНазначения();
	
	НастроитьПолеКому();
	
	ОбновитьКоличествоРасширенныхНастроек();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомуПриИзменении(Элемент)
	
	КомуПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомуАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если Элемент.РежимВыбораИзСписка Тогда
		Возврат;
	КонецЕсли;
	
	ТекстПоиска = СокрЛП(Текст);
	Если Не ЗначениеЗаполнено(ТекстПоиска) Или СтрДлина(ТекстПоиска) < 2 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнениеТипа = Новый ОписаниеТипов(
		"СправочникСсылка.Сотрудники,
		|СправочникСсылка.ПроектыКонтейнеры,
		|СправочникСсылка.ПолныеРоли,
		|СправочникСсылка.РабочиеГруппы,
		|СправочникСсылка.ПодразделенияКонтейнеры");
	
	ДанныеВыбора = СотрудникиВызовСервера.СформироватьДанныеВыбора(ТекстПоиска, ДополнениеТипа);
	
	Если ЗначениеЗаполнено(ДанныеВыбора) Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КомуОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка)
	
	Если Элемент.РежимВыбораИзСписка Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	// Если значение требует уточнения, будет вызвана форма для ввода уточняющих данных.
	// Обработка выбора не должна выполняться в этом случае.
	ТипыДляУточнения = Новый Массив;
	ТипыДляУточнения.Добавить(Тип("Структура"));
	ТипыДляУточнения.Добавить(Тип("СправочникСсылка.РолиИсполнителей"));
	ТипыДляУточнения.Добавить(Тип("СправочникСсылка.СтруктураПредприятия"));
	ТипыДляУточнения.Добавить(Тип("СправочникСсылка.Проекты"));
	Если ТипыДляУточнения.Найти(ТипЗнч(ВыбранноеЗначение)) <> Неопределено Тогда
		СотрудникиКлиент.ОбработкаВыбораКонтейнера(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
		// Повторная проверка (значение могло быть изменено).
		Если ТипыДляУточнения.Найти(ТипЗнч(ВыбранноеЗначение)) <> Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Кому = ВыбранноеЗначение;
	Иначе
		Кому = ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка")
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомуНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	Если Элемент.РежимВыбораИзСписка Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", 1);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ВыбиратьКонтейнерыПользователей", Истина);
	ПараметрыФормы.Вставить("ПодменятьПользователейСотрудниками", Истина);
	
	Если ЗначениеЗаполнено(Кому) Тогда
		ПараметрыФормы.Вставить("ВыбранныеАдресаты", Кому);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Выбор кому'"));
	
	ОткрытьФорму("Справочник.АдреснаяКнига.Форма.ФормаСписка",
		ПараметрыФормы, 
		Элемент,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура КомуОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если Элемент.РежимВыбораИзСписка Тогда
		Возврат;
	КонецЕсли;
	
	ТекстПоиска = СокрЛП(Текст);
	Если Не ЗначениеЗаполнено(ТекстПоиска) Или СтрДлина(ТекстПоиска) < 2 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнениеТипа = Новый ОписаниеТипов(
		"СправочникСсылка.Сотрудники,
		|СправочникСсылка.ПроектыКонтейнеры,
		|СправочникСсылка.ПолныеРоли,
		|СправочникСсылка.РабочиеГруппы,
		|СправочникСсылка.ПодразделенияКонтейнеры");
	
	ДанныеВыбора = СотрудникиВызовСервера.СформироватьДанныеВыбора(ТекстПоиска, ДополнениеТипа);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипПриложенияПриИзменении(Элемент)
	
	ТипПриложенияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПриложенияПриИзменении(Элемент)
	
	ВидПриложенияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантИерархииПриИзменении(Элемент)
	
	ОбновитьПредставлениеНазначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ТематикаПриИзменении(Элемент)
	
	ТематикаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительноеУсловиеПриИзменении(Элемент)
	
	ДополнительноеУсловиеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВажностьПриИзменении(Элемент)
	
	ВажностьПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ГрифДоступаПриИзменении(Элемент)
	
	ГрифДоступаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ПодразделениеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаДокументаПриИзменении(Элемент)
	
	ФормаДокументаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДействияОбработкиПриИзменении(Элемент)
	
	ВидДействияОбработкиПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ФункцияУчастникаДействияПриИзменении(Элемент)
	
	ОбновитьПредставлениеНазначения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	ДанныеНазначения = РаботаСЗадачамиКлиентСервер.НовыеДанныеНазначения();
	ЗаполнитьЗначенияСвойств(ДанныеНазначения, ЭтотОбъект);
	Если Не ЗначениеЗаполнено(ДанныеНазначения.ВидПриложения) Тогда
		ДанныеНазначения.ВидПриложения =
			ПредопределенноеЗначение("Справочник.ВидыДокументов.ПустаяСсылка");
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДанныеНазначения.ФункцияУчастникаДействия) Тогда
		ДанныеНазначения.ФункцияУчастникаДействия =
			ПредопределенноеЗначение("Перечисление.ФункцииУчастниковИсполнения.ПустаяСсылка");
	КонецЕсли;
	
	Закрыть(ДанныеНазначения);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ТипПриложенияПриИзмененииНаСервере()
	
	ОбновитьДоступностьЭлементов();
	
	ОчиститьНедоступныеНазначения();
	ОчиститьНедоступныеДополнительныеУсловия();
	
	УстановитьВидыПриложений();
	УстановитьПараметрыВыбораДополнительныхУсловий();
	
	ОбновитьПредставлениеНазначения();
	
	ОбновитьКоличествоРасширенныхНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДоступностьЭлементов()
	
	ДоступностьНазначений = Перечисления.ТипыПриложенийЗадач.ДоступностьНазначений(ТипПриложения);
	
	Элементы.ВидПриложения.Доступность = ДоступностьНазначений.ВидПриложения;
	Элементы.Тематика.Доступность = ДоступностьНазначений.Тематика;
	Элементы.Важность.Доступность = ДоступностьНазначений.Важность;
	Элементы.ГрифДоступа.Доступность = ДоступностьНазначений.ГрифДоступа;
	Элементы.Организация.Доступность = ДоступностьНазначений.Организация;
	Элементы.Подразделение.Доступность = ДоступностьНазначений.Подразделение;
	Элементы.ФормаДокумента.Доступность = ДоступностьНазначений.ФормаДокумента;
	Элементы.ВидДействияОбработки.Доступность = ДоступностьНазначений.ВидДействияОбработки;
	Элементы.ФункцияУчастникаДействия.Доступность = ДоступностьНазначений.ФункцияУчастникаДействия
		И ЗначениеЗаполнено(ВидДействияОбработки);
	Элементы.ДополнительноеУсловие.Доступность = ДоступностьНазначений.ДополнительноеУсловие;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНедоступныеНазначения()
	
	Если Не Элементы.ВидПриложения.Доступность Тогда
		ВидПриложения = Справочники.ВидыДокументов.ПустаяСсылка();
	КонецЕсли;
	
	Если Не Элементы.Тематика.Доступность Тогда
		Тематика = Справочники.ВидыДокументов.ПустаяСсылка();
	КонецЕсли;
	
	Если Не Элементы.Важность.Доступность Тогда
		Важность = Перечисления.ВариантыВажностиОбъектов.ПустаяСсылка();
	КонецЕсли;
	
	Если Не Элементы.ГрифДоступа.Доступность Тогда
		ГрифДоступа = Справочники.ГрифыДоступа.ПустаяСсылка();
	КонецЕсли;
	
	Если Не Элементы.Организация.Доступность Тогда
		Организация = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Если Не Элементы.Подразделение.Доступность Тогда
		Подразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
	КонецЕсли;
	
	Если Не Элементы.ФормаДокумента.Доступность Тогда
		ФормаДокумента = Перечисления.ВариантыФормДокументов.ПустаяСсылка();
	КонецЕсли;
	
	Если Не Элементы.ВидДействияОбработки.Доступность Тогда
		ВидДействияОбработки = Справочники.ВидыДействий.ПустаяСсылка();
	КонецЕсли;
	
	Если Не Элементы.ФункцияУчастникаДействия.Доступность Тогда
		ФункцияУчастникаДействия = Перечисления.ФункцииУчастниковИсполнения.ПустаяСсылка();
	КонецЕсли;
	
	Если Не Элементы.ДополнительноеУсловие.Доступность Тогда
		ДополнительноеУсловие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНедоступныеДополнительныеУсловия()
	
	Если Не ЗначениеЗаполнено(ДополнительноеУсловие) Тогда
		Возврат;
	КонецЕсли;
	
	ТипОбъекта = ТипОбъектаУсловия(ТипПриложения);
	
	РеквизитыДополнительногоУсловия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ДополнительноеУсловие, "ТипОбъекта");
	
	Если ТипОбъекта <> РеквизитыДополнительногоУсловия.ТипОбъекта Тогда
		ДополнительноеУсловие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидыПриложений()
	
	Если ТипПриложения = Перечисления.ТипыПриложенийЗадач.Документы
		И ТипЗнч(ВидПриложения) <> Тип("СправочникСсылка.ВидыДокументов") Тогда
		ВидПриложения = Справочники.ВидыДокументов.ПустаяСсылка();
	КонецЕсли;
	
	Если ТипПриложения = Перечисления.ТипыПриложенийЗадач.Мероприятия
		И ТипЗнч(ВидПриложения) <> Тип("СправочникСсылка.ВидыМероприятий") Тогда
		ВидПриложения = Справочники.ВидыМероприятий.ПустаяСсылка();
	КонецЕсли;
	
	Если ТипПриложения = Перечисления.ТипыПриложенийЗадач.ПротоколыМероприятий
		И ТипЗнч(ВидПриложения) <> Тип("СправочникСсылка.ВидыМероприятий") Тогда
		ВидПриложения = Справочники.ВидыМероприятий.ПустаяСсылка();
	КонецЕсли;
	
	Если ТипПриложения = Перечисления.ТипыПриложенийЗадач.Проекты
		И ТипЗнч(ВидПриложения) <> Тип("СправочникСсылка.ВидыПроектов") Тогда
		ВидПриложения = Справочники.ВидыПроектов.ПустаяСсылка();
	КонецЕсли;
	
	Если ТипПриложения = Перечисления.ТипыПриложенийЗадач.ПроектныеЗадачи
		И ТипЗнч(ВидПриложения) <> Тип("СправочникСсылка.ВидыПроектов") Тогда
		ВидПриложения = Справочники.ВидыПроектов.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораДополнительныхУсловий()
	
	Если Не Элементы.ДополнительноеУсловие.Доступность Тогда
		Возврат;
	КонецЕсли;
	
	ТипОбъекта = ТипОбъектаУсловия(ТипПриложения);
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.ТипОбъекта", ТипОбъекта);
	
	НовыеПараметрыВыбора = Новый Массив;
	НовыеПараметрыВыбора.Добавить(ПараметрВыбора);
	
	Элементы.ДополнительноеУсловие.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметрыВыбора);
	
КонецПроцедуры

&НаСервере
Процедура ВидПриложенияПриИзмененииНаСервере()
	
	ОчиститьНедоступнуюТематику();
	
	УстановитьПараметрыВыбораТематики();
	
	ОбновитьПредставлениеНазначения();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНедоступнуюТематику()
	
	Если Не ЗначениеЗаполнено(Тематика) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыТематики = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Тематика, "ВидДокумента");
	
	Если ВидПриложения <> РеквизитыТематики.ВидДокумента Тогда
		Тематика = Справочники.ТематикиДокументов.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораТематики()
	
	Если Не Элементы.Тематика.Доступность Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.ВидДокумента", ВидПриложения);
	
	НовыеПараметрыВыбора = Новый Массив;
	НовыеПараметрыВыбора.Добавить(ПараметрВыбора);
	
	Элементы.Тематика.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметрыВыбора);
	
КонецПроцедуры

&НаСервере
Процедура КомуПриИзмененииНаСервере()
	
	ЗаполнитьКомуПриНеобходимости();
	ОбновитьПредставлениеНазначения();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКомуПриНеобходимости()
	
	Если ЗначениеЗаполнено(Кому) Тогда
		Возврат;
	КонецЕсли;
	
	Кому = Создал;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставлениеНазначения()
	
	ДанныеНазначения = РаботаСЗадачамиКлиентСервер.НовыеДанныеНазначения();
	ЗаполнитьЗначенияСвойств(ДанныеНазначения, ЭтотОбъект);
	
	ПредставлениеНазначения = РаботаСЗадачами.ПредставлениеНазначения(ДанныеНазначения);
	
КонецПроцедуры

&НаСервере
Процедура ВидДействияОбработкиПриИзмененииНаСервере()
	
	ОбновитьДоступностьЭлементов();
	ОчиститьНедоступныеНазначения();
	
	УстановитьФункциюУчастников();
	
	ОбновитьПредставлениеНазначения();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциюУчастников()
	
	Элементы.ФункцияУчастникаДействия.СписокВыбора.Очистить();
	
	Если ЗначениеЗаполнено(ВидДействияОбработки) Тогда
		РеквизитыВидаДействия =
			ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидДействияОбработки, "Тип");
		ТипДействияОбработки = РеквизитыВидаДействия.Тип;
	Иначе
		ТипДействияОбработки = Перечисления.ТипыДействий.Исполнение;
	КонецЕсли;
	
	Если ТипДействияОбработки  = Перечисления.ТипыДействий.Исполнение
		И ТипЗнч(ФункцияУчастникаДействия) <> Тип("ПеречислениеСсылка.ФункцииУчастниковИсполнения") Тогда
		ФункцияУчастникаДействия = Перечисления.ФункцииУчастниковИсполнения.ПустаяСсылка();
	КонецЕсли;
	
	Если ТипДействияОбработки  = Перечисления.ТипыДействий.Исполнение Тогда
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковИсполнения.Рассматривающий);
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковИсполнения.Исполнитель);
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковИсполнения.ОбрабатывающийРезультат);
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковИсполнения.ОбрабатывающийРезолюцию);
	КонецЕсли;
	
	Если ТипДействияОбработки  = Перечисления.ТипыДействий.Ознакомление
		И ТипЗнч(ФункцияУчастникаДействия) <> Тип("ПеречислениеСсылка.ФункцииУчастниковОзнакомления") Тогда
		ФункцияУчастникаДействия = Перечисления.ФункцииУчастниковОзнакомления.ПустаяСсылка();
	КонецЕсли;
	
	Если ТипДействияОбработки  = Перечисления.ТипыДействий.Ознакомление Тогда
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковОзнакомления.Ознакомляемый);
	КонецЕсли;
	
	Если ТипДействияОбработки  = Перечисления.ТипыДействий.Подписание
		И ТипЗнч(ФункцияУчастникаДействия) <> Тип("ПеречислениеСсылка.ФункцииУчастниковПодписания") Тогда
		ФункцияУчастникаДействия = Перечисления.ФункцииУчастниковПодписания.ПустаяСсылка();
	КонецЕсли;
	
	Если ТипДействияОбработки  = Перечисления.ТипыДействий.Подписание Тогда
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковПодписания.Подписывающий);
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковПодписания.ОбеспечивающийПодписание);
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковПодписания.ОбрабатывающийРезультат);
	КонецЕсли;
	
	Если ТипДействияОбработки  = Перечисления.ТипыДействий.Регистрация
		И ТипЗнч(ФункцияУчастникаДействия) <> Тип("ПеречислениеСсылка.ФункцииУчастниковРегистрации") Тогда
		ФункцияУчастникаДействия = Перечисления.ФункцииУчастниковРегистрации.ПустаяСсылка();
	КонецЕсли;
	
	Если ТипДействияОбработки  = Перечисления.ТипыДействий.Регистрация Тогда
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковРегистрации.Регистратор);
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковРегистрации.ОбрабатывающийРезультат);
	КонецЕсли;
	
	Если ТипДействияОбработки  = Перечисления.ТипыДействий.Согласование
		И ТипЗнч(ФункцияУчастникаДействия) <> Тип("ПеречислениеСсылка.ФункцииУчастниковСогласования") Тогда
		ФункцияУчастникаДействия = Перечисления.ФункцииУчастниковСогласования.ПустаяСсылка();
	КонецЕсли;
	
	Если ТипДействияОбработки  = Перечисления.ТипыДействий.Согласование Тогда
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковСогласования.Согласующий);
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковСогласования.ОбрабатывающийРезультат);
	КонецЕсли;
	
	Если ТипДействияОбработки  = Перечисления.ТипыДействий.Утверждение
		И ТипЗнч(ФункцияУчастникаДействия) <> Тип("ПеречислениеСсылка.ФункцииУчастниковУтверждения") Тогда
		ФункцияУчастникаДействия = Перечисления.ФункцииУчастниковУтверждения.ПустаяСсылка();
	КонецЕсли;
	
	Если ТипДействияОбработки  = Перечисления.ТипыДействий.Утверждение Тогда
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковУтверждения.Утверждающий);
		Элементы.ФункцияУчастникаДействия.СписокВыбора.Добавить(
			Перечисления.ФункцииУчастниковУтверждения.ОбрабатывающийРезультат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ТипОбъектаУсловия(ТипПриложения)
	
	ТипОбъекта = Перечисления.ТипыОбъектов.ПустаяСсылка();
	
	Если ТипПриложения = Перечисления.ТипыПриложенийЗадач.Документы Тогда
		
		ТипОбъекта = Перечисления.ТипыОбъектов.ДокументыПредприятия;
		
	ИначеЕсли ТипПриложения = Перечисления.ТипыПриложенийЗадач.Контрагенты Тогда
		
		ТипОбъекта = Перечисления.ТипыОбъектов.Контрагенты;
		
	ИначеЕсли ТипПриложения = Перечисления.ТипыПриложенийЗадач.Мероприятия Тогда
		
		ТипОбъекта = Перечисления.ТипыОбъектов.Мероприятия;
		
	ИначеЕсли ТипПриложения = Перечисления.ТипыПриложенийЗадач.ПротоколыМероприятий Тогда
		
		ТипОбъекта = Перечисления.ТипыОбъектов.Мероприятия;
		
	ИначеЕсли ТипПриложения = Перечисления.ТипыПриложенийЗадач.ПроектныеЗадачи Тогда
		
		ТипОбъекта = Перечисления.ТипыОбъектов.ПроектныеЗадачи;
		
	ИначеЕсли ТипПриложения = Перечисления.ТипыПриложенийЗадач.Проекты Тогда
		
		ТипОбъекта = Перечисления.ТипыОбъектов.Проекты;
		
	ИначеЕсли ТипПриложения = Перечисления.ТипыПриложенийЗадач.Файлы Тогда
		
		ТипОбъекта = Перечисления.ТипыОбъектов.Файлы;
		
	КонецЕсли;
	
	Возврат ТипОбъекта;
	
КонецФункции

&НаСервере
Процедура НастроитьПолеКому()
	
	Если РаботаСЗадачами.ЕстьПравоНазначенияШаблонов() Тогда
		Элементы.Кому.РежимВыбораИзСписка = Ложь;
	Иначе
		Элементы.Кому.РежимВыбораИзСписка = Истина;
		СотрудникиДляНастройкиШаблонов = РаботаСЗадачами.СотрудникиДляНастройкиШаблонов();
		Для Каждого Сотрудник Из СотрудникиДляНастройкиШаблонов Цикл
			Элементы.Кому.СписокВыбора.Добавить(Сотрудник, Строка(Сотрудник));
		КонецЦикла;
		Если ЗначениеЗаполнено(Кому)
			И Элементы.Кому.СписокВыбора.НайтиПоЗначению(Кому) = Неопределено Тогда
			Элементы.Кому.СписокВыбора.Добавить(Кому, Строка(Кому));
		КонецЕсли;
		Элементы.Кому.СписокВыбора.СортироватьПоПредставлению();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ТематикаПриИзмененииНаСервере()
	
	ОбновитьПредставлениеНазначения();
	ОбновитьКоличествоРасширенныхНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ФормаДокументаПриИзмененииНаСервере()
	
	ОбновитьПредставлениеНазначения();
	ОбновитьКоличествоРасширенныхНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииНаСервере()
	
	ОбновитьПредставлениеНазначения();
	ОбновитьКоличествоРасширенныхНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ОбновитьПредставлениеНазначения();
	ОбновитьКоличествоРасширенныхНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ВажностьПриИзмененииНаСервере()
	
	ОбновитьПредставлениеНазначения();
	ОбновитьКоличествоРасширенныхНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ГрифДоступаПриИзмененииНаСервере()
	
	ОбновитьПредставлениеНазначения();
	ОбновитьКоличествоРасширенныхНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ДополнительноеУсловиеПриИзмененииНаСервере()
	
	ОбновитьПредставлениеНазначения();
	ОбновитьКоличествоРасширенныхНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКоличествоРасширенныхНастроек()
	
	КоличествоРасширенныхНастроек = 0;
	
	Если ЗначениеЗаполнено(Тематика) Тогда
		КоличествоРасширенныхНастроек = КоличествоРасширенныхНастроек + 1;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФормаДокумента) Тогда
		КоличествоРасширенныхНастроек = КоличествоРасширенныхНастроек + 1;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Подразделение) Тогда
		КоличествоРасширенныхНастроек = КоличествоРасширенныхНастроек + 1;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		КоличествоРасширенныхНастроек = КоличествоРасширенныхНастроек + 1;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Важность) Тогда
		КоличествоРасширенныхНастроек = КоличествоРасширенныхНастроек + 1;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ГрифДоступа) Тогда
		КоличествоРасширенныхНастроек = КоличествоРасширенныхНастроек + 1;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДополнительноеУсловие) Тогда
		КоличествоРасширенныхНастроек = КоличествоРасширенныхНастроек + 1;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
