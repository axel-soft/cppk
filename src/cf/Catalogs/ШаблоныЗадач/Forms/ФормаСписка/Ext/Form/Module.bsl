#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьНастройкиПоУмолчанию();
	
	УстановитьРежимВыбора();
	
	УстановитьУсловноеОформление();
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ШаблоныЗадач"
		И ЗначениеЗаполнено(ОбъектОбзора) И Источник = ОбъектОбзора Тогда
		
		ОбновитьОбзорОбъекта();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбзорОбъектаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	РаботаС_HTMLКлиент.ОткрытьСсылку(Элемент, ДанныеСобытия, СтандартнаяОбработка, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		НовыйОбъектОбзора = ПредопределенноеЗначение("Справочник.ШаблоныЗадач.ПустаяСсылка");
	Иначе
		НовыйОбъектОбзора = ТекущиеДанные.Ссылка;
	КонецЕсли;
	
	Если ОбъектОбзора = НовыйОбъектОбзора Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектОбзора = НовыйОбъектОбзора;
	ОбновитьОбзорОбъектаОтложенно();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьТолькоЛичные(Команда)
	
	ПоказыватьТолькоЛичные = Не ПоказыватьТолькоЛичные;
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьНедействительные(Команда)
	
	ПоказыватьНедействительные = Не ПоказыватьНедействительные;
	
	УстановитьОтбор();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьНастройкиПоУмолчанию()
	
	// Применяет настройки по умолчанию при создании, которые работают эффективно,
	// чтобы открытие формы работало быстро.
	ПоказыватьНедействительные = Ложь;
	ПоказыватьТолькоЛичные = Истина;
	ПоказыватьУдаленные = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРежимВыбора()
	
	Если Параметры.Свойство("РежимВыбора") И Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ОбщегоНазначенияДокументооборот.УстановитьУсловноеОформлениеСписка(
		Список.УсловноеОформление,
		"Наименование");
	ОбщегоНазначенияДокументооборот.УстановитьУсловноеОформлениеНедействительных(
		Список.УсловноеОформление,
		"Наименование");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор()
	
	ОбщегоНазначенияДокументооборотКлиентСервер.УстановитьОтборПоказыватьУдаленные(
		Список,
		ПоказыватьУдаленные,
		Элементы.ПоказыватьУдаленные);
	
	ОбщегоНазначенияДокументооборотКлиентСервер.УстановитьОтборПоказыватьНедействительные(
		Список,
		ПоказыватьНедействительные,
		Элементы.ПоказыватьНедействительные);
	
	Элементы.ПоказыватьТолькоЛичные.Пометка = ПоказыватьТолькоЛичные;
	
	Если ПоказыватьТолькоЛичные И Не ПоказыватьНедействительные И Не ПоказыватьУдаленные Тогда
		
		// Отбор по полю "Пользователь" особый, он в себя уже включает не помеченные
		// на удаление действительные записи в самих данных справочника.
		СотрудникиДляНазначенияШаблонов = РаботаСЗадачами.СотрудникиДляНазначенияШаблонов();
		ПользователиДляНазначенияШаблонов =
			Сотрудники.ПользователиСотрудников(СотрудникиДляНазначенияШаблонов);
		
		// Используем список значений, т.к. массив в настройках списка показывает "Пустое значение".
		ОтборПользователь = Новый СписокЗначений;
		Для Каждого Пользователь Из ПользователиДляНазначенияШаблонов Цикл
			ОтборПользователь.Добавить(Пользователь, Строка(Пользователь));
		КонецЦикла;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"Пользователь",
			ОтборПользователь,,,
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Создал");
		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Недействителен");
		
	ИначеЕсли ПоказыватьТолькоЛичные И (ПоказыватьНедействительные Или ПоказыватьУдаленные) Тогда
		
		// Отбор по "Пользователю" особый, он в себя включает не помеченные на удаление
		// действительные записи, если нужно показать удаленные или недейтсвительные то используем
		// неэффективный отбор по всем сотрудникам в поле "Создал".
		СотрудникиДляНазначенияШаблонов = РаботаСЗадачами.СотрудникиДляНазначенияШаблонов();
		
		// Используем список значений, т.к. массив в настройках списка показывает "Пустое значение".
		ОтборСоздал = Новый СписокЗначений;
		Для Каждого Сотрудник Из СотрудникиДляНазначенияШаблонов Цикл
			ОтборСоздал.Добавить(Сотрудник, Строка(Сотрудник));
		КонецЦикла;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"Создал",
			ОтборСоздал,,,
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Пользователь");
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Создал");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Пользователь");
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьОбзорОбъектаОтложенно()
	
	ПодключитьОбработчикОжидания("ОбновитьОбзорОбъекта", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОбзорОбъекта()
	
	Если Не ВводДоступен() Тогда
		ПодключитьОбработчикОжидания("ОбновитьОбзорОбъекта", 1, Истина);
		Возврат;
	КонецЕсли;
	
	ОбзорОбъекта = ОбзорОбъектовКлиент.ОбзораОбъекта(
		ОбъектОбзора,
		УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти