#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет реквизиты предопределенных элементов.
// 
Процедура ЗаполнитьПредопределенные() Экспорт
	
	// Заполнение настроек метрик
	СвойстваМетрикПоУмолчанию = СвойстваПредопределенныхМетрик();
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Метрики.Ссылка,
		|	Метрики.ПериодЗамеров = 0 КАК ПустойПериод,
		|	Метрики.МинимальныйМасштаб = 0 КАК ПустойМасштаб,
		|	ВЫРАЗИТЬ(Метрики.Описание КАК СТРОКА(100)) = """" КАК ПустоеОписание
		|ИЗ
		|	Справочник.Метрики КАК Метрики
		|ГДЕ
		|	Метрики.ИмяПредопределенныхДанных <> """"");
		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СвойстваМетрики = СвойстваМетрикПоУмолчанию.Получить(Выборка.Ссылка);
		Если СвойстваМетрики = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		МетрикаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Если Выборка.ПустойПериод Тогда
			МетрикаОбъект.ПериодЗамеров = СвойстваМетрики.ЧастотаЗамеров;
		КонецЕсли;

		Если Выборка.ПустойМасштаб Тогда
			МетрикаОбъект.МинимальныйМасштаб = 1;
		КонецЕсли;

		МетрикаОбъект.Выражение = СвойстваМетрики.Выражение;

		Если Выборка.ПустоеОписание Тогда
			МетрикаОбъект.Описание = СвойстваМетрики.Описание;
		КонецЕсли;

		ОбновлениеИнформационнойБазы.ЗаписатьДанные(МетрикаОбъект);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает свойства предопределенных метрик ЧастотаЗамеров и Описание
// 
Функция СвойстваПредопределенныхМетрик() Экспорт
	
	// Заполнение настроек метрик
	СвойстваМетрик = Новый Соответствие;
	
	Метрика = Справочники.Метрики.ОперативнаяОчередь;
	Свойства = СвойстваПредопределеннойМетрики();
	Свойства.ЧастотаЗамеров = 10;
	Свойства.Описание = НСтр("ru = 'Количество записей в оперативной очереди обновления прав доступа'");
	Свойства.Выражение =
		"Если Не ПолучитьФункциональнуюОпцию(""ДокументооборотИспользоватьОтложенноеОбновлениеПравДоступа"") Тогда
		|	Результат = Неопределено;
		|КонецЕсли;
		|Результат = РегистрыСведений.ОчередьОбновленияПравДоступа.РазмерОчереди(1);";
	СвойстваМетрик[Метрика] = Свойства;
	
	Метрика = Справочники.Метрики.ДолгаяОчередь;
	Свойства = СвойстваПредопределеннойМетрики();
	Свойства.ЧастотаЗамеров = 10;
	Свойства.Описание = НСтр("ru = 'Количество записей в долгой очереди обновления прав доступа'");
	Свойства.Выражение =
		"Если Не ПолучитьФункциональнуюОпцию(""ДокументооборотИспользоватьОтложенноеОбновлениеПравДоступа"") Тогда
		|	Результат = Неопределено;
		|КонецЕсли;
		|Результат = РегистрыСведений.ОчередьОбновленияПравДоступа.РазмерОчереди(2);";
	СвойстваМетрик[Метрика] = Свойства;
	
	Метрика = Справочники.Метрики.АктивныеПользователи;
	Свойства = СвойстваПредопределеннойМетрики();
	Свойства.ЧастотаЗамеров = 60;
	Свойства.Описание = НСтр("ru = 'Количество одновременно работающих пользователей программы'");
	Свойства.Выражение =
		"Сеансы = ПолучитьСеансыИнформационнойБазы();
		|Результат = Сеансы.Количество();";
	СвойстваМетрик[Метрика] = Свойства;
	
	Метрика = Справочники.Метрики.АктивностьПользователей;
	Свойства = СвойстваПредопределеннойМетрики();
	Свойства.ЧастотаЗамеров = 1440;
	Свойства.Описание = НСтр("ru = 'Количество записей в протоколе работы сотрудников за последние сутки'");
	Свойства.Выражение =
		"Запрос = Новый Запрос(
			|	""ВЫБРАТЬ
			|	|	ЕстьNull(КОЛИЧЕСТВО(ПротоколРаботыСотрудников.Дата), 0) КАК КолЗаписей
			|	|ИЗ
			|	|	РегистрСведений.ПротоколРаботыСотрудников КАК ПротоколРаботыСотрудников
			|	|ГДЕ
			|	|	ПротоколРаботыСотрудников.Дата >= &ДатаСуткиНазад"");
			|Запрос.УстановитьПараметр(""ДатаСуткиНазад"", ТекущаяДата() - 86400);
			|Выборка = Запрос.Выполнить().Выбрать();
			|Выборка.Следующий();
			|Результат = Выборка.КолЗаписей;";
	СвойстваМетрик[Метрика] = Свойства;
	
	Метрика = Справочники.Метрики.АктивныеПроцессы;
	Свойства = СвойстваПредопределеннойМетрики();
	Свойства.ЧастотаЗамеров = 60;
	Свойства.Описание = НСтр("ru = 'Количество активных процессов'");
	Свойства.Выражение =
		"Запрос = Новый Запрос(
			|	""ВЫБРАТЬ
			|	|	ЕСТЬNULL(КОЛИЧЕСТВО(ДанныеБизнесПроцессов.БизнесПроцесс), 0) КАК КолПроцессов
			|	|ИЗ
			|	|	РегистрСведений.ДанныеБизнесПроцессов КАК ДанныеБизнесПроцессов
			|	|ГДЕ
			|	|	НЕ ДанныеБизнесПроцессов.ПометкаУдаления
			|	|	И НЕ ДанныеБизнесПроцессов.Завершен
			|	|	И ДанныеБизнесПроцессов.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Активен)"");
			|Выборка = Запрос.Выполнить().Выбрать();
			|Выборка.Следующий();
			|Результат = Выборка.КолПроцессов;";
	СвойстваМетрик[Метрика] = Свойства;
	
	Метрика = Справочники.Метрики.НевыполненныеЗадачи;
	Свойства = СвойстваПредопределеннойМетрики();
	Свойства.ЧастотаЗамеров = 60;
	Свойства.Описание = НСтр("ru = 'Количество невыполненных задач'");
	Свойства.Выражение =
		"Запрос = Новый Запрос(
			|	""ВЫБРАТЬ
			|	|	ЕСТЬNULL(КОЛИЧЕСТВО(ЗадачаИсполнителя.Ссылка), 0) КАК КолЗадач
			|	|ИЗ
			|	|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
			|	|ГДЕ
			|	|	НЕ ЗадачаИсполнителя.ПометкаУдаления
			|	|	И НЕ ЗадачаИсполнителя.Выполнена
			|	|	И ЗадачаИсполнителя.ТекущийИсполнитель <> НЕОПРЕДЕЛЕНО"");
			|Выборка = Запрос.Выполнить().Выбрать();
			|Выборка.Следующий();
			|Результат = Выборка.КолЗадач;";
	СвойстваМетрик[Метрика] = Свойства;
	
	Метрика = Справочники.Метрики.РазмерФайлов;
	Свойства = СвойстваПредопределеннойМетрики();
	Свойства.ЧастотаЗамеров = 1440;
	Свойства.Описание = НСтр("ru = 'Суммарный размер всех файлов'");
	Свойства.Выражение =
		"Запрос = Новый Запрос(
			|	""ВЫБРАТЬ
			|	|	ЕстьNull(СУММА(ВерсииФайлов.Размер), 0) КАК Размер
			|	|ИЗ
			|	|	Справочник.ВерсииФайлов КАК ВерсииФайлов"");
			|Результат = Запрос.Выполнить();
			|Выборка = Результат.Выбрать();
			|Выборка.Следующий();
			|Результат = Выборка.Размер / (1024 * 1024);";
	СвойстваМетрик[Метрика] = Свойства;
	
	Метрика = Справочники.Метрики.Файлы;
	Свойства = СвойстваПредопределеннойМетрики();
	Свойства.ЧастотаЗамеров = 1440;
	Свойства.Описание = НСтр("ru = 'Количество файлов'");
	Свойства.Выражение =
		"Запрос = Новый Запрос(
			|	""ВЫБРАТЬ
			|	|	ЕстьNull(КОЛИЧЕСТВО(Файлы.Ссылка), 0) КАК КолФайлов
			|	|ИЗ
			|	|	Справочник.Файлы КАК Файлы"");
			|Выборка = Запрос.Выполнить().Выбрать();
			|Выборка.Следующий();
			|Результат = Выборка.КолФайлов;";
	СвойстваМетрик[Метрика] = Свойства;
	
	Метрика = Справочники.Метрики.Контрагенты;
	Свойства = СвойстваПредопределеннойМетрики();
	Свойства.ЧастотаЗамеров = 1440;
	Свойства.Описание = НСтр("ru = 'Количество контрагентов'");
	Свойства.Выражение =
		"Запрос = Новый Запрос(
			|	""ВЫБРАТЬ
			|	|	ЕстьNull(КОЛИЧЕСТВО(Контрагенты.Ссылка), 0) КАК КолЗаписей
			|	|ИЗ
			|	|	Справочник.Контрагенты КАК Контрагенты
			|	|ГДЕ
			|	|	НЕ Контрагенты.ПометкаУдаления"");
			|Выборка = Запрос.Выполнить().Выбрать();
			|Выборка.Следующий();
			|Результат = Выборка.КолЗаписей;";
	СвойстваМетрик[Метрика] = Свойства;
	
	Возврат СвойстваМетрик;
	
КонецФункции

Функция СвойстваПредопределеннойМетрики()
	
	Возврат Новый Структура("ЧастотаЗамеров, Описание, Выражение");
	
КонецФункции

#КонецОбласти

#КонецЕсли
