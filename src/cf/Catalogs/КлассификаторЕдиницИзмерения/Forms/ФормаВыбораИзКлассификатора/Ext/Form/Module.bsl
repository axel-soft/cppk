
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.СтрокаПоиска) Тогда
		СтрокаПоиска = Параметры.СтрокаПоиска;
	КонецЕсли;
	
	Макет = Справочники.КлассификаторЕдиницИзмерения.ПолучитьМакет("КлассификаторЕдиницИзмерения");
	Классификатор.Вывести(Макет);
	Классификатор.ФиксацияСверху = 1;
	
	КолонкаКод = Макет.Области.КодЧисловой.Лево;
	КолонкаНаименованиеКраткое = Макет.Области.НаименованиеКраткое.Лево;
	КолонкаНаименованиеПолное = Макет.Области.НаименованиеПолное.Лево;
	КолонкаУсловноеОбозначениеМеждународное = Макет.Области.УсловноеОбозначениеМеждународное.Лево;
	КолонкаКодовоеОбозначениеМеждународное = Макет.Области.КодовоеОбозначениеМеждународное.Лево;
	
	Если НЕ ПустаяСтрока(СтрокаПоиска) Тогда
		НайденнаяОбласть = Классификатор.НайтиТекст(СтрокаПоиска,, Классификатор.Области.КодЧисловой,,,, Истина);
		Элементы.Классификатор.ТекущаяОбласть = НайденнаяОбласть;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(СтрокаПоиска) Тогда
		ПодключитьОбработчикОжидания("ВыполнитьПоиск", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КлассификаторВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Область = Элементы.Классификатор.ТекущаяОбласть;
	ВыполнитьВыбор(Область);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Область = Элементы.Классификатор.ТекущаяОбласть;
	ВыполнитьВыбор(Область);
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиСтроку(Команда)
	
	Если ПустаяСтрока(СтрокаПоиска) Тогда
		ТекущийЭлемент = Элементы.СтрокаПоиска;
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ВыполнитьПоиск", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыполнитьПоиск()
	
	НичегоНеНашли = Ложь;
	ИскатьСтрокуНаСервере(НичегоНеНашли);
	
	Если НичегоНеНашли Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Строка не найдена'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИскатьСтрокуНаСервере(НичегоНеНашли)
	
	ТекущаяОбласть = Элементы.Классификатор.ТекущаяОбласть;
	
	НайденнаяОбласть = Классификатор.НайтиТекст(СтрокаПоиска, ТекущаяОбласть, , , , , Истина);
	Если НайденнаяОбласть = Неопределено Тогда
		НайденнаяОбласть = Классификатор.НайтиТекст(СтрокаПоиска, , , , , , Истина);
		Если НайденнаяОбласть = Неопределено Тогда
			НичегоНеНашли = Истина;
			ТекущийЭлемент = Элементы.СтрокаПоиска;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Переведем фокус с кнопки поиска (или строки поиска) на найденное значение макета
	ТекущийЭлемент = Элементы.Классификатор;
	ТекущийЭлемент.ТекущаяОбласть = НайденнаяОбласть;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоискСуществующейЕдиницы(Знач ПараметрыФормы)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КлассификаторЕдиницИзмерения.Ссылка
		|ИЗ
		|	Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
		|ГДЕ
		|	КлассификаторЕдиницИзмерения.Код = &Код");
	Запрос.УстановитьПараметр("Код", ПараметрыФормы.ЗначенияЗаполнения.Код);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьВыбор(ТекущаяОбласть)
	
	ЗначенияЗаполнения = Новый Структура("Код, Наименование, НаименованиеПолное", "", "", "");
	
	ЗначенияЗаполнения.Код = ЗначениеВМакете(ТекущаяОбласть.Верх, КолонкаКод);
	ЗначенияЗаполнения.Наименование = ЗначениеВМакете(ТекущаяОбласть.Верх, КолонкаНаименованиеКраткое);
	// У международных единиц в другой колонке:
	Если Не ЗначениеЗаполнено(ЗначенияЗаполнения.Наименование) Тогда
		ЗначенияЗаполнения.Наименование = ЗначениеВМакете(ТекущаяОбласть.Верх, КолонкаУсловноеОбозначениеМеждународное);
		Если Не ЗначениеЗаполнено(ЗначенияЗаполнения.Наименование) Тогда
			ЗначенияЗаполнения.Наименование = ЗначениеВМакете(
				ТекущаяОбласть.Верх, КолонкаКодовоеОбозначениеМеждународное);
		КонецЕсли;
	КонецЕсли;
	
	ЗначенияЗаполнения.НаименованиеПолное = ЗначениеВМакете(ТекущаяОбласть.Верх, КолонкаНаименованиеПолное);
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ЕдиницаИзмерения = ПоискСуществующейЕдиницы(ПараметрыФормы);
	Если ЕдиницаИзмерения <> Неопределено Тогда
		ПараметрыФормы.Вставить("Ключ", ЕдиницаИзмерения);
		ПоказатьОповещениеПользователя(НСтр("ru = 'Открыта уже найденная единица.'"));
	КонецЕсли;
	
	ОткрытьФорму("Справочник.КлассификаторЕдиницИзмерения.Форма.ФормаЭлемента", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

// Значение из макета. Учитывается только первая строка (есть единицы с несколькими названиями и обозначениями).
// 
// Параметры:
//  Макет - ТабличныйДокумент -
//  НомерСтроки - Число - Номер строки макета, счет от 1
//  НомерКолонки - Число - Номер колонки макета, счет от 1
// 
// Возвращаемое значение:
//  Строка - Значение в макете
&НаКлиенте
Функция ЗначениеВМакете(НомерСтроки, НомерКолонки)
	
	Возврат СтрПолучитьСтроку(Классификатор.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки).Текст, 1);
	
КонецФункции

#КонецОбласти
