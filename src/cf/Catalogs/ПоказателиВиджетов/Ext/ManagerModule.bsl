#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет выражение показателя виджета.
//
// Параметры:
//  ПоказательВиджета - СправочникСсылка.ПоказателиВиджетов.
// 
// Возвращаемое значение:
//  Строка - Выражение показателя виджета.
//
Функция ВыражениеПоказателя(ПоказательВиджета) Экспорт
	
	ПоказателиВиджетов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПоказательВиджета);
	ВыраженияПоказателей = ВыраженияПоказателей(ПоказателиВиджетов);
	ВыражениеПоказателя = ВыраженияПоказателей[ПоказательВиджета];
	
	Возврат ВыражениеПоказателя;
	
КонецФункции

// Определяет выражения показателей виджетов.
// 
// Параметры:
//  ПоказателиВиджетов - Массив из СправочникСсылка.ПоказателиВиджетов.
//
// Возвращаемое значение:
//  Соответствие из КлючИЗначение - Выражение показателей виджетов:
//   * Ключ - СправочникСсылка.ПоказателиВиджетов - Показатель виджета.
//   * Значение - Строка - Выражение показателя виджета.
//
Функция ВыраженияПоказателей(ПоказателиВиджетов) Экспорт
	
	ВыраженияПоказателей = Новый Соответствие;
	
	Если ПоказателиВиджетов.Количество() = 0 Тогда
		Возврат ВыраженияПоказателей;
	КонецЕсли;
	
	Для Каждого ПоказательВиджета Из ПоказателиВиджетов Цикл
		ВыраженияПоказателей[ПоказательВиджета] = "";
	КонецЦикла;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПоказателиВиджетов.Ссылка КАК ПоказательВиджета,
		|	ПоказателиВиджетов.Выражение КАК Выражение,
		|	ПоказателиВиджетов.ГрупповойПоказатель КАК ГрупповойПоказатель,
		|	ПоказателиВиджетов.СвойствоГрупповогоПоказателя КАК СвойствоГрупповогоПоказателя,
		|	ПоказателиВиджетов.Тип КАК Тип
		|ИЗ
		|	Справочник.ПоказателиВиджетов КАК ПоказателиВиджетов
		|ГДЕ
		|	ПоказателиВиджетов.Ссылка В(&ПоказателиВиджетов)");
	
	Запрос.УстановитьПараметр("ПоказателиВиджетов", ПоказателиВиджетов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой Тогда
			ВыражениеПоказателя = Справочники.ГрупповыеПоказатели.ВыражениеСвойства(
				Выборка.ГрупповойПоказатель,
				Выборка.СвойствоГрупповогоПоказателя);
		Иначе
			ВыражениеПоказателя = Выборка.Выражение;
		КонецЕсли;
		
		ВыраженияПоказателей[Выборка.ПоказательВиджета] = ВыражениеПоказателя;
		
	КонецЦикла;
	
	Возврат ВыраженияПоказателей;
	
КонецФункции

// Данные показателя виджета.
// 
// Параметры:
//  Показатель - СправочникСсылка.ПоказателиВиджетов.
// 
// Возвращаемое значение:
//  Структура, Неопределено - Данные показателя. См. Справочники.ПоказателиВиджетов.СтруктураДанныеПоказателя.
//
Функция ДанныеПоказателя(Показатель) Экспорт
	
	ДанныеВсехПоказателей = РаботаСРабочимСтоломПовтИсп.ДанныеВсехПоказателей();
	ДанныеПоказателя = ДанныеВсехПоказателей[Показатель];
		
	Возврат ДанныеПоказателя;
	
КонецФункции

// Формирует данные всех показателей.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение - Данные показателей:
// 	 * Ключ - СправочникСсылка.ПоказателиВиджетов.
// 	 * Значение -  Структура - Данные показателя. См. Справочники.ПоказателиВиджетов.СтруктураДанныеПоказателя.
//
Функция ДанныеВсехПоказателей() Экспорт
	
	ДанныеВсехПоказателей = ДанныеПоказателей();
	
	Возврат ДанныеВсехПоказателей;
	
КонецФункции

// Формирует данные показателей.
// 
// Параметры:
//  ПоказателиВиджетов - Массив из СправочникСсылка.ПоказателиВиджетов, Неопределено.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение - Данные показателей:
//   * Ключ - СправочникСсылка.ПоказателиВиджетов.
//   * Значение -  Структура - Данные показателя. См. Справочники.ПоказателиВиджетов.СтруктураДанныеПоказателя.
//
Функция ДанныеПоказателей(ПоказателиВиджетов = Неопределено) Экспорт
	
	ДанныеПоказателей = Новый Соответствие;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПоказателиВиджетов.ВерсияДанных,
		|	ПоказателиВиджетов.Выражение,
		|	ПоказателиВиджетов.ГрупповойПоказатель,
		|	ПоказателиВиджетов.Действие,
		|	ПоказателиВиджетов.ИмяПредопределенныхДанных,
		|	ПоказателиВиджетов.Источник,
		|	ПоказателиВиджетов.Картинка,
		|	ПоказателиВиджетов.Наименование,
		|	ПоказателиВиджетов.НаименованиеЯзык1,
		|	ПоказателиВиджетов.Заголовок,
		|	ПоказателиВиджетов.ЗаголовокЯзык1,
		|	ПоказателиВиджетов.ПараметрДействия1,
		|	ПоказателиВиджетов.ПараметрДействия2,
		|	ПоказателиВиджетов.Подсказка,
		|	ПоказателиВиджетов.ПодсказкаЯзык1,
		|	ПоказателиВиджетов.ПометкаУдаления,
		|	ПоказателиВиджетов.Предопределенный,
		|	ПоказателиВиджетов.Представление,
		|	ПоказателиВиджетов.СвойствоГрупповогоПоказателя,
		|	ПоказателиВиджетов.События.(
		|		ИмяСобытия,
		|		НомерСтроки,
		|		Ссылка),
		|	ПоказателиВиджетов.Ссылка,
		|	ПоказателиВиджетов.Тип,
		|	ПоказателиВиджетов.ТипЗначенияПоказателя,
		|	ПоказателиВиджетов.Условие,
		|	ПоказателиВиджетов.ЦветВиджетаСерии
		|ИЗ
		|	Справочник.ПоказателиВиджетов КАК ПоказателиВиджетов
		|ГДЕ
		|	ПоказателиВиджетов.Ссылка В (&ПоказателиВиджетов)
		|	И ПоказателиВиджетов.ПометкаУдаления = ЛОЖЬ");
	
	Если ПоказателиВиджетов <> Неопределено Тогда
		Запрос.УстановитьПараметр("ПоказателиВиджетов", ПоказателиВиджетов);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПоказателиВиджетов.Ссылка В (&ПоказателиВиджетов)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ПоказателиВиджетов.ПометкаУдаления = ЛОЖЬ", "ПоказателиВиджетов.ПометкаУдаления = ЛОЖЬ");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеПоказателя = СформироватьДанныеПоказателя(Выборка);
		Если Не ПоказательДоступен(ДанныеПоказателя) Тогда
			Продолжить;
		КонецЕсли;
		
		ИнициализироватьПоказатель(ДанныеПоказателя);
		
		ДанныеПоказателей[ДанныеПоказателя.Показатель] = ДанныеПоказателя;
		
	КонецЦикла;
	
	Возврат ДанныеПоказателей;
	
КонецФункции

// Заполняет поставляемые данные.
// 
Процедура ЗаполнитьПоставляемыеДанные() Экспорт
	
	// Ближайшие отсутствия
	ПоказательОбъект = БлижайшиеОтсутствия.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Отсутствия: Ближайшие'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Ближайшие отсутствия'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть отсутствие'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = Отсутствия.БлижайшиеОтсутствия();";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Массив";
	ПоказательОбъект.Картинка = "КоллекцияЦвет";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ПереходПоСсылке;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_Отсутствие";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Нет отчета
	ПоказательОбъект = ЕжедневныеОтчетыНетОтчета.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Ежедневные отчеты: Нет отчета'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Нет отчета'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Создать отчет'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЕжедневныеОтчеты;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "НетОтчета";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Массив";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Розовый;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.СоздатьЕжедневныйОтчет;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "ИзмененЕжедневныйОтчет";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Осталось
	ПоказательОбъект = ЕжедневныеОтчетыОсталось.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Ежедневные отчеты: Осталось'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Осталось'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть отчет'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЕжедневныеОтчеты;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "Осталось";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Массив";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Голубой;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ПереходПоСсылке;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "ИзмененЕжедневныйОтчет";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Учтено
	ПоказательОбъект = ЕжедневныеОтчетыУчтено.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Ежедневные отчеты: Учтено'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Учтено'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть отчет'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЕжедневныеОтчеты;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "Учтено";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Массив";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Синий;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ПереходПоСсылке;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "ИзмененЕжедневныйОтчет";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Задачи мне
	ПоказательОбъект = ЗадачиМнеВсего.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне: Всего'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Задачи мне'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть все задачи мне'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ДоступныЗадачиМне;
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМне;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "ОжидающихВыполнения";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМне";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Другие
	ПоказательОбъект = ЗадачиМнеДругие.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне: Другие'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Другие'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть другие задачи'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМнеПоВидам;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "Другие";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеДругие";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Серый;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// На исполнение
	ПоказательОбъект = ЗадачиМнеНаИсполнение.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне: На исполнение'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'На исполнение'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть задачи исполнения'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМнеПоВидам;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "НаИсполнение";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеНаИсполнение";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Голубой;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// На ознакомление
	ПоказательОбъект = ЗадачиМнеНаОзнакомление.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне: На ознакомление'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'На ознакомление'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть задачи ознакомления'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМнеПоВидам;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "НаОзнакомление";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеНаОзнакомление";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Зеленый;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// На рассмотрение
	ПоказательОбъект = ЗадачиМнеНаРассмотрение.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне: На рассмотрение'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'На рассмотрение'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть задачи рассмотрения'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМнеПоВидам;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "НаРассмотрение";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеНаРассмотрение";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "ЛегендаДиаграммыСиний";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Синий;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// На регистрацию
	ПоказательОбъект = ЗадачиМнеНаРегистрацию.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне: На регистрацию'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'На регистрацию'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть задачи регистрации'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМнеПоВидам;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "НаРегистрацию";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеНаРегистрацию";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Красный;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// На согласование
	ПоказательОбъект = ЗадачиМнеНаСогласование.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне: На согласование'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'На согласование'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть задачи согласования'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМнеПоВидам;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "НаСогласование";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеНаСогласование";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "ЛегендаДиаграммыОранжевый";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Оранжевый;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// На утверждение
	ПоказательОбъект = ЗадачиМнеНаУтверждение.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне: На утверждение'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'На утверждение'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть задачи утверждения'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМнеПоВидам;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "НаУтверждение";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеНаУтверждение";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "ЛегендаДиаграммыЖелтый";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Желтый;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Новые
	ПоказательОбъект = ЗадачиМнеНовые.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне: Новые'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Новые'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть новые задачи мне'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМне;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "Новых";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеНеНачатые";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Поступили обновления
	ПоказательОбъект = ЗадачиМнеПоступилиОбновления.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне: Поступили обновления'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Поступили обновления'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть задачи мне, по которым поступили обновления'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМнеРасширенные;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "ПоступилиОбновления";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеПоступилиОбновления";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "ОзнакомитьсяСОбновлениемЗадачи";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Просроченные
	ПоказательОбъект = ЗадачиМнеПросроченные.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне: Просроченные'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Просроченные'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть просроченные задачи мне, находящиеся в работе'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМне;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "Просроченных";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеПросроченные";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Задачи мне
	ПоказательОбъект = ЗадачиМнеРуководителяВсего.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне (руководителя): Всего'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Задачи мне'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть все задачи мне'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМнеРасширенные;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "ОжидающихВыполнения";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМне";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// В срок
	ПоказательОбъект = ЗадачиМнеРуководителяВСрок.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне (руководителя): В срок'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'В срок'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть задачи мне, находящиеся в работе, без нарушения сроков'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМнеРасширенные;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "ВСрокБезОзнакомления";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеВСрокБезОзнакомления";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "ЛегендаДиаграммыЗеленый";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Зеленый;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Истекает срок
	ПоказательОбъект = ЗадачиМнеРуководителяИстекаетСрок.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне (руководителя): Истекает срок'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Истекает срок'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть задачи мне, находящиеся в работе, по которым истекает срок'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМнеРасширенные;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "ИстекаетБезОзнакомления";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеИстекаетБезОзнакомления";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "ЛегендаДиаграммыЖелтый";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Желтый;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Новые
	ПоказательОбъект = ЗадачиМнеРуководителяНовые.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне (руководителя): Новые'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Новые'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть новые задачи мне'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМнеРасширенные;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "НовыхБезОзнакомления";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеНеНачатыеБезОзнакомления";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Голубой;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Просроченные
	ПоказательОбъект = ЗадачиМнеРуководителяПросроченные.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи мне (руководителя): Просроченные'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Просроченные'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть просроченные задачи мне, находящиеся в работе'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиМнеРасширенные;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "ПросроченоБезОзнакомления";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиМнеПросроченоБезОзнакомления";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "ЛегендаДиаграммыКрасный";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.Красный;
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Задачи от меня
	ПоказательОбъект = ЗадачиОтМеняВсего.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи от меня: Всего'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Задачи от меня'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть задачи от меня'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ДоступныЗадачиОтМеня;
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиОтМеня;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "ОжидающихВыполнения";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиОтМеня";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_Задача";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_ДействиеЗадачи";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Новые
	ПоказательОбъект = ЗадачиОтМеняНовые.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи от меня: Новые'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Новые'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть новые задачи от меня'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиОтМеня;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "Новых";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиОтМеняНеНачатые";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_Задача";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_ДействиеЗадачи";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Просроченных
	ПоказательОбъект = ЗадачиОтМеняПросрочено.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи от меня: Просроченных'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Просроченных'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть просроченные задачи от меня'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиОтМеня;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "Просроченных";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиОтМеняПросроченные";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_Задача";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_ДействиеЗадачи";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Задачи от меня: Черновики
	ПоказательОбъект = ЗадачиОтМеняЧерновики.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи от меня: Черновики'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Черновики'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть мои черновики задач'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиОтМеня;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "Черновиков";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиОтМеняЧерновики";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "Изменить";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_Задача";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_ДействиеЗадачи";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Задачи подчиненных
	ПоказательОбъект = ЗадачиПодчиненныхВсего.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи подчиненных: Всего'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Задачи подчиненных'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть все задачи подчиненных'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ДоступныЗадачиПодчиненных;
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиПодчиненных;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "ОжидающихВыполнения";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиПодчиненных";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Новые
	ПоказательОбъект = ЗадачиПодчиненныхНовые.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи подчиненных: Новые'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Новые'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть новые задачи подчиненных'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ДоступныЗадачиПодчиненных;
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиПодчиненных;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "Новых";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиПодчиненныхНеНачатые";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Просроченные
	ПоказательОбъект = ЗадачиПодчиненныхПросрочено.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Задачи подчиненных: Просроченные'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Просроченные'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть просроченные задачи подчиненных'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ДоступныЗадачиПодчиненных;
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиЗадачиПодчиненных;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "Просроченных";
	ПоказательОбъект.Источник = "Документ.Задача.Команда.ЗадачиПодчиненныхПросроченные";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Ближайшие записи календаря
	ПоказательОбъект = КалендарьБлижайшие.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Календарь: Ближайшие'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Ближайшие записи календаря'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть запись календарь'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = РаботаСРабочимКалендаремСервер.БлижайшиеЗаписиКалендаря()";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Массив";
	ПоказательОбъект.Картинка = "КоллекцияЦвет";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ПереходПоСсылке;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_ЗаписьКалендаря";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Календарь
	ПоказательОбъект = КалендарьВсего.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Календарь: Всего'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Календарь'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть календарь'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = РаботаСРабочимКалендаремСервер.ВсегоПредстоящихЗаписейКалендаря(Пользователи.ТекущийПользователь())";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "Справочник.ЗаписиРабочегоКалендаря.Команда.ОткрытьКалендарь";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_ЗаписьКалендаря";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// На контроле
	ПоказательОбъект = КонтрольБлижайшие.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Контроль: Ближайшие'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'На контроле'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть контроль'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = Контроль.БлижайшиеКонтроли()";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Массив";
	ПоказательОбъект.Картинка = "КартинкаНаКонтроле16";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ПереходПоСсылке;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "ЗаписьКонтроля";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Контроль
	ПоказательОбъект = КонтрольВсего.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Контроль: Всего'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Контроль'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть все контроли'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = Контроль.ВсегоНаКонтроле(Пользователи.ТекущийПользователь())";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "Справочник.Контроль.Команда.НаКонтроле";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "ЗаписьКонтроля";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Просроченных
	ПоказательОбъект = КонтрольПросрочено.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Контроль: Просроченных'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Просроченных'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть просроченные контроли'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = Контроль.ПросроченоНаКонтроле()";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "Справочник.Контроль.Команда.ПросроченныеКонтроли";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "КартинкаКонтрольПросрочено16";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "ЗаписьКонтроля";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Мои мероприятия
	ПоказательОбъект = МероприятийВБлижайшийМесяц.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Мероприятия: В ближайший месяц'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Мои мероприятия'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть мои мероприятия'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = УправлениеМероприятиями.МероприятийВБлижайшийМесяц(Пользователи.ТекущийПользователь())";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "Справочник.Мероприятия.Команда.МоиМероприятия";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_Мероприятие";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Ближайшие мероприятия
	ПоказательОбъект = МероприятияБлижайшие.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Мероприятия: Ближайшие'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Ближайшие мероприятия'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть мероприятия'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = УправлениеМероприятиями.БлижайшиеМероприятия()";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Массив";
	ПоказательОбъект.Картинка = "Мероприятие";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ПереходПоСсылке;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_Мероприятие";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Без ответа
	ПоказательОбъект = МоиДокументыБезОтвета.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Мои документы: Без ответа'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Без ответа'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть мои документы (без ответа)'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиМоиДокументы;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "БезОтвета";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОткрытьФорму;
	ПоказательОбъект.ПараметрДействия1 = """Отчет.ИсходящиеДокументы.Форма""";
	ПоказательОбъект.ПараметрДействия2 = "Новый Структура(""СформироватьПриОткрытии, КлючВарианта"", Истина, ""МоиДокументыОжидающиеОтвета"")";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Мои документы
	ПоказательОбъект = МоиДокументыВсего.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Мои документы: Всего'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Мои документы'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть мои документы'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиМоиДокументы;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "Всего";
	ПоказательОбъект.Источник = "РегистрСведений.МоиДокументы.Команда.МоиДокументы";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Истекают
	ПоказательОбъект = МоиДокументыИстекают.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Мои документы: Истекают'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Истекают'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть мои документы (истекают)'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиМоиДокументы;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "Истекают";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОткрытьФорму;
	ПоказательОбъект.ПараметрДействия1 = """РегистрСведений.МоиДокументы.Форма.ФормаМоиДокументы""";
	ПоказательОбъект.ПараметрДействия2 = "Новый Структура(""КлючНазначенияИспользования"", ""ОтображениеИстекающихДокументов"")";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Просрочено
	ПоказательОбъект = МоиДокументыПросрочено.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Мои документы: Просрочено'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Просрочено'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть мои документы (просроченные)'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой;
	ПоказательОбъект.Выражение = "";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ИтогиМоиДокументы;
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "Просрочено";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОткрытьФорму;
	ПоказательОбъект.ПараметрДействия1 = """РегистрСведений.МоиДокументы.Форма.ФормаМоиДокументы""";
	ПоказательОбъект.ПараметрДействия2 = "Новый Структура(""КлючНазначенияИспользования"", ""ОтображениеПросроченныхДокументов"")";
	ПоказательОбъект.События.Очистить();
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Отсутствия
	ПоказательОбъект = ОтсутствияВсего.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Отсутствия: Всего'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Отсутствия'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть текущие отсутствия'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = Отсутствия.ВсегоОтсутствий();";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОткрытьФорму;
	ПоказательОбъект.ПараметрДействия1 = """Документ.Отсутствие.ФормаСписка""";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_Отсутствие";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Почта
	ПоказательОбъект = ПочтаВсего.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Почта: Всего'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Почта'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть список писем'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = ВстроеннаяПочтаСервер.ВсегоНовыхПисем(Пользователи.ТекущийПользователь())";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "ОбщаяКоманда.ЭлектроннаяПочта";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_ПапкиПисемВиджетаПочта";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_СведенияОПрочтении";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "ПисьмаИзменены";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "ДанныеПрочтены";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Последние письма
	ПоказательОбъект = ПочтаПоследние.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Почта: Последние'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Последние письма'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть письмо'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = ВстроеннаяПочтаСервер.ПоследниеНовыеПисьма()";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Массив";
	ПоказательОбъект.Картинка = "КоллекцияСтрокиВиджетаПочта";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ПереходПоСсылке;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_ПапкиПисемВиджетаПочта";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_СведенияОПрочтении";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "ПисьмаИзменены";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "ДанныеПрочтены";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Форум
	ПоказательОбъект = ФорумВсего.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Форум: Всего'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Форум'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть форум'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = РаботаСОбсуждениями.ВсегоНовыхТем()";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "Справочник.ТемыОбсуждений.Команда.ОткрытьФормуПросмотраОбсуждений";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "ДанныеПрочтены";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Изменение_СообщенияОбсуждений";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Создание_ТемыОбсуждений";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Новые ответы
	ПоказательОбъект = ФорумНовыеОтветы.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Форум: Новые ответы'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Новые ответы'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть новые ответы в форуме'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = РаботаСОбсуждениями.ВсегоНовыхОтветов()";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "Справочник.СообщенияОбсуждений.Команда.ПоказатьНовыеОтветы";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "ОтветыВФоруме";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "ДанныеПрочтены";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Изменение_СообщенияОбсуждений";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Создание_ТемыОбсуждений";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Форум последние
	ПоказательОбъект = ФорумПоследние.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Форум: Последние'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Форум последние'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть тему форума'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = РаботаСОбсуждениями.ПоследниеНовыеТемы()";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Массив";
	ПоказательОбъект.Картинка = "ТемаФорума";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ПереходПоСсылке;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "ДанныеПрочтены";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Изменение_СообщенияОбсуждений";
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Создание_ТемыОбсуждений";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Я редактирую
	ПоказательОбъект = ЯРедактируюВсего.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Я редактирую: Всего'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Я редактирую'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть редактируемые файлы'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = РаботаСФайлами.ВсегоЗанятыхФайлов(Параметры.ИдентификаторКлиента)";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "Справочник.Файлы.Команда.ЗанятыеФайлы";
	ПоказательОбъект.ТипЗначенияПоказателя = "Число";
	ПоказательОбъект.Картинка = "";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ОбработатьИсточник;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_Файл";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
	// Редактируемые файлы
	ПоказательОбъект = ЯРедактируюПервые.ПолучитьОбъект();
	ПоказательОбъект.Наименование = НСтр("ru = 'Я редактирую: Первые'");
	ПоказательОбъект.Заголовок = НСтр("ru = 'Редактируемые файлы'");
	ПоказательОбъект.Подсказка = НСтр("ru = 'Открыть файл'");
	ПоказательОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	ПоказательОбъект.Тип = Перечисления.ТипыПоказателейВиджетов.Обычный;
	ПоказательОбъект.Выражение = "Параметры.Результат = РаботаСФайлами.ПервыеЗанятыеФайлы(Параметры.ИдентификаторКлиента)";
	ПоказательОбъект.ГрупповойПоказатель = Справочники.ГрупповыеПоказатели.ПустаяСсылка();
	ПоказательОбъект.СвойствоГрупповогоПоказателя = "";
	ПоказательОбъект.Источник = "";
	ПоказательОбъект.ТипЗначенияПоказателя = "Массив";
	ПоказательОбъект.Картинка = "КоллекцияПиктограммФайлов";
	ПоказательОбъект.ЦветВиджетаСерии = Перечисления.ЦветаВиджетов.ПустаяСсылка();
	ПоказательОбъект.Действие = Перечисления.ДействияВиджетов.ПереходПоСсылке;
	ПоказательОбъект.ПараметрДействия1 = "";
	ПоказательОбъект.ПараметрДействия2 = "";
	ПоказательОбъект.События.Очистить();
	СтрокаСобытия = ПоказательОбъект.События.Добавить();
	СтрокаСобытия.ИмяСобытия = "Запись_Файл";
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПоказательОбъект);
	
КонецПроцедуры

// Формирует структуру показателя.
Функция СтруктураДанныеПоказателя() Экспорт
	
	ДанныеПоказателя = Новый Структура;
	ДанныеПоказателя.Вставить("Заголовок", "");
	ДанныеПоказателя.Вставить("Подсказка", "");
	ДанныеПоказателя.Вставить("Картинка");
	ДанныеПоказателя.Вставить("ЦветСерии");
	ДанныеПоказателя.Вставить("ЦветВиджетаСерии");
	ДанныеПоказателя.Вставить("Условие");
	ДанныеПоказателя.Вставить("Тип");
	ДанныеПоказателя.Вставить("Выражение");
	ДанныеПоказателя.Вставить("ГрупповойПоказатель");
	ДанныеПоказателя.Вставить("СвойствоГрупповогоПоказателя");
	ДанныеПоказателя.Вставить("Источник");
	ДанныеПоказателя.Вставить("Действие");
	ДанныеПоказателя.Вставить("Показатель");
	ДанныеПоказателя.Вставить("КоллекцияКартинок");
	ДанныеПоказателя.Вставить("ТипЗначенияПоказателя");
	ДанныеПоказателя.Вставить("ТипСтруктуры", "ДанныеПоказателя");
	
	ДанныеПоказателя.Вставить("События", Новый Массив);
	
	Возврат ДанныеПоказателя;
	
КонецФункции

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
    МультиязычностьКлиентСервер.ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
    МультиязычностьКлиентСервер.ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СтрокаПоиска", ?(Параметры.СтрокаПоиска = Неопределено, "", Параметры.СтрокаПоиска) + "%");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоказателиВиджетов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПоказателиВиджетов КАК ПоказателиВиджетов
	|ГДЕ
	|	НЕ ПоказателиВиджетов.ПометкаУдаления
	|	И ПоказателиВиджетов.Наименование ПОДОБНО &СтрокаПоиска
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоказателиВиджетов.Наименование";
	
	ОбъектМетаданных = Метаданные.Справочники.ПоказателиВиджетов;
	Если Не МультиязычностьПовтИсп.КонфигурацияИспользуетТолькоОдинЯзык(ОбъектМетаданных.ТабличныеЧасти.Найти("Представления") = Неопределено) Тогда
		
		Если МультиязычностьСервер.ИспользуетсяПервыйДополнительныйЯзык() Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,
				"ПоказателиВиджетов.Наименование ПОДОБНО &СтрокаПоиска",
				"(ПоказателиВиджетов.Наименование ПОДОБНО &СтрокаПоиска ИЛИ ПоказателиВиджетов.НаименованиеЯзык1 ПОДОБНО &СтрокаПоиска)");
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеВыбора = Новый СписокЗначений;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает данные поставляемой показатель.
Функция СформироватьДанныеПоказателя(Выборка)
	
	ДанныеПоказателя = СтруктураДанныеПоказателя();
	ДанныеПоказателя.Показатель = Выборка.Ссылка;
	ДанныеПоказателя.Заголовок = Выборка.Заголовок;
	ДанныеПоказателя.Подсказка = Выборка.Подсказка;
	ДанныеПоказателя.Условие = Выборка.Условие;
	ДанныеПоказателя.Тип = Выборка.Тип;
	ДанныеПоказателя.Выражение = Выборка.Выражение;
	ДанныеПоказателя.ГрупповойПоказатель = Выборка.ГрупповойПоказатель;
	ДанныеПоказателя.СвойствоГрупповогоПоказателя = Выборка.СвойствоГрупповогоПоказателя;
	ДанныеПоказателя.Источник = Выборка.Источник;
	ДанныеПоказателя.ТипЗначенияПоказателя = Тип(Выборка.ТипЗначенияПоказателя);
	
	КонфигурацияИспользуетТолькоОдинЯзык = МультиязычностьПовтИсп.КонфигурацияИспользуетТолькоОдинЯзык(Ложь);
	Если Не КонфигурацияИспользуетТолькоОдинЯзык И Не МультиязычностьСервер.ЭтоОсновнойЯзык() Тогда
		
		ДанныеПоказателя.Заголовок = Выборка.ЗаголовокЯзык1;
		ДанныеПоказателя.Подсказка = Выборка.ПодсказкаЯзык1;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.Картинка) Тогда
		ДанныеПоказателя.Картинка = БиблиотекаКартинок[Выборка.Картинка];
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.ЦветВиджетаСерии) Тогда
		ДанныеПоказателя.ЦветВиджетаСерии = Выборка.ЦветВиджетаСерии;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.Действие) И Выборка.Действие <> Перечисления.ДействияВиджетов.ОбработатьИсточник Тогда
		ДействиеВиджета = Выборка.Действие;
		ВыраженияПараметровДействия = Новый Массив;
		ВыраженияПараметровДействия.Добавить(Выборка.ПараметрДействия1);
		ВыраженияПараметровДействия.Добавить(Выборка.ПараметрДействия2);
		ДанныеПоказателя.Действие = Перечисления.ДействияВиджетов.Действие(
			ДействиеВиджета,
			Выборка.Источник,
			ВыраженияПараметровДействия);
	КонецЕсли;
	
	Для Каждого ИмяСобытия Из Выборка.События.Выгрузить().ВыгрузитьКолонку("ИмяСобытия") Цикл
		ДанныеПоказателя.События.Добавить(ИмяСобытия);
	КонецЦикла;
	
	Возврат ДанныеПоказателя
	
КонецФункции

// Проверяет доступность показателя.
Функция ПоказательДоступен(ДанныеПоказателя)
	
	ПоказательДоступен = РаботаСВиджетами.ИсточникДоступен(ДанныеПоказателя.Источник)
		И РаботаСРабочимСтолом.ПроверитьУсловие(ДанныеПоказателя.Условие);
	
	Возврат ПоказательДоступен;
	
КонецФункции

// Инициализирует данные показателя.
Процедура ИнициализироватьПоказатель(ДанныеПоказателя)
	
	Если ДанныеПоказателя.ЦветВиджетаСерии <> Неопределено Тогда
		ДанныеПоказателя.ЦветСерии = Перечисления.ЦветаВиджетов.ЦветСерии(ДанныеПоказателя.ЦветВиджетаСерии);
	КонецЕсли;
	
	Если ДанныеПоказателя.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой Тогда
		ДанныеПоказателя.Выражение = Справочники.ГрупповыеПоказатели.ВыражениеСвойства(
			ДанныеПоказателя.ГрупповойПоказатель,
			ДанныеПоказателя.СвойствоГрупповогоПоказателя);
	КонецЕсли;
	
	Если ДанныеПоказателя.Тип = Перечисления.ТипыПоказателейВиджетов.Групповой
		И ДанныеПоказателя.События.Количество() = 0 Тогда
		ДанныеГрупповогоПоказателя = Справочники.ГрупповыеПоказатели.ДанныеГрупповогоПоказателя(
			ДанныеПоказателя.ГрупповойПоказатель);
		ДанныеПоказателя.События = ДанныеГрупповогоПоказателя.События;
	КонецЕсли;
	
	Если ДанныеПоказателя.Действие = Неопределено
		И ЗначениеЗаполнено(ДанныеПоказателя.Источник) Тогда
		ДанныеПоказателя.Действие = РаботаСВиджетами.ДействиеИсточника(ДанныеПоказателя.Источник);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли