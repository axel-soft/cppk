
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЕстьОтбор = Параметры.Отбор.Свойство("ВидЖурнала");
	Если ЕстьОтбор Тогда
		ВидЖурнала = Параметры.Отбор.ВидЖурнала;
	КонецЕсли;
	ЗаполнитьДерево();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЭлемент(Команда)
	ОповеститьОВыборе(Элементы.Список.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	Если НЕ Элемент.ТекущиеДанные = Неопределено Тогда
		Элементы.ФормаВыбрать.Доступность = Элемент.ТекущиеДанные.ДанныеКартинки = 2;  //Элемент
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элемент.ТекущиеДанные.ДанныеКартинки = 2 Тогда
		ОповеститьОВыборе(Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СправочникТТС_КодыНарушенийЖТУ.Ссылка КАК Ссылка,
	               |	ВЫБОР
	               |		КОГДА СправочникТТС_КодыНарушенийЖТУ.ЭтоГруппа
	               |			ТОГДА 1
	               |		ИНАЧЕ 2
	               |	КОНЕЦ КАК ДанныеКартинки
	               |ИЗ
	               |	Справочник.ТТС_КодыНарушенийЖТУ КАК СправочникТТС_КодыНарушенийЖТУ
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &ЕстьОтбор
	               |				ТОГДА СправочникТТС_КодыНарушенийЖТУ.ВидЖурнала = &ВидЖурнала
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА &ЕстьПоиск
	               |				ТОГДА НЕ СправочникТТС_КодыНарушенийЖТУ.ЭтоГруппа
	               |						И (СправочникТТС_КодыНарушенийЖТУ.Наименование ПОДОБНО &СтрокаПоиска
	               |							ИЛИ СправочникТТС_КодыНарушенийЖТУ.Код ПОДОБНО &СтрокаПоиска)
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Ссылка.Код ИЕРАРХИЯ";
				   
	Запрос.УстановитьПараметр("ВидЖурнала",ВидЖурнала);
	Запрос.УстановитьПараметр("ЕстьОтбор",ЕстьОтбор);
	
	ЕстьПоиск = СтрДлина(Поиск)>0;
    Запрос.УстановитьПараметр("ЕстьПоиск",ЕстьПоиск);
	Запрос.УстановитьПараметр("СтрокаПоиска","%"+Поиск+"%");
	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗначениеВРеквизитФормы(Дерево, "СписокДерево");
КонецПроцедуры

&НаКлиенте
Процедура ПоискПриИзменении(Элемент)
	ЗаполнитьДерево();
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры
