
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Протоколирование работы пользователей
	ПротоколированиеРаботыСотрудников.ЗаписатьОткрытие(Объект.Ссылка);
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ТипЗнч(Объект.Предмет) = Тип("СправочникСсылка.ВеткиПереписки") Тогда 
		ПредметСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Предмет, "КорневоеПисьмо");
	Иначе	
		ПредметСсылка = Объект.Предмет;
	КонецЕсли;	
	ПредметСтрокой = Контроль.СформироватьПредставлениеПредмета(ПредметСсылка);

	// Видимость поля "Предмет"
	Если ЗначениеЗаполнено(Объект.Предмет) Тогда 
		Элементы.ГруппаОписаниеСтраницы.ТекущаяСтраница = Элементы.ГруппаОписаниеИПредмет;
	Иначе
		Элементы.ГруппаОписаниеСтраницы.ТекущаяСтраница = Элементы.ГруппаОписание;
	КонецЕсли;	
	
	ТекущийКонтролер = Объект.Контролер;
	НачальныйСнятСКонтроля = Объект.СнятСКонтроля;
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ТекущийПользовательПолноправный = РольДоступна("ПолныеПрава");
	
	ПредметПроцессЗадача = Ложь;
	Если ЗначениеЗаполнено(Объект.Предмет) Тогда 
		Если ОбщегоНазначения.ЭтоБизнесПроцесс(Объект.Предмет.Метаданные())
		 Или ТипЗнч(Объект.Предмет) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда 
			ПредметПроцессЗадача = Истина; 
		КонецЕсли; 
	КонецЕсли;	 
		
	ЦветЗеленый = ЦветаСтиля.ОтметкаПоложительногоВыполненияЗадачи;
	ЦветКрасный = ЦветаСтиля.ОтметкаОтрицательногоВыполненияЗадачи;
	
	СписокВыбора = Элементы.СрокИсполнения.СписокВыбора;
	Элементы.СрокИсполнения.СписокВыбора.Добавить(ТекущаяДатаСеанса() + 24*3600, НСтр("ru = 'Завтра'"));
	Элементы.СрокИсполнения.СписокВыбора.Добавить(ТекущаяДатаСеанса() + 2*24*3600, НСтр("ru = '2 дня'"));
	Элементы.СрокИсполнения.СписокВыбора.Добавить(ТекущаяДатаСеанса() + 3*24*3600, НСтр("ru = '3 дня'"));
	Элементы.СрокИсполнения.СписокВыбора.Добавить(ТекущаяДатаСеанса() + 7*24*3600, НСтр("ru = 'Неделя'"));
	Элементы.СрокИсполнения.СписокВыбора.Добавить(ДобавитьМесяц(ТекущаяДатаСеанса(), 1), НСтр("ru = 'Месяц'"));
	
	Если ЗначениеЗаполнено(Объект.Предмет) Тогда 
		Если ПредметПроцессЗадача Или ДействияКлиентСервер.ЭтоДействие(Объект.Предмет) Тогда 
			Элементы.Исполнители.ИзменятьСоставСтрок = Ложь;
			Элементы.Исполнители.ИзменятьПорядокСтрок = Ложь;
			Элементы.ИсполнителиИсполнитель.ТолькоПросмотр = Истина;
			Элементы.Подобрать.Видимость = Ложь;
			Элементы.Добавить.Видимость = Ложь;
			Элементы.Удалить.Видимость = Ложь;
			Элементы.ПереместитьВверх.Видимость = Ложь;
			Элементы.ПереместитьВниз.Видимость = Ложь;
		ИначеЕсли ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(ПредметСсылка) Тогда 
			Элементы.Исполнители.ИзменятьСоставСтрок = Ложь;
			Элементы.ИсполнителиИсполнитель.ТолькоПросмотр = Истина;
			Элементы.Подобрать.Видимость = Ложь;
			Элементы.Добавить.Видимость = Ложь;
			Элементы.Удалить.Видимость = Ложь;
			Если Объект.Исполнители.Количество() = 1 Тогда
				Элементы.Исполнители.ИзменятьПорядокСтрок = Ложь;
				Элементы.ПереместитьВверх.Видимость = Ложь;
				Элементы.ПереместитьВниз.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.СнятСКонтроля Тогда 
		Элементы.СтраницыКоманды.ТекущаяСтраница = Элементы.СтраницаСнятСКонтроля;
		ТолькоПросмотр = Истина;
		Элементы.ДекорацияСрок.Видимость = Ложь;
		Элементы.ФормаВернутьНаКонтроль.Видимость = Истина;
	Иначе	
		Элементы.СтраницыКоманды.ТекущаяСтраница = Элементы.СтраницаКоманды;
		Элементы.ФормаВернутьНаКонтроль.Видимость = Ложь;
	КонецЕсли;
	
	Если Объект.Исполнители.Количество() > 1 Тогда 
		Элементы.ИсполнителиПроконтролировано.Видимость = Истина;
	Иначе
		Элементы.ИсполнителиПроконтролировано.Видимость = Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Предмет) 
		И (ПредметПроцессЗадача
			Или ТипЗнч(Объект.Предмет) = Тип("СправочникСсылка.ВеткиПереписки")
				Или ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.Задача")
				Или ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.ДействиеЗадачи")
				Или ДействияКлиентСервер.ЭтоДействие(Объект.Предмет)) Тогда
		Элементы.ИсполнителиСостояниеИсполнения.Видимость = Истина;
	Иначе	
		Элементы.ИсполнителиСостояниеИсполнения.Видимость = Ложь;
	КонецЕсли;	
	ВывестиСостояниеИсполнения();
	
	// возможные контролеры
	Контроль.ЗаполнитьСписокКонтролеров(Контролеры, Элементы.Контролер);
	
	// Запись в список последних
	РаботаСПоследнимиОбъектами.ЗаписатьОбращениеКОбъекту(Объект.Ссылка);
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ЗаполнитьСписокВыбора(ЭтотОбъект,
		ЭлементыДляСохранения(),
		"Справочник.Контроль.ФормаЭлементаИФормаНового");
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ФормаСтандартныеКоманды;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если ПараметрыСеанса.ЭтоМобильныйКлиент Тогда
		МК_НастроитьЭлементыФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВывестиПодписьЧислаДней();
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
#Если МобильныйКлиент Тогда
	ОбновитьДекорациюСкрытияТаблицыИсполнителей();
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьИЗакрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();	
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ВывестиСостояниеИсполнения();
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	МиграцияДанныхИзВнешнихСистемСервер.ВывестиДекорациюЗагрузкиИзДругойСистемы(ЭтотОбъект, 
		НСтр("ru = 'Контрольная карточка загружена'"));
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОбщегоНазначенияДокументооборотКлиент.УдалитьПустыеСтрокиТаблицы(Объект.Исполнители, "Исполнитель");
	
	Если Элементы.Добавить.Видимость = Истина Тогда
		ОбщегоНазначенияДокументооборотКлиент.УдалитьДублиСтрокТаблицы(Объект.Исполнители,
			"Исполнитель,СостояниеИсполнения, Проконтролировано");
	КонецЕсли;
	
	НазначитьОтветственногоИсполнителя();
	
	Если ТекущийКонтролер <> Объект.Контролер
		И Не ПараметрыЗаписи.Свойство("ПродолжитьЗаписьПослеОтветаНаВопрос") 
		И ЗначениеЗаполнено(Объект.Предмет) 
		И Контроль.ПредметНаКонтролеУКонтролера(Объект.Предмет, Объект.Контролер, Объект.Ссылка) Тогда 
		
		Если Объект.Контролер = ТекущийПользователь Тогда 
			ТекстВопроса = НСтр("ru = 'Предмет уже находится у вас на контроле. 
                                 |Поставить на контроль еще раз?'");
		Иначе 
		    ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Предмет уже находится на контроле у %1. 
	                  |Поставить на контроль еще раз?'"),
				Объект.Контролер);
		КонецЕсли;
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ПередЗаписьюПродолжение",
			ЭтотОбъект,
			ПараметрыЗаписи);
			
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	Если Не НачальныйСнятСКонтроля И Не Объект.СнятСКонтроля Тогда 
		
		Если Объект.Исполнители.Количество() = 0 Тогда 
			ВсеПроконтролированы = Ложь;
		Иначе	
			ВсеПроконтролированы = Истина;
			Для Каждого Строка Из Объект.Исполнители Цикл
				Если Не Строка.Проконтролировано Тогда 
					ВсеПроконтролированы = Ложь;
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
		
		Если ВсеПроконтролированы И Не ПараметрыЗаписи.Свойство("ПродолжитьЗаписьПослеПредупреждения")  Тогда
			ОповещениеОПредупреждении = Новый ОписаниеОповещения(
				"ПередЗаписьюПродолжитьПослеПредупреждения",
				ЭтотОбъект,
				ПараметрыЗаписи);
			
			ТекстПредупреждения = НСтр("ru = 'Карточка будет снята с контроля, так как все исполнители проконтролированы.'");
			ПоказатьПредупреждение(ОповещениеОПредупреждении, ТекстПредупреждения);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюПродолжитьПослеПредупреждения(ПараметрыЗаписи) Экспорт
	
	Объект.СнятСКонтроля = Истина;
	Объект.ДатаСнятияСКонтроля = ОбщегоНазначенияКлиент.ДатаСеанса();
	ПараметрыЗаписи.Вставить("ПродолжитьЗаписьПослеПредупреждения", Истина);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюПродолжение(Результат, ПараметрыЗаписи) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	Иначе
		ПараметрыЗаписи.Вставить("ПродолжитьЗаписьПослеОтветаНаВопрос", Истина);
		Записать(ПараметрыЗаписи);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ОбновитьСпискиВыбора(ЭтаФорма, ЭлементыДляСохранения(), "Справочник.Контроль.ФормаЭлементаИФормаНового");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не НачальныйСнятСКонтроля И Объект.СнятСКонтроля Тогда 
		Элементы.СтраницыКоманды.ТекущаяСтраница = Элементы.СтраницаСнятСКонтроля;
		ТолькоПросмотр = Истина;
		Элементы.ДекорацияСрок.Видимость = Ложь;
		Элементы.ФормаВернутьНаКонтроль.Видимость = Истина;
	КонецЕсли;	
	
	ВывестиСостояниеИсполнения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Не НачальныйСнятСКонтроля И Объект.СнятСКонтроля Тогда 
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Снят с контроля'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка));
		НачальныйСнятСКонтроля = Объект.СнятСКонтроля;
	КонецЕсли;	
	
	ТекущийКонтролер = Объект.Контролер;
	
	КонтрольКлиент.ОповеститьОЗаписиКонтроля(Объект);
	
	Если ПараметрыЗаписи.Свойство("Закрыть") Тогда
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Изменение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
		
	Если ПустаяСтрока(Объект.Описание) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Не заполнено поле ""Что контролировать"".'"),
			,
			"Описание",
			"Объект",
			Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Контролер) Тогда
		ОбщегоНазначения.СообщитьПользователю( 
			НСтр("ru = 'Не заполнено поле ""Контролер"".'"),
			,
			"Контролер",
			"Объект",
			Отказ);
	КонецЕсли;
	
	Если Объект.Исполнители.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Не выбрано ни одно контролируемое лицо.'"),
			,
			"Исполнители",
			"Объект",
			Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СрокИсполненияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВывестиПодписьЧислаДней();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокИсполненияПриИзменении(Элемент)
	
	ВывестиПодписьЧислаДней();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтролерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Контролеры.Количество() = 0 Тогда 
		РаботаСАдреснойКнигойКлиент.ВыбратьПользователяДляКонтроля(
			ЭтотОбъект, Элемент, Объект.Контролер);
	ИначеЕсли Контролеры.Количество() > 10 Тогда
		РаботаСАдреснойКнигойКлиент.ВыбратьПользователяДляКонтроля(
			ЭтотОбъект, Элемент, Объект.Контролер, Контролеры);
	Иначе
		ДанныеВыбора = Контролеры;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтролерАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СформироватьДанныеВыбораКонтролера(Текст, Контролеры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтролерОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СформироватьДанныеВыбораКонтролера(Текст, Контролеры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтролерОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СотрудникиКлиент.ОбработкаВыбораКонтейнера(
		Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
	СотрудникиКлиент.СотрудникОбработкаВыбора(Объект, "Контролер", ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Функция СформироватьДанныеВыбораКонтролера(Текст, Контролеры)
	
	Если Контролеры.Количество() = 0 Тогда 
		
		ДополнениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПолныеРоли");
		ДанныеВыбора = СотрудникиВызовСервера.СформироватьДанныеВыбора(Текст, ДополнениеТипа);
		
	Иначе
		ДанныеВыбора = Новый СписокЗначений;
		Для Каждого Строка Из Контролеры Цикл
			Если Не ЗначениеЗаполнено(Строка.Значение) Тогда 
				Продолжить;
			КонецЕсли;
		
			Если Текст <> "" И НРег(Лев(Строка.Значение, СтрДлина(Текст))) <> НРег(Текст) Тогда 
				Продолжить;
			КонецЕсли;
			
			ДанныеВыбора.Добавить(Строка.Значение);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДанныеВыбора;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИсполнители

&НаКлиенте
Процедура ИсполнителиПриИзменении(Элемент)
	
	НазначитьОтветственногоИсполнителя();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Исполнители.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда 
		Элементы.Исполнители.ТекущиеДанные.Исполнитель = СотрудникПустаяСсылка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Исполнители.ТекущиеДанные;
	
	РаботаСАдреснойКнигойКлиент.ВыбратьПользователяДляКонтроля(
		ЭтотОбъект, Элемент, ТекущиеДанные.Исполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДополнениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПолныеРоли");
		ДанныеВыбора = СотрудникиВызовСервера.СформироватьДанныеВыбора(Текст, ДополнениеТипа);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДополнениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПолныеРоли");
		ДанныеВыбора = СотрудникиВызовСервера.СформироватьДанныеВыбора(Текст, ДополнениеТипа);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СотрудникиКлиент.ОбработкаВыбораКонтейнера(
		Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
		
	СотрудникиКлиент.СотрудникОбработкаВыбора(Элементы.Исполнители.ТекущиеДанные,
		"Исполнитель", ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подобрать(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьПодборКонтролируемыхПользователей",
		ЭтотОбъект);
		
	РаботаСАдреснойКнигойКлиент.ПодобратьПользователейДляКонтроля(ЭтотОбъект,
		Объект.Исполнители,
		ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПодборКонтролируемыхПользователей(
	ВыбранныеПользователи, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеПользователи = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИндексИсполнителя = Объект.Исполнители.Количество() - 1;
	Пока ИндексИсполнителя >= 0 Цикл
		
		СтрИсполнитель = Объект.Исполнители.Получить(ИндексИсполнителя);
		
		УдалитьИсполнителя = Истина;
		Для Каждого ВыбранныйПользователь Из ВыбранныеПользователи Цикл
			Если ВыбранныйПользователь = СтрИсполнитель.Исполнитель Тогда
				УдалитьИсполнителя = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если УдалитьИсполнителя Тогда
			Объект.Исполнители.Удалить(ИндексИсполнителя);
		КонецЕсли;
		
		ИндексИсполнителя = ИндексИсполнителя - 1;
		
	КонецЦикла;
	
	Для Каждого ВыбранныйПользователь Из ВыбранныеПользователи Цикл
		
		СтруктураОтбора = Новый Структура("Исполнитель",
			ВыбранныйПользователь);
			
		НайденныеСтроки = Объект.Исполнители.НайтиСтроки(СтруктураОтбора);
		Если НайденныеСтроки.Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.Исполнители.Добавить();
		НоваяСтрока.Исполнитель = ВыбранныйПользователь;
		
	КонецЦикла;
	
	Если Объект.Исполнители.Количество() > 1 Тогда 
		Элементы.ИсполнителиПроконтролировано.Видимость = Истина;
	Иначе
		Элементы.ИсполнителиПроконтролировано.Видимость = Ложь;
	КонецЕсли;
	
	НазначитьОтветственногоИсполнителя();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьСКонтроля(Команда)
	
	Если Не Модифицированность Тогда
		Прочитать();
	КонецЕсли;
	
	Объект.СнятСКонтроля = Истина;
	Объект.ДатаСнятияСКонтроля = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	Для Каждого Строка Из Объект.Исполнители Цикл
		Если Не Строка.Проконтролировано Тогда
			Строка.Проконтролировано = Истина;
			Строка.ДатаКонтроля = ОбщегоНазначенияКлиент.ДатаСеанса();
		КонецЕсли;
	КонецЦикла;
	
	Если Записать() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подписаться(Команда)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("ОбъектПодписки", Объект.Ссылка);
		ОткрытьФорму("ОбщаяФорма.ПодпискаНаУведомленияПоОбъекту", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ЗаписатьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Трудозатраты(Команда)
	
	ПараметрыФормы = Новый Структура("Источник", Объект.Ссылка);
	ОткрытьФорму("РегистрСведений.ФактическиеТрудозатраты.Форма.ФормаСпискаИсточника",
		ПараметрыФормы,
		ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПраваДоступа(Команда)
	
	ДокументооборотПраваДоступаКлиент.ОткрытьФормуПравДоступа(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНовуюКарточку(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Объект.Предмет);
	
	ОткрытьФорму("Справочник.Контроль.Форма.ФормаНового", ПараметрыФормы, ВладелецФормы);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВывестиПодписьЧислаДней()
	
	Если Не ЗначениеЗаполнено(Объект.СрокИсполнения) Тогда 
		Элементы.ДекорацияСрок.Заголовок = "";
	Иначе	
		ЧислоДней = КонтрольКлиентСервер.СрокКонтроля(Объект.СрокИсполнения);
		Если ЧислоДней = 0 Тогда 
			Элементы.ДекорацияСрок.Заголовок = НСтр("ru = '(сегодня)'");
			Элементы.ДекорацияСрок.ЦветТекста = ЦветЗеленый;
		ИначеЕсли ЧислоДней > 0 Тогда 
			ПодписьДней = ДелопроизводствоКлиентСервер.ПолучитьПодписьДней(ЧислоДней);
			Элементы.ДекорацияСрок.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '(осталось %1 %2)'"),
				ЧислоДней,
				ПодписьДней);
			Элементы.ДекорацияСрок.ЦветТекста = ЦветЗеленый;
		Иначе
			ПодписьДней = ДелопроизводствоКлиентСервер.ПолучитьПодписьДней(-ЧислоДней);
			Элементы.ДекорацияСрок.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '(просрочено %1 %2)'"),
				-ЧислоДней,
				ПодписьДней);
			Элементы.ДекорацияСрок.ЦветТекста = ЦветКрасный;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура НазначитьОтветственногоИсполнителя()
	
	Если ПредметПроцессЗадача
		Или ДействияКлиентСервер.ЭтоДействие(Объект.Предмет) Тогда 
		Возврат;
	КонецЕсли;	
	
	Для Номер = 0 По Объект.Исполнители.Количество() - 1 Цикл 
		Объект.Исполнители[Номер].Ответственный = Ложь;
	КонецЦикла;
	
	Если Объект.Исполнители.Количество() > 1 Тогда 
		Объект.Исполнители[0].Ответственный = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьЗначение(, ПредметСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока Тогда 
		Если Объект.Исполнители.Количество() > 1 Тогда 
			Элементы.ИсполнителиПроконтролировано.Видимость = Истина;
		Иначе
			Элементы.ИсполнителиПроконтролировано.Видимость = Ложь;
		КонецЕсли;
		
#Если МобильныйКлиент Тогда
		ОбновитьДекорациюСкрытияТаблицыИсполнителей();
#КонецЕсли
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПослеУдаления(Элемент)
	
	Если Объект.Исполнители.Количество() > 1 Тогда 
		Элементы.ИсполнителиПроконтролировано.Видимость = Истина;
	Иначе
		Элементы.ИсполнителиПроконтролировано.Видимость = Ложь;
	КонецЕсли;
	
#Если МобильныйКлиент Тогда
	ОбновитьДекорациюСкрытияТаблицыИсполнителей();
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьНаКонтроль(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ВернутьНаКонтрольПродолжение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Вернуть контрольную карточку на контроль?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьНаКонтрольПродолжение(Результат, Параметры) Экспорт 
	
	Если Результат <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	Объект.СнятСКонтроля = Ложь;
	Объект.ДатаСнятияСКонтроля = '00010101';
	Для Каждого Строка Из Объект.Исполнители Цикл
		Строка.Проконтролировано = Ложь;
		Строка.ДатаКонтроля = '00010101';
	КонецЦикла;
	
	Если Не Записать() Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СтраницыКоманды.ТекущаяСтраница = Элементы.СтраницаКоманды;
	ТолькоПросмотр = Ложь;
	Элементы.ДекорацияСрок.Видимость = Истина;
	Элементы.ФормаВернутьНаКонтроль.Видимость = Ложь;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПроконтролированоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Исполнители.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ТекущиеДанные.Проконтролировано Тогда 
		ТекущиеДанные.ДатаКонтроля = ТекущаяДата();
	Иначе
		ТекущиеДанные.ДатаКонтроля = '00010101';
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСостояниеИсполнения() 
	
	Для Каждого Строка Из Объект.Исполнители Цикл
		СостояниеИсполнения = "";
		Если ЗначениеЗаполнено(Объект.Предмет) Тогда 
			Если ТипЗнч(Объект.Предмет) = Тип("СправочникСсылка.ВеткиПереписки") Тогда 
				Если ТипЗнч(Строка.Источник) = Тип("ДокументСсылка.ВходящееПисьмо") Тогда 
					СостояниеИсполнения = НСтр("ru = 'Ответ получен'");
				ИначеЕсли ТипЗнч(Строка.Источник) = Тип("ДокументСсылка.ИсходящееПисьмо") Тогда 
					СостояниеИсполнения = НСтр("ru = 'Ответ не получен'");
				КонецЕсли;
			ИначеЕсли ПредметПроцессЗадача
				Или ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.Задача")
				Или ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.ДействиеЗадачи") 
				Или ДействияКлиентСервер.ЭтоДействие(Объект.Предмет) Тогда
				Если Строка.Исполнено Тогда 
					СостояниеИсполнения = НСтр("ru = 'Исполнено'");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
		Строка.СостояниеИсполнения = СостояниеИсполнения;
	КонецЦикла;	
		
КонецПроцедуры	

&НаКлиенте
Процедура ИсполнителиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ИсполнителиСостояниеИсполнения Тогда 
		СтандартнаяОбработка = Ложь;
		Строка = Объект.Исполнители.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Если ЗначениеЗаполнено(Строка.Источник) Тогда 
			ПоказатьЗначение(, Строка.Источник);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть()
	
	ПараметрыЗаписи = Новый Структура();
	ПараметрыЗаписи.Вставить("Закрыть", Истина);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Функция ЭлементыДляСохранения()
	
	СохраняемыеЭлементы = Новый Структура;
	СохраняемыеЭлементы.Вставить("Контролер", Объект.Контролер);
		
	Возврат СохранениеВводимыхЗначений.СформироватьТаблицуСохраняемыхЭлементов(СохраняемыеЭлементы);
	
КонецФункции

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства


#Область СлужебныеПроцедурыИФункцииМобильныйКлиент

&НаСервере
Процедура МК_НастроитьЭлементыФормы()
	
	ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Нет;
	
	// Подготовим общие кнопки.
	МК.ПреобразоватьКнопкуВАкцентную(ЭтотОбъект,
		МК_ПовтИсп.ЭлементыСтиля(),
		Элементы.ФормаКомандаЗаписатьИЗакрыть);
	
	Элементы.СнятьСКонтроля.Видимость = Не Объект.СнятСКонтроля;
	Элементы.СнятьСКонтроля.Картинка = БиблиотекаКартинок.Удалить;
	Элементы.Переместить(Элементы.СнятьСКонтроля, КоманднаяПанель, Элементы.ФормаСтандартныеКоманды);
	
	// Описание, что контроль снят перенесем вверх.
	Элементы.ДекорацияСнятСКонтроля.Видимость = Объект.СнятСКонтроля;
	Элементы.Переместить(Элементы.ГруппаКоманды, ЭтотОбъект, Элементы.ГруппаОписаниеСтраницы);
	
	// Адаптируем описание.
	Элементы.Описание1.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	Элементы.Описание1.РастягиватьПоВертикали = Истина;
	Элементы.Описание1.Высота = 1;
	Элементы.Описание1.АвтоМаксимальнаяВысота = Ложь;
	Элементы.Описание1.АвтоМаксимальнаяШирина= Ложь;
	Элементы.Описание1.Заголовок = Элементы.Описание2.ПодсказкаВвода;
	Элементы.Описание1.ПодсказкаВвода = "";
	
	Элементы.Описание2.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	Элементы.Описание2.РастягиватьПоВертикали = Истина;
	Элементы.Описание2.Высота = 1;
	Элементы.Описание2.АвтоМаксимальнаяВысота = Ложь;
	Элементы.Описание2.АвтоМаксимальнаяШирина= Ложь;
	Элементы.Описание2.Заголовок = Элементы.Описание2.ПодсказкаВвода;
	Элементы.Описание2.ПодсказкаВвода = "";
	
	// Подготовим блок со сроком.
	Элементы.СрокИсполнения.СписокВыбора.Очистить();
	Элементы.ДекорацияСрок.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
	
	// Подготовим таблицу исполнителей.
	// Отключим имеющиеся кнопки.
	Элементы.ГруппаПодписьИКомПанель.Видимость = Ложь;

	//  Раскроем таблицу, если исполнителей немного.
	ОтображатьИсполнителей = (Объект.Исполнители.Количество() > 0 И
		Объект.Исполнители.Количество() <= 3);
	
	//  Добавим декорацию для сворачивания таблицы.
	ЗаголовокДекорации = НСтр("ru='Кого контролировать'");
	ИмяДекорацияДляСкрытияТаблицыПриложений =
		Новый РеквизитФормы("ИмяДекорацияДляСкрытияТаблицыИсполнителей",
			Новый ОписаниеТипов("Строка"));
	
	ИзменитьРеквизиты(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИмяДекорацияДляСкрытияТаблицыПриложений));
	
	ЭтотОбъект.ИмяДекорацияДляСкрытияТаблицыИсполнителей =
		МК_АдаптацияИнтерфейсаСервер.ДобавитьЭлементыДляСкрытияТаблицыВФормеЗадачи(
			ЭтотОбъект,
			Элементы.Исполнители,
			ЗаголовокДекорации,
			"Подключаемый_ИсполнителиТекстНажатие");
	
	Элементы.Исполнители.РастягиватьПоВертикали = Ложь;
	Элементы.Исполнители.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	Элементы.Исполнители.Шапка = Ложь;
	Элементы.Исполнители.Высота = 1;
	Элементы.Исполнители.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	Элементы.Исполнители.Видимость = ОтображатьИсполнителей;
	
	//  Подготовим колонки Исполнителей.
	Элементы.ИсполнителиПроконтролировано.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	Элементы.ИсполнителиСостояниеИсполнения.ТолькоПросмотр = Истина;
	
	// Переместим кнопку добавления нового исполнителя.
	Элементы.Переместить(Элементы.Добавить, Элементы["ГруппаМКСкрытиеТаблицыКогоконтролировать"]);
	Элементы.Добавить.Картинка = БиблиотекаКартинок.СоздатьЭлементСписка;
	Элементы.Добавить.Отображение = ОтображениеКнопки.Картинка;
	Элементы.Добавить.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
	Элементы.Добавить.Видимость = ОтображатьИсполнителей;
	
	// Подготовим контролера.
	Элементы.Контролер.Ширина = 0;
	Элементы.Контролер.РастягиватьПоГоризонтали = Истина;
	Элементы.Контролер.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ИсполнителиТекстНажатие(Элемент)
	
	Элементы.Исполнители.Видимость = Не Элементы.Исполнители.Видимость;
	Элементы.Добавить.Видимость = Элементы.Исполнители.Видимость;
	
	ОбновитьДекорациюСкрытияТаблицыИсполнителей(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДекорациюСкрытияТаблицыИсполнителей(Знач Элемент = Неопределено)
	
	Если Элемент = Неопределено Тогда
		ИмяДекорацияДляСкрытияТаблицыИсполнителей =
			ЭтотОбъект["ИмяДекорацияДляСкрытияТаблицыИсполнителей"];
		
		Элемент = Элементы[ИмяДекорацияДляСкрытияТаблицыИсполнителей];
	КонецЕсли;
	
	МК_АдаптацияИнтерфейсаКлиент.ОформитьНадписьДляСкрытияТаблицы(Элементы.Исполнители,
		Объект.Исполнители,
		Элемент);
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти