#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ГрифДоступа) Тогда
		ГрифДоступа = Параметры.ГрифДоступа;
	КонецЕсли;
	УстановитьОтборПоГрифу();
	
	СписокВыбораТипов = Элементы.ТипОбъектов.СписокВыбора;
	Для Каждого ЭлементМетаданных Из МетаданныеОбъектовДляОбработки() Цикл
		СписокВыбораТипов.Добавить(ЭлементМетаданных.Синоним);
	КонецЦикла;
	ТипОбъектов = СписокВыбораТипов[0].Значение;
	ПрименитьТипОбъектов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГрифДоступаПриИзменении(Элемент)
	
	УстановитьОтборПоГрифу();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектовПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ТипОбъектов) Тогда
		ТипОбъектов = Элементы.ТипОбъектов.СписокВыбора[0].Значение;
	КонецЕсли;
	ПрименитьТипОбъектов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРасхождения

&НаКлиенте
Процедура РасхожденияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент = Элементы.РасхожденияГрифДоступа Тогда
		ПоказатьЗначение(, ВыбраннаяСтрока.ГрифДоступа);
	Иначе
		ПоказатьЗначение(, ВыбраннаяСтрока.Объект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьАвтоматически(Команда)
	
	ОбработаноУспешно = 0;
	ОбработаноСОшибкой = 0;
	
	ВсегоОбъектов = ОбъектыКОбработке(Истина);
	ШаблонТекстаСостояния =
		НСтр("ru = 'Найдено объектов: %1
					|Обработано: %2
					|Не удалось обработать: %3%4'");
	Состояние(СтрШаблон(ШаблонТекстаСостояния, ВсегоОбъектов, ОбработаноУспешно, ОбработаноСОшибкой,
		?(ОбработаноСОшибкой = 0, "", ", " + НСтр("ru = 'подробности см. в журнале регистрации'"))));
	
	НомерИтерации = 1;
	ЛимитКоличестваИтераций = 100000;
	РезультатИтерации = ВыполнитьИтерацию();
	Пока РезультатИтерации.ЕстьОбъектыКОбработке
		И НомерИтерации < ЛимитКоличестваИтераций
		И ОбработаноУспешно + ОбработаноСОшибкой <= ВсегоОбъектов Цикл
		ОбработаноУспешно = ОбработаноУспешно + РезультатИтерации.ОбработаноУспешно;
		ОбработаноСОшибкой = ОбработаноСОшибкой + РезультатИтерации.ОбработаноСОшибкой;
		Состояние(СтрШаблон(ШаблонТекстаСостояния, ВсегоОбъектов, ОбработаноУспешно, ОбработаноСОшибкой,
			?(ОбработаноСОшибкой = 0, "", ", " + НСтр("ru = 'подробности см. в журнале регистрации'"))));
		РезультатИтерации = ВыполнитьИтерацию();
		НомерИтерации = НомерИтерации + 1;
		ОбработкаПрерыванияПользователя();
	КонецЦикла;
	
	Элементы.Расхождения.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборПоГрифу()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Расхождения, "ГрифДоступа", ГрифДоступа,,,
		ЗначениеЗаполнено(ГрифДоступа),
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
	Элементы.Расхождения.Обновить();
		
КонецПроцедуры

&НаСервере
Функция ВыполнитьИтерацию()
	
	ЗаписьЖурналаРегистрации(
		СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,,,
		НСтр("ru = 'Начало итерации удаления запрещенных участников доступа'"));
				
	ОбработаноУспешно = 0;
	ОбработаноСОшибкой = 0;
	
	ВыбранныеОбъекты = ОбъектыКОбработке();
	Для Каждого ВыбранныйОбъект Из ВыбранныеОбъекты Цикл
		НачатьТранзакцию();
		Попытка
			ОбработатьОбъект(ВыбранныйОбъект);
			ОбработаноУспешно = ОбработаноУспешно + 1;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ОбработаноСОшибкой = ОбработаноСОшибкой + 1;
			ЗаписьЖурналаРегистрации(
				СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				ВыбранныйОбъект.Метаданные(), ВыбранныйОбъект,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации(
		СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,,,
		НСтр("ru = 'Завершение итерации удаления запрещенных участников доступа'"));
				
	Возврат Новый Структура("ЕстьОбъектыКОбработке, ОбработаноУспешно, ОбработаноСОшибкой",
		ВыбранныеОбъекты.Количество() > 0, ОбработаноУспешно, ОбработаноСОшибкой);
	
КонецФункции

&НаСервере
Функция ОбъектыКОбработке(ТолькоКоличество = Ложь)
	
	Возврат Справочники.ГрифыДоступа.ОбъектыСЗапрещеннымиУчастникамиДоступа(
		МетаданныеПоТипуОбъектов(ТипОбъектов), ТолькоКоличество, ГрифДоступа);
	
КонецФункции

&НаСервере
Процедура ОбработатьОбъект(ВыбранныйОбъект)
	
	НачатьТранзакцию();
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РабочиеГруппы");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Объект", ВыбранныйОбъект);
		Блокировка.Заблокировать();
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РабочиеГруппы.Участник КАК Участник
			|ИЗ
			|	Справочник.ДокументыПредприятия КАК ОбъектыДоступа
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РабочиеГруппы КАК РабочиеГруппы
			|		ПО ОбъектыДоступа.Ссылка = РабочиеГруппы.Объект
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СотрудникиВКонтейнерах КАК СотрудникиУчастников
			|		ПО (РабочиеГруппы.Участник = СотрудникиУчастников.Контейнер)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДескрипторыДляОбъектов КАК ДескрипторыДляОбъектов
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПраваПоДескрипторамДоступаОбъектов КАК ПраваПоДескрипторам
			|			ПО ДескрипторыДляОбъектов.Дескриптор = ПраваПоДескрипторам.Дескриптор
			|		ПО (ДескрипторыДляОбъектов.Объект = ОбъектыДоступа.ГрифДоступа)
			|			И (ПраваПоДескрипторам.Сотрудник = СотрудникиУчастников.Сотрудник)
			|ГДЕ
			|	ОбъектыДоступа.Ссылка = &ВыбранныйОбъект
			|	И ДескрипторыДляОбъектов.Объект ЕСТЬ NULL
			|	И НЕ СотрудникиУчастников.Сотрудник.ПометкаУдаления");
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДокументыПредприятия",
			МетаданныеПоТипуОбъектов(ТипОбъектов).Имя);
		Запрос.УстановитьПараметр("ВыбранныйОбъект", ВыбранныйОбъект);
		Запрос.УстановитьПараметр("ГруппаДоступа", ГрифДоступа);
			
		ТаблицаУчастников = РаботаСРабочимиГруппами.ПолучитьРабочуюГруппуДокумента(ВыбранныйОбъект);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НайденнаяСтрока = ТаблицаУчастников.Найти(Выборка.Участник, "Участник");
			Если НайденнаяСтрока <> Неопределено Тогда
				ТаблицаУчастников.Удалить(НайденнаяСтрока);
			КонецЕсли;
		КонецЦикла;
		РаботаСРабочимиГруппами.ПерезаписатьРабочуюГруппуОбъекта(
			ВыбранныйОбъект, ТаблицаУчастников, Истина);
	
		ЗафиксироватьТранзакцию();
	
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция СобытиеЖурналаРегистрации()
	
	Возврат НСтр("ru = 'Удаление запрещенных участников доступа'", ОбщегоНазначения.КодОсновногоЯзыка());
	
КонецФункции

&НаСервереБезКонтекста
Функция МетаданныеОбъектовДляОбработки()
	
	Возврат ДокументооборотПраваДоступа.МетаданныеОбъектовДляПоискаЗапрещенныхУчастников();
	
КонецФункции

&НаСервереБезКонтекста
Функция МетаданныеПоТипуОбъектов(ТипОбъектов)

	МетаданныеОбъектов = Неопределено;
	Для Каждого ЭлементМетаданных Из МетаданныеОбъектовДляОбработки() Цикл
		Если ЭлементМетаданных.Синоним = ТипОбъектов Тогда
			МетаданныеОбъектов = ЭлементМетаданных;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если МетаданныеОбъектов = Неопределено Тогда
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Не найден элемент метаданных ""%1""'"), ТипОбъектов);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Возврат МетаданныеОбъектов;
	
КонецФункции

&НаСервере
Процедура ПрименитьТипОбъектов()
	
	МетаданныеОбъектов = МетаданныеПоТипуОбъектов(ТипОбъектов);
	Элементы.РасхожденияОбъект.Заголовок = 
		?(ЗначениеЗаполнено(МетаданныеОбъектов.ПредставлениеОбъекта),
			МетаданныеОбъектов.ПредставлениеОбъекта, МетаданныеОбъектов.Имя);
		
	ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		|	ОбъектыДоступа.Ссылка КАК Объект,
		|	ОбъектыДоступа.ГрифДоступа КАК ГрифДоступа,
		|	РабочиеГруппы.Участник КАК Участник,
		|	МАКСИМУМ(СотрудникиУчастников.Сотрудник) КАК КтоЗапрещен
		|ИЗ
		|	Справочник.ДокументыПредприятия КАК ОбъектыДоступа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РабочиеГруппы КАК РабочиеГруппы
		|		ПО ОбъектыДоступа.Ссылка = РабочиеГруппы.Объект
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СотрудникиВКонтейнерах КАК СотрудникиУчастников
		|		ПО (РабочиеГруппы.Участник = СотрудникиУчастников.Контейнер)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДескрипторыДляОбъектов КАК ДескрипторыДляОбъектов
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПраваПоДескрипторамДоступаОбъектов КАК ПраваПоДескрипторам
		|			ПО ДескрипторыДляОбъектов.Дескриптор = ПраваПоДескрипторам.Дескриптор
		|		ПО (ДескрипторыДляОбъектов.Объект = ОбъектыДоступа.ГрифДоступа)
		|			И (ПраваПоДескрипторам.Сотрудник = СотрудникиУчастников.Сотрудник)
		|ГДЕ
		|	ДескрипторыДляОбъектов.Объект ЕСТЬ NULL
		|	И ОбъектыДоступа.ГрифДоступа <> ЗНАЧЕНИЕ(Справочник.ГрифыДоступа.ПустаяСсылка)
		|	И НЕ СотрудникиУчастников.Сотрудник.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъектыДоступа.Ссылка,
		|	ОбъектыДоступа.ГрифДоступа,
		|	РабочиеГруппы.Участник";
	
	Расхождения.ТекстЗапроса = СтрЗаменить(ШаблонТекстаЗапроса,
		"ДокументыПредприятия", МетаданныеПоТипуОбъектов(ТипОбъектов).Имя);
	
КонецПроцедуры

#КонецОбласти
