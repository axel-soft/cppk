#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует данные всех блоков навигации.
//  
// Параметры:
//  СУчетомНастроек - Булево.
// 
// Возвращаемое значение:
// 	Соответствие из КлючИЗначение - Данные блоков навигации:
// 	 * Ключ - СправочникСсылка.БлокиНавигации.
// 	 * Значение -  Структура - Данные блока навигации. См. Справочники.БлокиНавигации.НовыйДанныеБлокаНавигации.
//
Функция ДанныеВсехБлоковНавигации(СУчетомНастроек) Экспорт
	
	ДанныеВсехБлоковНавигации = ДанныеБлоковНавигации(Неопределено, СУчетомНастроек);
	
	Возврат ДанныеВсехБлоковНавигации;
	
КонецФункции

// Данные блока навигации виджета.
// 
// Параметры:
//  БлокНавигации - СправочникСсылка.БлокиНавигации.
//  СУчетомНастроек - Булево.
// 
// Возвращаемое значение:
//  Структура - Данные блока навигации. См. Справочники.БлокиНавигации.НовыйДанныеБлокаНавигации.
//
Функция ДанныеБлокаНавигации(БлокНавигации, СУчетомНастроек = Истина) Экспорт
	
	БлокиНавигации = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(БлокНавигации);
	ДанныеБлоковНавигации = ДанныеБлоковНавигации(БлокиНавигации, СУчетомНастроек);
	ДанныеБлокаНавигации = ДанныеБлоковНавигации[БлокНавигации];
	
	Возврат ДанныеБлокаНавигации;
	
КонецФункции

// Формирует данные блоков навигации.
//  
// Параметры:
//  БлокиНавигации - Массив из СправочникСсылка.БлокиНавигации, Неопределено.
//  СУчетомНастроек - Булево.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение - Данные блоков навигации:
//   * Ключ - СправочникСсылка.БлокиНавигации.
//   * Значение -  Структура - Данные блока навигации. См. Справочники.БлокиНавигации.НовыйДанныеБлокаНавигации.
//
Функция ДанныеБлоковНавигации(БлокиНавигации = Неопределено, СУчетомНастроек = Истина, ДанныеКоманд = Неопределено, ДанныеПоказателей = Неопределено) Экспорт
	
	ДанныеБлоковНавигации = Новый Соответствие;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	БлокиНавигации.ВерсияДанных,
		|	БлокиНавигации.ВключатьРеестры,
		|	БлокиНавигации.Заголовок,
		|	БлокиНавигации.ИмяПредопределенныхДанных,
		|	БлокиНавигации.Команды.(
		|		ВспомогательнаяКоманда,
		|		НомерСтроки,
		|		ДополнительныйПоказатель,
		|		ОсновнаяКомандаПоказатель,
		|		СкрытьВЕще,
		|		Ссылка),
		|	БлокиНавигации.Наименование,
		|	БлокиНавигации.НаименованиеЯзык1,
		|	БлокиНавигации.ЗаголовокЯзык1,
		|	БлокиНавигации.ПодсказкаЯзык1,
		|	БлокиНавигации.Подсказка,
		|	БлокиНавигации.ПометкаУдаления,
		|	БлокиНавигации.Предопределенный,
		|	БлокиНавигации.Представление,
		|	БлокиНавигации.Ссылка,
		|	БлокиНавигации.Условие,
		|	ЕСТЬNULL(НастройкиБлоковНавигации.ЗначениеНастройки, НЕОПРЕДЕЛЕНО) КАК НастройкиБлокаНавигации
		|ИЗ
		|	Справочник.БлокиНавигации КАК БлокиНавигации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиБлоковНавигации КАК НастройкиБлоковНавигации
		|		ПО БлокиНавигации.Ссылка = НастройкиБлоковНавигации.БлокНавигации
		|		И НастройкиБлоковНавигации.Пользователь = &ТекущийПользователь
		|ГДЕ
		|	БлокиНавигации.Ссылка В (&БлокиНавигации)
		|	И БлокиНавигации.ПометкаУдаления = ЛОЖЬ");
	
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.ТекущийПользователь());
	
	Если БлокиНавигации <> Неопределено Тогда
		Запрос.УстановитьПараметр("БлокиНавигации", БлокиНавигации);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "БлокиНавигации.Ссылка В (&БлокиНавигации)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И БлокиНавигации.ПометкаУдаления = ЛОЖЬ", "БлокиНавигации.ПометкаУдаления = ЛОЖЬ");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеБлокаНавигации = СформироватьДанныеБлокаНавигации(Выборка, СУчетомНастроек);
		
		Если Не БлокНавигацииДоступен(ДанныеБлокаНавигации) Тогда
			Продолжить;
		КонецЕсли;
		
		ИнициализироватьБлокНавигации(ДанныеБлокаНавигации, ДанныеКоманд, ДанныеПоказателей);
		
		Если ДанныеБлокаНавигации.Команды.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеБлоковНавигации[Выборка.Ссылка] = ДанныеБлокаНавигации;
		
	КонецЦикла;
	
	Возврат ДанныеБлоковНавигации;
	
КонецФункции

// Заполняет поставляемые данные.
// 
Процедура ЗаполнитьПоставляемыеДанные() Экспорт
	
	// Справочники
	БлокНавигацииОбъект = БлокСправочники.ПолучитьОбъект();
	БлокНавигацииОбъект.Наименование = НСтр("ru = 'Справочники'");
	БлокНавигацииОбъект.Заголовок = НСтр("ru = 'Справочники'");
	БлокНавигацииОбъект.Подсказка = НСтр("ru = 'Блок навигации ""Основные справочники""'");
	БлокНавигацииОбъект.ВключатьРеестры = Ложь;
	БлокНавигацииОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	БлокНавигацииОбъект.Команды.Очистить();
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.АдреснаяКнига;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ЖурналПередачи;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ЗамещающиеСоздать;
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Замещающие;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Контрагенты;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Проекты;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.НоменклатураДел;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Номенклатура;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПомощникиСоздать;
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Помощники;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ФизическиеЛица;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Отчеты;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(БлокНавигацииОбъект);
	
	// Классификаторы
	БлокНавигацииОбъект = Классификаторы.ПолучитьОбъект();
	БлокНавигацииОбъект.Наименование = НСтр("ru = 'Классификаторы'");
	БлокНавигацииОбъект.Заголовок = НСтр("ru = 'Классификаторы'");
	БлокНавигацииОбъект.Подсказка = НСтр("ru = 'Блок навигации ""Классификаторы""'");
	БлокНавигацииОбъект.ВключатьРеестры = Ложь;
	БлокНавигацииОбъект.Условие = Справочники.АлгоритмыПроверки.ЭтоОтветственныйЗаНСИ;
	БлокНавигацииОбъект.Команды.Очистить();
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Банки;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Валюты;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ВидыДокументов;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ВидыМероприятий;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ВидыОтсутствий;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ВидыПроектов;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ВидыРабот;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ВидыДокументовФизическихЛиц;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ВопросыДеятельности;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ТематикиДокументов;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ТематикиОбращений;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.СпособыДоставки;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.СтраныМира;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ТипыСвязей;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.НаименованияСторон;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.СтатьиДвиженияДенежныхСредств;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(БлокНавигацииОбъект);
	
	// Настройки
	БлокНавигацииОбъект = Настройки.ПолучитьОбъект();
	БлокНавигацииОбъект.Наименование = НСтр("ru = 'Настройки'");
	БлокНавигацииОбъект.Заголовок = НСтр("ru = 'Настройки'");
	БлокНавигацииОбъект.Подсказка = НСтр("ru = 'Блок навигации ""Основные настройки""'");
	БлокНавигацииОбъект.ВключатьРеестры = Ложь;
	БлокНавигацииОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	БлокНавигацииОбъект.Команды.Очистить();
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Нумераторы;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ИндексыНумерации;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ШаблоныПроцессов;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.НастройкиСвязей;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.АлгоритмыПроверки;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ВсеЗадачи;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ВсеМероприятия;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ВсеКалендари;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Процессы;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.НастройкиРабочегоСтола;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ОбоМне;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.СменитьПароль;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ПерсональныеНастройки;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.НастройкиРеестров;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(БлокНавигацииОбъект);
	
	// Предприятие
	БлокНавигацииОбъект = Предприятие.ПолучитьОбъект();
	БлокНавигацииОбъект.Наименование = НСтр("ru = 'Предприятие'");
	БлокНавигацииОбъект.Заголовок = НСтр("ru = 'Предприятие'");
	БлокНавигацииОбъект.Подсказка = НСтр("ru = 'Блок навигации ""Предприятие""'");
	БлокНавигацииОбъект.ВключатьРеестры = Ложь;
	БлокНавигацииОбъект.Условие = Справочники.АлгоритмыПроверки.ЭтоОтветственныйЗаНСИ;
	БлокНавигацииОбъект.Команды.Очистить();
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ГрафикиРаботы;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Календари;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.РабочиеГруппы;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ТерриторииИПомещения;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Должности;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Организации;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.СтруктураПредприятия;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.МестаХраненияДел;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Инструкции;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.РолиИсполнителей;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(БлокНавигацииОбъект);
	
	// Реестры руководителя
	БлокНавигацииОбъект = РеестрыРуководителя.ПолучитьОбъект();
	БлокНавигацииОбъект.Наименование = НСтр("ru = 'Реестры руководителя'");
	БлокНавигацииОбъект.Заголовок = НСтр("ru = 'Реестры'");
	БлокНавигацииОбъект.Подсказка = НСтр("ru = 'Блок навигации ""Реестры""'");
	БлокНавигацииОбъект.ВключатьРеестры = Истина;
	БлокНавигацииОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	БлокНавигацииОбъект.Команды.Очистить();
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.БронированиеПомещений;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.СоздатьЗадачу;
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.ПоказателиВиджетов.ЗадачиОтМеняВсего;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ЗадачиОтМеняЧерновики;
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.МоиКонтрольныеТочки;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.СоздатьОбращениеГражданина;
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ОбращенияГраждан;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Файлы;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПоставитьНаКонтроль;
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.ПоказателиВиджетов.КонтрольВсего; 
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.НаписатьПисьмо;
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.ПоказателиВиджетов.ПочтаВсего;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.СоздатьЗаписьКалендаря;
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.ПоказателиВиджетов.КалендарьВсего;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.СоздатьТемуФорума;
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.ПоказателиВиджетов.ФорумВсего;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ОтсутствияСотрудниковСоздать;
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.ПоказателиВиджетов.ОтсутствияВсего;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ЕжедневныеОтчеты;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(БлокНавигацииОбъект);
	
	// Реестры сотрудника
	БлокНавигацииОбъект = РеестрыСотрудника.ПолучитьОбъект();
	БлокНавигацииОбъект.Наименование = НСтр("ru = 'Реестры сотрудника'");
	БлокНавигацииОбъект.Заголовок = НСтр("ru = 'Реестры'");
	БлокНавигацииОбъект.Подсказка = НСтр("ru = 'Блок навигации ""Реестры""'");
	БлокНавигацииОбъект.ВключатьРеестры = Истина;
	БлокНавигацииОбъект.Условие = Справочники.АлгоритмыПроверки.ПустаяСсылка();
	БлокНавигацииОбъект.Команды.Очистить();
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.БронированиеПомещений;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.МоиКонтрольныеТочки;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.СоздатьОбращениеГражданина;
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.ОбращенияГраждан;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	СтрокаКоманды = БлокНавигацииОбъект.Команды.Добавить();
	СтрокаКоманды.ВспомогательнаяКоманда = Справочники.КомандыВиджетов.ПустаяСсылка();
	СтрокаКоманды.ОсновнаяКомандаПоказатель = Справочники.КомандыВиджетов.Файлы;
	СтрокаКоманды.ДополнительныйПоказатель = Справочники.ПоказателиВиджетов.ПустаяСсылка();
	СтрокаКоманды.СкрытьВЕще = Ложь;
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(БлокНавигацииОбъект);
	
КонецПроцедуры

// Определяет используемые команды и показатели в блоках навигации.
// 
// Параметры:
//  БлокиНавигации - Массив из СправочникСсылка.БлокиНавигации.
//
// Возвращаемое значение:
//  Структура - Команды и показатели в блоках навигации:
//   * Команды - Массив из СправочникСсылка.КомандыВиджетов - Команды в блоках навигации.
//   * Показатели - Массив из СправочникСсылка.ПоказателиВиджетов - Показатели в блоках навигации.
//
Функция КомандыИПоказатели(БлокиНавигации) Экспорт
	
	КомандыИПоказатели = Новый Структура;
	КомандыИПоказатели.Вставить("Команды", Новый Массив);
	КомандыИПоказатели.Вставить("Показатели", Новый Массив);
	
	Если БлокиНавигации.Количество() = 0 Тогда
		Возврат КомандыИПоказатели;
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	БлокиНавигацииКоманды.ВспомогательнаяКоманда КАК ВспомогательнаяКоманда,
		|	БлокиНавигацииКоманды.ДополнительныйПоказатель КАК ДополнительныйПоказатель,
		|	БлокиНавигацииКоманды.ОсновнаяКомандаПоказатель КАК ОсновнаяКомандаПоказатель
		|ИЗ
		|	Справочник.БлокиНавигации.Команды КАК БлокиНавигацииКоманды
		|ГДЕ
		|	БлокиНавигацииКоманды.Ссылка В (&БлокиНавигации)");
	
	Запрос.УстановитьПараметр("БлокиНавигации", БлокиНавигации);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.ОсновнаяКомандаПоказатель)
			И ТипЗнч(Выборка.ОсновнаяКомандаПоказатель) = Тип("СправочникСсылка.КомандыВиджетов")
			И КомандыИПоказатели.Команды.Найти(Выборка.ОсновнаяКомандаПоказатель) = Неопределено Тогда
			КомандыИПоказатели.Команды.Добавить(Выборка.ОсновнаяКомандаПоказатель);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ОсновнаяКомандаПоказатель)
			И ТипЗнч(Выборка.ОсновнаяКомандаПоказатель) = Тип("СправочникСсылка.ПоказателиВиджетов")
			И КомандыИПоказатели.Показатели.Найти(Выборка.ОсновнаяКомандаПоказатель) = Неопределено Тогда
			КомандыИПоказатели.Показатели.Добавить(Выборка.ОсновнаяКомандаПоказатель);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ДополнительныйПоказатель)
			И КомандыИПоказатели.Показатели.Найти(Выборка.ДополнительныйПоказатель) = Неопределено Тогда
			КомандыИПоказатели.Показатели.Добавить(Выборка.ДополнительныйПоказатель);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ВспомогательнаяКоманда)
			И КомандыИПоказатели.Команды.Найти(Выборка.ВспомогательнаяКоманда) = Неопределено Тогда
			КомандыИПоказатели.Команды.Добавить(Выборка.ВспомогательнаяКоманда);
		КонецЕсли;
		
	КонецЦикла;
	
	ВключатьРеестры = Ложь;
	РеквизитыБлоков = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(БлокиНавигации, "ВключатьРеестры");
	
	Для Каждого БлокНавигации Из БлокиНавигации Цикл
		
		РеквизитыБлока = РеквизитыБлоков[БлокНавигации];
		Если РеквизитыБлока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ВключатьРеестры = ВключатьРеестры Или РеквизитыБлока.ВключатьРеестры;
		
	КонецЦикла;
	
	Если ВключатьРеестры Тогда
		
		Для Каждого КомандыРеестра Из РаботаСРеестрами.КомандыДоступныхРеестров() Цикл
			
			Если Не ЗначениеЗаполнено(КомандыРеестра.Открыть) Тогда
				Продолжить;
			КонецЕсли;
			
			КомандыИПоказатели.Команды.Добавить(КомандыРеестра.Открыть);
			
			Если ЗначениеЗаполнено(КомандыРеестра.Создать) Тогда
				КомандыИПоказатели.Команды.Добавить(КомандыРеестра.Создать);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат КомандыИПоказатели;
	
КонецФункции

// Формирует структуру показателя.
// 
// Возвращаемое значение:
//  Структура - Новый данные блока навигации:
//   * Имя - Строка.
//   * Ссылка - СправочникСсылка.БлокиНавигации.
//   * Наименование - Строка.
//   * Заголовок - Строка.
//   * Подсказка - Строка.
//   * Условие - СправочникСсылка.АлгоритмыПроверки.
//   * ВключатьРеестры - Булево.
//   * Команды - Массив.
//   * КомандыБлока - Массив.
//   * КомандыЕщеБлока - Массив.
//
Функция НовыйДанныеБлокаНавигации() Экспорт
	
	ДанныеБлокаНавигации = Новый Структура;
	ДанныеБлокаНавигации.Вставить("Имя", "");
	ДанныеБлокаНавигации.Вставить("Ссылка", ПустаяСсылка());
	ДанныеБлокаНавигации.Вставить("Наименование", "");
	ДанныеБлокаНавигации.Вставить("Заголовок", "");
	ДанныеБлокаНавигации.Вставить("Подсказка", "");
	ДанныеБлокаНавигации.Вставить("Условие", Справочники.АлгоритмыПроверки.ПустаяСсылка());
	ДанныеБлокаНавигации.Вставить("ВключатьРеестры", Ложь);
	ДанныеБлокаНавигации.Вставить("Команды", Новый Массив);
	ДанныеБлокаНавигации.Вставить("КомандыБлока", Новый Массив);
	ДанныеБлокаНавигации.Вставить("КомандыЕщеБлока", Новый Массив);
	
	Возврат ДанныеБлокаНавигации;
	
КонецФункции

// Проверяет, есть ли настроенные блоки навигации.
// 
// Возвращаемое значение:
//  Булево - Есть настроенные блоки навигации.
//
Функция ЕстьНастроенныеБлокиНавигации() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	БлокиНавигации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БлокиНавигации КАК БлокиНавигации
		|ГДЕ
		|	БлокиНавигации.ПометкаУдаления = ЛОЖЬ");
	
	РезультатЗапроса = Запрос.Выполнить();
	ЕстьНастроенныеБлокиНавигации = Не РезультатЗапроса.Пустой();
	
	Возврат ЕстьНастроенныеБлокиНавигации;
	
КонецФункции

// Формирует список доступных данных.
// 
// Возвращаемое значение:
//  СписокЗначений - Доступные данные.
//
Функция ДоступныеДанные() Экспорт
	
	ДоступныеДанные = Новый СписокЗначений;
	
	ДанныеВсехБлоковНавигации = РаботаСРабочимСтоломПовтИсп.ДанныеВсехБлоковНавигации(Ложь);
	Для Каждого КлючИЗначение Из ДанныеВсехБлоковНавигации Цикл
		
		БлокНавигации = КлючИЗначение.Ключ;
		ДанныеБлокаНавигации = КлючИЗначение.Значение;
		
		ДоступныеДанные.Добавить(
			БлокНавигации,
			ДанныеБлокаНавигации.Наименование);
		
	КонецЦикла;
	
	Возврат ДоступныеДанные;
	
КонецФункции

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	МультиязычностьКлиентСервер.ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	МультиязычностьКлиентСервер.ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СтрокаПоиска", ?(Параметры.СтрокаПоиска = Неопределено, "", Параметры.СтрокаПоиска) + "%");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БлокиНавигации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БлокиНавигации КАК БлокиНавигации
	|ГДЕ
	|	НЕ БлокиНавигации.ПометкаУдаления
	|	И БлокиНавигации.Наименование ПОДОБНО &СтрокаПоиска
	|
	|УПОРЯДОЧИТЬ ПО
	|	БлокиНавигации.Наименование";
	
	ОбъектМетаданных = Метаданные.Справочники.БлокиНавигации;
	Если Не МультиязычностьПовтИсп.КонфигурацияИспользуетТолькоОдинЯзык(ОбъектМетаданных.ТабличныеЧасти.Найти("Представления") = Неопределено) Тогда
		
		Если МультиязычностьСервер.ИспользуетсяПервыйДополнительныйЯзык() Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,
				"БлокиНавигации.Наименование ПОДОБНО &СтрокаПоиска",
				"(БлокиНавигации.Наименование ПОДОБНО &СтрокаПоиска ИЛИ БлокиНавигации.НаименованиеЯзык1 ПОДОБНО &СтрокаПоиска)");
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеВыбора = Новый СписокЗначений;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Применяет настройки блока навигации.
Процедура ПрименитьНастройкиБлокаНавигации(ДанныеБлокаНавигации, НастройкиБлокаНавигации)
	
	Если НастройкиБлокаНавигации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоЭлементов = ДанныеБлокаНавигации.КомандыБлока.Количество();
	Для Индекс = 1 По КоличествоЭлементов Цикл
		
		КомандаБлока = ДанныеБлокаНавигации.КомандыБлока[КоличествоЭлементов - Индекс];
		
		НастройкиОсновнойКоманды = НастройкиБлокаНавигации.Команды[КомандаБлока.ОсновнаяКоманда];
		НастройкиВспомогательнойКоманды = НастройкиБлокаНавигации.Команды[КомандаБлока.ВспомогательнаяКоманда];
		НастройкиПоказателя = НастройкиБлокаНавигации.Команды[КомандаБлока.Показатель];
		
		// Скрыть вспомогательную команду.
		Если НастройкиВспомогательнойКоманды <> Неопределено
			И НастройкиВспомогательнойКоманды.Скрыть = Истина Тогда
			КомандаБлока.ВспомогательнаяКоманда = Неопределено;
		КонецЕсли;
		
		// Скрыть команды в Еще.
		Если НастройкиОсновнойКоманды <> Неопределено
			И НастройкиОсновнойКоманды.СкрытьВЕще = Истина Тогда
			ДанныеБлокаНавигации.КомандыЕщеБлока.Добавить(КомандаБлока);
		ИначеЕсли НастройкиПоказателя <> Неопределено
			И НастройкиПоказателя.СкрытьВЕще = Истина Тогда
			ДанныеБлокаНавигации.КомандыЕщеБлока.Добавить(КомандаБлока);
		ИначеЕсли НастройкиВспомогательнойКоманды <> Неопределено
			И  НастройкиВспомогательнойКоманды.СкрытьВЕще = Истина
			И КомандаБлока.ВспомогательнаяКоманда <> Неопределено Тогда
			КомандаЕщеБлока = КомандаБлока(КомандаБлока.ВспомогательнаяКоманда);
			ДанныеБлокаНавигации.КомандыЕщеБлока.Добавить(КомандаЕщеБлока);
			КомандаБлока.ВспомогательнаяКоманда = Неопределено;
		КонецЕсли;
		
		// Скрыть основную команду.
		Если НастройкиОсновнойКоманды <> Неопределено
			И (НастройкиОсновнойКоманды.Скрыть Или НастройкиОсновнойКоманды.СкрытьВЕще) Тогда
			ДанныеБлокаНавигации.КомандыБлока.Удалить(КоличествоЭлементов - Индекс);
		ИначеЕсли НастройкиПоказателя <> Неопределено
			И (НастройкиПоказателя.Скрыть Или НастройкиПоказателя.СкрытьВЕще) Тогда
			ДанныеБлокаНавигации.КомандыБлока.Удалить(КоличествоЭлементов - Индекс);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Инициализирует данные блока навигации.
Процедура ИнициализироватьБлокНавигации(ДанныеБлокаНавигации, ДанныеКоманд, ДанныеПоказателей)
	
	ИнициализироватьКомандыБлокаНавигации(ДанныеБлокаНавигации, ДанныеКоманд, ДанныеПоказателей);
	ИнициализироватьКомандыЕщеБлокНавигации(ДанныеБлокаНавигации, ДанныеКоманд, ДанныеПоказателей);
	
КонецПроцедуры

// Инициализирует команды блока навигации.
Процедура ИнициализироватьКомандыБлокаНавигации(ДанныеБлокаНавигации, ДанныеКоманд, ДанныеПоказателей)
	
	СписокСортировки = Новый СписокЗначений;
	Для Каждого КомандаБлока Из ДанныеБлокаНавигации.КомандыБлока Цикл
		
		// Указание пустой строки в блоке навигации.
		Если Не ЗначениеЗаполнено(КомандаБлока.ОсновнаяКоманда)
			И Не ЗначениеЗаполнено(КомандаБлока.Показатель) Тогда
			ДанныеКомандыБлока = КомандаБлока();
			ДанныеБлокаНавигации.Команды.Добавить(ДанныеКомандыБлока);
			Продолжить;
		КонецЕсли;
		
		ЗаголовокСортировки = "";
		Если ЗначениеЗаполнено(КомандаБлока.ОсновнаяКоманда) Тогда
			Если ДанныеКоманд <> Неопределено Тогда
				ДанныеОсновнойКоманды = ДанныеКоманд[КомандаБлока.ОсновнаяКоманда];
			Иначе
				ДанныеОсновнойКоманды = Справочники.КомандыВиджетов.ДанныеКоманды(КомандаБлока.ОсновнаяКоманда);
			КонецЕсли;
			Если ДанныеОсновнойКоманды <> Неопределено Тогда
				ЗаголовокСортировки = ДанныеОсновнойКоманды.Заголовок;
			КонецЕсли;
		Иначе
			ДанныеОсновнойКоманды = Неопределено;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КомандаБлока.Показатель) Тогда
			Если ДанныеПоказателей <> Неопределено Тогда
				ДанныеПоказателя = ДанныеПоказателей[КомандаБлока.Показатель];
			Иначе
				ДанныеПоказателя = Справочники.ПоказателиВиджетов.ДанныеПоказателя(КомандаБлока.Показатель);
			КонецЕсли;
			Если ДанныеПоказателя <> Неопределено Тогда
				ЗаголовокСортировки = ДанныеПоказателя.Заголовок;
			КонецЕсли;
		Иначе
			ДанныеПоказателя = Неопределено;
		КонецЕсли;
		
		// Если основная команда не доступна, то вспомогательная команда тоже скрывается, пустую строку не добавляем.
		Если ДанныеОсновнойКоманды = Неопределено И ДанныеПоказателя = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КомандаБлока.ВспомогательнаяКоманда) Тогда
			Если ДанныеКоманд <> Неопределено Тогда
				ДанныеВспомогательнойКоманды = ДанныеКоманд[КомандаБлока.ВспомогательнаяКоманда];
			Иначе
				ДанныеВспомогательнойКоманды = Справочники.КомандыВиджетов.ДанныеКоманды(КомандаБлока.ВспомогательнаяКоманда);
			КонецЕсли;
		Иначе
			ДанныеВспомогательнойКоманды = Неопределено;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КомандаБлока.ДополнительныйПоказатель) Тогда
			Если ДанныеКоманд <> Неопределено Тогда
				ДанныеДополнительногоПоказателя = ДанныеПоказателей[КомандаБлока.ДополнительныйПоказатель];
			Иначе
				ДанныеДополнительногоПоказателя = Справочники.ПоказателиВиджетов.ДанныеПоказателя(КомандаБлока.ДополнительныйПоказатель);
			КонецЕсли;
		Иначе
			ДанныеДополнительногоПоказателя = Неопределено;
		КонецЕсли;
		
		ДанныеКомандыБлока = КомандаБлока(ДанныеОсновнойКоманды, ДанныеВспомогательнойКоманды, ДанныеПоказателя, ДанныеДополнительногоПоказателя);
		
		СписокСортировки.Добавить(ДанныеКомандыБлока, ЗаголовокСортировки);
		
	КонецЦикла;
	
	СписокСортировки.СортироватьПоПредставлению(НаправлениеСортировки.Возр);
	
	ДанныеБлокаНавигации.Команды = СписокСортировки.ВыгрузитьЗначения();
	
КонецПроцедуры

// Инициализирует команды еще блока навигации.
Процедура ИнициализироватьКомандыЕщеБлокНавигации(ДанныеБлокаНавигации, ДанныеКоманд, ДанныеПоказателей)
	
	Если ДанныеБлокаНавигации.КомандыЕщеБлока.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СписокСортировки = Новый СписокЗначений;
	
	Для Каждого КомандаЕщеБлока Из ДанныеБлокаНавигации.КомандыЕщеБлока Цикл
		
		Если Не ЗначениеЗаполнено(КомандаЕщеБлока.ОсновнаяКоманда)
			И Не ЗначениеЗаполнено(КомандаЕщеБлока.Показатель) Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеОсновнойКоманды = Неопределено;
		Если ЗначениеЗаполнено(КомандаЕщеБлока.ОсновнаяКоманда) Тогда
			Если ДанныеКоманд <> Неопределено Тогда
				ДанныеОсновнойКоманды = ДанныеКоманд[КомандаЕщеБлока.ОсновнаяКоманда];
			Иначе
				ДанныеОсновнойКоманды = Справочники.КомандыВиджетов.ДанныеКоманды(
					КомандаЕщеБлока.ОсновнаяКоманда);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КомандаЕщеБлока.Показатель) Тогда
			Если ДанныеКоманд <> Неопределено Тогда
				ДанныеОсновнойКоманды = ДанныеПоказателей[КомандаЕщеБлока.Показатель];
			Иначе
				ДанныеОсновнойКоманды = Справочники.ПоказателиВиджетов.ДанныеПоказателя(
					КомандаЕщеБлока.Показатель);
			КонецЕсли;
		КонецЕсли;
		
		// Если основная команда не доступна, то вспомогательная команда тоже скрывается,
		// пустую строку не добавляем.
		Если ДанныеОсновнойКоманды = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СписокСортировки.Добавить(ДанныеОсновнойКоманды, ДанныеОсновнойКоманды.Заголовок);
		
		Если ЗначениеЗаполнено(КомандаЕщеБлока.ВспомогательнаяКоманда) Тогда
			
			Если ДанныеКоманд <> Неопределено Тогда
				ДанныеВспомогательнойКоманды = ДанныеКоманд[КомандаЕщеБлока.ВспомогательнаяКоманда];
			Иначе
				ДанныеВспомогательнойКоманды = Справочники.КомандыВиджетов.ДанныеКоманды(
					КомандаЕщеБлока.ВспомогательнаяКоманда);
			КонецЕсли;
			Если ДанныеВспомогательнойКоманды <> Неопределено Тогда
				СписокСортировки.Добавить(
					ДанныеВспомогательнойКоманды,
					ДанныеВспомогательнойКоманды.Заголовок);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КомандаЕщеБлока.ДополнительныйПоказатель) Тогда
			
			Если ДанныеКоманд <> Неопределено Тогда
				ДанныеВспомогательногоПоказателя = ДанныеПоказателей[КомандаЕщеБлока.ДополнительныйПоказатель];
			Иначе
				ДанныеВспомогательногоПоказателя = Справочники.ПоказателиВиджетов.ДанныеПоказателя(
					КомандаЕщеБлока.ДополнительныйПоказатель);
			КонецЕсли;
			Если ДанныеВспомогательногоПоказателя <> Неопределено Тогда
				СписокСортировки.Добавить(
					ДанныеВспомогательногоПоказателя,
					ДанныеВспомогательногоПоказателя.Заголовок);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСортировки.СортироватьПоПредставлению(НаправлениеСортировки.Возр);
	
	ДанныеКомандЕще = СписокСортировки.ВыгрузитьЗначения();
	ДанныеОсновнойКоманды = Справочники.КомандыВиджетов.ДанныеКомандыЕще(ДанныеКомандЕще);
	Если ДанныеОсновнойКоманды = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ДанныеВспомогательнойКоманды = Неопределено;
	ДанныеКомандыЕщеБлока = КомандаБлока(ДанныеОсновнойКоманды, ДанныеВспомогательнойКоманды);
	ДанныеБлокаНавигации.Команды.Добавить(ДанныеКомандыЕщеБлока);
	
КонецПроцедуры

// Формирует пару команды блока.
Функция КомандаБлока(ОсновнаяКоманда = Неопределено, ВспомогательнаяКоманда = Неопределено, Показатель = Неопределено, ДополнительныйПоказатель = Неопределено)
	
	КомандаБлока = Новый Структура;
	КомандаБлока.Вставить("ОсновнаяКоманда", ОсновнаяКоманда);
	КомандаБлока.Вставить("ВспомогательнаяКоманда", ВспомогательнаяКоманда);
	КомандаБлока.Вставить("Показатель", Показатель);
	КомандаБлока.Вставить("ДополнительныйПоказатель", ДополнительныйПоказатель);
	
	Возврат КомандаБлока;
	
КонецФункции

// Возвращает данные поставляемой команды.
Функция СформироватьДанныеБлокаНавигации(Выборка, СУчетомНастроек)
				
	ДанныеБлокаНавигации = НовыйДанныеБлокаНавигации();
	ДанныеБлокаНавигации.Имя = 
		?(ЗначениеЗаполнено(Выборка.ИмяПредопределенныхДанных),
			Выборка.ИмяПредопределенныхДанных,
			СтрЗаменить(Строка(Выборка.Ссылка.УникальныйИдентификатор()), "-", ""));
	ДанныеБлокаНавигации.Наименование = Выборка.Наименование;
	ДанныеБлокаНавигации.Заголовок = Выборка.Заголовок;
	ДанныеБлокаНавигации.Подсказка = Выборка.Подсказка;
	ДанныеБлокаНавигации.Условие = Выборка.Условие;
	ДанныеБлокаНавигации.ВключатьРеестры = Выборка.ВключатьРеестры;
	
	КонфигурацияИспользуетТолькоОдинЯзык = МультиязычностьПовтИсп.КонфигурацияИспользуетТолькоОдинЯзык(Ложь);
	Если Не КонфигурацияИспользуетТолькоОдинЯзык И Не МультиязычностьСервер.ЭтоОсновнойЯзык() Тогда
		ДанныеБлокаНавигации.Наименование = Выборка.НаименованиеЯзык1;
		ДанныеБлокаНавигации.Заголовок = Выборка.ЗаголовокЯзык1;
		ДанныеБлокаНавигации.Подсказка = Выборка.ПодсказкаЯзык1;
	КонецЕсли;
	
	НастройкиБлокаНавигации =
		?(СУчетомНастроек И Выборка.НастройкиБлокаНавигации <> Неопределено,
			Выборка.НастройкиБлокаНавигации.Получить(),
			РегистрыСведений.НастройкиБлоковНавигации.СтруктураНастройкиБлокаНавигации());
	
	Для Каждого СтрокаКоманды Из Выборка.Команды.Выгрузить() Цикл
		
		ОсновнаяКоманда = Неопределено;
		Показатель = Неопределено;
		Если ТипЗнч(СтрокаКоманды.ОсновнаяКомандаПоказатель) = Тип("СправочникСсылка.КомандыВиджетов") Тогда
			ОсновнаяКоманда = СтрокаКоманды.ОсновнаяКомандаПоказатель;
		ИначеЕсли ТипЗнч(СтрокаКоманды.ОсновнаяКомандаПоказатель) = Тип("СправочникСсылка.ПоказателиВиджетов") Тогда
			Показатель = СтрокаКоманды.ОсновнаяКомандаПоказатель;
		КонецЕсли;
		
		КомандаБлока = КомандаБлока(
			ОсновнаяКоманда,
			СтрокаКоманды.ВспомогательнаяКоманда,
			Показатель,
			СтрокаКоманды.ДополнительныйПоказатель);
		
		ГлавныеНастройки = НастройкиБлокаНавигации.Команды[КомандаБлока.ОсновнаяКоманда];
		Если ГлавныеНастройки = Неопределено Тогда
			ГлавныеНастройки = НастройкиБлокаНавигации.Команды[КомандаБлока.Показатель];	
		КонецЕсли;
		
		ВспомогательныеНастройки = НастройкиБлокаНавигации.Команды[
			КомандаБлока.ВспомогательнаяКоманда];
		
		Если ГлавныеНастройки <> Неопределено И ГлавныеНастройки.Скрыть Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВспомогательныеНастройки <> Неопределено И ВспомогательныеНастройки.Скрыть = Истина Тогда
			КомандаБлока.ВспомогательнаяКоманда = Неопределено;
		КонецЕсли;
		
		Если ГлавныеНастройки = Неопределено
			И СтрокаКоманды.СкрытьВЕще
			Или ГлавныеНастройки <> Неопределено
			И ГлавныеНастройки.СкрытьВЕще Тогда
			
			ДанныеБлокаНавигации.КомандыЕщеБлока.Добавить(КомандаБлока);
			
		Иначе
			
			Если ВспомогательныеНастройки <> Неопределено
				И ВспомогательныеНастройки.СкрытьВЕще = Истина
				И КомандаБлока.ВспомогательнаяКоманда <> Неопределено Тогда
				КомандаЕщеБлока = КомандаБлока(КомандаБлока.ВспомогательнаяКоманда);
				ДанныеБлокаНавигации.КомандыЕщеБлока.Добавить(КомандаЕщеБлока);
				КомандаБлока.ВспомогательнаяКоманда = Неопределено;
			КонецЕсли;
				
			ДанныеБлокаНавигации.КомандыБлока.Добавить(КомандаБлока);
		
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДанныеБлокаНавигации.ВключатьРеестры Тогда
		
		Для Каждого КомандыРеестра Из РаботаСРеестрами.КомандыДоступныхРеестров() Цикл
		
			Если Не ЗначениеЗаполнено(КомандыРеестра.Открыть) Тогда
				Продолжить;
			КонецЕсли;
			
			ДанныеБлокаНавигации.КомандыБлока.Добавить(
				КомандаБлока(
					КомандыРеестра.Открыть,
					КомандыРеестра.Создать));
		
		КонецЦикла;
		
	КонецЕсли;
		
	Если СУчетомНастроек Тогда
		НастройкиБлокаНавигации =
			?(Выборка.НастройкиБлокаНавигации <> Неопределено,
				Выборка.НастройкиБлокаНавигации.Получить(),
				Неопределено);
		ПрименитьНастройкиБлокаНавигации(ДанныеБлокаНавигации, НастройкиБлокаНавигации);
	КонецЕсли;
	
	Возврат ДанныеБлокаНавигации
	
КонецФункции

// Проверяет доступность команды.
Функция БлокНавигацииДоступен(ДанныеБлокаНавигации)
	
	БлокНавигацииДоступен = РаботаСРабочимСтолом.ПроверитьУсловие(ДанныеБлокаНавигации.Условие);
	
	Возврат БлокНавигацииДоступен;
	
КонецФункции

#КонецОбласти

#КонецЕсли