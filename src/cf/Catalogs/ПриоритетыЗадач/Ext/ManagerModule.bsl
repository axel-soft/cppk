#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет поставляемые данные.
// 
Процедура ЗаполнитьПоставляемыеДанные() Экспорт
	
	ПриоритетОбъект = Низкий.ПолучитьОбъект();
	ПриоритетОбъект.Наименование = НСтр("ru = 'Низкий'");
	ПриоритетОбъект.ВариантВажности = Перечисления.ВариантыВажностиОбъектов.Низкая;
	ОбновлениеИнформационнойБазыХолдинг.ЗаписатьДанные(ПриоритетОбъект);
	
	ПриоритетОбъект = Обычный.ПолучитьОбъект();
	ПриоритетОбъект.Наименование = НСтр("ru = 'Обычный'");
	ПриоритетОбъект.ВариантВажности = Перечисления.ВариантыВажностиОбъектов.Обычная;
	ОбновлениеИнформационнойБазыХолдинг.ЗаписатьДанные(ПриоритетОбъект);
	
	ПриоритетОбъект = Высокий.ПолучитьОбъект();
	ПриоритетОбъект.Наименование = НСтр("ru = 'Высокий'");
	ПриоритетОбъект.ВариантВажности = Перечисления.ВариантыВажностиОбъектов.Высокая;
	ОбновлениеИнформационнойБазыХолдинг.ЗаписатьДанные(ПриоритетОбъект);
	
	
КонецПроцедуры

// Возвращает индекс картинки приоритета в коллекции КоллекцияВариантыВажности.
//
// Параметры:
//  Приоритет - СправочникСсылка.ПриоритетыЗадач - Приоритет.
// 
// Возвращаемое значение:
//  Число - Индекс картинки приоритета.
//
Функция ИндексКартинкиПриоритета(Приоритет) Экспорт
	
	Если Приоритет = Высокий Тогда
		
		Возврат 2;
		
	ИначеЕсли Приоритет = Обычный Тогда
		
		Возврат 1;
		
	ИначеЕсли Приоритет = Низкий Тогда
		
		Возврат 0;
		
	Иначе
		
		Возврат -1;
		
	КонецЕсли;
	
КонецФункции

// Возвращает картинки приоритета.
//
// Параметры:
//  Приоритет - СправочникСсылка.ПриоритетыЗадач - Приоритет.
// 
// Возвращаемое значение:
//  Картинка - Картинка приоритета.
//
Функция КартинкаПриоритета(Приоритет) Экспорт
	
	Если Приоритет = Высокий Тогда
		
		Возврат БиблиотекаКартинок.ВажностьВысокая;
		
	ИначеЕсли Приоритет = Низкий Тогда
		
		Возврат БиблиотекаКартинок.ВажностьНизкая;
		
	Иначе
		
		Возврат Новый Картинка;
		
	КонецЕсли;
	
КонецФункции

// Возвращает картинку выбора приоритета.
//
// Параметры:
//  Приоритет - СправочникСсылка.ПриоритетыЗадач - Приоритет.
// 
// Возвращаемое значение:
//  Картинка - Картинка выбора приоритета.
//
Функция КартинкаВыбора(Приоритет) Экспорт
	
	Если Приоритет = Высокий Тогда
		
		Возврат БиблиотекаКартинок.ВажностьВысокая;
		
	ИначеЕсли Приоритет = Обычный Тогда
		
		Возврат БиблиотекаКартинок.ВажностьНеЗадана;
		
	ИначеЕсли Приоритет = Низкий Тогда
		
		Возврат БиблиотекаКартинок.ВажностьНизкая;
		
	Иначе
		
		Возврат Новый Картинка;
		
	КонецЕсли;
	
КонецФункции

// Возвращает представление команды установки приоритета.
//
// Параметры:
//  Приоритет - СправочникСсылка.ПриоритетыЗадач - Приоритет.
// 
// Возвращаемое значение:
//  Строка - Представление команды установки приоритета.
//
Функция ПредставлениеКоманды(Приоритет) Экспорт
	
	Если Приоритет = Высокий Тогда
		
		Возврат НСтр("ru = 'Высокий приоритет'");
		
	ИначеЕсли Приоритет = Обычный Тогда
		
		Возврат НСтр("ru = 'Обычный приоритет'");
		
	ИначеЕсли Приоритет = Низкий Тогда
		
		Возврат НСтр("ru = 'Низкий приоритет'");
		
	Иначе
		
		Возврат Строка(Приоритет);
		
	КонецЕсли;
	
КонецФункции

// Возвращает приоритет по умолчанию
// 
// Возвращаемое значение:
//  СправочникСсылка.ПриоритетыЗадач - Приоритет по умолчанию.
//
Функция ПриоритетПоУмолчанию() Экспорт
	
	Возврат Обычный;
	
КонецФункции

// Находит приоритет по варианту важности.
// 
// Возвращаемое значение:
//  СправочникСсылка.ПриоритетыЗадач - Приоритет по варианту важности.
//
Функция НайтиПоВариантуВажности(ВариантВажности) Экспорт
	
	Если Не ЗначениеЗаполнено(ВариантВажности) Тогда
		Возврат ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПриоритетыЗадач.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПриоритетыЗадач КАК ПриоритетыЗадач
		|ГДЕ
		|	ПриоритетыЗадач.ВариантВажности = &ВариантВажности
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПриоритетыЗадач.Наименование");
	
	Запрос.УстановитьПараметр("ВариантВажности", ВариантВажности);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, ПустаяСсылка());
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
    МультиязычностьКлиентСервер.ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
    МультиязычностьКлиентСервер.ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	МультиязычностьСервер.ОбработкаПолученияДанныхВыбора(
		ДанныеВыбора, Параметры, СтандартнаяОбработка, 
		Метаданные.Справочники.ПриоритетыЗадач);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли