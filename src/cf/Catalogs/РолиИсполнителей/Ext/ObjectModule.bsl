#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеКэширующихДанных

// Обрабатывает изменение влияющих данных, формирует очередь обновления кэширующих данных.
//
Процедура ОбработатьИзменениеВлияющихДанных() Экспорт
	
	ВлияющийОбъектМетаданных = "Справочник.РолиИсполнителей";
	КлючВлияющихДанных = Ссылка;
	
	ЗависимыйОбъектМетаданных = "Справочник.ГруппировкиЗадач";
	ВлияющиеРеквизиты = "Наименование";
	ОбновлениеКэширующихДанных.ОбработатьИзменениеВлияющихДанных(
		ЭтотОбъект,
		ЗависимыйОбъектМетаданных,
		ВлияющийОбъектМетаданных,
		КлючВлияющихДанных,
		ВлияющиеРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ИспользуетсяСОбъектамиАдресации И НЕ ИспользуетсяБезОбъектовАдресации Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указаны допустимые способы назначения исполнителей на роль: совместно с объектами адресации, без них или обоими способами.'"),
		 	ЭтотОбъект, "ИспользуетсяБезОбъектовАдресации",,Отказ);
		Возврат;
	КонецЕсли;
	
	Если НЕ ИспользуетсяСОбъектамиАдресации Тогда
		Возврат;
	КонецЕсли;
	
	ЗаданыТипыОсновногоОбъектаАдресации = ТипыОсновногоОбъектаАдресации <> Неопределено И НЕ ТипыОсновногоОбъектаАдресации.Пустая();
	Если НЕ ЗаданыТипыОсновногоОбъектаАдресации Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указаны типы основного объекта адресации.'"),
		 	ЭтотОбъект, "ТипыОсновногоОбъектаАдресации",,Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
	Если ТипыОсновногоОбъектаАдресации <> Неопределено И ТипыОсновногоОбъектаАдресации.Пустая() Тогда
		ТипыОсновногоОбъектаАдресации = Неопределено;
	КонецЕсли;
	
	Если ТипыДополнительногоОбъектаАдресации <> Неопределено И ТипыДополнительногоОбъектаАдресации.Пустая() Тогда
		ТипыДополнительногоОбъектаАдресации = Неопределено;
	КонецЕсли;
	
	ОбщегоНазначенияДокументооборот.УстановитьДополнительноеСвойствоПредыдущиеЗначенияРеквизитов(ЭтотОбъект);
	
	// Обновление подчиненных полных ролей.
	ДополнительныеСвойства.Вставить(
		"ТребуетсяОбновитьПодчиненныеПолныеРоли",
		Справочники.РолиИсполнителей.ТребуетсяОбновитьПодчиненныеРоли(ЭтотОбъект));	
		
	// Обновление адресной книги.
	ДополнительныеСвойства.Вставить(
		"ПараметрыОбновленияАдреснойКниги",
		Справочники.РолиИсполнителей.ЗначенияПараметровОбновленияАдреснойКнигиПоОбъекту(ЭтотОбъект));
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Обновление подчиненных полных ролей.
	ТребуетсяОбновитьПодчиненныеПолныеРоли = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
		ДополнительныеСвойства, "ТребуетсяОбновитьПодчиненныеПолныеРоли", Ложь);
	
	Если ТребуетсяОбновитьПодчиненныеПолныеРоли Тогда
		Справочники.РолиИсполнителей.ОбновитьПодчиненныеПолныеРоли(ЭтотОбъект);
	КонецЕсли; 
		
	// Обновление адресной книги.
	Справочники.РолиИсполнителей.ОбновитьАдреснуюКнигу(
		ЭтотОбъект, ДополнительныеСвойства.ПараметрыОбновленияАдреснойКниги);
	
	ОбработатьИзменениеВлияющихДанных();
	
КонецПроцедуры

Процедура ПриЧтенииПредставленийНаСервере() Экспорт
	МультиязычностьСервер.ПриЧтенииПредставленийНаСервере(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли