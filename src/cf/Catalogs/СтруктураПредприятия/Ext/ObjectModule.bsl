#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ПриЧтенииПредставленийНаСервере() Экспорт
	
	МультиязычностьСервер.ПриЧтенииПредставленийНаСервере(ЭтотОбъект);
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеКэширующихДанных

// Обрабатывает изменение влияющих данных, формирует очередь обновления кэширующих данных.
//
Процедура ОбработатьИзменениеВлияющихДанных() Экспорт
	
	ВлияющийОбъектМетаданных = "Справочник.СтруктураПредприятия";
	КлючВлияющихДанных = Ссылка;
	
	ЗависимыйОбъектМетаданных = "Справочник.ГруппировкиЗадач";
	ВлияющиеРеквизиты = "Наименование";
	ОбновлениеКэширующихДанных.ОбработатьИзменениеВлияющихДанных(
		ЭтотОбъект,
		ЗависимыйОбъектМетаданных,
		ВлияющийОбъектМетаданных,
		КлючВлияющихДанных,
		ВлияющиеРеквизиты);
	
	ЗависимыйОбъектМетаданных = "Справочник.РеестрыЗадач";
	ВлияющиеРеквизиты = "Наименование";
	ОбновлениеКэширующихДанных.ОбработатьИзменениеВлияющихДанных(
		ЭтотОбъект,
		ЗависимыйОбъектМетаданных,
		ВлияющийОбъектМетаданных,
		КлючВлияющихДанных,
		ВлияющиеРеквизиты);
	
	ЗависимыйОбъектМетаданных = "Справочник.СтруктураПредприятия";
	ВлияющиеРеквизиты = "Руководитель, Родитель, ПометкаУдаления";
	ОбновлениеКэширующихДанных.ОбработатьИзменениеВлияющихДанных(
		ЭтотОбъект,
		ЗависимыйОбъектМетаданных,
		ВлияющийОбъектМетаданных,
		КлючВлияющихДанных,
		ВлияющиеРеквизиты);
		
	Если Не ЭтотОбъект.ДополнительныеСвойства.Свойство("КонтролируемыйОбменДанными") Тогда
		
		ЗависимыйОбъектМетаданных = "Справочник.Сотрудники";
		ВлияющиеРеквизиты = "Наименование";
		ОбновлениеКэширующихДанных.ОбработатьИзменениеВлияющихДанных(
			ЭтотОбъект,
			ЗависимыйОбъектМетаданных,
			ВлияющийОбъектМетаданных,
			КлючВлияющихДанных,
			ВлияющиеРеквизиты);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	Руководитель = Справочники.Сотрудники.ПустаяСсылка();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("Родитель")
		И ЗначениеЗаполнено(ДанныеЗаполнения.Родитель) Тогда
		
		ЗаполнитьРанг(ДанныеЗаполнения.Родитель);
		
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияДокументооборот.УстановитьДополнительноеСвойствоПредыдущиеЗначенияРеквизитов(ЭтотОбъект);
	
	Если ЭтоНовый() Тогда
		Если Не ЗначениеЗаполнено(Ранг) И Не УказанОсобыйРанг Тогда
			ЗаполнитьРанг();
		КонецЕсли;
	Иначе
		Если ПолучитьФункциональнуюОпцию("ИспользоватьРанги") 
					И ДополнительныеСвойства.ПредыдущиеЗначенияРеквизитов.Родитель <> Родитель
				Или (ДополнительныеСвойства.ПредыдущиеЗначенияРеквизитов.УказанОсобыйРанг И Не УказанОсобыйРанг) Тогда
			
			ЗаполнитьРанг();
		КонецЕсли;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить(
		"ПараметрыОбновленияДанныхКэширующихОбъектов",
		Справочники.СтруктураПредприятия.ЗначенияПараметровОбновленияДанныхКэширующихОбъектов(ЭтотОбъект));

	Если ДополнительныеСвойства.ПредыдущиеЗначенияРеквизитов.Ранг <> Ранг
			И Не ДополнительныеСвойства.Свойство("НеОбновлятьРангиНижестоящих") Тогда
		
		ДополнительныеСвойства.Вставить("ОбновитьРангиНижестоящихПодразделений", Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Общий обработчик для всех разрезов доступа.
	ДокументооборотПраваДоступа.ПриЗаписиРазрезаДоступа(ЭтотОбъект, Отказ);
	
	ОбновитьРангиНижестоящихПодразделений = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
		ДополнительныеСвойства, "ОбновитьРангиНижестоящихПодразделений", Ложь);
		
	Если ОбновитьРангиНижестоящихПодразделений Тогда
		Справочники.СтруктураПредприятия.ОбновитьРангиНижестоящихПодразделений(Ссылка);
	КонецЕсли;
	
	Справочники.СтруктураПредприятия.ОбновитьДанныеКэширующихОбъектов(
		ЭтотОбъект, ДополнительныеСвойства.ПараметрыОбновленияДанныхКэширующихОбъектов);
	
	ОбработатьИзменениеВлияющихДанных();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРанг(РодительПриЗаполнении = Неопределено)
	
	Если УказанОсобыйРанг Тогда
		Возврат;
	КонецЕсли;
	
	РодительДляРасчетаРанга = Родитель;
	Если РодительПриЗаполнении <> Неопределено Тогда
		РодительДляРасчетаРанга = РодительПриЗаполнении;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(РодительДляРасчетаРанга) Тогда
		Ранг = 1;
	Иначе
		Ранг = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РодительДляРасчетаРанга, "Ранг") + 1;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
