
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	Если Параметры.Свойство("ОбластьПрименения") И ЗначениеЗаполнено(Параметры.ОбластьПрименения) Тогда 
		ОбластьПрименения = Параметры.ОбластьПрименения;
	Иначе 
		ОбластьПрименения = Перечисления.ОбластиПримененияШаблоновТекстов.Почта;
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") И ЗначениеЗаполнено(Параметры.Заголовок) Тогда 
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаголовокФормыСоздания") И ЗначениеЗаполнено(Параметры.ЗаголовокФормыСоздания) Тогда 
		ЗаголовокФормыСоздания = Параметры.ЗаголовокФормыСоздания;
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ОбластьПрименения", ОбластьПрименения);
	
	Список.Параметры.УстановитьЗначениеПараметра("Исполнители",
		Справочники.ШаблоныТекстов.ПолучитьПользователейДелегирующихПрава(ТекущийПользователь));
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ШаблоныТекстов"
		И ЗначениеЗаполнено(ТекущийШаблон) И Источник = ТекущийШаблон Тогда
		
		ОбновитьОбзорОбъекта();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ШаблонПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	РаботаС_HTMLКлиент.ОткрытьСсылку(Элемент, ДанныеСобытия, СтандартнаяОбработка, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ПараметрыФормы = Новый Структура;
	
	Если Копирование Тогда 
		ПараметрыФормы.Вставить("ЗначениеКопирования", Элементы.Список.ТекущаяСтрока);
	Иначе 
		ПараметрыФормы.Вставить("ОбластьПрименения", ОбластьПрименения);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ЗаголовокФормыСоздания", ЗаголовокФормыСоздания);
	
	ОткрытьФорму("Справочник.ШаблоныТекстов.ФормаОбъекта", ПараметрыФормы, 
		Элементы.Список, Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработчикСписокПриАктивизацииСтроки", 0.5, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСписокПриАктивизацииСтроки()
	
	Шаблон = Элементы.Список.ТекущаяСтрока;
	
	Если ТекущийШаблон = Шаблон Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийШаблон = Шаблон;
	
	ОбновитьОбзорОбъекта();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбработатьАктивизациюСтроки(
	Шаблон,
	УникальныйИдентификаторФормы)
	
	Если Шаблон = Неопределено Тогда
		Возврат ОбзорОбъектовКлиентСервер.ПустойHTML();
	КонецЕсли;	
	
	ТипТекста = Шаблон.ТипТекста;
	Если Не ЗначениеЗаполнено(ТипТекста) Тогда
		ТипТекста = ПредопределенноеЗначение("Перечисление.ТипыТекстовПочтовыхСообщений.ПростойТекст");
	КонецЕсли;
		
	Если ТипТекста = ПредопределенноеЗначение("Перечисление.ТипыТекстовПочтовыхСообщений.ПростойТекст") Тогда
		ТекстПросто = Шаблон.Шаблон;
		ТекстHTML = РаботаС_HTML.ПолучитьHTMLИзТекста(ТекстПросто);
		Возврат ТекстHTML;
	ИначеЕсли ТипТекста = ПредопределенноеЗначение("Перечисление.ТипыТекстовПочтовыхСообщений.РазмеченныйТекст") Тогда
		ОписаниеФорматированное = Шаблон.ОписаниеФорматированное.Получить();
		ТекстHTML = ОбзорОбъектов.ТекстHTMLФорматированногоДокумента(ОписаниеФорматированное);
	Иначе
		ТекстHTML = Шаблон.Шаблон;
		ВстроеннаяПочтаСервер.ВставитьКартинкиВТекстHTML(ТекстHTML, Шаблон, УникальныйИдентификаторФормы);
	КонецЕсли;	
	
	Возврат ТекстHTML;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьОбзорОбъекта()
	
	Если Не ВводДоступен() Тогда
		ПодключитьОбработчикОжидания("ОбновитьОбзорОбъекта", 1, Истина);
		Возврат;
	КонецЕсли;
	
	РезультатОбработки = ОбработатьАктивизациюСтроки(
		ТекущийШаблон,
		УникальныйИдентификатор);
		
	Предпросмотр = РезультатОбработки;	
	
КонецПроцедуры

#КонецОбласти
