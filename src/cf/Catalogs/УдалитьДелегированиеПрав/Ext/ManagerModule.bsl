#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает список делегирующих свои полномочия сотрудников переданному в качестве параметра делегату.
//
// Параметры:
//  Делегат - СправочникСсылка.Пользователи, СправочникСсылка.Сотрудник
//
// Возвращаемое значение:
//  Массив
//   * СправочникСсылка.Сотрудники
//
Функция СписокДелегирующих(Делегат) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДелегированиеПрав.ОтКого
		|ИЗ
		|	Справочник.УдалитьДелегированиеПрав КАК ДелегированиеПрав
		|ГДЕ
		|	ДелегированиеПрав.Кому В (&СотрудникиДелегаты)
		|	И ДелегированиеПрав.Действует";
	
	СотрудникиДелегаты = Новый Массив;
	Если ТипЗнч(Делегат) = Тип("СправочникСсылка.Сотрудники") Тогда
		СотрудникиДелегаты.Добавить(Делегат);
	Иначе
		СотрудникиДелегаты = Сотрудники.СотрудникиПользователя(Делегат);
	КонецЕсли;
	Запрос.УстановитьПараметр("СотрудникиДелегаты", СотрудникиДелегаты);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
	
КонецФункции

// Возвращает список делегатов для уведомления по подписчику на событие.
//
// Параметры:
//  Подписчик - СправочникСсылка.Пользователь - Исходный подписчик на уведомление.
//  Объект - Произвольный - Объект, делегирование по которому учитывается.
// 
// Возвращаемое значение:
//  Массив - Делегаты подписчика для уведомления.
//
Функция ПолучитьДелегатовДляУведомления(Подписчик, Объект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДелегированиеПрав.Кому
		|ИЗ
		|	Справочник.УдалитьДелегированиеПрав КАК ДелегированиеПрав
		|ГДЕ
		|	ДелегированиеПрав.ОтКого = &Подписчик
		|	И ДелегированиеПрав.Действует
		|	И ДелегированиеПрав.ВариантДелегирования = ЗНАЧЕНИЕ(Перечисление.ВариантыДелегированияПрав.ВсеПрава)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДелегированиеПрав.Кому
		|ИЗ
		|	Справочник.УдалитьДелегированиеПрав.ОбластиДелегирования КАК ДелегированиеПравОбластиДелегирования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УдалитьОбластиДелегированияПрав.Состав КАК ОбластиДелегированияПравСостав
		|		ПО ДелегированиеПравОбластиДелегирования.ОбластьДелегирования = ОбластиДелегированияПравСостав.Ссылка
		|			И (ОбластиДелегированияПравСостав.ОбъектМетаданных = &ИдентификаторОбъектаМетаданных)
		|			И (НЕ ОбластиДелегированияПравСостав.Ссылка.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УдалитьДелегированиеПрав КАК ДелегированиеПрав
		|		ПО ДелегированиеПравОбластиДелегирования.Ссылка = ДелегированиеПрав.Ссылка
		|ГДЕ
		|	ДелегированиеПрав.ОтКого = &Подписчик
		|	И ДелегированиеПрав.Действует
		|	И ДелегированиеПрав.ВариантДелегирования = ЗНАЧЕНИЕ(Перечисление.ВариантыДелегированияПрав.Выборочно)";
	
	Запрос.УстановитьПараметр("Подписчик", Подписчик);
	
	Если Объект <> Неопределено Тогда
		ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Объект.Метаданные());
	Иначе
		ИдентификаторОбъектаМетаданных = Неопределено;
	КонецЕсли;
	Запрос.УстановитьПараметр("ИдентификаторОбъектаМетаданных", ИдентификаторОбъектаМетаданных);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Кому");
	
КонецФункции

#КонецОбласти

#КонецЕсли