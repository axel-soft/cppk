#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Возвращает пустую структуру данных для заполнения.
//
// Возвращаемое значение:
//  Структура
//   * ФИО - Строка - ФИО физ. лица.
//   * Группа - СправочникСссылка.ФизическиеЛица - ссылка на группу физ. лиц.
//   * ДатаРождения - Дата
//   * Пол - ПеречислениеСсылка.ПолФизическогоЛица
//   * ГруппаДоступа - СправочникСсылка.ГруппыДоступаФизическихЛиц
//   * Комментарий - Строка
//   * Фотография - ДвоичныеДанные
//
Функция СтруктураДанныхДляЗаполнения() Экспорт
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ФИО", "");
	СтруктураДанных.Вставить("Группа", Справочники.ФизическиеЛица.ПустаяСсылка());
	СтруктураДанных.Вставить("ДатаРождения", Дата(1,1,1));
	СтруктураДанных.Вставить("Пол", Перечисления.ПолФизическогоЛица.ПустаяСсылка());
	СтруктураДанных.Вставить("ГруппаДоступа", Справочники.ГруппыДоступаФизическихЛиц.ПустаяСсылка());
	СтруктураДанных.Вставить("Комментарий", "");
	СтруктураДанных.Вставить("Фотография", Неопределено);
	
	Возврат СтруктураДанных;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		
		СтараяГруппаДоступа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Ссылка,
			"ГруппаДоступа");
		Если СтараяГруппаДоступа <> ГруппаДоступа Тогда
			ДополнительныеСвойства.Вставить("СтараяГруппаДоступа", СтараяГруппаДоступа);
		КонецЕсли;				
		
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("СтараяГруппаДоступа") Тогда
		
		Если ДополнительныеСвойства.СтараяГруппаДоступа <> ГруппаДоступа Тогда
			
			ГруппыДоступа = Новый Массив();
			Если ЗначениеЗаполнено(ДополнительныеСвойства.СтараяГруппаДоступа) Тогда
				ГруппыДоступа.Добавить(ДополнительныеСвойства.СтараяГруппаДоступа);
			КонецЕсли;
			Если ЗначениеЗаполнено(ГруппаДоступа) Тогда
				ГруппыДоступа.Добавить(ГруппаДоступа);
			КонецЕсли;	
			
			ДокументооборотПраваДоступа.ОбновитьПраваПоГруппамДоступаФизлиц(ГруппыДоступа);
			
		КонецЕсли;	

	КонецЕсли;	
	
	Если ЭтоНовый() Тогда
		ДополнительныеСвойства.Вставить("ПредыдущаяПометкаУдаления", Ложь);
	Иначе
		ПредыдущиеЗначения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Наименование, ПометкаУдаления");
		ДополнительныеСвойства.Вставить("ПредыдущаяПометкаУдаления", ПредыдущиеЗначения.ПометкаУдаления);
		ДополнительныеСвойства.Вставить("ПредыдущееНаименование", "");
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ФИОФизическихЛиц.ФИО КАК ФИО
			|ИЗ
			|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(, ФизическоеЛицо = &Ссылка) КАК ФИОФизическихЛиц");
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ДополнительныеСвойства.ПредыдущееНаименование = Выборка.ФИО;
		КонецЕсли;
	КонецЕсли;

	// Обновление адресной книги.
	ДополнительныеСвойства.Вставить(
		"ПараметрыОбновленияАдреснойКниги",
		Справочники.ФизическиеЛица.ЗначенияПараметровОбновленияАдреснойКнигиПоОбъекту(ЭтотОбъект));
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПредыдущаяПометкаУдаления = Ложь;
	Если ДополнительныеСвойства.Свойство("ПредыдущаяПометкаУдаления") Тогда
		ПредыдущаяПометкаУдаления = ДополнительныеСвойства.ПредыдущаяПометкаУдаления;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ПредыдущееНаименование")
		И (Наименование <> ДополнительныеСвойства.ПредыдущееНаименование Или ПометкаУдаления <> ПредыдущаяПометкаУдаления)
		И Не Пользователи.ЭтоПолноправныйПользователь()
		И Сотрудники.ВсеСотрудникиФизЛица(Ссылка).Количество() > 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Изменение физ. лица связанного с сотрудником запрещено. 
				 |Обратитесь к администратору.'"),
			ЭтотОбъект,
			"Наименование",, 
			Отказ);
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления <> ПредыдущаяПометкаУдаления Тогда
		ПротоколированиеРаботыСотрудников.ЗаписатьПометкуУдаления(Ссылка, ПометкаУдаления);
	КонецЕсли;
	
	// Обновление адресной книги.
	Справочники.ФизическиеЛица.ОбновитьАдреснуюКнигу(
		ЭтотОбъект, ДополнительныеСвойства.ПараметрыОбновленияАдреснойКниги);
	
	СотрудникиСобытия.ПриЗаписиФизическогоЛица(ЭтотОбъект);
	Если (Не ДополнительныеСвойства.Свойство("ПредыдущееНаименование")
		Или ДополнительныеСвойства.ПредыдущееНаименование <> Наименование)
		И (Не ДополнительныеСвойства.Свойство("НеСоздаватьЗаписьОбИстории")
		Или Не ДополнительныеСвойства.НеСоздаватьЗаписьОбИстории) Тогда
		
		СделатьЗаписьОбИстории();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		// Заполняем согласно СтруктураДанныхДляЗаполнения.
		
		Если ДанныеЗаполнения.Свойство("ФИО") 
			И Наименование <> ДанныеЗаполнения.ФИО Тогда
			
			Наименование = ДанныеЗаполнения.ФИО;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("Группа")
			И Родитель <> ДанныеЗаполнения.Группа Тогда
			
			Родитель = ДанныеЗаполнения.Группа;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ДатаРождения")
			И ДатаРождения <> ДанныеЗаполнения.ДатаРождения Тогда
			
			ДатаРождения = ДанныеЗаполнения.ДатаРождения;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("Пол")
			И Пол <> ДанныеЗаполнения.Пол Тогда
			
			Пол = ДанныеЗаполнения.Пол;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ГруппаДоступа")
			И ГруппаДоступа <> ДанныеЗаполнения.ГруппаДоступа Тогда
			
			ГруппаДоступа = ДанныеЗаполнения.ГруппаДоступа;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("Комментарий")
			И Комментарий <> ДанныеЗаполнения.Комментарий Тогда
			
			Комментарий = ДанныеЗаполнения.Комментарий;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("Фотография") Тогда
			Фотография = Новый ХранилищеЗначения(ДанныеЗаполнения.Фотография);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЧтенииПредставленийНаСервере() Экспорт
	МультиязычностьСервер.ПриЧтенииПредставленийНаСервере(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Делает запись в РС ФиоФизическихЛиц
//
Процедура СделатьЗаписьОбИстории()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ДополнительныеСвойства.Свойство("ЭтоНовый") Или ДополнительныеСвойства.ЭтоНовый Тогда
		
		Если ЗначениеЗаполнено(ДатаРождения) Тогда
			Период = ДатаРождения;
		Иначе
			Период = РегистрыСведений.ФИОФизическихЛиц.ДатаОтсчетаФИО();
		КонецЕсли;
		
	Иначе
		
		Период = ТекущаяДатаСеанса();
		
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.ФИОФизическихЛиц.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = Период;
	МенеджерЗаписи.ФизическоеЛицо = Ссылка;
	МенеджерЗаписи.ФИО = Наименование;
	МенеджерЗаписи.Записать(Истина);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли