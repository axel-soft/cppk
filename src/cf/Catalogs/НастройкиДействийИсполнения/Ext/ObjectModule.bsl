#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет участников по умолчанию.
//
Процедура ЗаполнитьУчастниковПоУмолчанию() Экспорт
	
	УчастникиПоУмолчанию = НастройкиДействий.УчастникиПоУмолчанию(ВидДействия);
	
	Участники.Очистить();
	
	Для Каждого УчастникПоУмолчанию Из УчастникиПоУмолчанию Цикл
		
		СтрокаУчастника  = Участники.Добавить();
		СтрокаУчастника.ФункцияУчастника = Перечисления.ФункцииУчастниковИсполнения.Исполнитель;
		СтрокаУчастника.Участник = УчастникПоУмолчанию;
		
	КонецЦикла;
	
	ПоПунктам = НастройкиДействий.ПоПунктамПоУмолчанию(ВидДействия);
	МоментРазыменованияУчастников =
		Перечисления.МоментыРазыменованияУчастниковДействий.ПередВыполнениемДействия;
	
КонецПроцедуры

// Возвращает участников с функций "Рассматривающий".
// 
// Возвращаемое значение:
//  Массив - Рассматривающие.
//
Функция Рассматривающие() Экспорт
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ФункцияУчастника", Перечисления.ФункцииУчастниковИсполнения.Рассматривающий);
	Возврат Участники.НайтиСтроки(ПараметрыОтбора);
	
КонецФункции

// Возвращает участников с функций "Участник".
// 
// Возвращаемое значение:
//  Массив - Участники.
//
Функция Участники() Экспорт
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ФункцияУчастника", Перечисления.ФункцииУчастниковИсполнения.Исполнитель);
	Возврат Участники.НайтиСтроки(ПараметрыОтбора);
	
КонецФункции

// Возвращает участников, для которых требуется автоматически определить функцию.
// 
// Возвращаемое значение:
//  Массив - Участники.
//
Функция УчастникиСАвтоопределениемФункции() Экспорт
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ФункцияУчастника", Перечисления.ФункцииУчастниковИсполнения.АвтоопределениеФункцииУчастника);
	Возврат Участники.НайтиСтроки(ПараметрыОтбора);
	
КонецФункции

// Возвращает участников с функций "Обрабатывающий результат".
// 
// Возвращаемое значение:
//  Массив - Участники.
//
Функция УчастникОбрабатывающийРезультат() Экспорт
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ФункцияУчастника", Перечисления.ФункцииУчастниковИсполнения.ОбрабатывающийРезультат);
	Возврат Участники.НайтиСтроки(ПараметрыОтбора);
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	НастройкиДействий.ОбработкаЗаполнения(
		ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	Контролер = Справочники.Сотрудники.ПустаяСсылка();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиДействий.ПередЗаписью(Ссылка, ДополнительныеСвойства, Отказ);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиДействий.ПриЗаписи(Ссылка, ДополнительныеСвойства, ПометкаУдаления, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли