#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет дерево обработки участниками действия.
// 
// Параметры:
// 	ЭлементыДействия - ДанныеФормыЭлементДерева - коллекцию элементов дерева
// 	ЗначенияЗаполнения - Структура:
// 	 ВидДействия - СправочникСсылка.ВидыДействий - вид действия.
//	 Настройка - СправочникСсылка.НастройкиДействийСогласования - ссылка на настройку действия. 
//	 НастройкаВключена - Булево - Истина, если включена.
//
Процедура ДополнитьДеревоПредставлениемНастройки(ЭлементыДействия, ЗначенияЗаполнения) Экспорт
	
	Настройка = ЗначенияЗаполнения.Настройка;
	ИспользоватьДатуИВремяВСрокахЗадач = 
		ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Настройка,
		"ВидДействия, ВидДействия.Наименование, Автор, 
		|Этапы, Участники");
		
	Этапы = Реквизиты.Этапы.Выгрузить();
	
	Если Этапы.Количество() = 0 Тогда
		ЭтапУчастников = Этапы.Добавить();
		ЭтапУчастников.НаименованиеЭтапа = НСтр("ru = 'Согласовать'");
		ЭтапУчастников.Идентификатор = ДействияСервер.ПредопределенныйИдентификаторУчастника(
			"ЭтапСогласовать");		
	КонецЕсли;
	
	Этапы.Сортировать("НомерСтроки");
	
	Участники = Реквизиты.Участники.Выгрузить();
	Участники.Сортировать("НомерСтроки");
	
	ЭлементДействия = ЭлементыДействия.Добавить();
	ЗаполнитьЗначенияСвойств(ЭлементДействия, ЗначенияЗаполнения);
	ЭлементДействия.ЭтоДействие = Истина;
	ЭлементДействия.Представление = Реквизиты.ВидДействияНаименование;
	
	ЕдинственныйЭтап = Этапы.Количество() = 1;
		
	ПодчиненныеЭлементы = ЭлементДействия.ПолучитьЭлементы();
	Для Каждого Этап Из Этапы Цикл
		
		Если ЕдинственныйЭтап Тогда
			ПодчиненныеЭлементыДействия = ПодчиненныеЭлементы;
			
			Если Этап.СрокОбщий = Истина Тогда
				ЭлементДействия.СрокПредставление = СрокиИсполненияПроцессовКлиентСервер.
					ПредставлениеСрокаИсполнения(
						Этап.Срок,
						Этап.СрокДни,
						Этап.СрокЧасы,
						Этап.СрокМинуты,
						ИспользоватьДатуИВремяВСрокахЗадач,
						Этап.ВариантУстановкиСрока);
			КонецЕсли;
		Иначе
			
			ПодчиненныйЭлемент = ПодчиненныеЭлементы.Добавить();
			ЗаполнитьЗначенияСвойств(ПодчиненныйЭлемент, Этап);
			ЗаполнитьЗначенияСвойств(ПодчиненныйЭлемент, ЗначенияЗаполнения);
			ПодчиненныйЭлемент.ЭтоЭтап = Истина;
			ПодчиненныйЭлемент.Представление = Этап.НаименованиеЭтапа;
			ПодчиненныеЭлементыДействия = ПодчиненныйЭлемент.ПолучитьЭлементы();
			
			Если Этап.СрокОбщий Тогда
				ПодчиненныйЭлемент.СрокПредставление = СрокиИсполненияПроцессовКлиентСервер.
					ПредставлениеСрокаИсполнения(
						Этап.Срок,
						Этап.СрокДни,
						Этап.СрокЧасы,
						Этап.СрокМинуты,
						ИспользоватьДатуИВремяВСрокахЗадач,
						Этап.ВариантУстановкиСрока);
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого Участник Из Участники Цикл
			
			Если (ЗначениеЗаполнено(Участник.ИдентификаторЭтапа) 
					И Участник.ИдентификаторЭтапа <> Этап.Идентификатор)
				Или (Не ЗначениеЗаполнено(Участник.ИдентификаторЭтапа) 
					И Участник.ФункцияУчастника <> ПредопределенноеЗначение("Перечисление.ФункцииУчастниковСогласования.Согласующий")) Тогда
				Продолжить;
			КонецЕсли;
			
			ПодчиненныйЭлементДействия = ПодчиненныеЭлементыДействия.Добавить();
			ЗаполнитьЗначенияСвойств(ПодчиненныйЭлементДействия, Участник);
			ЗаполнитьЗначенияСвойств(ПодчиненныйЭлементДействия, ЗначенияЗаполнения);
			ПодчиненныйЭлементДействия.ЭтоУчастник = Истина;
			ПодчиненныйЭлементДействия.Представление = Участник.Участник;
			ПодчиненныйЭлементДействия.УсловиеПредставление = Участник.Условие;
			
			ПодчиненныйЭлементДействия.СрокПредставление = СрокиИсполненияПроцессовКлиентСервер.
				ПредставлениеСрокаИсполнения(
					Участник.Срок,
					Участник.СрокДни,
					Участник.СрокЧасы,
					Участник.СрокМинуты,
					ИспользоватьДатуИВремяВСрокахЗадач,
					Участник.ВариантУстановкиСрока);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Ссылка");
	Поля.Добавить("ВидДействия");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Представление = НастройкиДействий.ПредставлениеНастройки(Данные.Ссылка, Данные.ВидДействия);
	
КонецПроцедуры

// Возвращает всех участников настройки действия
// 
// Параметры:
// 	НастройкаДействия - СправочникСсылка.НастройкиДействийСогласования - ссылка на действие
// 	
// Возвращаемое значение:
// 	ТаблицаЗначений - таблица участников действия.
// 
Функция ВсеУчастники(НастройкаДействия) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Участники.Участник КАК Участник,
		|	ЗНАЧЕНИЕ(Перечисление.ФункцииУчастниковСогласования.Согласующий) КАК Функция
		|ИЗ
		|	Справочник.НастройкиДействийСогласования.Участники КАК Участники
		|ГДЕ
		|	Участники.Ссылка = &НастройкаДействия
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НастройкиДействийСогласования.Автор,
		|	ЗНАЧЕНИЕ(Перечисление.ФункцииУчастниковСогласования.ОбрабатывающийРезультат)
		|ИЗ
		|	Справочник.НастройкиДействийСогласования КАК НастройкиДействийСогласования
		|ГДЕ
		|	НастройкиДействийСогласования.Ссылка = &НастройкаДействия");
	
	Запрос.УстановитьПараметр("НастройкаДействия", НастройкаДействия);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает идентификатор объекта метаданных.
//
// Возвращаемое значение:
//  СправочникСсылка.ИдентификаторыОбъектовМетаданных - Возвращает идентификатор объекта метаданных.
//
Функция ИдентификаторОбъектаМетаданных() Экспорт
	
	ИдентификаторОбъектаМетаданных =
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
			Метаданные.Справочники.НастройкиДействийСогласования);
	
	Возврат ИдентификаторОбъектаМетаданных;
	
КонецФункции

// Возвращает разрешения по действию в виде соответствия
// 
// Параметры:
// 	НастройкаДействия - СправочникСсылка.НастройкиДействийСогласования - ссылка на действие
// 	
// Возвращаемое значение:
// 	Соответствие - разрешения по действию.
// 
Функция РазрешенияИзмененияУчастников(НастройкаДействия) Экспорт
	
	РеквизитыНастройки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НастройкаДействия,
		 "ВозможностьИзменятьУчастников, Этапы, Участники");
	УчастникиНастройки = РеквизитыНастройки.Участники.Выгрузить();
	
	// Для режима Авто смотрим на Участников. Если участники заданы, то запрещено менять
	Если РеквизитыНастройки.ВозможностьИзменятьУчастников = Перечисления.ВариантыДоступностиИзмененияДействий.Авто Тогда
		Если УчастникиНастройки.Количество() > 0 Тогда
			ВозможностьИзменятьУчастников = Перечисления.ВариантыДоступностиИзмененияДействий.Запрещено;
		Иначе
			ВозможностьИзменятьУчастников = Перечисления.ВариантыДоступностиИзмененияДействий.Разрешено;
		КонецЕсли;
	Иначе
		ВозможностьИзменятьУчастников = РеквизитыНастройки.ВозможностьИзменятьУчастников;
	КонецЕсли;
	
	Разрешения = Новый Соответствие();
	Разрешения.Вставить(
		ДействияСервер.ПредопределенныйИдентификаторУчастника("Пустой"),
		ВозможностьИзменятьУчастников);
		
	Выборка = РеквизитыНастройки.Этапы.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Для режима Авто смотрим на Участников. Если участники в этапе заданы, то запрещено менять
		Если Выборка.ВозможностьИзменятьУчастников = Перечисления.ВариантыДоступностиИзмененияДействий.Авто Тогда
			УчастникиЭтапа = УчастникиНастройки.НайтиСтроки(
				Новый Структура("ИдентификаторЭтапа", Выборка.Идентификатор));
			Если УчастникиЭтапа.Количество() > 0 Тогда
				ВозможностьИзменятьУчастников = Перечисления.ВариантыДоступностиИзмененияДействий.Запрещено;
			Иначе
				ВозможностьИзменятьУчастников = Перечисления.ВариантыДоступностиИзмененияДействий.Разрешено;
			КонецЕсли;
		Иначе
			ВозможностьИзменятьУчастников = Выборка.ВозможностьИзменятьУчастников;
		КонецЕсли;
		
		Разрешения.Вставить(
			Выборка.Идентификатор,
			ВозможностьИзменятьУчастников);
	КонецЦикла;
	
	Возврат Разрешения;
	
Конецфункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#КонецЕсли
