#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	ЗаполнитьСписок(Параметры.ВыбранныеТематики.ВыгрузитьЗначения());	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ВозвращаемыйСписок = Новый СписокЗначений();
	Для Каждого Стр Из Список Цикл
		ВозвращаемыйСписок.Добавить(Стр.Тематика,, Стр.Пометка);
	КонецЦикла;
	Закрыть(ВозвращаемыйСписок);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	Для Каждого Стр Из Список Цикл
		Стр.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьВсе(Команда)
	
	Для Каждого Стр Из Список Цикл
		Стр.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписок(Знач ВыбранныеТематики = Неопределено)
	
	Если ВыбранныеТематики = Неопределено Тогда
		ВыбранныеТематики = Список.Выгрузить(Новый Структура("Пометка", Истина));
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТематикиДокументов.Ссылка КАК Тематика,
		|	ТематикиДокументов.ПометкаУдаления КАК ПометкаУдаления,
		|	ТематикиДокументов.НеДействуетДата КАК НеДействуетДата,
		|	ТематикиДокументов.Ссылка В (&ВыбранныеТематики) КАК Пометка
		|ИЗ
		|	Справочник.ТематикиДокументов КАК ТематикиДокументов
		|ГДЕ
		|	ВидДокумента = &ВидДокумента
		|	//И НЕ ПометкаУдаления
		|УПОРЯДОЧИТЬ ПО
		|	ТематикиДокументов.Наименование");
	Запрос.УстановитьПараметр("ВидДокумента", Параметры.ВидДокумента);
	Запрос.УстановитьПараметр("ВыбранныеТематики", ВыбранныеТематики);
	Список.Очистить();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Список.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	ПредставлениеЭлемента = НСтр("ru = 'Тематика помечена на удаление (стандартная настройка)'");
	ЭлементУсловногоОформления = БизнесПроцессыИЗадачиСервер.ЭлементУсловногоОформленияПоПредставлению(
		УсловноеОформление, ПредставлениеЭлемента);
	
	ЭлементОбластиОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ЭлементОбластиОформления.Поле = Новый ПолеКомпоновкиДанных("Список");
	
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ПометкаУдаления");
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = Истина;
	ЭлементОтбораДанных.Использование = Истина;
	
	ЭлементЦветаОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("Шрифт");
	ЭлементЦветаОформления.Значение = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста ,,,,,, Истина);
	ЭлементЦветаОформления.Использование = Истина;
	
	ПредставлениеЭлемента = НСтр("ru = 'Тематика не действует (стандартная настройка)'");
	ЭлементУсловногоОформления = БизнесПроцессыИЗадачиСервер.ЭлементУсловногоОформленияПоПредставлению(
		УсловноеОформление, ПредставлениеЭлемента);
		
	ЭлементОбластиОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ЭлементОбластиОформления.Поле = Новый ПолеКомпоновкиДанных("Список");
		
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.НеДействуетДата");
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ЭлементОтбораДанных.ПравоеЗначение = НачалоДня(ТекущаяДатаСеанса());
	ЭлементОтбораДанных.Использование = Истина;
	
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.НеДействуетДата");
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	ЭлементОтбораДанных.Использование = Истина;
	
	ЭлементЦветаОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("ЦветТекста");
	ЭлементЦветаОформления.Значение = ЦветаСтиля.НедействительныеОбъекты;
	ЭлементЦветаОформления.Использование = Истина;
	
КонецПроцедуры

#КонецОбласти
