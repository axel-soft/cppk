
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИмяТипаВладельцаФайла = "";
	ВыполнятьЗаполнениеФайловНаСервере = Константы.ИзменениеФайловMSWordТолькоНаСервере.Получить();
	РеквизитыШаблона = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ШаблонФайла,
		"ТекущаяВерсияРасширение, ПолноеНаименование");
	ТипШаблона = РеквизитыШаблона.ТекущаяВерсияРасширение;
	ПолноеИмяШаблона = РеквизитыШаблона.ПолноеНаименование;
	РасширениеФайла = НРег(РеквизитыШаблона.ТекущаяВерсияРасширение);
	
	ДвоичныеДанныеФайла = АвтозаполнениеШаблоновФайловВызовСервера.ПолучитьДвоичныеДанныеФайла(
		Объект.ШаблонФайла);
	
	Если Параметры.Свойство("ВестиУчетТоваровИУслуг") И Параметры.ВестиУчетТоваровИУслуг Тогда 
		ВестиУчетТоваровИУслуг = Параметры.ВестиУчетТоваровИУслуг;
		УчитыватьНДС = Делопроизводство.УчитыватьНДС(Параметры.Организация);
	Иначе 
		ВестиУчетТоваровИУслуг = Ложь;
		УчитыватьНДС = Делопроизводство.УчитыватьНДС();
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("ВестиУчетТоваровИУслуг, УчитыватьНДС",
		ВестиУчетТоваровИУслуг, УчитыватьНДС);
	
	Дерево = АвтозаполнениеШаблоновФайловСерверПовтИсп.ЗаполнитьДеревоРеквизитовДляВыбораКраткойФормы(
		Объект.ВладелецФайла, Объект.ВладелецФайла, СтруктураПараметров);
	
	Если Параметры.Свойство("РежимСозданияДоговора") И Параметры.РежимСозданияДоговора Тогда 
		
		СписокПолейПоУмолчанию = Новый СписокЗначений;
		Заголовок = СтрШаблон(НСтр("ru = 'Настройка заполнения файла ""%1"" (создание)'"), ПолноеИмяШаблона);
		
		ЗначениеВРеквизитФормы(Дерево, "ОбъектДеревоРеквизитов");
		РежимСозданияДоговора = Параметры.РежимСозданияДоговора;
		
		ШаблонФайла = Объект.ШаблонФайла;
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайла(ШаблонФайла.Ссылка);
		ТекущаяВерсия = ШаблонФайла.ТекущаяВерсия.ПолучитьОбъект();	
		ИмяСРасширениемФайла = СтрШаблон("%1.%2", ТекущаяВерсия.ПолноеНаименование, ТекущаяВерсия.Расширение);
		
	Иначе 
		Заголовок = СтрШаблон(НСтр("ru = 'Настройка заполнения файла ""%1""'"), ПолноеИмяШаблона);
		ЗначениеВРеквизитФормы(Дерево, "ОбъектДеревоРеквизитов");
		
		Для Каждого Поле Из Объект.ДанныеДляАвтозаполнения Цикл 
			НоваяСтрока = ДанныеДляАвтозаполненияПриОткрытии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Поле);
		КонецЦикла;
		
		ДанныеДляАвтозаполненияПриОткрытии.Сортировать("НомерКолонкиТабличнойЧасти,
			|ТермДляЗамены, ЗначениеЗамены, ВыражениеОбработкиРезультатаЗамены"); 

		Для Каждого Поле Из Объект.СкриптыШтамповЭП Цикл 
			НоваяСтрока = СкриптыШтамповЭППриОткрытии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Поле);
		КонецЦикла;
		
	КонецЕсли;
	
	АвтовизуализацияЭП = ПолучитьФункциональнуюОпцию("АвтовизуализацияЭП");
	Если АвтовизуализацияЭП Тогда
		ВидДокумента = Объект.ВладелецФайла;
		Если ТипЗнч(ВидДокумента) = Тип("СправочникСсылка.ВидыДокументов") Тогда
			
			РеквВида = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидДокумента, 
				"ВестиУчетСторон, ВестиУчетПоКонтрагентам");
				
			Если РеквВида.ВестиУчетСторон Или РеквВида.ВестиУчетПоКонтрагентам Тогда 	
				НовСтр = ТегиШтампов.Добавить();
				НовСтр.Имя = ВизуализацияЭПКлиентСервер.ТегНашиПодписи();
					
				НовСтр = ТегиШтампов.Добавить();
				НовСтр.Имя = ВизуализацияЭПКлиентСервер.ТегПодписиКонтрагентов();
				
				ФорматированныеЧастиСтроки = Новый Массив;
				
				ФорматированныеЧастиСтроки.Добавить(
					НСтр("ru = 'Если настройка включена, то в файл будут добавлены теги '") + Символы.ВК);
				
				ШрифтЖирный = Новый Шрифт(,,Истина);
				ФорматированныеЧастиСтроки.Добавить(
					Новый ФорматированнаяСтрока(НСтр("ru = 'ВставитьШтампНашаОрганизация, ВставитьШтампКонтрагенты'"),
						ШрифтЖирный));
				
				ФорматированныеЧастиСтроки.Добавить(
					Символы.ВК + НСтр("ru = '- вместо них будут вставлены штампы ЭП сотрудников вашей организации 
					|и сторонних контрагентов, соответственно.'"));
				
				Элементы.ДекорацияВставлятьШтампыЭП.Заголовок 
					= Новый ФорматированнаяСтрока(ФорматированныеЧастиСтроки);
				
			Иначе
				
				НовСтр = ТегиШтампов.Добавить();
				НовСтр.Имя = ВизуализацияЭПКлиентСервер.ТегВсеПодписи();

				ФорматированныеЧастиСтроки = Новый Массив;
				
				ФорматированныеЧастиСтроки.Добавить(
					НСтр("ru = 'Если настройка включена, то в файл будет добавлен тег '") + Символы.ВК);
				
				ШрифтЖирный = Новый Шрифт(,,Истина);
				ФорматированныеЧастиСтроки.Добавить(
					Новый ФорматированнаяСтрока(НСтр("ru = 'ВставитьЭП'"),
						ШрифтЖирный));
				
				ФорматированныеЧастиСтроки.Добавить(
					НСтр("ru = '- вместо него будут вставлены все штампы ЭП.'"));
				
				Элементы.ДекорацияВставлятьШтампыЭП.Заголовок 
					= Новый ФорматированнаяСтрока(ФорматированныеЧастиСтроки);

			КонецЕсли;
			
		КонецЕсли;	
	Иначе
		Элементы.ШтампыЭП.Видимость = Ложь;
		Объект.СкриптыШтамповЭП.Очистить();
	КонецЕсли;
	
	РасширенныйРежимВставкиШтампов = (Объект.СкриптыШтамповЭП.Количество() <> 0);

	НайденныеТексты = Новый Массив;
	ТекстыДляПоиска  = Новый Массив;
	Если Не РасширенныйРежимВставкиШтампов Тогда // простой режим
		
		Для Каждого Стр Из ТегиШтампов Цикл
			ТекстыДляПоиска.Добавить(Стр.Имя);
		КонецЦикла;
			 
	Иначе
		
		Для Каждого Стр Из Объект.СкриптыШтамповЭП Цикл
			Если ЗначениеЗаполнено(Стр.ЗаменяемаяСтрока)
			И ЗначениеЗаполнено(Стр.ТекстСкрипта) Тогда
				ТекстыДляПоиска.Добавить(Стр.ЗаменяемаяСтрока);
			КонецЕсли;	
		КонецЦикла;	
		
	КонецЕсли;			

	СписокПолей = Новый Массив();
	Если РасширениеФайла <> "doc" Тогда
		
		СписокПолей = АвтозаполнениеШаблоновФайловКлиентСервер.НайтиВсеПоляВФайлеMSWord(
			РасширениеФайла, ДвоичныеДанныеФайла, ТекстыДляПоиска, НайденныеТексты);
			
		НайденныеТекстыСписок.ЗагрузитьЗначения(НайденныеТексты);	
			
		СписокПолейШаблона.Очистить();
		Для Каждого Поле Из СписокПолей Цикл
			НоваяСтрока = СписокПолейШаблона.Добавить();
			НоваяСтрока.Наименование = Поле;
		КонецЦикла;
		
		Индекс = Объект.СкриптыШтамповЭП.Количество() - 1;
		Пока Индекс >= 0 Цикл
			
			Стр = Объект.СкриптыШтамповЭП[Индекс];
			
			Если НайденныеТексты.Найти(Стр.ЗаменяемаяСтрока) = Неопределено Тогда
				Объект.СкриптыШтамповЭП.Удалить(Стр);
			КонецЕсли;	 
			
			Индекс = Индекс - 1;
			
		КонецЦикла;	

		Если Объект.СкриптыШтамповЭП.Количество() = 0 Тогда 
			Для Каждого Стр Из ТегиШтампов Цикл
				Если НайденныеТексты.Найти(Стр.Имя) <> Неопределено Тогда
					ВставлятьШтампыЭП = Истина;
					Прервать;
				КонецЕсли;	 
			КонецЦикла;
		КонецЕсли;
		
		РасширенныйРежимВставкиШтампов = (Объект.СкриптыШтамповЭП.Количество() <> 0);
		
		Если Не РасширенныйРежимВставкиШтампов Тогда
			Элементы.СтраницыРежим.ТекущаяСтраница = Элементы.РежимУпрощенный;
		Иначе
			Элементы.СтраницыРежим.ТекущаяСтраница = Элементы.РежимРасширенный;
		КонецЕсли;		
		
		Элементы.РасширенныйРежимШтампы.Пометка = РасширенныйРежимВставкиШтампов; 
		
	КонецЕсли;
	
	ПоказыватьУведомлениеОЗаписи = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ВидыДокументов", "ПоказыватьУведомлениеОПереносеПолейВФайл", Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если НЕ ВебКлиент Тогда
		
		Если РасширениеФайла = "doc" Тогда
		
			НайденныеТексты = Новый Массив;
			ТекстыДляПоиска  = Новый Массив;
			Если Не РасширенныйРежимВставкиШтампов Тогда // простой режим
				
				Для Каждого Стр Из ТегиШтампов Цикл
					ТекстыДляПоиска.Добавить(Стр.Имя);
				КонецЦикла;
					 
			Иначе
				
				Для Каждого Стр Из Объект.СкриптыШтамповЭП Цикл
					Если ЗначениеЗаполнено(Стр.ЗаменяемаяСтрока)
					И ЗначениеЗаполнено(Стр.ТекстСкрипта) Тогда
						ТекстыДляПоиска.Добавить(Стр.ЗаменяемаяСтрока);
					КонецЕсли;	
				КонецЦикла;	
				
			КонецЕсли;			
			
			Состояние(НСтр("ru = 'Выполняется поиск полей в шаблоне файла'"));
			СписокПолей = АвтозаполнениеШаблоновФайловКлиентСервер.НайтиВсеПоляВФайлеMSWord(
				РасширениеФайла, ДвоичныеДанныеФайла,
				ТекстыДляПоиска, НайденныеТексты);
				
			НайденныеТекстыСписок.ЗагрузитьЗначения(НайденныеТексты);	
				
			СписокПолейШаблона.Очистить();
			Для Каждого Поле Из СписокПолей Цикл
				НоваяСтрока = СписокПолейШаблона.Добавить();
				НоваяСтрока.Наименование = Поле;
			КонецЦикла;
			
			Индекс = Объект.СкриптыШтамповЭП.Количество() - 1;
			Пока Индекс >= 0 Цикл
				
				Стр = Объект.СкриптыШтамповЭП[Индекс];
				
				Если НайденныеТексты.Найти(Стр.ЗаменяемаяСтрока) = Неопределено Тогда
					Объект.СкриптыШтамповЭП.Удалить(Стр);
				КонецЕсли;	 
				
				Индекс = Индекс - 1;
				
			КонецЦикла;	
	
			Если Объект.СкриптыШтамповЭП.Количество() = 0 Тогда 
				Для Каждого Стр Из ТегиШтампов Цикл
					Если НайденныеТексты.Найти(Стр.Имя) <> Неопределено Тогда
						ВставлятьШтампыЭП = Истина;
						Прервать;
					КонецЕсли;	 
				КонецЦикла;
			КонецЕсли;
			
			РасширенныйРежимВставкиШтампов = (Объект.СкриптыШтамповЭП.Количество() <> 0);
			
			Если Не РасширенныйРежимВставкиШтампов Тогда
				Элементы.СтраницыРежим.ТекущаяСтраница = Элементы.РежимУпрощенный;
			Иначе
				Элементы.СтраницыРежим.ТекущаяСтраница = Элементы.РежимРасширенный;
			КонецЕсли;		
			
			Элементы.РасширенныйРежимШтампы.Пометка = РасширенныйРежимВставкиШтампов; 
			
			Состояние(НСтр("ru = 'Поиск полей в шаблоне файла завершен'"));
		КонецЕсли;
	#КонецЕсли
	
	СопоставитьПоляНаКлиенте(СписокПолейШаблона);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимСозданияДоговора И Не Объект.Ссылка.Пустая() Тогда 
		РежимСозданияДоговора = Ложь;
		СтандартнаяОбработка = Ложь;
		Закрыть(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)          
	
	Если ПропуститьПередЗаписью Тогда
		Возврат;
	КонецЕсли;	
	
	Объект.Наименование = Объект.ШаблонФайла;
	
	ОбщегоНазначенияДокументооборотКлиент.УдалитьПустыеСтрокиТаблицы(СписокСкриптов, "Скрипт");
	
	Инд1 = 0;
	Для Каждого СтрокаСкрипт Из СписокСкриптов Цикл 
		Если Не ЗначениеЗаполнено(СтрокаСкрипт.ПолеФайла) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не указано имя поля!'"),,
				"СписокСкриптов[" + Формат(Инд1, "ЧГ=0") + "].ПолеФайла",,Отказ);
			Возврат;
		КонецЕсли;
		
		Инд1 = Инд1 + 1;
	КонецЦикла;
	
	КоличествоСкриптов = СписокСкриптов.Количество();
	Для Инд1 = 0 По КоличествоСкриптов-2 Цикл
		Строка1 = СписокСкриптов[Инд1];
		
		Для Инд2 = Инд1+1 По КоличествоСкриптов-1 Цикл
			Строка2 = СписокСкриптов[Инд2];
			
			Если ВРег(Строка1.ПолеФайла) = ВРег(Строка2.ПолеФайла) Тогда 
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Поле файла ""%1"" указано дважды в списке скриптов!'"),
					Строка(Строка2.ПолеФайла));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,,
					"СписокСкриптов[" + Формат(Инд2, "ЧГ=0") + "].ПолеФайла",, 
					Отказ);
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КоличествоКолонок = 0;
	
	МассивЗаменСтрок = Новый Массив;
	Для Каждого СтрокаЗаполнения Из Объект.ДанныеДляАвтозаполнения Цикл
		Если Не ЗначениеЗаполнено(СтрокаЗаполнения.ЗаменяемаяСтрока) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивЗаменСтрок.Добавить(СтрокаЗаполнения);
	КонецЦикла;
	
	Объект.ДанныеДляАвтозаполнения.Очистить();
	Контекст = Новый Структура;
	Контекст.Вставить("Дерево", ОбъектДеревоРеквизитов);
	Контекст.Вставить("ФормаДерево", Элементы.ОбъектДеревоРеквизитов);
	Контекст.Вставить("ДанныеДляЗаполнения", Новый СписокЗначений);
	ОбойтиДерево(ОбъектДеревоРеквизитов.ПолучитьЭлементы(), Контекст, "ВключеноПолеСоздать");
	КоличествоКолонок = 1;
	
	Для Каждого Элемент Из Контекст.ДанныеДляЗаполнения Цикл 
		ЭлементДерева = Элемент.Значение;
		
		// Вставляем одно поле в файл
		Если ЭлементДерева.КоличествоПолей = 1 Или ЭлементДерева.РеквизитТабличнойЧасти Тогда 
			НоваяСтрока = Объект.ДанныеДляАвтозаполнения.Добавить();
			Если ЭлементДерева.ДополнительныйРеквизит Или ЭлементДерева.КонтактнаяИнформация Тогда 
				ЗначениеЗамены = СтрШаблон("{%1|%2}", ЭлементДерева.ОбъектРодитель, ЭлементДерева.Описание);
			Иначе 
				ЗначениеЗамены = СтрШаблон("{%1|%2}", ЭлементДерева.ОбъектРодитель, ЭлементДерева.Наименование);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЭлементДерева.ПолеФайла) Тогда 
				// Может быть так, что указно несколько полей, но нам нужно только одно.
				МассивПолей = СтрРазделить(ЭлементДерева.ПолеФайла, ", ", Ложь);
				ЗначениеПоля = "";
				Если МассивПолей.Количество() > 1 Тогда 
					ЗначениеПоля = МассивПолей[0];
				Иначе 
					ЗначениеПоля = ЭлементДерева.ПолеФайла;
				КонецЕсли;
				
				НоваяСтрока.ТермДляЗамены = ЗначениеПоля;
				
			ИначеЕсли ЗначениеЗаполнено(ЭлементДерева.РеквизитРодитель) Тогда 
				НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.РеквизитРодитель, 5)
					+ "_" + Лев(ЭлементДерева.НаименованиеДляWord, 14);
			Иначе
				НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.НаименованиеДляWord, 20);
			КонецЕсли;
			
			НоваяСтрока.ЗначениеЗамены = ЗначениеЗамены;
			НоваяСтрока.РеквизитТабличнойЧасти = ЭлементДерева.РеквизитТабличнойЧасти;
			НоваяСтрока.НомерКолонкиТабличнойЧасти = ЭлементДерева.НомерКолонкиТабличнойЧасти;
			НоваяСтрока.ОписаниеПоляЗамены = ЭлементДерева.ОписаниеПоляЗамены;
			НоваяСтрока.ТипЗначенияЗамены = ЭлементДерева.Тип;
			НоваяСтрока.Падеж = ВернутьЧислоПадежа(ЭлементДерева.Падеж);
			
			УстановитьФорматЗначенияЗамены(ЭлементДерева, НоваяСтрока);
			
			Если НоваяСтрока.РеквизитТабличнойЧасти Тогда 
				НоваяСтрока.НомерКолонкиТабличнойЧасти = КоличествоКолонок;
				КоличествоКолонок = КоличествоКолонок + 1;
			КонецЕсли;
			
		Иначе 
			// Вставляем несколько полей в файл для одного реквизита
			Счетчик = 1;
			Пока Счетчик <= ЭлементДерева.КоличествоПолей Цикл 
				НоваяСтрока = Объект.ДанныеДляАвтозаполнения.Добавить();
				Если ЭлементДерева.ДополнительныйРеквизит Или ЭлементДерева.КонтактнаяИнформация Тогда 
					ЗначениеЗамены = "{" + ЭлементДерева.ОбъектРодитель + "|" + ЭлементДерева.Описание + "}";
				Иначе 
					ЗначениеЗамены = "{" + ЭлементДерева.ОбъектРодитель + "|" + ЭлементДерева.Наименование + "}";
				КонецЕсли;
				
				Если Счетчик = 1 Тогда 
					// Первый элемент вставляем по аналогии
					Если ЗначениеЗаполнено(ЭлементДерева.ПолеФайла) Тогда 
						МассивПолей = СтрРазделить(ЭлементДерева.ПолеФайла, ", ", Ложь);
						ЗначениеПоля = "";
						
						Если МассивПолей.Количество() >= Счетчик Тогда 
							ЗначениеПоля = МассивПолей[Счетчик - 1];
						КонецЕсли;
						
						Если ЗначениеЗаполнено(ЗначениеПоля) Тогда 
							НоваяСтрока.ТермДляЗамены = ЗначениеПоля;
							
						ИначеЕсли ЗначениеЗаполнено(ЭлементДерева.РеквизитРодитель) 
							И Не ЭлементДерева.ДополнительныйРеквизит Тогда 
							НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.РеквизитРодитель, 5) 
								+ "_" + Лев(ЭлементДерева.НаименованиеДляWord, 14);
						Иначе
							НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.НаименованиеДляWord, 20);
						КонецЕсли;
						
					ИначеЕсли ЗначениеЗаполнено(ЭлементДерева.РеквизитРодитель) 
						И Не ЭлементДерева.ДополнительныйРеквизит Тогда 
						НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.РеквизитРодитель, 5) 
							+ "_" + Лев(ЭлементДерева.НаименованиеДляWord, 14);
					Иначе
						НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.НаименованиеДляWord, 20);
					КонецЕсли;
					
				ИначеЕсли Счетчик < 10 Тогда 
					Если ЗначениеЗаполнено(ЭлементДерева.ПолеФайла) Тогда 
						МассивПолей = СтрРазделить(ЭлементДерева.ПолеФайла, ", ", Ложь);
						ЗначениеПоля = "";
						
						// Остальные элементы вставляем по порядку
						Если МассивПолей.Количество() >= Счетчик Тогда 
							ЗначениеПоля = МассивПолей[Счетчик - 1];
						КонецЕсли;
						
						Если ЗначениеЗаполнено(ЗначениеПоля) Тогда 
							НоваяСтрока.ТермДляЗамены = ЗначениеПоля;
							
						ИначеЕсли ЗначениеЗаполнено(ЭлементДерева.РеквизитРодитель) 
							И Не ЭлементДерева.ДополнительныйРеквизит Тогда 
							НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.РеквизитРодитель, 5) 
								+ "_" + Лев(ЭлементДерева.НаименованиеДляWord, 13) + СокрЛП(Счетчик);
							
						Иначе
							НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.НаименованиеДляWord, 19) + СокрЛП(Счетчик);
							
						КонецЕсли;
						
					ИначеЕсли ЗначениеЗаполнено(ЭлементДерева.РеквизитРодитель) 
						И Не ЭлементДерева.ДополнительныйРеквизит Тогда 
						НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.РеквизитРодитель, 5) 
							+ "_" + Лев(ЭлементДерева.НаименованиеДляWord, 13) + СокрЛП(Счетчик);
						
					ИначеЕсли ЭлементДерева.ДополнительныйРеквизит Тогда 
						НоваяСтрока.ТермДляЗамены = "Д" + СокрЛП(Счетчик) + Прав(ЭлементДерева.НаименованиеДляWord, 18);
					Иначе 
						НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.НаименованиеДляWord, 19) + СокрЛП(Счетчик);
					КонецЕсли;
					
				Иначе 
					Если ЗначениеЗаполнено(ЭлементДерева.ПолеФайла) Тогда 
						МассивПолей = СтрРазделить(ЭлементДерева.ПолеФайла, ", ", Ложь);
						ЗначениеПоля = "";
						
						// Остальные элементы вставляем по порядку
						Если МассивПолей.Количество() >= Счетчик Тогда 
							ЗначениеПоля = МассивПолей[Счетчик - 1];
						КонецЕсли;
						
						Если ЗначениеЗаполнено(ЗначениеПоля) Тогда 
							НоваяСтрока.ТермДляЗамены = ЗначениеПоля;
							
						ИначеЕсли ЗначениеЗаполнено(ЭлементДерева.РеквизитРодитель) 
							И Не ЭлементДерева.ДополнительныйРеквизит Тогда 
							НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.РеквизитРодитель, 5) 
								+ "_" + Лев(ЭлементДерева.НаименованиеДляWord, 12) + СокрЛП(Счетчик);
						
						ИначеЕсли ЭлементДерева.ДополнительныйРеквизит Тогда 
							НоваяСтрока.ТермДляЗамены = "Д" + СокрЛП(Счетчик) + Прав(ЭлементДерева.НаименованиеДляWord, 17);
						
						Иначе
							НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.НаименованиеДляWord, 18) + СокрЛП(Счетчик);
							
						КонецЕсли;
						
					ИначеЕсли ЗначениеЗаполнено(ЭлементДерева.РеквизитРодитель) 
						И Не ЭлементДерева.ДополнительныйРеквизит Тогда 
						НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.РеквизитРодитель, 5) 
							+ "_" + Лев(ЭлементДерева.НаименованиеДляWord, 12) + СокрЛП(Счетчик);
						
					ИначеЕсли ЭлементДерева.ДополнительныйРеквизит Тогда 
						НоваяСтрока.ТермДляЗамены = "Д" + СокрЛП(Счетчик) + Прав(ЭлементДерева.НаименованиеДляWord, 17);
					Иначе 
						НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.НаименованиеДляWord, 18) + СокрЛП(Счетчик);
					КонецЕсли;
				КонецЕсли;
				
				НоваяСтрока.ЗначениеЗамены = ЗначениеЗамены;
				НоваяСтрока.РеквизитТабличнойЧасти = ЭлементДерева.РеквизитТабличнойЧасти;
				НоваяСтрока.НомерКолонкиТабличнойЧасти = ЭлементДерева.НомерКолонкиТабличнойЧасти;
				НоваяСтрока.ОписаниеПоляЗамены = ЭлементДерева.ОписаниеПоляЗамены;
				НоваяСтрока.ТипЗначенияЗамены = ЭлементДерева.Тип;
				НоваяСтрока.Падеж = ВернутьЧислоПадежа(ЭлементДерева.Падеж);
				
				УстановитьФорматЗначенияЗамены(ЭлементДерева, НоваяСтрока);
				
				Счетчик = Счетчик + 1;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаСкрипт Из СписокСкриптов Цикл 
		НоваяСтрока = Объект.ДанныеДляАвтозаполнения.Добавить();
		НоваяСтрока.ТермДляЗамены = СтрокаСкрипт.ПолеФайла;
		НоваяСтрока.ВыражениеОбработкиРезультатаЗамены = СтрокаСкрипт.Скрипт;
		НоваяСтрока.ОписаниеПоляЗамены = СтрокаСкрипт.ПолеФайла;
		
	КонецЦикла;
	
	НайденныеТексты = НайденныеТекстыСписок.ВыгрузитьЗначения();
	
	ТекстыДляВставки  = Новый Массив;
	ТекстыДляУдаления = Новый Массив;
	
	Если Не РасширенныйРежимВставкиШтампов Тогда // простой режим
		
		Если ВставлятьШтампыЭП Тогда
			Для Каждого Стр Из ТегиШтампов Цикл
				ТекстыДляВставки.Добавить(Стр.Имя);
			КонецЦикла;
		КонецЕсли;
			 
	Иначе
		
		Для Каждого Стр Из Объект.СкриптыШтамповЭП Цикл
			Если ЗначениеЗаполнено(Стр.ЗаменяемаяСтрока)
			И ЗначениеЗаполнено(Стр.ТекстСкрипта) Тогда
				ТекстыДляВставки.Добавить(Стр.ЗаменяемаяСтрока);
			КонецЕсли;	
		КонецЦикла;	
		
	КонецЕсли;			
	
	Для Каждого СтрокаЗаполнения Из МассивЗаменСтрок Цикл
		НоваяСтрока = Объект.ДанныеДляАвтозаполнения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗаполнения);
	КонецЦикла;
	
	#Если НЕ ВебКлиент Тогда
		
		Если (РасширениеФайла = "doc" Или РасширениеФайла = "docx") Тогда
			НовыеДанные = Объект.ДанныеДляАвтозаполнения;
			НовыеДанные.Сортировать("НомерКолонкиТабличнойЧасти,
				|ТермДляЗамены, ЗначениеЗамены, ВыражениеОбработкиРезультатаЗамены");
			
			Если ОбщегоНазначенияДокументооборотКлиентСервер.ЕстьОтличияВТаблицах(
				ДанныеДляАвтозаполненияПриОткрытии, 
				НовыеДанные,
				"ТермДляЗамены, ЗначениеЗамены, ВыражениеОбработкиРезультатаЗамены, ФорматЗначенияЗамены,
				|ТипЗначенияЗамены, РеквизитТабличнойЧасти, НомерКолонкиТабличнойЧасти, ОписаниеПоляЗамены")
				Или ОбщегоНазначенияДокументооборотКлиентСервер.ЕстьОтличияВМассивах(
					ТекстыДляВставки, НайденныеТексты) Тогда
				
				Состояние(НСтр("ru = 'В шаблоне файла осуществляется поиск указанных полей. Пожалуйста, подождите...'"));
				
				Для Каждого Строка Из НайденныеТексты Цикл
					
					Если ТекстыДляВставки.Найти(Строка) = Неопределено Тогда
						ТекстыДляУдаления.Добавить(Строка);
					КонецЕсли;	
					
				КонецЦикла;	
				
				МассивПолейДляУдаления = Новый Массив;
				Для Каждого Строка Из ДанныеДляАвтозаполненияПриОткрытии Цикл 
					СтруктураПоиска = Новый Структура("ТермДляЗамены", Строка.ТермДляЗамены);
					
					СтрокиДанных = Объект.ДанныеДляАвтозаполнения.НайтиСтроки(СтруктураПоиска);
					Если СтрокиДанных.Количество() = 0 Тогда
						МассивПолейДляУдаления.Добавить(Новый Структура("ПолеУдаления, РеквизитТабличнойЧасти", 
							Строка.ТермДляЗамены, Строка.РеквизитТабличнойЧасти));
					КонецЕсли;
				КонецЦикла;
				
				МожноЗакрытьФорму = Истина;
				
				АвтозаполнениеШаблоновФайловКлиент.ПроверитьНаличиеИДобавитьПоляВФайлеMSWord(
					ПолноеИмяШаблона, РасширениеФайла, Объект.ДанныеДляАвтозаполнения, 
					Объект.ШаблонФайла, ЭтотОбъект.УникальныйИдентификатор, МассивПолейДляУдаления,
					ПоказыватьУведомлениеОЗаписи,
					ТекстыДляВставки, ТекстыДляУдаления, МожноЗакрытьФорму);
					
				Если Не МожноЗакрытьФорму Тогда 
					Отказ = Истина;	
				КонецЕсли;	
					
			КонецЕсли;
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("Закрыть") Тогда
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Изменение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		Закрыть(Объект.Ссылка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗакрытьКраткаяФормаЭлемента" И ПоказыватьУведомлениеОЗаписи Тогда  
		ПропуститьПередЗаписью = Истина;
		Записать();
		Закрыть(Объект.Ссылка);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДокументДляПроверкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяСтрока", ДокументДляПроверки);
	
	ОткрытьФорму("Справочник.ДокументыПредприятия.ФормаВыбора", ПараметрыФормы, Элемент);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокСкриптов

&НаКлиенте
Процедура СписокСкриптовПриИзменении(Элемент)
	
	КоличествоСкриптов = СписокСкриптов.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСкриптовСкриптНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.СписокСкриптов.ТекущиеДанные;
	Текст = ТекущиеДанные.Скрипт;
	
	Если Текст = "" Тогда 
		Текст = ПустойСкрипт();
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СписокСкриптовСкриптНачалоВыбораПродолжениеПослеВводаТекста",
		ЭтотОбъект);
	ПараметрыФормы = Новый Структура("Скрипт, ИспользоватьСклонения", Текст, Истина);
	ОткрытьФорму("Справочник.ПравилаАвтозаполненияФайлов.Форма.ВводСкрипта", ПараметрыФормы,,,,,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСкриптовСкриптОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.СписокСкриптов.ТекущиеДанные;
	Текст = ТекущиеДанные.Скрипт;
	
	Если Текст = "" Тогда 
		Текст = ПустойСкрипт();
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СписокСкриптовСкриптНачалоВыбораПродолжениеПослеВводаТекста",
		ЭтотОбъект);
	ПоказатьВводСтроки(ОписаниеОповещения, Текст, НСтр("ru = 'Введите скрипт'"),, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСкриптовСкриптНачалоВыбораПродолжениеПослеВводаТекста(Текст, Параметры) Экспорт
	
	Если ТипЗнч(Текст) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные = Элементы.СписокСкриптов.ТекущиеДанные;
	Если Текст <> Неопределено И Текст <> ПустойСкрипт() Тогда
		ТекущиеДанные.Скрипт = Текст;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСкриптовСкриптОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.СписокСкриптов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Скрипт = "";
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСкриптовПолеФайлаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокСкриптов.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Текст = СокрЛП(ТекущиеДанные.ПолеФайла);
		Если ИмяПеременнойУникально(Текст, ТекущиеДанные) Тогда 
			ТекущиеДанные.ПолеФайла = Текст;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСкриптовПолеФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.СписокСкриптов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("Выбрать", НСтр("ru='Выбрать из имеющихся в файле'"));
	
	ПараметрыОбработкиОповещения = новый Структура();
	ПараметрыОбработкиОповещения.Вставить("ТекущиеДанные", ТекущиеДанные);
	ПараметрыОбработкиОповещения.Вставить("Элемент", Элемент);
	
	ОписаниеОповещенияОВыборе = Новый ОписаниеОповещения(
		"СписокСкриптовПолеФайлаНачалоВыбора_Продолжение",
		ЭтотОбъект,
		ПараметрыОбработкиОповещения);
	
	ПоказатьВыборИзСписка(ОписаниеОповещенияОВыборе, СписокВыбора, ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСкриптовПолеФайлаНачалоВыбора_Продолжение(ВыбранноеЗначение, Параметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФайлШаблон", Объект.ШаблонФайла);
	ПараметрыФормы.Вставить("СписокПолей", СписокПолейШаблона);
	ПараметрыФормы.Вставить("МножественныйВыбор", Ложь);

	ОткрытьФорму(
		"Справочник.ПравилаАвтозаполненияФайлов.Форма.ФормаВыбораПоляВФайле", 
		ПараметрыФормы, 
		Параметры.Элемент ,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСкриптовПолеФайлаНачалоВыбора_ПослеВводаИмениПоля(Текст, Параметры) Экспорт
	
	ТекущиеДанные = Элементы.СписокСкриптов.ТекущиеДанные;
	Если Текст <> Неопределено Тогда
		Текст = СокрЛП(Текст);
		Если ИмяПеременнойУникально(Текст, ТекущиеДанные) Тогда 
			ТекущиеДанные.ПолеФайла = Текст;
		КонецЕсли;
	Иначе 
		ТекущиеДанные.ПолеФайла = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСкриптовПолеФайлаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.СписокСкриптов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ПолеФайла = ВыбранноеЗначение.НаименованиеПоля;
	
	Если ВыбранноеЗначение.СписокПолей.Количество() > 0 Тогда
		СписокПолейШаблона.Очистить();
		Для Каждого Поле Из ВыбранноеЗначение.СписокПолей Цикл
			НоваяСтрока = СписокПолейШаблона.Добавить();
			НоваяСтрока.Наименование = Поле.Наименование;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ИмяПеременнойУникально(ИмяПеременной, ТекущиеДанные) 
	
	ПервыйСимвол = Лев(ИмяПеременной, 1);
	ТекстОшибки = "";
	Если КодСимвола(ПервыйСимвол) >= 48 И КодСимвола(ПервыйСимвол) <= 57 Тогда // Если Символ цифра.
		
		ТекстОшибки = НСтр("ru = 'Имя поля не может начинаться с цифры.
                            |Введите другое имя.'");
	Иначе 
		ДлинаПоля = СтрДлина(ИмяПеременной);
		Указатель = 1;
		Пока Указатель <= ДлинаПоля Цикл
			Символ = Сред(ИмяПеременной, Указатель, 1);
			КодСимвола = КодСимвола(Символ);
			
			Если КодСимвола < 48 
				Или (КодСимвола > 57 И КодСимвола < 65)
				Или (КодСимвола > 90 И КодСимвола < 95)
				Или (КодСимвола > 95 И КодСимвола < 97)
				Или (КодСимвола > 122 И КодСимвола < 1040)
				Или КодСимвола > 1103 Тогда 
				
				ТекстОшибки = СтрШаблон(НСтр("ru = 'Имя поля содержит не корректный символ ""%1"".
                                              |Введите другое имя.'"), Символ);
				Прервать;
			КонецЕсли;
			
			Указатель = Указатель + 1;
		КонецЦикла;
	КонецЕсли;
	
	Если ТекстОшибки = "" Тогда 
		Если СписокПолейШаблона.Количество() = 0 Тогда 
			Состояние(НСтр("ru = 'Выполняется поиск полей в шаблоне файла'"));
			СписокПолей = АвтозаполнениеШаблоновФайловКлиентСервер.НайтиВсеПоляВФайлеMSWord(
				РасширениеФайла, ДвоичныеДанныеФайла);
				
			СписокПолейШаблона.Очистить();
			Для Каждого Поле Из СписокПолей Цикл
				НоваяСтрока = СписокПолейШаблона.Добавить();
				НоваяСтрока.Наименование = Поле;
			КонецЦикла;
		КонецЕсли;
		
		МассивСтрокПоиска = СписокПолейШаблона.НайтиСтроки(Новый Структура("Наименование", ИмяПеременной));
		МассивПоискаСписокСкриптов = СписокСкриптов.НайтиСтроки(Новый Структура("ПолеФайла", ИмяПеременной));
		Если МассивСтрокПоиска.Количество() > 0 Тогда 
			ТекстОшибки = НСтр("ru = 'Имя поля неуникально!
                                |Введите другое имя.'");
		ИначеЕсли МассивПоискаСписокСкриптов.Количество() > 0 
			И ТекущиеДанные <> МассивПоискаСписокСкриптов[0] Тогда 
			ТекстОшибки = НСтр("ru = 'Имя поля неуникально!
                                |Введите другое имя.'");
		КонецЕсли;
	КонецЕсли;
	
	Если ТекстОшибки <> "" Тогда 
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ИмяПеременнойУникальноПродолжение",
			ЭтотОбъект,
			Новый Структура("Текст", ИмяПеременной));
			
		ПоказатьПредупреждение(ОписаниеОповещения, ТекстОшибки);
		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ИмяПеременнойУникальноПродолжение(Параметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СписокСкриптовПолеФайлаНачалоВыбора_ПослеВводаИмениПоля",
		ЭтотОбъект);
	ПоказатьВводСтроки(ОписаниеОповещения, Параметры.Текст, 
		НСтр("ru = 'Введите имя (имя не может содержать пробелы или начинаться с цифры)'"), 20, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбъектДеревоРеквизитов

&НаКлиенте
Процедура ОбъектДеревоРеквизитовПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("УстановитьДоступностьПеремещения", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовПолеФайлаПриИзменении(Элемент)
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ПолеФайла) Тогда 
			ТекущиеДанные.СоздатьПоле = Истина;
			ТекущиеДанные.КоличествоПолей = ТекущиеДанные.КоличествоПолей + 1;
			КоличествоРеквизитов = КоличествоРеквизитов + 1;
		Иначе 
			ТекущиеДанные.СоздатьПоле = Ложь;
			КоличествоРеквизитов = КоличествоРеквизитов - 1;
			ТекущиеДанные.КоличествоПолей = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовПолеФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФайлШаблон", Объект.ШаблонФайла);
	ПараметрыФормы.Вставить("СписокПолей", СписокПолейШаблона);
	ПараметрыФормы.Вставить("МножественныйВыбор", Ложь);
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
		ПараметрыФормы.МножественныйВыбор = 
			ТекущиеДанные.КоличествоПолей > 1 И Не ТекущиеДанные.РеквизитТабличнойЧасти;
	КонецЕсли;
	
	ОткрытьФорму(
		"Справочник.ПравилаАвтозаполненияФайлов.Форма.ФормаВыбораПоляВФайле", 
		ПараметрыФормы, 
		Элемент ,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовПолеФайлаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
		ТекущиеДанные.ПолеФайла = ВыбранноеЗначение.НаименованиеПоля;
		ТекущиеДанные.СоздатьПоле = Истина;
		ТекущиеДанные.КоличествоПолей = ТекущиеДанные.КоличествоПолей + 1;
		КоличествоРеквизитов = КоличествоРеквизитов + 1;
	КонецЕсли;
	
	Если ВыбранноеЗначение.СписокПолей.Количество() > 0 Тогда
		СписокПолейШаблона.Очистить();
		Для Каждого Поле Из ВыбранноеЗначение.СписокПолей Цикл
			НоваяСтрока = СписокПолейШаблона.Добавить();
			НоваяСтрока.Наименование = Поле.Наименование;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовСоздатьПолеПриИзменении(Элемент)
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
	
	Если ТекущиеДанные.Наименование = "СписокТоваровИУслуг" Тогда 
		ЭлементыТабЧасти = ТекущиеДанные.ПолучитьЭлементы();
		Для Каждого ЭлементТаблицы Из ЭлементыТабЧасти Цикл 
			ЭлементТаблицы.СоздатьПоле = ТекущиеДанные.СоздатьПоле;
			
			Если ТекущиеДанные.СоздатьПоле Тогда 
				КоличествоРеквизитов = КоличествоРеквизитов + 1;
				ТекущиеДанные.КоличествоПолей = 0;
			Иначе 
				КоличествоРеквизитов = КоличествоРеквизитов - 1;
				ТекущиеДанные.КоличествоПолей = 0;
			КонецЕсли;
		КонецЦикла;
		
	Иначе 
		Если ТекущиеДанные.СоздатьПоле Тогда 
			КоличествоРеквизитов = КоличествоРеквизитов + 1;
			ТекущиеДанные.КоличествоПолей = ТекущиеДанные.КоличествоПолей + 1;
		Иначе 
			КоличествоРеквизитов = КоличествоРеквизитов - 1;
			ТекущиеДанные.КоличествоПолей = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовКоличествоПолейПриИзменении(Элемент)
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
		
		Если ТекущиеДанные.РеквизитТабличнойЧасти Тогда 
			ТекущиеДанные.КоличествоПолей = 0;
			Возврат;
		КонецЕсли;
		
		Если ТекущиеДанные.КоличествоПолей = 0 Тогда 
			Если ТекущиеДанные.СоздатьПоле Тогда 
				ТекущиеДанные.СоздатьПоле = Ложь;
			КонецЕсли;
		Иначе 
			Если Не ТекущиеДанные.СоздатьПоле Тогда 
				ТекущиеДанные.СоздатьПоле = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура();
	ПараметрыЗаписи.Вставить("Закрыть", Истина);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФормат(Команда)
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
	
	Конструктор = Новый КонструкторФорматнойСтроки(ТекущиеДанные.ФорматСвойства);
	Конструктор.ДоступныеТипы = Новый ОписаниеТипов(ТекущиеДанные.Тип);
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"УстановитьФорматПродолжение",
		ЭтотОбъект,
		Новый Структура("ТекущиеДанные", ТекущиеДанные));
	Конструктор.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФорматПродолжение(Текст, Параметры) Экспорт
	
	// Нажали "Отмену"
	Если Текст = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Параметры.ТекущиеДанные.ФорматСвойства = Текст;
	Параметры.ТекущиеДанные.СоздатьПоле = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РасширенныйПросмотр(Команда)
	
	РасширенныйПросмотр = Не РасширенныйПросмотр;
	Элементы.ФормаРасширенныйПросмотр.Пометка = РасширенныйПросмотр;
	
	Если РасширенныйПросмотр Тогда 
		Элементы.ОбъектДеревоРеквизитовПолеФайла.Видимость = Истина;
	Иначе 
		Элементы.ОбъектДеревоРеквизитовПолеФайла.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	УстановитьСнятьОтметку(ОбъектДеревоРеквизитов.ПолучитьЭлементы(), Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеОтметки(Команда)
	УстановитьСнятьОтметку(ОбъектДеревоРеквизитов.ПолучитьЭлементы(), Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСкрипт(Команда)
	
	ОчиститьСообщения();
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.СписокСкриптов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументДляПроверки) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнен документ для проверки!'"),,
			"ДокументДляПроверки");
		Возврат;
	КонецЕсли;
	
	РезультатОбработки = ПроверитьСкриптНаСервере(ДокументДляПроверки, ТекущиеДанные.Скрипт,
		ТекущиеДанные.ПолеФайла, ТекущиеДанные.ПолучитьИдентификатор());
	
	Если РезультатОбработки <> Неопределено Тогда 
		ПоказатьПредупреждение(, РезультатОбработки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьСкриптНаСервере(ДокументДляПроверки, Скрипт, ПолеФайла, Идентификатор)
	
	РезультатОбработки = "";
	Выражение = СтрЗаменить(Скрипт,
		"Файл.ВладелецФайла", "ДокументДляПроверки");
		
	Попытка
		Выполнить(Выражение);
	Исключение
		СтрокаОшибки = СтрШаблон(НСтр("ru = 'Скрипт """"%1"""" задан некорректно'"),
			ПолеФайла) + Символы.Таб + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()) + Символы.ВК;
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрокаОшибки,,
			"СписокСкриптов[" + Формат(Идентификатор, "ЧГ=0") + "].Скрипт");
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат РезультатОбработки;
	
КонецФункции

&НаКлиенте
Процедура СкопироватьИзДругихНастроек(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПослеВыбораСкриптовАвтозаполненияФайла",
		ЭтотОбъект);
	
	ПоляФайла = Новый СписокЗначений;
	Для Каждого ПолеШаблона Из СписокПолейШаблона Цикл
		ПоляФайла.Добавить(ПолеШаблона.Наименование);
	КонецЦикла;
	
	ПараметрыОткрытия = Новый Структура("ПоляФайла, ТекущееПравило, ЗаголовокФормы");
	ПараметрыОткрытия.ПоляФайла = ПоляФайла;
	ПараметрыОткрытия.ТекущееПравило = Объект.Ссылка;
	ПараметрыОткрытия.ЗаголовокФормы = НСтр("ru = 'Выбор скриптов заполнения файла'");
	
	ОткрытьФорму("Справочник.ПравилаАвтозаполненияФайлов.Форма.ФормаВыбораСкриптов", ПараметрыОткрытия,,,,,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораСкриптовАвтозаполненияФайла(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	СтруктураОтбора = Новый Структура("ПолеФайла");
	
	Для Каждого Элемент Из Результат Цикл
		
		СтруктураОтбора.ПолеФайла = Элемент.Ключ;
		НайденныеСтроки = СписокСкриптов.НайтиСтроки(СтруктураОтбора);
		
		Если НайденныеСтроки.Количество() Тогда 
			
			Для Каждого Строка Из НайденныеСтроки Цикл
				Строка.Скрипт = Элемент.Значение.Скрипт;
			КонецЦикла;
			
		Иначе
			
			Строка = СписокСкриптов.Добавить();
			Строка.ПолеФайла = Элемент.Ключ;
			Строка.Скрипт = Элемент.Значение.Скрипт;
			
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьДоступностьПеремещения()
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока <> Неопределено
		И Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные.РеквизитТабличнойЧасти Тогда
		Элементы.ОбъектДеревоПереместитьВверх.Доступность = Истина;
		Элементы.ОбъектДеревоПереместитьВниз.Доступность = Истина;
	Иначе 
		Элементы.ОбъектДеревоПереместитьВверх.Доступность = Ложь;
		Элементы.ОбъектДеревоПереместитьВниз.Доступность = Ложь;
	КонецЕсли;
	
	Элементы.УстановитьФормат.Доступность = Ложь;
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока <> Неопределено Тогда 
		ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
		
		Попытка
			Если Тип(ТекущиеДанные.Тип) = Тип("Дата")
				Или Тип(ТекущиеДанные.Тип) = Тип("Булево")
				Или Тип(ТекущиеДанные.Тип) = Тип("Число") Тогда
				Элементы.УстановитьФормат.Доступность = Истина;
			КонецЕсли;
		Исключение
			// тип значения замены - не примитивный
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкриптыШтамповЭПТекстСкриптаОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.СкриптыШтамповЭП.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ТекстСкрипта = "";

КонецПроцедуры

&НаКлиенте
Процедура СкриптыШтамповЭПТекстСкриптаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.СкриптыШтамповЭП.ТекущиеДанные;
	Текст = ТекущиеДанные.ТекстСкрипта;
	
	Если Текст = "" Тогда 
		Текст = ПустойСкрипт();
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СписокШтамповСкриптНачалоВыбораПродолжениеПослеВводаТекста",
		ЭтотОбъект);
	ПараметрыФормы = Новый Структура("Скрипт, ИспользоватьСклонения", Текст, Истина);
	ОткрытьФорму("Справочник.ПравилаАвтозаполненияФайлов.Форма.ВводСкрипта", ПараметрыФормы,,,,,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура СписокШтамповСкриптНачалоВыбораПродолжениеПослеВводаТекста(Текст, Параметры) Экспорт
	
	ТекущиеДанные = Элементы.СкриптыШтамповЭП.ТекущиеДанные;
	Если Текст <> Неопределено И Текст <> ПустойСкрипт() Тогда
		ТекущиеДанные.ТекстСкрипта = Текст;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьПоляНаКлиенте(СписокПолей)
	
	МассивНайденныхТермов = Новый Массив;
	Контекст = Новый Структура;
	Контекст.Вставить("Дерево", ОбъектДеревоРеквизитов);
	Контекст.Вставить("ФормаДерево", Элементы.ОбъектДеревоРеквизитов);
	Контекст.Вставить("МассивНайденныхТермов", МассивНайденныхТермов);
	Контекст.Вставить("Развернуть", Ложь);
	
	Если СписокПолей.Количество() > 0 Тогда
		Контекст.Вставить("СписокПолей", СписокПолей);
		Контекст.Вставить("ПроверитьРодителя", Ложь);
		
	ИначеЕсли РежимСозданияДоговора Тогда 
		Контекст.Вставить("СписокПолей", СписокПолейПоУмолчанию);
		Контекст.Вставить("ПроверитьРодителя", Истина);
		
	Иначе 
		Контекст.Вставить("СписокПолей", Новый СписокЗначений);
		Контекст.Вставить("ПроверитьРодителя", Истина);
		
	КонецЕсли;
	
	КоличествоРеквизитов = 0;
	ОбойтиДерево(ОбъектДеревоРеквизитов.ПолучитьЭлементы(), Контекст, "ВключитьПоля");
	
	Для Каждого Поле Из Объект.ДанныеДляАвтозаполнения Цикл
		Если ЗначениеЗаполнено(Поле.ВыражениеОбработкиРезультатаЗамены) Тогда 
			// Выражения на встроенном языке заносим в скрипты
			
			ЗначениеПоля = СписокПолей.НайтиСтроки(Новый Структура("Наименование", Поле.ТермДляЗамены));
			Если ЗначениеПоля.Количество() > 0 Тогда
				НовыйСкрипт = СписокСкриптов.Добавить();
				НовыйСкрипт.Скрипт = Поле.ВыражениеОбработкиРезультатаЗамены;
				НовыйСкрипт.ПолеФайла = Поле.ТермДляЗамены;
			Иначе 
				МассивСтрокПоиска = ДанныеДляАвтозаполненияПриОткрытии.НайтиСтроки(
					Новый Структура("ТермДляЗамены", Поле.ТермДляЗамены));
				Для Каждого СтрокаПоиска Из МассивСтрокПоиска Цикл 
					ДанныеДляАвтозаполненияПриОткрытии.Удалить(СтрокаПоиска);
				КонецЦикла;
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(Поле.ЗначениеЗамены) 
			И МассивНайденныхТермов.Найти(Поле.ТермДляЗамены) = Неопределено Тогда 
			// Если в дереве реквизитов поле не нашлось, то заносим его в скрипты.
			
			ЗначениеПоля = СписокПолей.НайтиСтроки(Новый Структура("Наименование", Поле.ТермДляЗамены));
			Если ЗначениеПоля.Количество() > 0 Тогда
				НовыйСкрипт = СписокСкриптов.Добавить();
				НовыйСкрипт.ПолеФайла = Поле.ТермДляЗамены;
				ЭтоДопРеквизит = Найти(Поле.ЗначениеЗамены, НСтр("ru = 'ДопРеквизиты'")) > 0
					Или Найти(Поле.ЗначениеЗамены, НСтр("ru = 'ДопСвойства'")) > 0;
				ЭтоКонтактнаяИнформация = Найти(Поле.ЗначениеЗамены, НСтр("ru = 'КонтактнаяИнформация'")) > 0;
				
				// Обычный реквизит
				Если Лев(Поле.ЗначениеЗамены, 1) = "{"
					И Прав(Поле.ЗначениеЗамены, 1) = "}" 
					И Прав(Поле.ЗначениеЗамены, 1) = "}"
					И Не ЭтоДопРеквизит
					И Не ЭтоКонтактнаяИнформация Тогда 
					ЗначениеЗамены = Сред(Поле.ЗначениеЗамены, 2, СтрДлина(Поле.ЗначениеЗамены)-2);
					
				// Дополнительный реквизит
				ИначеЕсли Лев(Поле.ЗначениеЗамены, 1) = "{"
					И Прав(Поле.ЗначениеЗамены, 1) = "}"
					И ЭтоДопРеквизит Тогда 
					
					НазваниеПоля = Сред(Поле.ЗначениеЗамены, 2, СтрДлина(Поле.ЗначениеЗамены)-2);;
					Если Найти(НазваниеПоля, "|") > 0 Тогда
						МассивСтрок = СтрРазделить(НазваниеПоля, "|");
					Иначе
						МассивСтрок = СтрРазделить(НазваниеПоля, ".");
					КонецЕсли;
					Если МассивСтрок.Количество() = 1 Тогда
						Продолжить;
					КонецЕсли;
					
					Счетчик = 0; РеквизитВладельца = Ложь;
					Пока Счетчик < 2 Цикл
						Счетчик = Счетчик + 1;
						Для Каждого Строка Из МассивСтрок Цикл
							Если Найти(Строка, "ВладелецФайла.ДопСвойства") > 0
								Или Найти(Строка, "ВладелецФайла.ДопРеквизиты") > 0 Тогда
								РеквизитВладельца = Истина;
							КонецЕсли;
							
							Если Найти(Строка, "ДопСвойства") > 0
								Или Найти(Строка, "ДопРеквизиты") > 0 Тогда
								МассивСтрок.Удалить(МассивСтрок.Найти(Строка));
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
					ИмяДопРеквизита = МассивСтрок[МассивСтрок.Количество() - 1];
					
					Выражение = "Если НЕ Файл.Пустая()";
					Если РеквизитВладельца Тогда 
						ВыражениеРеквизита = "Файл.ВладелецФайла";
					Иначе 
						ВыражениеРеквизита = "Файл";
					КонецЕсли;
					
					Счетчик = 0;
					Для Каждого Реквизит Из МассивСтрок Цикл
						Счетчик = Счетчик + 1;
						
						Если Найти(Реквизит, " ") > 0
							Или Реквизит = Строка(Объект.ВладелецФайла) Тогда
							Продолжить;
						КонецЕсли;
						
						Если Счетчик < МассивСтрок.Количество() Тогда
							ВыражениеРеквизита = ВыражениеРеквизита + "." + Реквизит;
							Выражение = Выражение + Символы.ВК + "И НЕ " + ВыражениеРеквизита + " = Неопределено"
								+ " И НЕ " + ВыражениеРеквизита + ".Пустая()";
						КонецЕсли;
					КонецЦикла;	
					
					ВыражениеЦикла = 
						"Для Каждого ДопРеквизит Из " + ВыражениеРеквизита + ".ДополнительныеРеквизиты Цикл
							|Если (Строка(ДопРеквизит.Свойство) = """ + ИмяДопРеквизита+ """) 
							|	Или (ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДопРеквизит.Свойство, ""Заголовок"") = """ + ИмяДопРеквизита + """) Тогда
							|	РезультатОбработки = ДопРеквизит.Значение;
							|КонецЕсли;
						|КонецЦикла;";
					
					Выражение = Выражение + " Тогда " + ВыражениеЦикла + "КонецЕсли;";
					
					НовыйСкрипт.Скрипт = Выражение;
					Продолжить;
					
				// Контактная информация
				ИначеЕсли Лев(Поле.ЗначениеЗамены, 1) = "{"
					И Прав(Поле.ЗначениеЗамены, 1) = "}"
					И ЭтоКонтактнаяИнформация Тогда 
					
					НазваниеПоля = Сред(Поле.ЗначениеЗамены, 2, СтрДлина(Поле.ЗначениеЗамены)-2);;
					Если Найти(НазваниеПоля, "|") > 0 Тогда
						МассивСтрок = СтрРазделить(НазваниеПоля, "|");
					Иначе
						МассивСтрок = СтрРазделить(НазваниеПоля, ".");
					КонецЕсли;
					Если МассивСтрок.Количество() = 1 Тогда
						Продолжить;
					КонецЕсли;
					
					Счетчик = 0; РеквизитВладельца = Ложь;
					Пока Счетчик < 2 Цикл
						Счетчик = Счетчик + 1;
						Для Каждого Строка Из МассивСтрок Цикл
							Если Найти(Строка, НСтр("ru = 'КонтактнаяИнформация'")) Тогда
								МассивСтрок.Удалить(МассивСтрок.Найти(Строка));
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
					ИмяКонтИнформации = МассивСтрок[МассивСтрок.Количество() - 1];
					
					Выражение = "Если НЕ Файл.Пустая()";
					Если РеквизитВладельца Тогда 
						ВыражениеРеквизита = "Файл.ВладелецФайла";
					Иначе 
						ВыражениеРеквизита = "Файл";
					КонецЕсли;
					
					Счетчик = 0;
					Для Каждого Реквизит Из МассивСтрок Цикл
						Счетчик = Счетчик + 1;
						
						Если Найти(Реквизит, " ") > 0
							Или Реквизит = Строка(Объект.ВладелецФайла) Тогда
							Продолжить;
						КонецЕсли;
						
						Если Счетчик < МассивСтрок.Количество() Тогда
							ВыражениеРеквизита = ВыражениеРеквизита + "." + Реквизит;
							Выражение = Выражение + Символы.ВК + "И НЕ " + ВыражениеРеквизита + " = Неопределено"
								+ " И НЕ " + ВыражениеРеквизита + ".Пустая()";
						КонецЕсли;
					КонецЦикла;
					
					ВыражениеЦикла = "
						|Для Каждого КонтИнформация Из " + ВыражениеРеквизита + ".КонтактнаяИнформация Цикл
							|Если Строка(КонтИнформация.Вид.Наименование) = """ + ИмяКонтИнформации + """ Тогда
							|	РезультатОбработки = КонтИнформация.Представление;
							|КонецЕсли;
						|КонецЦикла;";
		
					Выражение = Выражение + " Тогда " + ВыражениеЦикла + "КонецЕсли;";
					
					НовыйСкрипт.Скрипт = Выражение;
					Продолжить;
					
				Иначе 
					ЗначениеЗамены = Поле.ЗначениеЗамены;
				КонецЕсли;
				
				ЗначениеЗамены = СтрЗаменить(ЗначениеЗамены, "|", ".");
				
				НовыйСкрипт.Скрипт = "РезультатОбработки = Файл." + ЗначениеЗамены;
			Иначе 
				// Удаляем поле
				МассивСтрокПоиска = ДанныеДляАвтозаполненияПриОткрытии.НайтиСтроки(
					Новый Структура("ТермДляЗамены", Поле.ТермДляЗамены));
				Для Каждого СтрокаПоиска Из МассивСтрокПоиска Цикл 
					ДанныеДляАвтозаполненияПриОткрытии.Удалить(СтрокаПоиска);
				КонецЦикла;
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(Поле.ЗначениеЗамены) 
			И (ЗначениеЗаполнено(Поле.ФорматЗначенияЗамены) Или Поле.Падеж > 0) Тогда 
			Контекст = Новый Структура;
			Контекст.Вставить("Дерево", ОбъектДеревоРеквизитов);
			Контекст.Вставить("ФормаДерево", Элементы.ОбъектДеревоРеквизитов);
			Контекст.Вставить("ФорматЗначенияЗамены", Поле.ФорматЗначенияЗамены);
			Контекст.Вставить("ЗначениеЗамены", Поле.ЗначениеЗамены);
			Контекст.Вставить("Падеж", Поле.Падеж);
			
			ОбойтиДерево(ОбъектДеревоРеквизитов.ПолучитьЭлементы(), Контекст, "УстановитьФорматИПадежВСтроке");
			
		КонецЕсли;
	КонецЦикла;
	
	КоличествоСкриптов = СписокСкриптов.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбойтиДерево(ДеревоЭлементы, Контекст, ИмяПроцедуры)
	
	Для Каждого Элемент Из ДеревоЭлементы Цикл
		ПодчиненныеУзлы = Элемент.ПолучитьЭлементы();
		
		Если Контекст.Свойство("Развернуть") И Контекст.Развернуть Тогда 
			Контекст.Развернуть = Ложь;
		КонецЕсли;
		
		Результат = Вычислить(ИмяПроцедуры + "(Элемент, Контекст)");
		
		Если ПодчиненныеУзлы.Количество() > 0 Тогда
			ОбойтиДерево(ПодчиненныеУзлы, Контекст, ИмяПроцедуры);
			
			Если Контекст.Свойство("Развернуть") И Контекст.Развернуть Тогда 
				ИдентификаторСтроки = Элемент.ПолучитьИдентификатор();
				ТекДанные = Контекст.Дерево.НайтиПоИдентификатору(ИдентификаторСтроки);
				Контекст.ФормаДерево.Развернуть(ИдентификаторСтроки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция УстановитьФорматИПадежВСтроке(Элемент, Контекст)
	
	ИдентификаторСтроки = Элемент.ПолучитьИдентификатор();
	ТекДанные = Контекст.Дерево.НайтиПоИдентификатору(ИдентификаторСтроки);
	Ключ = ТекДанные;
	
	Если ТекДанные.СоздатьПоле = Истина И ЗначениеЗаполнено(ТекДанные.Тип) Тогда
		Если ТекДанные.ДополнительныйРеквизит Или ТекДанные.КонтактнаяИнформация Тогда 
			ПолеПоиска = СтрШаблон("{%1|%2}", ТекДанные.ОбъектРодитель, ТекДанные.Описание);
		Иначе 
			ПолеПоиска = СтрШаблон("{%1|%2}", ТекДанные.ОбъектРодитель, ТекДанные.Наименование);
		КонецЕсли;
		
		Если ПолеПоиска = Контекст.ЗначениеЗамены Тогда 
			ТекДанные.ФорматСвойства = Контекст.ФорматЗначенияЗамены;
			
			Если Контекст.Падеж > 0 Тогда 
				ТекДанные.Падеж = ВернутьПадежПоЧислу(Контекст.Падеж);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ВключеноПолеСоздать(Элемент, Контекст)
	
	ИдентификаторСтроки = Элемент.ПолучитьИдентификатор();
	ТекДанные = Контекст.Дерево.НайтиПоИдентификатору(ИдентификаторСтроки);
	Ключ = ТекДанные;
	
	Если ТекДанные.СоздатьПоле = Истина И ЗначениеЗаполнено(ТекДанные.Тип) Тогда
		Контекст.ДанныеДляЗаполнения.Добавить(Ключ);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ВключитьПоля(Элемент, Контекст)
	
	ИдентификаторСтроки = Элемент.ПолучитьИдентификатор();
	ТекДанные = Контекст.Дерево.НайтиПоИдентификатору(ИдентификаторСтроки);
	СписокПолей = Контекст.СписокПолей;
	
	Если Контекст.ПроверитьРодителя Тогда 
		Для Каждого Поле Из СписокПолей Цикл 
			Если ТекДанные.Наименование = Поле.Значение И ТекДанные.ОбъектРодитель = Поле.Представление Тогда
				ТекДанные.СоздатьПоле = Истина;
				ТекДанные.КоличествоПолей = ТекДанные.КоличествоПолей + 1;
				КоличествоРеквизитов = КоличествоРеквизитов + 1;
				Контекст.Развернуть = Истина;
				
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Если ЗначениеЗаполнено(ТекДанные.РеквизитРодитель) Тогда 
			ПолеПоиска = Лев(ТекДанные.РеквизитРодитель, 5) + "_" + Лев(ТекДанные.НаименованиеДляWord, 14);
		Иначе
			ПолеПоиска = Лев(ТекДанные.НаименованиеДляWord, 20);
		КонецЕсли;
		
		ПолеПоиска = СтрЗаменить(ПолеПоиска, " ", "_");
		
		ЗначениеПоля = СписокПолей.НайтиСтроки(Новый Структура("Наименование", ПолеПоиска));
		Если ЗначениеПоля.Количество() > 0 Тогда
			ТекДанные.ПолеФайла = ЗначениеПоля[0].Наименование;
			ТекДанные.СоздатьПоле = Истина;
			КоличествоРеквизитов = КоличествоРеквизитов + 1;
			Контекст.Развернуть = Истина;
			
			Контекст.МассивНайденныхТермов.Добавить(ТекДанные.ПолеФайла);
			
			ТекДанные.КоличествоПолей = ТекДанные.КоличествоПолей + 1;
			
			Если Не ТекДанные.РеквизитТабличнойЧасти Тогда 
				Если ТекДанные.ДополнительныйРеквизит Тогда 
					ДопПолеПоиска = "Д%1" + Прав(ПолеПоиска, 18);
				ИначеЕсли СтрДлина(ПолеПоиска) = 20 Тогда 
					ДопПолеПоиска = Лев(ПолеПоиска, 19) + "%1";
				Иначе 
					ДопПолеПоиска = ПолеПоиска + "%1";
				КонецЕсли;
				Для Ит = 2 По 9 Цикл 
					 
					ЗначениеМножественногоПоля = СписокПолей.НайтиСтроки(
						Новый Структура("Наименование", СтрШаблон(ДопПолеПоиска, СокрЛП(Ит))));
						
					Если ЗначениеМножественногоПоля.Количество() > 0 Тогда 
						ТекДанные.ПолеФайла = ТекДанные.ПолеФайла + ", " + ЗначениеМножественногоПоля[0].Наименование;
						ТекДанные.КоличествоПолей = ТекДанные.КоличествоПолей + 1;
						Контекст.МассивНайденныхТермов.Добавить(ЗначениеМножественногоПоля[0].Наименование);
					КонецЕсли;
				КонецЦикла;
				
				// Если найдено 9 полей, то нужно проверить, нет ли еще
				Если ТекДанные.КоличествоПолей = 9 Тогда
					Если ТекДанные.ДополнительныйРеквизит Тогда 
						ДопПолеПоиска = "Д%1" + Прав(ПолеПоиска, 17);
					ИначеЕсли СтрДлина(ПолеПоиска) = 20 Тогда 
						ДопПолеПоиска = Лев(ПолеПоиска, 18) + "%1";
					Иначе 
						ДопПолеПоиска = ПолеПоиска + "%1";
					КонецЕсли;
					Для Ит = 10 По 99 Цикл 
						 
						ЗначениеМножественногоПоля = СписокПолей.НайтиСтроки(
							Новый Структура("Наименование", СтрШаблон(ДопПолеПоиска, СокрЛП(Ит))));
							
						Если ЗначениеМножественногоПоля.Количество() > 0 Тогда 
							ТекДанные.ПолеФайла = ТекДанные.ПолеФайла + ", " + ЗначениеМножественногоПоля[0].Наименование;
							ТекДанные.КоличествоПолей = ТекДанные.КоличествоПолей + 1;
							Контекст.МассивНайденныхТермов.Добавить(ЗначениеМножественногоПоля[0].Наименование);
						Иначе
							Прервать; // если полей нет, то дальше не ищем
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура УстановитьФорматЗначенияЗамены(ЭлементДерева, Строка)
	
	Если ЗначениеЗаполнено(ЭлементДерева.ФорматСвойства) Тогда 
		Строка.ФорматЗначенияЗамены = ЭлементДерева.ФорматСвойства;
	Иначе 
		Если ЭлементДерева.Тип = "Дата" Тогда 
			Если СтрНайти(ЭлементДерева.Наименование, НСтр("ru = 'ДатаДокумента'")) > 0 Тогда 
				Строка.ФорматЗначенияЗамены = "ДЛФ='DD'";
			Иначе 
				Строка.ФорматЗначенияЗамены = "ДЛФ='D'";
			КонецЕсли;
		КонецЕсли;
		
		Если ЭлементДерева.Тип = "Число" Тогда 
			Если СтрНайти(ЭлементДерева.Наименование, НСтр("ru = 'Цена'")) > 0 Или 
				СтрНайти(ЭлементДерева.Наименование, НСтр("ru = 'Сумма'")) > 0 Тогда 
				Строка.ФорматЗначенияЗамены = "ЧДЦ = '2'";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьОтметку(Коллекция, Отметка)

	Для Каждого Стр Из Коллекция Цикл
		
		Стр.СоздатьПоле = Отметка;
		
		УстановитьСнятьОтметку(Стр.ПолучитьЭлементы(), Отметка);
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовПадежПриИзменении(Элемент)
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
		
		Если ТекущиеДанные.Падеж <> "" И 
			Не ТекущиеДанные.СоздатьПоле Тогда 
			ТекущиеДанные.СоздатьПоле = Истина;
			КоличествоРеквизитов = КоличествоРеквизитов + 1;
			ТекущиеДанные.КоличествоПолей = ТекущиеДанные.КоличествоПолей + 1;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ВернутьЧислоПадежа(Падеж) Экспорт 
	
	Если Падеж = "" Тогда 
		Возврат 0;
	ИначеЕсли Падеж = "И" Тогда 
		Возврат 1;
	ИначеЕсли Падеж = "Р" Тогда 
		Возврат 2;
	ИначеЕсли Падеж = "Д" Тогда 
		Возврат 3
	ИначеЕсли Падеж = "В" Тогда 
		Возврат 4
	ИначеЕсли Падеж = "Т" Тогда 
		Возврат 5
	ИначеЕсли Падеж = "П" Тогда 
		Возврат 6
	Иначе
		Возврат 0
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ВернутьПадежПоЧислу(НомерПадежа) Экспорт 
	
	Если НомерПадежа = 1 Тогда 
		Возврат "И";
	ИначеЕсли НомерПадежа = 2 Тогда 
		Возврат "Р";
	ИначеЕсли НомерПадежа = 3 Тогда 
		Возврат "Д"
	ИначеЕсли НомерПадежа = 4 Тогда 
		Возврат "В"
	ИначеЕсли НомерПадежа = 5 Тогда 
		Возврат "Т"
	ИначеЕсли НомерПадежа = 6 Тогда 
		Возврат "П"
	Иначе
		Возврат ""
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ПустойСкрипт()
	
	Возврат "РезультатОбработки = """";
		| Документ = Файл.ВладелецФайла;";
		
КонецФункции

&НаКлиенте
Процедура РасширенныйРежимШтампы(Команда)
	
	РасширенныйРежимВставкиШтампов = Не РасширенныйРежимВставкиШтампов;
	
	Если Не РасширенныйРежимВставкиШтампов Тогда
		Элементы.СтраницыРежим.ТекущаяСтраница = Элементы.РежимУпрощенный;
		Объект.СкриптыШтамповЭП.Очистить();
	Иначе
		Элементы.СтраницыРежим.ТекущаяСтраница = Элементы.РежимРасширенный;
	КонецЕсли;		
	
	Элементы.РасширенныйРежимШтампы.Пометка = РасширенныйРежимВставкиШтампов; 
	
КонецПроцедуры

#КонецОбласти
