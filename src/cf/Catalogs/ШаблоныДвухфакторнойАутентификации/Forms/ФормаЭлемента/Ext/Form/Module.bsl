
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьЗаполненностьКИ();
	Если Объект.Ссылка.Пустая() Тогда
		УстановитьПримерыЗначений();
	КонецЕсли;
	
	РаботаСФормамиХолдинг.ИзменитьФормуНастроекПрограммы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Сотрудники" Тогда
		ОбновитьЗаполненностьКИ();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьЗаполненностьКИ();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияКИНеЗаполненоНажатие(Элемент)
	
	ОткрытьФорму("Справочник.ШаблоныДвухфакторнойАутентификации.Форма.ФормаИнформацияОНезаполненнойКИ",
		Новый Структура("Участники, ВидыКИ", Объект.Участники, ВыбранныеВидыКИ()),
		ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПараметры

&НаКлиенте
Процедура ПараметрыЗначениеПараметраОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
		Если СтандартнаяОбработка И ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			// Принудительно установим значение, т.к. из-за особенностей платформы при изменении
			// видимости элементов в ОбновитьЗаполненностьКИ() оно может не установиться
			СтандартнаяОбработка = Ложь;
			Элементы.Параметры.ТекущиеДанные.ЗначениеПараметра = ВыбранноеЗначение;
		КонецЕсли;
		
		ОбновитьЗаполненностьКИ();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗначениеПараметраОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элементы.Параметры.ТекущиеДанные.ЗначениеПараметра = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПослеУдаления(Элемент)
	ОбновитьЗаполненностьКИ();
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПередНачаломИзменения(Элемент, Отказ)
	Если Элементы.Параметры.ТекущиеДанные.ЗначениеПараметра = Неопределено Тогда
		Элементы.Параметры.ТекущиеДанные.ЗначениеПараметра = "";
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУчастники

&НаКлиенте
Процедура УчастникиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Участник = ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка");
	КонецЕсли;
КонецПроцедуры

// Участники обработка выбора.
// 
// Параметры:
//  Элемент - ТаблицаФормы - Элемент
//  ВыбранноеЗначение - Массив из СправочникСсылка.Сотрудники, СправочникСсылка.РабочиеГруппы - выбранные значения
//  СтандартнаяОбработка - Булево - Стандартная обработка
&НаКлиенте
Процедура УчастникиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ЕстьИзменения = Ложь;
	
	Для Каждого Значение Из ВыбранноеЗначение Цикл
		Если Объект.Участники.НайтиСтроки(Новый Структура("Участник", Значение)).Количество() = 0 Тогда
			Строка = Объект.Участники.Добавить();
			Строка.Участник = Значение;
			ЕстьИзменения = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьИзменения Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиУчастникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", 1);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Ложь);
	ПараметрыФормы.Вставить("ПодменятьПользователейСотрудниками", Истина);
	ПараметрыФормы.Вставить("ВыбиратьКонтейнерыПользователей", Истина);
	ПараметрыФормы.Вставить("КонтролироватьСотрудниковБезПользователя", Истина);
	
	Если Элементы.Участники.ТекущиеДанные <> Неопределено Тогда
		ПараметрыФормы.Вставить("ВыбранныеАдресаты",
			Элементы.Участники.ТекущиеДанные.Участник);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Выбор сотрудника, рабочей группы'"));
	ПараметрыФормы.Вставить("ЗаголовокСпискаАдреснойКниги", НСтр("ru = 'Все сотрудники'"));
	
	РаботаСАдреснойКнигойКлиент.ВыбратьАдресатов(ПараметрыФормы, Элементы.УчастникиУчастник, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиУчастникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СотрудникиКлиент.ОбработкаВыбораКонтейнера(
		Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка И ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		// Принудительно установим значение, т.к. при изменении видимости элементов 
		// в ОбновитьЗаполненностьКИ() оно может не установиться
		СтандартнаяОбработка = Ложь;
		Элементы.Участники.ТекущиеДанные.Участник = ВыбранноеЗначение;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("СправочникСсылка.СтруктураПредприятия") Тогда
		ОбновитьЗаполненностьКИ();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиУчастникАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СотрудникиВызовСервера.СформироватьДанныеВыборасКонтейнерами(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиУчастникОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СотрудникиВызовСервера.СформироватьДанныеВыборасКонтейнерами(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиПослеУдаления(Элемент)
	ОбновитьЗаполненностьКИ();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьЗаполненностьКИ()
	
	Если Не Объект.Участники.Количество() Тогда
		Элементы.ДекорацияКИНеЗаполнено.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Для Каждого Стр Из Объект.Участники Цикл
		Стр.НеЗаполненаКИ = Ложь;
	КонецЦикла;

	Участники = Объект.Участники.Выгрузить().ВыгрузитьКолонку("Участник");
		
	ВыбранныеВидыКИ = ВыбранныеВидыКИ();
	СотрудникиИКонтейнерыСНезаполненнойКИ = Справочники.ШаблоныДвухфакторнойАутентификации.СотрудникиИКонтейнерыСНезаполненнойКИ(
		Участники, ВыбранныеВидыКИ);
	
	// Проставим отметку в таблице участников для условного оформления
	Отбор = Новый Структура("Участник", Неопределено);
	Для Каждого СотрудникСтрока Из СотрудникиИКонтейнерыСНезаполненнойКИ Цикл
		
		// Поиск по участнику лично
		Отбор.Участник = СотрудникСтрока.Участник;
		НайденныеУчастники = Объект.Участники.НайтиСтроки(Отбор);
		Если НайденныеУчастники.Количество() Тогда
			НайденныеУчастники[0].НеЗаполненаКИ = Истина;
		КонецЕсли;
		
		// Поиск по контейнеру, если он состоит в контейнере
		Если ЗначениеЗаполнено(СотрудникСтрока.Контейнер) Тогда
			Отбор.Участник = СотрудникСтрока.Контейнер;
			НайденныеУчастники = Объект.Участники.НайтиСтроки(Отбор);
			Если НайденныеУчастники.Количество() Тогда
				НайденныеУчастники[0].НеЗаполненаКИ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	КоличествоНезаполненных = СотрудникиИКонтейнерыСНезаполненнойКИ.Количество();
	
	Склонение = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
		НСтр("ru = ';%1 участника;;%1 участников;%1 участников;%1 участников'"),
		КоличествоНезаполненных); 
		
	Элементы.ДекорацияКИНеЗаполнено.Видимость = КоличествоНезаполненных > 0;
	Элементы.ДекорацияКИНеЗаполнено.Заголовок = СтрШаблон(
		НСтр("ru='Не заполнена контактная информация у %1. Строки с этими участниками выделены красным цветом.'"), Склонение);
	
	
КонецПроцедуры

&НаСервере
Функция ВыбранныеВидыКИ()
	
	Возврат ОбщегоНазначенияДокументооборотКлиентСервер.ЭлементыМассиваЗаданногоТипа(
		Объект.Параметры.Выгрузить().ВыгрузитьКолонку("ЗначениеПараметра"),
		Тип("СправочникСсылка.ВидыКонтактнойИнформации"));
	
КонецФункции

&НаСервере
Процедура УстановитьПримерыЗначений()
	Если Не ЗначениеЗаполнено(Объект.АдресРесурса) Тогда
		Объект.АдресРесурса = "https://example.com/sms?login=&1clogin&password=&1cpass&tel=&1ctel&msg=&1cmsg";
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.МетодHTTP) Тогда
		Объект.МетодHTTP = "GET";
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
