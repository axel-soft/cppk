
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Параметр должен быть либо статичным со строкой, либо не статичным с видом КИ
	Для Каждого СтрокаПараметр Из Параметры Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаПараметр.ЗначениеПараметра) Тогда
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'У статичного параметра %1 не заполнено значение.'"),
				СтрокаПараметр.ИмяПараметра);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, , 
				СтрШаблон("Параметры[%1].ЗначениеПараметра", Параметры.Индекс(СтрокаПараметр)),
				Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияДокументооборотКлиентСервер.УдалитьПустыеСтрокиТаблицы(Участники, "Участник");
	
	Справочники.ШаблоныДвухфакторнойАутентификации.ЗаполнитьДополнительныеСвойстваШаблонаИОбновитьФактическихУчастниковПередЗаписью(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Создадим или обновим платформенный шаблон двухфакторной аутентификации
	Справочники.ШаблоныДвухфакторнойАутентификации.СоздатьОбновитьШаблонДвухфакторнойАутентификации(ЭтотОбъект);

	// Включим 2ФА
	Справочники.ШаблоныДвухфакторнойАутентификации.Включить2ФАУчастникамШаблона(ЭтотОбъект);	

	// Для участников, которые были удалены, отключим 2ФА
	Справочники.ШаблоныДвухфакторнойАутентификации.Отключить2ФАУдаленнымУчастникам(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#КонецЕсли
