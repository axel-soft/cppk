#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПодготовитьОграничения();
	ПодготовитьНазначения(Назначение, Ограничения.Количество() > 0);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(Назначение.Добавить(), ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПодготовитьОграничения() Экспорт
	
	ТекущиеОграничения = ТекущиеОграничения();
	
	Ограничения.Очистить();
	
	Для Каждого Ограничение Из ТекущиеОграничения Цикл
		НовоеОграничение = Ограничения.Добавить();
		ЗаполнитьЗначенияСвойств(НовоеОграничение, Ограничение);
		НовоеОграничение.КлючСтроки = НовоеОграничение.НомерСтроки;
		
		ПодготовитьОграничение(НовоеОграничение);
		ДополнитьСлужебнымиОграничениями(НовоеОграничение);
	КонецЦикла;
	
	ДополнитьОграниченияИнициаторов();
	
КонецПроцедуры

Процедура ПодготовитьНазначения(Назначения, ОграничениеИспользования = Ложь) Экспорт
	
	Поля = Справочники.ПравилаКоммуникаций.ПоляНазначения();
	
	Для Каждого Строка Из Назначения Цикл
		Строка.Использование = ОграничениеИспользования И Не ПометкаУдаления И Не Недействительно;
		
		Строка.Релевантность = 0;
		Для Каждого Поле Из Поля Цикл
			Если ЗначениеЗаполнено(Строка[Поле.Ключ]) Тогда
				Если Поле.Ключ = "Вид" И ТипЗнч(Строка[Поле.Ключ]) = Тип("СправочникСсылка.ТематикиДокументов")
					Или Поле.Ключ = "Этап" Тогда
					Строка.Релевантность = Строка.Релевантность + Поля.Количество();
				Иначе
					Строка.Релевантность = Строка.Релевантность + 1;
				КонецЕсли;
			Иначе
				Строка[Поле.Ключ] = Поле.Значение;
			КонецЕсли;
		КонецЦикла;
		
		Если Не Строка.Использование Тогда
			Строка.Ключ = Неопределено;
		ИначеЕсли ЗначениеЗаполнено(Строка.Вид) Тогда
			Строка.Ключ = Строка.Вид;
		ИначеЕсли ЗначениеЗаполнено(Строка.Предмет) Тогда
			Строка.Ключ = Строка.Предмет;
		ИначеЕсли ЗначениеЗаполнено(Строка.Позиция) Тогда
			Если ТипЗнч(Строка.Позиция) = Тип("СправочникСсылка.ВидыУчастниковЗадач") Тогда
				Строка.Ключ = Перечисления.ПравилаКоммуникацийПредметы.Задача;
			Иначе
				Строка.Ключ = Перечисления.ПравилаКоммуникацийПредметы.Документ;
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(Строка.Этап) Тогда
			Строка.Ключ = Перечисления.ПравилаКоммуникацийПредметы.Документ;
		Иначе
			Строка.Ключ = Перечисления.ПравилаКоммуникацийПредметы.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекущиеОграничения()
	
	ТекущиеОграничения = Ограничения.Выгрузить(Новый Структура("Служебная", Ложь));
	
	Для Каждого Ограничение Из ТекущиеОграничения Цикл
		ПараметрыОтбораСтрок = Новый Структура("Служебная, КлючСтроки", Истина, Ограничение.НомерСтроки);
		
		Для Каждого СлужебноеОграничение Из Ограничения.НайтиСтроки(ПараметрыОтбораСтрок) Цикл
			Если СлужебноеОграничение.УчастникРоль Тогда
				Ограничение.УчастникРоль = Истина;
			КонецЕсли;
			Если СлужебноеОграничение.УчастникПодразделение Тогда
				Ограничение.УчастникПодразделение = Истина;
			КонецЕсли;
			Если СлужебноеОграничение.УчастникРабочаяГруппа Тогда
				Ограничение.УчастникРабочаяГруппа = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТекущиеОграничения;
	
КонецФункции

Процедура ДополнитьОграниченияИнициаторов()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.ИнициаторСотрудник КАК ИнициаторСотрудник,
		|	Таблица.ИнициаторРуководитель КАК ИнициаторРуководитель,
		|	Таблица.ИнициаторРоль КАК ИнициаторРоль,
		|	Таблица.ИнициаторРольЗначение КАК РольЗначение,
		|	Таблица.ИнициаторРангС КАК РангС,
		|	Таблица.ИнициаторРангПО КАК РангПО,
		|	Таблица.ИнициаторКонтейнер КАК Контейнер,
		|	Таблица.Служебная КАК Служебная
		|ПОМЕСТИТЬ ВнешнийИсточник
		|ИЗ
		|	&ВнешнийИсточник КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
		|	Таблица.ВидЗаписи КАК ВидЗаписи,
		|	Таблица.РангС КАК РангС,
		|	Таблица.РангПО КАК РангПо
		|ПОМЕСТИТЬ Ограничения
		|ИЗ
		|	(ВЫБРАТЬ
		|		1 КАК ВидЗаписи,
		|		Таблица.РангС КАК РангС,
		|		Таблица.РангПО КАК РангПО
		|	ИЗ
		|		ВнешнийИсточник КАК Таблица
		|	ГДЕ
		|		НЕ Таблица.Служебная
		|		И (Таблица.ИнициаторСотрудник
		|				ИЛИ Таблица.ИнициаторРоль)
		|		И НЕ ИСТИНА В
		|					(ВЫБРАТЬ ПЕРВЫЕ 1
		|						ИСТИНА
		|					ИЗ
		|						ВнешнийИсточник
		|					ГДЕ
		|						НЕ ВнешнийИсточник.Служебная
		|						И ВнешнийИсточник.ИнициаторСотрудник
		|						И ВнешнийИсточник.РангС = -1
		|						И ВнешнийИсточник.РангПО = 999)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Таблица.РангС,
		|		Таблица.РангПО
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		2,
		|		Таблица.РангС,
		|		Таблица.РангПО
		|	ИЗ
		|		ВнешнийИсточник КАК Таблица
		|	ГДЕ
		|		НЕ Таблица.Служебная
		|		И (Таблица.ИнициаторРуководитель
		|				ИЛИ Таблица.ИнициаторРоль)
		|		И НЕ ИСТИНА В
		|					(ВЫБРАТЬ ПЕРВЫЕ 1
		|						ИСТИНА
		|					ИЗ
		|						ВнешнийИсточник
		|					ГДЕ
		|						НЕ ВнешнийИсточник.Служебная
		|						И ВнешнийИсточник.ИнициаторРуководитель
		|						И ВнешнийИсточник.РангС = -1
		|						И ВнешнийИсточник.РангПО = 999)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Таблица.РангС,
		|		Таблица.РангПО) КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т1.НомерЗаписи КАК НомерЗаписи,
		|	Т1.ВидЗаписи КАК ВидЗаписи,
		|	Т1.РангС КАК РангС,
		|	Т1.РангПо КАК РангПО
		|ПОМЕСТИТЬ ДиапазоныБезВложенных
		|ИЗ
		|	Ограничения КАК Т1
		|		ЛЕВОЕ СОЕДИНЕНИЕ Ограничения КАК Т2
		|		ПО Т1.ВидЗаписи = Т2.ВидЗаписи
		|			И (Т1.РангС МЕЖДУ Т2.РангС И Т2.РангПо)
		|			И (Т1.РангПо МЕЖДУ Т2.РангС И Т2.РангПо)
		|			И Т1.НомерЗаписи <> Т2.НомерЗаписи
		|ГДЕ
		|	Т2.РангС ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т1.ВидЗаписи КАК ВидЗаписи,
		|	Т1.НомерЗаписи КАК НомерЗаписи,
		|	Т1.РангС КАК РангС,
		|	Т1.РангПО КАК РангПО,
		|	Т2.РангС КАК _РангС2,
		|	Т2.РангПО КАК _РангПО2
		|ПОМЕСТИТЬ НезависимыеДиапазоны
		|ИЗ
		|	ДиапазоныБезВложенных КАК Т1
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДиапазоныБезВложенных КАК Т2
		|		ПО Т1.ВидЗаписи = Т2.ВидЗаписи
		|			И (Т1.РангПО + 1 = Т2.РангС
		|				ИЛИ Т2.РангС МЕЖДУ Т1.РангС И Т1.РангПО
		|				ИЛИ Т2.РангПО МЕЖДУ Т1.РангС И Т1.РангПО)
		|			И Т1.НомерЗаписи <> Т2.НомерЗаписи
		|ГДЕ
		|	Т2.РангС ЕСТЬ NULL
		|	И НЕ Т1.РангПО = 999
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т1.ВидЗаписи КАК ВидЗаписи,
		|	-1 КАК РангС,
		|	МИНИМУМ(Т1.РангС) - 1 КАК РангПО
		|ПОМЕСТИТЬ ДополнениеПоРангам
		|ИЗ
		|	ДиапазоныБезВложенных КАК Т1
		|
		|СГРУППИРОВАТЬ ПО
		|	Т1.ВидЗаписи
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(Т1.РангС) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т1.ВидЗаписи,
		|	Т1.РангПО + 1,
		|	ЕСТЬNULL(МИНИМУМ(Т2.РангС), 999)
		|ИЗ
		|	НезависимыеДиапазоны КАК Т1
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДиапазоныБезВложенных КАК Т2
		|		ПО Т1.ВидЗаписи = Т2.ВидЗаписи
		|			И (Т2.РангС > Т1.РангПО)
		|
		|СГРУППИРОВАТЬ ПО
		|	Т1.ВидЗаписи,
		|	Т1.РангС,
		|	Т1.РангПО
		|
		|ИМЕЮЩИЕ
		|	ЕСТЬNULL(МИНИМУМ(Т2.РангС), 999) - Т1.РангПО > 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК ВидЗаписи,
		|	-1 КАК РангС,
		|	999 КАК РангПО
		|ГДЕ
		|	НЕ ИСТИНА В
		|				(ВЫБРАТЬ ПЕРВЫЕ 1
		|					ИСТИНА
		|				ИЗ
		|					ВнешнийИсточник
		|				ГДЕ
		|					(НЕ ВнешнийИсточник.Служебная
		|							И ВнешнийИсточник.ИнициаторСотрудник
		|						ИЛИ ВнешнийИсточник.ИнициаторРоль
		|							И ВнешнийИсточник.РангС = -1
		|							И ВнешнийИсточник.РангПО = 999))
		|	И НЕ ИСТИНА В
		|				(ВЫБРАТЬ ПЕРВЫЕ 1
		|					ИСТИНА
		|				ИЗ
		|					ДополнениеПоРангам
		|				ГДЕ
		|					ДополнениеПоРангам.ВидЗаписи = 1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	-1,
		|	999
		|ГДЕ
		|	НЕ ИСТИНА В
		|				(ВЫБРАТЬ ПЕРВЫЕ 1
		|					ИСТИНА
		|				ИЗ
		|					ВнешнийИсточник
		|				ГДЕ
		|					(НЕ ВнешнийИсточник.Служебная
		|							И ВнешнийИсточник.ИнициаторРуководитель
		|						ИЛИ ВнешнийИсточник.ИнициаторРоль
		|							И ВнешнийИсточник.РангС = -1
		|							И ВнешнийИсточник.РангПО = 999))
		|	И НЕ ИСТИНА В
		|				(ВЫБРАТЬ ПЕРВЫЕ 1
		|					ИСТИНА
		|				ИЗ
		|					ДополнениеПоРангам
		|				ГДЕ
		|					ДополнениеПоРангам.ВидЗаписи = 2)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДополнениеПоРангам.ВидЗаписи,
		|	ДополнениеПоРангам.РангС,
		|	ДополнениеПоРангам.РангПО
		|ИЗ
		|	ДополнениеПоРангам КАК ДополнениеПоРангам
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидЗаписи,
		|	РангС,
		|	РангПО");
	Запрос.УстановитьПараметр("ВнешнийИсточник", Ограничения.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Ограничение = Ограничения.Добавить();
		
		Ограничение.ИнициаторСотрудник = Выборка.ВидЗаписи = 1;
		Ограничение.ИнициаторРуководитель = Выборка.ВидЗаписи = 2;
		Ограничение.ИнициаторРангС = Выборка.РангС;
		Ограничение.ИнициаторРангПО = Выборка.РангПО;
		Ограничение.ИнициаторКонтейнер = Неопределено;
		
		Ограничение.УчастникСотрудник = Истина;
		Ограничение.УчастникРуководитель = Истина;
		Ограничение.УчастникРоль = Истина;
		Ограничение.УчастникРангС = -1;
		Ограничение.УчастникРангПО = 999;
		Ограничение.УчастникКонтейнер = Неопределено;
		Ограничение.УчастникИерархияТекущее = Истина;
		Ограничение.УчастникИерархияВышестоящее = Истина;
		Ограничение.УчастникИерархияВышестоящие = Истина;
		Ограничение.УчастникИерархияПодчиненное = Истина;
		Ограничение.УчастникИерархияПодчиненные = Истина;
		Ограничение.УчастникИерархияСоседи = Истина;
		
		Ограничение.Служебная = Истина;
		
		ПодготовитьОграничение(Ограничение);
		ДополнитьСлужебнымиОграничениями(Ограничение);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПодготовитьОграничение(Ограничение)
	
	ТипыПоПодразделениям =
		Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия, СправочникСсылка.ВидыПодразделений");

	Если Ограничение.УчастникРангПО = -1 Тогда
		Ограничение.УчастникРангПО = 999;
	КонецЕсли;
	Если Ограничение.ИнициаторРангПО = -1 Тогда
		Ограничение.ИнициаторРангПО = 999;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ограничение.УчастникКонтейнер) Тогда
		Ограничение.УчастникКонтейнер = Неопределено;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Ограничение.ИнициаторКонтейнер) Тогда
		Ограничение.ИнициаторКонтейнер = Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(Ограничение.УчастникКонтейнер) = Тип("СправочникСсылка.СтруктураПредприятия")
			Или ТипЗнч(Ограничение.УчастникКонтейнер) = Тип("СправочникСсылка.РабочиеГруппы") Тогда
		
		Ограничение.УчастникИерархияВышестоящее = Ложь;
		Ограничение.УчастникИерархияВышестоящие = Ложь;
		Ограничение.УчастникИерархияПодчиненное = Ложь;
		Ограничение.УчастникИерархияПодчиненные = Ложь;
		Ограничение.УчастникИерархияТекущее = Ложь;
		Ограничение.УчастникИерархияСоседи = Истина;
	КонецЕсли;
	
	Ограничение.УчастникИерархияВверх =
		Ограничение.УчастникИерархияВышестоящее Или Ограничение.УчастникИерархияВышестоящие
			Или Ограничение.УчастникИерархияТекущее Или Ограничение.УчастникИерархияСоседи;
			
	Ограничение.УчастникИерархияВниз =
		Ограничение.УчастникИерархияПодчиненное Или Ограничение.УчастникИерархияПодчиненные;
	
	Ограничение.УчастникРабочаяГруппа = 
		Ограничение.УчастникКонтейнер = Неопределено
			Или ТипЗнч(Ограничение.УчастникКонтейнер) = Тип("СправочникСсылка.РабочиеГруппы");
	
	Ограничение.УчастникПодразделение =
		Ограничение.УчастникИерархияВверх Или Ограничение.УчастникИерархияВниз
		Или ТипыПоПодразделениям.СодержитТип(ТипЗнч(Ограничение.УчастникКонтейнер))
		Или Ограничение.УчастникРангС > -1 Или Ограничение.УчастникРангПО < 999
		Или Ограничение.УчастникРабочаяГруппа = Ложь 
			И (Ограничение.УчастникСотрудник Или Ограничение.УчастникРуководитель);
	
	Ограничение.КлючСтроки = Ограничение.НомерСтроки;
	Ограничение.ДоступныйТип = Неопределено;
	
	Если Ограничение.УчастникСотрудник Или Ограничение.УчастникРуководитель Тогда
		Ограничение.ДоступныйТип = Справочники.Сотрудники.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьСлужебнымиОграничениями(Ограничение)
	
	ДоступныеТипы = Новый Структура(
		"УчастникРоль,УчастникПодразделение,УчастникРабочаяГруппа",
		Справочники.РолиИсполнителей.ПустаяСсылка(),
		Справочники.СтруктураПредприятия.ПустаяСсылка(),
		Справочники.РабочиеГруппы.ПустаяСсылка());
	
	Для Каждого Поле Из ДоступныеТипы Цикл
		Если Не Ограничение[Поле.Ключ] Тогда
			Продолжить;
		КонецЕсли;
		
		Если Ограничение.ДоступныйТип = Неопределено Тогда
			Ограничение.ДоступныйТип = Поле.Значение;
		Иначе
			НовоеОграничение = Ограничения.Добавить();
			ЗаполнитьЗначенияСвойств(
				НовоеОграничение,
				Ограничение, ,
				"УчастникПодразделение,УчастникРабочаяГруппа");
			НовоеОграничение[Поле.Ключ] = Истина;
			НовоеОграничение.ДоступныйТип = Поле.Значение;
			НовоеОграничение.Служебная = Истина;
			Ограничение[Поле.Ключ] = Ложь;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Иначе

ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");

#КонецЕсли