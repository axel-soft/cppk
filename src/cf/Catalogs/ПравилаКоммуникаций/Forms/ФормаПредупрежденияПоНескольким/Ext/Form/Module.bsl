#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КоличествоУчастников = Параметры.Нарушения.Количество();
	Если КоличествоУчастников = 1 Тогда
		
		ЕдинственныйУчастник				= Параметры.Нарушения.Получить(0).Значение.Участник;
		ПолПредставлениеУчастника			= ПолучитьПолПредставлениеУчастника(ЕдинственныйУчастник);
		ПредставлениеЕдинственногоУчастника	= ПолПредставлениеУчастника.ПредставлениеУчастника;
		ПолЕдинственногоУчастника			= ПолПредставлениеУчастника.ПолУчастника;
		
		Если Не ЗначениеЗаполнено(ПредставлениеЕдинственногоУчастника) Тогда
			ПредставлениеЕдинственногоУчастника = Строка(ЕдинственныйУчастник);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ПолЕдинственногоУчастника) Тогда
			ПолЕдинственногоУчастника = Перечисления.ПолФизическогоЛица.Мужской;
		КонецЕсли;
	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.НаименованиеПредмета) Тогда
		НаименованиеПредмета = СклонениеПредставленийОбъектов.ПросклонятьПредставление(Параметры.НаименованиеПредмета, 4);
	КонецЕсли;
	НаименованиеДействия = Параметры.НаименованиеДействия;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьТекстыНадписей();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подробно(Команда)
	
	ТекстHTML = НарушенияВСтрокуHTML(Параметры.Нарушения.ВыгрузитьЗначения());
	ПараметрыФормы = Новый Структура("ТекстHTML", ТекстHTML);
	
	ОткрытьФорму("Справочник.ПравилаКоммуникаций.Форма.ФормаПодробноHTML",
		ПараметрыФормы, , Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьУчастников(Команда)
	
	Закрыть(2);
	
КонецПроцедуры


&НаКлиенте
Процедура ОК(Команда)
	
	Закрыть(1);
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьТекстыНадписей()
	
	ТекстПредупрежденияЧтоШаблон = НСтр("ru = '%1 нельзя %2, так как'");
	ТекстПредупрежденияЧто = СтрШаблон(ТекстПредупрежденияЧтоШаблон, НаименованиеПредмета, НРег(НаименованиеДействия));
	ТекстПредупрежденияЧтоДелать = "";
	
	// Избыточный сценарий, форма по идее должна вызываться с не пустым списком нарушений.
	Если КоличествоУчастников = 0 Тогда
		ТекстПредупрежденияИззаЧего = НСтр("ru = 'Все участники доступны по правилам коммуникаций!'");
	ИначеЕсли КоличествоУчастников = 1 Тогда
		ТекстВЗависимостиОтПола = ?(ПолЕдинственногоУчастника = ПредопределенноеЗначение(
			"Перечисление.ПолФизическогоЛица.Мужской"),
			НСтр("ru = 'недоступен по правилам коммуникаций.'"),
			НСтр("ru = 'недоступна по правилам коммуникаций.'"));
		ТекстПредупрежденияИззаЧего = ПредставлениеЕдинственногоУчастника + " " + ТекстВЗависимостиОтПола;
		
		Элементы.Удалить.Заголовок = НСтр("ru = 'Удалить участника'");
		
		ТекстПредупрежденияЧтоДелать = НСтр("ru = 'Выберите другого участника.'");
	
	Иначе
		ТекстПредупрежденияИззаЧего = СтрокаСЧислом(
			НСтр("ru = ';%1 участник недоступен;;%1 участника недоступны;%1 участников недоступны;%1 участников недоступны'"),
			КоличествоУчастников,
			ВидЧисловогоЗначения.Количественное) + НСтр("ru = ' по правилам коммуникаций.'");
			
		Элементы.Удалить.Заголовок = НСтр("ru = 'Удалить участников'");
		
		ТекстПредупрежденияЧтоДелать = НСтр("ru = 'Выберите других участников.'");
		
	КонецЕсли;
	
	Элементы.Надпись.Заголовок = ТекстПредупрежденияЧто + " " + ТекстПредупрежденияИззаЧего + " "
		+ ТекстПредупрежденияЧтоДелать;
	
КонецПроцедуры

// Собирает все нарушений правил коммуникаций в строку HTML.
// 
// Параметры:
//  Нарушения - Массив Из Структура - Массив структур со следующими ключами:
//	 * ВидУчастника	- СправочникСсылка.ВидыУчастниковЗадач - Вид участника задачи.
//	 * Участник	- ОпределяемыйТип.УчастникЗадач - Участник задачи.
//	 * Правило	- СправочникСсылка.ПравилаКоммуникаций - Правило коммуникаций.
// 
// Возвращаемое значение:
//  Строка - Строка HTML описание нарушений.
&НаКлиенте
Функция НарушенияВСтрокуHTML(Нарушения)
	
	ШаблонHTML						= "<html><head>%1</head><body><p>%2</p><table>%3</table></body></html>";
	ШаблонСтрокиТаблицыHTML			= "<tr><td>%1</td></tr>";
	ШаблонТекстаЯчейкиТаблицыHTML	= "<b>%1</b>: %2 - %3 %4 %5";
	
	Если КоличествоУчастников = 0 Тогда
		Возврат РаботаС_HTMLКлиентСервер.ПустойHTML();
	КонецЕсли;
	
	Если КоличествоУчастников = 1 Тогда
		// Термин "Участник" не склоняем в зависимости от пола.
		ПерваяСтрока = НСтр("ru = 'Участник недоступен по правилам коммуникаций:'");
	Иначе
		ПерваяСтрока = НСтр("ru = 'Участники недоступны по правилам коммуникаций:'");
	КонецЕсли;
	
	НарушенияПоВидамУчастников = ПолучитьНарушенияПоВидамУчастников(Нарушения);
	
	СтрокиТаблицыHTML = Новый Массив;
	
	Для Каждого КлючИЗначение Из НарушенияПоВидамУчастников Цикл
		
		ВидУчастника = КлючИЗначение.Ключ;
		Участники = КлючИЗначение.Значение.Участники;
		Правила = КлючИЗначение.Значение.НарушенныеПравила;
		
		ТекстПравила = ?(Правила.Количество() = 1, НСтр("ru = 'по правилу коммуникаций'"), НСтр("ru = 'по правилам коммуникаций'"));
		
		Если Участники.Количество() = 1 Тогда
			
			ПолПредставлениеУчастника = ПолучитьПолПредставлениеУчастника(Участники[0]);
			ЭтоМужчина = ПолПредставлениеУчастника.ПолУчастника = ПредопределенноеЗначение(
				"Перечисление.ПолФизическогоЛица.Мужской") Или 
				Не ЗначениеЗаполнено(ПолПредставлениеУчастника.ПолУчастника);
			ТекстНедоступность = ?(ЭтоМужчина,
				НСтр("ru = 'недоступен'"),
				НСтр("ru = 'недоступна'"));
				
		Иначе
			
			ТекстНедоступность = НСтр("ru = 'недоступны'");
			
		КонецЕсли;
		
		ПредставлениеУчастниковHTML = ПредставлениеУчастниковHTML(Участники);
		
		ПравилаГиперссылками = Новый Массив;
		Для Каждого Правило Из Правила Цикл
			ПравилаГиперссылками.Добавить(ГиперссылкаНаОбъект(Правило));
		КонецЦикла;
		
		ТекстЯчейкиТаблицыHTML = СтрШаблон(ШаблонТекстаЯчейкиТаблицыHTML,
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(ВидУчастника),
			ПредставлениеУчастниковHTML,
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(ТекстНедоступность),
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(ТекстПравила),
			СтрСоединить(ПравилаГиперссылками, ", "));
		
		СтрокаТаблицыHTML = СтрШаблон(ШаблонСтрокиТаблицыHTML, ТекстЯчейкиТаблицыHTML);
		СтрокиТаблицыHTML.Добавить(СтрокаТаблицыHTML);
		
	КонецЦикла;
	
	Возврат СтрШаблон(ШаблонHTML, СтильHTML(), 
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(ПерваяСтрока), 
		СтрСоединить(СтрокиТаблицыHTML, Символы.ПС));
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПредставленияУчастниковНаСервере(ОтображаемыеУчастники)
	
	Результат = Новый Массив;
	Для Каждого Участник Из ОтображаемыеУчастники Цикл
		Результат.Добавить(РаботаСЗадачамиПовтИсп.ПредставлениеУчастника(Участник));
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПолучитьНарушенияПоВидамУчастников(Нарушения)
	
	Результат = Новый Соответствие;
	
	Для Каждого Нарушение Из Нарушения Цикл
		
		НарушенияПоВидуУчастника = Результат[Нарушение.ВидУчастника];
		
		Если НарушенияПоВидуУчастника = Неопределено Тогда
			НарушенияПоВидуУчастника = Новый Структура("Участники, НарушенныеПравила", Новый Массив, Новый Массив);
			Результат[Нарушение.ВидУчастника] = НарушенияПоВидуУчастника;
		КонецЕсли;
		
		// Участники должны и так быть уникальными так как попадают из Задачи.
		НарушенияПоВидуУчастника.Участники.Добавить(Нарушение.Участник);
		Если НарушенияПоВидуУчастника.НарушенныеПравила.Найти(Нарушение.Правило) = Неопределено Тогда
			НарушенияПоВидуУчастника.НарушенныеПравила.Добавить(Нарушение.Правило);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПредставлениеУчастниковHTML(Участники)
	
	Если Участники.Количество() = 1 Тогда
		ПолПредставлениеУчастника = ПолучитьПолПредставлениеУчастника(Участники[0]);
		ГиперссылкаНаОбъект(Участники[0], ПолПредставлениеУчастника.ПредставлениеУчастника);
		Возврат ГиперссылкаНаОбъект(Участники[0], ПолПредставлениеУчастника.ПредставлениеУчастника);
	КонецЕсли;
	
	КоличествоОтображаемыхУчастников = Мин(3, Участники.Количество());
	ОтображаемыеУчастники = Новый Массив;
	
	Для СчетчикОтображаемыхУчастников = 1 По КоличествоОтображаемыхУчастников Цикл
		ОтображаемыеУчастники.Добавить(Участники[СчетчикОтображаемыхУчастников - 1]);
	КонецЦикла;
	
	ПредставленияОтображаемыхУчастников = ПолучитьПредставленияУчастниковНаСервере(ОтображаемыеУчастники);
	
	ГиперссылкиНаУчастников = Новый Массив();
	Для СчетчикОтображаемыхУчастников = 1 По КоличествоОтображаемыхУчастников Цикл
		ИндексПозицииМассива = СчетчикОтображаемыхУчастников - 1;
		ГиперссылкиНаУчастников.Добавить(ГиперссылкаНаОбъект(Участники[ИндексПозицииМассива],
			ПредставленияОтображаемыхУчастников[ИндексПозицииМассива]));
	КонецЦикла;
	
	ПредставлениеУчастников = СтрСоединить(ГиперссылкиНаУчастников, ", ");
	
	Если Участники.Количество() > КоличествоОтображаемыхУчастников Тогда
		
		ПредставлениеУчастников = ПредставлениеУчастников
			+ РаботаС_HTML.ЗаменитьСпецСимволыHTML(СтрШаблон(НСтр("ru = ' и другие (всего %1)'"), Участники.Количество()));
		
	КонецЕсли;
	
	Возврат ПредставлениеУчастников;
	
КонецФункции

// Стиль HTML.
// 
// Возвращаемое значение:
//  Строка - Стиль HTML
&НаКлиенте
Функция СтильHTML()

	Возврат "<style type=""text/css"">
		|	body {
		|		overflow:    auto;
		|		margin-top:  2px;
		|		margin-left: 2px;
		|		margin-right: 2px;
		|		padding: 4px !important;
		|		font-family: Arial;
		|		font-size:   10pt;}
		|	table {
		|		width: 100%;
		|		max-width: 100%;
		|		font-family: Arial;
		|		font-size:   10pt;
		|		border: 0px solid;}
		| 	a:link {
		|		color: #006699; text-decoration: none;}
		|	a:visited {
		|		color: #006699; text-decoration: none;}
		|	a:hover {
		|		color: #006699; text-decoration: none;}
		|	td {vertical-align: top;}
		|	table.frame {
		|		border-collapse: collapse;
		|		border: 1px solid #C8C8C8;}
		|	td.frame {
		|		border: 1px solid #C8C8C8;}
		|</style>";
	
КонецФункции 

// Возвращает структуру с полом и представлением участника.
// 
// Параметры:
//  Участник - ОпределяемыйТип.УчастникЗадач - Участники задачи.
// 
// Возвращаемое значение:
//  Структура - Пол и представление участника:
// * ПолУчастника - ПеречислениеСсылка.ПолФизическогоЛица
// * ПредставлениеУчастника - Строка
&НаСервереБезКонтекста
Функция ПолучитьПолПредставлениеУчастника(Участник)
	
	Возврат Новый Структура("ПолУчастника, ПредставлениеУчастника",
		РаботаСЗадачамиПовтИсп.ПолУчастника(Участник),
		РаботаСЗадачамиПовтИсп.ПредставлениеУчастника(Участник));
	
КонецФункции

// Формирует гиперссылку html на объект системы, если представление не указано, формируется стандартное представление.
// 
// Параметры:
//  Объект - СправочникСсылка.ПравилаКоммуникаций, ОпределяемыйТип.УчастникЗадач - Объект
//  Представление - Строка, Неопределено - Представление
// 
// Возвращаемое значение:
//  Строка - Гиперссылка html на объект
&НаКлиенте
Функция ГиперссылкаНаОбъект(Объект, Представление = Неопределено)
	
	Если Не ЗначениеЗаполнено(Объект) Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат СтрШаблон("<a href=%1>%2</a>", ПолучитьНавигационнуюСсылку(Объект),
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(?(Представление = Неопределено, Строка(Объект), Представление)));
	
КонецФункции

#КонецОбласти
