
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		ЗаполнитьФорму();
	КонецЕсли;
	
	Элементы.ОграниченияУчастникРанг.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьРанги");
	Элементы.ОграниченияИнициаторРанг.Видимость = Элементы.ОграниченияУчастникРанг.Видимость;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьФорму(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьОбъект(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ПравилаКоммуникаций", Объект.Ссылка, ЭтотОбъект);
	
	Если НазначениеМодифицированность Тогда
		Оповестить("Запись_ПравилаКоммуникаций_Назначение", Объект.Ссылка, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НазначениеПриИзменении(Элемент)
	
	Если ЭтотОбъект[Элемент.Имя] = Неопределено Тогда
		ЭтотОбъект[Элемент.Имя] = НазначениеПоУмолчанию(Элемент.Имя, Элемент.ДоступныеТипы);
	ИначеЕсли ТипЗнч(ЭтотОбъект[Элемент.Имя]) = Тип("СписокЗначений") Тогда
		Список = ЭтотОбъект[Элемент.Имя];
		
		Индекс = Список.Количество();
		Пока Индекс > 0 Цикл
			Индекс = Индекс - 1;
			Если Не ЗначениеЗаполнено(Список[Индекс].Значение) Тогда
				Список.Удалить(Индекс);
			КонецЕсли;
		КонецЦикла;
		
		Если Список.Количество() = 0 Тогда
			ЭтотОбъект[Элемент.Имя] = НазначениеПоУмолчанию(Элемент.Имя, Элемент.ДоступныеТипы);
		ИначеЕсли Список.Количество() = 1 Тогда
			ЭтотОбъект[Элемент.Имя] = Список[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	НазначениеНастроить(Элемент.Имя);
	
	НазначениеМодифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ЭтотОбъект[Элемент.Имя])
			Или ТипЗнч(ЭтотОбъект[Элемент.Имя]) = Тип("СписокЗначений") Тогда
		
		СтандартнаяОбработка = Ложь;
		Если ТипЗнч(ЭтотОбъект[Элемент.Имя]) = Тип("СписокЗначений") Тогда
			Список = ЭтотОбъект[Элемент.Имя];
		Иначе
			Список = Новый СписокЗначений;
			Список.Добавить(ЭтотОбъект[Элемент.Имя]);
			Список.ТипЗначения = Новый ОписаниеТипов(Элемент.ДоступныеТипы);
		КонецЕсли;
		
		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("Список", Список);
		ПараметрыОткрытияФормы.Вставить("ТипЗначения", Элемент.ДоступныеТипы);
		ПараметрыОткрытияФормы.Вставить("СписокВыбора", Элемент.СписокВыбора);
		ПараметрыОткрытияФормы.Вставить("РежимВыбораИзСписка", Элемент.СписокВыбора.Количество() > 0);
		ПараметрыОткрытияФормы.Вставить("ПараметрыВыбора", Элемент.ПараметрыВыбора);
		
		ОткрытьФорму("ОбщаяФорма.СписокЗначений", ПараметрыОткрытияФормы, Элемент);
		
	Иначе
		
		Если Элемент.ВыбиратьТип Тогда
			Элемент.ОграничениеТипа = Элемент.ДоступныеТипы;
		КонецЕсли;
		
		Если Элемент.СписокВыбора.Количество() Тогда
			СтандартнаяОбработка = Ложь;
			ПоказатьВыборИзСписка(
				Новый ОписаниеОповещения("НазначениеОбработкаОповещения", ЭтотОбъект, Элемент.Имя),
				Элемент.СписокВыбора, Элемент);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		Если Элемент.ВыбиратьТип Тогда
			Элемент.ОграничениеТипа = Новый ОписаниеТипов();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначениеОбработкаОповещения(ВыбранноеЗначение, ИмяЭлемента) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		ЭтотОбъект[ИмяЭлемента] = ВыбранноеЗначение.Значение;
		НазначениеПриИзменении(Элементы[ИмяЭлемента]);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если Элемент.СписокВыбора.Количество() Тогда
		СтандартнаяОбработка = Ложь;
		
		Если Текст <> "" Тогда
			Подстрока = НРег(Текст);
			ДлинаПодстроки = СтрДлина(Подстрока);
			ЦветВыделения = Элементы.ГруппаОсновная.ЦветТекстаЗаголовка;
			
			ДанныеВыбора = Новый СписокЗначений;
			Для Каждого Выборка Из Элемент.СписокВыбора Цикл
				Если НРег(Лев(Выборка.Представление, ДлинаПодстроки)) = Подстрока Тогда
					//@skip-check new-font
					ДанныеВыбора.Добавить(Выборка.Значение, 
						Новый ФорматированнаяСтрока(
							Новый ФорматированнаяСтрока(
								Лев(Выборка.Представление, ДлинаПодстроки),
								Новый Шрифт(,, Истина),
								ЦветВыделения),
							Сред(Выборка.Представление, ДлинаПодстроки + 1)));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОграничения

&НаКлиенте
Процедура ОграниченияСтатусНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Префикс = ОграниченияПрефиксРеквизита(Элемент);
	ТекущиеДанные = Элементы.Ограничения.ТекущиеДанные;
	
	Значения = Новый Структура();
	Значения.Вставить("РежимРольТолькоЗначение", Префикс = "Инициатор");
	Значения.Вставить("Заголовок", Элемент.Заголовок);
	Значения.Вставить("РольЗначение", ТекущиеДанные[Префикс + "РольЗначение"]);
	
	Флажки = СтрРазделить(ТекущиеДанные[Префикс + "Статус"], ";", Ложь);
	Для Каждого Эл Из СписокУчастникСтатус Цикл
		Если Значения.РежимРольТолькоЗначение И Эл.Значение = "Роль" Тогда
			Значения.Вставить(Эл.Значение, ЗначениеЗаполнено(Значения.РольЗначение));
			Продолжить;
		КонецЕсли;
		
		Значения.Вставить(Эл.Значение,
			Флажки.Количество() = 0 Или Флажки.Найти(Эл.Значение) <> Неопределено);
	КонецЦикла;
	
	ОткрытьФорму("Справочник.ПравилаКоммуникаций.Форма.ВводТипаУчастника", Значения, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОграниченияСтатусОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		Модифицированность = Истина;
		
		ОграниченияСтатусВСтроку(
			ВыбранноеЗначение,
			Элементы.Ограничения.ТекущиеДанные,
			ОграниченияПрефиксРеквизита(Элемент),
			СписокУчастникСтатус);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОграниченияСтатусПриИзменении(Элемент)
	
	Префикс = ОграниченияПрефиксРеквизита(Элемент);
	ТекущиеДанные = Элементы.Ограничения.ТекущиеДанные;
	Если ТекущиеДанные[Префикс + "СтатусПредставление"] = "" Тогда
		ТекущиеДанные[Префикс + "Статус"] = "";
		ТекущиеДанные[Префикс + "РольЗначение"] = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОграниченияУчастникКонтейнерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Префикс = ОграниченияПрефиксРеквизита(Элемент);
	ТекущиеДанные = Элементы.Ограничения.ТекущиеДанные;
	
	Список = Новый СписокЗначений;
	Флажки = СтрРазделить(ТекущиеДанные[Префикс + "Иерархия"], ";", Ложь);
	Для Каждого Эл Из СписокПодразделениеИерархия Цикл
		Список.Добавить(Эл.Значение, Эл.Представление,
			Флажки.Количество() = 0 Или Флажки.Найти(Эл.Значение) <> Неопределено);
	КонецЦикла;
	
	ОткрытьФорму("Справочник.ПравилаКоммуникаций.Форма.ВводПодразделения",
		Новый Структура("Контейнер, Иерархия, Заголовок", ТекущиеДанные[Префикс + "Контейнер"], Список, Элемент.Заголовок),
		Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОграниченияУчастникКонтейнерОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		Модифицированность = Истина;
		
		Префикс = ОграниченияПрефиксРеквизита(Элемент);
		ТекущиеДанные = Элементы.Ограничения.ТекущиеДанные;
		ТекущиеДанные[Префикс + "Контейнер"] = ВыбранноеЗначение.Контейнер;
		ОграниченияКонтейнерВСтроку(ТекущиеДанные, Префикс, ВыбранноеЗначение.Иерархия);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОграниченияУчастникКонтейнерПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Ограничения.ТекущиеДанные;
	Если ТекущиеДанные.УчастникКонтейнерПредставление = "" Тогда
		ТекущиеДанные.УчастникИерархия = "";
		ТекущиеДанные.УчастникКонтейнер = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СериализацияДанных

&НаСервере
Процедура ЗаполнитьФорму(ТекущийОбъект = Неопределено)
	
	СписокУчастникСтатус.Очистить();
	СписокУчастникСтатус.Добавить("Сотрудник", НСтр("ru = 'Сотрудник'"));
	СписокУчастникСтатус.Добавить("Руководитель", НСтр("ru = 'Руководитель'"));
	СписокУчастникСтатус.Добавить("Роль", НСтр("ru = 'Роль'"));
	
	СписокПодразделениеИерархия.Очистить();
	СписокПодразделениеИерархия.Добавить("Текущее", НСтр("ru = 'Своё'"));
	СписокПодразделениеИерархия.Добавить("Вышестоящее", НСтр("ru = 'Первое вышестоящее'"));
	СписокПодразделениеИерархия.Добавить("Вышестоящие", НСтр("ru = 'Вышестоящие'"));
	СписокПодразделениеИерархия.Добавить("Подчиненное", НСтр("ru = 'Прямые подчиненные'"));
	СписокПодразделениеИерархия.Добавить("Подчиненные", НСтр("ru = 'Подчиненные'"));
	СписокПодразделениеИерархия.Добавить("Соседи", НСтр("ru = 'Остальные'"));
	
	Если ТекущийОбъект = Неопределено Тогда
		ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	Действует = Не ТекущийОбъект.Недействительно;
	
	Для Каждого ИмяПоля Из СтрРазделить("Предмет,Вид,Позиция,Этап", ",") Цикл
		ТЗ = ТекущийОбъект.Назначение.Выгрузить(, ИмяПоля);
		ТЗ.Свернуть(ИмяПоля);
		Если ТЗ.Количество() = 1 Тогда
			ЭтотОбъект[ИмяПоля] = ТЗ[0][0];
		ИначеЕсли ТЗ.Количество() Тогда
			ЭтотОбъект[ИмяПоля] = Новый СписокЗначений;
			ЭтотОбъект[ИмяПоля].ЗагрузитьЗначения(ТЗ.ВыгрузитьКолонку(0));
		КонецЕсли;
		Элементы[ИмяПоля].ДоступныеТипы = Новый ОписаниеТипов(ТЗ.Колонки[ИмяПоля].ТипЗначения);
	КонецЦикла;
	
	Ограничения.Очистить();
	Для Каждого Строка Из ТекущийОбъект.Ограничения.НайтиСтроки(Новый Структура("Служебная", Ложь)) Цикл
		
		ПараметрыОтбораСтрок = Новый Структура("Служебная,КлючСтроки", Истина, Строка.НомерСтроки);
		Для Каждого Служебная Из ТекущийОбъект.Ограничения.НайтиСтроки(ПараметрыОтбораСтрок) Цикл
			Если Служебная.УчастникРоль Тогда
				Строка.УчастникРоль = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Запись = Ограничения.Добавить();
		
		Для Каждого ИмяГруппы Из СтрРазделить("Инициатор,Участник", ",") Цикл
			Запись[ИмяГруппы + "Контейнер"] = Строка[ИмяГруппы + "Контейнер"];
			ОграниченияСтатусВСтроку(Строка, Запись, ИмяГруппы, СписокУчастникСтатус, ИмяГруппы);
		КонецЦикла;
		
		Для Каждого Эл Из СписокПодразделениеИерархия Цикл
			Эл.Пометка = Строка["УчастникИерархия" + Эл.Значение];
		КонецЦикла;
		ОграниченияКонтейнерВСтроку(Запись, "Участник", СписокПодразделениеИерархия);
								
		Для Каждого ИмяПоля Из СтрРазделить("ИнициаторРанг,УчастникРанг", ",") Цикл
			Если Строка[ИмяПоля + "С"] = -1 И Строка[ИмяПоля + "ПО"] = 999 Тогда
				Продолжить;
			КонецЕсли;
			
			Значения = Новый Массив;
			Если Строка[ИмяПоля + "С"] = -1 Тогда
				Значения.Добавить(" ");
			Иначе
				Значения.Добавить(Формат(Строка[ИмяПоля + "С"], "ЧЦ=1; ЧН=0"));
			КонецЕсли;
			Если Строка[ИмяПоля + "ПО"] = 999 Тогда
				Значения.Добавить(" ");
			Иначе
				Значения.Добавить(Формат(Строка[ИмяПоля + "ПО"], "ЧЦ=1; ЧН=0"));
			КонецЕсли;
			
			Запись[ИмяПоля] = СтрСоединить(Значения, "-");
		КонецЦикла;
		
	КонецЦикла;
	
	НазначениеНастроить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОбъект(ТекущийОбъект)
	
	Если ПустаяСтрока(ТекущийОбъект.Наименование) Тогда
		СтрокиНаименования = Новый Массив;	
	КонецЕсли;
	
	ТекущийОбъект.Недействительно = Не Действует;
	
	ТекущийОбъект.Назначение.Очистить();
	Запись = ТекущийОбъект.Назначение.Добавить();
	
	Для Каждого ИмяПоля Из СтрРазделить("Предмет,Вид,Позиция,Этап", ",") Цикл
		Если Не ЗначениеЗаполнено(ЭтотОбъект[ИмяПоля]) Тогда
			Продолжить;
			
		ИначеЕсли ТипЗнч(ЭтотОбъект[ИмяПоля]) <> Тип("СписокЗначений") Тогда
			Для Каждого Строка Из ТекущийОбъект.Назначение Цикл
				Строка[ИмяПоля] = ЭтотОбъект[ИмяПоля];
			КонецЦикла;
			
		Иначе
			Счетчик = 0;
			Для Каждого Элемент Из ЭтотОбъект[ИмяПоля] Цикл
				Если Не ЗначениеЗаполнено(Элемент.Значение)
						Или ЭтотОбъект[ИмяПоля].НайтиПоЗначению(Элемент.Значение) <> Элемент Тогда
					Продолжить;
				КонецЕсли;
				Счетчик = Счетчик + 1;
				
				Если Счетчик = 1 Тогда
					Для Каждого Строка Из ТекущийОбъект.Назначение Цикл
						Строка[ИмяПоля] = Элемент.Значение;
					КонецЦикла;
				Иначе
					Для Каждого Строка Из ТекущийОбъект.Назначение.НайтиСтроки(Новый Структура("Использование", Ложь)) Цикл
						Запись = ТекущийОбъект.Назначение.Добавить();
						ЗаполнитьЗначенияСвойств(Запись, Строка);
						Запись[ИмяПоля] = Элемент.Значение;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если СтрокиНаименования <> Неопределено Тогда
			СтрокиНаименования.Добавить(Строка(ЭтотОбъект[ИмяПоля]));
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(СтрокиНаименования) Тогда
		ТекущийОбъект.Наименование = СтрСоединить(СтрокиНаименования, " + ");
	КонецЕсли;
	
	ТекущийОбъект.Ограничения.Очистить();
	Для Каждого Строка Из Ограничения Цикл
		Запись = ТекущийОбъект.Ограничения.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Строка);
		
		Для Каждого Поле Из СписокУчастникСтатус Цикл
			Запись["Инициатор" + Поле.Значение] =
				Строка.ИнициаторСтатус = "" И Поле.Значение <> "Роль" Или СтрНайти(Строка.ИнициаторСтатус, Поле.Значение);
			Запись["Участник" + Поле.Значение] =
				Строка.УчастникСтатус = "" Или СтрНайти(Строка.УчастникСтатус, Поле.Значение);
		КонецЦикла;
		
		Для Каждого Поле Из СписокПодразделениеИерархия Цикл
			Запись["УчастникИерархия" + Поле.Значение] =
				Строка.УчастникИерархия = "" Или СтрНайти(Строка.УчастникИерархия, Поле.Значение);
		КонецЦикла;
		
		Для Каждого ИмяПоля Из СтрРазделить("ИнициаторРанг,УчастникРанг", ",") Цикл
			Значения = СтрРазделить(Строка[ИмяПоля], "-");
			Если ПустаяСтрока(Значения[0]) Тогда
				Запись[ИмяПоля + "С"] = -1;
			Иначе
				Попытка
					Запись[ИмяПоля + "С"] = Число(Значения[0]);
				Исключение
					Запись[ИмяПоля + "С"] = -1;
				КонецПопытки;
			КонецЕсли;
			Если Значения.Количество() = 1 Или ПустаяСтрока(Значения[1])
					Или СокрЛП(Значения[1]) = "0" И Запись[ИмяПоля + "С"] > 0
					Или СокрЛП(Значения[1]) = "9" Тогда
				Запись[ИмяПоля + "ПО"] = 999;
			Иначе
				Попытка
					Запись[ИмяПоля + "ПО"] = Число(Значения[1]);
				Исключение
					Запись[ИмяПоля + "ПО"] = 999;
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Назначение

&НаСервере
Процедура НазначениеНастроить(ЭлементИмя = Неопределено)
	
	Если ЭлементИмя <> Неопределено Тогда
		Элемент = Элементы[ЭлементИмя];
	КонецЕсли;
	
	Если Элемент = Неопределено Или Элемент.Имя = "Предмет" Тогда
		Если Предмет = ПредопределенноеЗначение("Перечисление.ПравилаКоммуникацийПредметы.Документ") Тогда
			Элементы.Вид.ДоступныеТипы = Новый ОписаниеТипов(
				"СправочникСсылка.ВидыДокументов, СправочникСсылка.ТематикиДокументов");
		ИначеЕсли Предмет = ПредопределенноеЗначение("Перечисление.ПравилаКоммуникацийПредметы.Задача") Тогда
			Элементы.Вид.ДоступныеТипы = Новый ОписаниеТипов(
				"СправочникСсылка.ВидыЗадач");
		ИначеЕсли Предмет = ПредопределенноеЗначение("Перечисление.ПравилаКоммуникацийПредметы.Мероприятие") Тогда
			Элементы.Вид.ДоступныеТипы = Новый ОписаниеТипов(
				"СправочникСсылка.ВидыМероприятий");
		Иначе
			Элементы.Вид.ДоступныеТипы = Новый ОписаниеТипов(
				"СправочникСсылка.ВидыДокументов,
				|СправочникСсылка.ТематикиДокументов,
				|СправочникСсылка.ВидыЗадач,
				|СправочникСсылка.ВидыМероприятий");
		КонецЕсли;
		Вид = НазначениеПривестиЗначение("Вид", Элементы.Вид.ДоступныеТипы, Вид);
		
		ПараметрВыбора = Новый ПараметрВыбора(
			"Отбор.Ссылка",
			Справочники.ПравилаКоммуникаций.ПоддерживаемыеВидыПредметов(Предмет));
		
		Элементы.Вид.ПараметрыВыбора =
			Новый ФиксированныйМассив(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрВыбора));
			
		Справочники.ПравилаКоммуникаций.НастроитьПолеПозиции(ЭтотОбъект);
	КонецЕсли;
	
	Если Элемент = Неопределено Или Элемент.Имя = "Вид" Тогда
		Справочники.ПравилаКоммуникаций.НастроитьПолеПозиции(ЭтотОбъект);
	КонецЕсли;
	
	Если Элемент = Неопределено Или Элемент.Имя = "Предмет" Или Элемент.Имя = "Позиция" Тогда
		Элементы.Этап.Доступность = НазначениеДоступенЭтап(Предмет, Позиция);
		Если Элементы.Этап.Доступность Тогда
			Если Элементы.Этап.СписокВыбора.Количество() = 0 Тогда
				Для Каждого Выборка Из РаботаСЭтапамиВызовСервера.ДанныеВыбора("", Неопределено, Новый Массив) Цикл
					ЗаполнитьЗначенияСвойств(Элементы.Этап.СписокВыбора.Добавить(), Выборка);
				КонецЦикла;		
			КонецЕсли;
		Иначе
			Этап = НазначениеПоУмолчанию("Этап", Элементы.Этап.ДоступныеТипы);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НазначениеДоступенЭтап(Предмет, Позиция)
	
	Возврат Предмет <> Перечисления.ПравилаКоммуникацийПредметы.Задача
			И (ЗначениеЗаполнено(Позиция)
				И (Позиция = Перечисления.ФункцииУчастниковСогласования.Согласующий
					Или Позиция = Перечисления.ФункцииУчастниковПодписания.Подписывающий
					Или (ТипЗнч(Позиция) = Тип("СписокЗначений")
							И (Позиция.НайтиПоЗначению(Перечисления.ФункцииУчастниковСогласования.Согласующий) <> Неопределено
								Или Позиция.НайтиПоЗначению(Перечисления.ФункцииУчастниковПодписания.Подписывающий) <> Неопределено))));
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НазначениеПоУмолчанию(ИмяПоля, ТипЗначения)
	
	Если ИмяПоля = "Позиция" Тогда
		Возврат ПредопределенноеЗначение("Перечисление.ПравилаКоммуникацийПредметы.ПустаяСсылка");
	ИначеЕсли ИмяПоля = "Вид" Тогда
		Возврат ПредопределенноеЗначение("Справочник.ВидыДокументов.ПустаяСсылка");
	ИначеЕсли ТипЗначения.Типы().Количество() > 1 Тогда
		Возврат Новый(ТипЗначения.Типы()[0]);
	Иначе
		Возврат ТипЗначения.ПривестиЗначение();
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НазначениеПривестиЗначение(ИмяПоля, ТипЗначения, Значение)
	
	Если ТипЗнч(Значение) = Тип("СписокЗначений") Тогда
		Результат = Новый СписокЗначений;
		Для Каждого Элемент Из Значение Цикл
			ТекЗначение = ТипЗначения.ПривестиЗначение(Элемент.Значение);
			Если Элемент.Значение = ТекЗначение Тогда
				Результат.Добавить(ТекЗначение);
			ИначеЕсли ЗначениеЗаполнено(ТекЗначение) Тогда
				Результат.Добавить(ТекЗначение);
			КонецЕсли;
		КонецЦикла;
		
		Если Результат.Количество() Тогда
			Возврат Результат;
		Иначе
			Возврат НазначениеПоУмолчанию(ИмяПоля, ТипЗначения)
		КонецЕсли;
	Иначе
		Возврат ТипЗначения.ПривестиЗначение(Значение);		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область Ограничения

&НаКлиентеНаСервереБезКонтекста
Процедура ОграниченияСтатусВСтроку(Значения, ТекущиеДанные, ИмяГруппы, СписокУчастникСтатус, ИмяГруппыЗначений = "")
	
	РольЗначение = Значения[ИмяГруппыЗначений + "РольЗначение"];
	
	Флажки = Новый Массив;
	Представления = Новый Массив;
	
	Для Каждого ЭлементСписка Из СписокУчастникСтатус Цикл
		Если Значения[ИмяГруппыЗначений + ЭлементСписка.Значение] Тогда
			Флажки.Добавить(ЭлементСписка.Значение);
			
			Если ЭлементСписка.Значение = "Роль" И ЗначениеЗаполнено(РольЗначение) Тогда
				Продолжить;
			КонецЕсли;
			
			Представления.Добавить(ЭлементСписка.Представление);
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(РольЗначение) Тогда
		Представления.Добавить(Строка(РольЗначение));
	ИначеЕсли ИмяГруппы = "Инициатор" Тогда
		Если Флажки.Количество() = (СписокУчастникСтатус.Количество() - 1) Тогда
			Флажки.Очистить();
			Представления.Очистить();
		КонецЕсли;
	ИначеЕсли Флажки.Количество() = 0 Тогда
		Флажки.Добавить("-");
		Представления.Добавить(НСтр("ru = 'Никого'"));
	ИначеЕсли Флажки.Количество() = СписокУчастникСтатус.Количество() Тогда
		Флажки.Очистить();
		Представления.Очистить();
	КонецЕсли;
	
	ТекущиеДанные[ИмяГруппы + "Статус"] = СтрСоединить(Флажки, ";");
	ТекущиеДанные[ИмяГруппы + "СтатусПредставление"] = СтрСоединить(Представления, "; ");
	ТекущиеДанные[ИмяГруппы + "РольЗначение"] = РольЗначение;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОграниченияКонтейнерВСтроку(ТекущиеДанные, ИмяГруппы, Список)
	
	Контейнер = ТекущиеДанные[ИмяГруппы + "Контейнер"];
	
	Флажки = Новый Массив;
	Представления = Новый Массив;
	
	Если Не ЗначениеЗаполнено(Контейнер)
		Или ТипЗнч(Контейнер) = Тип("СправочникСсылка.ВидыПодразделений") Тогда
		
		Для Каждого Эл Из Список Цикл
			Если Эл.Пометка Тогда
				Флажки.Добавить(Эл.Значение);
				Представления.Добавить(Эл.Представление);
			КонецЕсли;
		КонецЦикла;
		Если Флажки.Количество() = Список.Количество() Тогда
			Флажки.Очистить();
			Представления.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	ТекущиеДанные[ИмяГруппы + "Иерархия"] = СтрСоединить(Флажки, ";");
	ТекущиеДанные[ИмяГруппы + "КонтейнерПредставление"] = СтрСоединить(Представления, "; ");
	
	Если ЗначениеЗаполнено(Контейнер) Тогда
		Если Флажки.Количество() Тогда
			ТекущиеДанные[ИмяГруппы + "КонтейнерПредставление"] = СтрШаблон("%1 %2 (%3)",
				Строка(Контейнер),
				НСтр("ru = 'ИЗ'"),
				СтрСоединить(Представления, "; "));
		Иначе
			ТекущиеДанные[ИмяГруппы + "КонтейнерПредставление"] = Строка(Контейнер);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ОграниченияПрефиксРеквизита(Элемент)
	
	Возврат ?(СтрНайти(Элемент.Имя, "Инициатор"), "Инициатор", "Участник");
	
КонецФункции

#КонецОбласти

#КонецОбласти