
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УзелКОД = Параметры.ТекущийУзел;
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФайлы(ТекУзелКОД, ТаблЗнач)
	
	ВидТранспорта = Перечисления.ВидыТранспортаКОД.ОбщийКаталог;
	ОбщийКаталог = "";
	
	Запись = РегистрыСведений.НастройкиТранспортаКОД.СоздатьМенеджерЗаписи();
	Запись.Узел = ТекУзелКОД;
	Запись.Прочитать();
	
	Если Запись.Выбран() Тогда
		ВидТранспорта = Запись.ВидТранспорта;
		Настройки = Запись.Настройки.Получить();
		Если ТипЗнч(Настройки) = Тип("Структура") Тогда
			Настройки.Свойство("ОбщийКаталог", ОбщийКаталог);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбщийКаталог) Тогда
		
		Каталог = Новый Файл(ОбщийКаталог);
		Если Каталог.Существует() Тогда
	
			// от нашего узла к другому
			МаскаФайлов = "*.json";
			МассивФайлов = НайтиФайлы(ОбщийКаталог, МаскаФайлов, Ложь);
			Если МассивФайлов.Количество() = 0 Тогда
				ФайлыИКаталоги = НайтиФайлы(ОбщийКаталог, "*.*", Ложь);
				Для Каждого ФайлИлиКаталог Из ФайлыИКаталоги Цикл
					Если ФайлИлиКаталог.ЭтоКаталог()
						И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ФайлИлиКаталог.Имя) Тогда
						МассивФайловКаталога = НайтиФайлы(ФайлИлиКаталог.ПолноеИмя, МаскаФайлов, Ложь);
						ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивФайлов, МассивФайловКаталога);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			Для Каждого Файл Из МассивФайлов Цикл
				
				Попытка
				
					НовСтр = ТаблЗнач.Добавить();
					НовСтр.Наименование = Файл.Имя;
					НовСтр.Размер = Файл.Размер();
					НовСтр.Дата = Файл.ПолучитьУниверсальноеВремяИзменения();
					НовСтр.ДатаМестная = МестноеВремя(НовСтр.Дата);
					
				Исключение	 // файл могли уже переместить
				КонецПопытки;
				
			КонецЦикла;	
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	ЭтотУзел = Справочники.УзлыКОД.ЭтотУзел;
	
	ТаблЗнач = РеквизитФормыВЗначение("ТаблицаФайлы");
	ТаблЗнач.Очистить();
	
	Если УзелКОД <> ЭтотУзел Тогда  
		
		ЗаполнитьФайлы(УзелКОД, ТаблЗнач);
	
	Иначе
			
		Если КОДСервер.ЭтоЦентральныйУзел() Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	УзлыКОД.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.УзлыКОД КАК УзлыКОД
				|ГДЕ
				|	УзлыКОД.ПометкаУдаления = ЛОЖЬ
				|	И УзлыКОД.НеОтправлятьДанные = ЛОЖЬ
				|	И УзлыКОД.НеПолучатьДанные = ЛОЖЬ
				|	И УзлыКОД.Ссылка <> &ТекСсылка";
			
			Запрос.УстановитьПараметр("ТекСсылка", ЭтотУзел);
			
			МассивУзловКОД = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			
			Для Каждого УзелПлана Из МассивУзловКОД Цикл
				ЗаполнитьФайлы(УзелПлана, ТаблЗнач);
			КонецЦикла;	
		
		КонецЕсли;	
		
	КонецЕсли;	
	
	Если ТаблЗнач.Количество() <> 0 Тогда
		
		РазмерФайлов = 0;
		Для Каждого Стр Из ТаблЗнач Цикл
			
			РазмерФайлов = РазмерФайлов + Стр.Размер;
			
		КонецЦикла;	
		
		ИтогРазмер = РазмерФайлов;
		
		ТаблЗнач.Сортировать("Дата Убыв"); // самый новый
		ДатаСамаяНовая = ТаблЗнач[0].Дата;
		Наименование_ДатаСамаяНовая = ТаблЗнач[0].Наименование;
		
		ТаблЗнач.Сортировать("Дата"); // самый старый
		ДатаСамаяСтарая = ТаблЗнач[0].Дата;
		Наименование_ДатаСамаяСтарая = ТаблЗнач[0].Наименование;
		
		ТаблЗнач.Сортировать("Размер Убыв"); // самый большой
		РазмерСамыйБольшой = ТаблЗнач[0].Размер;
		Наименование_РазмерСамыйБольшой = ТаблЗнач[0].Наименование;
		
		Инфо = СтрШаблон(
			НСтр("ru = 'Файлов всего %1 шт, общий размер %2.
			|Самый большой файл: %3 (%4).
			|Самый старый файл: %5 (%6).
			|Самый новый файл:  %7 (%8).'"), 
			ТаблЗнач.Количество(), РаботаСоСтроками.ПолучитьРазмерСтрокой(РазмерФайлов),
			Наименование_РазмерСамыйБольшой, РаботаСоСтроками.ПолучитьРазмерСтрокой(РазмерСамыйБольшой),
			Наименование_ДатаСамаяСтарая, ДатаСамаяСтарая, 
			Наименование_ДатаСамаяНовая, ДатаСамаяНовая
		);
		
	КонецЕсли;		
	
		
	ТаблЗнач.Сортировать("Дата");
	ЗначениеВРеквизитФормы(ТаблЗнач, "ТаблицаФайлы");
	
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоДате(Команда)
	СортироватьПоДатеНаСервере();
КонецПроцедуры

&НаСервере
Процедура СортироватьПоДатеНаСервере()
	
	ТаблЗнач = РеквизитФормыВЗначение("ТаблицаФайлы");
	ТаблЗнач.Сортировать("Дата");
	ЗначениеВРеквизитФормы(ТаблЗнач, "ТаблицаФайлы");
	
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоРазмеру(Команда)
	СортироватьПоРазмеруНаСервере();
КонецПроцедуры

&НаСервере
Процедура СортироватьПоРазмеруНаСервере()
	
	ТаблЗнач = РеквизитФормыВЗначение("ТаблицаФайлы");
	ТаблЗнач.Сортировать("Размер");
	ЗначениеВРеквизитФормы(ТаблЗнач, "ТаблицаФайлы");
	
КонецПроцедуры
