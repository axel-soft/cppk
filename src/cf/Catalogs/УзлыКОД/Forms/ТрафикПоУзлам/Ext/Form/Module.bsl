
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекДата = НачалоДня(ТекущаяУниверсальнаяДата());
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФайлы(ТекУзелКОД, ТаблЗнач, НовСтр)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ИсторияКОД.Размер), 0) КАК Размер
		|ИЗ
		|	РегистрСведений.ИсторияКОД КАК ИсторияКОД
		|ГДЕ
		|	ИсторияКОД.Направление = &Направление
		|	И ИсторияКОД.УниверсальнаяДатаВМиллисекундах МЕЖДУ &УниверсальнаяДатаВМиллисекундахНач И &УниверсальнаяДатаВМиллисекундахКон
		|	И ИсторияКОД.Узел = &Узел";
	
	Запрос.УстановитьПараметр("Узел", ТекУзелКОД);
	
	УниверсальнаяДатаВМиллисекундахНач = ОбщегоНазначенияДокументооборот.ДатаВМиллисекундах(НачалоДня(ТекДата));
	УниверсальнаяДатаВМиллисекундахКон = ОбщегоНазначенияДокументооборот.ДатаВМиллисекундах(КонецДня(ТекДата));
	
	Запрос.УстановитьПараметр("УниверсальнаяДатаВМиллисекундахНач", УниверсальнаяДатаВМиллисекундахНач);
	Запрос.УстановитьПараметр("УниверсальнаяДатаВМиллисекундахКон", УниверсальнаяДатаВМиллисекундахКон);
	Запрос.УстановитьПараметр("Направление", Перечисления.НаправленияПотоковКОД.Отправка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	РазмерОтправка = Выборка.Размер;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ИсторияКОД.Размер), 0) КАК Размер
		|ИЗ
		|	РегистрСведений.ИсторияКОД КАК ИсторияКОД
		|ГДЕ
		|	ИсторияКОД.Направление = &Направление
		|	И ИсторияКОД.УниверсальнаяДатаВМиллисекундах МЕЖДУ &УниверсальнаяДатаВМиллисекундахНач И &УниверсальнаяДатаВМиллисекундахКон
		|	И ИсторияКОД.Узел = &Узел";
	
	Запрос.УстановитьПараметр("Узел", ТекУзелКОД);
	
	Запрос.УстановитьПараметр("УниверсальнаяДатаВМиллисекундахНач", УниверсальнаяДатаВМиллисекундахНач);
	Запрос.УстановитьПараметр("УниверсальнаяДатаВМиллисекундахКон", УниверсальнаяДатаВМиллисекундахКон);
		
	Запрос.УстановитьПараметр("Направление", Перечисления.НаправленияПотоковКОД.Получение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	РазмерПриемка = Выборка.Размер;
	
	НовСтр = ТаблЗнач.Добавить();
	НовСтр.РазмерПринято = РазмерПриемка;
	НовСтр.РазмерПринятоСтрока = РаботаСоСтроками.ПолучитьРазмерСтрокой(РазмерПриемка);
	НовСтр.РазмерОтправлено = РазмерОтправка;
	НовСтр.РазмерОтправленоСтрока = РаботаСоСтроками.ПолучитьРазмерСтрокой(РазмерОтправка);
	НовСтр.Узел = ТекУзелКОД;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	ЭтотУзел = Справочники.УзлыКОД.ЭтотУзел;
	
	ТаблЗнач = РеквизитФормыВЗначение("ТаблицаФайлы");
	ТаблЗнач.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УзлыКОД.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.УзлыКОД КАК УзлыКОД
		|ГДЕ
		|	УзлыКОД.ПометкаУдаления = ЛОЖЬ
		|	И УзлыКОД.НеОтправлятьДанные = ЛОЖЬ
		|	И УзлыКОД.НеПолучатьДанные = ЛОЖЬ
		|	И УзлыКОД.Ссылка <> &ТекСсылка";
	
	Запрос.УстановитьПараметр("ТекСсылка", ЭтотУзел);
	
	МассивУзловКОД = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Для Каждого УзелПлана Из МассивУзловКОД Цикл
		
		НовСтр = Неопределено;
		ЗаполнитьФайлы(УзелПлана, ТаблЗнач, НовСтр);
		
	КонецЦикла;	
	
	РазмерФайловОтправлено = 0;
	РазмерФайловПринято = 0;
	
	Для Каждого Стр Из ТаблЗнач Цикл
		
		РазмерФайловПринято = РазмерФайловПринято + Стр.РазмерПринято;
		РазмерФайловОтправлено = РазмерФайловОтправлено + Стр.РазмерОтправлено;
		
	КонецЦикла;	
	ИтогРазмерПринято = РаботаСоСтроками.ПолучитьРазмерСтрокой(РазмерФайловПринято);
	ИтогРазмерОтправлено = РаботаСоСтроками.ПолучитьРазмерСтрокой(РазмерФайловОтправлено);
	
	ТаблЗнач.Сортировать("Узел");
	ЗначениеВРеквизитФормы(ТаблЗнач, "ТаблицаФайлы");
	
	
	// Заполняем гистограмму
	Диаграмма.Обновление = Ложь;
	
	Диаграмма.АвтоМаксимальноеЗначение	= Ложь;
	Диаграмма.АвтоМинимальноеЗначение	= Ложь;
	Диаграмма.МаксимальноеЗначение		= 1;
	Диаграмма.МинимальноеЗначение		= 0;
	Диаграмма.БазовоеЗначение			= 0;
	Диаграмма.ПропускатьБазовоеЗначение	= Истина;
	
	Диаграмма.Очистить();
	Элементы.Диаграмма.Заголовок = НСтр("ru= 'Трафик обмена (Мб) по узлам'");
	
	Серия = Диаграмма.Серии.Добавить(НСтр("ru= 'Получено'"));
	Серия.Текст = НСтр("ru= 'Получено'");
	Серия.Цвет = WebЦвета.Древесный;
	
	Серия = Диаграмма.Серии.Добавить(НСтр("ru= 'Отправлено'"));
	Серия.Текст = НСтр("ru= 'Отправлено'");
	Серия.Цвет = WebЦвета.БледноСиреневый;
	
	ЕстьДанные = Ложь;
	
	Для Каждого Строка Из ТаблЗнач Цикл
		
		ЕстьДанные = Истина;
	
		Точка = Диаграмма.Точки.Добавить(НСтр("ru= 'Данные'"));
		Точка.Текст = Строка.Узел;
		Точка.Значение = Строка.Узел;
		
		Для Каждого Серия Из Диаграмма.Серии Цикл
			
			Если Серия.Текст = НСтр("ru= 'Получено'") Тогда
				// тут размер полученного
				ЗначениеТочки = ФайловыеФункцииКлиентСервер.ПолучитьСтрокуСРазмеромФайла(
					Строка.РазмерПринято / (1024 * 1024));
				Диаграмма.УстановитьЗначение(Точка, Серия, ЗначениеТочки, , 
					НСтр("ru= 'Получено'"));
			КонецЕсли;	
			
			Если Серия.Текст = НСтр("ru= 'Отправлено'") Тогда
				// тут размер отправленного
				ЗначениеТочки = ФайловыеФункцииКлиентСервер.ПолучитьСтрокуСРазмеромФайла(
					(Строка.РазмерОтправлено) / (1024 * 1024));
				Диаграмма.УстановитьЗначение(Точка, Серия, ЗначениеТочки, , 
					НСтр("ru= 'Отправлено'"));
			КонецЕсли;	
			
		КонецЦикла;
		
	КонецЦикла;
	
	Диаграмма.ТипДиаграммы = ТипДиаграммы.ГистограммаОбъемная;
	Диаграмма.ПоложениеПодписей = ПоложениеПодписейКДиаграмме.КрайВнутри;
	Диаграмма.ОтображатьЛегенду = Истина;
	
	Диаграмма.ВидПодписей = ВидПодписейКДиаграмме.Значение;
	
	Диаграмма.Обновление = Истина;
	
	
КонецПроцедуры
