#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Наименование");
	Поля.Добавить("НоменклатураДел")
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Индекс = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Данные.НоменклатураДел, "Индекс");
	Представление = СокрЛП(Индекс) + " " + СокрЛП(Данные.Наименование);
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Обложка дела
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Справочник.ДелаХраненияДокументов";
	КомандаПечати.Идентификатор = "Обложка";
	КомандаПечати.Представление = НСтр("ru = 'Обложка дела'");
	
	// Внутренняя опись
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Справочник.ДелаХраненияДокументов";
	КомандаПечати.Идентификатор = "ВнутренняяОпись";
	КомандаПечати.Представление = НСтр("ru = 'Внутренняя опись'");
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ФормаДокументов", Перечисления.ВариантыФормДокументов.Бумажная);
	
	// Реестр электронных документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Справочник.ДелаХраненияДокументов";
	КомандаПечати.Идентификатор = "РеестрЭД";
	КомандаПечати.Представление = НСтр("ru = 'Реестр ЭД'");
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ФормаДокументов", Перечисления.ВариантыФормДокументов.Электронная);
	
	// Карта-заместитель
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Справочник.ДелаХраненияДокументов";
	КомандаПечати.Идентификатор = "КартаЗаместитель";
	КомандаПечати.Представление = НСтр("ru = 'Карта-заместитель'");
	
	// Лист-заверитель
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Справочник.ДелаХраненияДокументов";
	КомандаПечати.Идентификатор = "ЛистЗаверитель";
	КомандаПечати.Представление = НСтр("ru = 'Лист-заверитель'");
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Обложка");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"Обложка",
			НСтр("ru = 'Обложка дела'"),
			ПечатьОбложки(МассивОбъектов, ОбъектыПечати),
			,
			"Справочник.ДелаХраненияДокументов.ПФ_MXL_Обложка");
	КонецЕсли;
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВнутренняяОпись");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ВнутренняяОпись",
			НСтр("ru = 'Внутренняя опись'"),
			ПечатьВнутреннейОписи(МассивОбъектов, ОбъектыПечати),
			,
			"Справочник.ДелаХраненияДокументов.ПФ_MXL_ВнутренняяОпись");
	КонецЕсли;
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрЭД");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РеестрЭД",
			НСтр("ru = 'Реестр электронных документов'"),
			ПечатьРеестраЭД(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),
			,
			"Справочник.ДелаХраненияДокументов.ПФ_MXL_РеестрЭД");
	КонецЕсли;
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КартаЗаместитель");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"КартаЗаместитель",
			НСтр("ru = 'Карта-заместитель'"),
			ПечатьКартыЗаместителя(МассивОбъектов, ОбъектыПечати),
			,
			"Справочник.ДелаХраненияДокументов.ПФ_MXL_КартаЗаместитель");
	КонецЕсли;
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЛистЗаверитель");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЛистЗаверитель",
			НСтр("ru = 'Лист-заверитель'"),
			ПечатьЛистаЗаверителя(МассивОбъектов, ОбъектыПечати),
			,
			"Справочник.ДелаХраненияДокументов.ПФ_MXL_ЛистЗаверитель");
	КонецЕсли;
	
КонецПроцедуры

// Формирует печатную форму обложки дела.
//
// Параметры:
//   МассивОбъектов - Массив - Массив ссылок на объекты которые нужно распечатать.
//   ОбъектыПечати - СписокЗначений - список объектов печати.
//
// Возвращаемое значение:
//  ТабличныйДокумент - ТабличныйДокумент - печатная форма.
//
Функция ПечатьОбложки(МассивОбъектов, ОбъектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ОбложкаДела";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.ДелаХраненияДокументов.ПФ_MXL_Обложка");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Дела.НомерТома КАК НомерТома,
	|	СпрНоменклатура.Индекс КАК НомерДела,
	|	Дела.ПолноеНаименование КАК ЗаголовокДела,
	|	СпрНоменклатура.СрокХранения КАК СрокХранения,
	|	Дела.ДатаНачала КАК ДатаНачала,
	|	Дела.ДатаОкончания КАК ДатаОкончания,
	|	Дела.КоличествоЛистов КАК КоличествоЛистов,
	|	Дела.Организация КАК Организация,
	|	Дела.Подразделение КАК Подразделение,
	|	СпрНоменклатура.ГрифДоступа КАК ГрифДоступа
	|ИЗ
	|	Справочник.ДелаХраненияДокументов КАК Дела
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураДел КАК СпрНоменклатура
	|		ПО Дела.НоменклатураДел = СпрНоменклатура.Ссылка
	|ГДЕ
	|	Дела.Ссылка В(&Ссылки)";
	
	Запрос.УстановитьПараметр("Ссылки", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьОбложка = Макет.ПолучитьОбласть("Обложка");
	ТабДок.Очистить();

	ПервыйДокумент = Истина;
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		ЗаголовокДела1 = "";
		ЗаголовокДела2 = "";
		ЗаголовокДела3 = "";
		ЗаголовокДела4 = "";
		ЗаголовокДела5 = "";
		
		ДлинаСтроки = 50;
		КоличествоСтрок = 5;
		
		ЗаголовокДела = СтрЗаменить(Выборка.ЗаголовокДела, Символы.ПС, " ");
		Для Инд = 1 По КоличествоСтрок Цикл
			
			Если СтрДлина(ЗаголовокДела) > ДлинаСтроки Тогда
				врЗаголовокДела = СокрЛП(Лев(ЗаголовокДела, ДлинаСтроки));
				
				ПозицияПробела = 0;
				Для Поз = 1 По ДлинаСтроки Цикл
					Если Сред(врЗаголовокДела, ДлинаСтроки - Поз + 1, 1) = " " Тогда 
						ПозицияПробела = ДлинаСтроки - Поз + 1;
						Прервать;
					КонецЕсли;	
				КонецЦикла;
				
				Если ПозицияПробела > 0 Тогда 
					врЗаголовокДела = Лев(врЗаголовокДела, ПозицияПробела);
					Выполнить("ЗаголовокДела" + Инд + " = врЗаголовокДела");
					ЗаголовокДела = Сред(ЗаголовокДела, ПозицияПробела + 1)
				Иначе
					Выполнить("ЗаголовокДела" + Инд + " = врЗаголовокДела");
					ЗаголовокДела = Сред(ЗаголовокДела, ДлинаСтроки + 1)
				КонецЕсли;	
				
			Иначе	
				Выполнить("ЗаголовокДела" + Инд + " = ЗаголовокДела");
				Прервать;
			КонецЕсли;	
			
		КонецЦикла;	
		
		ОбластьОбложка.Параметры.Заполнить(Выборка);
		ОбластьОбложка.Параметры.ЗаголовокДела1 = ЗаголовокДела1;
		ОбластьОбложка.Параметры.ЗаголовокДела2 = ЗаголовокДела2;
		ОбластьОбложка.Параметры.ЗаголовокДела3 = ЗаголовокДела3;
		ОбластьОбложка.Параметры.ЗаголовокДела4 = ЗаголовокДела4;
		ОбластьОбложка.Параметры.ЗаголовокДела5 = ЗаголовокДела5;
		
		Если ЗначениеЗаполнено(Выборка.ГрифДоступа)
				И Выборка.ГрифДоступа <> Константы.ГрифДоступаПоУмолчанию.Получить() Тогда
			ОбластьОбложка.Параметры.ГрифДоступа = Выборка.ГрифДоступа;
			ОбластьОбложка.Параметры.ГрифДоступаЗаголовок = НСтр("ru = '(гриф доступа)'");
		Иначе
			ОбластьОбложка.Параметры.ГрифДоступа = "";
			ОбластьГриф = ОбластьОбложка.Область("R7C16:R7C27");
			ОбластьГриф.Обвести(,,, Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НомерТома) Тогда
			ОбластьОбложка.Параметры.НомерТома = Выборка.НомерТома;
		Иначе
			ОбластьОбложка.Параметры.НомерТома = "";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ДатаОкончания) Тогда 
			ОбластьОбложка.Параметры.ПериодДела = ПредставлениеПериода(Выборка.ДатаНачала, КонецДня(Выборка.ДатаОкончания));
		Иначе
			ОбластьОбложка.Параметры.ПериодДела = Формат(Выборка.ДатаНачала, "ДФ='dd MMMM yyyy'") + " - ";
		КонецЕсли;	
		
		ОбластьОбложка.Параметры.КоличествоЛистов = Выборка.КоличествоЛистов;
		
		ДатаСведений = ?(ЗначениеЗаполнено(Выборка.ДатаОкончания), Выборка.ДатаОкончания, Выборка.ДатаНачала);
		ОбластьОбложка.Параметры.НаименованиеПредприятия = Справочники.Организации.ПредставлениеОрганизацииНаДату(Выборка.Организация, ДатаСведений);
		Если ЗначениеЗаполнено(Выборка.Подразделение) Тогда
			ОбластьОбложка.Параметры.НаименованиеПодразделения = Выборка.Подразделение;
		КонецЕсли;
		
		СрокХранения = Выборка.СрокХранения;
		Если ТипЗнч(СрокХранения) = Тип("Число") Тогда 
			ОбластьОбложка.Параметры.СрокХранения = Строка(СрокХранения) + " " + ДелопроизводствоКлиентСервер.ПодписьЛет(СрокХранения);
		Иначе
			ОбластьОбложка.Параметры.СрокХранения = СрокХранения;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьОбложка);
	КонецЦикла;	
	
	Возврат ТабДок;
	
КонецФункции

// Формирует печатную форму внутренней описи.
//
// Параметры:
//   МассивОбъектов - Массив - Массив ссылок на объекты которые нужно распечатать.
//   ОбъектыПечати - СписокЗначений - список объектов печати.
//
// Возвращаемое значение:
//  ТабличныйДокумент - ТабличныйДокумент - печатная форма.
//
Функция ПечатьВнутреннейОписи(МассивОбъектов, ОбъектыПечати) Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ВнутренняяОпись";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.ДелаХраненияДокументов.ПФ_MXL_ВнутренняяОпись");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументыВДелеТоме.Ссылка.РегистрационныйНомер КАК ИндексДокумента,
	|	ДокументыВДелеТоме.Ссылка.ДатаРегистрации КАК ДатаДокумента,
	|	ДокументыВДелеТоме.Ссылка.Наименование КАК ЗаголовокДокумента
	|ИЗ
	|	КритерийОтбора.ДокументыВДелеТоме(&Значение) КАК ДокументыВДелеТоме
	|ГДЕ
	|	НЕ ДокументыВДелеТоме.Ссылка.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента";
	
	ПервыйДокумент = Истина;
	Для Каждого Ссылка из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		Запрос.УстановитьПараметр("Значение", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапка 	 = Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрока 	 = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвал 	 = Макет.ПолучитьОбласть("Подвал");
		ТабДок.Очистить();
		
		// заголовок
		ОбластьЗаголовок.Параметры.ИндексДела = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Ссылка.НоменклатураДел, "Индекс");
		ТабДок.Вывести(ОбластьЗаголовок);
		
		// шапка
		ТабДок.Вывести(ОбластьШапка);
		
		// строки
		Номер = 0;
		Пока Выборка.Следующий() Цикл
			Номер = Номер + 1;
			
			ОбластьСтрока.Параметры.Заполнить(Выборка);
			ОбластьСтрока.Параметры.Номер = Номер;
			ТабДок.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		ОбластьПодвал.Параметры.КоличествоДокументов = ?(Номер = 0, "", Строка(Номер) + ", " + ЧислоПрописью(Номер, , ",,,,,,,,0"));
		ОбластьПодвал.Параметры.Дата = ТекущаяДатаСеанса();
		Сотрудник = Сотрудники.ОсновнойСотрудник();
		ОбластьПодвал.Параметры.Расшифровка = Строка(Сотрудник);
		ОбластьПодвал.Параметры.Должность = Сотрудники.ДолжностьСотрудника(Сотрудник);
		ТабДок.Вывести(ОбластьПодвал);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

// Формирует печатную форму листа-заверителя дела.
//
// Параметры:
//   МассивОбъектов - Массив - Массив ссылок на объекты которые нужно распечатать.
//   ОбъектыПечати - СписокЗначений - список объектов печати.
//
// Возвращаемое значение:
//  ТабличныйДокумент - ТабличныйДокумент - печатная форма.
//
Функция ПечатьЛистаЗаверителя(МассивОбъектов, ОбъектыПечати) Экспорт	
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ЛистЗаверитель";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.ДелаХраненияДокументов.ПФ_MXL_ЛистЗаверитель");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Дела.НоменклатураДел.Индекс КАК НомерДела,
	|	Дела.КоличествоЛистов КАК КоличествоЛистов
	|ИЗ
	|	Справочник.ДелаХраненияДокументов КАК Дела
	|ГДЕ
	|	Дела.Ссылка В(&Ссылки)";
	
	Запрос.УстановитьПараметр("Ссылки", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЛистЗаверитель = Макет.ПолучитьОбласть("ЛистЗаверитель");
	ТабДок.Очистить();

	ПервыйДокумент = Истина;
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		ОбластьЛистЗаверитель.Параметры.Заполнить(Выборка);
		ОбластьЛистЗаверитель.Параметры.КоличествоЛистов = ?(Выборка.КоличествоЛистов = 0, "", Строка(Выборка.КоличествоЛистов) + ", " + ЧислоПрописью(Выборка.КоличествоЛистов, , ",,,,,,,,0"));
		
		ОбластьЛистЗаверитель.Параметры.Дата = ТекущаяДатаСеанса();
		Сотрудник = Сотрудники.ОсновнойСотрудник();
		ОбластьЛистЗаверитель.Параметры.Расшифровка = Строка(Сотрудник);
		ОбластьЛистЗаверитель.Параметры.Должность = Сотрудники.ДолжностьСотрудника(Сотрудник);
			
		ТабДок.Вывести(ОбластьЛистЗаверитель);
	КонецЦикла;	
	
	Возврат ТабДок;
	
КонецФункции

// Формирует печатную форму карты заместителя дела.
//
// Параметры:
//   МассивОбъектов - Массив - Массив ссылок на объекты которые нужно распечатать.
//   ОбъектыПечати - СписокЗначений - список объектов печати.
//
// Возвращаемое значение:
//  ТабличныйДокумент - ТабличныйДокумент - печатная форма.
//
Функция ПечатьКартыЗаместителя(МассивОбъектов, ОбъектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_КартаЗаместитель";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.ДелаХраненияДокументов.ПФ_MXL_КартаЗаместитель");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Дела.НомерТома КАК НомерТома,
	|	Дела.НоменклатураДел.Индекс КАК НомерДела,
	|	Дела.НоменклатураДел.Наименование КАК ЗаголовокДела,
	|	Дела.Организация КАК Организация,
	|	Дела.ДатаНачала КАК ДатаНачала,
	|	Дела.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	Справочник.ДелаХраненияДокументов КАК Дела
	|ГДЕ
	|	Дела.Ссылка В(&Ссылки)";
	
	Запрос.УстановитьПараметр("Ссылки", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьКартаЗаместитель = Макет.ПолучитьОбласть("КартаЗаместитель");
	ТабДок.Очистить();
	
	ПервыйДокумент = Истина;
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		ОбластьКартаЗаместитель.Параметры.Заполнить(Выборка);
		
		ДатаСведений = ?(ЗначениеЗаполнено(Выборка.ДатаОкончания), Выборка.ДатаОкончания, Выборка.ДатаНачала);
		ОбластьКартаЗаместитель.Параметры.НаименованиеПредприятия = Справочники.Организации.ПредставлениеОрганизацииНаДату(Выборка.Организация, ДатаСведений);
		
		ТабДок.Вывести(ОбластьКартаЗаместитель);
	КонецЦикла;	
	
	Возврат ТабДок;
	
КонецФункции

// Формирует печатную форму реестра электронных документов.
//
// Параметры:
//   МассивОбъектов - Массив - Массив ссылок на объекты которые нужно распечатать.
//   ОбъектыПечати - СписокЗначений - список объектов печати.
//
// Возвращаемое значение:
//  ТабличныйДокумент - ТабличныйДокумент - печатная форма.
//
Функция ПечатьРеестраЭД(МассивОбъектов, ОбъектыПечати, ПараметрыПечати = Неопределено) Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_РеестрЭД";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.ДелаХраненияДокументов.ПФ_MXL_РеестрЭД");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Дела.Ссылка КАК Дело,
	|	ПередачаДелВАрхивДелаХраненияДокументов.Ссылка.Номер КАК НомерОписи,
	|	ПередачаДелВАрхивДелаХраненияДокументов.НомерСтроки КАК НомерДелаПоОписи,
	|	Номенклатура.КатегорияДела КАК КатегорияДела,
	|	Номенклатура.ПоЛичномуСоставу КАК ПоЛичномуСоставу
	|ИЗ
	|	Справочник.ДелаХраненияДокументов КАК Дела
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаДелВАрхив.ДелаХраненияДокументов КАК ПередачаДелВАрхивДелаХраненияДокументов
	|		ПО (ПередачаДелВАрхивДелаХраненияДокументов.ДелоХраненияДокументов = Дела.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураДел КАК Номенклатура
	|		ПО Дела.НоменклатураДел = Номенклатура.Ссылка
	|ГДЕ
	|	Дела.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ДелаОписей = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДокументыПредприятия.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(СУММА(Файлы.ТекущаяВерсияРазмер), 0) КАК ТекущаяВерсияРазмер,
		|	ДокументыПредприятия.РегистрационныйНомер КАК НомерДокумента,
		|	НАЧАЛОПЕРИОДА(ДокументыПредприятия.ДатаРегистрации, ДЕНЬ) КАК ДатаДокумента,
		|	ДокументыПредприятия.Наименование КАК НаименованиеДокумента
		|ИЗ
		|	КритерийОтбора.ДокументыВДелеТоме(&Значение) КАК ДокументыВДелеТоме
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|		ПО ДокументыВДелеТоме.Ссылка = ДокументыПредприятия.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
		|		ПО (Файлы.ВладелецФайла = ДокументыПредприятия.Ссылка)
		|		И (Файлы.ПометкаУдаления = ЛОЖЬ)
		|ГДЕ
		|	НЕ ДокументыПредприятия.ПометкаУдаления
		|СГРУППИРОВАТЬ ПО
		|	ДокументыПредприятия.Ссылка,
		|	ДокументыПредприятия.РегистрационныйНомер,
		|	ДокументыПредприятия.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаДокумента,
		|	НомерДокумента";
	
	ПервыйОбъект = Истина;
	Для Каждого Ссылка из МассивОбъектов Цикл
		
		Если Не ПервыйОбъект Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйОбъект = Ложь;
		
		Запрос.УстановитьПараметр("Значение", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапка 	 = Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрока 	 = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвал 	 = Макет.ПолучитьОбласть("Подвал");
		ТабДок.Очистить();
		
		// Заголовок
		СтрокаДелОписей = ДелаОписей.Найти(Ссылка, "Дело");
		Если СтрокаДелОписей <> Неопределено Тогда
			ОбластьЗаголовок.Параметры.НомерОписи = СтрокаДелОписей.НомерОписи;
			ОбластьЗаголовок.Параметры.НомерДелаПоОписи = СтрокаДелОписей.НомерДелаПоОписи;
			ВидОписи = "";
			Если СтрокаДелОписей.ПоЛичномуСоставу = Истина Тогда
				ВидОписи = НСтр("ru = 'По личному составу'");
			ИначеЕсли СтрокаДелОписей.КатегорияДела = Перечисления.КатегорииДел.ВременноеДо10 Тогда
				ВидОписи = НСтр("ru = 'Временного (до 10 лет) срока хранения'");
			ИначеЕсли СтрокаДелОписей.КатегорияДела = Перечисления.КатегорииДел.ВременноеСвыше10 Тогда
				ВидОписи = НСтр("ru = 'Временного (свыше 10 лет) срока хранения'");
			ИначеЕсли СтрокаДелОписей.КатегорияДела = Перечисления.КатегорииДел.Постоянное Тогда
				ВидОписи = НСтр("ru = 'Постоянного хранения'");
			КонецЕсли;
			ОбластьЗаголовок.Параметры.ВидОписи = ВидОписи;
		КонецЕсли;
		
		Если ПараметрыПечати <> Неопределено И ПараметрыПечати.Свойство("Год") Тогда
			ОбластьЗаголовок.Параметры.ОтчетныйГод = Формат(ПараметрыПечати.Год, "ЧГ=0");
		Иначе
			ОбластьЗаголовок.Параметры.ОтчетныйГод = "____";
		КонецЕсли;
		
		РеквизитыДела = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Ссылка, "НоменклатураДел.Индекс, ПолноеНаименование");
		ОбластьЗаголовок.Параметры.ИндексДела = РеквизитыДела.НоменклатураДелИндекс;
		ОбластьЗаголовок.Параметры.ЗаголовокДела = РеквизитыДела.ПолноеНаименование;
		ТабДок.Вывести(ОбластьЗаголовок);
		
		// Шапка
		ТабДок.Вывести(ОбластьШапка);
		
		// Строки
		Номер = 0;
		Пока Выборка.Следующий() Цикл
			Номер = Номер + 1;
			ОбластьСтрока.Параметры.Заполнить(Выборка);
			ОбластьСтрока.Параметры.РазмерФайлов = Формат(
				Выборка.ТекущаяВерсияРазмер / 1024 / 1024, "ЧДЦ=3");
			ТабДок.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		// Подвал
		Сотрудник = Сотрудники.ОсновнойСотрудник();
		ОбластьПодвал.Параметры.Расшифровка = Строка(Сотрудник);
		ОбластьПодвал.Параметры.Должность = Сотрудники.ДолжностьСотрудника(Сотрудник);
		ТабДок.Вывести(ОбластьПодвал);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
КонецПроцедуры

// В зависимости от формы документов Номенклатуры дел, формирует:
// - реестр электронных документов для электронных форм документов,
// - внутреннюю опись для бумажных форм документов.
//
// Параметры:
//   ДелоХраненияДокументов - СправочникСсылка.ДелаХраненияДокументов - ссылка на Дело (Том) Номенклатуры дел.
//
// Возвращаемое значение:
//  Строка - адрес во временном хранилище.
//
Функция РеестрДокументов(ДелоХраненияДокументов) Экспорт
	
	Результат = Неопределено;
	
	Если Не ЗначениеЗаполнено(ДелоХраненияДокументов) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ФормаДокументов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		ДелоХраненияДокументов, "НоменклатураДел.ФормаДокументов");
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВременнаяПапка = ПолучитьИмяВременногоФайла() + ПолучитьРазделительПути();
	СоздатьКаталог(ВременнаяПапка);
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(ДелоХраненияДокументов);
	
	ОбъектыПечати = Новый СписокЗначений;
	
	Если ФормаДокументов = Перечисления.ВариантыФормДокументов.Электронная Тогда
		ТабличныйДокумент = ПечатьРеестраЭД(МассивОбъектов, ОбъектыПечати);
	Иначе
		ТабличныйДокумент = ПечатьВнутреннейОписи(МассивОбъектов, ОбъектыПечати);
	КонецЕсли;
	
	Попытка
		ИмяФайлаПечатнойФормы = ВременнаяПапка + "human.mxl";
		ТабличныйДокумент.Записать(ИмяФайлаПечатнойФормы);
	Исключение
		ЗаписьЖурналаРегистрации(
			СобытиеЖурналаРегистрацииРеестраЭД(),
			УровеньЖурналаРегистрации.Ошибка, , ,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		УдалитьВременныеФайлы(ВременнаяПапка);
		Возврат Результат;
	КонецПопытки;
	
	ПространствоИменСхемы = ОбменСАрхивом.ВерсияФорматаДляОтправкиСообщений();
	
	ИмяМашиночитаемогоФайла = ВременнаяПапка + "machine.xml";
	ЭлементXDTOРеестрЭД = 
		ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(ПространствоИменСхемы, "CaseVolumeDocumentsList"));
	
	ЭлементXDTOРеестрЭД.DossierID = Строка(ДелоХраненияДокументов.УникальныйИдентификатор());
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДокументыПредприятия.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(СУММА(Файлы.ТекущаяВерсияРазмер), 0) КАК ТекущаяВерсияРазмер,
		|	ДокументыПредприятия.РегистрационныйНомер КАК НомерДокумента,
		|	НАЧАЛОПЕРИОДА(ДокументыПредприятия.ДатаРегистрации, ДЕНЬ) КАК ДатаДокумента,
		|	ДокументыПредприятия.Наименование КАК НаименованиеДокумента
		|ИЗ
		|	КритерийОтбора.ДокументыВДелеТоме(&Значение) КАК ДокументыВДелеТоме
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|		ПО ДокументыВДелеТоме.Ссылка = ДокументыПредприятия.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
		|		ПО (Файлы.ВладелецФайла = ДокументыПредприятия.Ссылка)
		|		И (Файлы.ПометкаУдаления = ЛОЖЬ)
		|ГДЕ
		|	НЕ ДокументыПредприятия.ПометкаУдаления
		|СГРУППИРОВАТЬ ПО
		|	ДокументыПредприятия.Ссылка,
		|	ДокументыПредприятия.РегистрационныйНомер,
		|	ДокументыПредприятия.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаДокумента,
		|	НомерДокумента";
	Запрос.УстановитьПараметр("Значение", ДелоХраненияДокументов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Номер = 0;
	
	Пока Выборка.Следующий() Цикл
		Номер = Номер + 1;
		
		ЭлементXDTOДокументыВТоме =
			ФабрикаXDTO.Создать(ЭлементXDTOРеестрЭД.Свойства().Получить("Documents").Тип);
		ЭлементXDTOДокументыВТоме.InventoryNumber = Номер;
		ЭлементXDTOДокументыВТоме.ID = Строка(Выборка.Ссылка.УникальныйИдентификатор());
		ЭлементXDTOДокументыВТоме.Date = Выборка.ДатаДокумента;
		ЭлементXDTOДокументыВТоме.Number = Выборка.НомерДокумента;
		ЭлементXDTOДокументыВТоме.Header = Выборка.НаименованиеДокумента;
		
		РазмерВМб = Окр(Выборка.ТекущаяВерсияРазмер / (1024 * 1024), 3);
		ЭлементXDTOДокументыВТоме.SizeMb = РазмерВМб;
		
		ЭлементXDTOРеестрЭД.Documents.Добавить(ЭлементXDTOДокументыВТоме);
	КонецЦикла;
	
	ПотокЗаписи = Новый ЗаписьXML();
	ПотокЗаписи.ОткрытьФайл(ИмяМашиночитаемогоФайла);
	ПотокЗаписи.ЗаписатьОбъявлениеXML();
	
	Попытка
		ФабрикаXDTO.ЗаписатьXML(ПотокЗаписи, ЭлементXDTOРеестрЭД);
		ПотокЗаписи.Закрыть();
	Исключение
		ЗаписьЖурналаРегистрации(
			СобытиеЖурналаРегистрацииРеестраЭД(),
			УровеньЖурналаРегистрации.Ошибка, , ,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		УдалитьВременныеФайлы(ВременнаяПапка);
		ВызватьИсключение;
	КонецПопытки;
	
	ИмяZipФайлаРеестраЭД = ВременнаяПапка + "РеестрЭД.zip";
	ЗаписьZipФайла = Новый ЗаписьZipФайла(ИмяZipФайлаРеестраЭД);
	ЗаписьZipФайла.Добавить(ИмяФайлаПечатнойФормы);
	ЗаписьZipФайла.Добавить(ИмяМашиночитаемогоФайла);
	
	Попытка
		ЗаписьZipФайла.Записать();
	Исключение
		ЗаписьЖурналаРегистрации(
			СобытиеЖурналаРегистрацииРеестраЭД(),
			УровеньЖурналаРегистрации.Ошибка, , ,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		УдалитьВременныеФайлы(ВременнаяПапка);
		ВызватьИсключение;
	КонецПопытки;
	
	ДанныеФайлаРеестраЭД = Новый ДвоичныеДанные(ИмяZipФайлаРеестраЭД);
	Результат = ПоместитьВоВременноеХранилище(ДанныеФайлаРеестраЭД);
	УдалитьВременныеФайлы(ВременнаяПапка);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УдалитьВременныеФайлы(ВременнаяПапка)
	
	Попытка
		УдалитьФайлы(ВременнаяПапка);
	Исключение
		ЗаписьЖурналаРегистрации(
			СобытиеЖурналаРегистрацииРеестраЭД(),
			УровеньЖурналаРегистрации.Ошибка, , ,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры 

Функция СобытиеЖурналаРегистрацииРеестраЭД()
	
	Возврат НСтр("ru = 'Ошибка формирования реестра ЭД'", ОбщегоНазначения.КодОсновногоЯзыка());
	
КонецФункции

#КонецОбласти

#КонецЕсли
