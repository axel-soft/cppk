
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПротоколированиеРаботыСотрудников.ЗаписатьОткрытие(Объект.Ссылка);
	
	Если Объект.Ссылка.Пустая() Тогда
		Если ЗначениеЗаполнено(Объект.НоменклатураДел) Тогда 
			ЗаполнитьРеквизиты();
		КонецЕсли;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.НоменклатураДел) Тогда
		РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Объект.НоменклатураДел, "ПолноеНаименование, ФормаДокументов");
		ЗаголовокНоменклатурыДел = РеквизитыНоменклатуры.ПолноеНаименование;
		ЭтоБумажноеДело = РеквизитыНоменклатуры.ФормаДокументов = Перечисления.ВариантыФормДокументов.Бумажная;
	КонецЕсли;
	
	ДелоУничтожено = Ложь;
	ОбязательныйУчетПоМестамХранения = ПолучитьФункциональнуюОпцию("ОбязательныйУчетПоМестамХранения");
	
	Если Не Объект.Ссылка.Пустая() Тогда
		
		МестоХраненияПриОткрытии = Объект.МестоХраненияДел;
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	СостоянияДел.Состояние КАК Состояние,
			|	СостоянияДел.Период КАК Период,
			|	СостоянияДел.Регистратор КАК Регистратор
			|ИЗ
			|	РегистрСведений.СостоянияДелХраненияДокументов.СрезПоследних(, ДелоХраненияДокументов = &Дело) КАК СостоянияДел");
		Запрос.УстановитьПараметр("Дело", Объект.Ссылка);
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() И ПолучитьФункциональнуюОпцию("ИнтеграцияС1САрхивом") Тогда
			Запрос.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ПередачаДелВАрхив.СтатусВыгрузкиВАрхив КАК Состояние,
				|	ПередачаДелВАрхив.Дата КАК Период,
				|	ПередачаДелВАрхив.Ссылка КАК Регистратор
				|ИЗ
				|	Документ.ПередачаДелВАрхив.ДелаХраненияДокументов КАК ТабЧастьДела
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаДелВАрхив КАК ПередачаДелВАрхив
				|		ПО ТабЧастьДела.Ссылка = ПередачаДелВАрхив.Ссылка
				|ГДЕ 
				|	ТабЧастьДела.ДелоХраненияДокументов = &Дело
				|	И ПередачаДелВАрхив.СтатусВыгрузкиВАрхив В (&СтатусыДляПоиска)
				|
				|УПОРЯДОЧИТЬ ПО
				|	ПередачаДелВАрхив.Дата";
			СтатусыПеречисление = Перечисления.СтатусыОбменаСАрхивом;
			СтатусыДляПоиска = Новый Массив;
			СтатусыДляПоиска.Добавить(СтатусыПеречисление.ГотовКВыгрузке);
			СтатусыДляПоиска.Добавить(СтатусыПеречисление.ВыгрузкаВыполнена);
			СтатусыДляПоиска.Добавить(СтатусыПеречисление.ЗагрузкаВАрхивВыполнена);
			СтатусыДляПоиска.Добавить(СтатусыПеречисление.ПринятВАрхив);
			Запрос.УстановитьПараметр("СтатусыДляПоиска", СтатусыДляПоиска);
			Результат = Запрос.Выполнить();
		КонецЕсли;
		
		Если Не Результат.Пустой() Тогда 
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			Регистратор = Выборка.Регистратор;
			Элементы.ДелоЗакрыто.Доступность = Ложь;
			Если Не Пользователи.ЭтоПолноправныйПользователь() Тогда
				ТолькоПросмотр = Истина;
			КонецЕсли;
			Если Выборка.Состояние = Перечисления.СостоянияДелХраненияДокументов.ПереданоВАрхив Тогда 
				Состояние = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Передано в архив %1'"), Формат(Выборка.Период, "ДФ=dd.MM.yyyy"));
			ИначеЕсли Выборка.Состояние = Перечисления.СостоянияДелХраненияДокументов.Уничтожено Тогда 
				Состояние = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Уничтожено %1'"), Формат(Выборка.Период, "ДФ=dd.MM.yyyy"));
				ДелоУничтожено = Истина;
			Иначе
				Состояние = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Отмечено к передаче в архив %1'"), Формат(Выборка.Период, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;	
	
	Если Параметры.Свойство("МестоХранения") И ЗначениеЗаполнено(Параметры.МестоХранения) Тогда
		Объект.МестоХраненияДел = Параметры.МестоХранения;
	КонецЕсли;
	
	СостояниеДела = ЗначениеЗаполнено(Состояние);
	Элементы.Состояние.Видимость = СостояниеДела;
	
	Элементы.ГруппаМестоХранения.Видимость = Не ДелоУничтожено;
	Элементы.ДекорацияМестаХранения.Видимость = ДелоУничтожено;
	
	Элементы.КоличествоЛистов.Видимость = ЭтоБумажноеДело;
	
	//Планы помещений
	ИспользоватьСхемыПомещений = ПолучитьФункциональнуюОпцию("ИспользоватьСхемыПомещений");
	МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(
		Объект.МестоХраненияДел, ИспользоватьСхемыПомещений);
		
	Если Не ПравоДоступа("Изменение", Метаданные.Справочники.ДелаХраненияДокументов) Тогда 
		Элементы.МестоХраненияТекст.ТолькоПросмотр = Истина;
		Элементы.МестоХраненияТекст.КнопкаВыбора = Ложь;
	КонецЕсли;
	Если ОбязательныйУчетПоМестамХранения
		И Объект.ФормаДокументов <> Перечисления.ВариантыФормДокументов.Электронная Тогда 
		Элементы.МестоХраненияТекст.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	
	Если ИспользоватьСхемыПомещений И ЗначениеЗаполнено(Объект.МестоХраненияДел) Тогда
		ПланПомещения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.МестоХраненияДел, "ТерриторияПомещение");
		
		Если ЗначениеЗаполнено(ПланПомещения) Тогда 
			Элементы.ПосмотретьНаСхеме.Доступность = Истина;
		Иначе 
			Элементы.ПосмотретьНаСхеме.Доступность = Ложь;
		КонецЕсли;
	Иначе 
		ПланПомещения = Неопределено;
		Элементы.ПосмотретьНаСхеме.Доступность = Ложь;
	КонецЕсли;
	
	РаботаСПоследнимиОбъектами.ЗаписатьОбращениеКОбъекту(Объект.Ссылка);
	
	// Инструкции
	ПоказыватьИнструкции = ПолучитьФункциональнуюОпцию("ИспользоватьИнструкции");
	ПолучитьИнструкции();
	
	ТекущаяДатаНачала = Объект.ДатаНачала;
	ТекущаяДатаОкончания = Объект.ДатаОкончания;
	
	Если РольДоступна("ПолныеПрава") Или РольДоступна("ДобавлениеИзменениеНСИ") Тогда 
		Элементы.ГруппаОтноситсяКНоменклатуреДел.Видимость = Истина;
	Иначе 
		Элементы.ГруппаОтноситсяКНоменклатуреДел.Видимость = Ложь;
	КонецЕсли;
	
	Если Объект.ПометкаУдаления Тогда 
		КлючНазначенияИспользования = "ЭлементПомеченНаУдаление";
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	НастроитьФормуДляМобильногоПриНеобходимости();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) И ЗначениеЗаполнено(Объект.НоменклатураДел) Тогда
		ЗаполнитьЗаголовокАвтоматически();
	КонецЕсли;
	ОбновитьПризнакИзмененияЗаголовка();
	
	Оповестить("ОбновитьСписокПоследних");
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбщегоНазначенияДокументооборот.ПоказатьНадписьПометкиУдаления(
		ЭтотОбъект, ТекущийОбъект.ПометкаУдаления);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаНоменклатураДел" И Параметр = Объект.НоменклатураДел Тогда 
		Прочитать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ЭтоНовыйОбъект", НЕ ЗначениеЗаполнено(ТекущийОбъект.Ссылка));
	ПараметрыЗаписи.Вставить("МестоХранения", МестоХраненияПриОткрытии);
		
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПротоколированиеРаботыСотрудников.ЗаписатьСоздание(Объект.Ссылка, ПараметрыЗаписи.ЭтоНовыйОбъект);
	ПротоколированиеРаботыСотрудников.ЗаписатьИзменение(Объект.Ссылка);
	
	Если ПараметрыЗаписи.Свойство("ЭтоНовыйОбъект") И ПараметрыЗаписи.ЭтоНовыйОбъект = Истина Тогда
		РаботаСПоследнимиОбъектами.ЗаписатьОбращениеКОбъекту(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("МестоХранения") 
		И ПараметрыЗаписи.МестоХранения <> Объект.МестоХраненияДел Тогда
		Оповестить("ИзменилосьМестоХраненияДела");
		МестоХраненияПриОткрытии = Объект.МестоХраненияДел;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки["ПоказыватьИнструкции"] <> Неопределено
		И ПолучитьФункциональнуюОпцию("ИспользоватьИнструкции") Тогда
		ПолучитьИнструкции();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПолноеНаименованиеПриИзменении(Элемент)
	
	ОбновитьПризнакИзмененияЗаголовка();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерТомаПриИзменении(Элемент)
	
	ЗаполнитьЗаголовокАвтоматически();
	ОбновитьПризнакИзмененияЗаголовка();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерЧастиПриИзменении(Элемент)
	
	ЗаполнитьЗаголовокАвтоматически();
	ОбновитьПризнакИзмененияЗаголовка();
	
КонецПроцедуры

&НаКлиенте
Процедура МестоХраненияТекстПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(МестоХраненияТекст) Тогда 
		Объект.МестоХраненияДел = Неопределено;
		МестоХраненияТекст = Неопределено;
	КонецЕсли;
	
	Если ИспользоватьСхемыПомещений И ЗначениеЗаполнено(Объект.МестоХраненияДел) Тогда
		ПланПомещения = ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(
			Объект.МестоХраненияДел, "ТерриторияПомещение");
		
		Если ЗначениеЗаполнено(ПланПомещения) Тогда 
			Элементы.ПосмотретьНаСхеме.Доступность = Истина;
		Иначе 
			Элементы.ПосмотретьНаСхеме.Доступность = Ложь;
		КонецЕсли;
	Иначе 
		ПланПомещения = Неопределено;
		Элементы.ПосмотретьНаСхеме.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МестоХраненияТекстНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяСтрока", Объект.МестоХраненияДел);
	ПараметрыФормы.Вставить("Подразделение", Объект.Подразделение);
	ПараметрыФормы.Вставить("Организация", Объект.Организация);
	
	ОткрытьФорму("Справочник.МестаХраненияДел.ФормаВыбора", ПараметрыФормы, 
		Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура МестоХраненияТекстОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.МестоХраненияДел = Неопределено;
	МестоХраненияТекст = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура МестоХраненияТекстОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(МестоХраненияТекст) Тогда
		ПоказатьЗначение(, Объект.МестоХраненияДел);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура МестоХраненияТекстОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.МестаХраненияДел") Тогда 
		
		СтандартнаяОбработка = Ложь;
		Объект.МестоХраненияДел = ВыбранноеЗначение;
		Модифицированность = Истина;
		
		Если ЗначениеЗаполнено(Объект.МестоХраненияДел) Тогда 
			МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(
				Объект.МестоХраненияДел, ИспользоватьСхемыПомещений);
		Иначе 
			МестоХраненияТекст = Неопределено;
		КонецЕсли;
		
		Если ИспользоватьСхемыПомещений И ЗначениеЗаполнено(Объект.МестоХраненияДел) Тогда
			ПланПомещения = ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(
				Объект.МестоХраненияДел, "ТерриторияПомещение");
			
			Если ЗначениеЗаполнено(ПланПомещения) Тогда 
				Элементы.ПосмотретьНаСхеме.Доступность = Истина;
			Иначе 
				Элементы.ПосмотретьНаСхеме.Доступность = Ложь;
			КонецЕсли;
		Иначе 
			ПланПомещения = Неопределено;
			Элементы.ПосмотретьНаСхеме.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МестоХраненияТекстАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Делопроизводство.СформироватьДанныеВыбораМестХранения(
			Текст, Объект.Организация, Объект.Подразделение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МестоХраненияТекстОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Делопроизводство.СформироватьДанныеВыбораМестХранения(
			Текст, Объект.Организация, Объект.Подразделение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураДелПриИзменении(Элемент)
	
	ЗаполнитьРеквизиты();
	ЗаполнитьЗаголовокАвтоматически();
	
	Если ОбязательныйУчетПоМестамХранения
		И Объект.ФормаДокументов <> ПредопределенноеЗначение("Перечисление.ВариантыФормДокументов.Электронная") Тогда
		Элементы.МестоХраненияТекст.АвтоОтметкаНезаполненного = Истина;
		Элементы.МестоХраненияТекст.ОтметкаНезаполненного = Не ЗначениеЗаполнено(Объект.МестоХраненияДел);
	Иначе
		Элементы.МестоХраненияТекст.АвтоОтметкаНезаполненного = Ложь;
		Элементы.МестоХраненияТекст.ОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураДелНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяСтрока", Объект.НоменклатураДел);
	
	Если ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		ПараметрыФормы.Вставить("Год", Год(Объект.ДатаНачала));
	Иначе
		ПараметрыФормы.Вставить("Год", Год(ТекущаяДата()));
	КонецЕсли;	
	ОткрытьФорму("Справочник.НоменклатураДел.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДелоЗакрытоПриИзменении(Элемент)
	
	Если Объект.ДелоЗакрыто Тогда 
		ЗакрытьДело();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Регистратор);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПериодПриИзменении", ЭтаФорма,
		Новый Структура("ДатаНачала", Ложь));
	
	Если Не Объект.Ссылка.Пустая() И ЗначениеЗаполнено(Объект.ДатаОкончания)
		И ЕстьДокументыЗаПериодом(Объект.Ссылка, Объект.ДатаОкончания) Тогда 
		ТекстВопроса =  НСтр("ru = 'В деле хранятся документы, выходящие за указанный интервал. Продолжить?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПериодПриИзменении", ЭтаФорма,
		Новый Структура("ДатаНачала", Истина));
	
	Если Не Объект.Ссылка.Пустая() И ЗначениеЗаполнено(Объект.ДатаНачала)  
		И ЕстьДокументыЗаПериодом(Объект.Ссылка, Объект.ДатаНачала, Ложь) Тогда 
		ТекстВопроса =  НСтр("ru = 'В деле хранятся документы, выходящие за указанный интервал. Продолжить?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнструкцияПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСИнструкциямиКлиент.ОткрытьСсылку(ДанныеСобытия.Href, ДанныеСобытия.Element, Элемент.Документ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтноситсяКНоменклатуреДел

&НаКлиенте
Процедура ОтноситсяКНоменклатуреДелВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.ОтноситсяКНоменклатуреДел.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда 
		ПоказатьЗначение(, ТекущиеДанные.НоменклатураДел);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказыватьИнструкции(Команда)
	
	ПоказыватьИнструкции = Не ПоказыватьИнструкции;
	ПолучитьИнструкции();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереносДокументовДела(Команда)
	
	ПараметрыФормы = Новый Структура("ПеренестиИзДела", Объект.Ссылка);
	Открытьформу("Справочник.ДелаХраненияДокументов.Форма.ФормаПереносаДокументовДела", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПосмотретьНаСхеме(Команда)
	
	Если ЗначениеЗаполнено(ПланПомещения) Тогда
		ПараметрыФормы = Новый Структура("Ключ", ПланПомещения);
		ОткрытьФорму("Справочник.ТерриторииИПомещения.Форма.ФормаЭлемента", ПараметрыФормы);
	КонецЕсли;	
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРеквизиты()
	
	Если Не ЗначениеЗаполнено(Объект.НоменклатураДел) Тогда 
		Возврат;
	КонецЕсли;
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.НоменклатураДел,
		"Индекс, ПолноеНаименование, Организация, Год, Раздел.Подразделение, ФормаДокументов");
	Объект.Организация = РеквизитыНоменклатуры.Организация;
	Объект.Подразделение = РеквизитыНоменклатуры.РазделПодразделение;
	ЗаголовокНоменклатурыДел = РеквизитыНоменклатуры.ПолноеНаименование;
	Объект.ФормаДокументов = РеквизитыНоменклатуры.ФормаДокументов;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Дела.НомерТома КАК НомерТома,
		|	Дела.ДатаНачала,
		|	Дела.ДатаОкончания
		|ИЗ
		|	Справочник.ДелаХраненияДокументов КАК Дела
		|ГДЕ
		|	НЕ Дела.ПометкаУдаления
		|	И Дела.НоменклатураДел.Индекс = &Индекс
		|	И Дела.Организация = &Организация
		|	И ГОД(Дела.ДатаНачала) <= &Год
		|	И (Дела.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|			ИЛИ Дела.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ГОД(Дела.ДатаОкончания) >= &Год)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерТома УБЫВ";
	
	Запрос.УстановитьПараметр("Индекс", РеквизитыНоменклатуры.Индекс);
	Запрос.УстановитьПараметр("Организация", РеквизитыНоменклатуры.Организация);
	Запрос.УстановитьПараметр("Год", РеквизитыНоменклатуры.Год);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		Объект.НомерТома = 1;
		Объект.ДатаНачала = Дата(РеквизитыНоменклатуры.Год, 1, 1);
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
		
	Объект.НомерТома = Выборка.НомерТома + 1;
	Если ЗначениеЗаполнено(Выборка.ДатаОкончания) Тогда 
		Объект.ДатаНачала = Выборка.ДатаОкончания + 3600 * 24;
	Иначе 
		Объект.ДатаНачала = Дата(РеквизитыНоменклатуры.Год, 1, 1);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗакрытьДело()
	
	Если Объект.Ссылка.Пустая() Тогда 
		Возврат;
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(ДокументыВДелеТоме.Ссылка.ДатаРегистрации), ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаНачала,
	|	ЕСТЬNULL(МАКСИМУМ(ДокументыВДелеТоме.Ссылка.ДатаРегистрации), ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончания,
	|	ЕСТЬNULL(СУММА(ДокументыВДелеТоме.Ссылка.КоличествоЛистов), 0) КАК КоличествоЛистов,
	|	ЕСТЬNULL(СУММА(ДокументыВДелеТоме.Ссылка.ЛистовВПриложениях), 0) КАК ЛистовВПриложениях
	|ИЗ
	|	КритерийОтбора.ДокументыВДелеТоме(&ЗначениеОтбора) КАК ДокументыВДелеТоме
	|ГДЕ
	|	(НЕ ДокументыВДелеТоме.Ссылка.ПометкаУдаления)";
	Запрос.УстановитьПараметр("ЗначениеОтбора", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		Возврат;
	КонецЕсли;	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Если ЗначениеЗаполнено(Выборка.ДатаНачала) Тогда
		Объект.ДатаНачала = Выборка.ДатаНачала;
	КонецЕсли;
	Если ЗначениеЗаполнено(Выборка.ДатаОкончания) Тогда
		Объект.ДатаОкончания = Выборка.ДатаОкончания;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.КоличествоЛистов) Тогда
		Объект.КоличествоЛистов = Выборка.КоличествоЛистов + Выборка.ЛистовВПриложениях;
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПериодПриИзменении(Результат, Параметры) Экспорт 
	
	Если Результат <> КодВозвратаДиалога.Да Тогда 
		Если Параметры.ДатаНачала Тогда 
			Объект.ДатаНачала = ТекущаяДатаНачала;
		Иначе 
			Объект.ДатаОкончания = ТекущаяДатаОкончания;
		КонецЕсли;
	КонецЕсли;
	
	ТекущаяДатаНачала = Объект.ДатаНачала;
	ТекущаяДатаОкончания = Объект.ДатаОкончания;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьДокументыЗаПериодом(Дело, ПроверяемаяДата, ЭтоДатаОкончания = Истина)
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументовПредприятия.Документ
	|ИЗ
	|	РегистрСведений.ДанныеДокументовПредприятия КАК ДанныеДокументовПредприятия
	|ГДЕ
	|	ДанныеДокументовПредприятия.Дело = &Дело
	|	И НЕ ДанныеДокументовПредприятия.ПометкаУдаления
	|	И ДанныеДокументовПредприятия.ДатаСортировки < &ПроверяемаяДата";
		
	Если ЭтоДатаОкончания Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "<", ">");
		ПроверяемаяДата = КонецДня(ПроверяемаяДата);
	КонецЕсли;
	
	Запрос.Параметры.Вставить("Дело", Дело);
	Запрос.Параметры.Вставить("ПроверяемаяДата", ПроверяемаяДата);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервере
Процедура ПолучитьИнструкции()
	
	РаботаСИнструкциями.ПолучитьИнструкции(ЭтаФорма, 65, 95);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПризнакИзмененияЗаголовка()
	
	ТомЧастьСтрокой = ДелопроизводствоКлиентСервер.НомерТомаЧастиДляНаименования(
		Объект.НомерТома, Объект.НомерЧасти);
	ЗаголовокИзмененВручную = Объект.ПолноеНаименование
		<> ДелопроизводствоКлиентСервер.АвтоЗаголовокДела(ЗаголовокНоменклатурыДел, ТомЧастьСтрокой);
	
	Если ЗаголовокИзмененВручную Тогда
		Элементы.ПолноеНаименование.ОтображениеПредупрежденияПриРедактировании =
			ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	Иначе
		Элементы.ПолноеНаименование.ОтображениеПредупрежденияПриРедактировании = 
			ОтображениеПредупрежденияПриРедактировании.Отображать;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗаголовокАвтоматически()
	
	ТомЧастьСтрокой = ДелопроизводствоКлиентСервер.НомерТомаЧастиДляНаименования(
		Объект.НомерТома, Объект.НомерЧасти);
	Если Не ЗаголовокИзмененВручную Тогда
		Объект.ПолноеНаименование = ДелопроизводствоКлиентСервер.АвтоЗаголовокДела(
			ЗаголовокНоменклатурыДел, ТомЧастьСтрокой);
	КонецЕсли;
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции_МобильныйКлиент

&НаСервере
Процедура НастроитьФормуДляМобильногоПриНеобходимости()
	
	Если Не МК_ПовтИсп.ЭтоМобильныйКлиент() Тогда
		Возврат;
	КонецЕсли;
	
	ВыровнятьЭлементДляМобильного(Элементы.Организация);
	ВыровнятьЭлементДляМобильного(Элементы.Подразделение);
	ВыровнятьЭлементДляМобильного(Элементы.МестоХраненияТекст);
	ВыровнятьЭлементДляМобильного(Элементы.ДелоЗакрыто);
	
	Элементы.Комментарий.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	Элементы.Комментарий.РастягиватьПоВертикали = Истина;
	Элементы.Комментарий.МногострочныйРежим = Истина;
	
	Элементы.Переместить(Элементы.КоличествоЛистов, Элементы.ГруппаТом, Элементы.ГруппаПериод);
	Элементы.ГруппаНомерТомаЧасти.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;

	ЭтоМобильныйВПортретномРежиме = МК_ВызовСервера.ЭтоМобильныйВПортретномРежиме();
	
	Если Не ЭтоМобильныйВПортретномРежиме Тогда
		
		Элементы.ДекорацияДокументыПериодМК.Видимость = Истина;
		Элементы.ДекорацияДокументыСПериодМК.Видимость = Истина;
		Элементы.ДекорацияДокументыПоПериодМК.Видимость = Истина;
		
		Элементы.ДатаНачала.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ДатаОкончания.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ВыровнятьЭлементДляМобильного(Элемент)
	
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	Элемент.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	
КонецПроцедуры
	
#КонецОбласти

#КонецОбласти
