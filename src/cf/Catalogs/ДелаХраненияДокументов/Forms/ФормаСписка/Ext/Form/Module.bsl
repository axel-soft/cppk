#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПриСозданииНаСервереРедакцииКонфигурации();
	
	// Дела по месту хранения.
	Если Параметры.Свойство("МестоХранения") И ЗначениеЗаполнено(Параметры.МестоХранения) Тогда 
		МестоХранения = Параметры.МестоХранения;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "МестоХраненияДел", МестоХранения,
			ВидСравненияКомпоновкиДанных.Равно, , Истина);
			
		ПоказыватьДела = "Все";
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.ПоказыватьДела, ПоказыватьДела, "Все");
		Подразделение = Неопределено;
		Организация = Неопределено;
		УстановитьОтбор();
		
		АвтоЗаголовок = Ложь;
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Дела (тома) по месту хранения: %1'"), Строка(МестоХранения));
	Иначе 
		ПоказыватьДела = "Открытые";
		Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли;
	
	УстановитьОтбор();
	
	Если ЗначениеЗаполнено(Параметры.НоменклатураДел) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, 
			"НоменклатураДел", 
			Параметры.НоменклатураДел);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "ПометкаУдаления", Ложь,
		ВидСравненияКомпоновкиДанных.Равно, , Истина);
				
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.КоманднаяПанель;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	НастроитьФормуДляМобильногоПриНеобходимости();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаНоменклатураДел" Тогда 
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если ЗначениеЗаполнено(МестоХранения) Тогда 
		Настройки["Подразделение"] = Неопределено;
		Настройки["Организация"] = Неопределено;
		Настройки["ФормаДокументов"] = Неопределено;
		Настройки["ПоказыватьДела"] = "Все";
	КонецЕсли;
	
	ПоказыватьДела = Настройки["ПоказыватьДела"];
	Организация = Настройки["Организация"];
	Подразделение = Настройки["Подразделение"];
	ФормаДокументов = Настройки["ФормаДокументов"];
	
	УстановитьОтборСписка(Настройки);
	
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
		Элементы.ПоказыватьДела, ПоказыватьДела, "Все");
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элементы.Организация, Организация);
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элементы.Подразделение, Подразделение);
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элементы.ФормаДокументов, ФормаДокументов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказыватьДелаПриИзменении(Элемент)
	
	УстановитьОтбор();
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
		Элементы.ПоказыватьДела, ПоказыватьДела, "Все");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьДелаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказыватьДела = "Все";
	
	УстановитьОтбор();
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, 
		ПоказыватьДела, "Все");
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьОтбор();
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	УстановитьОтбор();
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, Подразделение);
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаДокументовПриИзменении(Элемент)
	
	УстановитьОтбор();
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, ФормаДокументов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если ЗначениеЗаполнено(МестоХранения) Тогда 
		Отказ = Истина;
		
		Если ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(
			МестоХранения, "ЗапрещеноРазмещатьНовыеДела") Тогда
			СообщениеОбОшибке = НСтр("ru = 'В указанное место хранения запрещено размещать новые дела.'");
			ПоказатьПредупреждение(, СообщениеОбОшибке);
			Возврат;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		
		Если Копирование Тогда 
			ПараметрыФормы.Вставить("ЗначениеКопирования", Элементы.Список.ТекущаяСтрока);
		Иначе 
			ПараметрыФормы.Вставить("МестоХранения", МестоХранения);
		КонецЕсли;
		
		Открытьформу("Справочник.ДелаХраненияДокументов.ФормаОбъекта", ПараметрыФормы,
			Элементы.Список, Новый УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаЗапросаОбновления()
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереносДокументовДела(Команда)
	
	ПараметрыФормы = Новый Структура("ПеренестиИзДела", Элементы.Список.ТекущаяСтрока);
	Открытьформу("Справочник.ДелаХраненияДокументов.Форма.ФормаПереносаДокументовДела", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	
	Если Не ПоказыватьУдаленные Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "ПометкаУдаления", Ложь,
			ВидСравненияКомпоновкиДанных.Равно, , Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ПометкаУдаления");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДела(Команда)
	
	ПараметрыФормы = Новый Структура("Подразделение, Организация", Подразделение, Организация);
	ОткрытьФорму("Справочник.ДелаХраненияДокументов.Форма.ФормаСозданияДел", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ОткрытьОтчеты(Команда)
		
	Раздел = ПредопределенноеЗначение("Перечисление.РазделыОтчетов.ДелаТомаСписок");
	
	ЗаголовокФормы = НСтр("ru = 'Отчеты по Делам(томам)'");
	
	РазделГипперссылка = НастройкиВариантовОтчетовДокументооборот.ПолучитьРазделОтчетаПоИмени("ДокументыИФайлы");

	ПараметрыФормы = Новый Структура("Раздел, ЗаголовокФормы, НеОтображатьИерархию, РазделГипперссылка", 
										Раздел, ЗаголовокФормы, Истина, РазделГипперссылка);
	
	ОткрытьФорму(
		"Обработка.ВсеОтчеты.Форма.ФормаПоКатегориям",
		ПараметрыФормы,
		ЭтаФорма, 
		"ДелаТомаСписок");

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборСписка(ПараметрыОтбора)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		ПараметрыОтбора["Организация"] = Неопределено;
	КонецЕсли;
	
	Если ПараметрыОтбора["ПоказыватьДела"] = "Все"
	 Или ПараметрыОтбора["ПоказыватьДела"] = "Открытые"
	 Или ПараметрыОтбора["ПоказыватьДела"] = "Закрытые"
	 Или ПараметрыОтбора["ПоказыватьДела"] = "Переданные в архив"
	 Или ПараметрыОтбора["ПоказыватьДела"] = "Уничтоженные" Тогда 
	 
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
			"Состояние");
			
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
			"ДелоЗакрыто");	
			
	КонецЕсли;	
	
	Если ПараметрыОтбора["ПоказыватьДела"] = "Открытые" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Состояние", 
			Перечисления.СостоянияДелХраненияДокументов.ПустаяСсылка());
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"ДелоЗакрыто", 
			Ложь);
			
	ИначеЕсли ПараметрыОтбора["ПоказыватьДела"] = "Закрытые" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Состояние", 
			Перечисления.СостоянияДелХраненияДокументов.ПустаяСсылка());
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"ДелоЗакрыто", 
			Истина);		
			
	ИначеЕсли ПараметрыОтбора["ПоказыватьДела"] = "Переданные в архив" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Состояние", 
			Перечисления.СостоянияДелХраненияДокументов.ПереданоВАрхив);
		
	ИначеЕсли ПараметрыОтбора["ПоказыватьДела"] = "Уничтоженные" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Состояние", 
			Перечисления.СостоянияДелХраненияДокументов.Уничтожено);
		
	КонецЕсли;	
	
	// Организация 
	Если Не ЗначениеЗаполнено(ПараметрыОтбора["Организация"]) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
			"Организация");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Организация",
			ПараметрыОтбора["Организация"]);
	КонецЕсли;
	
	// Подразделение
	Если ЗначениеЗаполнено(ПараметрыОтбора["Подразделение"]) Тогда 
		
		МассивПодразделений = Делопроизводство.ПолучитьПодразделениеИРодителей(ПараметрыОтбора["Подразделение"]);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Подразделение",
			МассивПодразделений,
			ВидСравненияКомпоновкиДанных.ВСписке);
			
	Иначе 
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Подразделение");	
	КонецЕсли;	
	
	// Форма документов
	Если Не ЗначениеЗаполнено(ПараметрыОтбора["ФормаДокументов"]) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
			"ФормаДокументов");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"ФормаДокументов",
			ПараметрыОтбора["ФормаДокументов"]);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОтбора["ПоказыватьУдаленные"]) Тогда
		
		Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
		
		Если Не ПоказыватьУдаленные Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Список, "ПометкаУдаления", Ложь,
				ВидСравненияКомпоновкиДанных.Равно, , Истина);
		Иначе
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ПометкаУдаления");
		КонецЕсли;
	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор()
	
	ПараметрыОтбора = Новый Соответствие;
	ПараметрыОтбора.Вставить("ПоказыватьДела",  ПоказыватьДела);
	ПараметрыОтбора.Вставить("Организация",     Организация);
	ПараметрыОтбора.Вставить("Подразделение",   Подразделение);
	ПараметрыОтбора.Вставить("ФормаДокументов", ФормаДокументов);
	УстановитьОтборСписка(ПараметрыОтбора);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервереРедакцииКонфигурации()	
	
	Элементы.Организация.Подсказка = РедакцииКонфигурацииКлиентСервер.Организация();
	Элементы.Организация.ПодсказкаВвода = РедакцииКонфигурацииКлиентСервер.Организация();
		
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции_МобильныйКлиент

&НаСервере
Процедура НастроитьФормуДляМобильногоПриНеобходимости()
	
	Если Не МК_ПовтИсп.ЭтоМобильныйКлиент() Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаОтборыМК.Видимость = Истина;
	НастроитьГруппуОтобораДляМобильного(Элементы.ПоказыватьДела);
	НастроитьГруппуОтобораДляМобильного(Элементы.Организация);
	НастроитьГруппуОтобораДляМобильного(Элементы.Подразделение);
	
	Элементы.Список.Шапка = Ложь;
	Элементы.ИндексДела.Видимость = Ложь;
	Элементы.НомерТома.Видимость = Ложь;
	Элементы.Комментарий.Видимость = Ложь;
	Элементы.Ссылка.Видимость = Ложь;
	
	Элементы.ГруппаКолонокМК.Видимость = Истина;
	Элементы.Переместить(Элементы.КартинкаСостояния, Элементы.ГруппаКартинкаСостоянияМК);
	Элементы.Переместить(Элементы.Наименование, Элементы.ГруппаНаименованиеМК);
	Элементы.Переместить(Элементы.ДатаНачала, Элементы.ГруппаНачатоОконченоМК);
	Элементы.Переместить(Элементы.ДатаОкончания, Элементы.ГруппаНачатоОконченоМК);

КонецПроцедуры

&НаСервере
Процедура НастроитьГруппуОтобораДляМобильного(Элемент)
	
	Элементы.Переместить(Элемент, Элементы.ГруппаОтборыМК);
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	Элемент.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	Элемент.РастягиватьПоГоризонтали = Истина;
	Элементы.ДатаНачала.Ширина = 8;
	Элементы.ДатаНачала.Формат = НСтр("ru='ДФ=''dd.MM.yy'''");
	Элементы.ДатаОкончания.Ширина = 8;
	Элементы.ДатаОкончания.Формат = Элементы.ДатаНачала.Формат;
	
КонецПроцедуры
	
#КонецОбласти

#КонецОбласти
