
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СхемыПроцессовСервер.ПрочитатьСхемуВФорму(Параметры.СхемаПроцесса, ЭтотОбъект);
	
	Если Не ДоступенПросмотрСхемыПроцесса() Тогда  
		ТекстИсключения = НСтр("ru = 'У вас не достаточно полномочий для просмотра схем.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если Не ДоступноРедактированиеСхемыПроцесса() И Не ЗначениеЗаполнено(ДанныеСхемы.Ссылка) Тогда
		ТекстИсключения = НСтр("ru = 'У вас не достаточно полномочий для создания схем.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	СхемыПроцессовКлиентСервер.ЗаполнитьЗаголовокФормыПоДаннымСхемы(ЭтотОбъект);
	
	НаименованиеСхемы = ДанныеСхемы.Наименование;
	
	Если ЗначениеЗаполнено(ДанныеСхемы.Ссылка) Тогда
		СхемыПроцессовКлиентСервер.ЗаполнитьНавигационнуюСсылкуФормыПоДаннымСхемы(ЭтотОбъект);
	КонецЕсли;
	
	НастроитьДоступностьЭлементовУправленияСхемой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ОбработатьОтветНаВопросЗаписиИзмененийПередЗакрытием", ЭтотОбъект),
			НСтр("ru = 'Данные были изменены. Сохранить изменения?'"),
			РежимДиалогаВопрос.ДаНетОтмена);
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеСхемыПриИзменении(Элемент)
	
	Модифицированность = Истина;
	ДанныеСхемы.Наименование = НаименованиеСхемы;
	СхемыПроцессовКлиентСервер.ЗаполнитьЗаголовокФормыПоДаннымСхемы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СхемаПриИзменении(Элемент)
		
	СхемыПроцессовКлиент.ОбновитьДанныеСхемыВФорме(
		ЭтотОбъект, 
		Новый ОписаниеОповещения("ОбработатьОбновлениеДанныхСхемы", ЭтотОбъект));
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьСхемуПроцесса();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
		
	ЗаписатьСхемуПроцесса();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСхему(Команда)
	
	ПроверитьКорректностьСхемыВФорме();
	
	СхемыПроцессовКлиент.ПоказатьРезультатПроверкиСхемыВФорме(ЭтотОбъект);
	
	Если СхемыПроцессовКлиентСервер.ЕстьОшибкиНастройкиСхемы(ЭтотОбъект) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Схема не прошла проверку.'",
			ОбщегоНазначенияКлиент.КодОсновногоЯзыка()));
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Схема корректна'",
			ОбщегоНазначенияКлиент.КодОсновногоЯзыка()));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Продолжение ПередЗакрытием.
//
&НаКлиенте
Процедура ОбработатьОтветНаВопросЗаписиИзмененийПередЗакрытием(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьСхемуПроцесса();
		Закрыть();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	Иначе
		// Не закрываем форму.
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСхемуПроцесса()
	
	ОчиститьСообщения();
	
	Если Не ЗначениеЗаполнено(НаименованиеСхемы) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			 НСтр("ru = 'Не заполнено наименование схемы.'"),,
			 "НаименованиеСхемы");
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеСхемы.Ссылка) Тогда
		ТекстОпопвещения = НСтр("ru = 'Изменение:'");
	Иначе
		ТекстОпопвещения = НСтр("ru = 'Создание'");
	КонецЕсли;
	
	ЗаписатьСхемуПроцессаНаСервере();
	
	ПоказатьОповещениеПользователя(
		ТекстОпопвещения,
		НавигационнаяСсылка,
		НаименованиеСхемы,
		БиблиотекаКартинок.Информация32);
	
	ОповеститьОбИзменении(ДанныеСхемы.Ссылка);
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСхемуПроцессаНаСервере()
	
	ЭтоНоваяСхема = Не ЗначениеЗаполнено(ДанныеСхемы.Ссылка);
	
	СхемыПроцессовСервер.ЗаписатьСхемуИзФормы(ЭтотОбъект);
	
	Если ЭтоНоваяСхема Тогда
		СхемыПроцессовКлиентСервер.ЗаполнитьНавигационнуюСсылкуФормыПоДаннымСхемы(ЭтотОбъект);
		СхемыПроцессовКлиентСервер.ЗаполнитьЗаголовокФормыПоДаннымСхемы(ЭтотОбъект);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОбновлениеДанныхСхемы(РезультатОбработки, ДопПараметры) Экспорт
	
	ПодключитьОбработчикОжидания("ВосстановитьФокусТекущегоЭлементаСхемыПроцесса", 0.1, Истина);
	
КонецПроцедуры

 &НаКлиенте
Процедура ВосстановитьФокусТекущегоЭлементаСхемыПроцесса() Экспорт
	
	СхемыПроцессовКлиент.ВосстановитьТекущийЭлементПоДаннымСхемы(ЭтотОбъект);
		
КонецПроцедуры

&НаСервере
Функция ДоступенПросмотрСхемыПроцесса()
	
	Возврат ПравоДоступа("Чтение", Метаданные.Справочники.СхемыПроцессов);
			
КонецФункции

&НаСервере
Функция ДоступноРедактированиеСхемыПроцесса()
	
	Возврат ПравоДоступа("Изменение", Метаданные.Справочники.СхемыПроцессов);
		
КонецФункции

&НаСервере
Процедура НастроитьДоступностьЭлементовУправленияСхемой()
	
	ДоступноРедактирование = ДоступноРедактированиеСхемыПроцесса();
	СхемыПроцессовСервер.НастроитьДоступностьРедактированияСхемы(ЭтотОбъект, ДоступноРедактирование);
	Элементы.НаименованиеСхемы.Видимость = ДоступноРедактирование;
	ПоложениеКоманднойПанели = ?(ДоступноРедактирование,
		ПоложениеКоманднойПанелиФормы.Авто,
		ПоложениеКоманднойПанелиФормы.Нет);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКорректностьСхемыВФорме()
	
	СхемыПроцессовСервер.ПроверитьКорректностьСхемыВФорме(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти