
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПротоколированиеРаботыСотрудников.ЗаписатьОткрытие(Объект.Ссылка);
	ДоступноИзменениеОбщихКатегорий = РольДоступна("ДобавлениеИзменениеОбщихКатегорий") 
		Или РольДоступна("ПолныеПрава");
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Автор = Сотрудники.ОсновнойСотрудник();
		
		Если Не ДоступноИзменениеОбщихКатегорий Тогда
			Объект.Персональная = Истина;
			Объект.Доступ.Очистить();
			Объект.Доступ.Добавить().Участник = Сотрудники.ОсновнойСотрудник();
			Элементы.Автор.Доступность = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Родитель)
			И Объект.Родитель <> Справочники.КатегорииДанных.ВсеКатегории
			И НЕ Объект.Родитель.Персональная 
			И НЕ РольДоступна("ДобавлениеИзменениеОбщихКатегорий") 
			И НЕ РольДоступна("ПолныеПрава") 
			ИЛИ Объект.Родитель.Пустая() Тогда
			Объект.Родитель = Справочники.КатегорииДанных.ВсеКатегории;
		ИначеЕсли ЗначениеЗаполнено(Объект.Родитель)
			И Объект.Родитель <> Справочники.КатегорииДанных.ВсеКатегории 
			И (РольДоступна("ДобавлениеИзменениеОбщихКатегорий") 
			ИЛИ РольДоступна("ПолныеПрава")) Тогда
			Объект.Персональная = Объект.Родитель.Персональная;
			Элементы.Персональная.ТолькоПросмотр = Истина;
			Если Объект.Персональная Тогда	
				Объект.Доступ.Добавить().Участник = Сотрудники.ОсновнойСотрудник();
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если Объект.Родитель <> Справочники.КатегорииДанных.ВсеКатегории Тогда
			Элементы.Персональная.ТолькоПросмотр = Истина;
		Иначе
			Запрос = Новый Запрос;
			Запрос.Текст =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			 				|	КатегорииДанных.Ссылка
			 				|ИЗ
			 				|	Справочник.КатегорииДанных КАК КатегорииДанных
			 				|ГДЕ
			 				|	КатегорииДанных.Родитель = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
			Элементы.Персональная.ТолькоПросмотр = Запрос.Выполнить().Выбрать().Количество() > 0
				И ДоступноИзменениеОбщихКатегорий;
		КонецЕсли;
		
		Если НЕ Объект.Персональная
			И НЕ ДоступноИзменениеОбщихКатегорий
			ИЛИ Объект.Ссылка = Справочники.КатегорииДанных.ВсеКатегории Тогда
			ТолькоПросмотр = Истина;
			Элементы.ДоступПодобратьПользователейЛичныйДоступ.Доступность = Ложь;
		КонецЕсли;
		
		Права = ДокументооборотПраваДоступа.ПраваСотрудникаПоОбъекту(Объект.Ссылка,
			Сотрудники.ОсновнойСотрудник());
		ТолькоПросмотр = Не Права.Изменение;
		Элементы.ДоступПодобратьПользователейЛичныйДоступ.Доступность = Права.Изменение;		
	КонецЕсли;
	
	Если Не ДоступноИзменениеОбщихКатегорий Тогда
		Элементы.Персональная.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Элементы.ГруппаКнопкиТаблицыДоступа.Доступность = Не Объект.Персональная;
	Элементы.Доступ.Доступность = Не Объект.Персональная;
	ПользователиПустаяСсылка = Справочники.Пользователи.ПустаяСсылка();
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		НастроитьЭлементыФормыДляМобильногоУстройства();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОбщегоНазначенияДокументооборотКлиент.УдалитьПустыеСтрокиТаблицы(Объект.Доступ, "Участник");
	НеобходимоОповеститьОбИзменении = Модифицированность;
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ДатаСоздания = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ЭтоНовыйОбъект", НЕ ЗначениеЗаполнено(ТекущийОбъект.Ссылка));
	
	Если ЗначениеЗаполнено(Объект.Родитель)
		И Объект.Родитель <> Справочники.КатегорииДанных.ВсеКатегории Тогда
		Если Объект.Персональная <> Объект.Родитель.Персональная Тогда
			Если Объект.Персональная Тогда
				ТекстСообщения = НСтр("ru = 'Запрещено создавать личные категории подчиненными по отношению к общим'");
			Иначе
				ТекстСообщения = НСтр("ru = 'Запрещено создавать общие категории подчиненными по отношению к персональным'");
			КонецЕсли;
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.Персональная", , Отказ);
		КонецЕсли;
	Иначе
		
		Если Не ДоступноИзменениеОбщихКатегорий Тогда
			
			ТекстСообщения = НСтр("ru = 'Запрещено создавать личные категории без родителя'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.Родитель", , Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
		
	Для Каждого ЭлементДоступа Из Объект.Доступ Цикл
		Если НЕ ЗначениеЗаполнено(ЭлементДоступа.Участник) Тогда
			Сообщение = НСтр("ru = 'В списке сотрудников, имеющих доступ к категории, имеются незаполненные строки'");
			ОбщегоНазначения.СообщитьПользователю(Сообщение, , "Объект.Доступ", , Отказ);
			Прервать;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если НеобходимоОповеститьОбИзменении Тогда
		Оповестить("РедактироваласьКатегория", Объект.Ссылка, ЭтаФорма);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПротоколированиеРаботыСотрудников.ЗаписатьСоздание(Объект.Ссылка, ПараметрыЗаписи.ЭтоНовыйОбъект);
	ПротоколированиеРаботыСотрудников.ЗаписатьИзменение(Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПерсональнаяПриИзменении(Элемент)
	
	Если Объект.Персональная Тогда
		Объект.Доступ.Очистить();
		Объект.Доступ.Добавить().Участник = Объект.Автор;
	Иначе
		Объект.Доступ.Очистить();
	КонецЕсли;
	Элементы.ГруппаКнопкиТаблицыДоступа.Доступность = Не Объект.Персональная;
	Элементы.Доступ.Доступность = Не Объект.Персональная;
	
КонецПроцедуры

&НаКлиенте
Процедура РодительОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.Родитель = ПредопределенноеЗначение("Справочник.КатегорииДанных.ВсеКатегории");
	
	Элементы.Персональная.Доступность = ДоступноИзменениеОбщихКатегорий;
	
КонецПроцедуры

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	ИзменитьРодителя();
	
КонецПроцедуры

&НаКлиенте
Процедура АвторПриИзменении(Элемент)
	
	Если Объект.Персональная Тогда
		Объект.Доступ.Очистить();
		Объект.Доступ.Добавить().Участник = Объект.Автор;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура АвторНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СотрудникиКлиент.ВыбратьСотрудникаИзАдреснойКниги(Элемент, Объект.Автор);
	
КонецПроцедуры

&НаКлиенте
Процедура АвторОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	
	СотрудникиКлиент.СотрудникОбработкаВыбора(Объект, "Автор", ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДоступ

&НаКлиенте
Процедура ДоступПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда 
		Элементы.Доступ.ТекущиеДанные.Участник = ПредопределенноеЗначение(
			"Справочник.Сотрудники.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ЕстьИзменения = Ложь;
	
	Для каждого Значение Из ВыбранноеЗначение Цикл
		Если Объект.Доступ.НайтиСтроки(Новый Структура("Участник", Значение)).Количество() = 0 Тогда
			Строка = Объект.Доступ.Добавить();
			Строка.Участник = Значение;
			ЕстьИзменения = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьИзменения Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступУчастникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Доступ.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Если значение требует уточнения, будет вызвана форма для ввода уточняющих данных.
	// Обработка выбора не должна выполняться в этом случае.
	ТипыДляУточнения = Новый Массив;
	ТипыДляУточнения.Добавить(Тип("Структура"));
	ТипыДляУточнения.Добавить(Тип("СправочникСсылка.РолиИсполнителей"));
	ТипыДляУточнения.Добавить(Тип("СправочникСсылка.СтруктураПредприятия"));
	ТипыДляУточнения.Добавить(Тип("СправочникСсылка.Проекты"));
	Если ТипыДляУточнения.Найти(ТипЗнч(ВыбранноеЗначение)) <> Неопределено Тогда
		СотрудникиКлиент.ОбработкаВыбораКонтейнера(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
		// Повторная проверка (значение могло быть изменено).
		Если ТипыДляУточнения.Найти(ТипЗнч(ВыбранноеЗначение)) <> Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ТекущиеДанные.Участник = ВыбранноеЗначение;
	
	СотрудникиКлиент.СотрудникОбработкаВыбора(ТекущиеДанные, "Участник", ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступУчастникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка= Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", 1);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	
	ДопустимыСотрудники = Истина;
	ПараметрыФормы.Вставить("ОтображатьСотрудников", ДопустимыСотрудники);
	ПараметрыФормы.Вставить("ВыбиратьСотрудников", ДопустимыСотрудники);
	ПараметрыФормы.Вставить("ВыбиратьКонтейнерыПользователей", Истина);
	
	Если Элементы.Доступ.ТекущиеДанные <> Неопределено Тогда
		ПараметрыФормы.Вставить("ВыбранныеАдресаты",
			Элементы.Доступ.ТекущиеДанные.Участник);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Выбор сотрудников, подразделения, группы'"));
	ПараметрыФормы.Вставить("ЗаголовокСпискаАдреснойКниги", НСтр("ru = 'Все сотрудники'"));
	
	РаботаСАдреснойКнигойКлиент.ВыбратьАдресатов(ПараметрыФормы, Элементы.ДоступУчастник, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступУчастникАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СформироватьДанныеВыбораУчастника(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступУчастникОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СформироватьДанныеВыбораУчастника(Текст);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодобратьПользователейЛичныйДоступ(Команда)
	
	ВыбранныеАдресаты = Новый Массив;
	Для Каждого СтрокаУчастника Из Объект.Доступ Цикл
		Если ЗначениеЗаполнено(СтрокаУчастника.Участник) Тогда
			ВыбранныеАдресаты.Добавить(СтрокаУчастника.Участник);
		КонецЕсли;
	КонецЦикла;
	
	ДоступныеТипы = Новый ОписаниеТипов("СправочникСсылка.Сотрудники, 
		|СправочникСсылка.ПолныеРоли,
		|СправочникСсылка.РабочиеГруппы,
		|СправочникСсылка.ПодразделенияКонтейнеры,
		|СправочникСсылка.ПроектыКонтейнеры");
	РаботаСАдреснойКнигойКлиент.ВыбратьУчастника(ЭтаФорма, 
		Элементы.Доступ, 
		Ложь,
		ВыбранныеАдресаты, 
		ДоступныеТипы, 
		НСтр("ru = 'Подбор сотрудников, подразделений, групп, ролей'"),
		Новый Структура("ВыборМножества, ПравилаКоммуникаций", Истина, Ложь));
	
КонецПроцедуры

&НаКлиенте
Процедура Подписаться(Команда)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("ОбъектПодписки", Объект.Ссылка);
		ОткрытьФорму("ОбщаяФорма.ПодпискаНаУведомленияПоОбъекту", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПраваДоступа(Команда)
	
	ДокументооборотПраваДоступаКлиент.ОткрытьФормуПравДоступа(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИзменитьРодителя()
	
	Если НЕ ЗначениеЗаполнено(Объект.Родитель) Тогда  
		
		Если ДоступноИзменениеОбщихКатегорий Тогда
		
			Объект.Родитель = Справочники.КатегорииДанных.ВсеКатегории;
			Объект.Персональная = Ложь;
			Элементы.Персональная.Доступность = Истина;
			Элементы.Персональная.ТолькоПросмотр = Ложь;
			
		КонецЕсли;	
		
	ИначеЕсли Объект.Родитель = Справочники.КатегорииДанных.ВсеКатегории Тогда
		Объект.Персональная = Ложь;
		Элементы.Персональная.Доступность = Истина;
		Элементы.Персональная.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.Родитель.Персональная Тогда
		Объект.Персональная = Истина;
		Элементы.Персональная.Доступность = Ложь;
		Объект.Доступ.Очистить();
		Объект.Доступ.Добавить().Участник = Сотрудники.ОсновнойСотрудник();
	ИначеЕсли НЕ Объект.Родитель.Персональная Тогда
		Объект.Доступ.Очистить();
	Элементы.Персональная.Доступность = Ложь;
	КонецЕсли;
	Элементы.Доступ.Доступность = НЕ Объект.Персональная;
	Элементы.ГруппаКнопкиТаблицыДоступа.Доступность = Не Объект.Персональная;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьДанныеВыбораУчастника(Знач Текст)
	
	ДополнениеТипа = Новый ОписаниеТипов(
		"СправочникСсылка.ПолныеРоли, СправочникСсылка.РабочиеГруппы, СправочникСсылка.ПроектыКонтейнеры, 
		|СправочникСсылка.ПодразделенияКонтейнеры, СправочникСсылка.Сотрудники");
	 
	Возврат СотрудникиВызовСервера.СформироватьДанныеВыбора(Текст, ДополнениеТипа);   
	
КонецФункции

&НаСервере
Процедура НастроитьЭлементыФормыДляМобильногоУстройства()
	
	Элементы.ГруппаАвтор.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	Элементы.Персональная.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.Описание.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	Элементы.Описание.МаксимальнаяВысота = 0;
	Элементы.Описание.АвтоМаксимальнаяВысота = Истина;
	Элементы.Описание.ПодсказкаВвода = "";
	
	Элементы.Наименование.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
КонецПроцедуры

#КонецОбласти
