#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает пустую структуру данных параметров схемы обработки объекта. 
// 
// Возвращаемое значение:
// 	Структура:
//   * Схема - СправочникСсылка.СхемыПроцессов
//   * ВладелецСхемы - СправочникСсылка.НастройкиОбработкиВидовОбъектов,
//                          СправочникСсылка.ОбработкиОбъектов
//   * ПометкаУдаления - Булево - пометка ужадения схемы процесса.
//   * ВерсияДанных - Строка - версия данных параметров схемы.
//   * АвтоформируемаяСхема - Булево
//   * НастройкиЭлементов - Соответствие
//     ** Ключ - Строка - имя элемента в схеме.
//     ** Значение - СправочникСсылка.ВидыДействий,
//                   НастройкиКомпоновкиДанных - для условий.
//
Функция СтруктураДанныхПараметровСхемы() Экспорт
	
	СтруктураСхемы = Новый Структура;
	СтруктураСхемы.Вставить("Схема", Справочники.СхемыПроцессов.ПустаяСсылка());
	СтруктураСхемы.Вставить("ВладелецСхемы", Неопределено);
	СтруктураСхемы.Вставить("ПометкаУдаления", Ложь);
	СтруктураСхемы.Вставить("ВерсияДанных", "");
	СтруктураСхемы.Вставить("АвтоформируемаяСхема", Истина);
	СтруктураСхемы.Вставить("НастройкиЭлементов", Новый Соответствие());
	
	Возврат СтруктураСхемы;
	
КонецФункции

// Возвращает данные параметров схемы обработки объекта.
//  
// Параметры:
// 	ПараметрыСхемы - СправочникСсылка.ПараметрыСхемДляОбработокОбъектов 
// 	
// Возвращаемое значение:
//  Структура - см. СтруктураДанныхПараметровСхемы
// 	
Функция ДанныеПараметровСхемы(ПараметрыСхемы) Экспорт
	
	ПараметрыСхемыОбъект = ПараметрыСхемы.ПолучитьОбъект();
	
	ДанныеПараметров = СтруктураДанныхПараметровСхемы();
	ДанныеПараметров.Схема = ПараметрыСхемыОбъект.Схема;
	ДанныеПараметров.ВладелецСхемы = ПараметрыСхемыОбъект.ВладелецСхемы;
	ДанныеПараметров.ПометкаУдаления = ПараметрыСхемыОбъект.ПометкаУдаления;
	ДанныеПараметров.ВерсияДанных = ПараметрыСхемыОбъект.ВерсияДанных;
	ДанныеПараметров.АвтоформируемаяСхема = ПараметрыСхемыОбъект.АвтоформируемаяСхема;
	
	Для Каждого СтрокаТаблицы Из ПараметрыСхемыОбъект.НастройкиЭлементов Цикл
		
		Если СтрокаТаблицы.Настройка = Неопределено Тогда
			ДанныеПараметров.НастройкиЭлементов[СтрокаТаблицы.ИмяЭлемента] = 
				СтрокаТаблицы.НастройкаХранилище.Получить();
		Иначе
			ДанныеПараметров.НастройкиЭлементов[СтрокаТаблицы.ИмяЭлемента] = СтрокаТаблицы.Настройка;			
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДанныеПараметров;
	
КонецФункции

// Записывает данные параметров схемы обработки объекта.
//   
// Параметры:
// 	ПараметрыСхемы - СправочникСсылка.ПараметрыСхемДляОбработокОбъектов
// 	ДанныеПараметров - Структура - см. СтруктураДанныхПараметровСхемы.
// 	Загрузка - Булево - режим загрузки данных.
//
// Возвращаемое значение:
//  Структура
//   * ПараметрыСхемы - СправочникСсылка.ПараметрыСхемДляОбработокОбъектов
//   * ВерсияДанных - Строка
// 	
Функция ЗаписатьДанныеПараметровСхемы(ПараметрыСхемы, ДанныеПараметров, Загрузка = Ложь) Экспорт
	
	РезультатЗаписи = Новый Структура;
	РезультатЗаписи.Вставить("ПараметрыСхемы", ПустаяСсылка());
	РезультатЗаписи.Вставить("ВерсияДанных", "");
	
	Если ЗначениеЗаполнено(ПараметрыСхемы) Тогда
		ЗаблокироватьДанныеДляРедактирования(ПараметрыСхемы);
		ПараметрыСхемыОбъект = ПараметрыСхемы.ПолучитьОбъект();
	Иначе
		ПараметрыСхемыОбъект = СоздатьЭлемент();
		ПараметрыСхемыОбъект.Схема = ДанныеПараметров.Схема;
		ПараметрыСхемыОбъект.ВладелецСхемы = ДанныеПараметров.ВладелецСхемы;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыСхемыОбъект.ВерсияДанных)
		И ЗначениеЗаполнено(ДанныеПараметров.ВерсияДанных)
		И ПараметрыСхемыОбъект.ВерсияДанных <> ДанныеПараметров.ВерсияДанных Тогда
		
		ВызватьИсключение НСтр("ru = 'Не удалось сохранить изменения.
			|Возможно, параметры схемы были изменены другим сотрудником.'");
	КонецЕсли;
	
	ПараметрыСхемыОбъект.АвтоформируемаяСхема = ДанныеПараметров.АвтоформируемаяСхема;
	ПараметрыСхемыОбъект.ПометкаУдаления = ДанныеПараметров.ПометкаУдаления;
	
	ПараметрыСхемыОбъект.НастройкиЭлементов.Очистить();
	Для Каждого НастройкаПараметра Из ДанныеПараметров.НастройкиЭлементов Цикл
		СтрокаТаблицы = ПараметрыСхемыОбъект.НастройкиЭлементов.Добавить();
		СтрокаТаблицы.ИмяЭлемента = НастройкаПараметра.Ключ;
		Если ТипЗнч(НастройкаПараметра.Значение) = Тип("НастройкиКомпоновкиДанных") Тогда
			СтрокаТаблицы.НастройкаХранилище = Новый ХранилищеЗначения(НастройкаПараметра.Значение);
		Иначе
			СтрокаТаблицы.Настройка = НастройкаПараметра.Значение;
		КонецЕсли;		
	КонецЦикла;
	
	ПараметрыСхемыОбъект.ОбменДанными.Загрузка = Загрузка;
	
	ПараметрыСхемыОбъект.Записать();
	
	Если ЗначениеЗаполнено(ПараметрыСхемы) Тогда
		РазблокироватьДанныеДляРедактирования(ПараметрыСхемы);
	КонецЕсли;
	
	РезультатЗаписи.ПараметрыСхемы = ПараметрыСхемыОбъект.Ссылка;
	РезультатЗаписи.ВерсияДанных = ПараметрыСхемыОбъект.ВерсияДанных;
	
	Возврат РезультатЗаписи;
	
КонецФункции

// Удаляет параметры схемы из базы.
// 
// Параметры:
// 	ПараметрыСхемы - СправочникСсылка.ПараметрыСхемДляОбработокОбъектов
//
Процедура УдалитьПараметрыСхемы(ПараметрыСхемы) Экспорт
	
	ЗаблокироватьДанныеДляРедактирования(ПараметрыСхемы);
	
	ПараметрыСхемыОбъект = ПараметрыСхемы.ПолучитьОбъект();
	ПараметрыСхемыОбъект.Удалить();	
	
	РазблокироватьДанныеДляРедактирования(ПараметрыСхемы);
	
КонецПроцедуры

// Возвращает ссылку на параметры схемы по владельцу.
// 
// Параметры:
//  ВладелецСхемы - СправочникСсылка.ПараметрыСхемДляОбработокОбъектов,
//                  СправочникСсылка.ОбработкиОбъектов
// 
// Возвращаемое значение:
//   СправочникСсылка.ПараметрыСхемДляОбработокОбъектов
// 	
Функция ПараметрыСхемыПоВладельцу(ВладелецСхемы) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПараметрыСхемОбработокОбъектов.Ссылка
		|ИЗ
		|	Справочник.ПараметрыСхемДляОбработокОбъектов КАК ПараметрыСхемОбработокОбъектов
		|ГДЕ
		|	ПараметрыСхемОбработокОбъектов.ВладелецСхемы = &ВладелецСхемы";
	Запрос.УстановитьПараметр("ВладелецСхемы", ВладелецСхемы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка; 
	КонецЕсли;
	
	Возврат ПустаяСсылка();
	
КонецФункции

// Возвращает ссылку на параметры по переданной схеме процесса.
// 
// Параметры:
//  СхемаПроцесса - СправочникСсылка.СхемыПроцессов
// 
// Возвращаемое значение:
//   СправочникСсылка.ПараметрыСхемДляОбработокОбъектов
// 	
Функция ПараметрыПоСхеме(СхемаПроцесса) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПараметрыСхемОбработокОбъектов.Ссылка
		|ИЗ
		|	Справочник.ПараметрыСхемДляОбработокОбъектов КАК ПараметрыСхемОбработокОбъектов
		|ГДЕ
		|	ПараметрыСхемОбработокОбъектов.Схема = &СхемаПроцесса";
	Запрос.УстановитьПараметр("СхемаПроцесса", СхемаПроцесса);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка; 
	КонецЕсли;
	
	Возврат ПустаяСсылка();
	
КонецФункции

// Возвращает доступность изменения параметров схемы.
// 
// Параметры:
// 	ПараметрыСхемы - СправочникСсылка.ПараметрыСхемДляОбработокОбъектов,
// 	                 СправочникОбъект.ПараметрыСхемДляОбработокОбъектов
// 	
// Возвращаемое значение:
//  Строка - принимает одно из значений:
//    "ИзменениеДоступно" - у текущего пользователя есть возможность изменения параметров.
//    "НетПравНаРедактированиеНастроекОбработки" - нет возможности изменения, требуются право
//                                                 редактирования настроек обработки,
//                                                 которого нет у тек. пользователя.
//    "НетПравНаИзменениеОбъектаОбработки" - нет возможности изменения, требуются права объект
//                                           обработки, которых нет у тек. пользователя. 
//
Функция ДоступностьИзмененияПараметровСхемы(ПараметрыСхемы) Экспорт
	
	Если ТипЗнч(ПараметрыСхемы) = Тип("СправочникОбъект.ПараметрыСхемДляОбработокОбъектов") Тогда
		РеквизитыПараметров = ПараметрыСхемы;
	Иначе
		РеквизитыПараметров = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ПараметрыСхемы, "ВладелецСхемы, ОбъектДоступа");
	КонецЕсли;
	
	ТипВладельца = ТипЗнч(РеквизитыПараметров.ВладелецСхемы);
	
	Если ТипВладельца = Тип("СправочникСсылка.НастройкиОбработкиВидовОбъектов") 
		И РольДоступна("ДобавлениеИзменениеНастроекОбработкиОбъектов") = Ложь
		И РольДоступна("ПолныеПрава") = Ложь Тогда
		
		Возврат "НетПравНаРедактированиеНастроекОбработки";
		
	КонецЕсли;
	
	Если ТипВладельца = Тип("СправочникСсылка.ОбработкиОбъектов")
		И РольДоступна("ПолныеПрава") = Ложь Тогда
				
		ПраваНаОбъектДоступа = ДокументооборотПраваДоступа.ПраваСотрудниковПоОбъекту(
			РеквизитыПараметров.ОбъектДоступа,
			Истина, Сотрудники.ВсеСотрудникиТекущегоПользователя());
		
		Если ПраваНаОбъектДоступа.Найти(Истина, "Изменение") = Неопределено Тогда
			Возврат "НетПравНаИзменениеОбъектаОбработки";
		КонецЕсли;
		
	КонецЕсли; 
	
	Возврат "ИзменениеДоступно";
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("ВладелецСхемы");
		
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Представление = СтрШаблон(
		НСтр("ru = 'Параметры схемы для обработки ""%1""'"),
		Строка(Данные.ВладелецСхемы)); 
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)

#Если ТолстыйКлиентУправляемоеПриложение Тогда
	// Не предусмотрено особого поведения для толстого клиента управляемого приложения.
#Иначе
	Если РаботаСПроцессамиПоОбработкамОбъектовСобытия.ОбработатьПолучениеФормыПараметровСхемы(
		ВидФормы, Параметры, ВыбраннаяФорма, СтандартнаяОбработка) Тогда
		
		Возврат;
	КонецЕсли;
#КонецЕсли

КонецПроцедуры

#КонецОбласти