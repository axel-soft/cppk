#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)

	Если ЭтоНовый() Тогда
		МиграцияДанныхИзВнешнихСистемСервер.УстановитьИзменяетсяВДругойСистеме(ЭтотОбъект);
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьОбъектДоступа();
	
	Если Не МиграцияДанныхИзВнешнихСистемСервер.ЭтоОбъектИзДругойСистемы(ИсточникДанных) Тогда
		ПроверитьВозможностьИзмененияПараметровСхемы();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьВозможностьИзмененияПараметровСхемы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет реквизит ОбъектДоступа.
// 
Процедура ЗаполнитьОбъектДоступа()
	
	Если ВладелецСхемы = Неопределено Тогда
		// Вызываем исключение на случай ошибки алгоритмов заполнения параметров схемы.
		ВызватьИсключение НСтр("ru = 'Не заполнен реквизит ВладелецСхемы.'");		
	КонецЕсли; 	
		
	Если ТипЗнч(ВладелецСхемы) = Тип("СправочникСсылка.НастройкиОбработкиВидовОбъектов") Тогда
		ОбъектДоступа = ПустойОбъектДоступа();
		Возврат;
	КонецЕсли;
	
	// Заполняем объект доступа владельцем обработки объекта.
	// Тип("СправочникСсылка.ОбработкиОбъектов")
	
	ВладелецОбработки =
		ОбщегоНазначенияДокументооборот.ЗначениеРеквизитаОбъектаВПривилегированномРежиме(
		ВладелецСхемы, "Владелец");
		
	ПоддерживаемыеТипы = 
		Метаданные.Справочники.ПараметрыСхемДляОбработокОбъектов.Реквизиты.ОбъектДоступа.Тип;
	
	Если Не ПоддерживаемыеТипы.СодержитТип(ТипЗнч(ВладелецОбработки)) Тогда
		// Вызываем исключение на случай ошибки подключения нового объекта к обработке объектов.
		ВызватьИсключение
			НСтр("ru = 'Тип объекта обработки не может использоваться в качестве объекта доступа к параметрам схемы.
				|Проверьте соответствие типов реквизита ОбъектДоступа и Справочник.ОбъектДоступа.Владелец.'");
	КонецЕсли;
	
	ОбъектДоступа = ВладелецОбработки;
	
КонецПроцедуры

// Проверяет возможность изменения текущих параметров схемы.
// Если возможности изменения нет у текущего пользователя,
// то вызывается исключение с соответствующим описанием.
// 
// Это низкоуровневая проверка.
// Дополнительные проверки должны быть предусмотрены в интерфейсах редактирования схем. 
//
Процедура ПроверитьВозможностьИзмененияПараметровСхемы()
	
	ДоступностьИзменения = 
		Справочники.ПараметрыСхемДляОбработокОбъектов.ДоступностьИзмененияПараметровСхемы(
		ЭтотОбъект);
	
	Если ДоступностьИзменения = "НетПравНаРедактированиеНастроекОбработки" Тогда
		ВызватьИсключение
			НСтр("ru = 'Не достаточно прав для изменения параметров схемы.
			|Изменение параметров схемы, владельцем которой является обработка при виде объекта,
			|доступно только сотруднику с ролью ""Добавление и изменение настроек обработк""
			|или полноправному сотруднику.'");
	КонецЕсли;
	
	Если ДоступностьИзменения = "НетПравНаИзменениеОбъектаОбработки" Тогда
		ВызватьИсключение
			НСтр("ru = 'Не достаточно прав для изменения параметров схемы.
			|Требуется право изменения объекта обработки.'");	
	КонецЕсли; 
		
КонецПроцедуры

// Возвращает пустой объект доступа.
// 
// Возвращаемое значение:
//   Строка
//
Функция ПустойОбъектДоступа()
	
	Возврат "НетОбъекта";
	
КонецФункции

#КонецОбласти

#Иначе
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли