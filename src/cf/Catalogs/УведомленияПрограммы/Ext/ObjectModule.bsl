#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Обновляет зависимые данные, необходимые для отражения объекта в зависимых данных.
// При установке объекту "ОбменДанными.Загрузка = Истина" рекомендуется вызвать,
// для корректного отражения изменения в зависимых данных, если алгоритм обновления зависимых
// данных не прописан явно.
// 
Процедура ОбновитьЗависимыеДанные() Экспорт
	
	ОбновитьРегистрСведенийУведомленияОкном();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыСеанса.ЗагрузкаОбработанныхДанныхИзДругойСистемы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПометкаУдаления Тогда
		РаботаС_HTML.ДобавитьТегиКСсылкам(Описание);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьЗависимыеДанные();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обновляет записи регистра по уведомлению.
// 
Процедура ОбновитьРегистрСведенийУведомленияОкном()
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.УведомленияОкном");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Уведомление", Ссылка);
		Блокировка.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.УведомленияОкном.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Уведомление.Установить(Ссылка);
		
		Если Не ПометкаУдаления Тогда
			
			// Запись для пользователя.
			ЗаписьПользователя = НаборЗаписей.Добавить();
			ЗаписьПользователя.ОтборПользователь = Пользователь;
			ЗаписьПользователя.Дата = Дата;
			ЗаписьПользователя.Уведомление = Ссылка;
			ЗаписьПользователя.ВидУведомления = ВидУведомления;
			ЗаписьПользователя.КраткоеОписание = КраткоеОписание;
			ЗаписьПользователя.Объект = Объект;
			ЗаписьПользователя.Пользователь = Пользователь;
			ЗаписьПользователя.Просмотрено = Просмотрено;
			ЗаписьПользователя.Расшифровывать = Расшифровывать;
			
			// Запись для администратора.
			ЗаписьАдминистратора = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьАдминистратора, ЗаписьПользователя);
			ЗаписьАдминистратора.ОтборПользователь = Справочники.Пользователи.ПустаяСсылка();
			
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли