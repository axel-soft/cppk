#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает Имя предмета процесса по умолчанию
// 
// Параметры:
//  Ссылка - СправочникСсылка.ПротоколыМероприятий.
// 
// Возвращаемое значение:
//  Строка - Имя предмета по умолчанию.
//
Функция ПолучитьИмяПредметаПоУмолчанию(Ссылка) Экспорт
	
	Возврат НСтр("ru='Пункт протокола мероприятия'");
	
КонецФункции

// Оперативно обновляет пункт протокола.
// 
// Параметры:
//  ПунктПротокола - СправочникСсылка.ПротоколыМероприятий.
//
Процедура ЗаполнитьНомерПунктаПротокола(ПунктПротокола) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Справочник.ПротоколыМероприятий");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ПунктПротокола);
		Блокировка.Заблокировать();
		
		Если ТребуетсяЗаполнениеНомераПунктаПротокола(ПунктПротокола) Тогда
			
			ПунткПротоколаОбъект = ПунктПротокола.ПолучитьОбъект();
			Протокол = УправлениеМероприятиями.ПолучитьПротоколМероприятия(
				ПунткПротоколаОбъект.Владелец);
			
			ПунткПротоколаОбъект.НомерПунктаПротокола =
				УправлениеМероприятиямиКлиентСервер.ПолучитьНомерПунктаПротокола(
					ПунткПротоколаОбъект,
					Протокол);
			Если Не ЗначениеЗаполнено(ПунткПротоколаОбъект.НомерПунктаПротокола) Тогда
				ПунткПротоколаОбъект.НомерПунктаПротокола = "-";
			КонецЕсли;
			
			ПунткПротоколаОбъект.ДополнительныеСвойства.Вставить("ОтключитьОтметкиВремени");
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПунткПротоколаОбъект);
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

#Область ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	// Нет настроек.
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Решили");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Представление = Данные.Решили;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта"
		И Параметры.Свойство("Ключ")
		И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		
		Если ТребуетсяЗаполнениеНомераПунктаПротокола(Параметры.Ключ) Тогда
			ЗаполнитьНомерПунктаПротокола(Параметры.Ключ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Определяет, требуется ли оперативное обновление пункта протокола.
// 
// Параметры:
//  ПунктПротокола - СправочникСсылка.ПротоколыМероприятий.
// 
// Возвращаемое значение:
//  Булево - Требуется оперативное обновление пункта протокола.
//
Функция ТребуетсяЗаполнениеНомераПунктаПротокола(ПунктПротокола)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НомерПунктаПротокола = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		ПунктПротокола,
		"НомерПунктаПротокола");
	
	ТребуетсяЗаполнениеНомераПунктаПротокола = Не ЗначениеЗаполнено(НомерПунктаПротокола);
	
	Возврат ТребуетсяЗаполнениеНомераПунктаПротокола;
	
КонецФункции

#КонецОбласти

#КонецЕсли