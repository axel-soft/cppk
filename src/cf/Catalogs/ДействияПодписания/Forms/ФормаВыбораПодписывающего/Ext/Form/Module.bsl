
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Предмет = Параметры.Предмет;
	Элементы.Предмет.Видимость = НЕ Параметры.ОднаЗадача;
	
	Если ЗначениеЗаполнено(Параметры.Подписывающие) Тогда
		Для Каждого СтрПодписывающий Из Параметры.Подписывающие Цикл
			НоваяСтрока = Подписывающие.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрПодписывающий);
			Если ЗначениеЗаполнено(СтрПодписывающий.Замещающий) Тогда
				НоваяСтрока.Исполнитель = СтрПодписывающий.Замещающий;
				НоваяСтрока.ИндексКартинки = 1;
				НоваяСтрока.ЭтоЗаместитель = Истина;
			Иначе
				НоваяСтрока.Исполнитель = СтрПодписывающий.Подписывающий;
				НоваяСтрока.ИндексКартинки = -1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Подписывающие.Сортировать("Подписывающий, ИндексКартинки, Исполнитель");
	
	Если ТипЗнч(Предмет) = Тип("СправочникСсылка.ДокументыПредприятия") Тогда
		
		Заголовок = НСтр("ru = 'Укажите сотрудника, который подписал документ'");
		Если Параметры.Свойство("РезультатДействияОтрицательный")
			И Параметры.РезультатДействияОтрицательный Тогда
			Заголовок = НСтр("ru = 'Укажите сотрудника, который отклонил документ'");
		КонецЕсли;
		Элементы.Предмет.Заголовок = НСтр("ru = 'Документ'");
		
	ИначеЕсли ТипЗнч(Предмет) = Тип("СправочникСсылка.Мероприятия") Тогда
		
		Заголовок = НСтр("ru = 'Укажите сотрудника, который подписал мероприятие'");
		Если Параметры.Свойство("РезультатДействияОтрицательный")
			И Параметры.РезультатДействияОтрицательный Тогда
			Заголовок = НСтр("ru = 'Укажите сотрудника, который отклонил мероприятие'");
		КонецЕсли;
		Элементы.Предмет.Заголовок = НСтр("ru = 'Мероприятие'");
		
	Иначе
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Неизвестный тип предмета %1 (%2).'"),
			Предмет,
			ТипЗнч(Предмет));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодписывающие

&НаКлиенте
Процедура ПодписывающиеВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Подписывающие.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(ТекущиеДанные.Исполнитель);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

	#Область СлужебныеПроцедурыИФункции_НагрузочноеТестирование
		
		&НаКлиенте
		Функция НТ_ПодписывающиеВыборЗначения() Экспорт
			
			Если Элементы.Подписывающие.ТекущиеДанные = Неопределено Тогда
				Закрыть(Неопределено);
				Возврат Ложь;
			КонецЕсли;
			
			ПодписывающиеВыборЗначения(Неопределено, Неопределено, Истина); //@skip-check invocation-form-event-handler
			Возврат Истина;
			
		КонецФункции
		
	#КонецОбласти

#КонецОбласти
