#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеКэширующихДанных

// Обрабатывает изменение влияющих данных, формирует очередь обновления кэширующих данных.
//
Процедура ОбработатьИзменениеВлияющихДанных() Экспорт
	
	ВлияющийОбъектМетаданных = "Справочник.ВидыДокументов";
	КлючВлияющихДанных = Ссылка;
	
	ЗависимыйОбъектМетаданных = "Справочник.ГруппировкиЗадач";
	ВлияющиеРеквизиты = "Наименование";
	ОбновлениеКэширующихДанных.ОбработатьИзменениеВлияющихДанных(
		ЭтотОбъект,
		ЗависимыйОбъектМетаданных,
		ВлияющийОбъектМетаданных,
		КлючВлияющихДанных,
		ВлияющиеРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("ФормаДокумента");

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() И Не ЭтоГруппа Тогда
		ФормаДокумента = Перечисления.ВариантыФормДокументов.БумажнаяИлиЭлектронная;
		УчитыватьМестоХранения = Перечисления.ВариантыИспользованияПолейХранения.НеУчитывать;
		УчитыватьОтветственногоЗаХранение = Перечисления.ВариантыИспользованияПолейХранения.НеУчитывать;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияДокументооборот.УстановитьДополнительноеСвойствоПредыдущиеЗначенияРеквизитов(ЭтотОбъект);
	
	Если ЭтоГруппа Тогда 
		Возврат;
	КонецЕсли;
	
	ВключенУчетПоНоменклатуреДел = ВестиУчетПоНоменклатуреДел И Константы.ИспользоватьНоменклатуруДел.Получить();
	
	Если Не ПараметрыСеанса.ЗагрузкаОбработанныхДанныхИзДругойСистемы Тогда
		// Подсистема Свойства
		УправлениеСвойствами.ПередЗаписьюВидаОбъекта(ЭтотОбъект, "Справочник_ДокументыПредприятия");
	КонецЕсли;
	
	ПредыдущаяПометкаУдаления = Ложь;
	Если ЗначениеЗаполнено(Ссылка) Тогда
		ПредыдущаяПометкаУдаления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления");
	КонецЕсли;
	ДополнительныеСвойства.Вставить("ПредыдущаяПометкаУдаления", ПредыдущаяПометкаУдаления);
	
	Если ПометкаУдаления <> ПредыдущаяПометкаУдаления Тогда 
		Если ДокументооборотПраваДоступа.ПраваПользователяПоОбъекту(Ссылка).Удаление Тогда 
			ШаблоныДокументов.ПометитьНаУдалениеШаблоныДокументов(Ссылка, ПометкаУдаления);
		Иначе
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'У вас нет права ""Пометка на удаление"" вида документа ""%1"".'"),
				Строка(Ссылка));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДокументооборотПраваДоступа.ПриЗаписиРазрезаДоступа(ЭтотОбъект, Отказ);
	ДействияСервер.ВидОбъектаПриЗаписи(Ссылка, ДополнительныеСвойства, Отказ);
	
	ПредыдущаяПометкаУдаления = Ложь;
	Если ДополнительныеСвойства.Свойство("ПредыдущаяПометкаУдаления") Тогда
		ПредыдущаяПометкаУдаления = ДополнительныеСвойства.ПредыдущаяПометкаУдаления;
	КонецЕсли;
	
	Если ПометкаУдаления <> ПредыдущаяПометкаУдаления Тогда
		ПротоколированиеРаботыСотрудников.ЗаписатьПометкуУдаления(Ссылка, ПометкаУдаления);
	КонецЕсли;	
	
	ОбработатьИзменениеВлияющихДанных();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭД")
		И ДополнительныеСвойства.Свойство("НастройкиОтправкиЭДО") Тогда
		РегистрыСведений.НастройкиОтправкиДокументовПоЭДО.ЗаписатьНаборНастроек(Ссылка,
			ДополнительныеСвойства.НастройкиОтправкиЭДО);
	КонецЕсли;
		
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭД") 
		И Не ЭтоГруппа 
		И Не ВестиУчетТоваровИУслуг
		И ДополнительныеСвойства.ПредыдущиеЗначенияРеквизитов.ВестиУчетТоваровИУслуг Тогда
		
		УдалитьСтрокуЗаполненияТоваровВПравилах();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ЭтоГруппа Тогда 
		Возврат;
	КонецЕсли;
	
	НаборСвойств = Неопределено;
	
КонецПроцедуры

Процедура ПриЧтенииПредставленийНаСервере() Экспорт
	МультиязычностьСервер.ПриЧтенииПредставленийНаСервере(ЭтотОбъект);
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции

Процедура УдалитьСтрокуЗаполненияТоваровВПравилах()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПравилаЗагрузкиДанныхВДО.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПравилаЗагрузкиДанныхВДО.ПравилаЗаполненияРеквизитовДО КАК ПравилаЗагрузкиДанныхВДОПравилаЗаполненияРеквизитовДО
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПравилаЗагрузкиДанныхВДО КАК ПравилаЗагрузкиДанныхВДО
		|		ПО ПравилаЗагрузкиДанныхВДОПравилаЗаполненияРеквизитовДО.Ссылка = ПравилаЗагрузкиДанныхВДО.Ссылка
		|ГДЕ
		|	ПравилаЗагрузкиДанныхВДО.ВидДокумента = &ВидДокумента
		|	И ПравилаЗагрузкиДанныхВДОПравилаЗаполненияРеквизитовДО.ИмяРеквизитаОбъектаДО = ""Товары""";
	
	Запрос.УстановитьПараметр("ВидДокумента", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ОбъектПравил = Выборка.Ссылка.ПолучитьОбъект();
		ПравилаЗаполнения = ОбъектПравил.ПравилаЗаполненияРеквизитовДО;
		СтрокаТовары = ПравилаЗаполнения.Найти("Товары", "ИмяРеквизитаОбъектаДО");
		ПравилаЗаполнения.Удалить(СтрокаТовары);
		ОбъектПравил.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли