#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьРеестр();
	
	МультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьРеестр();
	
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	МультиязычностьСервер.ПередЗаписьюНаСервере(ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НастройкиДействий" Или ИмяСобытия = "Запись_ПравилаОбработки" Тогда
		КоличествоНастроекПравилОбработки = НастройкиДействийВызовСервера.КоличествоНастроекПравилОбработки(
			Объект.Ссылка);
		Если КоличествоНастроекПравилОбработки > 0 Тогда 
			ПравилаОбработки = СтрШаблон(НСтр("ru = 'Правила обработки (%1)'"),
				КоличествоНастроекПравилОбработки);
		Иначе 
			ПравилаОбработки = НСтр("ru = 'Правила обработки (не заданы)'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОбщегоНазначенияДокументооборотКлиент.УдалитьПустыеСтрокиТаблицы(Объект.РолиФайлов, "Роль");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	НовыйРеестр = ЗаписатьНастройкиРеестра();
	ПараметрыЗаписи.Вставить("НовыйРеестр", НовыйРеестр);
	
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(ПараметрыЗаписи.НовыйРеестр);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_Открытие(Элемент, СтандартнаяОбработка)
    МультиязычностьКлиент.ПриОткрытии(ЭтотОбъект, Объект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВРеестрыПриИзменении(Элемент)
	
	Элементы.НастроитьРеестр.Доступность = ВключитьВРеестры;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаОбработкиНажатие(Элемент, СтандартнаяОбработка)
	
	НастройкиДействийКлиент.ПравилаОбработкиНажатие(ЭтаФорма, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаГенерацииШтамповЭП(Команда)
	
	ПараметрыОткрытия = Новый Структура("ВидДокумента", Объект.Ссылка);
	ОткрытьФорму("Справочник.НастройкиГенерацииШтамповЭП.Форма.ФормаВидаДокумента", ПараметрыОткрытия);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРолиФайлов

&НаКлиенте
Процедура РолиФайловРольПриИзменении(Элемент)
	
	// проверим дубли
	ТекущиеДанные = Элементы.РолиФайлов.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Роль = ТекущиеДанные.Роль;
		ТекСтрока = Элементы.РолиФайлов.ТекущаяСтрока;
		
		Если ЗначениеЗаполнено(Роль) Тогда
			
			ЕстьДубль = Ложь;
			Для Каждого Стр Из Объект.РолиФайлов Цикл
				
				Если Стр.ПолучитьИдентификатор() <> ТекСтрока И Стр.Роль = Роль Тогда
					ЕстьДубль = Истина;
					Сообщить(НСтр("ru = 'Эта роль уже выбрана ранее.'"));
					ТекущиеДанные.Роль = Неопределено;
					Прервать;
				КонецЕсли;	
				
			КонецЦикла;	
			
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура РолиФайловПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"РолиФайловПередНачаломДобавленияПродолжение",
		ЭтотОбъект);
	
	ОткрытьФорму("Справочник.РолиФайлов.ФормаВыбора",,,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура РолиФайловПередНачаломДобавленияПродолжение(Результат, ПараметрыЗаписи) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("СправочникСсылка.РолиФайлов") Тогда
		Возврат;
	КонецЕсли;
	
	Роль = Результат;
	
	ЕстьДубль = Ложь;
	Для Каждого Стр Из Объект.РолиФайлов Цикл
		
		Если Стр.Роль = Роль Тогда
			ЕстьДубль = Истина;
			Сообщить(НСтр("ru = 'Эта роль уже выбрана ранее.'"));
			Возврат;
		КонецЕсли;	
		
	КонецЦикла;	
	
	НовСтр = Объект.РолиФайлов.Добавить();
	НовСтр.Роль = Результат;
	
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВидыДействий

&НаКлиенте
Процедура ВидыДействийПриИзменении(Элемент)
	
	ДействияКлиентСервер.ОбновитьНумерациюОбработки(ВидыДействий, КоличествоДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДействийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДействияКлиент.ВидыДействийВыбор(
		ЭтаФорма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
		
КонецПроцедуры

&НаКлиенте
Процедура ВидыДействийПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Элементы.ПереместитьДействиеВниз.Доступность = Не ТекущиеДанные.ЭтоРодитель;
	Элементы.ПереместитьДействиеВверх.Доступность = Не ТекущиеДанные.ЭтоРодитель;

	Если РежимПодборДействий
		И ДействуетС <> ТекущиеДанные.ДействуетС
		Или ДействуетПо <> ТекущиеДанные.ДействуетПо Тогда 
		ДействуетС = ТекущиеДанные.ДействуетС;
		ДействуетПо = ТекущиеДанные.ДействуетПо;
		
		ПодключитьОбработчикОжидания("ОбработкаОжиданияИзмененияНастройкиВидаДействий", 0.2, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДействийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не ПоказатьВсеНастройки Тогда 
		ПоказатьВсеНастройкиПриИзменении();
	КонецЕсли;
	
	ДействияКлиент.ВидыДействийПередНачаломДобавления(
		ЭтаФорма, Элемент, Отказ, Копирование, Родитель, Группа, Параметр);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДействийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДействийПередУдалением(Элемент, Отказ)
	
	ДействияКлиент.ВидыДействийПередУдалением(ЭтаФорма, Элемент, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВсеВидыДействий

&НаКлиенте
Процедура ВсеВидыДействийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ВсеВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено
		И Не ТолькоПросмотр Тогда
		СтандартнаяОбработка = Ложь;
		ВидыДействийМассив = Новый Массив;
		ВидыДействийМассив.Добавить(ТекущиеДанные.Ссылка);
		ДействияКлиент.ДобавитьВидДействияВСписок(ЭтаФорма, ВидыДействийМассив);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеВидыДействийНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Если ТолькоПросмотр Тогда
		ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.НеОбрабатывать;
		Возврат;
	КонецЕсли;
	
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеВидыДействийПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартаяОбработка = Ложь;
	Для Каждого ЗначениеПеретаскивания Из ПараметрыПеретаскивания.Значение Цикл
		Если ТипЗнч(ЗначениеПеретаскивания) <> Тип("СправочникСсылка.ВидыДействий") Тогда
			ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.НеОбрабатывать;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// Работа с обработкой

&НаКлиенте
Процедура ПодобратьДействие(Команда)
	
	СтрокиПериодДействий = ВидыДействий.ПолучитьЭлементы();
	
	Если СтрокиПериодДействий.Количество() = 0 Тогда 
		СтрокаПериодДействий = СтрокиПериодДействий.Добавить();
		СтрокаПериодДействий.ДействуетС = ТекущаяДата();
		СтрокаПериодДействий.ЭтоРодитель = Истина;
		СтрокаПериодДействий.Представление = СтрШаблон(НСтр("ru = 'Действует с: %1'"),
			Формат(СтрокаПериодДействий.ДействуетС, "ДЛФ=D"));
		СтрокаПериодДействий.Схема = НСтр("ru = 'Схема'");
	Иначе
		ТекущиеДанныеДерева = Элементы.ВидыДействий.ТекущиеДанные;
		Если ТекущиеДанныеДерева = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если ТекущиеДанныеДерева.ЭтоРодитель Тогда 
			СтрокаПериодДействий = ТекущиеДанныеДерева;
		Иначе 
			ТекущиеДанныеРодитель = ТекущиеДанныеДерева.ПолучитьРодителя();
			Если ТекущиеДанныеРодитель = Неопределено Тогда
				Возврат;
			Иначе 
				СтрокаПериодДействий = ТекущиеДанныеРодитель;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	РежимПодборДействий = Не РежимПодборДействий;
	
	Элементы.ГруппаВидыДействийПеренос.Видимость = РежимПодборДействий;
	Элементы.ГруппаВсеВидыДействий.Видимость = РежимПодборДействий;
	Элементы.ПодобратьДействие.Пометка = РежимПодборДействий;
	ДействияКлиент.УстановитьПараметрыСпискаВсеВидыДействий(ЭтаФорма, СтрокаПериодДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВидДействия(Команда)
	
	ТекущиеДанные = Элементы.ВсеВидыДействий.ТекущиеДанные;
	ВыбраныТолькоГрупповыеЭлементы = Истина;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ВидыДействийМассив = Новый Массив;
		Для Каждого ВыбраннаяСтрока Из Элементы.ВсеВидыДействий.ВыделенныеСтроки Цикл
			ДанныеСтроки = Элементы.ВсеВидыДействий.ДанныеСтроки(ВыбраннаяСтрока);
			
			Если ДанныеСтроки.ЭтоГруппа Тогда
			
				Продолжить;
			
			КонецЕсли;
			
			ВыбраныТолькоГрупповыеЭлементы = Ложь;
			ВидыДействийМассив.Добавить(ДанныеСтроки.Ссылка);
		КонецЦикла;	
		
		Если ВыбраныТолькоГрупповыеЭлементы Тогда
		
			ТекстОшибки = НСтр("ru = 'Групповые элементы недоступны для выбора'");
			ПоказатьПредупреждение(, ТекстОшибки);
			
		Иначе
			
			ДействияКлиент.ДобавитьВидДействияВСписок(ЭтаФорма, ВидыДействийМассив);
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВидДействия(Команда)
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ДействияКлиент.УдалитьВидДействияИзСписка(ЭтаФорма, ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсе(Команда)
	
	ПоказатьВсеНастройкиПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	ДействияКлиент.ПереместитьВидДействия(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	ДействияКлиент.ПереместитьВидДействия(ЭтаФорма, Команда, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРеестр(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда 
		
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Создание:'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Реестр) И ВключитьВРеестры Тогда
		НовыйРеестр = ЗаписатьНастройкиРеестра();
		Если ЗначениеЗаполнено(НовыйРеестр) Тогда
			ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(НовыйРеестр);
		КонецЕсли;
	КонецЕсли;
	
	РаботаСРеестрамиКлиент.НастроитьРеестр(Реестр);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЗаписатьНастройкиРеестра()
	
	НовыйРеестр = РаботаСРеестрами.ОбновитьРеестрПоИсточнику(Объект.Ссылка, ВключитьВРеестры);
	ОбновитьРеестр();
	
	Возврат НовыйРеестр;
	
КонецФункции

&НаСервере
Процедура ОбновитьРеестр()
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРеестры") Тогда
		Реестр = Справочники.Реестры.НайтиПоИсточнику(Объект.Ссылка); 
	Иначе
		Реестр = Справочники.Реестры.ПустаяСсылка();
	КонецЕсли;
	
	ВключитьВРеестры = ЗначениеЗаполнено(Реестр);
	Элементы.НастроитьРеестр.Доступность = ВключитьВРеестры;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Работа с обработкой

&НаКлиенте
Процедура ОбработкаОжиданияИзмененияНастройкиВидаДействий()
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные.ЭтоРодитель Тогда 
		СтрокаРодитель = ТекущиеДанные;
	Иначе 
		ТекущиеДанныеРодитель = ТекущиеДанные.ПолучитьРодителя();
		Если ТекущиеДанныеРодитель = Неопределено Тогда
			Возврат;
		Иначе 
			СтрокаРодитель = ТекущиеДанныеРодитель;
		КонецЕсли;
	КонецЕсли;
	
	ДействияКлиент.УстановитьПараметрыСпискаВсеВидыДействий(ЭтаФорма, СтрокаРодитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеНастройкиПриИзменении() 
	
	ПоказатьВсеНастройки = Не ПоказатьВсеНастройки;
	Элементы.ВидыДействийКонтекстноеМенюПоказатьВсе.Пометка = ПоказатьВсеНастройки;
	ОбновитьВидыДействийПоВидуДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидыДействийПоВидуДокумента();
	
	ДействияСервер.ЗаполнитьВидыДействийПоВидуОбъекта(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти