
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектСсылка = Параметры.ОбъектСсылка;
	
	Заголовок = НСтр("ru = 'Текстовый образ файла ""'") + Строка(ОбъектСсылка) + """";
	
	РеквизитыВерсии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбъектСсылка, "ТекущаяВерсия, ТекущаяВерсияРасширение");
	
	Расширение = РеквизитыВерсии.ТекущаяВерсияРасширение;
	
	Если ТаймлистКлиентСервер.ЭтоРасширениеФайлаТаймлист(РеквизитыВерсии.ТекущаяВерсияРасширение) Тогда
		
		Элементы.РасшифровкаHTML.Видимость = Истина;
		Элементы.ФормаЗаписать.Видимость = Ложь;
		Элементы.ФормаОтмена.Видимость = Ложь;
		РасшифровкаХранилище = РегистрыСведений.ТаймлистДанныеРаботыСервиса.Данные(
			РеквизитыВерсии.ТекущаяВерсия, "Расшифровка").Расшифровка;
		Если РасшифровкаХранилище <> Неопределено Тогда
			РасшифровкаHTML = РасшифровкаХранилище.Получить();
		КонецЕсли;
		
		Возврат;
		
	Иначе
		
		Элементы.Текст.Видимость = Истина;
		Текст = РегистрыСведений.ТекстыФайлов.ПолучитьТекстФайла(ОбъектСсылка);
		Текст = ОбработкаСтрокиXML.УдалитьНедопустимыеСимволыXML(Текст);
		ПустойТекстПриОткрытии = ПустаяСтрока(Текст);
		
	КонецЕсли;
	
	Если Параметры.Свойство("ИзКарточкиФайла") Тогда
		ИзКарточкиФайла = Параметры.ИзКарточкиФайла;
	КонецЕсли;
	
	Если Параметры.Свойство("ИзвлеченТекст") Тогда
		ИзвлеченТекст = Параметры.ИзвлеченТекст;
	КонецЕсли;
	
	Если Параметры.Свойство("Распознан") Тогда
		Распознан = Параметры.Распознан;
	КонецЕсли;
	
	Если ИзКарточкиФайла Тогда
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайла(ОбъектСсылка);
		Если ТаймлистКлиентСервер.ЭтоРасширениеФайлаТаймлист(ДанныеФайла.Расширение) Тогда
			СтатусРаспознаванияТекста = Строка(ДанныеФайла.ТаймлистСтатус);
			СтатусИзвлеченияТекста = Строка(ДанныеФайла.ТаймлистСтатус);
		Иначе
			СтатусРаспознаванияТекста = ДанныеФайла.СтатусРаспознаванияТекста;
			СтатусИзвлеченияТекста = ДанныеФайла.СтатусИзвлеченияТекста;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьВыполнить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаписатьВыполнить()
	
	ЗаписатьОбраз();
	
	ОповеститьОбИзменении(ОбъектСсылка);
	
	Оповестить(
		"Запись_Файл", 
		Новый Структура("Событие, Файл, Владелец, ЕстьЗашифрованныеИлиЗанятыеФайлы, ИдентификаторРодительскойФормы", 
			"ДанныеФайлаИзменены", 
			ОбъектСсылка, Неопределено, Неопределено,
			Неопределено),
			ОбъектСсылка);
	
	Закрыть(КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьОбраз()
	
	НачатьТранзакцию();
	Попытка
		
		ВерсияСсылка = ОбъектСсылка.ТекущаяВерсия;
		ТекстХранилище = Новый ХранилищеЗначения(Текст);
		ИзвлеченныйТекст = ТекстХранилище;
		СтатусИзвлеченияТекстаУстановка = Перечисления.СтатусыИзвлеченияТекстаФайлов.Извлечен;
		
		РегистрыСведений.ТекстыВерсийФайлов.ДобавитьЗаписьИзвлечения(
			ВерсияСсылка, СтатусИзвлеченияТекстаУстановка, ИзвлеченныйТекст, Расширение, ТекстХранилище);
		
		РегистрыСведений.ТекстыФайлов.ДобавитьЗапись(ОбъектСсылка, ТекстХранилище);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаФайлНужноРаспознать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьВыполнить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаФайлНеИзвлечен(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьВыполнить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

