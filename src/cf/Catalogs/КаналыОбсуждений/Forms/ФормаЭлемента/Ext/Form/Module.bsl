#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Права на изменение.
	Права = ДокументооборотПраваДоступа.ПраваПользователяПоОбъекту(Объект.Ссылка);
	ТолькоПросмотр = Не Права.Изменение;
	
	// Видимость кнопки перехода к обсуждению.
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ИСТИНА КАК ЕстьЗаписи
		|ИЗ
		|	Справочник.КаналыОбсуждений.Участники КАК КаналыОбсужденийУчастники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СотрудникиВКонтейнерах КАК СотрудникиВКонтейнерах
		|		ПО КаналыОбсужденийУчастники.Участник = СотрудникиВКонтейнерах.Контейнер
		|ГДЕ
		|	КаналыОбсужденийУчастники.Ссылка = &Ссылка
		|	И СотрудникиВКонтейнерах.Сотрудник В (&СотрудникиПользователя)");
	Запрос.УстановитьПараметр("Ссылка", ТекущийОбъект.Ссылка);
	Запрос.УстановитьПараметр("СотрудникиПользователя", ПараметрыСеанса.СотрудникиПользователя);
	РезультатЗапроса = Запрос.Выполнить();
	ЭтоУчастникКанала = Не РезультатЗапроса.Пустой();
	Элементы.ФормаПерейтиКОбсуждению.Видимость = ЭтоУчастникКанала;
	
	// Картинка канала.
	ФайлФотографии = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ФайлФотографии");
	ДвоичныеДанные = ФайлФотографии.Получить();
	ЕстьКартинка = ЗначениеЗаполнено(ДвоичныеДанные);
	Фотография = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "ФайлФотографии");
	
	Элементы.Фотография.Гиперссылка = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюДобавитьИзображение.Доступность = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюОчиститьИзображение.Доступность = ЕстьКартинка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОбщегоНазначенияДокументооборотКлиент.УдалитьПустыеСтрокиТаблицы(Объект.Участники, "Участник");
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Пользователи.ЭтоПолноправныйПользователь(,, Ложь) Тогда
		Возврат;
	КонецЕсли;
	
	АдминистраторыКонтейнеры = Новый Массив;
	Для Каждого СтрокаУчастника Из Объект.Участники Цикл
		Если СтрокаУчастника.Роль = Перечисления.РолиУчастниковКаналовОбсуждений.Администратор Тогда
			АдминистраторыКонтейнеры.Добавить(СтрокаУчастника.Участник);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ИСТИНА КАК ЕстьЗаписи
		|ИЗ
		|	РегистрСведений.СотрудникиВКонтейнерах КАК СотрудникиВКонтейнерах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставСубъектовПравДоступа КАК СоставСубъектовПравДоступа
		|		ПО СотрудникиВКонтейнерах.Сотрудник = СоставСубъектовПравДоступа.Субъект
		|ГДЕ
		|	СотрудникиВКонтейнерах.Контейнер В(&АдминистраторыКонтейнеры)
		|	И СоставСубъектовПравДоступа.Сотрудник В (&СотрудникиПользователя)
		|	И СоставСубъектовПравДоступа.ИмяОбластиДелегирования = """"");
	Запрос.УстановитьПараметр("АдминистраторыКонтейнеры", АдминистраторыКонтейнеры);
	Запрос.УстановитьПараметр("СотрудникиПользователя", ПараметрыСеанса.СотрудникиПользователя);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Объект не может быть записан, так как вы не входите в число администраторов канала'"),
			Объект.Ссылка, "Участники", "Объект.Участники", Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.ФормаПерейтиКОбсуждению.Видимость = ЗначениеЗаполнено(Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДобавитьИзображение(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУчастники

&НаКлиенте
Процедура УчастникиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Участник =
			ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиПередУдалением(Элемент, Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УчастникиПередУдалениемПродолжение", ЭтотОбъект);
	
	ВыделенныеСтроки = Элементы.Участники.ВыделенныеСтроки;
	Для Каждого Индекс Из ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.Участники.ДанныеСтроки(Индекс);
		Если СотрудникиКлиент.ЭтоСотрудникТекущегоПользователя(ДанныеСтроки.Участник) 
			И ДанныеСтроки.Роль = ПредопределенноеЗначение(
				"Перечисление.РолиУчастниковКаналовОбсуждений.Администратор") Тогда
			
			ТекстВопроса = НСтр(
				"ru = 'Вы пытаетесь удалить себя из состава администраторов, и можете потерять доступ к каналу. Продолжить?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);		
			Отказ = Истина;
			Возврат;
			
		КонецЕсли;
	КонецЦикла;
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиПередУдалениемПродолжение(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаУчастников = Элементы.Участники;
	КолВыделенных = ТаблицаУчастников.ВыделенныеСтроки.Количество();
	Для Сч = 1 По КолВыделенных Цикл
		Идентификатор = ТаблицаУчастников.ВыделенныеСтроки[КолВыделенных - Сч];
		Объект.Участники.Удалить(Объект.Участники.НайтиПоИдентификатору(Идентификатор));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиУчастникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьУчастников(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиУчастникАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДополнениеТипа = Новый ОписаниеТипов(
			"СправочникСсылка.ПолныеРоли, СправочникСсылка.РабочиеГруппы,
			|СправочникСсылка.СтруктураПредприятия, СправочникСсылка.Проекты");
		ДанныеВыбора = СотрудникиВызовСервера.СформироватьДанныеВыбора(
			Текст, ДополнениеТипа);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиУчастникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СотрудникиКлиент.ОбработкаВыбораКонтейнера(
		Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздалОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	
	СотрудникиКлиент.СотрудникОбработкаВыбора(Объект, "Создал", ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодобратьУчастников(Команда)
	
	ВыбратьУчастников(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИзображение(Команда)
	
	ЗаблокироватьДанныеФормыДляРедактирования();
	ОчиститьИзображениеСервер();
	ЕстьКартинка = Ложь;
	Элементы.Фотография.Гиперссылка = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюДобавитьИзображение.Доступность = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюОчиститьИзображение.Доступность = ЕстьКартинка;
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	ПараметрыОписания = Новый Структура("АдресВременногоХранилищаФайла", "");
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДобавитьИзображениеПродолжение", ЭтотОбъект, ПараметрыОписания);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеПродолжение(Результат, ДополнительныеПараметры)Экспорт 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Записать();
	Иначе
		Возврат;
	КонецЕсли;

	Если Не ЕстьКартинка И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВыборКартинкиПродолжение",
			ЭтотОбъект,
			ДополнительныеПараметры);

		ФайловыеФункцииКлиент.ВыбратьКартинкуИПоместитьВХранилище(
			ОписаниеОповещения, УникальныйИдентификатор, Ложь);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКОбсуждению(Команда)
	
	ПерейтиПоНавигационнойСсылке(ЛичноеОбсуждениеСПользователемКанала());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьУчастников(МножественныйВыбор)
	
	ВыбранныеУчастники = Новый Массив;
	ТекущиеДанные = Элементы.Участники.ТекущиеДанные;
	
	Если МножественныйВыбор Или Не ЗначениеЗаполнено(ТекущиеДанные.Участник) Тогда
		Для Каждого УчастникиСтрока Из Объект.Участники Цикл
			Если ЗначениеЗаполнено(УчастникиСтрока.Участник) Тогда 
				СтруктураВыбранногоАдресата = РаботаСАдреснойКнигойКлиент.СтруктураВыбранногоАдресата();
				СтруктураВыбранногоАдресата.Вставить("Контакт", УчастникиСтрока.Участник);
				ВыбранныеУчастники.Добавить(СтруктураВыбранногоАдресата);
			КонецЕсли;
		КонецЦикла;
		РежимРаботыФормы = 2;
		ЗаголовокФормы = НСтр("ru = 'Подбор участников канала'");
		ЗаголовокСпискаВыбранных = НСтр("ru = 'Выбранные участники:'");
		ЗаголовокСпискаАдреснойКниги = НСтр("ru = 'Все сотрудники и роли:'");
		МножественныйВыбор = Истина;
	Иначе
		РежимРаботыФормы = 1;
		ЗаголовокФормы = НСтр("ru = 'Выбор участника канала'");
		ЗаголовокСпискаВыбранных = "";
		ЗаголовокСпискаАдреснойКниги = "";
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", РежимРаботыФормы);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	ПараметрыФормы.Вставить("ВыбиратьКонтейнерыПользователей", Истина);
	ПараметрыФормы.Вставить("ЗаголовокФормы", ЗаголовокФормы);
	ПараметрыФормы.Вставить("ЗаголовокСпискаВыбранных", ЗаголовокСпискаВыбранных);
	ПараметрыФормы.Вставить("ЗаголовокСпискаАдреснойКниги", ЗаголовокСпискаАдреснойКниги);
	ПараметрыФормы.Вставить("ВыбранныеАдресаты", ВыбранныеУчастники);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Форма", ЭтотОбъект);
	ДопПараметры.Вставить("МножественныйВыбор", МножественныйВыбор);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыбратьУчастниковЗавершение", ЭтотОбъект, ДопПараметры);
		
	РаботаСАдреснойКнигойКлиент.ВыбратьАдресатов(ПараметрыФормы, ЭтотОбъект, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьУчастниковЗавершение(ВыбранныеУчастники, ДопПараметры) Экспорт
	
	Если ВыбранныеУчастники = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДопПараметры.МножественныйВыбор Тогда
		
		РеквизитТаблица = Объект.Участники;
		КоличествоСтрок = РеквизитТаблица.Количество();
		
		// Удаление лишних строк.
		Для Инд = 1 По КоличествоСтрок Цикл
			
			Строка = РеквизитТаблица[КоличествоСтрок - Инд];
			УдалитьУчастника = Истина;
			
			Для Каждого ВыбранныйИсполнитель Из ВыбранныеУчастники Цикл
				Если Строка.Участник = ВыбранныйИсполнитель.Контакт Тогда
					УдалитьУчастника = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если УдалитьУчастника Тогда
				РеквизитТаблица.Удалить(Строка);
			КонецЕсли;
			
		КонецЦикла;
		
		ИндексИзмененнойСтроки = РеквизитТаблица.Количество();
		
		// Добавление новых строк.
		Для Каждого ВыбранныйАдресат Из ВыбранныеУчастники Цикл
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Участник", ВыбранныйАдресат.Контакт);
			
			НайденныеСтроки = РеквизитТаблица.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() = 0 Тогда
				НоваяСтрока = РеквизитТаблица.Добавить();
				НоваяСтрока.Участник = ВыбранныйАдресат.Контакт;
				НоваяСтрока.Роль = ПредопределенноеЗначение(
					"Перечисление.РолиУчастниковКаналовОбсуждений.Читатель");
			КонецЕсли;
			
		КонецЦикла;
	
	Иначе
		
		ТекущаяСтрока = Элементы.Участники.ТекущаяСтрока;
		ТекущиеДанные = Объект.Участники.НайтиПоИдентификатору(ТекущаяСтрока);
		ТекущиеДанные.Участник = ВыбранныеУчастники[0].Контакт;
		ТекущиеДанные.Роль = ПредопределенноеЗначение(
			"Перечисление.РолиУчастниковКаналовОбсуждений.Читатель");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКартинкиПродолжение(Результат, Параметры) Экспорт 

	Если Результат <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьИзображение(Параметры.АдресВременногоХранилищаФайла);

	ЕстьКартинка = Истина;
	Элементы.Фотография.Гиперссылка = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюДобавитьИзображение.Доступность = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюОчиститьИзображение.Доступность = ЕстьКартинка;
	Прочитать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзображение(АдресВременногоХранилищаФайла)
	
	ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка, , УникальныйИдентификатор);
	КаналОбъект = Объект.Ссылка.ПолучитьОбъект();
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаФайла);
	КаналОбъект.ФайлФотографии = Новый ХранилищеЗначения(ДвоичныеДанные);
	КаналОбъект.Записать();
	РазблокироватьДанныеДляРедактирования(Объект.Ссылка, УникальныйИдентификатор);
	
КонецПроцедуры	

&НаСервере
Процедура ОчиститьИзображениеСервер()
	
	ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка, , УникальныйИдентификатор);
	ПользовательОбъект = Объект.Ссылка.ПолучитьОбъект();
	ПользовательОбъект.ФайлФотографии = Новый ХранилищеЗначения(Неопределено);
	ПользовательОбъект.Записать();
	РазблокироватьДанныеДляРедактирования(Объект.Ссылка, УникальныйИдентификатор);
	
КонецПроцедуры	

&НаСервере
Функция ЛичноеОбсуждениеСПользователемКанала()
	
	Если Не ЗначениеЗаполнено(Объект.ПользовательДляСВ) Тогда
		ТекстОшибки = НСтр("ru = 'Не заполнен служебный пользвоатель канала.'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Обсуждение = ОбсужденияДокументооборот.ЛичноеОбсуждениеПользователей(
		ОбсужденияДокументооборот.ИдентификаторПользователяСВ(Пользователи.ТекущийПользователь()),
		ОбсужденияДокументооборот.ИдентификаторПользователяСВ(Объект.ПользовательДляСВ));
	
	Возврат ПолучитьНавигационнуюСсылку(Обсуждение);
	
КонецФункции

#КонецОбласти
