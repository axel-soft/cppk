#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.Куратор.Доступность = Объект.ВедетКуратор;
	
	ОбновитьРеестр();
	
	Если Параметры.Свойство("АктивироватьОбработку") 
		Или Параметры.Свойство("ДляНастройкиВидовДействий") Тогда
		Элементы.ОсновныеСтраницы.ТекущаяСтраница = Элементы.СтраницаНастройкиОбработки;
		ТекущийЭлемент = Элементы.ВидыДействий;
	КонецЕсли;
	
	ДействияСервер.ВидОбъектаПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	КоличествоНастроекПравилОбработки = НастройкиДействий.КоличествоНастроекПравилОбработки(Объект.Ссылка);
	Если КоличествоНастроекПравилОбработки > 0 Тогда 
		ПравилаОбработки = СтрШаблон(НСтр("ru = 'Правила обработки (%1)'"),
			КоличествоНастроекПравилОбработки);
	Иначе 
		ПравилаОбработки = НСтр("ru = 'Правила обработки (не заданы)'");
	КонецЕсли;
	
	Элементы.ПравилаОбработки.Ширина = СтрДлина(ПравилаОбработки) * 7 / 10;
	
	ПравилаЗапуска = НСтр("ru = 'Не задан'");
	
	МультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НастройкиДействий" Или ИмяСобытия = "Запись_ПравилаОбработки" Тогда
		КоличествоНастроекПравилОбработки = НастройкиДействийВызовСервера.КоличествоНастроекПравилОбработки(
			Объект.Ссылка);
		Если КоличествоНастроекПравилОбработки > 0 Тогда 
			ПравилаОбработки = СтрШаблон(НСтр("ru = 'Правила обработки (%1)'"),
				КоличествоНастроекПравилОбработки);
		Иначе 
			ПравилаОбработки = НСтр("ru = 'Правила обработки (не заданы)'");
		КонецЕсли;
		Элементы.ПравилаОбработки.Ширина = СтрДлина(ПравилаОбработки) * 7 / 10;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьРеестр();
	
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ДействияСервер.ВидОбъектаОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ДействияСервер.ВидОбъектаПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
	МультиязычностьСервер.ПередЗаписьюНаСервере(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	НовыйРеестр = ЗаписатьНастройкиРеестра();
	ПараметрыЗаписи.Вставить("НовыйРеестр", НовыйРеестр);
	
	ДействияСервер.ВидОбъектаПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(Объект.Ссылка);
	ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(ПараметрыЗаписи.НовыйРеестр);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_Открытие(Элемент, СтандартнаяОбработка)
    МультиязычностьКлиент.ПриОткрытии(ЭтотОбъект, Объект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВРеестрыПриИзменении(Элемент)
	
	Элементы.СсылкаНастроитьРеестр.Доступность = ВключитьВРеестры;
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаНастроитьРеестрНажатие(Элемент)
	
	Если Объект.Ссылка.Пустая() Тогда 
		
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Создание:'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Реестр) И ВключитьВРеестры Тогда
		НовыйРеестр = ЗаписатьНастройкиРеестра();
		Если ЗначениеЗаполнено(НовыйРеестр) Тогда
			ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(НовыйРеестр);
		КонецЕсли;
	КонецЕсли;
	
	РаботаСРеестрамиКлиент.НастроитьРеестр(Реестр);
	
КонецПроцедуры

&НаКлиенте
Процедура ВедетКураторПриИзменении(Элемент)
	
	Элементы.Куратор.Доступность = Объект.ВедетКуратор;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтаФорма,
		"Объект.Комментарий");
	
КонецПроцедуры

#Область ОбработкаОбъектов

&НаКлиенте
Процедура ПравилаОбработкиНажатие(Элемент, СтандартнаяОбработка)
	
	НастройкиДействийКлиент.ПравилаОбработкиНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВидыДействий

&НаКлиенте
Процедура ВидыДействийПриИзменении(Элемент)
	
	ДействияКлиентСервер.ОбновитьНумерациюОбработки(ВидыДействий, КоличествоДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДействийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
	Если Поле = Элементы.ВидыДействийПравилаЗапуска Тогда
		
		СтандартнаяОбработка = Ложь;
		ПравилаЗапускаНажатие();
		Возврат;
		
	ИначеЕсли Поле = Элементы.ВидыДействийУсловияЗапуска Тогда
		СтандартнаяОбработка = Ложь;
		УсловияЗапускаНажатие();
		Возврат;
		
	КонецЕсли;		
	
	ДействияКлиент.ВидыДействийВыбор(
		ЭтотОбъект, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
		
КонецПроцедуры

&НаКлиенте
Процедура ВидыДействийПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.ВидыДействийКонтекстноеМенюПоказатьВсе.Доступность = ПравоРедактированияОбработки;
		Возврат;
	КонецЕсли;
	
	ТекущийРодитель = ТекущиеДанные.ПолучитьРодителя();
	Если ТекущийРодитель = Неопределено Тогда
		ТекущийРодитель = ТекущиеДанные;
	КонецЕсли;
	
	ВозможностьИзменения = ПравоРедактированияОбработки;
	Если ТекущиеДанные.ЭтоНастройкиГруппы Или ТекущийРодитель.ЕстьОбработка Тогда
		ВозможностьИзменения = Ложь;
	КонецЕсли;
	
	Элементы.ДобавитьВидДействия.Доступность = ВозможностьИзменения;
	Элементы.УдалитьВидДействия.Доступность = ВозможностьИзменения;
	
	Если Не ВозможностьИзменения Тогда
		Возврат;
	КонецЕсли;	
	
	Элементы.ПереместитьДействиеВниз.Доступность = Не ТекущиеДанные.ЭтоРодитель;
	Элементы.ПереместитьДействиеВверх.Доступность = Не ТекущиеДанные.ЭтоРодитель;

	Если РежимПодборДействий
		И ДействуетС <> ТекущиеДанные.ДействуетС
		Или ДействуетПо <> ТекущиеДанные.ДействуетПо Тогда 
		ДействуетС = ТекущиеДанные.ДействуетС;
		ДействуетПо = ТекущиеДанные.ДействуетПо;
		
		ПодключитьОбработчикОжидания("ОбработкаОжиданияИзмененияНастройкиВидаДействий", 0.2, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДействийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Модифицированность И Не Записать() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ПоказатьВсеНастройки Тогда 
		ПоказатьВсеНастройкиПриИзменении();
	КонецЕсли;
	
	ДействияКлиент.ВидыДействийПередНачаломДобавления(
		ЭтотОбъект, Элемент, Отказ, Копирование, Родитель, Группа, Параметр);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДействийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДействийПередУдалением(Элемент, Отказ)
	
	ДействияКлиент.ВидыДействийПередУдалением(ЭтотОбъект, Элемент, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура КураторОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	
	СотрудникиКлиент.СотрудникОбработкаВыбора(Объект, "Куратор", ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВсеВидыДействий

&НаКлиенте
Процедура ВсеВидыДействийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ВсеВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено
		И Не ТолькоПросмотр Тогда
		СтандартнаяОбработка = Ложь;
		ВидыДействийМассив = Новый Массив;
		ВидыДействийМассив.Добавить(ТекущиеДанные.Ссылка);
		ДействияКлиент.ДобавитьВидДействияВСписок(ЭтотОбъект, ВидыДействийМассив);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеВидыДействийНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Если ТолькоПросмотр Тогда
		ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.НеОбрабатывать;
		Возврат;
	КонецЕсли;
	
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеВидыДействийПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	Для Каждого ЗначениеПеретаскивания Из ПараметрыПеретаскивания.Значение Цикл
		Если ТипЗнч(ЗначениеПеретаскивания) <> Тип("СправочникСсылка.ВидыДействий") Тогда
			ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.НеОбрабатывать;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПраваДоступа(Команда)
	
	ДокументооборотПраваДоступаКлиент.ОткрытьФормуПравДоступа(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНаборСвойств(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОткрытьНаборСвойствПродолжение",
		ЭтотОбъект);

	Если Объект.Ссылка.Пустая() Тогда
		ТекстВопроса = НСтр("ru = 'Для перехода к набору свойств элемент необходимо записать.'")
			+ Символы.ПС + НСтр("ru = 'Записать?'");
		ОбщегоНазначенияДокументооборотКлиент.ПоказатьВопросДаНет(ОписаниеОповещения, ТекстВопроса);
	Иначе 
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.ОК);
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработкаОбъектов

&НаКлиенте
Процедура ПодобратьДействие(Команда)
	
	СтрокиПериодДействий = ВидыДействий.ПолучитьЭлементы();
	
	Если СтрокиПериодДействий.Количество() = 0 Тогда 
		СтрокаПериодДействий = СтрокиПериодДействий.Добавить();
		СтрокаПериодДействий.ДействуетС = ОбщегоНазначенияКлиент.ДатаСеанса();
		СтрокаПериодДействий.ЭтоРодитель = Истина;
		СтрокаПериодДействий.Представление = СтрШаблон(НСтр("ru = 'Действует с: %1'"),
			Формат(СтрокаПериодДействий.ДействуетС, "ДЛФ=D"));
		СтрокаПериодДействий.Схема = НСтр("ru = 'Стандартная'");
	Иначе
		ТекущиеДанныеДерева = Элементы.ВидыДействий.ТекущиеДанные;
		Если ТекущиеДанныеДерева = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если ТекущиеДанныеДерева.ЭтоРодитель Тогда 
			СтрокаПериодДействий = ТекущиеДанныеДерева;
		Иначе 
			ТекущиеДанныеРодитель = ТекущиеДанныеДерева.ПолучитьРодителя();
			Если ТекущиеДанныеРодитель = Неопределено Тогда
				Возврат;
			Иначе 
				СтрокаПериодДействий = ТекущиеДанныеРодитель;
			КонецЕсли;
		КонецЕсли;
		
		// Если настройка есть, то редактировать нельзя.
		ТекстНаличияОбработки = ДействияКлиент.ИсключениеЕслиПоНастройкеЕстьОбработка(ТекущиеДанныеДерева);
		Если ЗначениеЗаполнено(ТекстНаличияОбработки) Тогда
			ПоказатьПредупреждение(, ТекстНаличияОбработки); 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	РежимПодборДействий = Не РежимПодборДействий;
	
	Элементы.ГруппаВидыДействийПеренос.Видимость = РежимПодборДействий;
	Элементы.ГруппаВсеВидыДействий.Видимость = РежимПодборДействий;
	Элементы.ПодобратьДействие.Пометка = РежимПодборДействий;
	ДействияКлиент.УстановитьПараметрыСпискаВсеВидыДействий(ЭтотОбъект, СтрокаПериодДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВидДействия(Команда)
	
	ТекущиеДанные = Элементы.ВсеВидыДействий.ТекущиеДанные;
	ВыбраныТолькоГрупповыеЭлементы = Истина;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ВидыДействийМассив = Новый Массив;
		
		Для Каждого ВыбраннаяСтрока Из Элементы.ВсеВидыДействий.ВыделенныеСтроки Цикл
			
			ДанныеСтроки = Элементы.ВсеВидыДействий.ДанныеСтроки(ВыбраннаяСтрока);
			
			Если ДанныеСтроки.ЭтоГруппа Тогда
			
				Продолжить;
			
			КонецЕсли;
			
			ВыбраныТолькоГрупповыеЭлементы = Ложь;
			ВидыДействийМассив.Добавить(ДанныеСтроки.Ссылка);
			
		КонецЦикла;	
		
		Если ВыбраныТолькоГрупповыеЭлементы Тогда
		
			ТекстОшибки = НСтр("ru = 'Групповые элементы недоступны для выбора'");
			ПоказатьПредупреждение(, ТекстОшибки);
			
		Иначе
			
			ДействияКлиент.ДобавитьВидДействияВСписок(ЭтотОбъект, ВидыДействийМассив);
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВидДействия(Команда)
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ДействияКлиент.УдалитьВидДействияИзСписка(ЭтотОбъект, ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсе(Команда)
	
	ПоказатьВсеНастройкиПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	ДействияКлиент.ПереместитьВидДействия(ЭтотОбъект, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	ДействияКлиент.ПереместитьВидДействия(ЭтотОбъект, Команда, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьРежимЗапуска(Команда)
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать настройку обработки.'"));
		Возврат;
	КонецЕсли;
		
	Если ТекущиеДанные.ЭтоРодитель Тогда 
		СтрокаРодитель = ТекущиеДанные;
	Иначе 
		ТекущиеДанныеРодитель = ТекущиеДанные.ПолучитьРодителя();
		Если ТекущиеДанныеРодитель = Неопределено Тогда
			Возврат;
		Иначе 
			СтрокаРодитель = ТекущиеДанныеРодитель;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрокаРодитель.СсылкаНаНастройку) Тогда
		Возврат;
	КонецЕсли;	
	
	УдалитьРежимЗапускаНаСервереИОбновить(СтрокаРодитель.СсылкаНаНастройку,
		СтрокаРодитель.ПолучитьИдентификатор());
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьНастройкиОбработкиВФайл(Команда)
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВыгрузки = КопированиеНастроекОбработкиКлиент.НовыеПараметрыВыгрузкиНастроекОбработки();
	ПараметрыВыгрузки.НастройкиОбработки = ТекущиеДанные.СсылкаНаНастройку;
	
	КопированиеНастроекОбработкиКлиент.ВыгрузитьНастройкиОбработкиВФайл(ПараметрыВыгрузки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкиОбработкиИзФайла(Команда)
	
	Если Модифицированность Тогда
		
		ОбработчикОтвета = Новый ОписаниеОповещения(
			"ОбработатьОтветНаВопросОЗаписиПередЗагрузкойНастроекОбработки", ЭтотОбъект);
		
		ТекстВопроса = НСтр("ru = 'Перед загрузкой настроек необходимо сохранить изменения в виде документа. Продолжить?'");
		Заголовок = НСтр("ru = 'Запись вида документа'");
		
		ПоказатьВопрос(ОбработчикОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , , Заголовок);
		Возврат;
		
	КонецЕсли;
	
	ЗагрузитьНастройкиОбработки();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЗаписатьНастройкиРеестра()
	
	НовыйРеестр = РаботаСРеестрами.ОбновитьРеестрПоИсточнику(Объект.Ссылка, ВключитьВРеестры);
	ОбновитьРеестр();
	
	Возврат НовыйРеестр;
	
КонецФункции

&НаСервере
Процедура ОбновитьРеестр()
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРеестры") Тогда
		Реестр = Справочники.Реестры.НайтиПоИсточнику(Объект.Ссылка); 
	Иначе
		Реестр = Справочники.Реестры.ПустаяСсылка();
	КонецЕсли;
	
	ВключитьВРеестры = ЗначениеЗаполнено(Реестр);
	Элементы.СсылкаНастроитьРеестр.Доступность = ВключитьВРеестры;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНаборСвойствПродолжение(Результат, Параметры) Экспорт 

	Если Результат = КодВозвратаДиалога.Нет Тогда 
		Возврат;
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда 
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючНазначенияИспользования", "НаборыДополнительныхРеквизитов");
	
	ОткрытьФорму("Справочник.НаборыДополнительныхРеквизитовИСведений.ФормаСписка", ПараметрыФормы);
	
	ПараметрыПерехода = Новый Структура;
	ПараметрыПерехода.Вставить("Набор", Объект.НаборСвойств);
	ПараметрыПерехода.Вставить("Свойство", Неопределено);
	ПараметрыПерехода.Вставить("ЭтоДополнительноеСведение", Ложь);
	ПараметрыПерехода.Вставить("ВидСвойств", ПредопределенноеЗначение("Перечисление.ВидыСвойств.ДополнительныеРеквизиты"));
	
	Оповестить("Переход_НаборыДополнительныхРеквизитовИСведений", ПараметрыПерехода);
	
КонецПроцедуры

#Область ОбработкаОбъектов


&НаСервере
Процедура УдалитьРежимЗапускаНаСервереИОбновить(СсылкаНаНастройку, ИдентификаторСтроки)
	
	НачатьТранзакцию();
	Попытка
	
		НастройкаОбъект = СсылкаНаНастройку.ПолучитьОбъект();
	
		ВидБизнесСобытияДляПроверки = НастройкаОбъект.ВидБизнесСобытия;
		
		НастройкаОбъект.ВидБизнесСобытия = Неопределено;
		НастройкаОбъект.ВидИнтерактивногоСобытия = Неопределено;
		
		НастройкаОбъект.Записать();	
	
		Если ЗначениеЗаполнено(ВидБизнесСобытияДляПроверки) Тогда
			ДействияСервер.ОбновитьПодпискуНаБизнесСобытия(ВидБизнесСобытияДляПроверки);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
			
	КонецПопытки;		
	
	ОбновитьПравилоИУсловияЗапуска(ИдентификаторСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаЗапускаНажатие()
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать настройку обработки.'"));
		Возврат;
	КонецЕсли;
		
	Если Объект.Ссылка.Пустая() Тогда 
		
		ОбработчикЗавершенияОткрытия = Новый ОписаниеОповещения(
			"ЗавершитьОткрытиеПравилаЗапускаДляВидаОбъекта",
			ЭтотОбъект);
		
		ТекстВопроса = 
			ОбщегоНазначенияДокументооборотКлиентСервер.ТекстВопросаНезаписанныхДанных(
			НСтр("ru = 'Режим автозапуска'"));
		ПоказатьВопрос(ОбработчикЗавершенияОткрытия, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;	
	
	ПравилаЗапускаНажатиеОсновное();
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаЗапускаНажатиеОсновное()
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать настройку обработки.'"));
		Возврат;
	КонецЕсли;
		
	Если ТекущиеДанные.ЭтоРодитель Тогда 
		СтрокаРодитель = ТекущиеДанные;
	Иначе 
		ТекущиеДанныеРодитель = ТекущиеДанные.ПолучитьРодителя();
		Если ТекущиеДанныеРодитель = Неопределено Тогда
			Возврат;
		Иначе 
			СтрокаРодитель = ТекущиеДанныеРодитель;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрокаРодитель.СсылкаНаНастройку) Тогда
		Возврат;
	КонецЕсли;	
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПравилаЗапускаНажатиеПослеЗакрытия",
		ЭтотОбъект);
	
	ПараметрыОткрытия = Новый Структура("СсылкаНаНастройку, ТолькоПросмотр",
		СтрокаРодитель.СсылкаНаНастройку,
		ТолькоПросмотр Или Не ПравоРедактированияОбработки);
	
	ОткрытьФорму(
		"Справочник.НастройкиОбработкиВидовОбъектов.Форма.ПравилоЗапуска", 
		ПараметрыОткрытия, 
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Продолжение ПравилаЗапускаНажатие
//
&НаКлиенте
Процедура ЗавершитьОткрытиеПравилаЗапускаДляВидаОбъекта(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.ОК Тогда
		
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Создание:'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
	ПравилаЗапускаНажатиеОсновное();
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаЗапускаНажатиеПослеЗакрытия(ВыбранноеЗначение, Параметры) Экспорт

	// обновим ПравилаЗапуска	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные.ЭтоРодитель Тогда 
		СтрокаРодитель = ТекущиеДанные;
	Иначе 
		ТекущиеДанныеРодитель = ТекущиеДанные.ПолучитьРодителя();
		Если ТекущиеДанныеРодитель = Неопределено Тогда
			Возврат;
		Иначе 
			СтрокаРодитель = ТекущиеДанныеРодитель;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьПравилоИУсловияЗапуска(СтрокаРодитель.ПолучитьИдентификатор());
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияЗапускаНажатие()
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать настройку обработки.'"));
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда 
		
		ОбработчикЗавершенияОткрытия = Новый ОписаниеОповещения(
			"ЗавершитьОткрытиеУсловияЗапускаДляВидаОбъекта",
			ЭтотОбъект);
		
		ТекстВопроса = 
			ОбщегоНазначенияДокументооборотКлиентСервер.ТекстВопросаНезаписанныхДанных(
			НСтр("ru = 'Условия запуска'"));
		ПоказатьВопрос(ОбработчикЗавершенияОткрытия, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;	
	
	УсловияЗапускаНажатиеОсновное();
	
КонецПроцедуры

// Продолжение УсловияЗапускаНажатие
//
&НаКлиенте
Процедура ЗавершитьОткрытиеУсловияЗапускаДляВидаОбъекта(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.ОК Тогда
		
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Создание:'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
	УсловияЗапускаНажатиеОсновное();
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияЗапускаНажатиеОсновное()
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать настройку обработки.'"));
		Возврат;
	КонецЕсли;
		
	Если ТекущиеДанные.ЭтоРодитель Тогда 
		СтрокаРодитель = ТекущиеДанные;
	Иначе 
		ТекущиеДанныеРодитель = ТекущиеДанные.ПолучитьРодителя();
		Если ТекущиеДанныеРодитель = Неопределено Тогда
			Возврат;
		Иначе 
			СтрокаРодитель = ТекущиеДанныеРодитель;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрокаРодитель.СсылкаНаНастройку) Тогда
		Возврат;
	КонецЕсли;	
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"УсловияЗапускаНажатиеПослеЗакрытия",
		ЭтотОбъект);
	
	ПараметрыОткрытия = Новый Структура("СсылкаНаНастройку, ТолькоПросмотр",
		СтрокаРодитель.СсылкаНаНастройку,
		ТолькоПросмотр Или Не ПравоРедактированияОбработки);
	
	ОткрытьФорму(
		"Справочник.НастройкиОбработкиВидовОбъектов.Форма.УсловияЗапуска", 
		ПараметрыОткрытия, 
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияЗапускаНажатиеПослеЗакрытия(ВыбранноеЗначение, Параметры) Экспорт

	// обновим ПравилаЗапуска	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные.ЭтоРодитель Тогда 
		СтрокаРодитель = ТекущиеДанные;
	Иначе 
		ТекущиеДанныеРодитель = ТекущиеДанные.ПолучитьРодителя();
		Если ТекущиеДанныеРодитель = Неопределено Тогда
			Возврат;
		Иначе 
			СтрокаРодитель = ТекущиеДанныеРодитель;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьПравилоИУсловияЗапуска(СтрокаРодитель.ПолучитьИдентификатор());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжиданияИзмененияНастройкиВидаДействий()
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
		
	Если ТекущиеДанные.ЭтоРодитель Тогда 
		СтрокаРодитель = ТекущиеДанные;
	Иначе 
		ТекущиеДанныеРодитель = ТекущиеДанные.ПолучитьРодителя();
		Если ТекущиеДанныеРодитель = Неопределено Тогда
			Возврат;
		Иначе 
			СтрокаРодитель = ТекущиеДанныеРодитель;
		КонецЕсли;
	КонецЕсли;
	
	ДействияКлиент.УстановитьПараметрыСпискаВсеВидыДействий(ЭтотОбъект, СтрокаРодитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеНастройкиПриИзменении() 
	
	ПоказатьВсеНастройки = Не ПоказатьВсеНастройки;
	Элементы.ДекорацияИнфОбработкаГруппы.Видимость = Ложь;
	Элементы.ВидыДействийКонтекстноеМенюПоказатьВсе.Пометка = ПоказатьВсеНастройки;
	ОбновитьВидыДействийПоВидуДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПравилоИУсловияЗапуска(ИдентификаторСтроки)

	СтрокаРодитель = ВидыДействий.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если СтрокаРодитель = Неопределено Тогда
		Возврат;
	КонецЕсли;	

	ПравилаЗапуска = НСтр("ru = 'Не задан'"); // реквизит формы	

	Если Не ЗначениеЗаполнено(СтрокаРодитель.СсылкаНаНастройку) Тогда
		Возврат;
	КонецЕсли;	

	// обновим ПравилаЗапуска	
	РеквизитыНастройки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаРодитель.СсылкаНаНастройку, 
		"ВидБизнесСобытия, ВидИнтерактивногоСобытия, УсловияЗапуска");
		
	Если ЗначениеЗаполнено(РеквизитыНастройки.ВидБизнесСобытия) 
		Или ЗначениеЗаполнено(РеквизитыНастройки.ВидИнтерактивногоСобытия) Тогда	
			
		ПравилаЗапуска = НСтр("ru = 'Задан'");
		
	КонецЕсли;		 	
	
	СтрокаРодитель.ПравилаЗапуска = ПравилаЗапуска;
	
	СтрокаРодитель.УсловияЗапуска = НСтр("ru = 'Не заданы'");
	УсловияЗапуска = РеквизитыНастройки.УсловияЗапуска.Выгрузить();
	Если УсловияЗапуска.Количество() <> 0 Тогда
		
		СтрокаРодитель.УсловияЗапуска = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 условие;;%1 условия;%1 условий;%1 условий'"),
				УсловияЗапуска.Количество());
		
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидыДействийПоВидуДокумента();
	
	Если Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	ДействияСервер.ЗаполнитьВидыДействийПоВидуОбъекта(ЭтотОбъект);
	
КонецПроцедуры

#Область КопированиеНастроекОбработки

// Обрабатывает ответ на вопрос о записи вида документа перед загрузкой настроек обработки
// 
// Параметры:
//  Ответ - КодВозвратаДиалога
//  ДополнительныеПараметры - Структура, Неопределено -
&НаКлиенте
Процедура ОбработатьОтветНаВопросОЗаписиПередЗагрузкойНастроекОбработки(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Не Ответ = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Записать() Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьНастройкиОбработки();
	
КонецПроцедуры

// Начинает процедуру загрузки настроек обработки
&НаКлиенте
Процедура ЗагрузитьНастройкиОбработки()
	
	ОбработчикЗагрузки = Новый ОписаниеОповещения("ОбработатьЗагрузкуНастроекОбработки", ЭтотОбъект);
	
	ДействияКлиент.ЗагрузитьНастройкиОбработкиВидаОбъектаИзФайла(Объект.Ссылка, ОбработчикЗагрузки);
	
КонецПроцедуры

// Обрабатывает загрузку настроек обработки
// 
// Параметры:
//  Результат - Произвольный
//  ДополнительныеПараметры - Структура, Неопределено -
&НаКлиенте
Процедура ОбработатьЗагрузкуНастроекОбработки(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьВидыДействийПоВидуДокумента();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти