#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Проверяет выражение на встроенном языке, используемое для заполнения реквизита при получении данных из ДО.
//
// Параметры:
//   ВычисляемоеВыражение - Строка - выражение на встроенном языке.
//   МестоВыполненияВыражения - ПеречислениеСсылка.МестаВыполненияВыраженийНаВстроенномЯзыке - указывает где
//     именно нужно выполнять выражение на встроенном языке, на стороне ДО или на стороне ИС.
//   ИнтегрированнаяСистема - ПланОбменаСсылка.ИнтегрированныеСистемы,
//                            Строка - система, для которой требуется проверить правила.
//   ПолноеИмяОбъектаДО - Строка - тип объекта 1С:Документооборот.
//   ПолноеИмяОбъектаИС - Строка - тип объекта интегрированной системы.
//   ТаблицаИсточник - Строка - имя таблицы, из которой будет выполняться загрузка данных.
//
Процедура ПроверитьВыражениеПравилаЗагрузки(ВычисляемоеВыражение, МестоВыполненияВыражения, ИнтегрированнаяСистема,
		ПолноеИмяОбъектаДО, ПолноеИмяОбъектаИС, ТаблицаИсточник = "") Экспорт
	
	Если СокрЛП(ВычисляемоеВыражение) = "" Или Не ЗначениеЗаполнено(МестоВыполненияВыражения) Тогда
		Возврат;
	КонецЕсли;
	
	Если МестоВыполненияВыражения = Перечисления.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеДО Тогда
		
		РеквизитыОбъектаИС = РаботаСИнтегрированнымиСистемами.СписокРеквизитовОбъектаИнтегрированнойСистемы(
			ИнтегрированнаяСистема,
			ПолноеИмяОбъектаИС);
		
		ОбъектИС = Новый Структура;
		ТекущаяСтрока = Неопределено;
		
		Для Каждого МетаданныеРеквизит Из РеквизитыОбъектаИС[0].Строки Цикл
			ОбъектИС.Вставить(МетаданныеРеквизит.Имя, ПривестиЗначениеРеквизитаИС(МетаданныеРеквизит.СписокТипов));
		КонецЦикла;
		
		Если РеквизитыОбъектаИС.Количество() = 2 Тогда
			Для Каждого МетаданныеТаблица Из РеквизитыОбъектаИС[1].Строки Цикл
				ТабЧасть = Новый Массив;
				СтрТаблицы = Новый Структура;
				
				Для Каждого МетаданныеРеквизит Из МетаданныеТаблица.Строки Цикл
					СтрТаблицы.Вставить(МетаданныеРеквизит.Имя, ПривестиЗначениеРеквизитаИС(МетаданныеРеквизит.СписокТипов));
				КонецЦикла;
				
				ТабЧасть.Добавить(СтрТаблицы);
				ОбъектИС.Вставить(МетаданныеТаблица.Имя, ТабЧасть);
				Если ТаблицаИсточник = МетаданныеТаблица.Имя Тогда
					ТекущаяСтрока = СтрТаблицы;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		МенеджерОбъектаДО = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяОбъектаДО);
		МетаданныеОбъектаДО = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъектаДО);
		Если ОбщегоНазначения.ЭтоСправочник(МетаданныеОбъектаДО)
				Или ОбщегоНазначения.ЭтоПланВидовРасчета(МетаданныеОбъектаДО) Тогда
			ОбъектДО = МенеджерОбъектаДО.СоздатьЭлемент();
		ИначеЕсли ОбщегоНазначения.ЭтоДокумент(МетаданныеОбъектаДО) Тогда
			ОбъектДО = МенеджерОбъектаДО.СоздатьДокумент();
		КонецЕсли;
		ОбъектДО.Заполнить(Неопределено);
		
		ОбработкаЗапросовXDTO.РезультатВыраженияНаВстроенномЯзыке(
			ВычисляемоеВыражение,
			ОбъектИС,
			ОбъектДО,
			ТекущаяСтрока);
		
	ИначеЕсли МестоВыполненияВыражения = Перечисления.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеИС Тогда
		
		ПараметрыСеанса.УзелИнтегрированнойСистемы = ИнтегрированнаяСистема;
		Прокси = РаботаСИнтегрированнымиСистемамиПовтИсп.ПолучитьПрокси(ИнтегрированнаяСистема);
		
		Запрос = РаботаСИнтегрированнымиСистемами.СоздатьОбъект(
			Прокси, "DMILCheckExpressionOnBuiltInLanguageRequest");
		Запрос.tabularSectionName = ТаблицаИсточник;
		Запрос.expressionOnBuiltInLanguage = ВычисляемоеВыражение;
		Запрос.objectType = ПолноеИмяОбъектаИС;
		
		РезультатПроверкиВыражения = Прокси.execute(Запрос);
		РаботаСИнтегрированнымиСистемами.ПроверитьВозвратВебСервиса(Прокси, РезультатПроверкиВыражения);
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет проверку правила загрузки данных в 1С:Документооборот.
//
// Параметры:
//   ПравилоЗагрузки - СправочникОбъект.ПравилаЗагрузкиДанныхВДО
//
Процедура ПроверитьПравило(ПравилоЗагрузки) Экспорт
	
	Если Не ЗначениеЗаполнено(ПравилоЗагрузки.ТипОбъектаИС) Тогда
		ВызватьИсключение НСтр("ru = 'Не задан тип объекта интегрированной системы'");
	КонецЕсли;
	
	РеквизитыОбъектаДО = РеквизитыОбъектаДО(
		ПравилоЗагрузки.ТипОбъектаДО,
		ПравилоЗагрузки.ВидДокумента);
	
	РеквизитыОбъектаИС = Новый Массив;
	ТабличныеЧастиОбъектаИС = Новый Массив;
	СтруктураМетаданных = РаботаСИнтегрированнымиСистемами.СписокРеквизитовОбъектаИнтегрированнойСистемы(
		ПравилоЗагрузки.УзелИнтегрированнойСистемы,
		ПравилоЗагрузки.ТипОбъектаИС);
	Для Каждого ЭлементСпискаМетаданных Из СтруктураМетаданных Цикл
		Если ЭлементСпискаМетаданных.Имя = "Реквизиты" Тогда
			РеквизитыОбъектаИС = ЭлементСпискаМетаданных.Строки;
		ИначеЕсли ЭлементСпискаМетаданных.Имя = "ТабличныеЧасти" Тогда
			ТабличныеЧастиОбъектаИС = ЭлементСпискаМетаданных.Строки;
		КонецЕсли;
	КонецЦикла;
	
	СписокОшибок = Новый Массив;
	
	Для Каждого Правило Из ПравилоЗагрузки.ПравилаЗаполненияРеквизитовДО Цикл
		ПредставлениеРеквизитаДО = ПредставлениеРеквизитаДО(РеквизитыОбъектаДО, Правило);
		ПроверитьСтрокуПравилаЗаполненияРеквизитовДО(
			ПравилоЗагрузки,
			Правило,
			ПредставлениеРеквизитаДО,
			СписокОшибок,
			РеквизитыОбъектаИС,
			ТабличныеЧастиОбъектаИС);
		Если Правило.ЭтоТаблица И Правило.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитТаблицы Тогда
			ПравилаЗаполненияСтрок =
				РаботаСИнтегрированнымиСистемамиВызовСервера.ПравилаЗаполненияСтрокТаблицыИзХранилища(
					Правило.ПравилаЗаполненияСтрокТаблицы,
					ПравилоЗагрузки.УзелИнтегрированнойСистемы,
					ПравилоЗагрузки.ТипОбъектаДО,
					ПравилоЗагрузки.ТипОбъектаИС,
					Правило.ИмяРеквизитаОбъектаДО,
					Правило.Обновлять,
					ПравилоЗагрузки.ВидДокумента,
					Ложь);
			Если ПравилаЗаполненияСтрок.Количество() > 0 Тогда
				Для Каждого Строка Из ПравилаЗаполненияСтрок Цикл
					Для Каждого Реквизит Из Строка Цикл
						ПредставлениеРеквизитаДО = ПредставлениеРеквизитаДО(РеквизитыОбъектаДО, Реквизит.Значение);
						ПроверитьСтрокуПравилаЗаполненияРеквизитовДО(
							ПравилоЗагрузки,
							Реквизит.Значение,
							ПредставлениеРеквизитаДО,
							СписокОшибок,
							РеквизитыОбъектаИС,
							ТабличныеЧастиОбъектаИС);
					КонецЦикла;
				КонецЦикла;
			Иначе
				СписокОшибок.Добавить(СтрШаблон(
					НСтр("ru = 'Ошибка в правиле заполнения %1
						|Не настроено заполнение таблицы'"),
					ПредставлениеРеквизитаДО));
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если СписокОшибок.Количество() > 0 Тогда
		ВызватьИсключение СтрСоединить(СписокОшибок, Символы.ПС + Символы.ПС);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает реквизиты объекта ДО указанного типа, возможно, с уточнением до вида документа.
//
// Параметры:
//   ТипОбъектаДО - Строка - имя типа объекта Документооборота.
//   ВидДокумента - СправочникСсылка.ВидыДокументов - вид документа.
//   ДляВыражения - Булево - возвращает список реквизитов для составления выражения на встроенном языке, т.е.
//     без отборов и без добавления виртуальных реквизитов.
//
// Возвращаемое значение:
//   см. Справочники.ПравилаЗагрузкиДанныхВДО.КоллекцияРеквизитовОбъектаДО
//
Функция РеквизитыОбъектаДО(ТипОбъектаДО, ВидДокумента = Неопределено, ДляВыражения = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Реквизиты = КоллекцияРеквизитовОбъектаДО();
	ОбязательныеРеквизиты = КоллекцияРеквизитовОбъектаДО();
	
	МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ТипОбъектаДО);
	Если МетаданныеОбъекта = Неопределено Тогда
		Возврат Реквизиты;
	КонецЕсли;
	
	// Добавим стандартные реквизиты.
	Для Каждого МетаданныеРеквизита Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		
		Синоним = МетаданныеРеквизита.Синоним;
		Если МетаданныеРеквизита.Имя = "ПометкаУдаления" Тогда
			Синоним = НСтр("ru = 'Пометка удаления'");
		КонецЕсли;
		
		Если ДляВыражения Или РеквизитИспользуетсяВИнтеграции(МетаданныеРеквизита.Имя) Тогда
			ДобавитьРеквизит(Реквизиты, ОписаниеРеквизита(МетаданныеРеквизита.Имя, Синоним, МетаданныеРеквизита.Тип));
		КонецЕсли;
		
		Если МетаданныеРеквизита.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
			НоваяСтрока = ОбязательныеРеквизиты.Добавить();
			НоваяСтрока.Имя = МетаданныеРеквизита.Имя;
		КонецЕсли;
		
	КонецЦикла;
	
	// Добавим остальные реквизиты.
	Для Каждого МетаданныеРеквизита Из МетаданныеОбъекта.Реквизиты Цикл
		
		Реквизит = Реквизиты.Добавить();
		Реквизит.Имя = МетаданныеРеквизита.Имя;
		Реквизит.Тип = МетаданныеРеквизита.Тип;
		Реквизит.Представление = ?(ЗначениеЗаполнено(МетаданныеРеквизита.Синоним),
			МетаданныеРеквизита.Синоним,
			МетаданныеРеквизита.Имя);
		Реквизит.Подсказка = СокрЛП(МетаданныеРеквизита.Подсказка);
		Для Каждого СвязьПараметровВыбора Из МетаданныеРеквизита.СвязиПараметровВыбора Цикл
			СтруктураСвязи = Новый Структура("Имя, ПутьКДанным",
				СвязьПараметровВыбора.Имя,
				СвязьПараметровВыбора.ПутьКДанным);
			Реквизит.СвязиПараметровВыбора.Добавить(СтруктураСвязи);
		КонецЦикла;
		
		Если Не ДляВыражения И Реквизит.Имя = "ВидДокумента" Тогда
			Реквизит.Порядок = -1;
		КонецЕсли;
		
		Если МетаданныеРеквизита.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
			НоваяСтрока = ОбязательныеРеквизиты.Добавить();
			НоваяСтрока.Имя = МетаданныеРеквизита.Имя;
		КонецЕсли;
		
	КонецЦикла;
	
	// Добавим общие реквизиты.
	ИспользованиеРеквизитаИспользовать = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать;
	ИспользованиеРеквизитаАвто = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Авто;
	АвтоИспользованиеРеквизитаИспользовать = Метаданные.СвойстваОбъектов.АвтоИспользованиеОбщегоРеквизита.Использовать;
	РазделениеДанныхРеквизитаНеИспользовать = Метаданные.СвойстваОбъектов.РазделениеДанныхОбщегоРеквизита.НеИспользовать;
	
	ВсеОбщиеРеквизиты = Новый Массив;
	Для Каждого ОбщийРеквизит Из Метаданные.ОбщиеРеквизиты Цикл
		Если ОбщийРеквизит.РазделениеДанных = РазделениеДанныхРеквизитаНеИспользовать Тогда
			ВсеОбщиеРеквизиты.Добавить(ОбщийРеквизит);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого МетаданныеРеквизита Из ВсеОбщиеРеквизиты Цикл
		
		ЭлементСостава = МетаданныеРеквизита.Состав.Найти(МетаданныеОбъекта);
		Если ЭлементСостава = Неопределено Тогда
			// Общего реквизита нет в документе.
			Продолжить;
		КонецЕсли;
		
		Если ЭлементСостава.Использование = ИспользованиеРеквизитаИспользовать
				Или (ЭлементСостава.Использование = ИспользованиеРеквизитаАвто
					И МетаданныеРеквизита.АвтоИспользование = АвтоИспользованиеРеквизитаИспользовать) Тогда
			
			Реквизит = Реквизиты.Добавить();
			Реквизит.Имя = МетаданныеРеквизита.Имя;
			Реквизит.Тип = МетаданныеРеквизита.Тип;
			Реквизит.Представление = ?(ЗначениеЗаполнено(МетаданныеРеквизита.Синоним),
				МетаданныеРеквизита.Синоним,
				МетаданныеРеквизита.Имя);
			Реквизит.Подсказка = СокрЛП(МетаданныеРеквизита.Подсказка);
			Для Каждого СвязьПараметровВыбора Из МетаданныеРеквизита.СвязиПараметровВыбора Цикл
				СтруктураСвязи = Новый Структура("Имя, ПутьКДанным",
					СвязьПараметровВыбора.Имя,
					СвязьПараметровВыбора.ПутьКДанным);
				Реквизит.СвязиПараметровВыбора.Добавить(СтруктураСвязи);
			КонецЦикла;
			
			Если МетаданныеРеквизита.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
				НоваяСтрока = ОбязательныеРеквизиты.Добавить();
				НоваяСтрока.Имя = МетаданныеРеквизита.Имя;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Добавим табличные части.
	Для Каждого МетаданныеТаблицы Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		
		Если СтрНачинаетсяС(МетаданныеТаблицы.Имя, "Удалить")
				Или СтрНайти(МетаданныеТаблицы.Синоним, НСтр("ru = '(Удалить)'")) > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Таблица = ОписаниеРеквизита(МетаданныеТаблицы.Имя, МетаданныеТаблицы.Синоним);
		Таблица.Подсказка = МетаданныеТаблицы.Подсказка;
		ДобавитьТаблицу(Реквизиты, Таблица);
		
		Если МетаданныеТаблицы.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
			НоваяСтрока = ОбязательныеРеквизиты.Добавить();
			НоваяСтрока.Имя = МетаданныеТаблицы.Имя;
			НоваяСтрока.ЭтоТаблица = Истина;
		КонецЕсли;
		
		Для Каждого МетаданныеРеквизита Из МетаданныеТаблицы.Реквизиты Цикл
			
			Реквизит = Реквизиты.Добавить();
			Реквизит.Имя = МетаданныеРеквизита.Имя;
			Реквизит.Тип = МетаданныеРеквизита.Тип;
			Реквизит.Представление = ?(ЗначениеЗаполнено(МетаданныеРеквизита.Синоним),
				МетаданныеРеквизита.Синоним,
				МетаданныеРеквизита.Имя);
			Реквизит.Подсказка = СокрЛП(МетаданныеРеквизита.Подсказка);
			Для Каждого СвязьПараметровВыбора Из МетаданныеРеквизита.СвязиПараметровВыбора Цикл
				СтруктураСвязи = Новый Структура("Имя, ПутьКДанным",
					СвязьПараметровВыбора.Имя,
					СвязьПараметровВыбора.ПутьКДанным);
				Реквизит.СвязиПараметровВыбора.Добавить(СтруктураСвязи);
			КонецЦикла;
			
			Реквизит.Таблица = МетаданныеТаблицы.Имя;
			Реквизит.ТаблицаДляСортировки = МетаданныеТаблицы.Имя;
			
			Реквизит.Порядок = 1;
			
			Если МетаданныеРеквизита.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
				НоваяСтрока = ОбязательныеРеквизиты.Добавить();
				НоваяСтрока.Имя = МетаданныеРеквизита.Имя;
				НоваяСтрока.Таблица = МетаданныеТаблицы.Имя;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ЗапросНастройки = Новый Запрос(
		"ВЫБРАТЬ
		|	Константы.ИспользоватьГрифыДоступа КАК ИспользоватьГрифыДоступа,
		|	Константы.ИспользоватьВопросыДеятельности КАК ИспользоватьВопросыДеятельности,
		|	Константы.ИспользоватьУчетПоОрганизациям КАК ИспользоватьУчетПоОрганизациям,
		|	Константы.ИспользоватьЭлектронныеПодписи КАК ИспользоватьЭлектронныеПодписи,
		|	Константы.ИспользоватьНоменклатуруДел КАК ИспользоватьНоменклатуруДел,
		|	Константы.ИспользоватьМестаХранения КАК ИспользоватьМестаХранения,
		|	Константы.ИспользоватьСоставДокументов КАК ИспользоватьСоставДокументов,
		|	Константы.ИспользоватьУчетДоступаКПерсональнымДанным КАК ИспользоватьУчетДоступаКПерсональнымДанным,
		|	Константы.ВестиУчетПоПроектам КАК ВестиУчетПоПроектам,
		|	Константы.ИспользоватьПапкиДокументов КАК ИспользоватьПапкиДокументов,
		|	Константы.ИспользоватьДополнительныеРеквизитыИСведения КАК ИспользоватьДополнительныеРеквизитыИСведения,
		|	Константы.ИспользоватьПапкиМероприятий КАК ИспользоватьПапкиМероприятий
		|ИЗ
		|	Константы КАК Константы");
	Настройки = ЗапросНастройки.Выполнить().Выбрать();
	Настройки.Следующий();
	
	// Добавим дополнительные реквизиты.
	Если Настройки.ИспользоватьДополнительныеРеквизитыИСведения Тогда
		
		МенеджерОбъектаДО = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ТипОбъектаДО);
		ОбъектДО = МенеджерОбъектаДО.СоздатьЭлемент();
		
		Если ТипОбъектаДО = "Справочник.ДокументыПредприятия" Тогда
			ОбъектДО.ВидДокумента = ВидДокумента;
		КонецЕсли;
		
		ОписаниеДопРеквизитов = ОбработкаЗапросовXDTO.ОписаниеДополнительныхРеквизитовОбъектаДО(ОбъектДО);
		НаименованияДопРеквизитов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(
			ОписаниеДопРеквизитов.ВыгрузитьКолонку("Свойство"),
			"Наименование");
		
		Для Каждого СтрокаДопРеквизит Из ОписаниеДопРеквизитов Цикл
			Реквизит = Реквизиты.Добавить();
			Реквизит.Имя = Строка(СтрокаДопРеквизит.Свойство.УникальныйИдентификатор());
			Реквизит.Представление = НаименованияДопРеквизитов[СтрокаДопРеквизит.Свойство];
			Реквизит.Тип = СтрокаДопРеквизит.ТипРеквизита;
			Реквизит.ЭтоДополнительныйРеквизит = Истина;
			Реквизит.ДополнительныйРеквизит = СтрокаДопРеквизит.Свойство;
			Реквизит.Подсказка = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаДопРеквизит.Свойство, "Подсказка"));
			
			Реквизит.Порядок = 1;
			
			Если СтрокаДопРеквизит.ЗаполнятьОбязательно Тогда
				НоваяСтрока = ОбязательныеРеквизиты.Добавить();
				НоваяСтрока.Имя = Строка(СтрокаДопРеквизит.Свойство.УникальныйИдентификатор());
				НоваяСтрока.ЭтоДополнительныйРеквизит = Истина;
				НоваяСтрока.ДополнительныйРеквизит = СтрокаДопРеквизит.Свойство;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	ВидДокументаОбъект = Неопределено;
	
	// Удалим лишние реквизиты.
	УдалитьЛишниеОбщиеРеквизиты(Реквизиты, ДляВыражения);
	
	Если Не ДляВыражения И ТипОбъектаДО = "Справочник.ДокументыПредприятия" Тогда
		Если ЗначениеЗаполнено(ВидДокумента) Тогда
			ВидДокументаОбъект = ВидДокумента.ПолучитьОбъект();
		КонецЕсли;
		УдалитьЛишниеРеквизитыДокумента(Реквизиты, ВидДокументаОбъект, Настройки);
		ДополнитьРеквизитыДокумента(Реквизиты, ВидДокументаОбъект, Настройки);
	КонецЕсли;
	
	Если Не ДляВыражения И ТипОбъектаДО = "Справочник.Мероприятия" Тогда
		УдалитьЛишниеРеквизитыМероприятия(Реквизиты, Настройки);
		ДополнитьРеквизитыМероприятия(Реквизиты, Настройки);
	КонецЕсли;
	
	Если Не ДляВыражения И ТипОбъектаДО = "Справочник.Контрагенты" Тогда
		УдалитьЛишниеРеквизитыКонтрагента(Реквизиты, Настройки);
		ДополнитьРеквизитыКонтрагента(Реквизиты, Настройки);
	КонецЕсли;
	
	РаботаСИнтегрированнымиСистемамиПереопределяемый.ПриОпределенииОбязательныхРеквизитовОбъектаДО(
		ОбязательныеРеквизиты,
		ТипОбъектаДО,
		ВидДокументаОбъект);
	
	Для Каждого Строка Из Реквизиты Цикл
		ПараметрыОтбора = Новый Структура("ЭтоДополнительныйРеквизит", Строка.ЭтоДополнительныйРеквизит);
		Если Строка.ЭтоДополнительныйРеквизит Тогда
			ПараметрыОтбора.Вставить("ДополнительныйРеквизит", Строка.ДополнительныйРеквизит);
		Иначе
			ПараметрыОтбора.Вставить("ЭтоТаблица", Строка.ЭтоТаблица);
			ПараметрыОтбора.Вставить("Таблица", Строка.Таблица);
			ПараметрыОтбора.Вставить("Имя", Строка.Имя);
		КонецЕсли;
		НайденныеСтроки = ОбязательныеРеквизиты.НайтиСтроки(ПараметрыОтбора);
		
		Строка.ОбязательноеЗаполнение = (НайденныеСтроки.Количество() > 0);
	КонецЦикла;
	
	Если ДляВыражения Тогда
		Реквизиты.Сортировать("ТаблицаДляСортировки, Порядок, Имя");
	Иначе
		Реквизиты.Сортировать("ТаблицаДляСортировки, Порядок, Представление");
	КонецЕсли;
	
	// Определим порядок с учетом зависимостей по параметрам выбора.
	Если Не ДляВыражения Тогда
		
		Для НомерСтроки = 1 По Реквизиты.Количество() Цикл
			Реквизиты[НомерСтроки - 1].Порядок = НомерСтроки;
		КонецЦикла;
		
		Повторять = Истина;
		Пока Повторять Цикл
			Повторять = Ложь;
			Для Каждого Реквизит Из Реквизиты Цикл
				ПутьКДанным = ПутьКДаннымРеквизита(Реквизит);
				МаксимальныйПорядок = 0;
				Для Каждого СвязьПараметровВыбора Из Реквизит.СвязиПараметровВыбора Цикл
					Зависимости = Реквизиты.НайтиСтроки(СтруктураПоискаРеквизита(СвязьПараметровВыбора.ПутьКДанным));
					Для Каждого Зависимость Из Зависимости Цикл
						ЕстьЗацикливание = Ложь;
						Для Каждого ЗависимостьСвязьПараметровВыбора Из Зависимость.СвязиПараметровВыбора Цикл
							Если ЗависимостьСвязьПараметровВыбора.ПутьКДанным = ПутьКДанным Тогда
								ЕстьЗацикливание = Истина;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						Если Не ЕстьЗацикливание Тогда
							МаксимальныйПорядок = Макс(МаксимальныйПорядок, Зависимость.Порядок);
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				Если МаксимальныйПорядок >= Реквизит.Порядок Тогда
					Реквизит.Порядок = МаксимальныйПорядок + 1;
					Повторять = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Реквизиты;
	
КонецФункции

// Возвращает реквизиты таблицы объекта ДО.
//
// Параметры:
//   ТипОбъектаДО - Строка - имя типа объекта Документооборота.
//   Таблица - Строка - имя таблицы объекта Документооборота.
//   ВидДокумента - СправочникСсылка.ВидыДокументов - вид документа.
//
// Возвращаемое значение:
//   Массив из СтрокаТаблицыЗначений
//
Функция РеквизитыТаблицыОбъектаДО(ТипОбъектаДО, Таблица, ВидДокумента = Неопределено) Экспорт
	
	РеквизитыОбъектаДО = РеквизитыОбъектаДО(ТипОбъектаДО, ВидДокумента);
	Возврат РеквизитыОбъектаДО.НайтиСтроки(Новый Структура("Таблица", Таблица))
	
КонецФункции

// Конструктор коллекции описаний реквизитов объекта ДО.
//
// Возвращаемое значение:
//   ТаблицаЗначений:
//     * Имя - Строка
//     * Представление - Строка
//     * Тип - ОписаниеТипов
//     * ЭтоТаблица - Булево
//     * Таблица - Строка
//     * ТаблицаДляСортировки - Строка
//     * ЭтоДополнительныйРеквизит - Булево
//     * ДополнительныйРеквизит - ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения
//     * ОбязательноеЗаполнение - Булево
//     * СвязиПараметровВыбора - Массив из Структура:
//       ** Имя - Строка
//       ** ПутьКДанным - Строка
//     * Порядок - Число
//
Функция КоллекцияРеквизитовОбъектаДО() Экспорт
	
	Реквизиты = Новый ТаблицаЗначений;
	Реквизиты.Колонки.Добавить("Имя", ТипСтрока());
	Реквизиты.Колонки.Добавить("Представление", ТипСтрока());
	Реквизиты.Колонки.Добавить("Подсказка", ТипСтрока());
	Реквизиты.Колонки.Добавить("Тип", Новый ОписаниеТипов("ОписаниеТипов"));
	Реквизиты.Колонки.Добавить("ЭтоТаблица", ТипБулево());
	Реквизиты.Колонки.Добавить("Таблица", ТипСтрока());
	Реквизиты.Колонки.Добавить("ТаблицаДляСортировки", ТипСтрока());
	Реквизиты.Колонки.Добавить("ЭтоДополнительныйРеквизит", ТипБулево());
	Реквизиты.Колонки.Добавить("ДополнительныйРеквизит",
		Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения"));
	Реквизиты.Колонки.Добавить("ОбязательноеЗаполнение", ТипБулево());
	Реквизиты.Колонки.Добавить("СвязиПараметровВыбора", Новый ОписаниеТипов("Массив"));
	Реквизиты.Колонки.Добавить("Порядок", ТипЧисло());
	Реквизиты.Колонки.Добавить("ИмяМетодаДляЗаполнения", ТипСтрока());
	Реквизиты.Колонки.Добавить("ИмяПоляПроверкиДоступностиПоСостоянию", ТипСтрока());
	Реквизиты.Колонки.Добавить("ИмяМетодаПроверкиДоступностиПоСостоянию", ТипСтрока());
	
	Реквизиты.Индексы.Добавить("Имя");
	Реквизиты.Индексы.Добавить("Таблица, Имя");
	
	Возврат Реквизиты;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Добавляет в таблицу реквизитов объекта ДО новый реквизит.
//
// Параметры:
//   Реквизиты - см. Справочники.ПравилаЗагрузкиДанныхВДО.РеквизитыОбъектаДО
//   ОписаниеРеквизита - см. ОписаниеРеквизита
//   ДопОбработчикиПравилЗагрузки - см. ДопОбработчикиПравилЗагрузки
//
Процедура ДобавитьРеквизит(Реквизиты, ОписаниеРеквизита, ДопОбработчикиПравилЗагрузки = Неопределено)
	
	НоваяСтрока = Реквизиты.Добавить();
	НоваяСтрока.Имя = ОписаниеРеквизита.Имя;
	НоваяСтрока.Представление = ОписаниеРеквизита.Представление;
	НоваяСтрока.Тип = ОписаниеРеквизита.Тип;
	НоваяСтрока.Подсказка = СокрЛП(ОписаниеРеквизита.Подсказка);
	НоваяСтрока.ИмяПоляПроверкиДоступностиПоСостоянию = ОписаниеРеквизита.ИмяПоляПроверкиДоступностиПоСостоянию;
	
	Если ДопОбработчикиПравилЗагрузки <> Неопределено Тогда
		Если Не ПустаяСтрока(ДопОбработчикиПравилЗагрузки.ИмяМетодаДляЗаполнения) Тогда
			НоваяСтрока.ИмяМетодаДляЗаполнения = СтрШаблон("%1.%2",
				ДопОбработчикиПравилЗагрузки.ИмяМодуля,
				ДопОбработчикиПравилЗагрузки.ИмяМетодаДляЗаполнения);
		КонецЕсли;
		Если Не ПустаяСтрока(ДопОбработчикиПравилЗагрузки.ИмяМетодаПроверкиДоступностиПоСостоянию) Тогда
			НоваяСтрока.ИмяМетодаПроверкиДоступностиПоСостоянию = СтрШаблон("%1.%2",
				ДопОбработчикиПравилЗагрузки.ИмяМодуля,
				ДопОбработчикиПравилЗагрузки.ИмяМетодаПроверкиДоступностиПоСостоянию);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеРеквизита.Владелец) Тогда
		НоваяСтрока.СвязиПараметровВыбора = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
			Новый Структура("Имя, ПутьКДанным", "Отбор.Владелец", ОписаниеРеквизита.Владелец));
	КонецЕсли;
	
КонецПроцедуры

// Добавляет в таблицу реквизитов объекта ДО новый реквизит табличной части.
//
// Параметры:
//   Реквизиты - см. Справочники.ПравилаЗагрузкиДанныхВДО.РеквизитыОбъектаДО
//   ОписаниеРеквизита - см. ОписаниеРеквизита
//
Процедура ДобавитьРеквизитТаблицы(Реквизиты, ОписаниеРеквизита)
	
	ЧастиИмени = СтрРазделить(ОписаниеРеквизита.Имя, ".");
	ИмяТаблицы = ЧастиИмени[0];
	ИмяРеквизита = ЧастиИмени[1];
	
	НоваяСтрока = Реквизиты.Добавить();
	НоваяСтрока.Таблица = ИмяТаблицы;
	НоваяСтрока.ТаблицаДляСортировки = ИмяТаблицы;
	НоваяСтрока.Имя = ИмяРеквизита;
	НоваяСтрока.Представление = ОписаниеРеквизита.Представление;
	НоваяСтрока.Тип = ОписаниеРеквизита.Тип;
	НоваяСтрока.Порядок = ОписаниеРеквизита.Порядок;
	НоваяСтрока.Подсказка = СокрЛП(ОписаниеРеквизита.Подсказка);
	
	Если ЗначениеЗаполнено(ОписаниеРеквизита.Владелец) Тогда
		НоваяСтрока.СвязиПараметровВыбора = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
			Новый Структура("Имя, ПутьКДанным", "Отбор.Владелец", ОписаниеРеквизита.Владелец));
	КонецЕсли;
	
КонецПроцедуры

// Добавляет в таблицу реквизитов объекта ДО новую таблицу.
//
// Параметры:
//   Реквизиты - см. Справочники.ПравилаЗагрузкиДанныхВДО.РеквизитыОбъектаДО
//   ОписаниеРеквизита - см. ОписаниеРеквизита
//   ДопОбработчикиПравилЗагрузки - Строка - имя модуля, где находятся доп. обработчики.
//                                      - Неопределено - по-умолчанию используется "ОбработкаЗапросовXDTOДокументы".
//
Процедура ДобавитьТаблицу(Реквизиты, ОписаниеРеквизита, ДопОбработчикиПравилЗагрузки = Неопределено)
	
	НоваяСтрока = Реквизиты.Добавить();
	НоваяСтрока.ЭтоТаблица = Истина;
	НоваяСтрока.Имя = ОписаниеРеквизита.Имя;
	НоваяСтрока.ТаблицаДляСортировки = ОписаниеРеквизита.Имя;
	НоваяСтрока.Представление = ОписаниеРеквизита.Представление;
	НоваяСтрока.Подсказка = СокрЛП(ОписаниеРеквизита.Подсказка);
	НоваяСтрока.ИмяПоляПроверкиДоступностиПоСостоянию = ОписаниеРеквизита.ИмяПоляПроверкиДоступностиПоСостоянию;
	
	Если ДопОбработчикиПравилЗагрузки <> Неопределено Тогда
		Если Не ПустаяСтрока(ДопОбработчикиПравилЗагрузки.ИмяМетодаДляЗаполнения) Тогда
			НоваяСтрока.ИмяМетодаДляЗаполнения = СтрШаблон("%1.%2",
				ДопОбработчикиПравилЗагрузки.ИмяМодуля,
				ДопОбработчикиПравилЗагрузки.ИмяМетодаДляЗаполнения);
		КонецЕсли;
		Если Не ПустаяСтрока(ДопОбработчикиПравилЗагрузки.ИмяМетодаПроверкиДоступностиПоСостоянию) Тогда
			НоваяСтрока.ИмяМетодаПроверкиДоступностиПоСостоянию = СтрШаблон("%1.%2",
				ДопОбработчикиПравилЗагрузки.ИмяМодуля,
				ДопОбработчикиПравилЗагрузки.ИмяМетодаПроверкиДоступностиПоСостоянию);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Конструктор структуры, описывающей дополнительные обработчики реквизита правил загрузки данных в ДО.
//
// Параметры:
//   ИмяМодуля - Строка - имя модуля, где находятся доп. обработчики.
//     По-умолчанию используется "ОбработкаЗапросовXDTOДокументы".
//
// Возвращаемое значение:
//   Структура:
//     * ИмяМодуля - Строка - имя модуля, где находятся доп. обработчики.
//     * ИмяМетодаДляЗаполнения - Строка - имя процедуры, которая будет вызвана для программного заполнения реквизита.
//         Применяется для заполнения реквизитов, которых физически нет в объекте ДО, например для
//         заполнения Плательщика и Получателя в Заявке на оплату.
//     * ИмяМетодаПроверкиДоступностиПоСостоянию - Строка - имя процедуры, которая будет вызвана для проверки доступности
//         по состоянию программно заполняемого реквизита.
//
Функция ДопОбработчикиПравилЗагрузки(ИмяМодуля = "ОбработкаЗапросовXDTOДокументы")
	
	ДопОбработчики = Новый Структура;
	ДопОбработчики.Вставить("ИмяМодуля", ИмяМодуля);
	ДопОбработчики.Вставить("ИмяМетодаДляЗаполнения", "");
	ДопОбработчики.Вставить("ИмяМетодаПроверкиДоступностиПоСостоянию", "");
	
	Возврат ДопОбработчики;
	
КонецФункции

Процедура ДополнитьРеквизитыДокумента(Реквизиты, ВидДокументаОбъект, Настройки)
	
	ДопОбработчикиКорреспонденции = ДопОбработчикиПравилЗагрузки();
	ДопОбработчикиКорреспонденции.ИмяМетодаДляЗаполнения = "ПравилаЗагрузки_ЗаполнитьПараметрыКорреспонденции";
	ДопОбработчикиКорреспонденции.ИмяМетодаПроверкиДоступностиПоСостоянию = "ПроверитьДоступностьПоСостоянию_ПараметрыКорреспонденции";
	
	ДопОбработчикиСвязи = ДопОбработчикиПравилЗагрузки();
	ДопОбработчикиСвязи.ИмяМетодаДляЗаполнения = "ПравилаЗагрузки_ЗаполнитьСвязи";
	ДопОбработчикиСвязи.ИмяМетодаПроверкиДоступностиПоСостоянию = "ПроверитьДоступностьПоСостоянию_Связи";
	
	ДобавитьРеквизит(
		Реквизиты,
		ОписаниеРеквизита("Создал", НСтр("ru = 'Создал'"), ТипСотрудники()));
	ДобавитьРеквизит(
		Реквизиты,
		ОписаниеРеквизита("Зарегистрировал", НСтр("ru = 'Зарегистрировал'"), ТипСотрудники()));
	ДобавитьРеквизит(
		Реквизиты,
		ОписаниеРеквизита("Ответственный", НСтр("ru = 'Ответственный'"), ТипСотрудники()));
	ДобавитьРеквизит(
		Реквизиты,
		ОписаниеРеквизита("Подготовил", НСтр("ru = 'Подготовил'"), ТипСотрудники()));
	
	Если Настройки.ИспользоватьМестаХранения Тогда
		Реквизит = ОписаниеРеквизита("ОтветственныйЗаХранение", НСтр("ru = 'Ответственный за хранение'"), ТипСотрудники());
		Реквизит.Подсказка = НСтр("ru = 'Ответственный за хранение бумажного документа'");
		ДобавитьРеквизит(Реквизиты, Реквизит);
	КонецЕсли;
	
	Если ВидДокументаОбъект = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидДокументаОбъект.УчитыватьВходящийНомерИДатуПолучателя Тогда
		Реквизит = ОписаниеРеквизита("ВходящийНомер", НСтр("ru = '№ получателя'"), ТипСтрока());
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "НомерКонтрагента";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиКорреспонденции);
		
		Реквизит = ОписаниеРеквизита("ВходящаяДата", НСтр("ru = 'Дата получателя'"), ТипДата());
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "НомерКонтрагента";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиКорреспонденции);
	КонецЕсли;
	
	Если ВидДокументаОбъект.ЯвляетсяВходящейКорреспонденцией Тогда
		Реквизит = ОписаниеРеквизита("СпособПолучения", НСтр("ru = 'Способ получения'"), Новый ОписаниеТипов("СправочникСсылка.СпособыДоставки"));
		Реквизит.Подсказка = НСтр("ru = 'Способ получения документа'");
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "СпособОтправкиПолучения";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиКорреспонденции);
		
		Реквизит = ОписаниеРеквизита("ИсходящийНомер", НСтр("ru = 'Исходящий номер'"), ТипСтрока());
		Реквизит.Подсказка = НСтр("ru = 'Исходящий номер, присвоенный отправителем'");
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "НомерКонтрагента";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиКорреспонденции);
		
		Реквизит = ОписаниеРеквизита("ИсходящаяДата", НСтр("ru = 'Исходящая дата'"), ТипДата());
		Реквизит.Подсказка = НСтр("ru = 'Исходящая дата, присвоенная отправителем'");
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "НомерКонтрагента";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиКорреспонденции);
		
		Реквизит = ОписаниеРеквизита("АдресатВходящейКорреспонденции", НСтр("ru = 'Адресат'"), ТипСотрудники());
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "Адресат";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиКорреспонденции);
		
		Реквизит = ОписаниеРеквизита("ПолученВОтветНа", НСтр("ru = 'В ответ на'"), Новый ОписаниеТипов("СправочникСсылка.ДокументыПредприятия"));
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "ВОтветНа";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиСвязи);
	КонецЕсли;
	
	Если ВидДокументаОбъект.ЯвляетсяИсходящейКорреспонденцией Тогда
		Реквизит = ОписаниеРеквизита("СпособОтправки", НСтр("ru = 'Способ отправки'"), Новый ОписаниеТипов("СправочникСсылка.СпособыДоставки"));
		Реквизит.Подсказка = НСтр("ru = 'Способ отправки документа адресату'");
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "СпособОтправкиПолучения";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиКорреспонденции);
		
		Реквизит = ОписаниеРеквизита("Отправлен", НСтр("ru = 'Отправлен'"), ТипБулево());
		Реквизит.Подсказка = НСтр("ru = 'Документ отправлен адресату'");
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "Отправлен";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиКорреспонденции);
		
		Реквизит = ОписаниеРеквизита("ДатаОтправки", НСтр("ru = 'Дата отправки'"), ТипДата());
		Реквизит.Подсказка = НСтр("ru = 'Дата отправки документа адресату'");
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "Отправлен";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиКорреспонденции);
		
		Реквизит = ОписаниеРеквизита("ОтправленВОтветНа", НСтр("ru = 'В ответ на'"), Новый ОписаниеТипов("СправочникСсылка.ДокументыПредприятия"));
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "ВОтветНа";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиСвязи);
	КонецЕсли;
	
	Если ВидДокументаОбъект.ЯвляетсяОбращениемОтГраждан Тогда
		Реквизит = ОписаниеРеквизита("ВидОбращения", НСтр("ru = 'Вид обращения'"), Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОбращенийГраждан"));
		ДопОбработчик = ДопОбработчикиПравилЗагрузки();
		ДопОбработчик.ИмяМетодаДляЗаполнения = "ПравилаЗагрузки_ЗаполнитьПараметрыКорреспонденции";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчик);
	КонецЕсли;
	
	Если ВидДокументаОбъект.ЯвляетсяИсходящейКорреспонденцией
			Или ВидДокументаОбъект.ЯвляетсяВходящейКорреспонденцией Тогда
		// общие реквизиты корреспонденции
		ТипыИдентификатора = Новый Массив;
		ТипыИдентификатора.Добавить(Тип("СправочникСсылка.ДокументыПредприятия"));
		ТипыИдентификатора.Добавить(Тип("СправочникСсылка.Мероприятия"));
		ТипПредметПереписки = Новый ОписаниеТипов(ТипыИдентификатора);
		
		Реквизит = ОписаниеРеквизита("ПредметПереписки", НСтр("ru = 'Предмет переписки'"), ТипПредметПереписки);
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "ПредметПереписки";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиСвязи);
	КонецЕсли;
	
	Если ВидДокументаОбъект.ВестиУчетПоКонтрагентам Тогда
		
		Если ВидДокументаОбъект.ЯвляетсяВходящейКорреспонденцией Тогда
			Реквизит = ОписаниеРеквизита("Контрагент", НСтр("ru = 'Отправитель'"), Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
			Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "Контрагент";
			ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиКорреспонденции);
			
			Реквизит = ОписаниеРеквизита("ПодписалОтКонтрагента", НСтр("ru = 'Подписал'"), Новый ОписаниеТипов("СправочникСсылка.КонтактныеЛица"));
			Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "Контрагент";
			ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиКорреспонденции);
			
		ИначеЕсли ВидДокументаОбъект.ЯвляетсяИсходящейКорреспонденцией Тогда
			Реквизит = ОписаниеРеквизита("Контрагент", НСтр("ru = 'Получатель'"), Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
			Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "Контрагент";
			ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиКорреспонденции);
			
			Реквизит = ОписаниеРеквизита("КонтактноеЛицо", НСтр("ru = 'Адресат'"), Новый ОписаниеТипов("СправочникСсылка.КонтактныеЛица"));
			Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "Контрагент";
			ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчикиКорреспонденции);
			
		Иначе
			ДобавитьТаблицу(Реквизиты, ОписаниеРеквизита("Контрагенты", НСтр("ru = 'Контрагенты'")));
			
			Реквизит = ОписаниеРеквизита(
				"Контрагенты.Контрагент",
				НСтр("ru = 'Контрагент'"),
				Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
			Реквизит.Порядок = 1;
			ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
			
			Реквизит = ОписаниеРеквизита(
				"Контрагенты.КонтактноеЛицо",
				НСтр("ru = 'Контактное лицо'"),
				Новый ОписаниеТипов("СправочникСсылка.КонтактныеЛица"));
			Реквизит.Владелец = "Контрагенты.Контрагент";
			Реквизит.Порядок = 2;
			ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
			
			Реквизит = ОписаниеРеквизита(
				"Контрагенты.ПодписалОтКонтрагента",
				НСтр("ru = 'Подписал от контрагента'"),
				Новый ОписаниеТипов("СправочникСсылка.КонтактныеЛица"));
			Реквизит.Владелец = "Контрагенты.Контрагент";
			Реквизит.Порядок = 3;
			ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВидДокументаОбъект.ВестиУчетСторон И Не ВидДокументаОбъект.ЯвляетсяЗаявкойНаОплату Тогда
		
		ДобавитьТаблицу(Реквизиты, ОписаниеРеквизита("Стороны", НСтр("ru = 'Стороны'")));
		
		ТипыСтороны = Новый Массив;
		ТипыСтороны.Добавить(Тип("СправочникСсылка.Организации"));
		ТипыСтороны.Добавить(Тип("СправочникСсылка.Контрагенты"));
		Реквизит = ОписаниеРеквизита(
			"Стороны.Сторона",
			НСтр("ru = 'Сторона'"),
			Новый ОписаниеТипов(ТипыСтороны));
		Реквизит.Порядок = 1;
		ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
		
		ТипыКонтактногоЛица = Новый Массив;
		ТипыКонтактногоЛица.Добавить(Тип("СправочникСсылка.Сотрудники"));
		ТипыКонтактногоЛица.Добавить(Тип("СправочникСсылка.КонтактныеЛица"));
		Реквизит = ОписаниеРеквизита(
			"Стороны.КонтактноеЛицо",
			НСтр("ru = 'Контактное лицо'"),
			Новый ОписаниеТипов(ТипыКонтактногоЛица));
		Реквизит.Порядок = 2;
		ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
		
		Реквизит = ОписаниеРеквизита(
			"Стороны.Наименование",
			НСтр("ru = 'Наименование'"),
			Новый ОписаниеТипов("СправочникСсылка.НаименованияСторон"));
		Реквизит.Порядок = 3;
		Реквизит.Подсказка = НСтр("ru = 'Наименование стороны'");
		ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
		
		Реквизит = ОписаниеРеквизита(
			"Стороны.Подписал",
			НСтр("ru = 'Подписал'"),
			Новый ОписаниеТипов(ТипыКонтактногоЛица));
		Реквизит.Порядок = 4;
		ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
		
		Реквизит = ОписаниеРеквизита("Стороны.Подписан", НСтр("ru = 'Подписан'"), ТипБулево());
		Реквизит.Порядок = 5;
		ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
		
		Реквизит = ОписаниеРеквизита("Стороны.ДатаПодписи", НСтр("ru = 'Дата подписи'"), ТипДата());
		Реквизит.Порядок = 6;
		ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
		
		Реквизит = ОписаниеРеквизита("Стороны.Комментарий", НСтр("ru = 'Комментарий'"), ТипСтрока());
		Реквизит.Порядок = 7;
		ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
		
	КонецЕсли;
	
	Если ВидДокументаОбъект.ЯвляетсяЗаявкойНаОплату Тогда
		ТипыИдентификатора = Новый Массив;
		ТипыИдентификатора.Добавить(Тип("СправочникСсылка.Сотрудники"));
		ТипыИдентификатора.Добавить(Тип("СправочникСсылка.Контрагенты"));
		ТипыИдентификатора.Добавить(Тип("СправочникСсылка.Пользователи"));
		ТипСтороны = Новый ОписаниеТипов(ТипыИдентификатора);
		
		Реквизит = ОписаниеРеквизита("Организация", НСтр("ru = 'Плательщик'"), Новый ОписаниеТипов("СправочникСсылка.Организации"));
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "Организация";
		ДопОбработчик = ДопОбработчикиПравилЗагрузки();
		ДопОбработчик.ИмяМетодаДляЗаполнения = "ПравилаЗагрузки_ЗаполнитьПлательщикаВЗаявкеНаОплату";
		ДопОбработчик.ИмяМетодаПроверкиДоступностиПоСостоянию = "ПроверитьДоступностьПоСостоянию_ПлательщикВЗаявкеНаОплату";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчик);
		
		Реквизит = ОписаниеРеквизита("Получатель", НСтр("ru = 'Получатель'"), ТипСтороны);
		Реквизит.ИмяПоляПроверкиДоступностиПоСостоянию = "Контрагент";
		ДопОбработчик = ДопОбработчикиПравилЗагрузки();
		ДопОбработчик.ИмяМетодаДляЗаполнения = "ПравилаЗагрузки_ЗаполнитьПолучателяВЗаявкеНаОплату";
		ДопОбработчик.ИмяМетодаПроверкиДоступностиПоСостоянию = "ПроверитьДоступностьПоСостоянию_ПолучательВЗаявкеНаОплату";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчик);
		
		Реквизит = ОписаниеРеквизита("АвансовыйОтчет", НСтр("ru = 'Авансовый отчет'"), Новый ОписаниеТипов("СправочникСсылка.ДокументыПредприятия"));
		ДопОбработчик = ДопОбработчикиПравилЗагрузки();
		ДопОбработчик.ИмяМетодаДляЗаполнения = "ПравилаЗагрузки_ЗаполнитьСвязи";
		ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчик);
	КонецЕсли;
	
	Если ВидДокументаОбъект.ВестиУчетПоСтатьямДДС Тогда
		Таблица = ОписаниеРеквизита("СтатьиДДС", НСтр("ru = 'Статьи ДДС'"));
		Таблица.ИмяПоляПроверкиДоступностиПоСостоянию = "Сумма";
		Таблица.Подсказка = НСтр("ru = 'Статьи движения денежных средств документа'");
		ДопОбработчик = ДопОбработчикиПравилЗагрузки();
		ДопОбработчик.ИмяМетодаДляЗаполнения = "ПравилаЗагрузки_ЗаполнитьСтатьиДДС";
		ДопОбработчик.ИмяМетодаПроверкиДоступностиПоСостоянию = "ПроверитьДоступностьПоСостоянию_СтатьиДДС";
		ДобавитьТаблицу(Реквизиты, Таблица, ДопОбработчик);
		
		Реквизит = ОписаниеРеквизита(
			"СтатьиДДС.СтатьяДвиженияДенежныхСредств",
			НСтр("ru = 'Статья ДДС'"),
			Новый ОписаниеТипов("СправочникСсылка.СтатьиДвиженияДенежныхСредств"));
		Реквизит.Порядок = 1;
		ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
		
		Реквизит = ОписаниеРеквизита(
			"СтатьиДДС.Сумма",
			НСтр("ru = 'Сумма'"),
			Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный)));
		Реквизит.Порядок = 2;
		ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
		
		Реквизит = ОписаниеРеквизита(
			"СтатьиДДС.СуммаНДС",
			НСтр("ru = 'Сумма НДС'"),
			Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный)));
		Реквизит.Порядок = 3;
		ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьРеквизитыКонтрагента(Реквизиты, Настройки)
	
	Реквизит = ОписаниеРеквизита(
		"ОсновнойБанковскийСчет",
		НСтр("ru = 'Основной банковский счет'"),
		Новый ОписаниеТипов("СправочникСсылка.БанковскиеСчета"));
	ДопОбработчик = ДопОбработчикиПравилЗагрузки();
	ДопОбработчик.ИмяМетодаДляЗаполнения = "ПравилаЗагрузки_ЗаполнитьОсновнойБанковскийСчет";
	ДобавитьРеквизит(Реквизиты, Реквизит, ДопОбработчик);
	
	ДобавитьРеквизит(
		Реквизиты,
		ОписаниеРеквизита("Ответственный", НСтр("ru = 'Ответственный'"), ТипСотрудники()));
	
КонецПроцедуры

Процедура ДополнитьРеквизитыМероприятия(Реквизиты, Настройки)
	
	МассивТиповИсполнителя = Новый Массив;
	МассивТиповИсполнителя.Добавить(Тип("СправочникСсылка.Сотрудники"));
	МассивТиповИсполнителя.Добавить(Тип("СправочникСсылка.ПолныеРоли"));
	МассивТиповИсполнителя.Добавить(Тип("СправочникСсылка.Контрагенты"));
	МассивТиповИсполнителя.Добавить(Тип("СправочникСсылка.КонтактныеЛица"));
	ТипИсполнителя = Новый ОписаниеТипов(МассивТиповИсполнителя);
	
	МассивТиповОрганизатора = Новый Массив;
	МассивТиповОрганизатора.Добавить(Тип("СправочникСсылка.Сотрудники"));
	МассивТиповОрганизатора.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ТипОрганизатора = Новый ОписаниеТипов(МассивТиповОрганизатора);
	
	Реквизит = ОписаниеРеквизита("Организатор", НСтр("ru = 'Организатор'"), ТипОрганизатора);
	Реквизит.Подсказка = НСтр("ru = 'Организатор мероприятия'");
	ДобавитьРеквизит(Реквизиты, Реквизит);
	
	Реквизит = ОписаниеРеквизита("Председатель", НСтр("ru = 'Председатель'"), ТипИсполнителя);
	Реквизит.Подсказка = НСтр("ru = 'Председатель мероприятия'");
	ДобавитьРеквизит(Реквизиты, Реквизит);
	
	Реквизит = ОписаниеРеквизита("Секретарь", НСтр("ru = 'Секретарь'"), ТипИсполнителя);
	Реквизит.Подсказка = НСтр("ru = 'Секретарь мероприятия'");
	ДобавитьРеквизит(Реквизиты, Реквизит);
	
	Реквизит = ОписаниеРеквизита("Подготовил", НСтр("ru = 'Подготовил'"), ТипСотрудники());
	Реквизит.Подсказка = НСтр("ru = 'Пользователь, подготовивший мероприятие'");
	ДобавитьРеквизит(Реквизиты, Реквизит);
	
	ДобавитьРеквизит(
		Реквизиты,
		ОписаниеРеквизита("Куратор", НСтр("ru = 'Куратор'"), ТипСотрудники()));
	
	// Таблица Участники.
	ДопОбработчик = ДопОбработчикиПравилЗагрузки();
	ДопОбработчик.ИмяМетодаДляЗаполнения = "ПравилаЗагрузки_ЗаполнитьУчастниковМероприятия";
	ДобавитьТаблицу(Реквизиты, ОписаниеРеквизита("Участники", НСтр("ru = 'Участники'")), ДопОбработчик);
	
	Реквизит = ОписаниеРеквизита("Участники.Исполнитель", НСтр("ru = 'Участник'"), ТипИсполнителя);
	Реквизит.Порядок = 1;
	ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
	
	Реквизит = ОписаниеРеквизита("Участники.ЯвкаОбязательна", НСтр("ru = 'Явка обязательна'"), ТипБулево());
	Реквизит.Порядок = 2;
	ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
	
	Реквизит = ОписаниеРеквизита("Участники.Отсутствовал", НСтр("ru = 'Явка Отсутствовал'"), ТипБулево());
	Реквизит.Порядок = 3;
	ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
	
	Реквизит = ОписаниеРеквизита(
		"Участники.СостояниеПриглашения",
		НСтр("ru = 'Состояние приглашения'"),
		Новый ОписаниеТипов("ПеречислениеСсылка.СостоянияПриглашения"));
	Реквизит.Порядок = 4;
	ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
	
	// Таблица Программа.
	Таблица = ОписаниеРеквизита("Программа", НСтр("ru = 'Программа'"));
	Таблица.Подсказка = НСтр("ru = 'Программа мероприятия'");
	ДобавитьТаблицу(Реквизиты, Таблица);
	
	Реквизит = ОписаниеРеквизита(
		"Программа.НомерПункта",
		НСтр("ru = 'Номер пункта'"),
		Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(4, 0, ДопустимыйЗнак.Неотрицательный)));
	Реквизит.Порядок = 1;
	Реквизит.Подсказка = НСтр("ru = 'Номер пункта программы'");
	ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
	
	Реквизит = ОписаниеРеквизита("Программа.Начало", НСтр("ru = 'Начало'"), ТипДата());
	Реквизит.Порядок = 2;
	Реквизит.Подсказка = НСтр("ru = 'Время начала пункта программы'");
	ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
	
	Реквизит = ОписаниеРеквизита("Программа.Окончание", НСтр("ru = 'Окончание'"), ТипДата());
	Реквизит.Порядок = 3;
	Реквизит.Подсказка = НСтр("ru = 'Время окончания пункта программы'");
	ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
	
	Реквизит = ОписаниеРеквизита("Программа.Содержание", НСтр("ru = 'Содержание'"), ТипСтрока());
	Реквизит.Порядок = 4;
	Реквизит.Подсказка = НСтр("ru = 'Содержание пункта программы'");
	ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
	
	Реквизит = ОписаниеРеквизита("Программа.Комментарий", НСтр("ru = 'Комментарий'"), ТипСтрока());
	Реквизит.Порядок = 5;
	ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
	
	Реквизит = ОписаниеРеквизита("Программа.Исполнитель", НСтр("ru = 'Ответственный'"), ТипИсполнителя);
	Реквизит.Порядок = 6;
	Реквизит.Подсказка = НСтр("ru = 'Исполнитель пункта программы'");
	ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
	
	Реквизит = ОписаниеРеквизита(
		"Программа.ВремяПлан",
		НСтр("ru = 'Время (план)'"),
		Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 0, ДопустимыйЗнак.Любой)));
	Реквизит.Порядок = 7;
	Реквизит.Подсказка = НСтр("ru = 'Время, запланированное для пункта программы'");
	ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
	
	Реквизит = ОписаниеРеквизита(
		"Программа.ВремяФакт",
		НСтр("ru = 'Время (факт)'"),
		Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 0, ДопустимыйЗнак.Любой)));
	Реквизит.Порядок = 8;
	Реквизит.Подсказка = НСтр("ru = 'Время, затраченное на пункт программы'");
	ДобавитьРеквизитТаблицы(Реквизиты, Реквизит);
	
КонецПроцедуры

Процедура ЕстьРеквизит(ИмяРеквизита, СписокРеквизитов, ПредставлениеРеквизитаДО, СписокОшибок)
	
	ЕстьРеквизит = Ложь;
	Для Каждого Реквизит Из СписокРеквизитов Цикл
		Если Реквизит.Имя = ИмяРеквизита Тогда
			ЕстьРеквизит = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьРеквизит = Ложь Тогда
		СписокОшибок.Добавить(СтрШаблон(
			НСтр("ru = 'Ошибка в правиле заполнения %1
				|выбран вариант заполнения из несуществующего реквизита ""%2""'"),
			ПредставлениеРеквизитаДО,
			ИмяРеквизита));
	КонецЕсли;
	
КонецПроцедуры

Функция ЕстьТаблица(ИмяТаблицы, СписокТаблиц, ПредставлениеРеквизитаДО, СписокОшибок, Таблица = Неопределено)
	
	ЕстьТаблица = Ложь;
	Для Каждого Таблица Из СписокТаблиц Цикл
		Если Таблица.Имя = ИмяТаблицы Тогда
			ЕстьТаблица = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьТаблица = Ложь Тогда
		СписокОшибок.Добавить(СтрШаблон(
			НСтр("ru = 'Ошибка в правиле заполнения %1
				|выбран вариант заполнения из несуществующей таблицы ""%2""'"),
			ПредставлениеРеквизитаДО,
			ИмяТаблицы));
	КонецЕсли;
	
	Возврат ЕстьТаблица;
	
КонецФункции

// Конструктор структуры, описывающей реквизит объекта ДО.
//
// Параметры:
//   Имя - Строка - наименование реквизита, к которому будут обращаться алгоритмы. Это может быть как реальный
//     реквизит объекта ДО, так и реквизит, формируемый программно, например, Плательщик и Получатель в Заявке на оплату.
//   Представление - Строка - представление реквизита.
//   Тип - ОписаниеТипов, Неопределено - содержит описание типов реквизита.
//
// Возвращаемое значение:
//   Структура:
//     * Имя - Строка - представление реквизита.
//     * Представление - Строка - представление реквизита.
//     * Тип - ОписаниеТипов - содержит описание типов реквизита.
//     * Подсказка - Строка - подсказка с описанием реквизита.
//     * Владелец - Строка - передает путь к данным для формирования структуры связей параметров выбора. Например, для
//         контактного лица, владелец это "Контрагент".
//     * Порядок - Число - порядок вывода реквизита в интерфейс.
//     * ИмяПоляПроверкиДоступностиПоСостоянию - Строка - содержит ИмяПоляКоманды из макета
//         Справочники.НастройкиДоступностиПоСостоянию.НастройкиПолейКомандДокументПредприятия.
//
Функция ОписаниеРеквизита(Имя, Представление, Тип = Неопределено)
	
	ОписаниеРеквизита = Новый Структура;
	ОписаниеРеквизита.Вставить("Имя", Имя);
	ОписаниеРеквизита.Вставить("Представление", ?(ЗначениеЗаполнено(Представление), Представление, Имя));
	Если ТипЗнч(Тип) = Тип("ОписаниеТипов") Тогда
		ОписаниеРеквизита.Вставить("Тип", Тип);
	Иначе
		ОписаниеРеквизита.Вставить("Тип", Новый ОписаниеТипов);
	КонецЕсли;
	ОписаниеРеквизита.Вставить("Подсказка", "");
	ОписаниеРеквизита.Вставить("Владелец", "");
	ОписаниеРеквизита.Вставить("Порядок", 1);
	ОписаниеРеквизита.Вставить("ИмяПоляПроверкиДоступностиПоСостоянию", "");
	
	Возврат ОписаниеРеквизита;
	
КонецФункции

Функция ПредставлениеРеквизитаДО(РеквизитыОбъектаДО, Правило)
	
	РеквизитДО = РеквизитыОбъектаДО.Найти(Правило.ИмяРеквизитаОбъектаДО, "Имя");
	ТаблицаДО = РеквизитыОбъектаДО.Найти(Правило.Таблица, "Имя");
	ПредставлениеРеквизитаДО = "";
	ПредставлениеТипаРеквизитаДО = "";
	
	Если Правило.ЭтоТаблица Тогда
		ПредставлениеТипаРеквизитаДО = НСтр("ru = 'таблицы'");
		
	ИначеЕсли Правило.ЭтоДополнительныйРеквизитДО Тогда
		ПредставлениеТипаРеквизитаДО = НСтр("ru = 'доп. реквизита'");
		
	ИначеЕсли Не ЗначениеЗаполнено(Правило.Таблица) Тогда
		ПредставлениеТипаРеквизитаДО = НСтр("ru = 'реквизита'");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Правило.Таблица) Тогда
		ПредставлениеРеквизитаДО = СтрШаблон(НСтр("ru = 'реквизита ""%1"" таблицы ""%2""'"),
			?(РеквизитДО = Неопределено, Правило.ИмяРеквизитаОбъектаДО, РеквизитДО.Представление),
			?(ТаблицаДО = Неопределено, Правило.Таблица, ТаблицаДО.Представление));
		
	Иначе
		ПредставлениеРеквизитаДО = СтрШаблон("%1 ""%2""",
			ПредставлениеТипаРеквизитаДО,
			?(РеквизитДО = Неопределено, Правило.ИмяРеквизитаОбъектаДО, РеквизитДО.Представление));
		
	КонецЕсли;
	
	Возврат ПредставлениеРеквизитаДО;
	
КонецФункции

Функция ПривестиЗначениеРеквизитаИС(СписокТипов)
	
	ЗначениеРеквизита = Неопределено;
	Если ТипЗнч(СписокТипов) = Тип("Массив")
			И СписокТипов.Количество() > 0 Тогда
		ПервыйТип = СписокТипов[0];
		
		Если ПервыйТип = "Число" Тогда
			ЗначениеРеквизита = 0;
			
		ИначеЕсли ПервыйТип = "Дата" Тогда
			ЗначениеРеквизита = Дата(1, 1, 1);
			
		ИначеЕсли ПервыйТип = "Булево" Тогда
			ЗначениеРеквизита = Ложь;
			
		ИначеЕсли ПервыйТип = "Строка" Тогда
			ЗначениеРеквизита = "";
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеРеквизита;
	
КонецФункции

Процедура ПроверитьСтрокуПравилаЗаполненияРеквизитовДО(ПравилоЗагрузки, Правило, ПредставлениеРеквизитаДО,
		СписокОшибок, РеквизитыОбъектаИС, ТабличныеЧастиОбъектаИС)
	
	Если Правило.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке Тогда
		
		ТаблицаИсточник = "";
		Родитель = ПравилоЗагрузки.ПравилаЗаполненияРеквизитовДО.НайтиСтроки(
			Новый Структура("ИмяРеквизитаОбъектаДО, ЭтоТаблица", Правило.Таблица, Истина));
		Если Родитель.Количество() = 1 Тогда
			ТаблицаИсточник = Родитель[0].ИмяРеквизитаОбъектаИС;
		КонецЕсли;
		
		Попытка
			ПроверитьВыражениеПравилаЗагрузки(
				Правило.ВычисляемоеВыражение,
				Правило.МестоВыполненияВыражения,
				ПравилоЗагрузки.УзелИнтегрированнойСистемы,
				ПравилоЗагрузки.ТипОбъектаДО,
				ПравилоЗагрузки.ТипОбъектаИС,
				ТаблицаИсточник);
		Исключение
			ТекстИсключения = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			СписокОшибок.Добавить(СтрШаблон(
				НСтр("ru = 'Ошибка в правиле заполнения %1:
					|Не удалось выполнить выражение на встроенном языке по причине:
					|""%2""'"),
				ПредставлениеРеквизитаДО,
				ТекстИсключения));
		КонецПопытки;
		
	ИначеЕсли Правило.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта Тогда
		
		РазделеннаяСтрока = СтрРазделить(Правило.ИмяРеквизитаОбъектаИС, ".", Ложь);
		Если РазделеннаяСтрока.Количество() = 1 Тогда // "свойство"
			ИмяТаблицы = "";
			ИмяРеквизита = Правило.ИмяРеквизитаОбъектаИС;
			
		ИначеЕсли РазделеннаяСтрока.Количество() = 2 Тогда // "список.свойство"
			ИмяТаблицы = РазделеннаяСтрока[0];
			ИмяРеквизита = РазделеннаяСтрока[1];
			
		Иначе
			СписокОшибок.Добавить(СтрШаблон(
				НСтр("ru = 'Ошибка в правиле заполнения %1
					|Указано недопустимое имя реквизита-источника данных заполнения: %2'"),
				ПредставлениеРеквизитаДО,
				Правило.ИмяРеквизитаОбъектаИС));
			Возврат;
			
		КонецЕсли;
		
		Если Правило.ЭтоТаблица Тогда
			// Это таблица.
			ЕстьТаблица(ИмяРеквизита, ТабличныеЧастиОбъектаИС, ПредставлениеРеквизитаДО, СписокОшибок);
			
		ИначеЕсли ИмяТаблицы <> "" Тогда
			// Это реквизит таблицы.
			Таблица = Неопределено;
			Если Не ЕстьТаблица(ИмяТаблицы, ТабличныеЧастиОбъектаИС, ПредставлениеРеквизитаДО, СписокОшибок, Таблица) Тогда
				Возврат;
			КонецЕсли;
			
			ЕстьРеквизит(ИмяРеквизита, Таблица.Строки, ПредставлениеРеквизитаДО, СписокОшибок);
			
		Иначе
			// Это реквизит.
			ЕстьРеквизит(ИмяРеквизита, РеквизитыОбъектаИС, ПредставлениеРеквизитаДО, СписокОшибок);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПутьКДаннымРеквизита(Реквизит)
	
	Если Реквизит.Таблица <> "" Тогда
		Возврат Реквизит.Таблица + "." + Реквизит.Имя;
	Иначе
		Возврат Реквизит.Имя;
	КонецЕсли;
	
КонецФункции

Функция РеквизитИспользуетсяВИнтеграции(ИмяРеквизита)
	
	Возврат ИмяРеквизита = "Наименование"
		Или ИмяРеквизита = "Владелец"
		Или ИмяРеквизита = "Номер"
		Или ИмяРеквизита = "Дата"
		Или ИмяРеквизита = "ПометкаУдаления";
	
КонецФункции

Функция СтруктураПоискаРеквизита(ПутьКДанным)
	
	РазделеннаяСтрока = СтрРазделить(ПутьКДанным, ".");
	Если РазделеннаяСтрока.Количество() = 1 Тогда
		СтруктураПоиска = Новый Структура("Таблица, Имя", "", РазделеннаяСтрока[0]);
	Иначе
		СтруктураПоиска = Новый Структура("Таблица, Имя", РазделеннаяСтрока[0], РазделеннаяСтрока[1]);
	КонецЕсли;
	
	Возврат СтруктураПоиска;
	
КонецФункции

Функция ТипБулево()
	
	Возврат Новый ОписаниеТипов("Булево");
	
КонецФункции

Функция ТипДата()
	
	Возврат Новый ОписаниеТипов("Дата");
	
КонецФункции

Функция ТипСотрудники()
	
	Возврат Новый ОписаниеТипов("СправочникСсылка.Сотрудники");
	
КонецФункции

Функция ТипСтрока()
	
	Возврат Новый ОписаниеТипов("Строка");
	
КонецФункции

Функция ТипЧисло()
	
	Возврат Новый ОписаниеТипов("Число");
	
КонецФункции

Процедура УдалитьЛишниеОбщиеРеквизиты(Реквизиты, ДляВыражения)
	
	КолВоСтрок = Реквизиты.Количество();
	Для НомерСтроки = 1 По КолВоСтрок Цикл
		
		СтрокаСКонца = Реквизиты[КолВоСтрок - НомерСтроки];
		
		Если Не ДляВыражения
				И((СтрокаСКонца.Имя = "ДополнительныеРеквизиты" И СтрокаСКонца.ЭтоТаблица)
					Или СтрокаСКонца.Таблица = "ДополнительныеРеквизиты"
					
					Или (СтрокаСКонца.Имя = "КонтактнаяИнформация" И СтрокаСКонца.ЭтоТаблица)
					Или СтрокаСКонца.Таблица = "КонтактнаяИнформация") Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если СтрНачинаетсяС(СтрокаСКонца.Имя, "Удалить")
				Или СтрНайти(СтрокаСКонца.Представление, НСтр("ru = '(Удалить)'")) > 0 Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если СтрокаСКонца.Имя = "УзелОбработки"
				Или СтрокаСКонца.Имя = "ПодписанЭП"
				Или СтрокаСКонца.Имя = "ИсточникДанных" Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьЛишниеРеквизитыДокумента(Реквизиты, ВидДокументаОбъект, Настройки)
	
	КолВоСтрок = Реквизиты.Количество();
	Для НомерСтроки = 1 По КолВоСтрок Цикл
		
		СтрокаСКонца = Реквизиты[КолВоСтрок - НомерСтроки];
		
		// Удаляем всегда
		
		Если СтрокаСКонца.Таблица = ""
				И (СтрокаСКонца.Имя = "Наименование"
					
					Или СтрокаСКонца.Имя = "Контрагент"
					Или СтрокаСКонца.Имя = "КонтактноеЛицо"
					Или СтрокаСКонца.Имя = "ПодписалОтКонтрагента"
					
					Или СтрокаСКонца.Имя = "СуммаНДСПрописью"
					Или СтрокаСКонца.Имя = "СуммаПрописью"
					
					Или СтрокаСКонца.Имя = "Создал"
					Или СтрокаСКонца.Имя = "Зарегистрировал"
					Или СтрокаСКонца.Имя = "Ответственный"
					Или СтрокаСКонца.Имя = "ОтветственныйЗаХранение"
					Или СтрокаСКонца.Имя = "Подготовил"
					
					Или СтрокаСКонца.Имя = "Подписал"
					Или СтрокаСКонца.Имя = "Утвердил"
					Или СтрокаСКонца.Имя = "ПодписанУтвержден"
					
					Или СтрокаСКонца.Имя = "Шаблон"
					
					Или СтрокаСКонца.Имя = "ЧисловойНомер") Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если ((СтрокаСКонца.Имя = "Контрагенты" И СтрокаСКонца.ЭтоТаблица)
				Или СтрокаСКонца.Таблица = "Контрагенты") Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если ((СтрокаСКонца.Имя = "Стороны" И СтрокаСКонца.ЭтоТаблица)
				Или СтрокаСКонца.Таблица = "Стороны") Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		// Удаляем в зависимости от настроек Документооборота
		
		Если Не Настройки.ИспользоватьГрифыДоступа И СтрокаСКонца.Имя = "ГрифДоступа" Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если Не Настройки.ИспользоватьВопросыДеятельности И СтрокаСКонца.Имя = "ВопросДеятельности" Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если Не Настройки.ИспользоватьУчетПоОрганизациям И СтрокаСКонца.Имя = "Организация" Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если Не Настройки.ИспользоватьЭлектронныеПодписи И СтрокаСКонца.Имя = "ПодписанЭП" Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если Не Настройки.ИспользоватьНоменклатуруДел И СтрокаСКонца.Имя = "Дело" Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если Не Настройки.ИспользоватьМестаХранения И СтрокаСКонца.Имя = "МестоХранения" Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если Не Настройки.ИспользоватьСоставДокументов
				И (СтрокаСКонца.Имя = "КоличествоЛистов"
					Или СтрокаСКонца.Имя = "КоличествоПриложений"
					Или СтрокаСКонца.Имя = "КоличествоЭкземпляров"
					Или СтрокаСКонца.Имя = "ЛистовВПриложениях") Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если Не Настройки.ИспользоватьУчетДоступаКПерсональнымДанным
				И (СтрокаСКонца.Имя = "СубъектыПерсональныхДанных"
					Или СтрокаСКонца.Таблица = "СубъектыПерсональныхДанных") Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если Не Настройки.ВестиУчетПоПроектам И СтрокаСКонца.Имя = "Проект" Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если Не Настройки.ИспользоватьПапкиДокументов И СтрокаСКонца.Имя = "Папка" Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		// Удаляем в зависимости от вида документа
		
		Если ВидДокументаОбъект <> Неопределено Тогда
			
			Если Не ВидДокументаОбъект.ВестиУчетПоОрганизациям
					И СтрокаСКонца.Имя = "Организация" Тогда
				Реквизиты.Удалить(СтрокаСКонца);
				Продолжить;
			КонецЕсли;
			
			Если Не ВидДокументаОбъект.ВестиУчетПоАдресатам
					И СтрокаСКонца.Имя = "Адресат" Тогда
				Реквизиты.Удалить(СтрокаСКонца);
				Продолжить;
			КонецЕсли;
			
			Если Не ВидДокументаОбъект.ВключенУчетПоНоменклатуреДел
					И СтрокаСКонца.Имя = "НоменклатураДел" Тогда
				Реквизиты.Удалить(СтрокаСКонца);
				Продолжить;
			КонецЕсли;
			
			Если Не ВидДокументаОбъект.УчитыватьНедействующиеДокументы
					И СтрокаСКонца.Имя = "НеДействует" Тогда
				Реквизиты.Удалить(СтрокаСКонца);
				Продолжить;
			КонецЕсли;
			
			Если Не ВидДокументаОбъект.УчитыватьСуммуДокумента
					И (СтрокаСКонца.Имя = "Валюта"
						Или СтрокаСКонца.Имя = "Сумма"
						Или СтрокаСКонца.Имя = "СуммаНДС") Тогда
				Реквизиты.Удалить(СтрокаСКонца);
				Продолжить;
			КонецЕсли;
			
			Если Не ВидДокументаОбъект.УчитыватьСрокДействия
					И (СтрокаСКонца.Имя = "Бессрочный"
						Или СтрокаСКонца.Имя = "ДатаНачалаДействия"
						Или СтрокаСКонца.Имя = "ДатаОкончанияДействия"
						Или СтрокаСКонца.Имя = "ПорядокПродления") Тогда
				Реквизиты.Удалить(СтрокаСКонца);
				Продолжить;
			КонецЕсли;
			
			Если Не ВидДокументаОбъект.ИспользоватьСрокИсполнения
					И СтрокаСКонца.Имя = "СрокИсполнения" Тогда
				Реквизиты.Удалить(СтрокаСКонца);
				Продолжить;
			КонецЕсли;
			
			Если Не ВидДокументаОбъект.ИспользоватьВажность
					И СтрокаСКонца.Имя = "Важность" Тогда
				Реквизиты.Удалить(СтрокаСКонца);
				Продолжить;
			КонецЕсли;
			
			Если Не ВидДокументаОбъект.ИспользоватьВременныеНомера
					И СтрокаСКонца.Имя = "ВременныйНомер" Тогда
				Реквизиты.Удалить(СтрокаСКонца);
				Продолжить;
			КонецЕсли;

			Если ВидДокументаОбъект.ЯвляетсяЗаявкойНаОплату
					И (СтрокаСКонца.Имя = "Организация"
						Или СтрокаСКонца.Имя = "Получатель") Тогда
				Реквизиты.Удалить(СтрокаСКонца);
				Продолжить;
			КонецЕсли;
			
			Если Не ВидДокументаОбъект.ВестиУчетТоваровИУслуг
					И ((СтрокаСКонца.Имя = "Товары" И СтрокаСКонца.ЭтоТаблица)
						Или СтрокаСКонца.Таблица = "Товары") Тогда
				Реквизиты.Удалить(СтрокаСКонца);
				Продолжить;
			КонецЕсли;
			
			Если (ВидДокументаОбъект.ФормаДокумента <> Перечисления.ВариантыФормДокументов.БумажнаяИлиЭлектронная)
					И СтрокаСКонца.Имя = "ФормаДокумента" Тогда
				Реквизиты.Удалить(СтрокаСКонца);
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьЛишниеРеквизитыКонтрагента(Реквизиты, Настройки)
	
	КолВоСтрок = Реквизиты.Количество();
	Для НомерСтроки = 1 По КолВоСтрок Цикл
		
		СтрокаСКонца = Реквизиты[КолВоСтрок - НомерСтроки];
		
		// Удаляем всегда
		
		Если СтрокаСКонца.Таблица = ""
				И (СтрокаСКонца.Имя = "ОсновнойБанковскийСчет"
					Или СтрокаСКонца.Имя = "Ответственный") Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьЛишниеРеквизитыМероприятия(Реквизиты, Настройки)
	
	КолВоСтрок = Реквизиты.Количество();
	Для НомерСтроки = 1 По КолВоСтрок Цикл
		
		СтрокаСКонца = Реквизиты[КолВоСтрок - НомерСтроки];
		
		// Удаляем всегда
		
		Если СтрокаСКонца.Таблица = ""
				И (СтрокаСКонца.Имя = "Куратор"
					Или СтрокаСКонца.Имя = "Организатор"
					Или СтрокаСКонца.Имя = "Подготовил"
					Или СтрокаСКонца.Имя = "Председатель"
					Или СтрокаСКонца.Имя = "Секретарь") Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		Если ((СтрокаСКонца.Имя = "Программа" И СтрокаСКонца.ЭтоТаблица)
				Или СтрокаСКонца.Таблица = "Программа") Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
		// Удаляем в зависимости от настроек Документооборота
		
		Если Не Настройки.ИспользоватьПапкиМероприятий И СтрокаСКонца.Имя = "Папка" Тогда
			Реквизиты.Удалить(СтрокаСКонца);
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли