#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ИмяРеквизитаОбъектаДО", ИмяРеквизитаОбъектаДО);
	Параметры.Свойство("ПредставлениеРеквизитаОбъектаДО", ПредставлениеРеквизитаОбъектаДО);
	Параметры.Свойство("ОбновлятьРодитель", ОбновлятьРодитель);
	
	Параметры.Свойство("ИнтегрированнаяСистема", ИнтегрированнаяСистема);
	Параметры.Свойство("ПредставлениеИС", ПредставлениеИС);
	Параметры.Свойство("ИмяМакета", ИмяМакета);
	Параметры.Свойство("ПредставлениеОбъектаИС", ПредставлениеОбъектаИС);
	Параметры.Свойство("ПолноеИмяОбъектаИС", ПолноеИмяОбъектаИС);
	Параметры.Свойство("ПолноеИмяОбъектаДО", ПолноеИмяОбъектаДО);
	Параметры.Свойство("ВидДокумента", ВидДокумента);
	Параметры.Свойство("ЭтоПолноправныйПользователь", ЭтоПолноправныйПользователь);
	
	Заголовок = СтрШаблон(НСтр("ru = 'Заполнение таблицы %1'"), ПредставлениеРеквизитаОбъектаДО);
	
	ДобавленныеРеквизиты = Новый Массив;
	
	ТипЗначениеРеквизитаДО = Новый ОписаниеТипов("Булево, Строка, Дата, Число");
	ТипЗначениеРеквизитаДО = Новый ОписаниеТипов(ТипЗначениеРеквизитаДО, Справочники.ТипВсеСсылки().Типы());
	ТипЗначениеРеквизитаДО = Новый ОписаниеТипов(ТипЗначениеРеквизитаДО, Документы.ТипВсеСсылки().Типы());
	ТипЗначениеРеквизитаДО = Новый ОписаниеТипов(ТипЗначениеРеквизитаДО, ПланыВидовХарактеристик.ТипВсеСсылки().Типы());
	ТипЗначениеРеквизитаДО = Новый ОписаниеТипов(ТипЗначениеРеквизитаДО, ПланыОбмена.ТипВсеСсылки().Типы());
	ТипЗначениеРеквизитаДО = Новый ОписаниеТипов(ТипЗначениеРеквизитаДО, ПланыВидовРасчета.ТипВсеСсылки().Типы());
	ТипЗначениеРеквизитаДО = Новый ОписаниеТипов(ТипЗначениеРеквизитаДО, ПланыСчетов.ТипВсеСсылки().Типы());
	ТипЗначениеРеквизитаДО = Новый ОписаниеТипов(ТипЗначениеРеквизитаДО, Перечисления.ТипВсеСсылки().Типы());
	ТипЗначениеРеквизитаДО = Новый ОписаниеТипов(ТипЗначениеРеквизитаДО, БизнесПроцессы.ТипВсеСсылки().Типы());
	ТипЗначениеРеквизитаДО = Новый ОписаниеТипов(ТипЗначениеРеквизитаДО, Задачи.ТипВсеСсылки().Типы());
	
	МассивРеквизитовТаблицыОбъектаДО = Справочники.ПравилаЗагрузкиДанныхВДО.РеквизитыТаблицыОбъектаДО(
		ПолноеИмяОбъектаДО,
		ИмяРеквизитаОбъектаДО,
		ВидДокумента);
	МассивРеквизитовХранилищаПравил = МассивРеквизитовХранилищаПравил();
	Для Каждого Элемент Из МассивРеквизитовТаблицыОбъектаДО Цикл
		Для Каждого РеквизитХранилищаПравил Из МассивРеквизитовХранилищаПравил Цикл
			НовыйРеквизит = Новый РеквизитФормы(
				СтрШаблон(РеквизитХранилищаПравил.ШаблонИмени, Элемент.Имя),
				РеквизитХранилищаПравил.ТипРеквизита,
				"ТаблицаОбъектаДО",
				СтрШаблон(РеквизитХранилищаПравил.ШаблонПредставления, Элемент.Представление),
				Ложь);
			ДобавленныеРеквизиты.Добавить(НовыйРеквизит);
		КонецЦикла;
		
		НоваяСтрока = РеквизитыТаблицы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
		НоваяСтрока.СвязиПараметровВыбора.ЗагрузитьЗначения(Элемент.СвязиПараметровВыбора);
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавленныеРеквизиты);
	
	Для Каждого Реквизит Из РеквизитыТаблицы Цикл
		ГруппаКолонок = Элементы.Добавить(
			СтрШаблон("%1_ГруппаКолонок", Реквизит.Имя),
			Тип("ГруппаФормы"),
			Элементы.ТаблицаОбъектаДО);
		ГруппаКолонок.Вид = ВидГруппыФормы.ГруппаКолонок;
		ГруппаКолонок.Заголовок = Реквизит.Представление;
		ГруппаКолонок.Группировка = ГруппировкаКолонок.ВЯчейке;
		ГруппаКолонок.ОтображатьВШапке = Истина;
		ГруппаКолонок.ТолькоПросмотр = Истина;
		ГруппаКолонок.Подсказка = Реквизит.Подсказка;
		
		Для Каждого РеквизитХранилищаПравил Из МассивРеквизитовХранилищаПравил Цикл
			Если РеквизитХранилищаПравил.ВидЭлементаФормы = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ПолеФормы = Элементы.Добавить(
				СтрШаблон(РеквизитХранилищаПравил.ШаблонИмени, Реквизит.Имя),
				Тип("ПолеФормы"),
				ГруппаКолонок);
			ПолеФормы.Вид = ВидПоляФормы[РеквизитХранилищаПравил.ВидЭлементаФормы];
			Если РеквизитХранилищаПравил.КартинкаЗначений <> Неопределено Тогда
				ПолеФормы.КартинкаЗначений = РеквизитХранилищаПравил.КартинкаЗначений;
			КонецЕсли;
			ПолеФормы.ПутьКДанным = СтрШаблон("ТаблицаОбъектаДО." + РеквизитХранилищаПравил.ШаблонИмени, Реквизит.Имя);
			ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			ПолеФормы.ОтображатьВШапке = Ложь;
			ПолеФормы.ТолькоПросмотр = Истина;
			ПолеФормы.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
		КонецЦикла;
		
		Если Реквизит.ОбязательноеЗаполнение Тогда
			ЭлементОформления = УсловноеОформление.Элементы.Добавить();
			
			ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(СтрШаблон("%1_ПредставлениеРеквизитаОбъектаИС", Реквизит.Имя));
			ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(СтрШаблон("%1_ЗначениеРеквизитаДО", Реквизит.Имя));
			ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(СтрШаблон("%1_ВычисляемоеВыражение", Реквизит.Имя));
			
			ГруппаИ = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
			
			ОтборЭлемента = ГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(
				СтрШаблон("ТаблицаОбъектаДО.%1_ИмяРеквизитаОбъектаИС", Реквизит.Имя));
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = "";
			
			ОтборЭлемента = ГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(
				СтрШаблон("ТаблицаОбъектаДО.%1_ЗначениеРеквизитаДО", Реквизит.Имя));
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = Неопределено;
			
			ОтборЭлемента = ГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(
				СтрШаблон("ТаблицаОбъектаДО.%1_Вариант", Реквизит.Имя));
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
			ОтборЭлемента.ПравоеЗначение = Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке;
			
			ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
		КонецЕсли;
	КонецЦикла;
	
	Если ТипЗнч(Параметры.ПравилаЗаполненияСтрокТаблицы) = Тип("ХранилищеЗначения") Тогда
		ТекущиеПравила = Параметры.ПравилаЗаполненияСтрокТаблицы.Получить();
		Если ТипЗнч(ТекущиеПравила) = Тип("ТаблицаЗначений") Тогда
			Для Каждого Строка Из ТекущиеПравила Цикл
				НоваяСтрока = ТаблицаОбъектаДО.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				
				Для Каждого Элемент Из МассивРеквизитовТаблицыОбъектаДО Цикл
					ВариантРеквизита = НоваяСтрока[СтрШаблон("%1_Вариант", Элемент.Имя)];
					ВычисляемоеВыражение = НоваяСтрока[СтрШаблон("%1_ВычисляемоеВыражение", Элемент.Имя)];
					Если ВариантРеквизита = ВариантРеквизит() Тогда
						НоваяСтрока[СтрШаблон("%1_Картинка", Элемент.Имя)] = 1;
						НоваяСтрока[СтрШаблон("%1_ПредставлениеРеквизитаОбъектаИС", Элемент.Имя)] =
							РаботаСИнтегрированнымиСистемами.ПредставлениеРеквизитаОбъектаИнтегрированнойСистемы(
								?(ЗначениеЗаполнено(ИнтегрированнаяСистема), ИнтегрированнаяСистема, ИмяМакета),
								ПолноеИмяОбъектаИС,
								НоваяСтрока[СтрШаблон("%1_ИмяРеквизитаОбъектаИС", Элемент.Имя)]);
					ИначеЕсли ВариантРеквизита = ВариантЗначение() Тогда
						НоваяСтрока[СтрШаблон("%1_Картинка", Элемент.Имя)] = 2;
					ИначеЕсли ВариантРеквизита = ВариантВыражение() И ЗначениеЗаполнено(ВычисляемоеВыражение) Тогда
						НоваяСтрока[СтрШаблон("%1_Картинка", Элемент.Имя)] = 3;
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаОбъектаДО

&НаКлиенте
Процедура ТаблицаОбъектаДОПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРеквизита = СтрРазделить(Элемент.ТекущийЭлемент.Имя, "_")[0];
	
	ПараметрыОповещения = Новый Структура("ТекущиеДанные, ИмяРеквизита", ТекущиеДанные, ИмяРеквизита);
	Оповещение = Новый ОписаниеОповещения(
		"ТаблицаОбъектаДОПередУдалениемЗавершение", ЭтотОбъект, ПараметрыОповещения);
	
	ТекстВопроса = НСтр("ru = 'Очистить правило заполнения?'");
	ОбщегоНазначенияДокументооборотКлиент.ПоказатьВопросДаНет(Оповещение, ТекстВопроса,,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОбъектаДОПередУдалениемЗавершение(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = ПараметрыОповещения.ТекущиеДанные;
	ИмяРеквизита = ПараметрыОповещения.ИмяРеквизита;
	
	Если ЗначениеЗаполнено(ТекущиеДанные[СтрШаблон("%1_Вариант", ИмяРеквизита)]) Тогда
		Для Каждого Реквизит Из МассивРеквизитовХранилищаПравил() Цикл
			ТекущиеДанные[СтрШаблон(Реквизит.ШаблонИмени, ИмяРеквизита)] = Неопределено;
		КонецЦикла;
	Иначе
		ТаблицаОбъектаДО.Удалить(ТаблицаОбъектаДО.Индекс(ТекущиеДанные));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОбъектаДОВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРеквизита = СтрРазделить(Поле.Имя, "_")[0];
	ОписаниеРеквизита = РеквизитыТаблицы.НайтиСтроки(Новый Структура("Имя", ИмяРеквизита))[0];
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИмяРеквизитаОбъектаДО", ОписаниеРеквизита.Имя);
	ПараметрыФормы.Вставить("ПредставлениеРеквизитаОбъектаДО", ОписаниеРеквизита.Представление);
	ПараметрыФормы.Вставить("ТипРеквизитаОбъектаДО", ОписаниеРеквизита.Тип);
	Если ЗначениеЗаполнено(ОписаниеРеквизита.Подсказка)
			И ОписаниеРеквизита.Подсказка <> ОписаниеРеквизита.Представление Тогда
		ПараметрыФормы.Вставить("Подсказка", ОписаниеРеквизита.Подсказка);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("Вариант", ТекущиеДанные[СтрШаблон("%1_Вариант", ИмяРеквизита)]);
	ПараметрыФормы.Вставить("ВычисляемоеВыражение", ТекущиеДанные[СтрШаблон("%1_ВычисляемоеВыражение", ИмяРеквизита)]);
	ПараметрыФормы.Вставить("МестоВыполненияВыражения",
		ТекущиеДанные[СтрШаблон("%1_МестоВыполненияВыражения", ИмяРеквизита)]);
	ПараметрыФормы.Вставить("ЗначениеРеквизитаДО", ТекущиеДанные[СтрШаблон("%1_ЗначениеРеквизитаДО", ИмяРеквизита)]);
	ПараметрыФормы.Вставить("ИмяРеквизитаОбъектаИС", ТекущиеДанные[СтрШаблон("%1_ИмяРеквизитаОбъектаИС", ИмяРеквизита)]);
	ПараметрыФормы.Вставить("ПредставлениеРеквизитаОбъектаИС",
		ТекущиеДанные[СтрШаблон("%1_ПредставлениеРеквизитаОбъектаИС", ИмяРеквизита)]);
	ПараметрыФормы.Вставить("Обновлять", ОбновлятьРодитель);
	ПараметрыФормы.Вставить("ВозможноЗаполнениеИзШаблона", Ложь);
	ПараметрыФормы.Вставить("ШаблонЗначение", Неопределено);
	ПараметрыФормы.Вставить("ШаблонЗапрещаетИзменение", Ложь);
	ПараметрыФормы.Вставить("Таблица", "");
	ПараметрыФормы.Вставить("Зависимый", Истина);
	ПараметрыФормы.Вставить("ОбновлятьРодитель", ОбновлятьРодитель);
	
	ПараметрыФормы.Вставить("ИнтегрированнаяСистема", ИнтегрированнаяСистема);
	ПараметрыФормы.Вставить("ПредставлениеИС", ПредставлениеИС);
	ПараметрыФормы.Вставить("ИмяМакета", ИмяМакета);
	ПараметрыФормы.Вставить("ПредставлениеОбъектаИС", ПредставлениеОбъектаИС);
	ПараметрыФормы.Вставить("ПолноеИмяОбъектаДО", ПолноеИмяОбъектаДО);
	ПараметрыФормы.Вставить("ПолноеИмяОбъектаИС", ПолноеИмяОбъектаИС);
	ПараметрыФормы.Вставить("ВидДокумента", ВидДокумента);
	
	ПараметрыОтбораЗначения = Новый Структура();
	Для Каждого Элемент Из ОписаниеРеквизита.СвязиПараметровВыбора Цикл
		МассивПуть = СтрРазделить(Элемент.Значение.ПутьКДанным, ".");
		Если МассивПуть.Количество() <> 2 Или МассивПуть[0] <> ИмяРеквизитаОбъектаДО Тогда
			Продолжить;
		КонецЕсли;
		
		Отбор = "Владелец";
		МассивИмяОтбора = СтрРазделить(Элемент.Значение.Имя, ".");
		Если МассивИмяОтбора.Количество() = 2 И МассивИмяОтбора[0] = "Отбор" Тогда
			Отбор = МассивИмяОтбора[1];
		КонецЕсли;
		
		ЗначениеВладельца = ТекущиеДанные[СтрШаблон("%1_ЗначениеРеквизитаДО", МассивПуть[1])];
		Если ЗначениеЗаполнено(ЗначениеВладельца) Тогда
			ПараметрыОтбораЗначения.Вставить(Отбор, ЗначениеВладельца);
		КонецЕсли;
	КонецЦикла;
	ПараметрыФормы.Вставить("ПараметрыОтбораЗначения", ПараметрыОтбораЗначения);
	
	ПараметрыОповещения = Новый Структура("ТекущиеДанные, ОписаниеРеквизита", ТекущиеДанные, ОписаниеРеквизита);
	Оповещение = Новый ОписаниеОповещения(
		"ТаблицаОбъектаДОПередНачаломИзмененияЗавершение",
		ЭтотОбъект,
		ПараметрыОповещения);
	
	ПараметрыФормы.Вставить("ЭтоПолноправныйПользователь", ЭтоПолноправныйПользователь);
	
	ОткрытьФорму(
		"Справочник.ПравилаЗагрузкиДанныхВДО.Форма.ФормаПравила",
		ПараметрыФормы,
		ЭтотОбъект,,,,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Для Каждого Реквизит Из РеквизитыТаблицы Цикл
		Для Каждого Строка Из ТаблицаОбъектаДО Цикл
			Строка[СтрШаблон("%1_ИмяРеквизитаОбъектаДО", Реквизит.Имя)] = Реквизит.Имя;
		КонецЦикла;
	КонецЦикла;
	
	Отказ = Ложь;
	
	// Проверка заполнения обязательных реквизитов.
	Для Каждого Реквизит Из РеквизитыТаблицы Цикл
		Если Не Реквизит.ОбязательноеЗаполнение Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого Строка Из ТаблицаОбъектаДО Цикл
			Если Не ПравилоЗаполнено(Строка, Реквизит) Тогда
				Текст = СтрШаблон(
					НСтр("ru = 'Не установлено правило заполнения обязательного реквизита ""%1""'"),
					Реквизит.Представление);
				СообщитьОбОшибке(Текст, Строка, Реквизит.Имя, Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если ПолноеИмяОбъектаДО = "Справочник.ДокументыПредприятия"
			И ИмяРеквизитаОбъектаДО = "Стороны"
			И ТаблицаОбъектаДО.Количество() > 0
			И ТаблицаОбъектаДО[0].Сторона_Вариант = ВариантЗначение() Тогда
		ПерваяИзСторонОрганизация = Ложь;
		Если РаботаСПодписямиДокументовКлиентСервер.ЭтоОрганизация(ТаблицаОбъектаДО[0].Сторона_ЗначениеРеквизитаДО)
				И ЗначениеЗаполнено(ТаблицаОбъектаДО[0].Сторона_ЗначениеРеквизитаДО) Тогда
			ПерваяИзСторонОрганизация = Истина;
		КонецЕсли;
		Если Не ПерваяИзСторонОрганизация Тогда
			Текст = НСтр("ru = 'В таблице сторон в первой строке должна присутствовать ""Основная организация""'");
			СообщитьОбОшибке(Текст, ТаблицаОбъектаДО[0], "Сторона", Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если Не Отказ Тогда
		Закрыть(ТаблицаОбъектаДО);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтроку(Команда)
	
	ТекущиеДанные = Элементы.ТаблицаОбъектаДО.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаОбъектаДО.Удалить(ТаблицаОбъектаДО.Индекс(ТекущиеДанные));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает значение ПеречислениеСсылка.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке
//
&НаКлиентеНаСервереБезКонтекста
Функция ВариантВыражение()
	
	Возврат ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке");
	
КонецФункции

// Возвращает значение ПеречислениеСсылка.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение
//
&НаКлиентеНаСервереБезКонтекста
Функция ВариантЗначение()
	
	Возврат ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение");
	
КонецФункции

// Возвращает значение ПеречислениеСсылка.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта
//
&НаКлиентеНаСервереБезКонтекста
Функция ВариантРеквизит()
	
	Возврат ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта");
	
КонецФункции

&НаСервере
Функция МассивРеквизитовХранилищаПравил()
	
	МассивРеквизитовХранилищаПравил = РаботаСИнтегрированнымиСистемами.МассивРеквизитовХранилищаПравил();
	// Добавим реквизиты формы.
	МассивРеквизитовХранилищаПравил.Добавить(
		РаботаСИнтегрированнымиСистемами.РеквизитХранилищаПравил(
			"%1_Картинка",
			НСтр("ru = '%1. Картинка.'"),
			Новый ОписаниеТипов("Число"),
			"ПолеКартинки",
			БиблиотекаКартинок.ВариантыПравилЗаполненияРеквизитов));
	МассивРеквизитовХранилищаПравил.Добавить(
		РаботаСИнтегрированнымиСистемами.РеквизитХранилищаПравил(
			"%1_ПредставлениеРеквизитаОбъектаИС",
			НСтр("ru = '%1. Представление реквизита объекта интегрированной системы.'"),
			Новый ОписаниеТипов("Строка"),
			"ПолеВвода"));
	
	Возврат МассивРеквизитовХранилищаПравил;
	
КонецФункции

&НаКлиенте
Функция ПравилоЗаполнено(Строка, Реквизит)
	
	Возврат ЗначениеЗаполнено(Строка[СтрШаблон("%1_Вариант", Реквизит.Имя)])
		И (ЗначениеЗаполнено(Строка[СтрШаблон("%1_ИмяРеквизитаОбъектаИС", Реквизит.Имя)])
			Или ЗначениеЗаполнено(Строка[СтрШаблон("%1_ЗначениеРеквизитаДО", Реквизит.Имя)])
			Или ЗначениеЗаполнено(Строка[СтрШаблон("%1_ВычисляемоеВыражение", Реквизит.Имя)]));
	
КонецФункции

&НаКлиенте
Процедура СообщитьОбОшибке(Текст, Строка, ИмяРеквизита, Отказ)
	
	Отказ = Истина;
	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Поле = СтрШаблон("ТаблицаОбъектаДО[%1].%2_Картинка", ТаблицаОбъектаДО.Индекс(Строка), ИмяРеквизита);
	Сообщение.УстановитьДанные(ЭтотОбъект);
	Сообщение.Текст = Текст;
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОбъектаДОПередНачаломИзмененияЗавершение(Результат, ПараметрыОповещения) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = ПараметрыОповещения.ТекущиеДанные;
	ИмяРеквизита = ПараметрыОповещения.ОписаниеРеквизита.Имя;
	Для Каждого Реквизит Из МассивРеквизитовХранилищаПравил() Цикл
		ТекущиеДанные[СтрШаблон(Реквизит.ШаблонИмени, ИмяРеквизита)] =
			Результат[СтрЗаменить(Реквизит.ШаблонИмени, "%1_", "")];
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
