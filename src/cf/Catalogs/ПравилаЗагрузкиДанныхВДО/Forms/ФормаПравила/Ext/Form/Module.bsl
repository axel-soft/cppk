#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ID", ID);
	Параметры.Свойство("ИмяРеквизитаОбъектаДО", ИмяРеквизитаОбъектаДО);
	Параметры.Свойство("ПредставлениеРеквизитаОбъектаДО", ПредставлениеРеквизитаОбъектаДО);
	Параметры.Свойство("ТипРеквизитаОбъектаДО", ТипРеквизитаОбъектаДО);
	
	Параметры.Свойство("Вариант", Вариант);
	Параметры.Свойство("ЭтоПолноправныйПользователь", ЭтоПолноправныйПользователь);
	Параметры.Свойство("ВычисляемоеВыражение", ВычисляемоеВыражение);
	Параметры.Свойство("МестоВыполненияВыражения", МестоВыполненияВыражения);
	Параметры.Свойство("ЗначениеРеквизитаДО", ЗначениеРеквизитаДО);
	Параметры.Свойство("ДополнительныйРеквизитДО", ДополнительныйРеквизитДО);
	Параметры.Свойство("ИмяРеквизитаОбъектаИС", ИмяРеквизитаОбъектаИС);
	Параметры.Свойство("Таблица", Таблица);
	Параметры.Свойство("ПредставлениеРеквизитаОбъектаИС", ПредставлениеРеквизитаОбъектаИС);
	Параметры.Свойство("Обновлять", Обновлять);
	Параметры.Свойство("ОбновлятьРодитель", ОбновлятьРодитель);
	Параметры.Свойство("Зависимый", Зависимый);
	Параметры.Свойство("ПараметрыОтбораЗначения", ПараметрыОтбораЗначения);
	
	Параметры.Свойство("ИнтегрированнаяСистема", ИнтегрированнаяСистема);
	Параметры.Свойство("ПредставлениеИС", ПредставлениеИС);
	Параметры.Свойство("ИмяМакета", ИмяМакета);
	Параметры.Свойство("ПредставлениеОбъектаИС", ПредставлениеОбъектаИС);
	Параметры.Свойство("ПолноеИмяОбъектаИС", ПолноеИмяОбъектаИС);
	Параметры.Свойство("ПолноеИмяОбъектаДО", ПолноеИмяОбъектаДО);
	Параметры.Свойство("ВидДокумента", ВидДокумента);
	
	Параметры.Свойство("ВозможноЗаполнениеИзШаблона", ВозможноЗаполнениеИзШаблона);
	Параметры.Свойство("ШаблонЗначение", ШаблонЗначение);
	
	Если Параметры.Свойство("Подсказка") И ЗначениеЗаполнено(Параметры.Подсказка) Тогда
		Элементы.ПредставлениеРеквизитаОбъектаДО.Подсказка = Параметры.Подсказка;
		Элементы.ПредставлениеРеквизитаОбъектаДО.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
	КонецЕсли;
	
	РеквизитОбъекта = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта");
	УказанноеЗначение = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение");
	ВыражениеНаВстроенномЯзыке =
		ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке");
	ИзШаблона = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ИзШаблона");
	НеЗаполнять = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ПустаяСсылка");
	
	Элементы.СтраницыШаблон.ТекущаяСтраница = Элементы.СтраницаНеЗаполненВШаблоне;
	
	Если ВозможноЗаполнениеИзШаблона Тогда
		
		Элементы.Вариант.СписокВыбора.Вставить(3, ИзШаблона, НСтр("ru = 'Из шаблона'"));
		
		Если ЗначениеЗаполнено(ШаблонЗначение) Тогда
			Элементы.СтраницыШаблон.ТекущаяСтраница = Элементы.СтраницаЗаполненВШаблоне;
		КонецЕсли;
		
		Если Параметры.ШаблонЗапрещаетИзменение Или ИмяРеквизитаОбъектаДО = "ВидДокумента" Тогда
			
			ШаблонЗапрещаетИзменение = Истина;
			
			Элементы.Вариант.СписокВыбора.Удалить(Элементы.Вариант.СписокВыбора.НайтиПоЗначению(НеЗаполнять));
			
			Вариант = ИзШаблона;
			Элементы.Вариант.Доступность = Ложь;
			
			Если ИмяРеквизитаОбъектаДО = "ВидДокумента" Тогда
				ИнформационнаяНадпись = НСтр("ru = 'Вид документа выбран в шаблоне и не может быть изменен.'");
			Иначе
				ИнформационнаяНадпись = НСтр("ru = 'Шаблон запрещает изменение заданных в нем реквизитов.'");
				Элементы.ОК.Доступность = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе // не заполнен в шаблоне
		
		Если ИмяРеквизитаОбъектаДО = "ВидДокумента" Тогда
			Вариант = УказанноеЗначение;
			Элементы.Вариант.Доступность = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Зависимый Тогда
		Обновлять = ОбновлятьРодитель;
	КонецЕсли;
	
	ЗначениеРеквизитаДО = ТипРеквизитаОбъектаДО.ПривестиЗначение(ЗначениеРеквизитаДО);
	
	// Настроим поле ввода для примитивных типов.
	ПервыйТип = ТипРеквизитаОбъектаДО.Типы()[0];
	Если ПервыйТип = Тип("Дата") Тогда
		Элементы.ЗначениеРеквизитаДО.КнопкаРегулирования = Истина;
	ИначеЕсли ПервыйТип = Тип("Число") Тогда
		Элементы.ЗначениеРеквизитаДО.КнопкаРегулирования = Истина;
		КвалификаторыЧисла = ТипРеквизитаОбъектаДО.КвалификаторыЧисла;
		Элементы.ЗначениеРеквизитаДО.МаксимальноеЗначение =
			(pow(10, КвалификаторыЧисла.Разрядность) -1) / pow(10, КвалификаторыЧисла.РазрядностьДробнойЧасти);
		Если КвалификаторыЧисла.ДопустимыйЗнак = ДопустимыйЗнак.Неотрицательный Тогда
			Элементы.ЗначениеРеквизитаДО.МинимальноеЗначение = 0;
		Иначе
			Элементы.ЗначениеРеквизитаДО.МинимальноеЗначение = 0 - Элементы.ЗначениеРеквизитаДО.МаксимальноеЗначение;
		КонецЕсли;
	КонецЕсли;
	
	// Ограничим выбор вариантов заполнения и флажка Ключевой.
	Если ИмяРеквизитаОбъектаДО = "ВидДокумента" Тогда
		Элементы.Обновлять.Доступность = Ложь;
	КонецЕсли;
	
	Если МестоВыполненияВыражения = Перечисления.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеИС Тогда
		Элементы.ВычисляемоеВыражение.Подсказка =
			СтрШаблон(НСтр("ru = 'Выражение будет выполняться в базе %1'"), ПредставлениеИС);
	Иначе
		Элементы.ВычисляемоеВыражение.Подсказка =
			НСтр("ru = 'Выражение будет выполняться в базе 1С:Документооборот'");
	КонецЕсли;
	
	Элементы.ЗначениеРеквизитаДО.ПараметрыВыбора = Новый ФиксированныйМассив(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Новый ПараметрВыбора("ДляПравилЗагрузки", Истина)));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Вариант = РеквизитОбъекта Тогда
		ПроверяемыеРеквизиты.Добавить("ИмяРеквизитаОбъектаИС");
		
	ИначеЕсли Вариант = УказанноеЗначение Тогда
		ПроверяемыеРеквизиты.Добавить("ЗначениеРеквизитаДО");
		
	ИначеЕсли Вариант = ВыражениеНаВстроенномЯзыке Тогда
		ПроверяемыеРеквизиты.Добавить("ВычисляемоеВыражение");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантПриИзменении(Элемент)
	
	Если Зависимый Тогда
		Обновлять = ОбновлятьРодитель;
	Иначе
		Обновлять =
			(Обновлять Или Вариант = РеквизитОбъекта)
			И Не (Вариант = НеЗаполнять)
			И Не (Вариант = УказанноеЗначение);
	КонецЕсли;
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ВычисляемоеВыражениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(ПолноеИмяОбъектаИС) Тогда
		ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'Сначала выберите объект %1'"), ПредставлениеИС));
		Возврат
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИнтегрированнаяСистема", ИнтегрированнаяСистема);
	ПараметрыФормы.Вставить("ПредставлениеИС", ПредставлениеИС);
	ПараметрыФормы.Вставить("ИмяМакета", ИмяМакета);
	ПараметрыФормы.Вставить("ВычисляемоеВыражение", ВычисляемоеВыражение);
	ПараметрыФормы.Вставить("МестоВыполненияВыражения", МестоВыполненияВыражения);
	ПараметрыФормы.Вставить("ПолноеИмяОбъектаИС", ПолноеИмяОбъектаИС);
	ПараметрыФормы.Вставить("ПолноеИмяОбъектаДО", ПолноеИмяОбъектаДО);
	ПараметрыФормы.Вставить("ВидДокумента", ВидДокумента);
	ПараметрыФормы.Вставить("ЭтоТаблица", Ложь);
	ПараметрыФормы.Вставить("Таблица", Таблица);
	ПараметрыФормы.Вставить("ИмяРеквизитаОбъектаДО", ИмяРеквизитаОбъектаДО);
	ПараметрыФормы.Вставить("ДоступнаТекущаяСтрока", (Зависимый И Таблица <> ""));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьВычисляемоеВыражениеЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(
		"Справочник.ПравилаЗагрузкиДанныхВДО.Форма.ВыражениеНаВстроенномЯзыке",
		ПараметрыФормы,
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВычисляемоеВыражениеЗавершение(Результат, ПараметрыОповещения) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ВычисляемоеВыражение = Результат.ВычисляемоеВыражение;
		МестоВыполненияВыражения = Результат.МестоВыполненияВыражения;
		
		Если МестоВыполненияВыражения =
				ПредопределенноеЗначение("Перечисление.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеИС") Тогда
			Элементы.ВычисляемоеВыражение.Подсказка =
				СтрШаблон(НСтр("ru = 'Выражение будет выполняться в базе %1'"), ПредставлениеИС);
		Иначе
			Элементы.ВычисляемоеВыражение.Подсказка =
				НСтр("ru = 'Выражение будет выполняться в базе 1С:Документооборот'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеРеквизитаДОАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ТипЗнч(ПараметрыОтбораЗначения) = Тип("Структура") Тогда
		ПараметрыПолученияДанных.Отбор = ПараметрыОтбораЗначения;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеРеквизитаДОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипЗнч(ЗначениеРеквизитаДО) = Тип("Число")
			Или ТипЗнч(ЗначениеРеквизитаДО) = Тип("Дата")
			Или ТипЗнч(ЗначениеРеквизитаДО) = Тип("Булево") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ВыбратьЗначениеРеквизитаДО(Элементы.ЗначениеРеквизитаДО);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеРеквизитаДООкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если ТипЗнч(ПараметрыОтбораЗначения) = Тип("Структура") Тогда
		ПараметрыПолученияДанных.Отбор = ПараметрыОтбораЗначения;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеРеквизитаОбъектаИСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(ПолноеИмяОбъектаИС) Тогда
		ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'Сначала выберите объект %1'"), ПредставлениеИС));
		Возврат
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИнтегрированнаяСистема", ИнтегрированнаяСистема);
	ПараметрыФормы.Вставить("ИмяМакета", ИмяМакета);
	ПараметрыФормы.Вставить("ПредставлениеОбъектаИС", ПредставлениеОбъектаИС);
	ПараметрыФормы.Вставить("ПолноеИмяОбъектаИС", ПолноеИмяОбъектаИС);
	ПараметрыФормы.Вставить("ЭтоТаблица", Ложь);
	ПараметрыФормы.Вставить("Таблица", Таблица);
	ПараметрыФормы.Вставить("ИмяРеквизитаОбъектаИС", ИмяРеквизитаОбъектаИС);
	ПараметрыФормы.Вставить("ПредставлениеРеквизитаОбъектаДО", ПредставлениеРеквизитаОбъектаДО);
	
	Оповещение = Новый ОписаниеОповещения("ВыборРеквизитаИнтегрированнойСистемыЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(
		"Справочник.ПравилаЗагрузкиДанныхВДО.Форма.ВыборРеквизитаИнтегрированнойСистемы",
		ПараметрыФормы,
		ЭтотОбъект,,,,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборРеквизитаИнтегрированнойСистемыЗавершение(Результат, ПараметрыОповещения) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Результат.Свойство("Имя", ИмяРеквизитаОбъектаИС);
		Результат.Свойство("Представление", ПредставлениеРеквизитаОбъектаИС);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ID", ID);
	Результат.Вставить("Вариант", Вариант);
	Результат.Вставить("Обновлять", Обновлять);
	Результат.Вставить("ИмяРеквизитаОбъектаДО", ИмяРеквизитаОбъектаДО);
	Результат.Вставить("ИмяРеквизитаОбъектаИС");
	Результат.Вставить("ПредставлениеРеквизитаОбъектаИС");
	Результат.Вставить("ЗначениеРеквизитаДО");
	Результат.Вставить("ВычисляемоеВыражение");
	Результат.Вставить("МестоВыполненияВыражения");
	Результат.Вставить("Картинка");
	Результат.Вставить("Пояснение");
	
	Если Вариант = РеквизитОбъекта Тогда
		
		Результат.ИмяРеквизитаОбъектаИС = ИмяРеквизитаОбъектаИС;
		Результат.ПредставлениеРеквизитаОбъектаИС = ПредставлениеРеквизитаОбъектаИС;
		Результат.Картинка = 1;
		
	ИначеЕсли Вариант = УказанноеЗначение Тогда
		
		Результат.ЗначениеРеквизитаДО = ЗначениеРеквизитаДО;
		Результат.Картинка = 2;
		
	ИначеЕсли Вариант = ВыражениеНаВстроенномЯзыке Тогда
		
		Результат.ВычисляемоеВыражение = ВычисляемоеВыражение;
		Результат.МестоВыполненияВыражения = ?(ЗначениеЗаполнено(МестоВыполненияВыражения),
			МестоВыполненияВыражения,
			ПредопределенноеЗначение("Перечисление.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеДО"));
		Результат.Картинка = 3;
		
	ИначеЕсли Вариант = ИзШаблона Тогда
		
		Если ЗначениеЗаполнено(ШаблонЗначение) Тогда
			Результат.Пояснение = СтрШаблон(НСтр("ru = '%1 (Заполняется из шаблона)'"),
				ШаблонЗначение);
		Иначе
			Результат.Пояснение = НСтр("ru = 'Заполняется из шаблона'");
		КонецЕсли;
		Результат.Картинка = 5;
		
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьЗначениеРеквизитаДО(Элемент)
	
	Типы = ТипРеквизитаОбъектаДО.Типы();
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("ОписаниеТипа", ТипРеквизитаОбъектаДО);
	ПараметрыВыбора.Вставить("ТекстРедактирования", Элемент.ТекстРедактирования);
	
	Если Типы.Количество() = 1 Тогда
		ВыбратьЗначениеРеквизитаДОЗавершениеВыбораТипа(Типы[0], ПараметрыВыбора);
	Иначе
		Оповещение = Новый ОписаниеОповещения(
			"ВыбратьЗначениеРеквизитаДОЗавершениеВыбораТипа",
			ЭтотОбъект,
			ПараметрыВыбора);
		СписокТипов = Новый СписокЗначений;
		СписокТипов.ЗагрузитьЗначения(Типы);
		ПоказатьВыборИзСписка(Оповещение, СписокТипов, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗначениеРеквизитаДОЗавершениеВводаЗначения(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗначениеРеквизитаДО = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗначениеРеквизитаДОЗавершениеВыбораТипа(ЗначениеТипа, ПараметрыВыбора) Экспорт
	
	Если ТипЗнч(ЗначениеТипа) = Тип("ЭлементСпискаЗначений") Тогда
		ЗначениеТипа = ЗначениеТипа.Значение;
	КонецЕсли;
	
	ОписаниеТипа = ПараметрыВыбора.ОписаниеТипа;
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьЗначениеРеквизитаДОЗавершениеВводаЗначения", ЭтотОбъект);
	
	Если ЗначениеТипа = Тип("Строка") Тогда
		ЗначениеРеквизита = ПараметрыВыбора.ТекстРедактирования;
		Если ОписаниеТипа.КвалификаторыСтроки.Длина = 0 Или ОписаниеТипа.КвалификаторыСтроки.Длина > 40 Тогда
			Многострочность = Истина;
		Иначе
			Многострочность = Ложь;
		КонецЕсли;
		
		ПоказатьВводСтроки(
			Оповещение,
			СтрЗаменить(ЗначениеРеквизита, "¶", Символы.ПС),
			ПредставлениеРеквизитаОбъектаДО,
			ОписаниеТипа.КвалификаторыСтроки.Длина,
			Многострочность);
		
	ИначеЕсли ЗначениеТипа = Тип("Число") Тогда
		ЗначениеРеквизита = ЗначениеРеквизитаДО;
		ПоказатьВводЧисла(
			Оповещение,
			ЗначениеРеквизита,
			ПредставлениеРеквизитаОбъектаДО,
			ОписаниеТипа.КвалификаторыЧисла.Разрядность,
			ОписаниеТипа.КвалификаторыЧисла.РазрядностьДробнойЧасти);
			
	ИначеЕсли ЗначениеТипа = Тип("Дата") Тогда
		ЗначениеРеквизита = ЗначениеРеквизитаДО;
		ПоказатьВводДаты(
			Оповещение,
			ЗначениеРеквизита,
			ПредставлениеРеквизитаОбъектаДО,
			ОписаниеТипа.КвалификаторыДаты.ЧастиДаты);
		
	ИначеЕсли ЗначениеТипа = Тип("Булево") Тогда
		ЗначениеРеквизита = ЗначениеРеквизитаДО;
		ПоказатьВводЗначения(
			Оповещение,
			ЗначениеРеквизита,
			ПредставлениеРеквизитаОбъектаДО,
			Тип("Булево"));
		
	ИначеЕсли ЗначениеТипа <> Неопределено Тогда
		ИмяОбъекта = ИмяОбъектаМетаданныхПоТипу(
			?(ТипЗнч(ЗначениеТипа) = Тип("ЭлементСпискаЗначений"),
				ЗначениеТипа.Значение,
				ЗначениеТипа));
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ДляПравилЗагрузки", Истина);
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ПараметрыФормы.Вставить("ВидДокумента", ВидДокумента);
		ПараметрыФормы.Вставить("ТекущаяСтрока", ЗначениеРеквизитаДО);
		Если ИмяОбъекта = "Справочник.ЗначенияСвойствОбъектов" Тогда
			Отбор = Новый Структура("Владелец", ДополнительныйРеквизитДО);
			ПараметрыФормы.Вставить("Отбор", Отбор);
		ИначеЕсли ТипЗнч(ПараметрыОтбораЗначения) = Тип("Структура") Тогда
			ПараметрыФормы.Вставить("Отбор", ПараметрыОтбораЗначения);
		КонецЕсли;
		ОткрытьФорму(ИмяОбъекта + ".ФормаВыбора", ПараметрыФормы, ЭтотОбъект,,,,
			Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ИмяОбъектаМетаданныхПоТипу(ТипОбъекта)
	
	Возврат Метаданные.НайтиПоТипу(ТипОбъекта).ПолноеИмя();
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступность()
	
	Элементы.ПредставлениеРеквизитаОбъектаИС.Доступность = (Вариант = РеквизитОбъекта);
	Элементы.ПредставлениеРеквизитаОбъектаИС.АвтоОтметкаНезаполненного = (Вариант = РеквизитОбъекта);
	Элементы.ПредставлениеРеквизитаОбъектаИС.ОтметкаНезаполненного = (Вариант = РеквизитОбъекта)
		И Не ЗначениеЗаполнено(ИмяРеквизитаОбъектаИС);
	
	Элементы.ЗначениеРеквизитаДО.Доступность = (Вариант = УказанноеЗначение);
	Элементы.ЗначениеРеквизитаДО.АвтоОтметкаНезаполненного = (Вариант = УказанноеЗначение);
	Элементы.ЗначениеРеквизитаДО.ОтметкаНезаполненного = (Вариант = УказанноеЗначение)
		И Не ЗначениеЗаполнено(ЗначениеРеквизитаДО);
	
	Элементы.ВычисляемоеВыражение.Доступность = ЭтоПолноправныйПользователь И (Вариант = ВыражениеНаВстроенномЯзыке);
	Элементы.ВычисляемоеВыражение.АвтоОтметкаНезаполненного = (Вариант = ВыражениеНаВстроенномЯзыке);
	Элементы.ВычисляемоеВыражение.ОтметкаНезаполненного = (Вариант = ВыражениеНаВстроенномЯзыке)
		И Не ЗначениеЗаполнено(ВычисляемоеВыражение);
	
	РазрешеноОбновление = Не ШаблонЗапрещаетИзменение
		И (Вариант <> УказанноеЗначение)
		И (Вариант <> ИзШаблона);
	Элементы.Обновлять.Доступность = РазрешеноОбновление И Не Зависимый;
	
	Если Зависимый Тогда
		Обновлять = ОбновлятьРодитель;
	Иначе
		Обновлять = Обновлять И РазрешеноОбновление;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти