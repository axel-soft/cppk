#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Назначение") Тогда
		
		Если Параметры.Назначение = "Документы" Тогда
			ТипОбъекта = Перечисления.ТипыОбъектовШаблоновИмениФайла.ДокументыПредприятия;
		ИначеЕсли Параметры.Назначение = "Мероприятия" Тогда
			ТипОбъекта = Перечисления.ТипыОбъектовШаблоновИмениФайла.Мероприятия;
		КонецЕсли;		
			
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Представление = СтрШаблон(НСтр("ru = 'Используется для: %1'"), Строка(ТипОбъекта));
		
		Если ТипОбъекта = Перечисления.ТипыОбъектовШаблоновИмениФайла.ПустаяСсылка() Тогда
			Представление = НСтр("ru = 'Используется для всех'");
		КонецЕсли;	
		
		Если ТипОбъекта <> Перечисления.ТипыОбъектовШаблоновИмениФайла.ДокументыПредприятия Тогда
			Элементы.ГруппаДействуетДля.Видимость = Ложь;
		КонецЕсли;	
		
	КонецЕсли;	
	
	ЗаполнитьСлужебныеПоля();
	УстановитьЗаголовокДействуетДля();
	
	РаботаСФормамиХолдинг.ИзменитьФормуНастроекПрограммы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиШаблоновИмени.ТипОбъекта КАК ТипОбъекта,
		|	НастройкиШаблоновИмени.Вид КАК Вид,
		|	НастройкиШаблоновИмени.РольФайла КАК РольФайла
		|ИЗ
		|	РегистрСведений.НастройкиШаблоновИмени КАК НастройкиШаблоновИмени
		|ГДЕ
		|	НастройкиШаблоновИмени.ШаблонИмени = &ШаблонИмени
		|УПОРЯДОЧИТЬ ПО
		|	Вид,
		|	РольФайла";
	
	Запрос.УстановитьПараметр("ШаблонИмени", ТекущийОбъект.Ссылка );
	Результат = Запрос.Выполнить();
		
	ВыборкаТаблица = Результат.Выгрузить();
	Если ВыборкаТаблица.Количество() = 0 Тогда // сюда не должно попасть, просто в списке таких не увидим.
		Возврат;
	КонецЕсли;	
	
	НастройкиДействия.Очистить();
	Для Каждого Стр Из ВыборкаТаблица Цикл
		
		Если ЗначениеЗаполнено(Стр.Вид) Или ЗначениеЗаполнено(Стр.РольФайла) Тогда
			НовСтр = НастройкиДействия.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		КонецЕсли;	 
		
	КонецЦикла;	

	Строка0 = ВыборкаТаблица[0]; 
	
	Представление = СтрШаблон(НСтр("ru = 'Используется для: %1'"), Строка(Строка0.ТипОбъекта));
	ТипОбъекта = Строка0.ТипОбъекта;
	
	Если Строка0.ТипОбъекта = Перечисления.ТипыОбъектовШаблоновИмениФайла.ПустаяСсылка() Тогда
		Представление = НСтр("ru = 'Используется для всех'");
	КонецЕсли;	
	
	Если ТипОбъекта <> Перечисления.ТипыОбъектовШаблоновИмениФайла.ДокументыПредприятия Тогда
		Элементы.ГруппаДействуетДля.Видимость = Ложь;
	КонецЕсли;	
	
	ЗаполнитьСлужебныеПоля();
	УстановитьЗаголовокДействуетДля();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьЗаголовокДействуетДля();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ИмяОригНомер = НСтр("ru = '[ОригинальноеИмя]'");
	
	Если СтрНайти(Объект.ФорматИмени, ИмяОригНомер) = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Формат имени не содержит служебное поле ""Оригинальное имя""'"),,
			"Объект.ФорматИмени",,
			Отказ);
		
	КонецЕсли;	
	
	КоличествоСтрок = НастройкиДействия.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		Строка = НастройкиДействия[КоличествоСтрок - Инд];
		
		Если Не ЗначениеЗаполнено(Строка["Вид"]) И Не ЗначениеЗаполнено(Строка["РольФайла"]) Тогда 
			НастройкиДействия.Удалить(Строка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// запишем "Действует для"
	
	УстановитьПривилегированныйРежим(Истина);
	
	РегистрыСведений.НастройкиШаблоновИмени.ОчиститьЗаписиПоШаблону(ТекущийОбъект.Ссылка);
	
	Если НастройкиДействия.Количество() = 0 Тогда
		
		МенеджерЗаписи = РегистрыСведений.НастройкиШаблоновИмени.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ТипОбъекта = ТипОбъекта;
		МенеджерЗаписи.ШаблонИмени = ТекущийОбъект.Ссылка;
		МенеджерЗаписи.Записать();
	
	Иначе	

		Для Каждого Стр Из НастройкиДействия Цикл
			
			МенеджерЗаписи = РегистрыСведений.НастройкиШаблоновИмени.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ТипОбъекта = ТипОбъекта;
			МенеджерЗаписи.Вид = Стр.Вид;
			МенеджерЗаписи.РольФайла = Стр.РольФайла;
			
			МенеджерЗаписи.ШаблонИмени = ТекущийОбъект.Ссылка;
			МенеджерЗаписи.Записать();
			
		КонецЦикла;	
			
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедуры

&НаКлиенте
Процедура ДобавитьСлужебноеПоле(Команда)
	ПеренестиСлужебноеПоле();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеПоля()
	
	СлужебныеПоля.Очистить();

	СлужебныеПоля.Добавить(НСтр("ru = '[Наименование]'"),			НСтр("ru = 'Наименование'"));
	
	Если ТипОбъекта = Перечисления.ТипыОбъектовШаблоновИмениФайла.ДокументыПредприятия Тогда
		
		СлужебныеПоля.Добавить(НСтр("ru = '[Заголовок]'"),				НСтр("ru = 'Заголовок'"));
		СлужебныеПоля.Добавить(НСтр("ru = '[РегистрационныйНомер]'"),	НСтр("ru = 'Регистрационный номер'"));
		
		СлужебныеПоля.Добавить(НСтр("ru = '[Дата]'"),					НСтр("ru = 'Дата'"));
		СлужебныеПоля.Добавить(НСтр("ru = '[ВидДокумента]'"),			НСтр("ru = 'Вид документа'"));
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда
			СлужебныеПоля.Добавить(НСтр("ru = '[ГрифДоступа]'"),			НСтр("ru = 'Гриф доступа'"));
		КонецЕсли;
		
		СлужебныеПоля.Добавить(НСтр("ru = '[Тематика]'"),				НСтр("ru = 'Тематика'"));

		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
			СлужебныеПоля.Добавить(
				НСтр("ru = '[Организация]'"),
				РедакцииКонфигурацииКлиентСервер.Организация() );
		КонецЕсли;	
		
		Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда
			СлужебныеПоля.Добавить(НСтр("ru = '[Проект]'"),					НСтр("ru = 'Проект'"));
		КонецЕсли;
		
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда
			СлужебныеПоля.Добавить(НСтр("ru = '[ВопросДеятельности]'"),		НСтр("ru = 'Вопрос деятельности'"));
		КонецЕсли;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел") Тогда
			СлужебныеПоля.Добавить(НСтр("ru = '[НоменклатураДел]'"),		НСтр("ru = 'Номенклатура дел'"));
		КонецЕсли;
		
		ИспользоватьРолиФайлов = ПолучитьФункциональнуюОпцию("ИспользоватьРолиФайлов");
		Если ИспользоватьРолиФайлов Тогда
			СлужебныеПоля.Добавить(НСтр("ru = '[РольФайла]'"),				НСтр("ru = 'Роль файла'"));
		КонецЕсли;	
		
		СлужебныеПоля.Добавить(НСтр("ru = '[ДатаРегистрации]'"),		НСтр("ru = 'Дата регистрации'"));
		СлужебныеПоля.Добавить(НСтр("ru = '[Контрагент]'"),	НСтр("ru = 'Контрагент'"));
		
	ИначеЕсли ТипОбъекта = Перечисления.ТипыОбъектовШаблоновИмениФайла.Мероприятия Тогда	
		
		СлужебныеПоля.Добавить(НСтр("ru = '[ДатаНачала]'"),				НСтр("ru = 'Дата начала'"));
		СлужебныеПоля.Добавить(НСтр("ru = '[ВидМероприятия]'"),			НСтр("ru = 'Вид мероприятия'"));
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда
			СлужебныеПоля.Добавить(НСтр("ru = '[ГрифДоступа]'"),			НСтр("ru = 'Гриф доступа'"));
		КонецЕсли;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
			СлужебныеПоля.Добавить(НСтр("ru = '[Организация]'"),		РедакцииКонфигурацииКлиентСервер.Организация());
		КонецЕсли;
		
		Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда
			СлужебныеПоля.Добавить(НСтр("ru = '[Проект]'"),					НСтр("ru = 'Проект'"));
		КонецЕсли;
		
	КонецЕсли;	

	СлужебныеПоля.Добавить(НСтр("ru = '[ОригинальноеИмя]'"),		НСтр("ru = 'Оригинальное имя'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиСлужебноеПоле()
	
	Если Не ТолькоПросмотр Тогда 
		ТекущаяСтрока = Элементы.СлужебныеПоля.ТекущаяСтрока;
		
		СтрТабл = СлужебныеПоля.НайтиПоИдентификатору(ТекущаяСтрока);
		
		ЗначениеПоля  = СтрТабл.Значение;
		Объект.ФорматИмени  = Объект.ФорматИмени + ЗначениеПоля;
		
		СформироватьПримерНомера();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура СлужебныеПоляВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПеренестиСлужебноеПоле();
КонецПроцедуры

&НаСервере
Процедура СформироватьПримерНомера()
	
	ОписаниеОшибки = "";
	Если Не РаботаСФайламиВызовСервера.СформироватьПримерИмениФайла(Объект.ФорматИмени, Пример, ОписаниеОшибки) Тогда 
		Пример = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка в формате номера: %1'"), ОписаниеОшибки);
	КонецЕсли;
	
	Если Объект.Пример <> Пример Тогда 
		Объект.Пример = Пример;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФорматНомераПриИзменении(Элемент)
	СформироватьПримерНомера();
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокДействуетДля()
	
	КоличествоНастроек = НастройкиДействия.Количество(); 
	Если КоличествоНастроек > 0 Тогда 
		ЗаголовокДействуетДля = СтрШаблон(НСтр("ru = 'Действует для (%1)'"), 
			КоличествоНастроек);
		Элементы.ГруппаДействуетДля.Поведение = ПоведениеОбычнойГруппы.Обычное;
	Иначе 
		ЗаголовокДействуетДля = НСтр("ru = 'Действует для'");
		Элементы.ГруппаДействуетДля.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
