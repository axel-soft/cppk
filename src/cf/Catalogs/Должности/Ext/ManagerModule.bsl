#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает структуру полей Должности
//
// Возвращаемое значение:
//   Структура
//     Наименование
//
Функция ПолучитьСтруктуруДолжности() Экспорт
	
	ПараметрыДолжности = Новый Структура;
	ПараметрыДолжности.Вставить("Наименование");
	
	Возврат ПараметрыДолжности;
	
КонецФункции

// Создает и записывает в БД должность
//
// Параметры:
//   СтруктураДолжности - Структура - структура полей должности.
//
Функция СоздатьДолжность(СтруктураДолжности) Экспорт
	
	НоваяДолжность = СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(НоваяДолжность, СтруктураДолжности);
	НоваяДолжность.Записать();
	
	Возврат НоваяДолжность.Ссылка;
	
КонецФункции

// Ищет должность по наименованию и возвращает ссылку на нее. Если такой должности нет - создает новую
// 
// Параметры:
//  Наименование - Строка - Наименование для поиска и создания должности
// 
// Возвращаемое значение:
//  СправочникСсылка.Должности - Найденная или созданная должность
//
Функция НайтиСоздатьДолжностьПоНаименованию(Знач Наименование) Экспорт
	
	Результат = Справочники.Должности.ПустаяСсылка();
	
	// Уберем пробелы в начале и конце, двойные/тройные пробелы
	Наименование = СокрЛП(Наименование);
	Наименование = СтрЗаменить(Наименование, "  ", "");
	Наименование = СтрЗаменить(Наименование, "   ", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "Выбрать
	|	Ссылка
	|Из
	|	Справочник.Должности
	|Где
	|	Наименование = &Наименование";
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Ссылка;
	Иначе
		ДанныеЗаполнения = ПолучитьСтруктуруДолжности();
		ДанныеЗаполнения.Наименование = Наименование;
		Результат = СоздатьДолжность(ДанныеЗаполнения);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#Область ОбновлениеАдреснойКниги

// Конструктор параметров обновления адресной книги.
//
// Возвращаемое значение:
//	Структура:
//		* ОбновитьСловаПоискаПоОбъекту - Булево - Признак обновления слов поиска по объекту.
//		* ОбновитьДоступностьВПоискеПоОбъекту - Булево - Признак обновления доступности в результатах поиска.
//
Функция ПараметрыОбновленияАдреснойКниги() Экспорт
	
	ПараметрыОбновленияАдреснойКниги = Новый Структура;
	ПараметрыОбновленияАдреснойКниги.Вставить("ОбновитьСловаПоискаПоОбъекту", Ложь);
	ПараметрыОбновленияАдреснойКниги.Вставить("ОбновитьДоступностьВПоискеПоОбъекту", Ложь);
	
	Возврат ПараметрыОбновленияАдреснойКниги;
	
КонецФункции

// Устанавливает значения параметров обновления адресной книги по данным объекта.
//
// Параметры:
//	Объект - СправочникОбъект.АвтоподстановкиДляПроцессов - Объект, для которго необходимо определить параметры обновления.
//
// Возвращаемое значение:
//	Структура: см. ПараметрыОбновленияАдреснойКниги.
//
Функция ЗначенияПараметровОбновленияАдреснойКнигиПоОбъекту(Объект) Экспорт
	
	ПараметрыОбновленияАдреснойКниги = ПараметрыОбновленияАдреснойКниги();
		
	Если Не РаботаСАдреснойКнигой.ТребуетсяОбновлениеАдреснойКниги(Объект) Тогда
		Возврат ПараметрыОбновленияАдреснойКниги; 
	КонецЕсли;

	Если Объект.ЭтоНовый() Тогда
		ПараметрыОбновленияАдреснойКниги.ОбновитьСловаПоискаПоОбъекту = Истина;
	Иначе
		ПредыдущиеЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Объект.Ссылка, "Наименование, ПометкаУдаления");
		
		Если ПредыдущиеЗначенияРеквизитов.Наименование <> Объект.Наименование Тогда
			ПараметрыОбновленияАдреснойКниги.ОбновитьСловаПоискаПоОбъекту = Истина;
		КонецЕсли;
		
		Если ПредыдущиеЗначенияРеквизитов.ПометкаУдаления <> Объект.ПометкаУдаления Тогда
			ПараметрыОбновленияАдреснойКниги.ОбновитьДоступностьВПоискеПоОбъекту = Истина;
		КонецЕсли;
	КонецЕсли;

	Возврат ПараметрыОбновленияАдреснойКниги;

КонецФункции

// Обновляет адресную книгу, согласно установленным параметрам.
//
// Параметры:
//	Объект - СправочникОбъект.АвтоподстановкиДляПроцессов - Объект, по данным которого необходимо обновить адресной книги.
//	ПараметрыОбновления - Структура Из КлючИЗначение - см. ПараметрыОбновленияАдреснойКниги.
//
Процедура ОбновитьАдреснуюКнигу(Объект, ПараметрыОбновления) Экспорт
	
	Если ПараметрыОбновления.ОбновитьСловаПоискаПоОбъекту Тогда
		РегистрыСведений.ОбъектыПоискаВАдреснойКниге.ОбновитьСловаПоискаПоДолжности(Объект);
	КонецЕсли;
	Если ПараметрыОбновления.ОбновитьДоступностьВПоискеПоОбъекту Тогда
		РегистрыСведений.ОбъектыПоискаВАдреснойКниге.ОбновитьДоступностьВПоиске(Объект);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

// Возвращает отслеживаемые реквизиты для дополнительного свойства ПредыдущиеЗначенияРеквизитов.
//
// Возвращаемое значение:
//  Строка - Отслеживаемые реквизиты.
//
Функция ОтслеживаемыеРеквизиты() Экспорт
	
	ОтслеживаемыеРеквизиты = 
		"Наименование";
	
	Возврат ОтслеживаемыеРеквизиты;
	
КонецФункции

#КонецОбласти

Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат "Ссылка";
	
КонецФункции

// Заполняет переданный дескриптор доступа 
Процедура ЗаполнитьОсновнойДескриптор(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

КонецПроцедуры

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
КонецПроцедуры

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
    МультиязычностьКлиентСервер.ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
    МультиязычностьКлиентСервер.ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
    МультиязычностьСервер.ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка, Метаданные.Справочники.Должности);
КонецПроцедуры

#КонецОбласти


#КонецЕсли