#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеКэширующихДанных

// Обрабатывает изменение влияющих данных, формирует очередь обновления кэширующих данных.
//
Процедура ОбработатьИзменениеВлияющихДанных() Экспорт
	
	ВлияющийОбъектМетаданных = "Справочник.Контрагенты";
	КлючВлияющихДанных = Ссылка;
	
	ЗависимыйОбъектМетаданных = "Справочник.ГруппировкиЗадач";
	ВлияющиеРеквизиты = "Наименование";
	ОбновлениеКэширующихДанных.ОбработатьИзменениеВлияющихДанных(
		ЭтотОбъект,
		ЗависимыйОбъектМетаданных,
		ВлияющийОбъектМетаданных,
		КлючВлияющихДанных,
		ВлияющиеРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоГруппа Тогда 
		Возврат;
	КонецЕсли;
	
	Ответственный = Сотрудники.ОсновнойСотрудник();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если Не ЭтоГруппа Тогда 
		ФизЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
	ОсновнойБанковскийСчет = Справочники.БанковскиеСчета.ПустаяСсылка();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбщегоНазначенияДокументооборот.ЭтоЗагрузкаИзУзлаРИБ(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если МиграцияПриложенийПереопределяемый.ЭтоЗагрузка(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияДокументооборот.УстановитьДополнительноеСвойствоПредыдущиеЗначенияРеквизитов(ЭтотОбъект);
	
	РеквизитыКонтрагентаПоСсылке = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Ссылка, "Наименование, ГруппаДоступа, ПометкаУдаления, Родитель, КонтактнаяИнформация,
		|ИНН, КПП");
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
	КонецЕсли;
	
	СтароеНаименование = "";
	Если ЗначениеЗаполнено(Ссылка) Тогда 
		СтароеНаименование = РеквизитыКонтрагентаПоСсылке.Наименование;
		ДополнительныеСвойства.Вставить("СтароеИНН", РеквизитыКонтрагентаПоСсылке.ИНН);
		ДополнительныеСвойства.Вставить("СтароеКПП", РеквизитыКонтрагентаПоСсылке.КПП);
	КонецЕсли;	
	ДополнительныеСвойства.Вставить("СтароеНаименование", СтароеНаименование);
	
	ПредыдущаяПометкаУдаления = Ложь;
	Если Не Ссылка.Пустая() Тогда
		ПредыдущаяПометкаУдаления = РеквизитыКонтрагентаПоСсылке.ПометкаУдаления;
	КонецЕсли;
	ДополнительныеСвойства.Вставить("ПредыдущаяПометкаУдаления", ПредыдущаяПометкаУдаления);
	
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;

	// Обновление адресной книги.
	ДополнительныеСвойства.Вставить(
		"ПараметрыОбновленияАдреснойКниги",
		Справочники.Контрагенты.ЗначенияПараметровОбновленияАдреснойКнигиПоОбъекту(ЭтотОбъект));
	
	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда 
		КПП = "";
		КодПоОКПО = "";
	ИначеЕсли ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда 
		КПП = "";
	ИначеЕсли ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент Тогда 
		ИНН = "";
		КПП = "";
		КодПоОКПО = "";
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбщегоНазначенияДокументооборот.ЭтоЗагрузкаИзУзлаРИБ(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если МиграцияПриложенийПереопределяемый.ЭтоЗагрузка(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ИзменилосьНаименование = (ЗначениеЗаполнено(ДополнительныеСвойства.СтароеНаименование) 
			И ДополнительныеСвойства.СтароеНаименование <> Наименование);
	ИзменилсяКПП = (ДополнительныеСвойства.Свойство("СтароеКПП") И ДополнительныеСвойства.СтароеКПП <> КПП);
	ИзменилсяИНН = (ДополнительныеСвойства.Свойство("СтароеИНН") И ДополнительныеСвойства.СтароеИНН <> ИНН);
	ИзмениласьИсторияРеквизитов = (ДополнительныеСвойства.Свойство("ИзмениласьИсторияРеквизитов")
			И ДополнительныеСвойства.ИзмениласьИсторияРеквизитов);
	
	Если ИзменилосьНаименование Или ИзменилсяКПП Или ИзменилсяИНН Или ИзмениласьИсторияРеквизитов Тогда 
		
		УстановитьПривилегированныйРежим(Истина);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументыПредприятия.ДатаСоздания КАК ДатаСоздания,
		|	ДокументыПредприятия.ДатаРегистрации КАК ДатаРегистрации,
		|	ДокументыПредприятия.Ссылка КАК Ссылка,
		|	ДокументыПредприятия.Контрагенты.(
		|		НомерСтроки КАК НомерСтроки,
		|		Контрагент КАК Контрагент
		|	) КАК Контрагенты
		|ИЗ
		|	Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДокументыПредприятия.Контрагенты КАК ДокументыПредприятияКонтрагенты
		|		ПО ДокументыПредприятия.Ссылка = ДокументыПредприятияКонтрагенты.Ссылка
		|ГДЕ
		|	ДокументыПредприятияКонтрагенты.Контрагент = &Контрагент";
		
		Запрос.УстановитьПараметр("Контрагент", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ДатаАктуальности = Делопроизводство.ДатаУчетаДокумента(Выборка); 
			КонтрагентыДляСписков = Делопроизводство.ПолучитьКонтрагентовДляСписков(
				Выборка.Контрагенты.Выгрузить(), "Контрагент", ДатаАктуальности);
			Делопроизводство.ЗаписатьДанныеДокумента(
				Выборка.Ссылка, "КонтрагентыДляСписков", КонтрагентыДляСписков);
		КонецЦикла;
		
	КонецЕсли;
	
	ПредыдущаяПометкаУдаления = Ложь;
	Если ДополнительныеСвойства.Свойство("ПредыдущаяПометкаУдаления") Тогда
		ПредыдущаяПометкаУдаления = ДополнительныеСвойства.ПредыдущаяПометкаУдаления;
	КонецЕсли;
	
	Если ПометкаУдаления <> ПредыдущаяПометкаУдаления Тогда
		ПротоколированиеРаботыСотрудников.ЗаписатьПометкуУдаления(Ссылка, ПометкаУдаления);
	КонецЕсли;
	
	Если ПометкаУдаления = Истина Тогда
		РегистрыСведений.ОсновныеКонтактныеЛицаКонтрагентов.СнятьОтметкуОсновногоКонтактногоЛицаКонтрагента(Ссылка);
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ДанныеКонтактныхЛиц") Тогда
		
		ДанныеКонтактныхЛиц = ДополнительныеСвойства.ДанныеКонтактныхЛиц;
		
		ЕдинственноеКонтактноеЛицо = (ДанныеКонтактныхЛиц.Количество() = 1);
		
		Для Каждого ДанныеКонтактногоЛица Из ДанныеКонтактныхЛиц Цикл
			
			КонтактноеЛицо = Справочники.КонтактныеЛица.СоздатьЭлемент();
			Если ЭтоНовый() Тогда
				СсылкаНового = ПолучитьСсылкуНового();
				Если НЕ ЗначениеЗаполнено(СсылкаНового) Тогда
					СсылкаНового = Справочники.Контрагенты.ПолучитьСсылку();
				КонецЕсли;
				УстановитьСсылкуНового(СсылкаНового);
				КонтактноеЛицо.Владелец = СсылкаНового;
			Иначе
				КонтактноеЛицо.Владелец = Ссылка;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(КонтактноеЛицо, ДанныеКонтактногоЛица.Значение);
			
			УстановитьПривилегированныйРежим(Истина);
			КонтактноеЛицо.Записать();
			Если ЕдинственноеКонтактноеЛицо Тогда
				РегистрыСведений.ОсновныеКонтактныеЛицаКонтрагентов.УстановитьОсновноеКонтактноеЛицоКонтрагента(
					Ссылка, КонтактноеЛицо.Ссылка);
			КонецЕсли;
			УстановитьПривилегированныйРежим(Ложь);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ПараметрыОбновленияАдреснойКниги") Тогда
		// Обновление адресной книги.
		Справочники.Контрагенты.ОбновитьАдреснуюКнигу(
			ЭтотОбъект, ДополнительныеСвойства.ПараметрыОбновленияАдреснойКниги);
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Возможно, выполнена явная регистрация событий при загрузке объекта.
	Если Не ДополнительныеСвойства.Свойство("НеРегистрироватьБизнесСобытия") Тогда
		Если ДополнительныеСвойства.Свойство("ЭтоНовый") И ДополнительныеСвойства.ЭтоНовый Тогда
			БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(Ссылка, Справочники.ВидыБизнесСобытий.СозданиеКонтрагента);
		КонецЕсли;
	КонецЕсли;
	
	ОбработатьИзменениеВлияющихДанных();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда 
		
		ТекстСообщения = "";
		Если ЗначениеЗаполнено(КПП) И Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(КПП, ТекстСообщения) Тогда
 			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "КПП",, Отказ);
 		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЧтенииПредставленийНаСервере() Экспорт
	МультиязычностьСервер.ПриЧтенииПредставленийНаСервере(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли