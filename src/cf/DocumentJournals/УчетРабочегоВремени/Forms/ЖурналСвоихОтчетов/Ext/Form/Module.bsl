
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.Параметры.УстановитьЗначениеПараметра("Сотрудники", Сотрудники.СотрудникиПользователя());
	
	ИспользоватьЕжедневныеОтчеты = ПолучитьФункциональнуюОпцию("ИспользоватьЕжедневныеОтчеты");
	ИспользоватьЕженедельныеОтчеты = ПолучитьФункциональнуюОпцию("ИспользоватьЕженедельныеОтчеты");

	Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьЕжедневныеОтчеты", ИспользоватьЕжедневныеОтчеты);
	Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьЕженедельныеОтчеты", ИспользоватьЕженедельныеОтчеты);
	
	ЭтоМобильныйКлиент = ПараметрыСеанса.ЭтоМобильныйКлиент;
	Если ЭтоМобильныйКлиент Тогда
		МК_НастроитьЭлементыФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	ПерсональныеНастройки = ФайловыеФункцииКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСФайлами();
	Если ИмяСобытия = "ДобавленаСтрокаЕжедневногоОтчета" Тогда 
		Если ЗначениеЗаполнено(Параметр) И ТипЗнч(Параметр) = Тип("ДокументСсылка.ЕжедневныйОтчет")
			И ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(Параметр, "Пользователь") = ПерсональныеНастройки.ТекущийПользователь Тогда 
			Элементы.Список.Обновить();
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокОбработкаЗапросаОбновления()
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьЕжедневныйОтчетВыполнить()
	
	ОткрытьФорму("Документ.ЕжедневныйОтчет.ФормаОбъекта",, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОтчетЗаНеделюВыполнить()

	ОткрытьФорму("Документ.ЕженедельныйОтчет.ФормаОбъекта",, Элементы.Список);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетЗаСегодня(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	ОтчетЗаСегодня = ПолучитьЕжедневныеОтчетыТекущейДаты();
	Если ЗначениеЗаполнено(ОтчетЗаСегодня) Тогда 
		ПараметрыФормы.Вставить("Ключ", ОтчетЗаСегодня);
	КонецЕсли;
	
	ОткрытьФорму("Документ.ЕжедневныйОтчет.ФормаОбъекта", ПараметрыФормы, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура МК_Создать(Команда)
	
	МК_СоздатьПродолжение();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьЕжедневныеОтчетыТекущейДаты()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕжедневныйОтчет.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЕжедневныйОтчет КАК ЕжедневныйОтчет
	|ГДЕ
	|	ЕжедневныйОтчет.Сотрудник В(&Сотрудники)
	|	И НАЧАЛОПЕРИОДА(ЕжедневныйОтчет.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
	|	И НЕ ЕжедневныйОтчет.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники.СотрудникиПользователя());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#Область СлужебныеПроцедурыИФункции_МобильныйКлиент

&НаСервере
Процедура МК_НастроитьЭлементыФормы()
	
	СворачиваниеЭлементовПоВажности = СворачиваниеЭлементовФормыПоВажности.НеИспользовать;
	ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	
	Элементы.СписокКонтекстноеМенюСоздатьЕжедневныйОтчет.Видимость = Ложь;
	Элементы.СписокКонтекстноеМенюСоздатьОтчетЗаНеделю.Видимость = Ложь;
	Элементы.СписокКонтекстноеМенюОткрытьОтчетЗаСегодня.Видимость = Ложь;
	
	Элементы.Список.Шапка = Ложь;
	Элементы.Список.ВертикальныеЛинии = Ложь;
	Элементы.МК_ГруппаКолонок.Видимость = Истина;
	
	Элементы.Переместить(Элементы.Дата, Элементы.МК_ПерваяСтрока);
	Элементы.Переместить(Элементы.Тип, Элементы.МК_ПерваяСтрока);
	Элементы.ДеньНедели.Видимость = Ложь;
	
	Элементы.Тип.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
	Элементы.Тип.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	Элементы.Тип.РастягиватьПоГоризонтали = Истина;
	
	Элементы.Переместить(Элементы.ДлительностьРабот, Элементы.МК_ДлительностьОбщая);
	Элементы.Переместить(Элементы.ДлительностьРабочая, Элементы.МК_ДлительностьРабочая);
	
	МК_ОформитьКолонкуДлительности(Элементы.ДлительностьРабот);
	МК_ОформитьКолонкуДлительности(Элементы.ДлительностьРабочая);
	
	Элементы.МК_ДлительностьОбщаяЗаголовок.ЦветТекста = ЦветаСтиля.МК_ЦветАвтораИсполнителя;
	Элементы.МК_ДлительностьОбщаяЗаголовок.Шрифт = ШрифтыСтиля.МелкийШрифтТекста;
	Элементы.МК_ДлительностьОбщаяЗаголовок.Ширина = 5;
	
	Элементы.МК_ДлительностьРабочаяЗаголовок.ЦветТекста = ЦветаСтиля.МК_ЦветАвтораИсполнителя;
	Элементы.МК_ДлительностьРабочаяЗаголовок.Шрифт = ШрифтыСтиля.МелкийШрифтТекста;
	Элементы.МК_ДлительностьРабочаяЗаголовок.Ширина = 7;
	
	Элементы.Дата.Формат = НСтр("ru='ДФ=''dd MMM yy'''");
	Элементы.Дата.Ширина = 12;
	Элементы.Дата.РастягиватьПоГоризонтали = Ложь;
	
	Элементы.КоманднаяПанельСоздать.Видимость = Ложь;
	
	Элементы.МК_Создать.Видимость = Истина;
	МК.ОформитьАкцентнуюКнопку(Элементы.МК_Создать);
	
	Элементы.ФормаОткрытьОтчетЗаСегодня.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВКоманднойПанели;
	Элементы.ФормаОткрытьОтчетЗаСегодня.Отображение = ОтображениеКнопки.Картинка;
	
КонецПроцедуры

&НаСервере
Процедура МК_ОформитьКолонкуДлительности(Колонка)
	
	Колонка.ЦветТекста = ЦветаСтиля.МК_ЦветАвтораИсполнителя;
	Колонка.Шрифт = ШрифтыСтиля.МелкийШрифтТекста;
	Колонка.Ширина = 5;
	Колонка.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Лево;
	Колонка.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
	
КонецПроцедуры

&НаКлиенте
Процедура МК_СоздатьПродолжение()
	
	Если ИспользоватьЕжедневныеОтчеты И Не ИспользоватьЕженедельныеОтчеты Тогда
		
		СоздатьЕжедневныйОтчетВыполнить();
		
	ИначеЕсли ИспользоватьЕженедельныеОтчеты И Не ИспользоватьЕжедневныеОтчеты Тогда
		
		СоздатьОтчетЗаНеделюВыполнить();
		
	Иначе
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
		"МК_СоздатьПослеВыбора",
		ЭтотОбъект);
		
		СписокЗначений = Новый СписокЗначений;
		
		Если ИспользоватьЕжедневныеОтчеты Тогда
			СписокЗначений.Добавить("ЕжедневныйОтчет", НСтр("ru = 'Ежедневный отчет'"));
		КонецЕсли;
			
		Если ИспользоватьЕженедельныеОтчеты Тогда
			СписокЗначений.Добавить("ЕженедельныйОтчет", НСтр("ru = 'Еженедельный отчет'"));
		КонецЕсли;
		
		ПоказатьВыборИзСписка(ОписаниеОповещения, СписокЗначений, Элементы.МК_Создать);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура МК_СоздатьПослеВыбора(ВыбранноеЗначение, Параметр) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение.Значение = "ЕжедневныйОтчет" Тогда
		СоздатьЕжедневныйОтчетВыполнить();
		
	ИначеЕсли ВыбранноеЗначение.Значение = "ЕженедельныйОтчет" Тогда 
		СоздатьОтчетЗаНеделюВыполнить();

	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти
