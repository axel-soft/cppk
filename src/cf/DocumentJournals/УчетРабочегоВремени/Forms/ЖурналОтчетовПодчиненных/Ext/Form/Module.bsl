
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаОтбора = ТекущаяДатаСеанса();
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		Подразделение = РаботаСПользователями.ПолучитьПодразделение(
			ПользователиКлиентСервер.ТекущийПользователь());
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокОтчетов,
			"Подразделение",
			Подразделение);
		ОбновитьОтчетыСервер();
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЕжедневныеОтчеты") Тогда
		Элементы.ОтчетыВсегоЗаДень.Видимость = Ложь;
		Элементы.ОтчетыРабочееЗаДень.Видимость = Ложь;
		Элементы.ОтчетыПроцентФондаЗаДень.Видимость = Ложь;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЕженедельныеОтчеты") Тогда
		Элементы.ОтчетыВсегоЗаНеделю.Видимость = Ложь;
		Элементы.ОтчетыРабочееЗаНеделю.Видимость = Ложь;
		Элементы.ОтчетыПроцентФондаЗаНеделю.Видимость = Ложь;
	КонецЕсли;
	
	Если Не Пользователи.ЭтоПолноправныйПользователь() Тогда
		
		Сотрудник = Сотрудники.ОсновнойСотрудник();
		МассивПодразделений = 
			ЖурналыДокументов.УчетРабочегоВремени.МассивПодразделенийДляПросмотраОтчетовОТрудозатратах(Сотрудник);
		ДоступныеПодразделения.ЗагрузитьЗначения(МассивПодразделений);
		
	Иначе
		
		ВыборкаВсеПодразделения = Справочники.СтруктураПредприятия.Выбрать();
		Пока ВыборкаВсеПодразделения.Следующий() Цикл
			ДоступныеПодразделения.Добавить(ВыборкаВсеПодразделения.Ссылка);
		КонецЦикла;
		
	КонецЕсли;
	
	ЭтоМобильныйКлиент = ПараметрыСеанса.ЭтоМобильныйКлиент;
	Если ЭтоМобильныйКлиент Тогда
		МК_НастроитьЭлементыФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если ДоступныеПодразделения.Количество()
		И ДоступныеПодразделения.НайтиПоЗначению(Подразделение) = Неопределено Тогда
		Подразделение = Неопределено;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокОтчетов,
			"Подразделение", ДоступныеПодразделения);
	КонецЕсли;
	
	Если ДоступныеПодразделения.Количество() = 1 Тогда
		Подразделение = ДоступныеПодразделения[0].Значение;
		Элементы.Подразделение.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Подразделение) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокОтчетов,
			"Подразделение",
			Подразделение);
		ОбновитьОтчетыСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	ПриИзмененииПараметровЭкранаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененЕженедельныйОтчет"
		Или ИмяСобытия = "ИзмененЕжедневныйОтчет" Тогда
		ОбновитьОтчеты();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокОтчетов,
		"Подразделение",
		Подразделение);
	ОбновитьОтчеты();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтбораПриИзменении(Элемент)
	ОбновитьОтчеты();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтбораПолеВводаПриИзменении(Элемент)
	ОбновитьОтчеты();
КонецПроцедуры

&НаКлиенте
Процедура ОтчетыПриАктивизацииСтроки(Элемент)
	Если Элементы.Отчеты.ТекущиеДанные = Неопределено Тогда
		ТекущийСотрудник = Неопределено;
	Иначе
		ТекущийСотрудник = Элементы.Отчеты.ТекущиеДанные.Сотрудник;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтчетыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ОтчетыВсегоЗаДень"
		Или Поле.Имя = "ОтчетыРабочееЗаДень"
		Или Поле.Имя = "ОтчетыПроцентФондаЗаДень" Тогда
		СтандартнаяОбработка = Ложь;
		Отчет = Элементы.Отчеты.ТекущиеДанные.ЕжедневныйОтчет;
		Если ЗначениеЗаполнено(Отчет) Тогда
			ПоказатьЗначение(, Отчет);
		Иначе
			ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура);
			ПараметрыФормы.ЗначенияЗаполнения.Вставить("Сотрудник", 
				Элементы.Отчеты.ТекущиеДанные.Сотрудник);
			ПараметрыФормы.ЗначенияЗаполнения.Вставить("Дата", 
				ДатаОтбора);
			ОткрытьФорму("Документ.ЕжедневныйОтчет.Форма.ФормаДокумента",
				ПараметрыФормы,
				Элемент);
		КонецЕсли;
	КонецЕсли;
		
	Если Поле.Имя = "ОтчетыВсегоЗаНеделю"
		Или Поле.Имя = "ОтчетыРабочееЗаНеделю"
		Или Поле.Имя = "ОтчетыПроцентФондаЗаНеделю" Тогда
		СтандартнаяОбработка = Ложь;
		Отчет = Элементы.Отчеты.ТекущиеДанные.ЕженедельныйОтчет;
		Если ЗначениеЗаполнено(Отчет) Тогда
			ПоказатьЗначение(, Отчет);
		Иначе
			ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура);
			ПараметрыФормы.ЗначенияЗаполнения.Вставить("Сотрудник", 
				Элементы.Отчеты.ТекущиеДанные.Сотрудник);
			ПараметрыФормы.ЗначенияЗаполнения.Вставить("Дата", 
				ДатаОтбора);
			ОткрытьФорму("Документ.ЕженедельныйОтчет.Форма.ФормаДокумента",
				ПараметрыФормы,
				Элемент);
		КонецЕсли;
	КонецЕсли;
	
	Если Поле.Имя = "Отсутствие" Тогда
		СтандартнаяОбработка = Ложь;
		Отсутствие = Элементы.Отчеты.ТекущиеДанные.Отсутствие;
		Если ЗначениеЗаполнено(Отсутствие) Тогда
			ПоказатьЗначение(, Отсутствие);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетыОбработкаЗапросаОбновления()
	
	ОбновитьОтчетыСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОтчетовПриАктивизацииСтроки(Элемент)
	Если Элементы.СписокОтчетов.ТекущиеДанные = Неопределено Тогда
		ТекущийСотрудник = Неопределено;
	Иначе
		ТекущийСотрудник = Элементы.СписокОтчетов.ТекущиеДанные.Сотрудник;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.СтраницаПоДатам Тогда
		Если Элементы.Отчеты.ТекущиеДанные = Неопределено Тогда
			ТекущийСотрудник = Неопределено;
		Иначе
			ТекущийСотрудник = Элементы.Отчеты.ТекущиеДанные.Сотрудник;
		КонецЕсли;
	КонецЕсли;
	Если ТекущаяСтраница = Элементы.СтраницаСписком Тогда
		Если Элементы.СписокОтчетов.ТекущиеДанные = Неопределено Тогда
			ТекущийСотрудник = Неопределено;
		Иначе
			ТекущийСотрудник = Элементы.СписокОтчетов.ТекущиеДанные.Сотрудник;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ДоступныеПодразделения.НайтиПоЗначению(ВыбранноеЗначение) = Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		СообщениеОбОшибке = СтрШаблон(НСтр("ru = 'У вас нет прав на просмотр отчетов по подразделению %1.'"),
			ВыбранноеЗначение);
		ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке, , "Подразделение");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ДоступныеПодразделения.Количество() Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("ДоступныеПодразделения", ДоступныеПодразделения);
		ОткрытьФорму("Справочник.СтруктураПредприятия.ФормаВыбора", ПараметрыФормы, Элемент);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаОтбораПриВыводеПериода(Элемент, ОформлениеПериода)
	
	ОбщегоНазначенияДокументооборотКлиент.ПриВыводеПериода(Элемент, ОформлениеПериода);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура МК_СтраницаПоДатам(Команда)
	
	МК_ПереключитьНаСтраницу(ЭтотОбъект, Элементы.СтраницаПоДатам,
		Элементы.МК_КнопкаСтраницаПоДатам);
		
КонецПроцедуры

&НаКлиенте
Процедура МК_СтраницаСписком(Команда)
	
	МК_ПереключитьНаСтраницу(ЭтотОбъект, Элементы.СтраницаСписком,
		Элементы.МК_КнопкаСтраницаСписком);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьОтчеты()
	ОбновитьОтчетыСервер();
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтчетыСервер()
	
	ТаблицаОтчетов.Очистить();
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		Возврат;
	КонецЕсли;
	
	СотрудникиПодразделения = Сотрудники.СотрудникиПодразделения(Подразделение);
	
	ПолучатьОтсутствия = ПолучитьФункциональнуюОпцию("ИспользоватьОтсутствия");
	Если ПолучатьОтсутствия Тогда
		НастройкиОтсутствий = ОтсутствияКлиентСервер.НастройкиПроверкиОтсутствий();
		НастройкиОтсутствий.УчитыватьФлагБудуРазбиратьЗадачи = Ложь;
		ТаблицаОтсутствий = Отсутствия.ПолучитьТаблицуОтсутствий(НачалоДня(ДатаОтбора),
			КонецДня(ДатаОтбора),
			СотрудникиПодразделения,
			НастройкиОтсутствий);
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Сотрудники.Ссылка КАК Сотрудник,
		|	ЕжедневныйОтчет.Ссылка КАК ЕжедневныйОтчет,
		|	ЕжедневныйОтчет.ДлительностьРабот КАК ЕжедневныйОтчетДлительностьРабот,
		|	ЕжедневныйОтчет.ДлительностьРабочая КАК ЕжедневныйОтчетДлительностьРабочая,
		|	ЕженедельныйОтчет.Ссылка КАК ЕженедельныйОтчет,
		|	ЕженедельныйОтчет.ДлительностьРабот КАК ЕженедельныйОтчетДлительностьРабот,
		|	ЕженедельныйОтчет.ДлительностьРабочая КАК ЕженедельныйОтчетДлительностьРабочая
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЕжедневныйОтчет КАК ЕжедневныйОтчет
		|		ПО (ЕжедневныйОтчет.Сотрудник = Сотрудники.Ссылка)
		|			И (НЕ ЕжедневныйОтчет.ПометкаУдаления)
		|			И (ЕжедневныйОтчет.Дата МЕЖДУ &НачалоДня И &КонецДня)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЕженедельныйОтчет КАК ЕженедельныйОтчет
		|		ПО (ЕженедельныйОтчет.Сотрудник = Сотрудники.Ссылка)
		|			И (НЕ ЕженедельныйОтчет.ПометкаУдаления)
		|			И (ЕженедельныйОтчет.Дата МЕЖДУ &НачалоНедели И &КонецНедели)
		|ГДЕ
		|	Сотрудники.Подразделение = &Подразделение
		|	И Сотрудники.Действует
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник");
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ДатаОтбора));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(ДатаОтбора));
	
	Если ДеньНедели(ДатаОтбора) > 5 Тогда 
		НачалоНедели = УчетВремениКлиентСервер.КонецВоскресенья(ДатаОтбора) + 1 - 3600 * 24 * 2;
		КонецНедели = УчетВремениКлиентСервер.КонецВоскресенья(
			УчетВремениКлиентСервер.КонецВоскресенья(ДатаОтбора) + 1) - 3600 * 24 * 2;
	Иначе
		НачалоНедели = УчетВремениКлиентСервер.НачалоПонедельника(ДатаОтбора) - 3600 * 24 * 2;
		КонецНедели = УчетВремениКлиентСервер.КонецВоскресенья(ДатаОтбора) - 3600 * 24 * 2;
	КонецЕсли;
	Запрос.УстановитьПараметр("НачалоНедели", НачалоНедели);
	Запрос.УстановитьПараметр("КонецНедели", КонецНедели);
	
	ПользователиМассивом = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПользователиМассивом.Добавить(Выборка.Сотрудник);
	КонецЦикла;
	
	// Соберем длительность за день.
	Фонд = УчетВремени.ФондРабочегоВремени(ПользователиМассивом, НачалоНедели, КонецНедели);
	Фонд.Колонки.Длительность.Имя = "ДлительностьЗаНеделю";
	Фонд.Колонки.Добавить("ДлительностьЗаДень", Новый ОписаниеТипов("Число"));
	Для Каждого СтрокаФонда Из Фонд Цикл
		Если СтрокаФонда.ДатаОкончания < НачалоДня(ДатаОтбора)
			Или СтрокаФонда.ДатаНачала > КонецДня(ДатаОтбора) Тогда
			Продолжить;
		КонецЕсли;
		ДатаНачала = Макс(СтрокаФонда.ДатаНачала, НачалоДня(ДатаОтбора));
		ДатаОкончания = Мин(СтрокаФонда.ДатаОкончания, КонецДня(ДатаОтбора));
		СтрокаФонда.ДлительностьЗаДень = Макс(0, ДатаОкончания - ДатаНачала);
	КонецЦикла;
	Фонд.Свернуть("Сотрудник", "ДлительностьЗаНеделю, ДлительностьЗаДень");
	
	ИтогВсегоЗаНеделюСек = 0;
	ИтогРабочееЗаНеделюСек = 0;
	ИтогФондЗаНеделюСек = 0;
	ИтогВсегоЗаДеньСек = 0;
	ИтогРабочееЗаДеньСек = 0;
	ИтогФондЗаДеньСек = 0;
	
	Выборка.Сбросить();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Строка = ТаблицаОтчетов.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, Выборка);
		
		// Ежедневный отчет.
		Если ЗначениеЗаполнено(Выборка.ЕжедневныйОтчет) Тогда
			
			Строка.ВсегоЗаДень = Выборка.ЕжедневныйОтчетДлительностьРабот;
			ВсегоЗаДеньСек = УчетВремениКлиентСервер.ЧислоИзСтроки(Выборка.ЕжедневныйОтчетДлительностьРабот);
			ИтогВсегоЗаДеньСек = ИтогВсегоЗаДеньСек + ВсегоЗаДеньСек;
			
			Строка.РабочееЗаДень = Выборка.ЕжедневныйОтчетДлительностьРабочая;
			РабочееЗаДеньСек = УчетВремениКлиентСервер.ЧислоИзСтроки(Выборка.ЕжедневныйОтчетДлительностьРабочая);
			ИтогРабочееЗаДеньСек = ИтогРабочееЗаДеньСек + РабочееЗаДеньСек;
			
			СтрокаФонда = Фонд.Найти(Выборка.Сотрудник);
			ФондЗаДеньСек = ?(СтрокаФонда = Неопределено, 0, СтрокаФонда.ДлительностьЗаДень);
			ПроцентФондаЗаДень = ?(ФондЗаДеньСек = 0, 0, РабочееЗаДеньСек / ФондЗаДеньСек * 100);
			Строка.ПроцентФондаЗаДень = Формат(ПроцентФондаЗаДень, "ЧДЦ=0; ЧН=0; ЧГ=0") + "%";
			ИтогФондЗаДеньСек = ИтогФондЗаДеньСек + ФондЗаДеньСек;
			
		Иначе
			Строка.ВсегоЗаДень = НСтр("ru = 'нет'");
			Строка.РабочееЗаДень = НСтр("ru = 'нет'");
			Строка.ПроцентФондаЗаДень = НСтр("ru = 'нет'");
		КонецЕсли;
		
		// Отчет за неделю.
		Если ЗначениеЗаполнено(Выборка.ЕженедельныйОтчет) Тогда
			
			Строка.ВсегоЗаНеделю = Выборка.ЕженедельныйОтчетДлительностьРабот;
			ВсегоЗаНеделюСек = УчетВремениКлиентСервер.ЧислоИзСтроки(Выборка.ЕженедельныйОтчетДлительностьРабот);
			ИтогВсегоЗаНеделюСек = ИтогВсегоЗаНеделюСек + ВсегоЗаНеделюСек;
			
			Строка.РабочееЗаНеделю = Выборка.ЕженедельныйОтчетДлительностьРабочая;
			РабочееЗаНеделюСек = УчетВремениКлиентСервер.ЧислоИзСтроки(Выборка.ЕженедельныйОтчетДлительностьРабочая);
			ИтогРабочееЗаНеделюСек = ИтогРабочееЗаНеделюСек + РабочееЗаНеделюСек;
			
			СтрокаФонда = Фонд.Найти(Выборка.Сотрудник);
			ФондЗаНеделюСек = ?(СтрокаФонда = Неопределено, 0, СтрокаФонда.ДлительностьЗаНеделю);
			ПроцентФондаЗаНеделю = ?(ФондЗаНеделюСек = 0, 0, РабочееЗаНеделюСек / ФондЗаНеделюСек * 100);
			Строка.ПроцентФондаЗаНеделю = Формат(ПроцентФондаЗаНеделю, "ЧДЦ=0; ЧН=0; ЧГ=0") + "%";
			ИтогФондЗаНеделюСек = ИтогФондЗаНеделюСек + ФондЗаНеделюСек;
			
		Иначе
			Строка.ВсегоЗаНеделю = НСтр("ru = 'нет'");
			Строка.РабочееЗаНеделю = НСтр("ru = 'нет'");
			Строка.ПроцентФондаЗаНеделю = НСтр("ru = 'нет'");
		КонецЕсли;
		
		// Отсутствие.
		Если ПолучатьОтсутствия Тогда
			СтрокаОтсутствия = ТаблицаОтсутствий.Найти(Выборка.Сотрудник, "Сотрудник");
			Если СтрокаОтсутствия <> Неопределено Тогда
				Строка.Отсутствие = СтрокаОтсутствия.Ссылка;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ИтогВсегоЗаНеделю = УчетВремениКлиентСервер.ЧислоВСтроку(ИтогВсегоЗаНеделюСек, НСтр("ru = 'нет'"));
	ИтогРабочееЗаНеделю = УчетВремениКлиентСервер.ЧислоВСтроку(ИтогРабочееЗаНеделюСек, НСтр("ru = 'нет'"));
	ИтогПроцентФондаЗаНеделю = ?(ИтогФондЗаНеделюСек = 0, НСтр("ru = 'нет'"),
		Формат(100 * ИтогРабочееЗаНеделюСек / ИтогФондЗаНеделюСек, "ЧДЦ=0; ЧН=нет; ЧГ=0") + "%");
		
	ИтогВсегоЗаДень = УчетВремениКлиентСервер.ЧислоВСтроку(ИтогВсегоЗаДеньСек, НСтр("ru = 'нет'"));
	ИтогРабочееЗаДень = УчетВремениКлиентСервер.ЧислоВСтроку(ИтогРабочееЗаДеньСек, НСтр("ru = 'нет'"));
	ИтогПроцентФондаЗаДень = ?(ИтогФондЗаДеньСек = 0, НСтр("ru = 'нет'"),
		Формат(100 * ИтогРабочееЗаДеньСек / ИтогФондЗаДеньСек, "ЧДЦ=0; ЧН=нет; ЧГ=0") + "%");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОтчетовОбработкаЗапросаОбновления()
	
	Элементы.СписокОтчетов.Обновить();
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции_МобильныйКлиент

&НаСервере
Процедура МК_НастроитьЭлементыФормы()
	
	// Общие.
	СворачиваниеЭлементовПоВажности = СворачиваниеЭлементовФормыПоВажности.НеИспользовать;
	ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	
	МК_ЭлементыСтиля = МК_ПовтИсп.ЭлементыСтиля();
	
	Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	Элементы.МК_ГруппаПереключателиСтраниц.Видимость = Истина;
	
	Элементы.ГруппаКалендарьОтчеты.ЦветФона = ЦветаСтиля.МК_ЦветФонаГруппы;
	Элементы.ГруппаСписок.ЦветФона = ЦветаСтиля.МК_ЦветФонаГруппы;
	Элементы.ГруппаОтчеты.ЦветФона = ЦветаСтиля.МК_ЦветФонаГруппы;
	Элементы.ГруппаОтчеты.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	Элементы.МК_ДекорацияОтступ.Видимость = Истина;
	Элементы.МК_ГруппаПереключателиСтраниц.ЦветФона = ЦветаСтиля.МК_ЦветФонаГруппы;
	
	Элементы.ТаблицаОбщаяКомандаОбсуждения.Видимость = Ложь;
	Элементы.СписокОбщаяКомандаОбсуждения.Видимость = Ложь;
	Элементы.ТаблицаОбщаяКомандаСоздатьПисьмоНаОсновании.Видимость = Ложь;
	Элементы.СписокОбщаяКомандаСоздатьПисьмоНаОсновании.Видимость = Ложь;
	
	Элементы.ГруппаКалендарьОтчеты.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	// Дата отбора.
	Элементы.ДатаОтбораПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	Элементы.ДатаОтбораПолеВвода.Заголовок = НСтр("ru = 'Сведения на дату'");
	Элементы.ДатаОтбораПолеВвода.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	Элементы.ДатаОтбораПолеВвода.Видимость = Истина;
	
	Элементы.ДатаОтбора.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	Элементы.ДатаОтбора.Видимость = Ложь;
	Элементы.ДатаОтбора.ОтображатьТекущуюДату = Ложь;
	
	// Список отчетов.
	Элементы.СписокОтчетов.Шапка = Ложь;
	Элементы.СписокОтчетов.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	Элементы.МК_СписокГруппаКолонок.Видимость = Истина;
	Элементы.СписокОтчетовСправа.Видимость = Ложь;
	
	Элементы.Переместить(Элементы.СписокОтчетовДата, Элементы.МК_ПерваяСтрока);
	Элементы.Переместить(Элементы.СписокОтчетовТип, Элементы.МК_ПерваяСтрока);
	Элементы.Переместить(Элементы.СписокОтчетовСотрудник, Элементы.МК_ТретьяСтрока);
	
	Элементы.Переместить(Элементы.СписокОтчетовДлительностьРабот, Элементы.МК_ДлительностьОбщая);
	Элементы.Переместить(Элементы.СписокОтчетовДлительностьРабочая, Элементы.МК_ДлительностьРабочая);
	
	Элементы.СписокОтчетовСотрудник.ЦветТекста = ЦветаСтиля.МК_ЦветАвтораИсполнителя;
	Элементы.СписокОтчетовСотрудник.Шрифт = ШрифтыСтиля.МелкийШрифтТекста;
	Элементы.СписокОтчетовСотрудник.Высота = 1;
	
	Элементы.СписокОтчетовДата.Формат = НСтр("ru='ДФ=''dd MMMM yyyy'''");
	Элементы.СписокОтчетовДата.Ширина = 0;
	Элементы.СписокОтчетовДата.РастягиватьПоГоризонтали = Истина;
	
	Элементы.СписокОтчетовТип.Ширина = 3;
	Элементы.СписокОтчетовТип.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
	Элементы.СписокОтчетовТип.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	
	Элементы.МК_ДлительностьОбщаяЗаголовок.ЦветТекста = ЦветаСтиля.МК_ЦветАвтораИсполнителя;
	Элементы.МК_ДлительностьОбщаяЗаголовок.Шрифт = ШрифтыСтиля.МелкийШрифтТекста;
	Элементы.МК_ДлительностьОбщаяЗаголовок.Ширина = 5;
	
	Элементы.МК_ДлительностьРабочаяЗаголовок.ЦветТекста = ЦветаСтиля.МК_ЦветАвтораИсполнителя;
	Элементы.МК_ДлительностьРабочаяЗаголовок.Шрифт = ШрифтыСтиля.МелкийШрифтТекста;
	Элементы.МК_ДлительностьРабочаяЗаголовок.Ширина = 7;
	
	МК_ОформитьКолонкуДлительности(Элементы.СписокОтчетовДлительностьРабот);
	МК_ОформитьКолонкуДлительности(Элементы.СписокОтчетовДлительностьРабочая);
	
	// Контроль по датам.
	Элементы.Отчеты.Шапка = Ложь;
	Элементы.Отчеты.Подвал = Ложь;
	Элементы.ОтчетыПроцентФондаЗаНеделю.Видимость = Ложь;
	Элементы.ОтчетыДень.Видимость = Ложь;
	Элементы.Отсутствие.Видимость = Ложь;
	
	Элементы.ОтчетыНеделя.Группировка = ГруппировкаКолонок.Вертикальная;
	Элементы.Сотрудник.Высота = 2;
	Элементы.Сотрудник.РастягиватьПоГоризонтали = Истина;
	Элементы.ОтчетыНеделя.ФиксацияВТаблице = ФиксацияВТаблице.Право;
	Элементы.ОтчетыНеделя.Ширина = 8;
	
	ПриИзмененииПараметровЭкранаНаСервере();
	
	МК_СброситьОформлениеПереключателейСтраницПредпросмотра(ЭтотОбъект);
	МК_ПереключитьНаСтраницу(ЭтотОбъект, Элементы.СтраницаПоДатам,
		Элементы.МК_КнопкаСтраницаПоДатам);
	
КонецПроцедуры

&НаСервере
Процедура МК_ОформитьКолонкуДлительности(Колонка)
	
	Колонка.ЦветТекста = ЦветаСтиля.МК_ЦветАвтораИсполнителя;
	Колонка.Шрифт = ШрифтыСтиля.МелкийШрифтТекста;
	Колонка.Ширина = 4;
	Колонка.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Лево;
	Колонка.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура МК_ПереключитьНаСтраницу(Форма, Страница, Кнопка)

	Форма.Элементы.ГруппаСтраницы.ТекущаяСтраница = Страница;
	МК_СброситьОформлениеПереключателейСтраницПредпросмотра(Форма);
	МК_КлиентСервер.ОформитьКнопкуФильтра(Форма.МК_ЭлементыСтиля, Кнопка, Истина, Истина);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура МК_СброситьОформлениеПереключателейСтраницПредпросмотра(Форма)
	
	МК_КлиентСервер.ОформитьКнопкуФильтра(
		Форма.МК_ЭлементыСтиля, Форма.Элементы.МК_КнопкаСтраницаСписком, Истина, Ложь);
		
	МК_КлиентСервер.ОформитьКнопкуФильтра(
		Форма.МК_ЭлементыСтиля, Форма.Элементы.МК_КнопкаСтраницаПоДатам, Истина, Ложь);

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииПараметровЭкранаНаСервере()
	
	ЭтоМобильныйСБольшимЭкраном = МК_ВызовСервера.ЭтоМобильныйСБольшимЭкраном();
	ЭтоМобильныйВПортретномРежиме = МК_ВызовСервера.ЭтоМобильныйВПортретномРежиме();
	
	Если ЭтоМобильныйСБольшимЭкраном И Не ЭтоМобильныйВПортретномРежиме Тогда
		Элементы.ГруппаКалендарьОтчеты.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		Элементы.ДатаОтбора.Видимость = Истина;
		Элементы.ДатаОтбораПолеВвода.Видимость = Ложь;
	Иначе
		Элементы.ДатаОтбора.Видимость = Ложь;
		Элементы.ДатаОтбораПолеВвода.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#КонецОбласти
