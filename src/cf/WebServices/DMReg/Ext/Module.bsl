
#Область ПрограммныйИнтерфейс

// Регистрирует документ в системе и возвращает рег. данные.
//
// Параметры:
//  DocumentInfo - ОбъектXDTO - Структура, содержащиая данные регистрационного документа.
// 
// Возвращаемое значение:
// 	тип XDTO - рег. данные или информация об ошибке
//
Функция RegisterDocument(DocumentInfo) Экспорт
	
	Попытка
		
		Возврат ЗарегистрироватьДокумент(DocumentInfo);
		
	Исключение
		
		DMRegError = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.1c.ru/DMReg", "DMRegError"));
		DMRegError.Subject = НСтр("ru = 'Ошибка при регистрации документа'");
		DMRegError.Description = ОписаниеОшибки();
		Возврат DMRegError;
		
	КонецПопытки;
	
КонецФункции

Функция GetNewBarCodeNum()

	Попытка
		
		Возврат ШтрихкодированиеСервер.ОчереднойНомер();
		
	Исключение
		
		DMRegError = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.1c.ru/DMReg", "DMRegError"));
		DMRegError.Subject = НСтр("ru = 'Ошибка при получении нового значения штрихкода'");
		DMRegError.Description = ОписаниеОшибки();
		Возврат DMRegError;
		
	КонецПопытки;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗарегистрироватьДокумент(DocumentInfo)
	
	Если DocumentInfo.Тип() <> ФабрикаXDTO.Тип("http://www.1c.ru/DMReg", "DMDocumentInfo") Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка вызова веб-сервиса. Обратитесь к администратору'");
	КонецЕсли;
	Зарегистрировал = Сотрудники.ОсновнойСотрудник();
	Если ЗначениеЗаполнено(DocumentInfo.RegisteredByID) Тогда 
		СсылкаНаЗарегистрировал = Справочники.Пользователи.ПолучитьСсылку(
			Новый УникальныйИдентификатор(DocumentInfo.RegisteredByID));
		
		Если ОбщегоНазначения.СсылкаСуществует(СсылкаНаЗарегистрировал) Тогда
			Зарегистрировал = Сотрудники.ОсновнойСотрудникПользователя(СсылкаНаЗарегистрировал);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Зарегистрировал) Тогда
		ВызватьИсключение НСтр("ru = 'Не заполнен регистратор документа. Обратитесь к администратору'");
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		СсылкаДокумент = НайтиСоздатьДокумент(DocumentInfo.DocumentID,
			DocumentInfo.DocumentName, DocumentInfo.DocumentHeader);
		ДокументОбъект = СсылкаДокумент.ПолучитьОбъект();
		
		ТребуетсяЗапись = Ложь;
		Если DocumentInfo.DocumentTypeID <> 
			СокрЛП(ОбщегоНазначенияДокументооборотКлиентСервер.ПустойУникальныйИдентификатор()) Тогда 
			ВидДокумента = СоздатьЗаполнитьДанныеДляДокумента(
				DocumentInfo.DocumentTypeID, "ВидыДокументов", "ВидДокумента",
				ДокументОбъект, ТребуетсяЗапись, DocumentInfo.DocumentTypeIndex);
		Иначе 
			ВидДокумента = МиграцияДанныхИзВнешнихСистемДО21.НайтиСоздатьВидДокумента(
				DocumentInfo.DocumentClass);
		КонецЕсли;
		
		НоменклатураДел = СоздатьЗаполнитьДанныеДляДокумента(
			DocumentInfo.CaseFileCatalogID, "НоменклатураДел", "НоменклатураДел",
			ДокументОбъект, ТребуетсяЗапись, DocumentInfo.CaseFileCatalogIndex);
		Организация = СоздатьЗаполнитьДанныеДляДокумента(
			DocumentInfo.CompanyID, "Организации", "Организация",
			ДокументОбъект, ТребуетсяЗапись, DocumentInfo.CompanyIndex);
		Контрагент = СоздатьЗаполнитьДанныеДляДокумента(
			DocumentInfo.CounterpartyByID, "Контрагенты", "Контрагент",
			ДокументОбъект, ТребуетсяЗапись, DocumentInfo.CounterpartyIndex);
		Подразделение = СоздатьЗаполнитьДанныеДляДокумента(
			DocumentInfo.DepartmentID, "СтруктураПредприятия", "Подразделение",
			ДокументОбъект, ТребуетсяЗапись, DocumentInfo.DepartmentIndex);
		Проект = СоздатьЗаполнитьДанныеДляДокумента(
			DocumentInfo.ProjectByID, "Проекты", "Проект",
			ДокументОбъект, ТребуетсяЗапись, DocumentInfo.ProjectByIndex);
			
		Ответственный = Справочники.Сотрудники.ПустаяСсылка();
		Если ЗначениеЗаполнено(DocumentInfo.ResponsibleID) Тогда 
			СсылкаНаОтветственный = Справочники.Пользователи.ПолучитьСсылку(
				Новый УникальныйИдентификатор(DocumentInfo.ResponsibleID));
			
			Если ОбщегоНазначения.СсылкаСуществует(СсылкаНаОтветственный) Тогда
				Ответственный = Сотрудники.ОсновнойСотрудникПользователя(СсылкаНаОтветственный);
				
				Если ДокументОбъект.Ответственный <> Ответственный Тогда 
					ТребуетсяЗапись = Истина;
				КонецЕсли;
			КонецЕсли;
			Индекс = DocumentInfo.ResponsibleIndex;
			// Если заполнен индекс, то запишем его тоже, чтобы он смог участвовать в нумерации
			Если ЗначениеЗаполнено(Индекс) И ЗначениеЗаполнено(Ответственный) Тогда
				Если РегистрыСведений.ИндексыНумерации.ПолучитьИндексНумерации(Ответственный) <> Индекс Тогда
					РегистрыСведений.ИндексыНумерации.ЗаписатьИндексНумерации(Ответственный, Индекс);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ТребуетсяЗапись Тогда
			ДокументОбъект.ВидДокумента = ВидДокумента;
			ДокументОбъект.Организация = Организация;
			ДокументОбъект.Подразделение = Подразделение;
			ДокументОбъект.Проект = Проект;
			ДокументОбъект.Контрагент = Контрагент;
			ДокументОбъект.НоменклатураДел = НоменклатураДел;
			ДокументОбъект.Наименование = DocumentInfo.DocumentName;
			ДокументОбъект.Заголовок = DocumentInfo.DocumentHeader;
			ДокументОбъект.Ответственный = Ответственный;
			
			ДокументОбъект.ОбменДанными.Загрузка = Истина;
			ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов");
			ДокументОбъект.ДополнительныеСвойства.Вставить("РазрешитьЗаписьОбъектаИзДругойСистемы", Истина);
			ДокументОбъект.Записать();
		КонецЕсли;
		
		ТекстОшибки = "";
		
		ПараметрыРегистрации = Новый Структура;
		ПараметрыРегистрации.Вставить("Зарегистрировал", Зарегистрировал);
		
		// Запись связанного документа
		Если ЗначениеЗаполнено(DocumentInfo.RelatedDocumentID) Тогда 
			СвязанныйДокумент = НайтиСоздатьДокумент(DocumentInfo.RelatedDocumentID,,,
				DocumentInfo.RelatedDocumentNumber);
			Если ЗначениеЗаполнено(СвязанныйДокумент) Тогда 
				ПараметрыРегистрации.Вставить("СвязанныйОбъект", СвязанныйДокумент);
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыРегистрации.Вставить("РазрешитьЗаписьОбъектаИзДругойСистемы", Истина);
		ПараметрыРегистрации.Вставить("ДатаРегистрации", DocumentInfo.Date);
		Если Не Делопроизводство.ЗарегистрироватьПредмет(СсылкаДокумент, ТекстОшибки,, ПараметрыРегистрации) Тогда
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Реквизиты = Новый Структура("РегистрационныйНомер, ДатаРегистрации, ЧисловойНомер");
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаДокумент, Реквизиты);
	
	DMRegNum = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.1c.ru/DMReg", "DMRegNum"));
	DMRegNum.Number = ЗначенияРеквизитов.РегистрационныйНомер;
	DMRegNum.Date = ЗначенияРеквизитов.ДатаРегистрации;
	DMRegNum.DigitalNumber = ЗначенияРеквизитов.ЧисловойНомер;
	Возврат DMRegNum;
	
КонецФункции

Функция СоздатьЗаполнитьДанныеДляДокумента(ID, ИмяОбъекта, ИмяРеквизита, Документ, ТребуетсяЗапись, Индекс)
	
	СсылкаНаОбъект = Неопределено;
	Если ЗначениеЗаполнено(ID) Тогда 
		СсылкаНаОбъект = Справочники[ИмяОбъекта].ПолучитьСсылку(
			Новый УникальныйИдентификатор(ID));
		
		Если ОбщегоНазначения.СсылкаСуществует(СсылкаНаОбъект) Тогда
			Если Документ[ИмяРеквизита] <> СсылкаНаОбъект Тогда 
				ТребуетсяЗапись = Истина;
			КонецЕсли;
		Иначе
			НовыйОбъект = Справочники[ИмяОбъекта].СоздатьЭлемент();
			НовыйОбъект.УстановитьСсылкуНового(СсылкаНаОбъект);
			НовыйОбъект.ОбменДанными.Загрузка = Истина;
			НовыйОбъект.Записать();
			ТребуетсяЗапись = Истина;
		КонецЕсли;
	КонецЕсли;
	// Если заполнен индекс, то запишем его тоже, чтобы он смог участвовать в нумерации
	Если ЗначениеЗаполнено(Индекс) И ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Если РегистрыСведений.ИндексыНумерации.ПолучитьИндексНумерации(СсылкаНаОбъект) <> Индекс Тогда
			РегистрыСведений.ИндексыНумерации.ЗаписатьИндексНумерации(СсылкаНаОбъект, Индекс);
		КонецЕсли;
	КонецЕсли;
	
	Возврат СсылкаНаОбъект;
	
КонецФункции

Функция НайтиСоздатьДокумент(DocumentID, 
	Наименование = Неопределено, Заголовок = Неопределено, РегНомер = Неопределено)
	
	СсылкаДокумент = Справочники.ДокументыПредприятия.ПолучитьСсылку(
		Новый УникальныйИдентификатор(DocumentID));
			
	ДокументСуществует = ОбщегоНазначения.СсылкаСуществует(СсылкаДокумент);
	Если Не ДокументСуществует Тогда
		ДокументОбъект = Справочники.ДокументыПредприятия.СоздатьЭлемент();
		ДокументОбъект.УстановитьСсылкуНового(СсылкаДокумент);
		ДокументОбъект.ИсточникДанных = Справочники.ИсточникиДанных.ДО21;
		Если ЗначениеЗаполнено(Наименование) Тогда 
			ДокументОбъект.Наименование = Наименование;
		КонецЕсли;
		Если ЗначениеЗаполнено(Заголовок) Тогда 
			ДокументОбъект.Заголовок = Заголовок;
		КонецЕсли;
		Если ЗначениеЗаполнено(РегНомер) Тогда 
			ДокументОбъект.РегистрационныйНомер = РегНомер;
		КонецЕсли;
		
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов");
		ДокументОбъект.ДополнительныеСвойства.Вставить("РазрешитьЗаписьОбъектаИзДругойСистемы", Истина);
		ДокументОбъект.Записать();
	КонецЕсли;
	
	Возврат СсылкаДокумент;
	
КонецФункции

#КонецОбласти
