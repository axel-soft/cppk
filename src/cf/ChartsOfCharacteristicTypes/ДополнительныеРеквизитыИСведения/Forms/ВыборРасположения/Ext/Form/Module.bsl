
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Метаданное = УправлениеСвойствамиСлужебный.МетаданныеВладельцаЗначенийСвойствНабора(Параметры.Набор);
	
	Если Метаданное = Неопределено Тогда
		Отказ = Истина;
	
	Иначе
		
		ИмяОбъекта = Метаданное.ПолноеИмя();
		ИмяТипа = СтрЗаменить(ИмяОбъекта, ".", НСтр("ru = 'Ссылка'") + ".");
		
		Для каждого Элемент Из Метаданное.Формы Цикл
			Если Элемент = Метаданное.ОсновнаяФормаДляВыбора
				Или Элемент = Метаданное.ОсновнаяФормаСписка Тогда
				Продолжить;
			КонецЕсли;
			Попытка
				Если Элемент = Метаданное.ОсновнаяФормаГруппы
					Или Элемент = Метаданное.ОсновнаяФормаДляВыбораГруппы Тогда
					Продолжить;
				КонецЕсли;
			Исключение
			КонецПопытки;
			ФормыОбъекта.Добавить(Элемент.Имя, Элемент.Синоним);
		КонецЦикла;
		
	КонецЕсли;
	
	Если Параметры.Свойство("ТекущееЗначение") И Не ПустаяСтрока(Параметры.ТекущееЗначение) Тогда
		Для Каждого Элемент Из СтрРазделить(Параметры.ТекущееЗначение, ";", Ложь) Цикл
			Запись = Текущие.Добавить();
			Запись.Имя = Элемент;
			Запись.Заголовок = Запись.Имя;
			
			Путь = СтрРазделить(Запись.Имя, ".(,)", Истина);
			Запись.Форма = Путь[0];
			Если Путь.Количество() > 1 Тогда
				Запись.Группа = Путь[1];
			КонецЕсли;
			Если Путь.Количество() > 2 Тогда
				Запись.Ориентир = Путь[2];
			КонецЕсли;
			Если Путь.Количество() > 3 Тогда
				Запись.ВНачало = Путь[3] <> "";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.РежимДерева Тогда
		Элементы.Текущие.Видимость = Ложь;
		Элементы.Ввести.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПараметрыПроверяемойФормы = Новый Структура;
	ПараметрыПроверяемойФормы.Вставить("СозданиеФормыДляРасположенияДопреквизитов", Истина);
	
	Для Каждого Элемент Из ФормыОбъекта Цикл
		Попытка
			Форма = ПолучитьФорму(
				СтрШаблон("%1.Форма.%2", ИмяОбъекта, Элемент.Значение),,,
				ЭтаФорма.УникальныйИдентификатор);
		Исключение
			//Произвольная форма с нестандартными параметрами.
			Продолжить;
		КонецПопытки;
		
		Если ТипЗнч(Форма) = Тип("ФормаКлиентскогоПриложения")
			И Форма.Параметры.Свойство("Ключ") И ТипЗнч(Форма.Параметры.Ключ) = Тип(ИмяТипа) Тогда
			
			Запись = Дерево.ПолучитьЭлементы().Добавить();
			Запись.Имя = Элемент.Значение;
			Запись.Заголовок = Элемент.Представление;
			ЗаполнитьЭлементы(Форма, Запись);
			
			Для Каждого Текущее Из Текущие Цикл
				Если Текущее.Форма = Элемент.Значение Тогда
					
					Если Текущее.Группа = "" Тогда
						Текущее.Заголовок = Элемент.Представление;
						СтрокаДерева = Запись;
						Элементы.Дерево.ТекущаяСтрока = Запись.ПолучитьИдентификатор();
					Иначе
						Поле = Форма.Элементы.Найти(Текущее.Группа);
						Если Поле = Неопределено Тогда
							Текущее.Заголовок = Элемент.Представление + ". " + Текущее.Группа;
							Элементы.Дерево.ТекущаяСтрока = Запись.ПолучитьИдентификатор();
						Иначе
							Текущее.Заголовок = Элемент.Представление + ". " + Поле.Заголовок;
							СтрокаДерева = АктивизироватьСтроку(Запись, Текущее.Группа);
						КонецЕсли;
					КонецЕсли;
					
					ТекОриентирЗаголовок = "";
					Если Текущее.Ориентир <> "" Тогда
						Попытка
							ТекОриентирЗаголовок = Форма.Элементы[Текущее.Ориентир].Заголовок;
						Исключение
						КонецПопытки;
						Если ПустаяСтрока(ТекОриентирЗаголовок) Тогда
							ТекОриентирЗаголовок = Текущее.Ориентир;
						КонецЕсли;
					КонецЕсли;
					
					Если СтрокаДерева <> Неопределено Тогда
						СтрокаДерева.ОриентирИмя = Текущее.Ориентир;
						СтрокаДерева.ОриентирЗаголовок = ТекОриентирЗаголовок;
						СтрокаДерева.ВНачало = Текущее.ВНачало;
						ДеревоПриАктивизацииСтроки(Элементы.Дерево);
					КонецЕсли;
					
					Если Текущее.Ориентир <> "" Или Текущее.ВНачало Тогда
						Текущее.Заголовок = СтрШаблон("%1 (%2, %3)",
							Текущее.Заголовок,
							ТекОриентирЗаголовок,
							?(Текущее.ВНачало, Элементы.ВНачало.Заголовок, ""));
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		Форма = Неопределено;
	КонецЦикла;
	
	Если Текущие.Количество() = 0 И Дерево.ПолучитьЭлементы().Количество() > 0 Тогда
		Элементы.Дерево.Развернуть(Дерево.ПолучитьЭлементы()[0].ПолучитьИдентификатор());
	КонецЕсли;
	
	УстановитьВидимостьТаблиц();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьТаблиц()
	
	Если Не Параметры.РежимДерева
		И (Дерево.ПолучитьЭлементы().Количество() > 1 Или Текущие.Количество() > 1) Тогда
		Элементы.Дерево.Видимость = Ложь;
		Элементы.Текущие.Видимость = Истина;
		Элементы.ГруппаПараметры.Видимость = Ложь;
		Если Текущие.Количество() = 0 Тогда
			Текущие.Добавить();
		КонецЕсли;
	Иначе
		Элементы.Дерево.Видимость = Истина;
		Элементы.Текущие.Видимость = Ложь;
		Элементы.ГруппаПараметры.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЭлементы(Группа, Родитель)
	
	Для Каждого Элемент Из Группа.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы")
			И (Элемент.Вид = ВидГруппыФормы.ОбычнаяГруппа
			Или Элемент.Вид = ВидГруппыФормы.Страницы
			Или Элемент.Вид = ВидГруппыФормы.Страница) Тогда
			
			Запись = Родитель.ПолучитьЭлементы().Добавить();
			Запись.Имя = Элемент.Имя;
			Запись.Заголовок = Элемент.Заголовок;
			Если ПустаяСтрока(Запись.Заголовок) Тогда
				Запись.Заголовок = Запись.Имя;
			КонецЕсли;
			Запись.ТолькоПросмотр = Элемент.Вид = ВидГруппыФормы.Страницы; 
			ЗаполнитьЭлементы(Элемент, Запись);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция АктивизироватьСтроку(Родитель, Имя)
	
	Для Каждого Строка Из Родитель.ПолучитьЭлементы() Цикл
		Если Строка.Имя = Имя Тогда
			Элементы.Дерево.ТекущаяСтрока = Строка.ПолучитьИдентификатор();
			Возврат Строка;
		КонецЕсли;
		Подчиненная = АктивизироватьСтроку(Строка, Имя);
		Если Подчиненная <> Неопределено Тогда
			Элементы.Дерево.Развернуть(Строка.ПолучитьИдентификатор());
			Возврат Подчиненная;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	
	Если ТекущиеДанные.ТолькоПросмотр Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Этот элемент недоступен для выбора'"), 3);
		Возврат;	
	КонецЕсли;
	
	Родитель = ТекущиеДанные.ПолучитьРодителя();
	Пока Родитель <> Неопределено Цикл
		ФормаИмя = Родитель.Имя;
		ФормаЗаголовок = Родитель.Заголовок;
		Родитель = Родитель.ПолучитьРодителя();
	КонецЦикла;
	
	Если ФормаИмя = Неопределено Тогда
		ТекИмя = ТекущиеДанные.Имя + ".";
		ТекЗаголовок = ТекущиеДанные.Заголовок;
	Иначе
		ТекИмя = ФормаИмя + "." + ТекущиеДанные.Имя;
		ТекЗаголовок = ФормаЗаголовок + ". " + ТекущиеДанные.Заголовок;
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекущиеДанные.ОриентирИмя)
		Или ТекущиеДанные.ВНачало Тогда
		ТекИмя = СтрШаблон("%1(%2,%3)", ТекИмя, ТекущиеДанные.ОриентирИмя, ?(ТекущиеДанные.ВНачало, 1, ""));
		ТекЗаголовок = СтрШаблон("%1 (%2, %3)", ТекЗаголовок, ТекущиеДанные.ОриентирЗаголовок, ?(ТекущиеДанные.ВНачало, Элементы.ВНачало.Заголовок, "")); 
	КонецЕсли;
	
	ОповеститьОВыборе(Новый Структура("Имя,Заголовок", ТекИмя, ТекЗаголовок));
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗаголовокПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	ТекущиеДанные.Имя = ТекущиеДанные.Заголовок

КонецПроцедуры

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Ориентир = ТекущиеДанные.ОриентирЗаголовок;
		ВНачало = ТекущиеДанные.ВНачало;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущиеЗаголовокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФорму(ЭтаФорма.ИмяФормы,
		Новый Структура("Набор,ТекущееЗначение,РежимДерева", Параметры.Набор, Элементы.Текущие.ТекущиеДанные.Имя, Истина),
		Элемент,
		Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущиеЗаголовокОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.Текущие.ТекущиеДанные;
	ТекущиеДанные.Имя = ВыбранноеЗначение.Имя;
	ТекущиеДанные.Заголовок = ВыбранноеЗначение.Заголовок;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущиеИмяПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Текущие.ТекущиеДанные;
	ТекущиеДанные.Имя = СтрЗаменить(ТекущиеДанные.Имя, " ", "");
	
КонецПроцедуры

&НаКлиенте
Процедура ОриентирНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	ФормаИмя = ТекущиеДанные.Имя;
	Родитель = ТекущиеДанные.ПолучитьРодителя();
	Пока Родитель <> Неопределено Цикл
		ФормаИмя = Родитель.Имя;
		Родитель = Родитель.ПолучитьРодителя();
	КонецЦикла;
	
	Попытка
		Форма = ПолучитьФорму(
			ИмяОбъекта + "." + НСтр("ru = 'Форма'") + "." + ФормаИмя,,,
			ЭтаФорма.УникальныйИдентификатор);
	Исключение
		Возврат;
	КонецПопытки;
	
	Список = Новый СписокЗначений;
	ТекЭлемент = Неопределено;
	
	Для Каждого Элемент Из 
		?(ФормаИмя = ТекущиеДанные.Имя, Форма.ПодчиненныеЭлементы, Форма.Элементы[ТекущиеДанные.Имя].ПодчиненныеЭлементы) Цикл
		
		Если СтрНачинаетсяС(Элемент.Имя, "ДополнительныйРеквизитЗначение_") Тогда
			Продолжить;
		КонецЕсли;
		
		Попытка
			Эл = Список.Добавить(Элемент.Имя, Элемент.Заголовок);
		Исключение
			Продолжить;
		КонецПопытки;
		
		Если ПустаяСтрока(Эл.Представление) Тогда
			Эл.Представление = Эл.Значение;
		КонецЕсли;	
			
		Если Элемент.Имя = ТекущиеДанные.ОриентирИмя Тогда
			ТекЭлемент = Эл;	
		КонецЕсли;
	КонецЦикла;

	Список.ПоказатьВыборЭлемента(
		Новый ОписаниеОповещения("ОриентирЗавершениеВыбора", ЭтотОбъект),
		Элементы.Ориентир.Заголовок,
		ТекЭлемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОриентирЗавершениеВыбора(Результат, ДопПараметры) Экспорт

	Если Результат <> Неопределено Тогда
		Ориентир = Результат.Представление;
		ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ТекущиеДанные.ОриентирИмя = Результат.Значение;
			ТекущиеДанные.ОриентирЗаголовок = Результат.Представление;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОриентирПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.ОриентирИмя = Ориентир;
		ТекущиеДанные.ОриентирЗаголовок = Ориентир;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВНачалоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.ВНачало = ВНачало;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)

	Если Элементы.Дерево.Видимость Тогда
		ДеревоВыбор(Элементы.Дерево, Неопределено, Неопределено, Ложь);
	
	Иначе
		Имена = Новый Массив;
		Заголовки = Новый Массив;
		Для Каждого Элемент Из Текущие Цикл
			Если ПустаяСтрока(Элемент.Имя) Тогда
				Продолжить;
			КонецЕсли;
			Имена.Добавить(Элемент.Имя);
			Заголовки.Добавить(?(ПустаяСтрока(Элемент.Заголовок), Элемент.Имя, Элемент.Заголовок));
		КонецЦикла;
		
		ОповеститьОВыборе(Новый Структура("Имя,Заголовок",
				СтрСоединить(Имена, ";"),
				СтрСоединить(Заголовки, "; ")));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Ввести(Команда)

	Если Элементы.ТекущиеИмя.Видимость = Ложь Тогда
		Элементы.Дерево.Видимость = Ложь;
		Элементы.Текущие.Видимость = Истина;
		Элементы.ТекущиеИмя.Видимость = Истина;
		Элементы.ТекущиеИмяЗаголовок.Видимость = Истина;
		Элементы.ТекущиеЗаголовок.Видимость = Ложь;
		Элементы.ГруппаПараметры.Видимость = Ложь;
	Иначе
		УстановитьВидимостьТаблиц();
		Элементы.ТекущиеИмя.Видимость = Ложь;
		Элементы.ТекущиеИмяЗаголовок.Видимость = Ложь;
		Элементы.ТекущиеЗаголовок.Видимость = Истина;
		Элементы.ГруппаПараметры.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры

