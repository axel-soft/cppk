
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СотрудникиПустаяСсылка = Справочники.Сотрудники.ПустаяСсылка();
	
	РаботаСБизнесПроцессамиВызовСервера.УстановитьФорматДаты(Элементы.ИсторияЦикловДатаИсполнения);
	РаботаСБизнесПроцессамиВызовСервера.УстановитьФорматДаты(Элементы.ИсторияИсполнителяДатаИсполнения);
	
	ЗадачаСсылка = Параметры.ЗадачаСсылка;
	БизнесПроцесс = ЗадачаСсылка.БизнесПроцесс;
	
	НомерИтерации = 0;
	
	НайденнаяСтрока = БизнесПроцесс.РезультатыПодписания.Найти(ЗадачаСсылка, "ЗадачаПроцесса");
	Если НайденнаяСтрока <> Неопределено Тогда 
		НомерИтерации = НайденнаяСтрока.НомерИтерации;
	Иначе	
		НомерИтерации = БизнесПроцесс.НомерИтерации;
	КонецЕсли;	
	  
	// заполнить дерево
	ДеревоИсторияИсполнителя = РеквизитФормыВЗначение("ИсторияИсполнителя");
	
	НомераИтераций = БизнесПроцесс.РезультатыПодписания.Выгрузить(,"НомерИтерации");
	НомераИтераций.Свернуть("НомерИтерации",);
	НомераИтераций.Сортировать("НомерИтерации Убыв");
	
	Если БизнесПроцесс.Этапы.Количество() = 0 Тогда
		Элементы.ИсторияИсполнителяПорядокСогласования.Видимость = Ложь;
	КонецЕсли;	
	
	Для Каждого СтрокаИтерации Из НомераИтераций Цикл
		
		Если СтрокаИтерации.НомерИтерации > НомерИтерации Тогда 
			Продолжить;
		КонецЕсли;	
		
		Если СтрокаИтерации.НомерИтерации = БизнесПроцесс.НомерИтерации Тогда // текущая итерация
			
			СтрокаДереваЦикл = ДеревоИсторияИсполнителя.Строки.Добавить();
			СтрокаДереваЦикл.Исполнитель = "Цикл " + СтрокаИтерации.НомерИтерации + НСтр("ru = ' (текущий)'");
			СтрокаДереваЦикл.НомерИтерации = СтрокаИтерации.НомерИтерации;
			
			Если БизнесПроцесс.Этапы.Количество() <> 0 Тогда
				ЭтапыПроцесса = БизнесПроцесс.Этапы;
			Иначе
				ЭтапыПроцесса = Новый ТаблицаЗначений;
				ЭтапыПроцесса.Колонки.Добавить("Идентификатор");
				ЭтапыПроцесса.Колонки.Добавить("НаименованиеЭтапа");
				ЭтапыПроцесса.Колонки.Добавить("ПорядокВыполненияУчастниками");
				ЭтапыПроцесса.Колонки.Добавить("Пройден");
				
				ФиктивныйЭтап = ЭтапыПроцесса.Добавить();
				ФиктивныйЭтап.Идентификатор = УникальныйИдентификаторПустой();
				ФиктивныйЭтап.НаименованиеЭтапа = НСтр("ru = 'Подписать'");
				ФиктивныйЭтап.ПорядокВыполненияУчастниками = Перечисления.ПорядокВыполненияЭтапаПроцесса.Параллельно;
				ФиктивныйЭтап.Пройден = Ложь;
				
			КонецЕсли;	
			
			Для Каждого Этап Из ЭтапыПроцесса Цикл
				
				ОднаСтрокаУчастников = БизнесПроцесс.Участники.Найти(Этап.Идентификатор, "Этап");
				Если ОднаСтрокаУчастников = Неопределено Тогда
					Продолжить; // если в этапе нет участников, не выводим его.
				КонецЕсли;	

				СтрокаДереваЭтап = СтрокаДереваЦикл.Строки.Добавить();
				СтрокаДереваЭтап.Исполнитель = Этап.НаименованиеЭтапа;
				СтрокаДереваЭтап.НомерИтерации = СтрокаИтерации.НомерИтерации;
				
				Для Каждого Строка Из БизнесПроцесс.Участники Цикл
					
					Если Строка.ТочкаМаршрута = БизнесПроцессы.Подписание.ТочкиМаршрута.ОбработатьРезультат Тогда
						Продолжить;
					КонецЕсли;	
					Если Строка.Этап <> Этап.Идентификатор Тогда
						Продолжить;
					КонецЕсли;	 
					
					ОтборСтрок = Новый Структура("Идентификатор, НомерИтерации",
						Строка.Идентификатор, НомерИтерации);
						
					НайденныеСтроки = БизнесПроцесс.РезультатыПодписания.НайтиСтроки(ОтборСтрок);
					РезПодписания = Неопределено;
					Если НайденныеСтроки.Количество() <> 0 Тогда
						РезПодписания = НайденныеСтроки[0];
					КонецЕсли;	

					СтрокаЗадачаИсполнителя = Неопределено;
					Если РезПодписания <> Неопределено Тогда
						СтрокаЗадачаИсполнителя = РезПодписания.ЗадачаПроцесса;
					КонецЕсли;
					
					СтрокаДереваИсполнитель = СтрокаДереваЭтап.Строки.Добавить();
					СтрокаДереваИсполнитель.ЗадачаИсполнителя = СтрокаЗадачаИсполнителя;
					
					Если Этап <> Неопределено Тогда
						СтрокаДереваИсполнитель.ПорядокВыполненияУчастниками = Этап.ПорядокВыполненияУчастниками;
						СтрокаДереваИсполнитель.Пройдена = Этап.Пройден;
					КонецЕсли;
					
					СтрокаДереваИсполнитель.НомерИтерации = БизнесПроцесс.НомерИтерации;
					
					СтрокаДереваИсполнитель.Исполнитель = Строка.Подписывающий;
					
					Если ЗначениеЗаполнено(СтрокаЗадачаИсполнителя) Тогда 
												
						Если СтрокаЗадачаИсполнителя.Выполнена Тогда
							СтрокаДереваИсполнитель.ДатаИсполнения = СтрокаЗадачаИсполнителя.ДатаИсполнения;
						КонецЕсли;                                                                            
						
						СтрокаДереваИсполнитель.РезультатВыполнения = СтрокаЗадачаИсполнителя.РезультатВыполнения;
						
						Если ЗначениеЗаполнено(СтрокаЗадачаИсполнителя.РольИсполнителя) Тогда 
							СтрокаДереваИсполнитель.ИсполнительПроцесса = СтрокаЗадачаИсполнителя.РольИсполнителя;
						Иначе					
							СтрокаДереваИсполнитель.ИсполнительПроцесса = СтрокаЗадачаИсполнителя.Исполнитель;
						КонецЕсли;
						
						Если РезПодписания <> Неопределено Тогда 
							СтрокаДереваИсполнитель.РезультатПодписания = РезПодписания.РезультатПодписания;
						КонецЕсли;
						
					Иначе
						СтрокаДереваИсполнитель.Исполнитель = Строка.Подписывающий;
					КонецЕсли;	
				КонецЦикла;	
				
			КонецЦикла;
			
		Иначе // история - прошлые циклы
			
			СтрокаДереваЦикл = ДеревоИсторияИсполнителя.Строки.Добавить();
			СтрокаДереваЦикл.Исполнитель = "Цикл " + СтрокаИтерации.НомерИтерации;
			СтрокаДереваЦикл.НомерИтерации = СтрокаИтерации.НомерИтерации;
			
			Для Каждого Строка Из БизнесПроцесс.РезультатыПодписания Цикл
				
				Если СтрокаИтерации.НомерИтерации <> Строка.НомерИтерации Тогда 
					Продолжить;
				КонецЕсли;	
				
				СтрокаЗадачаИсполнителя = Строка.ЗадачаПроцесса;
				
				СтрокаДереваИсполнитель = СтрокаДереваЦикл.Строки.Добавить();
				СтрокаДереваИсполнитель.ЗадачаИсполнителя = СтрокаЗадачаИсполнителя;
				
				СтрокаДереваИсполнитель.РезультатПодписания = Строка.РезультатПодписания;
				
				Если СтрокаЗадачаИсполнителя.Выполнена Тогда
					СтрокаДереваИсполнитель.ДатаИсполнения = СтрокаЗадачаИсполнителя.ДатаИсполнения;
				КонецЕсли;                                                                            					
				
				СтрокаДереваИсполнитель.РезультатВыполнения = СтрокаЗадачаИсполнителя.РезультатВыполнения;
				СтрокаДереваИсполнитель.НомерИтерации = Строка.НомерИтерации;
				СтрокаДереваИсполнитель.Пройдена = СтрокаЗадачаИсполнителя.Выполнена;
				
				СтрТаблУчастники = БизнесПроцесс.Участники.Найти(Строка.Идентификатор, "Идентификатор");
				Если СтрТаблУчастники <> Неопределено Тогда
					СтрокаДереваИсполнитель.Исполнитель = СтрТаблУчастники.Подписывающий;
				Иначе

					Если ЗначениеЗаполнено(СтрокаЗадачаИсполнителя.Исполнитель) Тогда 
						СтрокаДереваИсполнитель.Исполнитель = СтрокаЗадачаИсполнителя.Исполнитель;
					Иначе
						СтрокаДереваИсполнитель.Исполнитель = СтрокаЗадачаИсполнителя.РольИсполнителя;
					КонецЕсли;	
							
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаЗадачаИсполнителя.РольИсполнителя) Тогда 
					СтрокаДереваИсполнитель.ИсполнительПроцесса = СтрокаЗадачаИсполнителя.РольИсполнителя;
				Иначе					
					СтрокаДереваИсполнитель.ИсполнительПроцесса = СтрокаЗадачаИсполнителя.Исполнитель;
				КонецЕсли;
				
			КонецЦикла;	
			
		КонецЕсли;	
		
		
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(ДеревоИсторияИсполнителя, "ИсторияИсполнителя");
	
	Элементы.ГруппаИсторияЦиклов.Видимость = Ложь;
	Элементы.ГруппаИсторияИсполнителя.Видимость = Истина;
	Заголовок = НСтр("ru = 'История подписания'");
	
	Если ТолькоПросмотр Тогда 
		Элементы.ИсторияИсполнителя.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭлементыДерева = ИсторияИсполнителя.ПолучитьЭлементы();
	
	Если ЭлементыДерева.Количество() > 0 Тогда 
		ЭлементДерева = ЭлементыДерева[0];
		Элементы.ИсторияИсполнителя.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИсторияИсполнителя

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
