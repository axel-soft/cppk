
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВызватьИсключение ОбменЭДОДокументооборотКлиентСервер.ТекстСообщенияФункционалНеИспользуетсяВНовойВерсии();
	
	Элементы.СтраницыПредставленияВыбранного.ТекущаяСтраница = Элементы.СтраницаОжидание;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОтражениеВходящихЭДО" Тогда
		Элементы.СписокДокументовКОтражению.Обновить();
		ОбновитьДанныеВыделенногоДокумента(Истина);
	ИначеЕсли ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		Элементы.СписокДокументовКОтражению.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийБыстрыхОтборов

&НаКлиенте
Процедура ОрганизацияОтборПриИзменении(Элемент)
	
	УстановитьОтборСпискаПоЭлементу(СписокДокументовКОтражению, "Организация", ОрганизацияОтбор);
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, ОрганизацияОтбор);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентОтборПриИзменении(Элемент)
	
	УстановитьОтборСпискаПоЭлементу(СписокДокументовКОтражению, "Контрагент", КонтрагентОтбор);
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, КонтрагентОтбор);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаОтборПриИзменении(Элемент)
	
	УстановитьОтборСпискаПоЭлементу(СписокДокументовКОтражению, "ВидДокумента", ВидДокументаОтбор);
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, ВидДокументаОтбор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтборПриИзменении(Элемент)
	
	УстановитьОтборВСпискеПоПериоду(СписокДокументовКОтражению, "Дата", ПериодОтбор);
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, ПериодОтбор);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСпискаДокументов

&НаКлиенте
Процедура СписокДокументовКОтражениюПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ПослеАктивизацииСтрокиСпискаДокументов", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийДанныхДокумента

&НаКлиенте
Процедура НадписьОрганизацияВыбранногоНажатие(Элемент)
	
	Если ЗначениеЗаполнено(ОрганизацияВыбранного) Тогда
		ПоказатьЗначение(, ОрганизацияВыбранного);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьКонтрагентВыбранногоНажатие(Элемент)
	
	Если ЗначениеЗаполнено(КонтрагентВыбранного) Тогда
		ПоказатьЗначение(, КонтрагентВыбранного);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьФайлЭДОНажатие(Элемент)
	
	Если ЗначениеЗаполнено(ВыбранныйДокумент) Тогда
		ПоказатьЗначение(, ВыбранныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДокументПакета1Нажатие(Элемент)
	
	ОткрытьДокументПакета(1);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДокументПакета2Нажатие(Элемент)
	
	ОткрытьДокументПакета(2);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДокументПакетаОстальноеНажатие(Элемент)
	
	Если ДругиеДокументыПакета.Количество() = 3 Тогда
		
		ОткрытьДокументПакета(3);
		
	Иначе
		
		ПоказатьВыборОстальныхДокументовПакета();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВыборОстальныхДокументовПакета()
	
	СписокКВыбору = Новый СписокЗначений();
	
	НомерДокументаВПакете = 3;
	
	Пока НомерДокументаВПакете <= ДругиеДокументыПакета.Количество() Цикл
		СписокКВыбору.Добавить(НомерДокументаВПакете,
			ДругиеДокументыПакета[НомерДокументаВПакете-1].Представление, , );
		
		НомерДокументаВПакете = НомерДокументаВПакете+1;
	КонецЦикла;
	
	ОбработкаВыбора = Новый ОписаниеОповещения("ОбработатьВыборОстальногоДокументаПакета", ЭтотОбъект);
	
	ПоказатьВыборИзСписка(ОбработкаВыбора, СписокКВыбору, Элементы.НадписьДокументПакетаОстальное);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборОстальногоДокументаПакета(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено
		И ТипЗнч(Результат.Значение) = Тип("Число") Тогда
		
		ОткрытьДокументПакета(Результат.Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументПакета(НомерДокумента)
	
	Если ДругиеДокументыПакета.Количество() < НомерДокумента Тогда
		Возврат;
	КонецЕсли;
	
	ДокументДляОткрытия = ДругиеДокументыПакета[НомерДокумента-1].Значение;
	
	Если ЗначениеЗаполнено(ДокументДляОткрытия) Тогда
		ПоказатьЗначение(, ДокументДляОткрытия);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьДокумент(Команда)
	
	Если Не ЗначениеЗаполнено(ВыбранныйДокумент) Тогда
		Возврат;
	КонецЕсли;
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.НачатьСозданиеДокументаДО(ВыбранныйДокумент);
	
КонецПроцедуры

&НаКлиенте
Процедура НеСоздаватьДокумент(Команда)
	
	Если Не ЗначениеЗаполнено(ВыбранныйДокумент) Тогда
		Возврат;
	КонецЕсли;
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.УдалитьДокументЭДОИзСпискаКСозданиюВДО(ВыбранныйДокумент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПолучитьЭДО(Команда)
	
	//ИнтерфейсДокументовЭДОКлиент.НачатьОтправкуПолучениеДокументов(ЭтотОбъект); 
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьАвтоматически(Команда)
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.НачатьСозданиеДокументовДОВАвтоматическомРежиме(УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПолучениеПредставленияДокумента

&НаКлиенте
Процедура ПослеАктивизацииСтрокиСпискаДокументов()
	
	ОбновитьДанныеВыделенногоДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеВыделенногоДокумента(ОбновитьПринудительно = Ложь)
	
	ТекущиеДанные = Элементы.СписокДокументовКОтражению.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.СтраницыПредставленияВыбранного.ТекущаяСтраница = Элементы.СтраницаПустогоВыбора;
		Возврат;
	КонецЕсли;
	
	АктивизированныйДокумент = ТекущиеДанные.ДокументЭДО;
	
	Если АктивизированныйДокумент <> ВыбранныйДокумент Или ОбновитьПринудительно Тогда
		
		Элементы.СоздатьДокумент.Доступность = Ложь;
		Элементы.НеСоздаватьДокумент.Доступность = Ложь;
		
		Элементы.СтраницыПредставленияВыбранного.ТекущаяСтраница = Элементы.СтраницаОжидание;
		
		ВыбранныйДокумент = АктивизированныйДокумент;
		
		НачатьОбновлениеДанныхВыделенного();
		ОжидатьПолучениеДанныхВыделенного();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НачатьОбновлениеДанныхВыделенного()
	
	ОрганизацияВыбранного = Неопределено;
	КонтрагентВыбранного = Неопределено;
	ВидДокументаВыбранного = Неопределено;
	ВыбранныйТребуетОтветнуюПодпись = Ложь;
	КартинкаФайла = -1;
	ФайлВыбранногоДокумента = Неопределено;
	ОписаниеОшибкиАвтосоздания = "";
	ДругиеДокументыПакета.Очистить();
	
	ОбновитьЭлементыПоДаннымВыделенного();
	
	ПолучениеДанныхВыбранного =
		ОбменСКонтрагентамиДОСлужебный.ЗапуститьПолучениеДанныхВыбранногоВходящего(
			ВыбранныйДокумент, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьПолучениеДанныхВыделенного()
	
	Если ПолучениеДанныхВыбранного = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьДанныеВыделенного", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.Вставить("ВыводитьОкноОжидания", Ложь);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		ПолучениеДанныхВыбранного, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДанныеВыделенного(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолучениеДанныхВыбранного = Результат;
	ОтобразитьДанныеВыделенного();
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьДанныеВыделенного()
	
	Если ПолучениеДанныхВыбранного = Неопределено
		Или ПолучениеДанныхВыбранного.Статус = "Ошибка" Тогда
		
		ОтобразитьОшибкуПолученияДанныхДокумента();
		
	ИначеЕсли ПолучениеДанныхВыбранного.Статус = "Выполнено" Тогда
		
		ОтобразитьДанныеВыделенногоДокумента();
		
	Иначе
		
		ОтобразитьОжиданиеПолученияДанныхДокумента();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьОшибкуПолученияДанныхДокумента()
	
	Элементы.СтраницыПредставленияВыбранного.ТекущаяСтраница =
		Элементы.СтраницаОшибка;
	
	Элементы.НадписьОшибкаПолученияДанных.Заголовок =
		НСтр("ru = 'При получении данных выбранного документа произошла ошибка'");
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьОжиданиеПолученияДанныхДокумента()
	
	Элементы.СтраницыПредставленияВыбранного.ТекущаяСтраница =
		Элементы.СтраницаОжидание;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьДанныеВыделенногоДокумента()
	
	РезультатПолучения = ПолучитьИзВременногоХранилища(ПолучениеДанныхВыбранного.АдресРезультата);
	
	Если РезультатПолучения = Неопределено Тогда
		ОтобразитьОшибкуПолученияДанныхДокумента();
		Возврат;
	КонецЕсли;
	
	ОрганизацияВыбранного = РезультатПолучения.Организация;
	КонтрагентВыбранного = РезультатПолучения.Контрагент;
	ВидДокументаВыбранного = РезультатПолучения.ВидДокумента;
	ВыбранныйТребуетОтветнуюПодпись = РезультатПолучения.ТребуетсяОтветнаяПодпись;
	ФайлВыбранногоДокумента = РезультатПолучения.ФайлЭДО;
	КартинкаФайла =
		ФайловыеФункцииСлужебныйКлиентСервер.ПолучитьИндексПиктограммыФайла(РезультатПолучения.РасширениеФайла);
	ПредставлениеДокумента =
		СтрШаблон(НСтр("ru = '%1 №%2 от %3'"),
			РезультатПолучения.ВидДокумента,
			РезультатПолучения.Номер,
			Формат(РезультатПолучения.Дата, "ДФ=dd.MM.yyyy;"));
	ОписаниеОшибкиАвтосоздания = РезультатПолучения.ОписаниеОшибкиАвтосоздания;
	ВыбранныйОжидаетАвтосоздания = РезультатПолучения.ОжидаетАвтоматическогоСоздания;
	
	Для Каждого Элемент Из РезультатПолучения.ДанныеДокументовПакета Цикл
		
		ДокументПакета= Элемент.Ключ;
		ДанныеДокумента = Элемент.Значение;
		
		Если ДокументПакета <> ВыбранныйДокумент Тогда
			ДругиеДокументыПакета.Добавить(ДокументПакета,
				СтрШаблон(НСтр("ru = '%1 №%2 от %3'"),
					ДанныеДокумента.ВидДокумента,
					ДанныеДокумента.Номер,
					Формат(ДанныеДокумента.Дата, "ДФ=dd.MM.yyyy;")));
		КонецЕсли;
		
	КонецЦикла;
	
	ОбновитьЭлементыПоДаннымВыделенного();
	
	Элементы.СтраницыПредставленияВыбранного.ТекущаяСтраница = Элементы.СтраницаДанныеВыбранного;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыПоДаннымВыделенного()
	
	Элементы.НадписьОрганизацияВыбранного.Заголовок = ОрганизацияВыбранного;
	Элементы.НадписьКонтрагентВыбранного.Заголовок = КонтрагентВыбранного;
	Элементы.НадписьВидОтветнаяПодпись.Заголовок = СтрШаблон("%1, %2",
		ВидДокументаВыбранного,
		?(ВыбранныйТребуетОтветнуюПодпись,
			НСтр("ru = 'требует ответную подпись'"),
			НСтр("ru = 'без ответной подписи'")));
	Элементы.НадписьФайлЭДО.Заголовок = ПредставлениеДокумента;
	
	ОбновитьЭлементыПакета();
	
	Элементы.СоздатьДокумент.Доступность = Истина;
	Элементы.НеСоздаватьДокумент.Доступность = Истина;
	
	Если ОписаниеОшибкиАвтосоздания = "" Тогда
		Элементы.ГруппаОшибкаАвтосоздания.Видимость = Ложь;
		Элементы.НадписьОшибкаАвтосоздания.Заголовок = "";
	Иначе
		Элементы.ГруппаОшибкаАвтосоздания.Видимость = Истина;
		Элементы.НадписьОшибкаАвтосоздания.Заголовок =
			НСтр("ru = 'При попытке автоматического создания документа возникла ошибка:'")
			+ Символы.ПС + Символы.ПС
			+ ОписаниеОшибкиАвтосоздания;
	КонецЕсли;
	
	Элементы.ГруппаОжиданиеАвтосоздания.Видимость = ВыбранныйОжидаетАвтосоздания;
	
	Элементы.СоздатьДокумент.Доступность = Истина;
	Элементы.НеСоздаватьДокумент.Доступность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыПакета()
	
	Если ДругиеДокументыПакета.Количество() = 0 Тогда
		Элементы.ГруппаДокументыПакета.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаДокументыПакета.Видимость = Истина;
	
	Элементы.НадписьДокументПакета1.Заголовок = ДругиеДокументыПакета[0].Представление;
	
	Если ДругиеДокументыПакета.Количество() = 1 Тогда
		Элементы.НадписьДокументПакета2.Видимость = Ложь;
		Элементы.НадписьДокументПакетаОстальное.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.НадписьДокументПакета2.Видимость = Истина;
	
	Элементы.НадписьДокументПакета2.Заголовок = ДругиеДокументыПакета[1].Представление;
	
	Если ДругиеДокументыПакета.Количество() = 2 Тогда
		
		Элементы.НадписьДокументПакетаОстальное.Видимость = Ложь;
		
	ИначеЕсли ДругиеДокументыПакета.Количество() = 3 Тогда
		
		Элементы.НадписьДокументПакетаОстальное.Видимость = Истина;
		Элементы.НадписьДокументПакетаОстальное.Заголовок = ДругиеДокументыПакета[2].Представление;
		
	Иначе
		
		Элементы.НадписьДокументПакетаОстальное.Видимость = Истина;
		Элементы.НадписьДокументПакетаОстальное.Заголовок = 
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';и еще %1 документ ...;;и еще %1 документа ...;и еще %1 документов ...;и еще %1 документов ...'"),
				ДругиеДокументыПакета.Количество() - 2);;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Отборы

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСпискаПоЭлементу(Список, ВидЭлемента, ЗначениеЭлемента)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, ВидЭлемента,
		ЗначениеЭлемента, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(ЗначениеЭлемента));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборВСпискеПоПериоду(Список, ВидЭлемента, ЗначениеЭлемента)
	
	ГруппаБыстрыйОтбор = ОбщегоНазначенияКлиентСервер.НайтиЭлементОтбораПоПредставлению(
		Список.Отбор.Элементы, "ГруппаОтбораПериод");
	Если ГруппаБыстрыйОтбор = Неопределено Тогда
		ГруппаБыстрыйОтбор = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
			Список.Отбор.Элементы, "ГруппаОтбораПериод", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаБыстрыйОтбор, ВидЭлемента,
			ВидСравненияКомпоновкиДанных.БольшеИлиРавно, ЗначениеЭлемента.ДатаНачала, "ОтборПериодДатаНачала");
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаБыстрыйОтбор, ВидЭлемента,
			ВидСравненияКомпоновкиДанных.МеньшеИлиРавно, ЗначениеЭлемента.ДатаОкончания, "ОтборПериодДатаОкончания");
	КонецЕсли;
	
	ГруппаБыстрыйОтбор.Использование = ЗначениеЗаполнено(ЗначениеЭлемента);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаБыстрыйОтбор,, ЗначениеЭлемента.ДатаНачала,
		ВидСравненияКомпоновкиДанных.БольшеИлиРавно, "ОтборПериодДатаНачала", ЗначениеЗаполнено(ЗначениеЭлемента));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаБыстрыйОтбор,, ЗначениеЭлемента.ДатаОкончания,
		ВидСравненияКомпоновкиДанных.МеньшеИлиРавно,"ОтборПериодДатаОкончания" , ЗначениеЗаполнено(ЗначениеЭлемента));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
