
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект = Параметры.Пользователь;
	
	УсловноеОформление.Элементы.Очистить();
	НастройкиДоступа.УстановитьУсловноеОформлениеПолномочий(УсловноеОформление);
	
	ЗаполнитьПолномочия();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПолномочия

&НаКлиенте
Процедура ПолномочияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ПолномочияСсылка Тогда
		ПоказатьЗначение(, Элементы.Полномочия.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолномочияПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Полномочия.ТекущиеДанные;
	
	Если ТекущиеДанные.Пометка = 0 Тогда
		// Нельзя сбрасывать унаследованные.
		ТекущиеДанные.Пометка = 2;
		//ПоказатьПредупреждение(, НСтр("ru = 'Эти полномочия унаследованы от группы пользователей'"));
	ИначеЕсли ТекущиеДанные.Пометка = 2 Тогда
		ТекущиеДанные.Пометка = 0;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	
	Если Модифицированность Тогда
		СохранитьНастройкиНаСервере();
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	
	НачатьТранзакцию();
	
	Попытка
		
		// Полномочия.
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ПолномочияСотрудников.Полномочия,
			|	ЛОЖЬ КАК Добавить
			|ИЗ
			|	РегистрСведений.ПолномочияСотрудников КАК ПолномочияСотрудников
			|ГДЕ
			|	ПолномочияСотрудников.Владелец = &Группа
			|	И НЕ ПолномочияСотрудников.Полномочия В (&ВыбранныеПолномочия)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПрофилиГруппДоступа.Ссылка,
			|	ИСТИНА
			|ИЗ
			|	Справочник.ПрофилиГруппДоступа КАК ПрофилиГруппДоступа
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолномочияСотрудников КАК ПолномочияСотрудников
			|		ПО (ПолномочияСотрудников.Полномочия = ПрофилиГруппДоступа.Ссылка)
			|			И (ПолномочияСотрудников.Владелец = &Группа)
			|ГДЕ
			|	ПрофилиГруппДоступа.Ссылка В(&ВыбранныеПолномочия)
			|	И ПолномочияСотрудников.Полномочия ЕСТЬ NULL ");
			
		ВыбранныеПолномочия = Новый Массив;
		Для Каждого Стр Из Полномочия Цикл
			Если Стр.Пометка = 1 Тогда
				ВыбранныеПолномочия.Добавить(Стр.Ссылка);
			КонецЕсли;
		КонецЦикла;
		
		Запрос.УстановитьПараметр("Группа", Объект);
		Запрос.УстановитьПараметр("ВыбранныеПолномочия", ВыбранныеПолномочия);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Добавить Тогда
				РегистрыСведений.ПолномочияСотрудников.ДобавитьПолномочия(Объект, Выборка.Полномочия);
			Иначе
				РегистрыСведений.ПолномочияСотрудников.УдалитьПолномочия(Объект, Выборка.Полномочия);
			КонецЕсли;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Запись полномочий и разрешений доступа группы пользователей'"),
			УровеньЖурналаРегистрации.Ошибка,,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоНастройкамДоступа(Команда)
	
	ПараметрыФормы = Новый Структура("ВладелецНастроек", Объект);
	ОткрытьФорму("Отчет.НастройкиДоступаПользователей.Форма", ПараметрыФормы, ЭтотОбъект, Объект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПолномочия()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПолномочияСотрудников.Полномочия КАК Полномочия,
		|	МАКСИМУМ(НЕ ПолномочияСотрудников.Владелец = &Группа) КАК Унаследована
		|ПОМЕСТИТЬ НазначенныеПолномочия
		|ИЗ
		|	РегистрСведений.ПолномочияСотрудников КАК ПолномочияСотрудников
		|ГДЕ
		|	ПолномочияСотрудников.Владелец В(&ВсеВладельцыПолномочий)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПолномочияСотрудников.Полномочия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПрофилиГруппДоступа.Ссылка КАК Полномочия,
		|	ВЫБОР
		|		КОГДА НазначенныеПолномочия.Полномочия ЕСТЬ NULL 
		|			ТОГДА 0
		|		КОГДА НазначенныеПолномочия.Унаследована = ИСТИНА
		|			ТОГДА 2
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Пометка
		|ИЗ
		|	Справочник.ПрофилиГруппДоступа КАК ПрофилиГруппДоступа
		|		ЛЕВОЕ СОЕДИНЕНИЕ НазначенныеПолномочия КАК НазначенныеПолномочия
		|		ПО ПрофилиГруппДоступа.Ссылка = НазначенныеПолномочия.Полномочия
		|ГДЕ
		|	НЕ ПрофилиГруппДоступа.ЭтоГруппа
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПрофилиГруппДоступа.Наименование");
	
	ВсеВладельцыПолномочий = НастройкиДоступа.ВладельцыНаследуемыхРазрешенийДоступа(Объект);
	ВсеВладельцыПолномочий.Добавить(Объект);
	
	Запрос.УстановитьПараметр("Группа", Объект);
	Запрос.УстановитьПараметр("ВсеВладельцыПолномочий", ВсеВладельцыПолномочий);
	
	Полномочия.Очистить();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
 		Стр = Полномочия.Добавить();
		Стр.Ссылка = Выборка.Полномочия;
		Стр.Пометка = Выборка.Пометка;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВыбораУровняДоступа(ДанныеСтроки) Экспорт
	
	СписокВыбора = Элементы.РазрешенияДоступаУровеньДоступаСсылка.СписокВыбора;
	СписокВыбора.Очистить();
	
	Сч = 0;
	ПриоритетыУровнейДоступа = НастройкиДоступаКлиентСерверПовтИсп.ПриоритетыУровнейДоступа();
	УровеньДоступа = ПриоритетыУровнейДоступа.Получить(Сч);
	
	Пока УровеньДоступа <> Неопределено Цикл
		
		Если Сч > 0 И Сч <= Макс(ДанныеСтроки.УровеньДоступаУнаследованный, 
				ДанныеСтроки.УровеньДоступаРодителя) Тогда
				
			Сч = Сч + 1;
			УровеньДоступа = ПриоритетыУровнейДоступа.Получить(Сч);
			Продолжить;
			
		КонецЕсли;
		
		// Регистрация доступна не для всех видов доступа.
		ДобавитьЭлемент = Истина;
		Если УровеньДоступа = ПредопределенноеЗначение("Справочник.УровниДоступа.Регистрация") Тогда
			ВидыДоступаИспользующиеРегистрацию = НастройкиДоступаКлиентСервер.ВидыДоступаИспользующиеРегистрацию();
			ДобавитьЭлемент = ВидыДоступаИспользующиеРегистрацию.Найти(ДанныеСтроки.ВидДоступа) <> Неопределено;
		КонецЕсли;
		
		Если ДобавитьЭлемент Тогда
			
			ПредставлениеЭлемента = "";
			
			Если Не ЗначениеЗаполнено(УровеньДоступа) Тогда
				Если ДанныеСтроки.УровеньДоступаУнаследованный > 0
					Или ДанныеСтроки.УровеньДоступаРодителя > 0 Тогда
					ПредставлениеЭлемента = НСтр("ru = '<Наследовать>'");
				Иначе
					ПредставлениеЭлемента = НСтр("ru = '<Нет доступа>'");
				КонецЕсли;
			КонецЕсли;
			
			СписокВыбора.Добавить(УровеньДоступа, ПредставлениеЭлемента);
			
		КонецЕсли;
		
		Сч = Сч + 1;
		УровеньДоступа = ПриоритетыУровнейДоступа.Получить(Сч);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
