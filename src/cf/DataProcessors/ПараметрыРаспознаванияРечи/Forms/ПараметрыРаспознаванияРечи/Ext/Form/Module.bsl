///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ПараметрыРаботыСРечью) Тогда
	
		ВариантИспользования = Параметры.ПараметрыРаботыСРечью.ВариантИспользования;
		КодЯзыка             = Параметры.ПараметрыРаботыСРечью.КодЯзыка;
		Акустика             = Параметры.ПараметрыРаботыСРечью.Акустика;
		Грамматика           = Параметры.ПараметрыРаботыСРечью.Грамматика;
		Версия               = Параметры.ПараметрыРаботыСРечью.Версия;
		
	КонецЕсли;
	
	НастройкиРаботыСРечью = Константы.НастройкиРаботыСРечью.ПолучитьБезопасно();
	Если НастройкиРаботыСРечью.ЗапретитьОблачноеРаспознавание Тогда
		ВариантИспользования = "Локально";
	КонецЕсли;
	
	ЗаполнитьДоступныеМодели();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	
	ЗаполнитьДоступныеМодели();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	Закрыть(РезультатСохранитьПолучить());
	
КонецПроцедуры

&НаКлиенте
Процедура АвторизацияСеанса(Команда)
	
	ОткрытьФорму("Обработка.ПараметрыРаспознаванияРечи.Форма.АвторизацияСеанса");
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательскаяГрамматика(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВариантГрамматики", "ПользовательскаяГрамматика");
	ОткрытьФорму("Обработка.ПараметрыРаспознаванияРечи.Форма.РедактированиеГрамматики", ПараметрыОткрытия);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДоступныеМодели()
	
	ПредставленияАкустик.Очистить();
	ПредставленияГрамматик.Очистить();
	ДоступныеМодели.Очистить();
	
	ЕстьЛокальныеМодели = Ложь;
	
	Попытка
		ОписаниеМоделейРаспознавания = РаботаСРечьюБМОСервер.ПолучитьОписаниеМоделейРаспознавания();
	Исключение
		ОписаниеМоделейРаспознавания = Новый Массив;
	КонецПопытки;
	
	Для Каждого ОписаниеМодели Из ОписаниеМоделейРаспознавания Цикл
		
		Если НастройкиРаботыСРечью.ЗапретитьОблачноеРаспознавание
		   И Не ОписаниеМодели.ДоступнаВЛокальномВарианте Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если ОписаниеМодели.ДоступнаВЛокальномВарианте Тогда
			ЕстьЛокальныеМодели = Истина;
		КонецЕсли;
		
		ПараметрыМодели = ОписаниеМодели.ПолучитьПараметры();
		
		НоваяСтрока = ДоступныеМодели.Добавить();
		НоваяСтрока.ПредставлениеАкустики = ОписаниеМодели.ПредставлениеАкустики;
		НоваяСтрока.ПредставлениеГрамматики = ОписаниеМодели.ПредставлениеГрамматики;
		НоваяСтрока.ПредставлениеЯзыка = ПредставлениеЯзыка(ПараметрыМодели.КодЯзыка);
		НоваяСтрока.КодЯзыка = ПараметрыМодели.КодЯзыка;
		НоваяСтрока.Акустика = ПараметрыМодели.Акустика;
		НоваяСтрока.Грамматика = ПараметрыМодели.Грамматика;
		НоваяСтрока.Версия = ПараметрыМодели.Версия;
		
		Если ПредставленияАкустик.НайтиПоЗначению(ПараметрыМодели.Акустика) = Неопределено Тогда
			ПредставленияАкустик.Добавить(ПараметрыМодели.Акустика, ОписаниеМодели.ПредставлениеАкустики);
		КонецЕсли;
		Если ПредставленияГрамматик.НайтиПоЗначению(ПараметрыМодели.Грамматика) = Неопределено Тогда
			ПредставленияГрамматик.Добавить(ПараметрыМодели.Грамматика, ОписаниеМодели.ПредставлениеГрамматики);
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьСписокВыбораПоЗначениямКолонки(Элементы.КодЯзыка, ДоступныеМодели, "КодЯзыка");
	ЗаполнитьСписокВыбораПоЗначениямКолонки(Элементы.Акустика, ДоступныеМодели, "Акустика");
	ЗаполнитьСписокВыбораПоЗначениямКолонки(Элементы.Грамматика, ДоступныеМодели, "Грамматика");
	
	Элементы.Предупреждение.Видимость = 
		Не Элементы.КодЯзыка.Видимость И Не Элементы.Акустика.Видимость И Не Элементы.Грамматика.Видимость;
	
	Элементы.Готово.Видимость = Не Элементы.Предупреждение.Видимость;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПредставлениеЯзыка(КодЯзыка)
	
	Попытка
		Возврат ?(ЗначениеЗаполнено(КодЯзыка), ПредставлениеКодаЛокализации(КодЯзыка), КодЯзыка);
	Исключение
		Возврат КодЯзыка;
	КонецПопытки;
	
КонецФункции

&НаСервере
Функция ЗаполнитьСписокВыбораПоЗначениямКолонки(Элемент, Таблица, ИмяКолонки)
	
	Элемент.СписокВыбора.Очистить();
	
	Значения = Таблица.Выгрузить(, ИмяКолонки);
	Значения.Свернуть(ИмяКолонки);
	Значения = Значения.ВыгрузитьКолонку(ИмяКолонки);
	
	Если ИмяКолонки = "Акустика" Тогда
		Для Каждого ЭлементСписка Из ПредставленияАкустик Цикл
			Элемент.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		КонецЦикла;
	ИначеЕсли ИмяКолонки = "Грамматика" Тогда
		Для Каждого ЭлементСписка Из ПредставленияГрамматик Цикл
			Элемент.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		КонецЦикла;
	Иначе
		Для Каждого Значение Из Значения Цикл
			Если ИмяКолонки = "КодЯзыка" Тогда
				Элемент.СписокВыбора.Добавить(Значение, ПредставлениеЯзыка(Значение));
			Иначе
				Элемент.СписокВыбора.Добавить(Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	НетДоступныхВариантов = (Элемент.СписокВыбора.Количество() = 0);
	ОдинДоступныйВариант = (Элемент.СписокВыбора.Количество() = 1);
	
	Если НетДоступныхВариантов Тогда
		ЭтотОбъект[Элемент.ПутьКДанным] = "";
	КонецЕсли;
	
	Элемент.СписокВыбора.Вставить(0, "", НСтр("ru = 'авто'"));
	Элемент.Видимость = Не ОдинДоступныйВариант И Не НетДоступныхВариантов;
	
КонецФункции

&НаСервере
Функция РезультатСохранитьПолучить()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = РегистрыСведений.ПараметрыРаспознаванияРечи.ПараметрыПоУмолчанию();
	Результат.ВариантИспользования = ВариантИспользования;
	Результат.КодЯзыка = КодЯзыка;
	Результат.Акустика = Акустика;
	Результат.Грамматика = Грамматика;
	Результат.Версия = Версия;
	РегистрыСведений.ПараметрыРаспознаванияРечи.Сохранить(Результат, Параметры.ИмяФормы);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
