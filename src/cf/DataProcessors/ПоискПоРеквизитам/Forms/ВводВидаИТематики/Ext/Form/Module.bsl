#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.СписокЭлементовДляВыбора.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Доступные значения реквизита ""%1""'"), Параметры.ПредставлениеРеквизита);
	Элементы.ВыбранныеЗначения.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Выбранные значения реквизита ""%1""'"), Параметры.ПредставлениеРеквизита);
	Элементы.ДекорацияПояснение.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Выберите значения для поиска по реквизиту ""%1"" из списка доступных значений реквизита.'"), 
		Параметры.ПредставлениеРеквизита);
		
	ЭтаФорма.Заголовок = Параметры.ПредставлениеРеквизита;
	НеЗаполнено = Параметры.НеЗаполнено;
	Элементы.Массив.Доступность = НЕ НеЗаполнено;
	
	ЗаполнитьДеревоЭлементовДляВыбора();
	
	Для Каждого ВыбранноеЗначение Из Параметры.СписокВыбранныхЗначений Цикл
		ВыбранныеЗначения.Добавить(ВыбранноеЗначение.Значение, 
									ВыбранноеЗначение.Представление);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)

	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		
		СтрокаПоиска = СокрЛП(СтрокаПоиска);
	
		Если СтрДлина(СтрокаПоиска) < 3 И СтрокаПоиска <> "*" И СтрокаПоиска <> "**" Тогда
			ЭтаФорма.ТекущийЭлемент = Элементы.СтрокаПоиска;
			ЭтаФорма.Активизировать();
			ПоказатьПредупреждение(, НСтр("ru = 'Необходимо ввести минимум 3 символа'"));
			Возврат;
		КонецЕсли;
		
		ПустойРезультатПоиска = Ложь;
		ЗаполнитьДеревоЭлементовДляВыбора(СтрокаПоиска);
		ПустойРезультатПоиска = СписокЭлементовДляВыбора.ПолучитьЭлементы().Количество() = 0;
		
		Если ПустойРезультатПоиска Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'По вашему запросу ничего не найдено'"));
			ЭтаФорма.ТекущийЭлемент = Элементы.СтрокаПоиска;
		Иначе
			ЭтаФорма.ТекущийЭлемент = Элементы.СписокЭлементовДляВыбора;
		КонецЕсли;
		
		ПоискТематикВключен = Истина;
	Иначе
		
		ЗаполнитьДеревоЭлементовДляВыбора();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОчистка(Элемент, СтандартнаяОбработка)
	ЗаполнитьДеревоЭлементовДляВыбора();
КонецПроцедуры

&НаКлиенте
Процедура НеЗаполненоПриИзменении(Элемент)
	
	Элементы.Массив.Доступность = НЕ НеЗаполнено;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокЭлементовДляВыбора

&НаКлиенте
Процедура СписокЭлементовДляВыбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Для Каждого ВыделеннаяСтрока Из Элемент.ВыделенныеСтроки Цикл
		
		ДанныеВыделеннойСтроки = Элемент.ДанныеСтроки(ВыделеннаяСтрока);
			
			Если ЗначениеЗаполнено(ДанныеВыделеннойСтроки.Ссылка) Тогда
			
				ДобавитьДанныеСтрокиКСпискуВыбранных(ДанныеВыделеннойСтроки);
			
			КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВыбранныеЗначения

&НаКлиенте
Процедура ВыбранныеЗначенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	МассивСтрокДляУдаления = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.ВыбранныеЗначения.ВыделенныеСтроки Цикл
		МассивСтрокДляУдаления.Добавить(ВыбранныеЗначения.НайтиПоИдентификатору(ВыделеннаяСтрока));
	КонецЦикла;
	Для Каждого СтрокаДляУдаления Из МассивСтрокДляУдаления Цикл
		ВыбранныеЗначения.Удалить(СтрокаДляУдаления);
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеЗначенияПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Для Каждого Элемент Из ПараметрыПеретаскивания.Значение Цикл
		Если ТипЗнч(Элемент) = Тип("ДанныеФормыЭлементДерева") Тогда
			ДобавитьДанныеСтрокиКСпискуВыбранных(Элемент);
		Иначе
			Если ВыбранныеЗначения.НайтиПоЗначению(Элемент) = Неопределено Тогда
				ВыбранныеЗначения.Добавить(Элемент);
	        КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеЗначенияПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеЗначенияПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	УдалитьИзВыбранных(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьКВыбранным(Команда)
	
	Если Элементы.ГруппаСпискиВыбора.ТекущаяСтраница = Элементы.ДинамическийСписок Тогда
		Для Каждого ВыделеннаяСтрока Из Элементы.ДинамическийСписокЭлементовДляВыбора.ВыделенныеСтроки Цикл
			ДанныеВыделеннойСтроки = Элементы.ДинамическийСписокЭлементовДляВыбора.ДанныеСтроки(ВыделеннаяСтрока);
			
			Если ЗначениеЗаполнено(ДанныеВыделеннойСтроки) Тогда
			
				ДобавитьДанныеСтрокиКСпискуВыбранных(ДанныеВыделеннойСтроки);
			
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого ВыделеннаяСтрока Из Элементы.СписокЭлементовДляВыбора.ВыделенныеСтроки Цикл
			ДанныеВыделеннойСтроки = Элементы.СписокЭлементовДляВыбора.ДанныеСтроки(ВыделеннаяСтрока);
			ДобавитьДанныеСтрокиКСпискуВыбранных(ДанныеВыделеннойСтроки);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзВыбранных(Команда)
	
	МассивСтрокДляУдаления = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.ВыбранныеЗначения.ВыделенныеСтроки Цикл
		МассивСтрокДляУдаления.Добавить(ВыбранныеЗначения.НайтиПоИдентификатору(ВыделеннаяСтрока));
	КонецЦикла;
	Для Каждого СтрокаДляУдаления Из МассивСтрокДляУдаления Цикл
		ВыбранныеЗначения.Удалить(СтрокаДляУдаления);
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗакрытьБезСохранения(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Ок(Команда)
	
	Если НЕ НеЗаполнено Тогда
		ДанныеВыбора = Новый Структура;
		ДанныеВыбора.Вставить("ТипЗначения", "Массив");
		ДанныеВыбора.Вставить("СписокВыбранных", ВыбранныеЗначения);
		ДанныеВыбора.Вставить("ОписаниеТипов", ТипЗначения);
		Закрыть(ДанныеВыбора);
	Иначе
		Закрыть(НеЗаполнено);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьДанныеСтрокиКСпискуВыбранных(ДанныеВыделеннойСтроки)
	
	Ссылка = ДанныеВыделеннойСтроки.Ссылка;
	
	Если ЗначениеЗаполнено(Ссылка)
		И ВыбранныеЗначения.НайтиПоЗначению(Ссылка) = Неопределено Тогда
		
		ВыбранныеЗначения.Добавить(Ссылка, ДанныеВыделеннойСтроки.ПредставлениеЭлемента);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоЭлементовДляВыбора(СтрПоиска = "")

	Если ЗначениеЗаполнено(СтрПоиска) Тогда
		
		ЭтоПоиск = Истина;

	Иначе
		
		ЭтоПоиск = Ложь;
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыДокументов.Ссылка КАК ВидДокумента,
	               |	ТематикиДокументов.Ссылка КАК Тематика
	               |ИЗ
	               |	Справочник.ВидыДокументов КАК ВидыДокументов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТематикиДокументов КАК ТематикиДокументов
	               |		ПО (ТематикиДокументов.ВидДокумента = ВидыДокументов.Ссылка)
	               |ГДЕ
	               |	НЕ ВидыДокументов.ПометкаУдаления
	               |	И (ТематикиДокументов.Ссылка ЕСТЬ NULL
	               |		ИЛИ НЕ ТематикиДокументов.ПометкаУдаления)
	               |	И НЕ ВидыДокументов.ЭтоГруппа
	               |	И (ТематикиДокументов.НеДействует ЕСТЬ NULL
	               |		ИЛИ НЕ ТематикиДокументов.НеДействует
	               |		ИЛИ ТематикиДокументов.НеДействуетДата > &ТекущаяДата)";

	Если ЭтоПоиск Тогда
	
		Запрос.Текст = Запрос.Текст + "
		|	И (ТематикиДокументов.Наименование Подобно &СтрокаПоиска
		|		ИЛИ ВидыДокументов.Наименование Подобно &СтрокаПоиска)";
		Запрос.УстановитьПараметр("СтрокаПоиска", "%" + СтрПоиска + "%");
		
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
		|УПОРЯДОЧИТЬ ПО
		|	ВидыДокументов.Наименование,
		|	ТематикиДокументов.Наименование";
	
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДатаСеанса()));
	Результат = Запрос.Выполнить().Выбрать();
	Список = РеквизитФормыВЗначение("СписокЭлементовДляВыбора");
	Список.Строки.Очистить();
	ПоследнийВидДокумента = Неопределено;
	
	Пока Результат.Следующий() Цикл
		
		Если Результат.ВидДокумента <> ПоследнийВидДокумента Тогда
			
			ПоследнийВидДокумента = Результат.ВидДокумента;
			Строка = Список.Строки.Добавить();
			Строка.Ссылка = ПоследнийВидДокумента;
			Строка.ПредставлениеЭлемента = 
				Строка(ПоследнийВидДокумента)
				+ ?(ЗначениеЗаполнено(Результат.Тематика), " (Все тематики)", "");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Результат.Тематика) Тогда
		
			Строка = Список.Строки.Добавить();
			Строка.Ссылка = Результат.Тематика;
			Строка.ПредставлениеЭлемента = СтрШаблон("%1 - %2",
														Результат.ВидДокумента,
														Результат.Тематика);
		
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Список, "СписокЭлементовДляВыбора");
	
КонецПроцедуры

#КонецОбласти

