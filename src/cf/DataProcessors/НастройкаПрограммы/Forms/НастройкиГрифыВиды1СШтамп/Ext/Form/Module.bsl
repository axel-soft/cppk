#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)     
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда
		ЭтаФорма.Заголовок = НСтр("ru = 'Виды документов для 1С:Штамп'");
	КонецЕсли;	
	
	ПрочитатьГрифыИВиды();	
	
	РаботаСФормамиХолдинг.ИзменитьФормуНастроекПрограммы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Грифы доступа
	НаборЗаписей = РегистрыСведений.ГрифыДоступаДля1СШтамп.СоздатьНаборЗаписей();
	
	ИспользованныеНастройки = Новый Соответствие;
	
	Для Каждого Стр Из ГрифыШтамп Цикл      
		
		Если ЗначениеЗаполнено(Стр.ГрифДоступа) Тогда
			
			Если ИспользованныеНастройки.Получить(Стр.ГрифДоступа) = Неопределено Тогда // еще нету
				Запись = НаборЗаписей.Добавить();
				Запись.ГрифДоступа = Стр.ГрифДоступа;        
				ИспользованныеНастройки.Вставить(Стр.ГрифДоступа, 1);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;	
	
	НаборЗаписей.Записать();
	
	// Виды документов
	НаборЗаписей = РегистрыСведений.ВидыДокументовДля1СШтамп.СоздатьНаборЗаписей();
	
	ИспользованныеНастройки = Новый Соответствие;
	
	Для Каждого Стр Из ВидыШтамп Цикл  
		Если ЗначениеЗаполнено(Стр.Вид) Тогда  
			
			Если ИспользованныеНастройки.Получить(Стр.Вид) = Неопределено Тогда // еще нету
				Запись = НаборЗаписей.Добавить();
				Запись.ВидДокумента = Стр.Вид;
				ИспользованныеНастройки.Вставить(Стр.Вид, 1);
			КонецЕсли;
			
		КонецЕсли;	
	КонецЦикла;	
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстанавливаемыеПараметры = Новый Структура;
	УстанавливаемыеПараметры.Вставить("Пользователи", ПользователиКлиентСервер.ТекущийПользователь());
	УстановитьПараметрыФункциональныхОпцийИнтерфейса(УстанавливаемыеПараметры);
	ОбновитьПовторноИспользуемыеЗначения();
	ОбновитьИнтерфейс();
	
	Если ПараметрыЗаписи.Свойство("Закрыть") Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьГрифыИВиды()
	
	ГрифыШтамп.Очистить();
	Выборка = РегистрыСведений.ГрифыДоступаДля1СШтамп.Выбрать();
	Пока Выборка.Следующий() Цикл
		НовСтрока = ГрифыШтамп.Добавить();
		НовСтрока.ГрифДоступа = Выборка.ГрифДоступа;
	КонецЦикла;	
	
	ВидыШтамп.Очистить();
	Выборка = РегистрыСведений.ВидыДокументовДля1СШтамп.Выбрать();
	Пока Выборка.Следующий() Цикл
		НовСтрока = ВидыШтамп.Добавить();
		НовСтрока.Вид = Выборка.ВидДокумента;
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("Закрыть", Истина);
	Записать(ПараметрыЗаписи);   
	
	Оповестить("Обновить1СШтампНастройки");
	
КонецПроцедуры

&НаКлиенте
Процедура ГрифыШтампПриИзменении(Элемент)
	
	Если Элементы.ГрифыШтамп.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;  
	
	ТекущиеДанные = Элементы.ГрифыШтамп.ТекущиеДанные;
	
	СтрокаТекущая = ГрифыШтамп.НайтиПоИдентификатору(Элементы.ГрифыШтамп.ТекущаяСтрока);
	
	ИспользованныеНастройки = Новый Соответствие;
	
	Для Каждого Стр Из ГрифыШтамп Цикл
		
		Если ЗначениеЗаполнено(Стр.ГрифДоступа) Тогда
			
			// соберем все строки кроме текущей
			Если СтрокаТекущая <> Неопределено И Стр = СтрокаТекущая Тогда
				Продолжить;
			КонецЕсли;	
			
			Если ИспользованныеНастройки.Получить(Стр.ГрифДоступа) = Неопределено Тогда // еще нет
				ИспользованныеНастройки.Вставить(Стр.ГрифДоступа, 1);
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла;	
	
	Если ИспользованныеНастройки.Получить(ТекущиеДанные.ГрифДоступа) <> Неопределено Тогда 
		ТекущиеДанные.ГрифДоступа = Неопределено; // очистим дубль
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыШтампПриИзменении(Элемент)
	
	Если Элементы.ВидыШтамп.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;  
	
	ТекущиеДанные = Элементы.ВидыШтамп.ТекущиеДанные;
	
	СтрокаТекущая = ВидыШтамп.НайтиПоИдентификатору(Элементы.ВидыШтамп.ТекущаяСтрока);
	
	ИспользованныеНастройки = Новый Соответствие;
	
	Для Каждого Стр Из ВидыШтамп Цикл
		
		Если ЗначениеЗаполнено(Стр.Вид) Тогда
			
			// соберем все строки кроме текущей
			Если СтрокаТекущая <> Неопределено И Стр = СтрокаТекущая Тогда
				Продолжить;
			КонецЕсли;	
			
			Если ИспользованныеНастройки.Получить(Стр.Вид) = Неопределено Тогда // еще нет
				ИспользованныеНастройки.Вставить(Стр.Вид, 1);
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла;	
	
	Если ИспользованныеНастройки.Получить(ТекущиеДанные.Вид) <> Неопределено Тогда 
		ТекущиеДанные.Вид = Неопределено; // очистим дубль
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
