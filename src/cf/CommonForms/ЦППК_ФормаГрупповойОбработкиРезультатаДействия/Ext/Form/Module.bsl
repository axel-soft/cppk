
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Исполнитель = Сотрудники.ОсновнойСотрудник();
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Период.Вариант = ВариантСтандартногоПериода.ЭтаНеделя;
	КонецЕсли;
	
	ВидДействия = Справочники.ВидыДействийЗадач.ОбработатьРезультат;
	ВидЗадачи = Справочники.ВидыЗадач.ЗапросНаПереносСрока;
	РезультатВыполнения = Справочники.РезультатыДействийЗадач.ЗакрытЗапрос;
	
	Если НЕ ЗначениеЗаполнено(СодержитТекст) Тогда
		СодержитТекст = "Ознакомиться: перенос срока по задаче";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОтобратьПослеИзмененияОтбора();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Оповестить("Запись_ПоступившиеОбновленияЗадач");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ОтобратьПослеИзмененияОтбора();
КонецПроцедуры

&НаКлиенте
Процедура ВидДействияПриИзменении(Элемент)
	ОтобратьПослеИзмененияОтбора();
КонецПроцедуры

&НаКлиенте
Процедура СодержитТекстПриИзменении(Элемент)
	ОтобратьПослеИзмененияОтбора();
КонецПроцедуры

&НаКлиенте
Процедура РезультатВыполненияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(РезультатВыполнения) Тогда
		ОбновитьРезультатПослеОтбора();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметки(Команда)
	
	Для каждого СтрокаДействияЗадач Из ДействияЗадач Цикл
		СтрокаДействияЗадач.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставитьОтметки(Команда)

	Для каждого СтрокаДействияЗадач Из ДействияЗадач Цикл
		СтрокаДействияЗадач.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подобрать(Команда)
	ОтобратьПослеИзмененияОтбора();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	
	Если НЕ ЗначениеЗаполнено(РезультатВыполнения) Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать результат выполнения действия задачи.'"));
		Возврат;
		
	КонецЕсли;
	
	Для каждого СтрокаОтметки Из ДействияЗадач Цикл
		
		Если НЕ СтрокаОтметки.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Попытка
			
			ДанныеВыполнения = ВыполнитьДействиеНаСервере(СтрокаОтметки.ДействиеЗадачи, РезультатВыполнения);
			СтрокаОтметки.Результат = ДанныеВыполнения.ПредставлениеРезультата;
			СтрокаОтметки.Пометка = Ложь;
			
		Исключение
			СтрокаОтметки.Результат = ОписаниеОшибки();
		КонецПопытки;
	
	КонецЦикла;
	
	ПоказатьПредупреждение(, НСтр("ru = 'Обработка завершена.'"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьотОбражениеГруппыВыполнения()
	
	Элементы.ГруппаВыполнение.Доступность = ДействияЗадач.Количество() > 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДоступныеДействия()
	
	Элементы.РезультатВыполнения.СписокВыбора.Очистить();
	
	Если ДействияЗадач.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДействиеЗадачи = ДействияЗадач[0].ДействиеЗадачи;
	РезультатыВариантовВыполнения = РезультатыВариантовВыполнения(ДействиеЗадачи, ВидДействия, ВидЗадачи);
	
	МассивДоступныхДействий = Новый Массив;
	
	Для каждого СтрокаРезультатыВариантовВыполнения Из РезультатыВариантовВыполнения Цикл
		МассивДоступныхДействий.Добавить(СтрокаРезультатыВариантовВыполнения.Значение);
	КонецЦикла;
	
	Если МассивДоступныхДействий.Найти(РезультатВыполнения) = Неопределено Тогда
		РезультатВыполнения = ПредопределенноеЗначение("Справочник.РезультатыДействийЗадач.ПустаяСсылка");
	КонецЕсли;
	
	Для каждого ЗначениеДоступныхДействий Из МассивДоступныхДействий Цикл
		Элементы.РезультатВыполнения.СписокВыбора.Добавить(ЗначениеДоступныхДействий);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РезультатыВариантовВыполнения(ДействиеЗадачи, ВидДействия, ВидЗадачи)

	Возврат РаботаСЗадачами.РезультатыВариантовВыполнения(
	ДействиеЗадачи,
	ВидЗадачи,
	ВидДействия);

КонецФункции

&НаКлиенте
Процедура ОбновитьРезультатПослеОтбора()
	
	ПредставлениеРезультата = ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(
	РезультатВыполнения, "ЗаголовокКоманды");
	
	Для каждого СтрокаДействияЗадач Из ДействияЗадач Цикл
	
		СтрокаДействияЗадач.Результат = 
		СтрШаблон(НСтр("ru = 'Будет выполнено:
                                             |%1'"),
		ПредставлениеРезультата);
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПослеИзмененияОтбора()
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПодобратьНаСервере();
	ОбновитьРезультатПослеОтбора();
	ЗаполнитьДоступныеДействия();
	ОбновитьотОбражениеГруппыВыполнения();
	
КонецПроцедуры

&НаСервере
Процедура ПодобратьНаСервере()
	
	ДействияЗадач.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИСТИНА КАК Пометка,
	|	ДействияЗадач.ДействиеЗадачи КАК ДействиеЗадачи,
	|	ДействияЗадач.ВидЗадачи КАК ВидЗадачи,	
	|	ДействияЗадач.Дата КАК Создана
	|ИЗ
	|	РегистрСведений.РеестрЗадачПоИсполнителям КАК ДействияЗадач
	|ГДЕ
	|	ДействияЗадач.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ДействияЗадач.Исполнитель = &Исполнитель
	|	И ДействияЗадач.ВидДействия = &ВидДействия
	|	И НЕ ДействияЗадач.Выполнено
	|	И ДействияЗадач.СостояниеУчастникаЗадачи = &СостояниеУчастниковЗадач
	|	И ДействияЗадач.ДействиеЗадачи.ОсобоеОписание ПОДОБНО &СодержитТекст
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДействияЗадач.Дата";
	
	Запрос.УстановитьПараметр("ВидДействия", ВидДействия);
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Исполнитель", Исполнитель);
	Запрос.УстановитьПараметр("СодержитТекст", СодержитТекст + "%");
	Запрос.УстановитьПараметр("СостояниеУчастниковЗадач", Справочники.СостоянияУчастниковЗадач.Новая);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = ДействияЗадач.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьДействиеНаСервере(ДействиеЗадачи, РезультатВыполнения)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивЗадачи = Новый Массив;
	МассивЗадачи.Добавить(ДействиеЗадачи);
	
	ПараметрыВыполнения = РаботаСЗадачамиКлиентСервер.НовыйПараметрыВыполненияДействийЗадач();
	
	ДанныеВыполнения = РаботаСЗадачамиВызовСервера.ВыполнитьДействиеЗадачи(МассивЗадачи,
	РезультатВыполнения,
	ПараметрыВыполнения);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ДанныеВыполнения;
	
КонецФункции

#КонецОбласти
