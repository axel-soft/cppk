#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("МассивВладельцев") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	СписокВладельцев = Новый СписокЗначений;
	СписокВладельцев.ЗагрузитьЗначения(Параметры.МассивВладельцев);
	ДоступныеТипыСвязей = СвязиОбъектов.ПолучитьАктуальныеТипыСвязейОбъектов(Параметры.МассивВладельцев);
	
	НастройкиФормы = ОбщегоНазначения.ХранилищеСистемныхНастроекЗагрузить(ИмяФормы + "/ТекущиеДанные", "");
	Если НастройкиФормы = Неопределено Тогда
		ЗаполнитьСписокФайлов();
	КонецЕсли;
	
	РасширениеДляЗашифрованныхФайлов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ЭП", "РасширениеДляЗашифрованныхФайлов");
	Если ПустаяСтрока(РасширениеДляЗашифрованныхФайлов) Тогда
		РасширениеДляЗашифрованныхФайлов = "p7m";
	КонецЕсли;
	
	СохранениеВводимыхЗначений.ЗаполнитьСписокВыбора(ЭтаФорма, ЭлементыДляСохранения(), ИмяФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'В Веб-клиенте сохранение файлов не поддерживается.'"));
		Возврат;
	#КонецЕсли
	
	РазвернутьСписокФайлов();
	
	Если Не ВключатьСвязанныеДокументы Тогда 
		Элементы.ТипыСвязей.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ЗаполнитьСписокФайлов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВсеРолиФайловПриИзменении(Элемент)
	
	ЗаполнитьСписокФайлов();
	РазвернутьСписокФайлов();

КонецПроцедуры

&НаКлиенте
Процедура ТипыСвязейПриИзменении(Элемент)
	
	Если ТипыСвязей.Количество() = 0 Тогда
		ВключатьСвязанныеДокументы = Ложь;   
		Элементы.ТипыСвязей.ТолькоПросмотр = Истина;
	КонецЕсли;	

	ЗаполнитьСписокФайлов();
	РазвернутьСписокФайлов();  
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкаДляЭкспортаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Выбрать();
	
	Если ЗначениеЗаполнено(Диалог.Каталог) Тогда
		ПапкаДляЭкспорта = ФайловыеФункцииКлиент.НормализоватьКаталог(Диалог.Каталог);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкаДляЭкспортаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПапкаДляЭкспорта) Тогда
		ПапкаДляЭкспорта = ФайловыеФункцииКлиент.НормализоватьКаталог(ПапкаДляЭкспорта);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФайловДляВыбораВыгружатьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокФайловДляВыбора.ТекущиеДанные;
	
	Если ТекущиеДанные.ЭтоРодитель Или ТекущиеДанные.ЭтоРольФайла Тогда 
		
		Выгружать = ТекущиеДанные.Выгружать;
		СтрокаДерева = СписокФайловДляВыбора.НайтиПоИдентификатору(Элементы.СписокФайловДляВыбора.ТекущаяСтрока);
		
		Для Каждого Строка Из СтрокаДерева.ПолучитьЭлементы() Цикл
			Строка.Выгружать = Выгружать;
			
			Для Каждого Строка2 Из Строка.ПолучитьЭлементы() Цикл
				Строка2.Выгружать = Выгружать;
			КонецЦикла;	
			
		КонецЦикла;	
		
	КонецЕсли;	
	
	КоличествоВыбранныхФайлов = ПолучитьКоличествоВыбранныхФайлов(СписокФайловДляВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоОригиналыПриИзменении(Элемент)
	
	ЗаполнитьСписокФайлов();
	РазвернутьСписокФайлов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВключатьСвязанныеДокументыПриИзменении(Элемент)
	
	Если ВключатьСвязанныеДокументы Тогда 
		
		Элементы.ТипыСвязей.ТолькоПросмотр = Ложь;
		ТипыСвязей.ЗагрузитьЗначения(ДоступныеТипыСвязей.ВыгрузитьЗначения());
		
	Иначе	
		Элементы.ТипыСвязей.ТолькоПросмотр = Истина;
		ТипыСвязей.Очистить();
	КонецЕсли;
	
	ЗаполнитьСписокФайлов();
	РазвернутьСписокФайлов();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипыСвязейНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВыбранныеТипыСвязей", ТипыСвязей.ВыгрузитьЗначения());
	ПараметрыФормы.Вставить("ДоступныеТипыСвязей", ДоступныеТипыСвязей.ВыгрузитьЗначения());
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ТипыСвязейНачалоВыбораПродолжение", 
		ЭтотОбъект);
	
	ОткрытьФорму("Справочник.ТипыСвязей.Форма.ФормаПодбора", ПараметрыФормы, ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура ТипыСвязейНачалоВыбораПродолжение(Результат, Параметры) Экспорт 
	
	Если ТипЗнч(Результат) = Тип("Массив") Тогда 
		ТипыСвязей.ЗагрузитьЗначения(Результат);
		
		ЗаполнитьСписокФайлов();
		РазвернутьСписокФайлов();
	КонецЕсли;

КонецПроцедуры	

&НаКлиенте
Процедура СписокФайловНаименованиеОткрытие(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокФайловДляВыбора.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	ПоказатьЗначение(, ТекущиеДанные.Файл);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФайловДляВыбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.СписокФайловНаименование Тогда 
		СтандартнаяОбработка = Ложь;
		
		ДанныеСтроки = СписокФайловДляВыбора.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Если ДанныеСтроки.ЭтоРодитель Тогда 
			ПоказатьЗначение(, ДанныеСтроки.ВладелецФайла);
		Иначе
			ПоказатьЗначение(, ДанныеСтроки.Файл);
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьДанные(Команда)
	
	ТекущиеДанные = Элементы.СписокФайловДляВыбора.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ТекущиеДанные.ЭтоРодитель Тогда 
		ПоказатьЗначение(, ТекущиеДанные.ВладелецФайла);
	Иначе
		ПоказатьЗначение(, ТекущиеДанные.Файл);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	#Если ВебКлиент Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'В Веб-клиенте сохранение файлов не поддерживается.'"));
		Возврат;
	#КонецЕсли
	
	Обработчик = Новый ОписаниеОповещения("СохранитьПослеУстановкиРасширения", ЭтотОбъект);
	ФайловыеФункцииСлужебныйКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Обработчик);
	
КонецПроцедуры	

&НаКлиенте
Процедура СохранитьПослеУстановкиРасширения(Результат, ПараметрыВыполнения) Экспорт
	
	Если НЕ ФайловыеФункцииСлужебныйКлиент.РасширениеРаботыСФайламиПодключено() Тогда
		ФайловыеФункцииСлужебныйКлиент.ПоказатьПредупреждениеОНеобходимостиРасширенияРаботыСФайлами(Неопределено);
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ЕстьПредупреждения = Ложь;
	СтрокаПредупреждения = "";
	МассивПредупреждений = Новый Массив;
	
	СписокИменФайлов = Новый СписокЗначений;
	СписокСчетчиковИменФайлов = Новый Массив;
	
	КоличествоВыбранныхФайлов = ПолучитьКоличествоВыбранныхФайлов(СписокФайловДляВыбора);
	Если КоличествоВыбранныхФайлов = 0 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не выбраны выгружаемые файлы'"),, "СписокФайловДляВыбора");
		Возврат;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ПапкаДляЭкспорта) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указана папка для сохранения файлов'"),, "ПапкаДляЭкспорта");
		Возврат;
	КонецЕсли;
	
	КаталогВыгрузки = Новый Файл(ПапкаДляЭкспорта);
	Если Не КаталогВыгрузки.Существует() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Указанная папка не найдена'"),, "ПапкаДляЭкспорта");
		Возврат;			
	КонецЕсли;	

	МассивЭДО = Новый Массив;
	МассивСтрокФайлов = Новый Массив;
	Для Каждого СтрокаРодитель Из СписокФайловДляВыбора.ПолучитьЭлементы() Цикл
		Для Каждого ДанныеСтроки Из СтрокаРодитель.ПолучитьЭлементы() Цикл
			
			Если ДанныеСтроки.Выгружать Тогда
				Если ДанныеСтроки.ЭтоЭДО Тогда
					МассивЭДО.Добавить(ДанныеСтроки.ВладелецФайла);
				ИначеЕсли ДанныеСтроки.ЭтоФайл Тогда	
					МассивСтрокФайлов.Добавить(ДанныеСтроки);
				КонецЕсли;
			КонецЕсли;

			Для Каждого ДанныеСтроки2 Из ДанныеСтроки.ПолучитьЭлементы() Цикл
				
				Если ДанныеСтроки2.Выгружать Тогда
					Если ДанныеСтроки2.ЭтоЭДО Тогда
						МассивЭДО.Добавить(ДанныеСтроки2.ВладелецФайла);
					ИначеЕсли ДанныеСтроки2.ЭтоФайл Тогда	
						МассивСтрокФайлов.Добавить(ДанныеСтроки2);
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;	
	
	Для Каждого ДанныеСтроки Из МассивСтрокФайлов Цикл
		
		Наименование = ДанныеСтроки.ИмяФайлаДляСохранения;
		Расширение = ДанныеСтроки.Расширение;
		
		ИмяФайлаСРасширением = Наименование + "." + Расширение;
		ВыбранноеПолноеИмяФайла = ПапкаДляЭкспорта + ИмяФайлаСРасширением;
		
		ПредлагаемоеПолноеИмяФайла = "";
		Файл = Новый Файл(ВыбранноеПолноеИмяФайла);
		Если Файл.Существует() Тогда
			ЕстьПредупреждения = Истина;
			
			Счетчик = НайтиВМассивеСчетчиков(ИмяФайлаСРасширением, СписокСчетчиковИменФайлов);
			Пока Файл.Существует() Цикл
				
				ПредлагаемоеИмяФайла = Наименование;
				ПредлагаемоеИмяФайла = 
					ФайловыеФункцииКлиентСервер.ПолучитьИмяСРасширением(
					ПредлагаемоеИмяФайла + " (" + Строка(Счетчик) + ")", Расширение); 
				ПредлагаемоеПолноеИмяФайла = ПапкаДляЭкспорта + ПредлагаемоеИмяФайла;
				
				Файл = Новый Файл(ПредлагаемоеПолноеИмяФайла);
				Счетчик = Счетчик + 1;
				
			КонецЦикла;
			ДобавитьВМассивСчетчиков(ИмяФайлаСРасширением, Счетчик, СписокСчетчиковИменФайлов);
			
			СтрокаПредупреждения = СтрокаПредупреждения + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Файл с именем ""%1"" уже существует в указанной папке. Можно сохранить с именем ""%2"".'") + Символы.ПС,
				ИмяФайлаСРасширением,
				ПредлагаемоеИмяФайла);
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Файл с именем ""%1"" уже существует в указанной папке.'"),
				ИмяФайлаСРасширением);
			
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"СписокФайловДляВыбора", 
				ДанныеСтроки.ПолучитьИдентификатор(),
				"ИмяФайлаДляСохранения");
			
			ОписаниеОшибки = Новый Структура;
			ОписаниеОшибки.Вставить("ТекстОшибки", ТекстОшибки);
			ОписаниеОшибки.Вставить("ЭлементФормы", ПутьКТабличнойЧасти);
			
			МассивПредупреждений.Добавить(ОписаниеОшибки);
		КонецЕсли;
		
		Если СписокИменФайлов.НайтиПоЗначению(ИмяФайлаСРасширением) = Неопределено
			Или (ЗначениеЗаполнено(ПредлагаемоеПолноеИмяФайла)
			И СписокИменФайлов.НайтиПоЗначению(ПредлагаемоеПолноеИмяФайла) = Неопределено) Тогда
			
			СписокИменФайлов.Добавить(ИмяФайлаСРасширением);
			
		Иначе
			ЕстьПредупреждения = Истина;
			
			Счетчик = НайтиВМассивеСчетчиков(ИмяФайлаСРасширением, СписокСчетчиковИменФайлов);
			ПредлагаемоеИмяФайла = ФайловыеФункцииКлиентСервер.ПолучитьИмяСРасширением(
				Наименование + " (" + Строка(Счетчик) + ")", Расширение);
			ПредлагаемоеПолноеИмяФайла = ПапкаДляЭкспорта + ПредлагаемоеИмяФайла;
			
			Счетчик = Счетчик + 1;
			Файл = Новый Файл(ПредлагаемоеПолноеИмяФайла);
			Пока Файл.Существует() Цикл
				ПредлагаемоеИмяФайла = ФайловыеФункцииКлиентСервер.ПолучитьИмяСРасширением(
					Наименование + " (" + Строка(Счетчик) + ")", Расширение); 
				ПредлагаемоеПолноеИмяФайла = ПапкаДляЭкспорта + ПредлагаемоеИмяФайла;
				
				Файл = Новый Файл(ПредлагаемоеПолноеИмяФайла);						
				Счетчик = Счетчик + 1;
			КонецЦикла;
			ДобавитьВМассивСчетчиков(ИмяФайлаСРасширением, Счетчик, СписокСчетчиковИменФайлов);
			
			СтрокаПредупреждения = СтрокаПредупреждения + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Файл с именем ""%1"" уже указан. Можно сохранить с именем ""%2""'") + Символы.ПС,
				ИмяФайлаСРасширением,
				ПредлагаемоеИмяФайла);
			
			ТекстОшибки = НСтр("ru = 'Файл с таким именем уже указан.'");		
			
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"СписокФайловДляВыбора", 
				ДанныеСтроки.ПолучитьИдентификатор(),
				"ИмяФайлаДляСохранения");
			
			ОписаниеОшибки = Новый Структура;
			ОписаниеОшибки.Вставить("ТекстОшибки", ТекстОшибки);
			ОписаниеОшибки.Вставить("ЭлементФормы", ПутьКТабличнойЧасти);
			
			МассивПредупреждений.Добавить(ОписаниеОшибки);
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстВариантаСохранитьСНовымИменем = НСтр("ru = 'Сохранить с предложенными именами'");		
	ТекстВариантаУточнить = НСтр("ru = 'Уточнить вариант для каждого файла'");
	ТекстВариантаОтмена = НСтр("ru = 'Скорректировать имена вручную'");

	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ТекстВариантаСохранитьСНовымИменем", ТекстВариантаСохранитьСНовымИменем);
	ПараметрыОповещения.Вставить("ТекстВариантаУточнить", ТекстВариантаУточнить);
	ПараметрыОповещения.Вставить("ТекстВариантаОтмена", ТекстВариантаОтмена);
	ПараметрыОповещения.Вставить("МассивСтрокФайлов", МассивСтрокФайлов);
	ПараметрыОповещения.Вставить("МассивПредупреждений", МассивПредупреждений);
	ПараметрыОповещения.Вставить("МассивЭДО", МассивЭДО);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СохранитьПродолжениеИменаФайлов",
		ЭтотОбъект,
		ПараметрыОповещения);

	Если ЕстьПредупреждения Тогда
		ТекстВопроса = СтрокаПредупреждения + НСтр("ru = 'Выберите вариант сохранения для указанных файлов:'");
							
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(ТекстВариантаСохранитьСНовымИменем);
		Кнопки.Добавить(ТекстВариантаУточнить);
		Кнопки.Добавить(ТекстВариантаОтмена);

		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки);
		Возврат;
	КонецЕсли;

	ВыполнитьОбработкуОповещения(ОписаниеОповещения); 

КонецПроцедуры

&НаКлиенте
Процедура СохранитьПродолжениеИменаФайлов(КодВозврата, Параметры) Экспорт 
	
	СохранитьСНовымИменем = Ложь;

	Если КодВозврата = Параметры.ТекстВариантаСохранитьСНовымИменем Тогда 
		СохранитьСНовымИменем = Истина;	
	ИначеЕсли КодВозврата = Параметры.ТекстВариантаОтмена Тогда
		Для Каждого ОписаниеПредупреждения Из Параметры.МассивПредупреждений Цикл
			ТекстОшибки = ОписаниеПредупреждения.ТекстОшибки;
			ЭлементФормы = ОписаниеПредупреждения.ЭлементФормы;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,ЭлементФормы);
		КонецЦикла;
		Возврат;
	КонецЕсли; 
	
	Параметры.Вставить("СохранитьСНовымИменем", СохранитьСНовымИменем);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СохранитьПродолжение",
		ЭтотОбъект,
		Параметры);
	
	МассивЭДО = Параметры.МассивЭДО;
	Если МассивЭДО.Количество() > 0  И ФорматыЭДО = 1 Тогда // ФНС
		
		Если ЕстьНезавершенныеДокументы(МассивЭДО) Тогда     
			
			Если МассивЭДО.Количество() = 1 Тогда
				ТекстВопроса = НСтр("ru = 'Для документа не завершен электронный документооборот.'");
			Иначе
				ТекстВопроса = НСтр("ru = 'Для некоторых документов не завершен электронный документооборот.'");
			КонецЕсли;
			ТекстВопроса = ТекстВопроса + " " + НСтр("ru = 'Продолжить выгрузку?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
			
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;	 
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещения); 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПродолжение(Результат, Параметры) Экспорт 

	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрокФайлов = Параметры.МассивСтрокФайлов;   
	СохранитьСНовымИменем = Параметры.СохранитьСНовымИменем;
	
	СписокФайлов = Новый СписокЗначений;
	Для Каждого ДанныеСтроки Из МассивСтрокФайлов Цикл
		Если Не ДанныеСтроки.ЭтоЭДО Тогда	
			СписокФайлов.Добавить(ДанныеСтроки.Файл);
		КонецЕсли;	
	КонецЦикла;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СохранитьЗавершение",
		ЭтотОбъект);
		
	МассивЭДО = Параметры.МассивЭДО;
	Если МассивЭДО.Количество() > 0 Тогда
		
		Если ФорматыЭДО = 0 Или ФорматыЭДО = 1 Или ФорматыЭДО = 2 Тогда // PDF или "ФНС" или "Весь документооборот"
			
			АдресДанныхВХранилище = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);			
			СоответствиеФайловВыгрузки = Неопределено;
			
			Если ФорматыЭДО = 0 Тогда
				СоответствиеФайловВыгрузки = СформироватьФайлыВыгрузкиЭДВФорматеPDF(МассивЭДО, АдресДанныхВХранилище);
			ИначеЕсли ФорматыЭДО = 1 Тогда
				СоответствиеФайловВыгрузки = СформироватьФайлыВыгрузкиЭДДляФНС(МассивЭДО, АдресДанныхВХранилище);
			ИначеЕсли ФорматыЭДО = 2 Тогда
				СоответствиеФайловВыгрузки = СформироватьФайлыВыгрузкиЭДДокументооборотЦеликом(МассивЭДО, АдресДанныхВХранилище);
			КонецЕсли;
			
			
			Если ФорматыЭДО = 0 Или ФорматыЭДО = 2 Тогда
			
				КоличествоФайлов = СоответствиеФайловВыгрузки.Количество();
				
				МассивФайлов = Новый Массив;
				Для Каждого КлючЗначениеФайлВыгрузки Из СоответствиеФайловВыгрузки Цикл
					ОписаниеФайла = Новый ОписаниеПередаваемогоФайла(КлючЗначениеФайлВыгрузки.Ключ.ИмяФайла,
						КлючЗначениеФайлВыгрузки.Значение);
					МассивФайлов.Добавить(ОписаниеФайла);
				КонецЦикла;
				
				Обработчик = Новый ОписаниеОповещения("СохранитьФайлыВыгрузкиЭДЗавершение", ИнтерфейсДокументовЭДОКлиент);
				
				Если КоличествоФайлов = 1 Тогда
					
					ИмяФайла = МассивФайлов[0].Имя;
					РасширениеФайла = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяФайла);
					
					АдресФайла = МассивФайлов[0].Хранение;
					ПутьКФайлу = ПапкаДляЭкспорта;
					Если Прав(ПутьКФайлу, 1) <> ПолучитьРазделительПутиКлиента() Тогда
						ПутьКФайлу = ПутьКФайлу + ПолучитьРазделительПутиКлиента();
					КонецЕсли;	
					ПутьКФайлу = ПутьКФайлу + ИмяФайла;

					ПолучитьФайл(АдресФайла, ПутьКФайлу, Ложь);  
					ИнтерфейсДокументовЭДОВызовСервера.УдалитьВыгруженныеФайлыИзХранилища(МассивФайлов);
					
				КонецЕсли; 
				
			ИначеЕсли ФорматыЭДО = 1 Тогда	
				
				РезультатВыгрузки = ВыгрузкаЭДДляФНСПодготовитьДанныеДляВыгрузкиВКаталог(
					СоответствиеФайловВыгрузки, Новый УникальныйИдентификатор);  
					
				ПапкаФНС = ПапкаДляЭкспорта;	
				Если Прав(ПапкаФНС, 1) <> ПолучитьРазделительПутиКлиента() Тогда
					ПапкаФНС = ПапкаФНС + ПолучитьРазделительПутиКлиента();
				КонецЕсли;	
				ПапкаФНС = ПапкаФНС + НСтр("ru = 'Выгрузка для ФНС'") + ПолучитьРазделительПутиКлиента();
				СоздатьКаталог(ПапкаФНС);
					
				Для Каждого ОписаниеФайла Из РезультатВыгрузки.МассивСохраняемыхФайлов Цикл

					ИмяФайла = ОписаниеФайла.Имя;
					РасширениеФайла = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяФайла);
					
					АдресФайла = ОписаниеФайла.Хранение;
					ПутьКФайлу = ПапкаФНС + ИмяФайла;

					ПолучитьФайл(АдресФайла, ПутьКФайлу, Ложь);  
					
				КонецЦикла;	
			
			КонецЕсли;
				
		КонецЕсли; 		
		
	КонецЕсли; 	
	
	Если МассивСтрокФайлов.Количество() > 0 Тогда
		ДанныеСохраняемыхФайлов = ПолучитьДанныеФайловДляСохраненияФайлов(СписокФайлов, УникальныйИдентификатор);
		ДанныеСохраняемыхФайлов = ОтобратьДанныеФайловДляСохранения(ДанныеСохраняемыхФайлов, МассивСтрокФайлов, ПапкаДляЭкспорта);
		РаботаСФайламиКлиент.СохранитьФайлы(ОписаниеОповещения, ДанныеСохраняемыхФайлов, 
			УникальныйИдентификатор, , Истина, СохранитьСНовымИменем);
		Возврат;	
	КонецЕсли; 
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
// Обрабатывает результат выгрузки электронных документов
// 
// Параметры:
//  Результат - Массив из ОписаниеПереданногоФайла
//  ДопПараметры - Неопределено
Процедура СохранитьФайлыВыгрузкиЭДЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;

	ИнтерфейсДокументовЭДОВызовСервера.УдалитьВыгруженныеФайлыИзХранилища(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьЗавершение(КодВозврата, Параметры) Экспорт 
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	
	Для Каждого Строка1 Из СписокФайловДляВыбора.ПолучитьЭлементы() Цикл
		Строка1.Выгружать = Истина;
		Для Каждого Строка2 Из Строка1.ПолучитьЭлементы() Цикл
			Строка2.Выгружать = Истина;
			
			Для Каждого Строка3 Из Строка2.ПолучитьЭлементы() Цикл
				Строка3.Выгружать = Истина;
			КонецЦикла;	
			
		КонецЦикла;	
	КонецЦикла;
	
	КоличествоВыбранныхФайлов = ПолучитьКоличествоВыбранныхФайлов(СписокФайловДляВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделение(Команда)
	
	Для Каждого Строка1 Из СписокФайловДляВыбора.ПолучитьЭлементы() Цикл
		Строка1.Выгружать = Ложь;
		Для Каждого Строка2 Из Строка1.ПолучитьЭлементы() Цикл
			Строка2.Выгружать = Ложь;
			
			Для Каждого Строка3 Из Строка2.ПолучитьЭлементы() Цикл
				Строка3.Выгружать = Ложь;
			КонецЦикла;	
			
		КонецЦикла;	
	КонецЦикла;
	
	КоличествоВыбранныхФайлов = ПолучитьКоличествоВыбранныхФайлов(СписокФайловДляВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокФайлов()
	
	ИспользоватьОбменЭД = ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭД");
	ЕстьЭДО = Ложь;        
	ЭтоПолныеПрава = РольДоступна(Метаданные.Роли.ПолныеПрава);
	
	ВладельцыФайлов = Новый Массив;
	Для Каждого Строка Из СписокВладельцев Цикл
		ВладельцыФайлов.Добавить(Строка.Значение);
	КонецЦикла;
	
	ВсеРолиФайлов.Очистить();
	РолиСоответствие = Новый Соответствие;
	
	Если ВключатьСвязанныеДокументы Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СвязиОбъектов.СвязанныйОбъект,
		|	СвязиОбъектов.Комментарий,
		|	СвязиОбъектов.Установил,
		|	СвязиОбъектов.ДатаУстановки
		|ИЗ
		|	РегистрСведений.СвязиОбъектов КАК СвязиОбъектов
		|ГДЕ
		|	СвязиОбъектов.Объект В(&Документы)";
		Запрос.УстановитьПараметр("Документы", ВладельцыФайлов);
		
		Если ТипыСвязей.Количество() > 0 Тогда 
			Запрос.Текст = Запрос.Текст + " И СвязиОбъектов.ТипСвязи В (&ТипыСвязей) ";
			Запрос.УстановитьПараметр("ТипыСвязей", ТипыСвязей.ВыгрузитьЗначения());
		КонецЕсли;	
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ВладельцыФайлов.Добавить(Выборка.СвязанныйОбъект);
		КонецЦикла;	
	КонецЕсли;    
	
	УстановитьПривилегированныйРежим(Истина);  
	
	ИспользоватьРолиФайлов = ПолучитьФункциональнуюОпцию("ИспользоватьРолиФайлов");
	
	ДеревоФайлов = РеквизитФормыВЗначение("СписокФайловДляВыбора");
	ДеревоФайлов.Строки.Очистить();
	
	Для Каждого ВладелецФайла Из ВладельцыФайлов Цикл      
		
		// сам документ
		СтрокаРодитель = ДеревоФайлов.Строки.Добавить();
		СтрокаРодитель.ИндексКартинки = 10;
		СтрокаРодитель.ПолноеНаименование = Строка(ВладелецФайла);
		СтрокаРодитель.ВладелецФайла = ВладелецФайла;
		СтрокаРодитель.ЭтоРодитель = Истина;
		СтрокаРодитель.Выгружать = Истина; 
		
		// документы ЭДО
		Если ИспользоватьОбменЭД И Не ТолькоОригиналы Тогда
			МассивЭД = ОбменЭДОДокументооборот.ЭлектронныеДокументыОбъектаУчета(СтрокаРодитель.ВладелецФайла, Ложь); // ТолькоАктуальные Ложь
			
			Для Каждого ДокументЭДО Из МассивЭД Цикл       
				
				ЕстьЭДО = Истина;

				НоваяСтрокаЭДО = СтрокаРодитель.Строки.Добавить();     
				НоваяСтрокаЭДО.Выгружать = Истина; 
				НоваяСтрокаЭДО.ИндексКартинки = 30;   
				НоваяСтрокаЭДО.ЭтоЭДО = Истина;
				НоваяСтрокаЭДО.ПолноеНаименование = Строка(ДокументЭДО);
				НоваяСтрокаЭДО.ВладелецФайла = ДокументЭДО;
				НоваяСтрокаЭДО.ЭтоРодитель = Истина;
				
			КонецЦикла;
			
		КонецЕсли;	
		
		ПоказыватьУдаленныеФайлы = Ложь;
		ОтметитьЗахваченныеФайлы = Ложь;
		
		МассивКомбинацийРолей = Новый Массив;
		ТаблицаФайлы = Делопроизводство.ПолучитьДанныеФайловДляСписка(Неопределено, ВладелецФайла, 
			ПоказыватьУдаленныеФайлы, ОтметитьЗахваченныеФайлы,
			МассивКомбинацийРолей);
			
		Если (Не ИспользоватьРолиФайлов Или МассивКомбинацийРолей.Количество() = 0) Тогда
			
			// "плоское" дерево заполним    
			
			Для Каждого ВыборкаДетали Из ТаблицаФайлы Цикл    
				
				Если ТолькоОригиналы И Не ВыборкаДетали.Оригинал Тогда
					Продолжить;
				КонецЕсли;	
				
				НоваяСтрока = СтрокаРодитель.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетали);  
				
				НоваяСтрока.ПолноеНаименование = ВыборкаДетали.Наименование;
				НоваяСтрока.ИмяФайлаДляСохранения = НоваяСтрока.ПолноеНаименование;
				НоваяСтрока.Размер = ВыборкаДетали.ТекущаяВерсияРазмер;   
				НоваяСтрока.ЯвляетсяОригиналом = ВыборкаДетали.Оригинал;
				НоваяСтрока.Файл = ВыборкаДетали.Ссылка;   
				НоваяСтрока.ЭтоФайл = Истина;
				
				РазмерФайла = ФайловыеФункцииКлиентСервер.ПолучитьСтрокуСРазмеромФайлаДляКарточкиПапки(НоваяСтрока.Размер);
				Если ЗначениеЗаполнено(РазмерФайла) Тогда 
					НоваяСтрока.ПолноеНаименование = НоваяСтрока.ПолноеНаименование + ", " + РазмерФайла;
				КонецЕсли;	
				
				НоваяСтрока.Выгружать = Истина;
				
			КонецЦикла;	
			
		Иначе 
			
			// 2 - у роли индекс картинки
			
			Для Каждого ОписаниеРоли Из МассивКомбинацийРолей Цикл  
				
				ИспользоватьЭтуРоль = Истина;
				
				Если ВсеРолиФайловОтбор.Количество() <> 0 
					И ОписаниеРоли.Роль <> Справочники.РолиФайлов.ПустаяСсылка() Тогда
					
					Найдено = ВсеРолиФайловОтбор.НайтиПоЗначению(ОписаниеРоли.Роль);
					Если Найдено = Неопределено Тогда 
						ИспользоватьЭтуРоль = Ложь;
					КонецЕсли;		
					
				КонецЕсли;	
				
				Если Не ИспользоватьЭтуРоль Тогда 
					Продолжить;
				КонецЕсли;	
				
				Ветка = СтрокаРодитель.Строки.Добавить();
				
				Ветка.ПолноеНаименование = Строка(ОписаниеРоли.Роль);
				Если ОписаниеРоли.Роль = Справочники.РолиФайлов.ПустаяСсылка() Тогда
					Ветка.ПолноеНаименование = "<>"; 
				Иначе
					
					Если РолиСоответствие.Получить(ОписаниеРоли.Роль) = Неопределено Тогда
						ВсеРолиФайлов.Добавить(ОписаниеРоли.Роль);
						РолиСоответствие[ОписаниеРоли.Роль] = 1;
					КонецЕсли;	

				КонецЕсли;	
				
				Ветка.ЭтоРольФайла = Истина;
				Ветка.ИндексКартинки = 2;
				Ветка.РольФайла = ОписаниеРоли.Роль;   
				Ветка.Выгружать = Истина;
				
				Для Каждого ВыборкаДетали Из ТаблицаФайлы Цикл
					Если ВыборкаДетали.РольФайла = ОписаниеРоли.Роль Тогда  
						
						Если ТолькоОригиналы И Не ВыборкаДетали.Оригинал Тогда
							Продолжить;
						КонецЕсли;	
						
						НоваяСтрока = Ветка.Строки.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетали);  
						
						НоваяСтрока.ПолноеНаименование = ВыборкаДетали.Наименование;
						НоваяСтрока.ИмяФайлаДляСохранения = НоваяСтрока.ПолноеНаименование;
						НоваяСтрока.Размер = ВыборкаДетали.ТекущаяВерсияРазмер;   
						НоваяСтрока.ЯвляетсяОригиналом = ВыборкаДетали.Оригинал;
						НоваяСтрока.Файл = ВыборкаДетали.Ссылка;
						НоваяСтрока.ЭтоФайл = Истина;
						
						РазмерФайла = ФайловыеФункцииКлиентСервер.ПолучитьСтрокуСРазмеромФайлаДляКарточкиПапки(НоваяСтрока.Размер);
						Если ЗначениеЗаполнено(РазмерФайла) Тогда 
							НоваяСтрока.ПолноеНаименование = НоваяСтрока.ПолноеНаименование + ", " + РазмерФайла;
						КонецЕсли;	
						
						НоваяСтрока.Выгружать = Истина;
						
					КонецЕсли;
				КонецЦикла;	
				
				Если Ветка.Строки.Количество() <> 0 Тогда  
					
					КолвоФайлов = 0;                             
					Для Каждого СтрФайлов Из Ветка.Строки Цикл
						КолвоФайлов = КолвоФайлов + 1; 
					КонецЦикла;	
					
					Ветка.ПолноеНаименование = Ветка.ПолноеНаименование 
					+ СтрШаблон(" (%1)", КолвоФайлов);
					
				Иначе
					СтрокаРодитель.Строки.Удалить(Ветка);
				КонецЕсли;	
				
			КонецЦикла;	
			
		КонецЕсли;	  
		
		Если СтрокаРодитель.Строки.Количество() = 0 Тогда  
			ДеревоФайлов.Строки.Удалить(СтрокаРодитель);
		КонецЕсли;	
			
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоФайлов, "СписокФайловДляВыбора");
	
	КоличествоВыбранныхФайлов = ПолучитьКоличествоВыбранныхФайлов(СписокФайловДляВыбора);  
	
	Элементы.ГруппаЭДО.Видимость = ЕстьЭДО;   
	
	ВсеРолиФайлов.СортироватьПоПредставлению();  
	
	Элементы.ГруппаРоли.Видимость = (ВсеРолиФайлов.Количество() <> 0);
	Если ВсеРолиФайловОтбор.Количество() = 0 Тогда
		ВсеРолиФайловОтбор.ЗагрузитьЗначения(ВсеРолиФайлов.ВыгрузитьЗначения());
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСписокФайлов()
	
	Для Каждого Элемент Из СписокФайловДляВыбора.ПолучитьЭлементы() Цикл
		Элементы.СписокФайловДляВыбора.Развернуть(Элемент.получитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьКоличествоВыбранныхФайлов(Дерево)
	
	КоличествоВыбранныхФайлов = 0;
	
	Для Каждого Строка1 Из Дерево.ПолучитьЭлементы() Цикл
		Для Каждого Строка2 Из Строка1.ПолучитьЭлементы() Цикл   
			
			Если Строка2.Выгружать И Строка2.ЭтоФайл Тогда
				КоличествоВыбранныхФайлов = КоличествоВыбранныхФайлов + 1;
			КонецЕсли;
			
			Для Каждого Строка3 Из Строка2.ПолучитьЭлементы() Цикл
				Если Строка3.Выгружать И Строка3.ЭтоФайл Тогда
					КоличествоВыбранныхФайлов = КоличествоВыбранныхФайлов + 1;
				КонецЕсли;
			КонецЦикла;	
			
		КонецЦикла;	
	КонецЦикла;
	
	Возврат КоличествоВыбранныхФайлов;
	
КонецФункции

&НаСервере
Функция ЭлементыДляСохранения()
	
	СохраняемыеЭлементы = Новый Структура;
	СохраняемыеЭлементы.Вставить("ПапкаДляЭкспорта", ПапкаДляЭкспорта);
	
	Возврат СохранениеВводимыхЗначений.СформироватьТаблицуСохраняемыхЭлементов(СохраняемыеЭлементы);
	
КонецФункции

&НаКлиенте
Функция НайтиВМассивеСчетчиков(ИскомоеЗначение, МассивСчетчиков)
	
	Для Каждого ЭлементМассива Из МассивСчетчиков Цикл
		Если ЭлементМассива.Значение = ИскомоеЗначение Тогда
			Возврат ЭлементМассива.Счетчик; 
		КонецЕсли;
	КонецЦикла;
	
	Возврат 1;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьВМассивСчетчиков(Значение, Счетчик, МассивСчетчиков)

	Для Каждого ЭлементМассива Из МассивСчетчиков Цикл
		Если ЭлементМассива.Значение = Значение Тогда
			ЭлементМассива.Счетчик = Счетчик;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Структура = Новый Структура;
	Структура.Вставить("Значение", Значение);
	Структура.Вставить("Счетчик", Счетчик);
	
	МассивСчетчиков.Добавить(Структура);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеФайловДляСохраненияФайлов(СписокФайлов, УникальныйИдентификатор)
	
	СписокДанныхФайлов = Новый СписокЗначений;
	
	ОбщийРазмер = 0;
	Для Каждого Файл Из СписокФайлов Цикл
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляСохранения(
			Файл.Значение,
			Неопределено,
			УникальныйИдентификатор);
		
		СписокДанныхФайлов.Добавить(ДанныеФайла);
		ОбщийРазмер = ОбщийРазмер + ДанныеФайла.Размер;
	КонецЦикла;		
	
	ДанныеСохраняемыхФайлов = Новый Структура;
	ДанныеСохраняемыхФайлов.Вставить("СписокДанныхФайлов", СписокДанныхФайлов);
	ДанныеСохраняемыхФайлов.Вставить("СписокФайлов", СписокФайлов);
	ДанныеСохраняемыхФайлов.Вставить("ПутьВыбора", "");
	ДанныеСохраняемыхФайлов.Вставить("КоличествоФайлов", СписокФайлов.Количество());
	ДанныеСохраняемыхФайлов.Вставить("ОбщийРазмер", ОбщийРазмер);
	
	Возврат ДанныеСохраняемыхФайлов;
	
КонецФункции

&НаКлиенте
Функция ОтобратьДанныеФайловДляСохранения(ДанныеСохраняемыхФайлов, МассивСтрокФайлов, ПутьВыбора)
	
	СписокДанныхФайлов = Новый СписокЗначений;
	ОбщийРазмер = 0;
	
	Для Каждого СтрокаФайл Из ДанныеСохраняемыхФайлов.СписокДанныхФайлов Цикл
		
		ДанныеФайла = СтрокаФайл.Значение;
		
		ФайлВСписке = Неопределено;
		Для Каждого ДанныеСтроки Из МассивСтрокФайлов Цикл
			Если ДанныеСтроки.Файл = ДанныеФайла.Ссылка Тогда 
				ФайлВСписке = ДанныеСтроки;
				Прервать;
			КонецЕсли;	
		КонецЦикла;
		
		Если ФайлВСписке <> Неопределено Тогда
			Наименование = ФайлВСписке.ИмяФайлаДляСохранения;
			Расширение = ДанныеФайла.Расширение;
			ФайлВСписке.Расширение = ДанныеФайла.Расширение;
				
			ДанныеФайла.ПолноеНаименованиеВерсии = Наименование; 
				
			СписокДанныхФайлов.Добавить(ДанныеФайла);
			ОбщийРазмер = ОбщийРазмер + ДанныеФайла.Размер;
		КонецЕсли;
			
	КонецЦикла;
	
	СписокФайлов = Новый СписокЗначений;
	Для Каждого ДанныеСтроки Из МассивСтрокФайлов Цикл
		СписокФайлов.Добавить(ДанныеСтроки.Файл);
	КонецЦикла;
	
	ДанныеСохраняемыхФайлов = Новый Структура;
	ДанныеСохраняемыхФайлов.Вставить("СписокДанныхФайлов", СписокДанныхФайлов);
	ДанныеСохраняемыхФайлов.Вставить("СписокФайлов", СписокФайлов);
	ДанныеСохраняемыхФайлов.Вставить("ПутьВыбора", ПутьВыбора);
	ДанныеСохраняемыхФайлов.Вставить("КоличествоФайлов", СписокФайлов.Количество());
	ДанныеСохраняемыхФайлов.Вставить("ОбщийРазмер", ОбщийРазмер);
	
	Возврат ДанныеСохраняемыхФайлов;
	
КонецФункции

&НаСервереБезКонтекста
Функция СформироватьФайлыВыгрузкиЭДВФорматеPDF(МассивЭДО, АдресДанныхВХранилище)
	
	СоответствиеДанныеФайлаДвоичныеДанные = ИнтерфейсДокументовЭДО.СформироватьФайлыВыгрузкиЭДВФорматеPDF(МассивЭДО, АдресДанныхВХранилище);
	Возврат СоответствиеДанныеФайлаДвоичныеДанные;
	
КонецФункции

&НаСервереБезКонтекста
Функция СформироватьФайлыВыгрузкиЭДДокументооборотЦеликом(МассивЭДО, АдресДанныхВХранилище)
	
	СоответствиеДанныеФайлаДвоичныеДанные = ИнтерфейсДокументовЭДО.СформироватьФайлыВыгрузкиЭДДокументооборотЦеликом(МассивЭДО, АдресДанныхВХранилище);
	Возврат СоответствиеДанныеФайлаДвоичныеДанные;
	
КонецФункции

&НаСервереБезКонтекста
Функция СформироватьФайлыВыгрузкиЭДДляФНС(МассивЭДО, АдресДанныхВХранилище)
	
	СоответствиеДанныеФайлаДвоичныеДанные = ИнтерфейсДокументовЭДО.СформироватьФайлыВыгрузкиЭДДляФНС(МассивЭДО);
	Возврат СоответствиеДанныеФайлаДвоичныеДанные;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЕстьНезавершенныеДокументы(Знач ЭлектронныеДокументы)
	
	Возврат ЭлектронныеДокументыЭДО.НезавершенныеДокументы(ЭлектронныеДокументы).Количество() <> 0;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВыгрузкаЭДДляФНСПодготовитьДанныеДляВыгрузкиВКаталог(Знач РезультатВыгрузки, Знач УникальныйИдентификатор) Экспорт
	
	Результат = Новый Структура("РезультатыОбработки, МассивСохраняемыхФайлов, Ошибки", 
		Новый Соответствие, Новый Массив, Новый Массив);
	
	Результат.РезультатыОбработки = ОбщегоНазначения.СкопироватьРекурсивно(РезультатВыгрузки.РезультатыОбработки);
	Результат.Ошибки = ОбщегоНазначения.СкопироватьРекурсивно(РезультатВыгрузки.Ошибки);
	Для Каждого Элемент Из РезультатВыгрузки.СоответствиеФайлов Цикл
		ОписаниеФайла = Новый ОписаниеПередаваемогоФайла(Элемент.Ключ,
			ПоместитьВоВременноеХранилище(Элемент.Значение, УникальныйИдентификатор));
		Результат.МассивСохраняемыхФайлов.Добавить(ОписаниеФайла);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции


#КонецОбласти