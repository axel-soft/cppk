
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		ЭтаФорма.Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ТипЗначения) Тогда
		Если ТипЗнч(Параметры.ТипЗначения) = Тип("Строка") Тогда
			Если СтрНачинаетсяС(Параметры.ТипЗначения, "ОпределяемыйТип.") Тогда
				ИмяТипа = СтрЗаменить(Параметры.ТипЗначения, "ОпределяемыйТип.", "");
				ОпределяемыйТип = Метаданные.ОпределяемыеТипы[ИмяТипа];
				Список.ТипЗначения = ОпределяемыйТип.Тип;
			Иначе
				Список.ТипЗначения = Новый ОписаниеТипов(Параметры.ТипЗначения);
			КонецЕсли;
		Иначе
			Список.ТипЗначения = Параметры.ТипЗначения;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Список) Тогда
		Список.ЗагрузитьЗначения(Параметры.Список.ВыгрузитьЗначения());
	Иначе
		Список.Добавить();
	КонецЕсли;
	
	Если Параметры.Свойство("Отбор") И ЗначениеЗаполнено(Параметры.Отбор) Тогда
		Для Каждого Эл Из Параметры.Отбор Цикл
			ПараметрыОтбор.Добавить(Эл.Значение, Эл.Ключ);
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.ВыбиратьГруппыИЭлементы = Истина Тогда
		Элементы.СписокЗначение.ВыборГруппИЭлементов = ГруппыИЭлементы.ГруппыИЭлементы;	
	КонецЕсли;
	
	Если Параметры.Свойство("СписокВыбора") И ЗначениеЗаполнено(Параметры.СписокВыбора) Тогда
		Для Каждого Элемент Из Параметры.СписокВыбора Цикл
			ЗаполнитьЗначенияСвойств(Элементы.СписокЗначение.СписокВыбора.Добавить(), Элемент);
		КонецЦикла;
		Если Параметры.Свойство("РежимВыбораИзСписка") И Параметры.РежимВыбораИзСписка = Истина Тогда
			Элементы.СписокЗначение.РежимВыбораИзСписка = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ПараметрыВыбора") Тогда
		Элементы.СписокЗначение.ПараметрыВыбора = Параметры.ПараметрыВыбора;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	МУдаления = Новый Массив;
	Для Каждого Эл Из Список Цикл
		Если Не РазрешатьПустые И Не ЗначениеЗаполнено(Эл.Значение) Тогда
			//Удаляем пустые.	
		    МУдаления.Добавить(Эл);
			Продолжить;
		ИначеЕсли Не РазрешатьДублирование И Список.НайтиПоЗначению(Эл.Значение) <> Эл Тогда
			//Удаляем дубли.
			МУдаления.Добавить(Эл);
		Иначе
			Эл.Представление = Строка(Эл.Значение); //Сразу кэшируем представления.
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Эл Из МУдаления Цикл
		Список.Удалить(Эл);	
	КонецЦикла;
	
	Модифицированность = Ложь;
	
	ОповеститьОВыборе(Список); 
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиСписок(Команда)
	
	Стр = "";
	Для Каждого Эл Из Список Цикл
		Стр = Стр + ";" + Символы.ПС + Эл.Значение; 	
	КонецЦикла;
	
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ВывестиСписокПродолжение", ЭтаФорма),
		Сред(Стр, 3),
		Заголовок,,
		Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура ВывестиСписокПродолжение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено тогда
		Возврат;
	Конецесли;
		
КонецПроцедуры

&НаКлиенте
Процедура СписокЗначениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Для Каждого Эл Из ПараметрыОтбор Цикл
		ПараметрыПолученияДанных.Отбор.Вставить(Эл.Представление, Эл.Значение);
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура СписокЗначениеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Для Каждого Эл Из ПараметрыОтбор Цикл
		ПараметрыПолученияДанных.Отбор.Вставить(Эл.Представление, Эл.Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ПараметрыОтбор.Количество() > 0 И Элементы.Список.ТекущиеДанные.Значение <> Неопределено Тогда
		ТекущееИмяФормы = ПолучитьИмяФормыВыбора(ТипЗнч(Элементы.Список.ТекущиеДанные.Значение));
		Если ТекущееИмяФормы <> Неопределено Тогда
			СтандартнаяОбработка = Ложь;
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор", Новый Структура());
			Для Каждого Эл Из ПараметрыОтбор Цикл
				ПараметрыФормы.Отбор.Вставить(Эл.Представление, Эл.Значение);
				//Для некоторых форм нужно указывать непосредственно в параметрах.
				ПараметрыФормы.Вставить(Эл.Представление, Эл.Значение);
			КонецЦикла;
			ПараметрыФормы.Вставить("ТекущаяСтрока", Элементы.Список.ТекущиеДанные.Значение);
					
			ОткрытьФорму(ТекущееИмяФормы,
				ПараметрыФормы,
				Элемент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИмяФормыВыбора(ТипЗначения)
	
	Мет = Метаданные.НайтиПоТипу(ТипЗначения);
	Если Мет <> Неопределено Тогда
		Возврат	Мет.ПолноеИмя() + ".ФормаВыбора";
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И Не Отказ Тогда
		
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемПодтверждение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,,
			КодВозвратаДиалога.Отмена);
		
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемПодтверждение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОК(Неопределено);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

