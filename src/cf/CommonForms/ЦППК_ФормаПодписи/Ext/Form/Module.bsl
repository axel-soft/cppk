#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Файлы = Неопределено;
	Параметры.Свойство("Файлы", Файлы);
	
	ТекущийДокумент = Параметры.ТекущийДокумент;
	
	Если Файлы <> Неопределено Тогда
		
		Для Каждого ЭлементТаблицы Из Файлы Цикл
			НоваяСтрока 					= ТаблицаСФайлами.Добавить();
			НоваяСтрока.Ссылка				= ЭлементТаблицы.Файл;
			НоваяСтрока.Наименование	    = ЭлементТаблицы.Файл.Наименование;
			НоваяСтрока.ДатаСоздания		= ЭлементТаблицы.Файл.ДатаСоздания;
			НоваяСтрока.ПодписанЭП			= ЭлементТаблицы.Файл.ПодписанЭП;  
			НоваяСтрока.Описание			= ЭлементТаблицы.Файл.Описание;
			НоваяСтрока.ИндексКартинки		= ЭлементТаблицы.Файл.ИндексКартинки;
			НоваяСтрока.Автор				= ЭлементТаблицы.Файл.Автор;
		КонецЦикла;                                                  
		
	КонецЕсли;
	
КонецПроцедуры   

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл" Тогда
		Если Параметр.Свойство("Файл") Тогда
			ДобавитьФайлНаФорму(Параметр.Файл);
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "ИмпортФайловЗавершен" Тогда
		ДобавитьФайлНаФорму(Источник.МассивСсылокФайлов);
	КонецЕсли;
	
	Если ИмяСобытия = "ПрисоединенныйФайлПодписан" И Параметр = ТекущийДокумент Тогда
		Закрыть(Новый Структура("ФайлыПодписаны", Истина));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодписатьФайлы(Команда) //Подписать только выделенные строки

	НачатьПодписьФайлов(Ложь);
	//ЗарегистрироватьДокумент();
	//МассивДляПодписи = Новый Массив;
	//
	//Для Каждого СтрокаТЧ Из ТаблицаСФайлами Цикл
	//	Если Не СтрокаТЧ.ПодписанЭП И СтрокаТЧ.НаПодпись Тогда
	//		МассивДляПодписи.Добавить(СтрокаТЧ.Ссылка);
	//	КонецЕсли;
	//КонецЦикла; 
	//
	//Если МассивДляПодписи.Количество() > 0 Тогда
	//	ПодписатьФайл(МассивДляПодписи); 
	//	Оповестить("ПодписаноЧерезФормуПодписи_ВыполнитьЗадачу",,ЭтотОбъект);
	//Иначе
	//	ТекстСообщения = НСтр("ru = 'Файлов для подписи не обнаружено(возможно уже все файлы подписаны ранее)'");
	//	Оповестить("ВыполнитьДействиеЗадачиНаКлиентеВФорме_НеВыполненаВФормеПодписи",ТекстСообщения,ЭтотОбъект);	
	//КонецЕсли;
	
	//ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьВсеФайлы(Команда)
	
	НачатьПодписьФайлов(Истина);
	//
	//ЗарегистрироватьДокумент();
	//МассивДляПодписи = Новый Массив;
	//
	//Для Каждого СтрокаТЧ Из ТаблицаСФайлами Цикл
	//	Если Не СтрокаТЧ.ПодписанЭП Тогда
	//		МассивДляПодписи.Добавить(СтрокаТЧ.Ссылка);
	//	КонецЕсли;
	//КонецЦикла; 
	//
	//Если МассивДляПодписи.Количество() > 0 Тогда
	//	ПодписатьФайл(МассивДляПодписи); 
	//	Оповестить("ПодписаноЧерезФормуПодписи_ВыполнитьЗадачу",,ЭтотОбъект);
	//Иначе
	//	ТекстСообщения = НСтр("ru = 'Файлов для подписи не обнаружено(возможно уже все файлы подписаны ранее)'");
	//	Оповестить("ВыполнитьДействиеЗадачиНаКлиентеВФорме_НеВыполненаВФормеПодписи",ТекстСообщения,ЭтотОбъект);	
	//КонецЕсли;
	//
	//ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайл(Команда)
	
	ПараметрыДобавления = Новый Структура;
	ФайлыПередНачаломДобавленияКлиент(Элементы.ТаблицаСФайлами, Истина, Ложь, Неопределено, Неопределено, ПараметрыДобавления);

КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьДокумент1(Команда)
	ЗарегистрироватьДокумент();
КонецПроцедуры

#КонецОбласти  

#Область СлужебныеПроцедурыИФункции

#Область Подписи

&НаКлиенте
Процедура ПодписатьФайл(МассивФайлов)
	
	ЗарегистрироватьДокумент();
	
	Если НЕ ИнформацияОРегистрации Тогда
		Возврат;
	КонецЕсли;

	ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайла(МассивФайлов[0]);
	
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("ВладелецФайла", ДанныеФайла.Владелец);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодписатьФайлЗавершение", ЭтотОбъект, ПараметрыВыполнения);
	
	РаботаСФайламиСлужебныйКлиент.ПодписатьФайл(МассивФайлов, УникальныйИдентификатор, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьФайлЗавершение(Результат, ПараметрыВыполнения) Экспорт
	
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	Оповестить("ПрисоединенныйФайлПодписан", ПараметрыВыполнения.ВладелецФайла);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьДокумент()
	
	ОписаниеОшибки = НСтр("ru = 'Документ не удалось зарегистрировать.'");
	Попытка
		
		Если ТекущийДокумент = ПустойДокумент() Тогда
			ВызватьИсключение(НСтр("ru = 'Не удалось получить сведения для регистрации документа. Документ не зарегистрирован! (в подписи не будет указан рег. номер)'"));
		КонецЕсли;
		
		Если Не Делопроизводство.ЗарегистрироватьПредмет(
			ТекущийДокумент, ОписаниеОшибки) Тогда
			
			ВызватьИсключение ОписаниеОшибки;
		КонецЕсли;
		ИнформацияОРегистрации = Истина;
	Исключение
		ИнформацияОРегистрации = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось зарегистрировать документ'"));
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПустойДокумент()
	Возврат Справочники.ДокументыПредприятия.ПустаяСсылка();
КонецФункции

#КонецОбласти

#Область ДобавлениеФайла

&НаКлиенте
Процедура ФайлыПередНачаломДобавленияКлиент(Элемент, Отказ, Копирование, Родитель, Группа, ПараметрыДобавления)
	
	ДобавлениеОригинала = ПараметрыДобавления.Свойство("ДобавлениеОригинала", ДобавлениеОригинала);

	ВладелецФайла = ТекущийДокумент;
	
	РольФайла = Неопределено;
	
	СтруктураТекущегоДокумента = СтруктураТекущегоДокумента(ТекущийДокумент);
	
	ТекущиеДанные = Элементы.ТаблицаСФайлами.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.РольФайла) Тогда
		РольФайла = ТекущиеДанные.РольФайла;
	ИначеЕсли ТаблицаСФайлами.Количество() <> 0 Тогда	
		СтрФайлы = ТаблицаСФайлами[0];
		Если ЗначениеЗаполнено(СтрФайлы.РольФайла) Тогда
			РольФайла = СтрФайлы.РольФайла;
		КонецЕсли;		
	КонецЕсли;	
	
	МожноДобавитьТолькоОдинФайл = Ложь;
	
	Если Не Копирование Тогда
		Попытка
			
			РежимСоздания = ?(ДобавлениеОригинала, 2, 1);
			ДополнительныеПараметры = Новый Структура("МожноДобавитьТолькоОдинФайл", МожноДобавитьТолькоОдинФайл);
			
			РаботаСФайламиКлиент.ДобавитьФайл(Неопределено, ВладелецФайла, 
				ЭтаФорма, РежимСоздания, Истина, ДобавлениеОригинала,,,,,
				СтруктураТекущегоДокумента.Шаблон, РольФайла, , ДополнительныеПараметры);
				
		Исключение
			ПоказатьПредупреждение(, ФайловыеФункцииСлужебныйКлиентСервер.ОшибкаСозданияНовогоФайла(
				ИнформацияОбОшибке()));
		КонецПопытки;
	Иначе
		ТекущиеДанные = Элементы.ТаблицаСФайлами.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли;	
		ФайлОснование = ТекущиеДанные.Ссылка;
		
		СкопироватьФайл(ВладелецФайла, ФайлОснование);
	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура СкопироватьФайл(ВладелецФайла, ФайлОснование)
	
	Если Не ЗначениеЗаполнено(ВладелецФайла) Тогда
		Шаблон = НСтр("ru = 'Не задано значение параметра %1 в %2.'");
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, "ВладелецФайла",
			"РаботаСФайламиКлиент.СкопироватьФайл");
	КонецЕсли;
	
	Параметры = Новый Структура("ФайлОснование, ВладелецФайла, БылаОткрытаФормаПодписи", ФайлОснование, ВладелецФайла, Истина);
	Форма = ОткрытьФорму("Справочник.Файлы.ФормаОбъекта", Параметры);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтруктураТекущегоДокумента(Знач ТекДокумент)
	
	СтруктураДокумента = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументыПредприятия.Шаблон КАК Шаблон
		|ИЗ
		|	Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|ГДЕ
		|	ДокументыПредприятия.Ссылка = &ТекДокумент";
	
	Запрос.УстановитьПараметр("ТекДокумент", ТекДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
    	СтруктураДокумента.Вставить("Шаблон", Выборка.Шаблон);
	КонецЦикла;

    Возврат СтруктураДокумента;
	
КонецФункции

&НаСервере
Процедура ДобавитьФайлНаФорму(Знач НовыеФайлы)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Файлы.Ссылка КАК Ссылка,
		|	Файлы.Наименование КАК Наименование,
		|	Файлы.ДатаСоздания КАК ДатаСоздания,
		|	Файлы.Описание КАК Описание,
		|	Файлы.ИндексКартинки КАК ИндексКартинки,
		|	Файлы.Автор КАК Автор,
		|	Файлы.ПодписанЭП КАК ПодписанЭП
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	Файлы.Ссылка В (&НовыеФайлы)";
		
		Запрос.УстановитьПараметр("НовыеФайлы", НовыеФайлы);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ТаблицаСФайлами.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка); 
		КонецЦикла;                                        
		

КонецПроцедуры

&НаКлиенте
Асинх Процедура НачатьПодписьФайлов(ВсеФайлы = Ложь)

	ЗарегистрироватьДокумент();
	МассивДляПодписи = Новый Массив;
	
	Для Каждого СтрокаТЧ Из ТаблицаСФайлами Цикл
		Если Не СтрокаТЧ.ПодписанЭП И (СтрокаТЧ.НаПодпись ИЛИ ВсеФайлы) Тогда
			МассивДляПодписи.Добавить(СтрокаТЧ.Ссылка);
		КонецЕсли;
	КонецЦикла; 
	
	Если МассивДляПодписи.Количество() > 0 Тогда
		ПодписатьФайл(МассивДляПодписи); 
		//Оповестить("ПодписаноЧерезФормуПодписи_ВыполнитьЗадачу",,ЭтотОбъект);
	ИначеЕсли ТаблицаСФайлами.Количество() > 0 Тогда
		Результат = Ждать ВопросАсинх("Файлы уже подписаны. Завершить задачу?", РежимДиалогаВопрос.ДаНет);
		Если Результат = КодВозвратаДиалога.Да Тогда
			Закрыть(Новый Структура("ФайлыПодписаны", Истина));
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'Не удалось завершить задачу. Нет файлов к подписанию или подписанных'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#КонецОбласти
