// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Предмет = Параметры.Предмет;
	
	ДействияВПараметре = Параметры.Действия.ВыгрузитьЗначения(); // Массив из ОпределяемыйТип.Действия
	РеквизитыДействий = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ДействияВПараметре, "ВыполненоВнеПрограммы");
	
	Для Каждого Действие Из ДействияВПараметре Цикл 
		//@skip-check property-return-type
		Если РеквизитыДействий[Действие].ВыполненоВнеПрограммы Тогда
			Продолжить;
		КонецЕсли;
		//@skip-check typed-value-adding-to-untyped-collection
		Действия.Добавить(Действие);
	КонецЦикла;
	
	Если Действия.Количество() Тогда
		//@skip-check statement-type-change
		Действие = Действия[0].Значение;
		РежимНесколькихДействий = Действия.Количество() > 1;
		ЗаполнитьФормуПоТекущемуДействию();
	Иначе
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru='Нет действий, которым можно установить результат выполнения вне программы.'"), , , , Отказ);
	КонецЕсли;
	
	Элементы.ДекорацияКоличествоДействий.Видимость = РежимНесколькихДействий;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	Если Не ЭтоДействиеИсполнения Или Не ЕстьРассматривающие Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("РезультатРассмотрения"));
	КонецЕсли;
	
	Если ЭтоДействиеПодписания И Элементы.УчастникиОрганизация.СписокВыбора.Количество() > 0 Тогда
		
		Для Каждого УчастникСтрока Из Участники Цикл
			Если Не ЗначениеЗаполнено(УчастникСтрока.Организация) Тогда
				
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru='Не заполнена организация у участника %1'"), УчастникСтрока.Участник),
					,
					СтрШаблон("Участники[%1].Организация", Участники.Индекс(УчастникСтрока)),
					, Отказ);
				
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьРезультат(Команда)
	
	Если УстановитьРезультатНаСервере() Тогда
		Если РежимНесколькихДействий Тогда
			
			ИндексТекущегоДействия = Действия.Индекс(Действия.НайтиПоЗначению(Действие));
			
			Если ИндексТекущегоДействия = Действия.Количество() - 1 Тогда
				Закрыть(Истина);
			Иначе
				//@skip-check statement-type-change
				Действие = Действия[ИндексТекущегоДействия+1].Значение; // ОпределяемыйТип.Действия
				ЗаполнитьФормуПоТекущемуДействию();
				
				ВладелецФормы.ОбновитьДействияВФорме();
				
			КонецЕсли;
			
		Иначе
			Закрыть(Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СледующееДействие(Команда)

	ИндексТекущегоДействия = Действия.Индекс(Действия.НайтиПоЗначению(Действие));
	//@skip-check statement-type-change
	Действие = Действия[ИндексТекущегоДействия+1].Значение; // ОпределяемыйТип.Действия
	ЗаполнитьФормуПоТекущемуДействию();

КонецПроцедуры

&НаКлиенте
Процедура ПредыдущееДействие(Команда)

	ИндексТекущегоДействия = Действия.Индекс(Действия.НайтиПоЗначению(Действие));
	//@skip-check statement-type-change
	Действие = Действия[ИндексТекущегоДействия-1].Значение; // ОпределяемыйТип.Действия
	ЗаполнитьФормуПоТекущемуДействию()

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьФормуПоТекущемуДействию()
	
	//@skip-check statement-type-change
	РезультатДействия = Неопределено;
	//@skip-check statement-type-change
	РезультатРассмотрения = Неопределено;
	
	ДействиеВыполненоВнеПрограммы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Действие, "ВыполненоВнеПрограммы");
	
	ПредметОбъект = Неопределено; // Кэш для объекта предмета
	
	ФункцияИсполнителяДействия = ДействияСервер.ФункцияДействияУчастникаПоУмолчанию(Действие);
	
	ДатаРезультата = ТекущаяДатаСеанса();
	
	ЭтоДействиеПодписания = ДействияКлиентСервер.ЭтоДействиеПодписания(Действие);
	ЭтоДействиеИсполнения = ДействияКлиентСервер.ЭтоДействиеИсполнения(Действие);
	
	Если ЭтоДействиеПодписания Тогда
		УчастникиДействия = Справочники.ДействияПодписания.УчастникиДействияПодписывающие(Действие);
	Иначе
		УчастникиДействия = ДействияСервер.УчастникиДействия(Действие);
	КонецЕсли;
	
	Участники.Очистить();
	Для Каждого УчастникДействия Из УчастникиДействия Цикл
		НовыйУчастник = Участники.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйУчастник, УчастникДействия);
		НовыйУчастник.Дата = ДатаРезультата;
		
		Если ЗначениеЗаполнено(УчастникДействия.Условие) Тогда
			
			Если ПредметОбъект = Неопределено Тогда
				ПредметОбъект = Предмет.ПолучитьОбъект();
			КонецЕсли;
			
			НовыйУчастник.УсловиеНеВыполнено = Не РаботаСАлгоритмамиПроверки.АлгоритмПоПредметуВыполняется(
				ПредметОбъект, УчастникДействия.Условие)
			
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.ДатаРезультата.Видимость = Не Участники.Количество();
	Элементы.Участники.Видимость = Участники.Количество() > 0;
	
	УстановитьВидимостьРассмотрения();
	УстановитьВидимостьПодписания();
	
	Элементы.РезультатДействия.СписокВыбора.ЗагрузитьЗначения(
		РаботаСПроцессамиПоОбработкамОбъектовКлиентСервер.РезультатыВыполненияДляТипаДействия(
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Действие, "ВидДействия.Тип")).ВыгрузитьЗначения());
	
	Если ДействиеВыполненоВнеПрограммы Тогда
		Заголовок = СтрШаблон(НСтр("ru='Действие ""%1"" уже отмечено как выполненное вне программы'"), 
			Действие);
		РезультатДействия = РегистрыСведений.РезультатыДействий.РезультатДействия(Действие);
	Иначе
		Заголовок = СтрШаблон(НСтр("ru='Укажите результат действия ""%1""'"), 
			Действие);
	КонецЕсли;
	Элементы.ФормаУстановитьРезультат.Доступность = Не ДействиеВыполненоВнеПрограммы;
	Элементы.РезультатРассмотрения.Доступность = Не ДействиеВыполненоВнеПрограммы;
	Элементы.ГруппаРезультатИДатаДействия.Доступность = Не ДействиеВыполненоВнеПрограммы;
	Элементы.Участники.ТолькоПросмотр = ДействиеВыполненоВнеПрограммы;
	
	ЗаполнитьРезультатПоУмолчанию();
	
	Если РежимНесколькихДействий Тогда
		ОбновитьЭлементыРежимаНесколькихДействий();
	Иначе
		Элементы.ГруппаНазадДалее.Видимость = Ложь;
		Элементы.ДекорацияКоличествоДействий.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыРежимаНесколькихДействий()
	
	ИндексТекущегоДействия = Действия.Индекс(Действия.НайтиПоЗначению(Действие));
	Элементы.ПредыдущееДействие.Доступность = ИндексТекущегоДействия > 0;
	Элементы.СледующееДействие.Доступность = ИндексТекущегоДействия < Действия.Количество() - 1;
	
	Элементы.ДекорацияКоличествоДействий.Заголовок = СтрШаблон(НСтр("ru='Действие %1 из %2'"),
		ИндексТекущегоДействия + 1, Действия.Количество());
	
КонецПроцедуры

&НаСервере
Функция УстановитьРезультатНаСервере()
 	
 	Если Не ПроверитьЗаполнение() Тогда
 		Возврат Ложь;
 	КонецЕсли;
 	
 	СведенияОРезультате = ДействияСервер.НовыйСведенияОРезультатеВыполненияДействияВнеПрограммы();
 	СведенияОРезультате.РезультатДействия = РезультатДействия;
 	СведенияОРезультате.ДатаРезультата = ДатаРезультата;
 	СведенияОРезультате.РезультатРассмотрения = РезультатРассмотрения;
 	СведенияОРезультате.ФункцияИсполнителяДействия = ФункцияИсполнителяДействия;
 	СведенияОРезультате.Участники = Участники.Выгрузить();
 	
	Возврат ДействияСервер.УстановитьРезультатВыполненияДействияВнеПрограммы(Действие,
		СведенияОРезультате);
	
КонецФункции

&НаСервере
Процедура УстановитьВидимостьПодписания()
	
	Элементы.УчастникиОрганизация.Видимость = Ложь;
	ПодписаниеПоОрганизациям = Ложь;
	
	Если Не ЭтоДействиеПодписания Тогда
		Возврат;
	КонецЕсли;
		
	Если Не ДелопроизводствоКлиентСервер.ЭтоДокументПредприятия(Предмет) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		Возврат;
	КонецЕсли;

	ВидДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Действие, "Предмет.ВидДокумента"); // СправочникСсылка.ВидыДокументов
	ВидДокументаКэш = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидДокумента, "ВестиУчетСторон, ВестиУчетПоОрганизациям");
	
	Если Не ВидДокументаКэш.ВестиУчетСторон И Не ВидДокументаКэш.ВестиУчетПоОрганизациям Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.УчастникиОрганизация.Видимость = Истина;
	ПодписаниеПоОрганизациям = Истина;
	
	Если ВидДокументаКэш.ВестиУчетСторон Тогда
		
		Стороны = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Предмет, "Стороны").Выгрузить();
		Для Каждого СторонаСтрока Из Стороны Цикл
			Если ТипЗнч(СторонаСтрока.Сторона) = Тип("СправочникСсылка.Организации") Тогда
				//@skip-check typed-value-adding-to-untyped-collection
				Элементы.УчастникиОрганизация.СписокВыбора.Добавить(СторонаСтрока.Сторона);
				
				Если ЗначениеЗаполнено(СторонаСтрока.Подписал) Тогда
					СтрокаУчастника = Участники.НайтиСтроки(Новый Структура("Участник", СторонаСтрока.Подписал));
					Если СтрокаУчастника.Количество() Тогда
						СтрокаУчастника[0].Организация = СторонаСтрока.Сторона;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;

	Иначе
		
		//@skip-check typed-value-adding-to-untyped-collection
		Элементы.УчастникиОрганизация.СписокВыбора.Добавить(
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Предмет, "Организация"));
		
	КонецЕсли;
	
	Если Элементы.УчастникиОрганизация.СписокВыбора.Количество() = 1 Тогда
		Элементы.УчастникиОрганизация.Видимость = Ложь;

		Для Каждого УчастникСтрока Из Участники Цикл
			//@skip-check statement-type-change
			УчастникСтрока.Организация = Элементы.УчастникиОрганизация.СписокВыбора[0].Значение;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьРассмотрения()
	
	ЕстьРассматривающие = Ложь;
	
	Если ЭтоДействиеИсполнения Тогда
		Элементы.РезультатДействия.Заголовок = НСтр("ru='Результат исполнения'");
	КонецЕсли;
	
	Для Каждого Участник Из Участники Цикл
		Если Участник.Функция = Перечисления.ФункцииУчастниковИсполнения.Рассматривающий Тогда
			ЕстьРассматривающие = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.РезультатРассмотрения.Видимость = ЭтоДействиеИсполнения И ЕстьРассматривающие;
	Элементы.УчастникиФункция.Видимость = ЭтоДействиеИсполнения И ЕстьРассматривающие;
	Если ЕстьРассматривающие Тогда
		РезультатРассмотрения = Перечисления.РезультатыРассмотрения.Рассмотрено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРезультатПоУмолчанию()
	
	Если ДействияКлиентСервер.ЭтоДействиеОзнакомления(Действие) Тогда
		РезультатДействия = Перечисления.РезультатыОзнакомления.Ознакомлен;
	КонецЕсли;
	Если ДействияКлиентСервер.ЭтоДействиеИсполнения(Действие) Тогда
		РезультатДействия = Перечисления.РезультатыИсполнения.Исполнено;
		РезультатРассмотрения = Перечисления.РезультатыРассмотрения.Рассмотрено;
	КонецЕсли;
	Если ДействияКлиентСервер.ЭтоДействиеПодписания(Действие) Тогда
		РезультатДействия = Перечисления.РезультатыПодписания.Подписано;
	КонецЕсли;
	Если ДействияКлиентСервер.ЭтоДействиеСогласования(Действие) Тогда
		РезультатДействия = Перечисления.РезультатыСогласования.Согласовано;
	КонецЕсли;
	Если ДействияКлиентСервер.ЭтоДействиеУтверждения(Действие) Тогда
		РезультатДействия = Перечисления.РезультатыУтверждения.Утверждено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
