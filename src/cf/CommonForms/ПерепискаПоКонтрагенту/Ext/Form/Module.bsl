
&НаСервере
Функция ПолучитьПризнакОтправлен(ИсходящийДокумент, Получатель, Адресат)
	
	Отправлен = Ложь;
	
	КорреспонденцияДокумента = РаботаСКорреспонденцией.КорреспонденцияДокумента(ИсходящийДокумент);
	
	Если Не ЗначениеЗаполнено(КорреспонденцияДокумента) Тогда
		Возврат Отправлен;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура("Корреспондент", Получатель);
	НайденныеСтроки = КорреспонденцияДокумента.Корреспонденты.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() = 1 Тогда 
		Отправлен =	НайденныеСтроки[0].Отправлен;
	Иначе
		ПараметрыОтбора = Новый Структура("Корреспондент, Адресат", Получатель, Адресат);
		НайденныеСтроки = ИсходящийДокумент.Получатели.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 1 Тогда 
			Отправлен =	НайденныеСтроки[0].Отправлен;
		КонецЕсли;	
	КонецЕсли;
	
	Возврат Отправлен;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДерево();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭлементыДерева = ДеревоДокументов.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		Элементы.ДеревоДокументов.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодчиненныеДокументы(СтрокаДерева)
	
	Ссылка = СтрокаДерева.Ссылка;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.ДокументыПредприятия") Тогда 
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
			"ВидДокумента.ЯвляетсяИсходящейКорреспонденцией,
			|ВидДокумента.ЯвляетсяВходящейКорреспонденцией");
		Запрос.УстановитьПараметр("ЭтоВходящаяКорреспонденция", 
			Реквизиты.ВидДокументаЯвляетсяВходящейКорреспонденцией);
		Запрос.УстановитьПараметр("ЭтоИсходящаяКорреспонденция", 
			Реквизиты.ВидДокументаЯвляетсяИсходящейКорреспонденцией);
			
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДокументыПредприятия.Ссылка КАК Ссылка,
		|	ДокументыПредприятия.Заголовок КАК Заголовок,
		|	ДокументыПредприятия.РегистрационныйНомер КАК РегистрационныйНомер,
		|	ДокументыПредприятия.ДатаРегистрации КАК ДатаРегистрации,
		|	ВЫБОР
		|		КОГДА ДокументыПредприятия.ВидДокумента.ЯвляетсяИсходящейКорреспонденцией
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексКартинки
		|ИЗ
		|	Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиОбъектов КАК СвязьВОтветНа
		|		ПО (СвязьВОтветНа.Объект = ДокументыПредприятия.Ссылка)
		|			И (СвязьВОтветНа.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ОтправленВОтветНа))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиОбъектов КАК СвязьПредметПереписки
		|		ПО (СвязьПредметПереписки.Объект = ДокументыПредприятия.Ссылка)
		|			И (СвязьПредметПереписки.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПредметПереписки))
		|ГДЕ
		|	СвязьПредметПереписки.СвязанныйОбъект = &Ссылка
		|	И СвязьВОтветНа.СвязанныйОбъект ЕСТЬ NULL
		|	И НЕ ДокументыПредприятия.ПометкаУдаления
		|	И (ДокументыПредприятия.ВидДокумента.ЯвляетсяИсходящейКорреспонденцией = &ЭтоИсходящаяКорреспонденция
		|			ИЛИ ДокументыПредприятия.ВидДокумента.ЯвляетсяВходящейКорреспонденцией = &ЭтоВходящаяКорреспонденция)";
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Мероприятия") Тогда 
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДокументыПредприятия.Ссылка КАК Ссылка,
		|	ДокументыПредприятия.Заголовок КАК Заголовок,
		|	ДокументыПредприятия.РегистрационныйНомер КАК РегистрационныйНомер,
		|	ДокументыПредприятия.ДатаРегистрации КАК ДатаРегистрации,
		|	0 КАК ИндексКартинки
		|ИЗ
		|	Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиОбъектов КАК СвязьВОтветНа
		|		ПО (СвязьВОтветНа.Объект = ДокументыПредприятия.Ссылка)
		|			И (СвязьВОтветНа.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПолученВОтветНа))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиОбъектов КАК СвязьПредметПереписки
		|		ПО (СвязьПредметПереписки.Объект = ДокументыПредприятия.Ссылка)
		|			И (СвязьПредметПереписки.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПредметПереписки))
		|ГДЕ
		|	СвязьПредметПереписки.СвязанныйОбъект = &Ссылка
		|	И СвязьВОтветНа.СвязанныйОбъект ЕСТЬ NULL
		|	И НЕ ДокументыПредприятия.ПометкаУдаления
		|	И (ДокументыПредприятия.ВидДокумента.ЯвляетсяВходящейКорреспонденцией
		|			ИЛИ ДокументыПредприятия.ВидДокумента.ЯвляетсяИсходящейКорреспонденцией)";
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаДерева.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка); 
		Если ДелопроизводствоКлиентСервер.ЭтоВходящийДокумент(Ссылка)  Тогда 
			Отправлен = ПолучитьПризнакОтправлен(Выборка.Ссылка, Ссылка.Контрагент, Ссылка.ПодписалОтКонтрагента);
			НоваяСтрока.ИндексКартинки = ?(Отправлен, 1, 3);
		КонецЕсли;
		
		ЗаполнитьПодчиненныеДокументы(НоваяСтрока);
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Функция ЗаполнитьДерево()
	
	Дерево = РеквизитФормыВЗначение("ДеревоДокументов");
	Дерево.Строки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументПредприятия.Ссылка КАК Ссылка,
	|	ДокументПредприятия.ДатаРегистрации КАК ДатаРегистрации,
	|	ДокументПредприятия.РегистрационныйНомер КАК РегистрационныйНомер,
	|	ДокументПредприятия.Заголовок КАК Заголовок
	|ИЗ
	|	Справочник.ДокументыПредприятия КАК ДокументПредприятия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиОбъектов КАК СвязьВОтветНа
	|		ПО (СвязьВОтветНа.Объект = ДокументПредприятия.Ссылка)
	|			И (СвязьВОтветНа.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ОтправленВОтветНа))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиОбъектов КАК СвязьПредметПереписки
	|		ПО (СвязьПредметПереписки.Объект = ДокументПредприятия.Ссылка)
	|			И (СвязьПредметПереписки.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПредметПереписки))
	|ГДЕ
	|	&Контрагент В
	|			(ВЫБРАТЬ
	|				ДокументПредприятияКонтрагенты.Контрагент
	|			ИЗ
	|				Справочник.ДокументыПредприятия.Контрагенты КАК ДокументПредприятияКонтрагенты
	|			ГДЕ
	|				ДокументПредприятияКонтрагенты.Ссылка = ДокументПредприятия.Ссылка)
	|	И СвязьВОтветНа.СвязанныйОбъект ЕСТЬ NULL
	|	И СвязьПредметПереписки.СвязанныйОбъект ЕСТЬ NULL
	|	И НЕ ДокументПредприятия.ПометкаУдаления
	|	И (ДокументПредприятия.ВидДокумента.ЯвляетсяИсходящейКорреспонденцией
	|			ИЛИ ДокументПредприятия.ВидДокумента.ЯвляетсяВходящейКорреспонденцией)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СвязьПредметПереписки.СвязанныйОбъект,
	|	ОбщиеРеквизитыПредметаПереписки.ДатаРегистрации,
	|	ОбщиеРеквизитыПредметаПереписки.РегистрационныйНомер,
	|	ОбщиеРеквизитыПредметаПереписки.Заголовок
	|ИЗ
	|	Справочник.ДокументыПредприятия КАК ДокументыПредприятия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СвязиОбъектов КАК СвязьПредметПереписки
	|		ПО ДокументыПредприятия.Ссылка = СвязьПредметПереписки.Объект
	|			И (СвязьПредметПереписки.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПредметПереписки))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДокументовПредприятия КАК ОбщиеРеквизитыПредметаПереписки
	|		ПО (ОбщиеРеквизитыПредметаПереписки.Документ = СвязьПредметПереписки.СвязанныйОбъект)
	|ГДЕ
	|	&Контрагент В
	|			(ВЫБРАТЬ
	|				ДокументПредприятияКонтрагенты.Контрагент
	|			ИЗ
	|				Справочник.ДокументыПредприятия.Контрагенты КАК ДокументПредприятияКонтрагенты
	|			ГДЕ
	|				ДокументПредприятияКонтрагенты.Ссылка = ДокументыПредприятия.Ссылка)";
	
	Запрос.УстановитьПараметр("Контрагент", Параметры.Контрагент);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеМероприятиями")
		И ПравоДоступа("Чтение", Метаданные.Справочники.Мероприятия) Тогда
		
		Запрос.Текст = Запрос.Текст + "
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |	СвязьПредметПереписки.СвязанныйОбъект КАК СвязанныйОбъект,
	        |	НЕОПРЕДЕЛЕНО,
	        |	НЕОПРЕДЕЛЕНО,
	        |	Мероприятия.Наименование КАК Наименование
	        |ИЗ
	        |	Справочник.ДокументыПредприятия КАК ДокументыПредприятия
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СвязиОбъектов КАК СвязьПредметПереписки
	        |		ПО ДокументыПредприятия.Ссылка = СвязьПредметПереписки.Объект
	        |			И (СвязьПредметПереписки.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПредметПереписки))
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Мероприятия КАК Мероприятия
	        |		ПО (Мероприятия.Ссылка = СвязьПредметПереписки.СвязанныйОбъект)
	        |ГДЕ
	        |	&Контрагент В
	        |			(ВЫБРАТЬ
	        |				ДокументПредприятияКонтрагенты.Контрагент
	        |			ИЗ
	        |				Справочник.ДокументыПредприятия.Контрагенты КАК ДокументПредприятияКонтрагенты
	        |			ГДЕ
	        |				ДокументПредприятияКонтрагенты.Ссылка = ДокументыПредприятия.Ссылка)
	        |	И (ДокументыПредприятия.ВидДокумента.ЯвляетсяВходящейКорреспонденцией
	        |			ИЛИ ДокументыПредприятия.ВидДокумента.ЯвляетсяИсходящейКорреспонденцией)";
		
	КонецЕсли;
	
	ТаблДокументов = Запрос.Выполнить().Выгрузить();
	ТаблДокументов.Сортировать("ДатаРегистрации");
	
	Для Каждого Строка Из ТаблДокументов Цикл
		
		НоваяСтрока = Дерево.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка); 
		
		Если ДелопроизводствоКлиентСервер.ЭтоВходящийДокумент(НоваяСтрока.Ссылка) Тогда 
			НоваяСтрока.ИндексКартинки = 0;
		ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоИсходящийДокумент(НоваяСтрока.Ссылка) Тогда
			КорреспонденцияДокумента = РаботаСКорреспонденцией.КорреспонденцияДокумента(НоваяСтрока.Ссылка);
			Если ЗначениеЗаполнено(КорреспонденцияДокумента) Тогда
				Если КорреспонденцияДокумента.Корреспонденты.Найти(Истина, "Отправлен") <> Неопределено Тогда 
					НоваяСтрока.ИндексКартинки = 1;
				Иначе
					НоваяСтрока.ИндексКартинки = 3;
				КонецЕсли;
			Иначе
				НоваяСтрока.ИндексКартинки = 3;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(НоваяСтрока.Ссылка) = Тип("СправочникСсылка.ДокументыПредприятия") Тогда 
			НоваяСтрока.ИндексКартинки = 2;
		ИначеЕсли ТипЗнч(НоваяСтрока.Ссылка) = Тип("СправочникСсылка.Мероприятия") Тогда
			НоваяСтрока.ИндексКартинки = 2;
		КонецЕсли;
		
		ЗаполнитьПодчиненныеДокументы(НоваяСтрока);
		
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоДокументов");
	
КонецФункции

&НаКлиенте
Процедура ДеревоДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ДеревоДокументов.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда 
		ПоказатьЗначение(, ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьДерево();
	
	ЭлементыДерева = ДеревоДокументов.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		Элементы.ДеревоДокументов.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДокументовПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.ДеревоДокументов.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда 
		ПоказатьЗначение(, ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры
