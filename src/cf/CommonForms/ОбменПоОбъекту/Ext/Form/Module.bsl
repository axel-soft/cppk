
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОбъектСсылка") Тогда
		ОбъектСсылка = Параметры.ОбъектСсылка;
		ОбновитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОбъект(Команда)
	
	ОткрытьОбъектВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеВДругомУзлеПринудительно(Команда)
	
	ОбновитьДанныеВДругомУзле(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИсторияОбмена.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсторияСсылочныхДанныхКОД.Узел КАК Узел,
		|	ИсторияСсылочныхДанныхКОД.Период КАК Дата,
		|	ИсторияСсылочныхДанныхКОД.ИмяСообщения КАК ИмяСообщения,
		|	ВЫБОР
		|		КОГДА ИсторияСсылочныхДанныхКОД.НаправлениеОбмена = ЗНАЧЕНИЕ(Перечисление.НаправленияОбмена.Получение)
		|			ТОГДА ""Получен из""
		|		ИНАЧЕ ""Отправлен в""
		|	КОНЕЦ КАК Направление,
		|	"""" КАК Причина
		|ИЗ
		|	РегистрСведений.ИсторияСсылочныхДанныхКОД КАК ИсторияСсылочныхДанныхКОД
		|ГДЕ
		|	ИсторияСсылочныхДанныхКОД.ИдентификаторОбъекта = &ИдентификаторОбъекта";
	
	Запрос.УстановитьПараметр("ИдентификаторОбъекта", ОбъектСсылка.УникальныйИдентификатор());
	
	Табл = Запрос.Выполнить().Выгрузить();
	ДобавитьСтрокиВИсторию(Табл, ИсторияОбмена);
	
	// читаем НепринятыеВерсииДанных
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НепринятыеВерсииДанных.Узел КАК Узел,
		|	НепринятыеВерсииДанных.Дата КАК Дата,
		|	НепринятыеВерсииДанных.ИмяСообщения КАК ИмяСообщения,
		|	""Не принят из"" КАК Направление,
		|	НепринятыеВерсииДанных.Причина КАК Причина
		|ИЗ
		|	РегистрСведений.НепринятыеВерсииДанных КАК НепринятыеВерсииДанных
		|ГДЕ
		|	НепринятыеВерсииДанных.ИдентификаторКлюча = &ИдентификаторКлюча
		|	И НепринятыеВерсииДанных.ТипКлюча = &ТипКлюча
		|	И НепринятыеВерсииДанных.Объект = &Объект";
	
	ИдентификаторОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(ОбъектСсылка));
	ДанныеКлюча = КОДСервер.КлючДанныхВФорматКлючаОтметокВремени(
		ОбъектСсылка, 
		ИдентификаторОбъекта);
	Запрос.УстановитьПараметр("ТипКлюча", ДанныеКлюча.ТипКлюча);
	Запрос.УстановитьПараметр("ИдентификаторКлюча", ДанныеКлюча.ИдентификаторКлюча);
	Запрос.УстановитьПараметр("Объект", ИдентификаторОбъекта);
	
	Табл = Запрос.Выполнить().Выгрузить();
	ДобавитьСтрокиВИсторию(Табл, ИсторияОбмена);
	
	ИсторияОбмена.Сортировать("Дата");
	
	Элементы.ДекорацияТребуетсяОбмен.Видимость = ТребуетсяОбмен();
	
	ДругиеУзлы.Очистить();
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Узлы.Код КАК Код,
		|	Узлы.Ссылка КАК Узел
		|ИЗ
		|	Справочник.УзлыКОД КАК Узлы
		|ГДЕ
		|	Узлы.Родитель = ЗНАЧЕНИЕ(Справочник.УзлыКОД.ЭтотУзел)
		|	И НЕ Узлы.ПометкаУдаления
		|	И Узлы.СерверСервисов <> """"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Узлы.Родитель.Код КАК Код,
		|	Узлы.Родитель КАК Узел
		|ИЗ
		|	Справочник.УзлыКОД КАК Узлы
		|ГДЕ
		|	Узлы.Ссылка = ЗНАЧЕНИЕ(Справочник.УзлыКОД.ЭтотУзел)
		|	И НЕ Узлы.Родитель.ПометкаУдаления
		|	И Узлы.Родитель.СерверСервисов <> """"
		|
		|УПОРЯДОЧИТЬ ПО Код
		|");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДругойУзел = ДругиеУзлы.Добавить();
		ДругойУзел.Узел = Выборка.Узел;
		ДругойУзел.Адрес = ПоместитьВоВременноеХранилище(Неопределено,
			УникальныйИдентификатор);
	КонецЦикла;
	Элементы.СтраницаСостояниеВДругихУзлах.Видимость = 
		Выборка.Количество() <> 0;
	
	КодЭтогоУзла = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Справочники.УзлыКОД.ЭтотУзел, "Код");
	
	ДанныеОтметки = ОтметкиВремени.ДанныеОтметкиВремени(ОбъектСсылка);
	ОтметкаВремениВЭтомУзле = ДанныеОтметки.Отметка;
	
	ПоПредставлениямСвойств = Ложь;
	ХешСуммаВЭтомУзле = КОДСервер.ХешСуммаMD5Объекта(ОбъектСсылка, ПоПредставлениямСвойств);
	
	// Непринятые версии
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Непринятые.Узел КАК Узел,
		|	Непринятые.Дата КАК Дата,
		|	Непринятые.ОтметкаНепринятойВерсии КАК ОтметкаНепринятойВерсии,
		|	Непринятые.ОтметкаСохраненнойВерсии КАК ОтметкаСохраненнойВерсии,
		|	Непринятые.Причина КАК Причина,
		|	Непринятые.ИмяСообщения КАК ИмяСообщения
		|ИЗ
		|	РегистрСведений.НепринятыеВерсииДанных КАК Непринятые
		|ГДЕ
		|	Непринятые.ИдентификаторКлюча = &ИдентификаторКлюча
		|	И Непринятые.ТипКлюча = &ТипКлюча
		|	И Непринятые.Объект = &Объект
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата");
	Запрос.УстановитьПараметр("ТипКлюча", ДанныеКлюча.ТипКлюча);
	Запрос.УстановитьПараметр("ИдентификаторКлюча", ДанныеКлюча.ИдентификаторКлюча);
	Запрос.УстановитьПараметр("Объект", ИдентификаторОбъекта);
	Выборка = Запрос.Выполнить().Выбрать();
	НепринятыеВерсии.Очистить();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(НепринятыеВерсии.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
// Истина если отметки времени нет или если она не совпадает с отметками времени отправленных данных.
Функция ТребуетсяОбмен()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОтметкиВремениСсылочныхОбъектов.ИдентификаторКлюча КАК ИдентификаторКлюча
		|ИЗ
		|	РегистрСведений.ОтметкиВремениСсылочныхОбъектов КАК ОтметкиВремениСсылочныхОбъектов
		|ГДЕ
		|	ОтметкиВремениСсылочныхОбъектов.ИдентификаторКлюча = &ИдентификаторКлюча
		|	И ОтметкиВремениСсылочныхОбъектов.ТипКлюча = &ТипКлюча";
	
	ДанныеКлюча = КОДСервер.КлючДанныхВФорматКлючаОтметокВремени(
		ОбъектСсылка, 
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(ОбъектСсылка)));
	Запрос.УстановитьПараметр("ТипКлюча", ДанныеКлюча.ТипКлюча);
	Запрос.УстановитьПараметр("ИдентификаторКлюча", ДанныеКлюча.ИдентификаторКлюча);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда  // отметки времени нет
		Возврат Истина;
	КонецЕсли;	
	
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОтметкиВремениСсылочныхОбъектов.ИдентификаторКлюча КАК Поле1
		|ИЗ
		|	РегистрСведений.ОтметкиВремениСсылочныхОбъектов КАК ОтметкиВремениСсылочныхОбъектов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиРассмотренияСсылочныхДанныхКОД КАК ОтметкиРассмотренияСсылочныхДанныхКОД
		|		ПО ОтметкиВремениСсылочныхОбъектов.ИдентификаторКлюча = ОтметкиРассмотренияСсылочныхДанныхКОД.ИдентификаторКлюча
		|			И ОтметкиВремениСсылочныхОбъектов.ТипКлюча = ОтметкиРассмотренияСсылочныхДанныхКОД.ТипКлюча
		|ГДЕ
		|	ОтметкиВремениСсылочныхОбъектов.ИдентификаторКлюча = &ИдентификаторКлюча
		|	И ОтметкиВремениСсылочныхОбъектов.ТипКлюча = &ТипКлюча
		|	И ОтметкиРассмотренияСсылочныхДанныхКОД.Отметка <> ОтметкиВремениСсылочныхОбъектов.Отметка
		|	И ОтметкиРассмотренияСсылочныхДанныхКОД.Отметка <> 0
		|	И НЕ ОтметкиРассмотренияСсылочныхДанныхКОД.Отметка ЕСТЬ NULL";
		
	Запрос.УстановитьПараметр("ТипКлюча", ДанныеКлюча.ТипКлюча);
	Запрос.УстановитьПараметр("ИдентификаторКлюча", ДанныеКлюча.ИдентификаторКлюча);
	
	Результат = Запрос.Выполнить();
	Возврат Не Результат.Пустой();
	
КонецФункции

&НаСервере
Процедура ДобавитьСтрокиВИсторию(Табл, ИсторияОбмена)
	
	Для Каждого Строка Из Табл Цикл
		
		НовСтр = ИсторияОбмена.Добавить();
		
		НовСтр.Узел = Строка.Узел;
		НовСтр.ИмяСообщения = Строка.ИмяСообщения;
		НовСтр.Направление = Строка.Направление;
		НовСтр.Причина = Строка.Причина;
		
		НовСтр.Дата = Строка.Дата;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОбъектВыполнить()
	
	Если Элементы.ПодчиненныеОбъекты.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекСсылка = Элементы.ПодчиненныеОбъекты.ТекущиеДанные.Ссылка;
	ПоказатьЗначение(,ТекСсылка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КлючЗаписиНепринятойВерсии(Ссылка, Узел, ИмяСообщения)
	
	ИдентификаторОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(Ссылка));
	ДанныеКлюча = КОДСервер.КлючДанныхВФорматКлючаОтметокВремени(
		Ссылка, 
		ИдентификаторОбъекта);
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ИдентификаторКлюча", ДанныеКлюча.ИдентификаторКлюча);
	СтруктураОтбора.Вставить("ТипКлюча", ДанныеКлюча.ТипКлюча);
	СтруктураОтбора.Вставить("Объект", ИдентификаторОбъекта);
	СтруктураОтбора.Вставить("Узел", Узел);
	СтруктураОтбора.Вставить("ИмяСообщения", ИмяСообщения);
	Возврат РегистрыСведений.НепринятыеВерсииДанных.СоздатьКлючЗаписи(СтруктураОтбора);
	
КонецФункции

&НаКлиенте
Процедура ИсторияОбменаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.ИсторияОбмена.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ИсторияОбмена.ТекущиеДанные;
	
	Если СтрНайти(ТекущиеДанные.Направление, "Не принят") <> 0 Тогда
		
		ПараметрыФормы = Новый Структура("Ключ", 
			КлючЗаписиНепринятойВерсии(ОбъектСсылка, ТекущиеДанные.Узел, ТекущиеДанные.ИмяСообщения));
		
		ОткрытьФорму("РегистрСведений.НепринятыеВерсииДанных.ФормаЗаписи", ПараметрыФормы);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДругиеУзлыПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ДругиеУзлы.ТекущиеДанные = Неопределено
		Или ТекущийУзел = Элементы.ДругиеУзлы.ТекущиеДанные.Узел Тогда
		Возврат;
	КонецЕсли;
	ТекущийУзел = Элементы.ДругиеУзлы.ТекущиеДанные.Узел;
	
	ОбновитьДанныеВДругомУзле(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСостояниеВДругомУзле(Узел, Адрес)
	
	Состояние = Новый Структура;
	ИдентификаторОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(ОбъектСсылка));
	ДанныеКлюча = КОДСервер.КлючДанныхВФорматКлючаОтметокВремени(
		ОбъектСсылка, 
		ИдентификаторОбъекта);
		
	СостояниеВЭтомУзле = Новый Структура;
	СостояниеВЭтомУзле.Вставить("ОтметкаВремениОтправленная",
		РегистрыСведений.ОтметкиРассмотренияСсылочныхДанныхКОД.Отметка(
			ДанныеКлюча.ИдентификаторКлюча, ДанныеКлюча.ТипКлюча));
	СостояниеВЭтомУзле.Вставить("ХешСуммаОтправленная",
		РегистрыСведений.ОтметкиРассмотренияСсылочныхДанныхКОД.ХешСуммаMD5(
			ДанныеКлюча.ИдентификаторКлюча, ДанныеКлюча.ТипКлюча));
	СостояниеВЭтомУзле.Вставить("ОтметкаВремениПолученная",
		РегистрыСведений.ОтметкиВремениПолученныхСсылочныхДанных.ОтметкаВремени(Узел,
			ДанныеКлюча.ИдентификаторКлюча, ДанныеКлюча.ТипКлюча));
	Состояние.Вставить("ВЭтомУзле", СостояниеВЭтомУзле);
	
	УстановитьПривилегированныйРежим(Истина); // для получения параметров авторизации в CDE
	Прокси = КОДСервис.ПроксиСервиса(Узел);
	СостояниеВДругомУзле = КОДСервис.ПолучитьСостояниеОбъектаВУзле(Прокси, ОбъектСсылка, Ложь);
	Состояние.Вставить("ВДругомУзле", СостояниеВДругомУзле);
	
	ПоместитьВоВременноеХранилище(Состояние, Адрес);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояниеВДругомУзле(Состояние)
	
	ОтметкаВремениОтправленнаяИзЭтогоУзла = Состояние.ВЭтомУзле.ОтметкаВремениОтправленная;
	ХешСуммаОтправленнаяИзЭтогоУзла = Состояние.ВЭтомУзле.ХешСуммаОтправленная;
	ОтметкаВремениПолученнаяВЭтомУзле = Состояние.ВЭтомУзле.ОтметкаВремениПолученная;
	
	Если Состояние.ВДругомУзле.Существует = Ложь Тогда
		Элементы.ГруппаВВыбранномУзлеСуществует.Видимость = Ложь;
		Элементы.ДекорацияВВыбранномУзлеНеСуществует.Видимость = Истина;
		Возврат;
	Иначе
		Элементы.ГруппаВВыбранномУзлеСуществует.Видимость = Истина;
		Элементы.ДекорацияВВыбранномУзлеНеСуществует.Видимость = Ложь;
	КонецЕсли;
	
	ОтметкаВремениВДругомУзле = Состояние.ВДругомУзле.ОтметкаВремени;
	ХешСуммаВДругомУзле = Состояние.ВДругомУзле.ХешСуммаMD5;
	ОтметкаВремениОтправленнаяИзДругогоУзла = "";
	Для Каждого Отправлено Из Состояние.ВДругомУзле.Отправлено Цикл
		Если Отправлено.Узел = КодЭтогоУзла Тогда 
			ОтметкаВремениОтправленнаяИзДругогоУзла = Отправлено.ОтметкаВремени;
			ХешСуммаОтправленногоИзДругогоУзла = Отправлено.ХешСуммаMD5;
		КонецЕсли;
	КонецЦикла;
	ОтметкаВремениПолученнаяВДругомУзле = "";
	Для Каждого Получено Из Состояние.ВДругомУзле.Получено Цикл
		Если Получено.Узел = КодЭтогоУзла Тогда 
			ОтметкаВремениПолученнаяВДругомУзле = Получено.ОтметкаВремени;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеВДругомУзле(Принудительно)
	
	Если Элементы.ДругиеУзлы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Состояние = ПолучитьИзВременногоХранилища(Элементы.ДругиеУзлы.ТекущиеДанные.Адрес);
	Если Состояние = Неопределено 
		Или Принудительно Тогда
		ПолучитьСостояниеВДругомУзле(Элементы.ДругиеУзлы.ТекущиеДанные.Узел,
			Элементы.ДругиеУзлы.ТекущиеДанные.Адрес);
		Состояние = ПолучитьИзВременногоХранилища(Элементы.ДругиеУзлы.ТекущиеДанные.Адрес);
	КонецЕсли;
	ОбновитьСостояниеВДругомУзле(Состояние);
	
КонецПроцедуры

&НаКлиенте
Процедура НепринятыеВерсииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	КлючЗаписи = КлючЗаписиНепринятойВерсии(ОбъектСсылка,
		Элементы.НепринятыеВерсии.ТекущиеДанные.Узел,
		Элементы.НепринятыеВерсии.ТекущиеДанные.ИмяСообщения);
	ПараметрыФормы = Новый Структура("Ключ", КлючЗаписи);
	ОткрытьФорму("РегистрСведений.НепринятыеВерсииДанных.ФормаЗаписи",
		ПараметрыФормы,
		ЭтотОбъект);
	
КонецПроцедуры	

#КонецОбласти

