
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для Каждого ВидДействия Из Параметры.ДоступныеВидыДействий Цикл
		СтрокаТаблицы = ВидыДействий.Добавить();
		СтрокаТаблицы.ВидДействия = ВидДействия;
		СтрокаТаблицы.Представление = Строка(ВидДействия);
		
		СтрокаТаблицы.ПривязанКСхеме = 
			(Параметры.ВидыДействийПривязанныеКСхеме[ВидДействия] <> Неопределено);
			
		Если СтрокаТаблицы.ВидДействия = Параметры.ТекущийВидДействия Тогда
			Элементы.ВидыДействий.ТекущаяСтрока = СтрокаТаблицы.ПолучитьИдентификатор();
		КонецЕсли;
		
		Если Параметры.Действия <> Неопределено Тогда
			СтрокаТаблицы.Действие = Параметры.Действия[ВидДействия];
		КонецЕсли;
		
	КонецЦикла;
	
	ВидыДействий.Сортировать("Представление Возр");
		
	// Условное оформление.
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Представление = НСтр("ru = 'Действие привязано к схеме'");
	
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(
		Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидыДействий.ПривязанКСхеме");
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = Истина;
	ЭлементОтбораДанных.Использование = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра(
		"ЦветТекста",
		ЦветаСтиля.НедоступныеДанныеЦвет);
	
	Поле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	Поле.Поле = Новый ПолеКомпоновкиДанных("ВидыДействийПредставление");	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененВидДействия" Тогда
		
		Для Каждого СтрокаТаблицы Из ВидыДействий Цикл
			Если СтрокаТаблицы.ВидДействия = Параметр Тогда
				СтрокаТаблицы.Представление = Строка(Параметр);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормы_ВидыДействий

&НаКлиенте
Процедура ВидыДействийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьВидДействияИзСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДействийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Действие) Тогда
		ДействияКлиент.ОткрытьКарточкуДействияПоДействию(ЭтотОбъект, ТекущиеДанные.Действие);
	Иначе
		ПоказатьЗначение(, ТекущиеДанные.ВидДействия);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВидДействия(Команда)
	
	ВыбратьВидДействияИзСписка();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьВидДействияИзСписка()
	
	ТекущиеДанные = Элементы.ВидыДействий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработчикЗавершения = 
		Новый ОписаниеОповещения("ЗавершитьВыборВидаДействия", ЭтотОбъект, ТекущиеДанные.ВидДействия);
	
	Если ТекущиеДанные.ПривязанКСхеме Тогда
		ТекстВопроса = НСтр(
			"ru = 'Действие уже связано с другим элементом схемы.
			 |При выборе, эта связь будет разорвана.
			 |
			 |Продолжить?'");
		
		ОбщегоНазначенияДокументооборотКлиент.ПоказатьВопросДаНет(
			ОбработчикЗавершения,
			ТекстВопроса,
			НСтр("ru = 'Продолжить'"),
			НСтр("ru = 'Отмена'"));                
		
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОбработчикЗавершения, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВыборВидаДействия(Ответ, ВидДействия) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(ВидДействия);
	
КонецПроцедуры

#КонецОбласти