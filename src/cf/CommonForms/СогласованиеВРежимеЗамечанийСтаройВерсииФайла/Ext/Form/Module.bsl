&НаКлиенте
Перем ИдентификаторТекущейПравки;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Документ") Тогда
		Документ = Параметры.Документ;
	КонецЕсли;	
	
	Если Параметры.Свойство("ВерсияHTML") Тогда
		ВерсияHTML = Параметры.ВерсияHTML;
		ФайлHTML = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВерсияHTML, "Владелец");
	КонецЕсли;	
	
	Если Параметры.Свойство("УникальныйИдентификатор") Тогда
		СсылкаЗамечания = Параметры.УникальныйИдентификатор;
	КонецЕсли;	
	
	ЭтаФорма.Заголовок = Строка(Документ) + НСтр("ru = ' (согласование документа)'");
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	ПоказыватьПравкиДругихСогласующих = Истина;
	ПоказыватьПравкиДругихЭтапов = Истина;
	
	ПрочитатьHTML();
	ПрочитатьПравки();
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
// Строка - строка табличной части Файлы
Процедура ПрочитатьHTML()
	
	ДвоичныеДанные = РаботаСФайламиВызовСервера.ПолучитьДвоичныеДанныеВерсииФайла(ВерсияHTML);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("html");
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	ТекущаяВерсияДатаСоздания = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВерсияHTML, "ДатаСоздания");
	ДатаНачалаUTF = СогласованиеВРежимеЗамечанийСервер.ПолучитьДатуНачалаИспользованияКодировкиUTF();
	
	ЧтениеТекста = Неопределено;
	Если ТекущаяВерсияДатаСоздания < ДатаНачалаUTF Тогда // старый файл
		ЧтениеТекста = Новый ЧтениеТекста(ИмяВременногоФайла);
	Иначе
		ЧтениеТекста = Новый ЧтениеТекста(ИмяВременногоФайла, СогласованиеВРежимеЗамечанийHTMLКлиентСервер.КодировкаЧтенияЗаписиHtml());
	КонецЕсли;	
	ТекстHTML = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	
	Если Найти(ТекстHTML, "contentEditable") <> 0  Тогда
	
		ТекстHTML = СтрЗаменить(ТекстHTML, "contentEditable=true", "");
			
	КонецЕсли;
	
	СогласованиеВРежимеЗамечанийСервер.ВставитьКартинкиВТекстHTML(
		ТекстHTML, Документ, ФайлHTML, УникальныйИдентификатор);
	
	ТекстHTMLПриОткрытии = ТекстHTML;
	
	ПодсветитьПравки();
			
	
КонецПроцедуры	

&НаСервере
// Строка - строка табличной части Файлы
Процедура ПрочитатьПравки()
	
	ПрочитатьПравкиСвои();
	
КонецПроцедуры

&НаСервере
// Строка - строка табличной части Файлы
Процедура ПрочитатьПравкиСвои()
	
	Правки.Очистить();
	
	ТекПользователь = СотрудникиВызовСервера.ОсновнойСотрудникПользователя(
		ПользователиКлиентСервер.ТекущийПользователь());
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Замечания.Документ КАК Документ,
		|	Замечания.Ссылка КАК Ссылка,
		|	Замечания.ВерсияДанных КАК ВерсияДанных,
		|	Замечания.ПометкаУдаления КАК ПометкаУдаления,
		|	Замечания.Код КАК Код,
		|	Замечания.Автоматическая КАК Автоматическая,
		|	Замечания.Автор КАК Автор,
		|	Замечания.ВерсияHTML КАК ВерсияHTML,
		|	Замечания.ВеткаОбработки КАК ВеткаОбработки,
		|	Замечания.ВладелецЗамечания КАК ВладелецЗамечания,
		|	Замечания.Дата КАК Дата,
		|	Замечания.Замечание КАК Замечание,
		|	Замечания.ЗамечаниеИнициатора КАК ЗамечаниеИнициатора,
		|	Замечания.ИдентификаторАвтора КАК ИдентификаторАвтора,
		|	Замечания.ИдентификаторЭтапа КАК ИдентификаторЭтапа,
		|	Замечания.ИдКонца КАК ИдКонца,
		|	Замечания.ИдНачала КАК ИдНачала,
		|	Замечания.ИмяПоля КАК ИмяПоля,
		|	Замечания.Комментарий КАК Комментарий,
		|	Замечания.НаЧтоМеняем КАК НаЧтоМеняем,
		|	Замечания.Номер КАК Номер,
		|	Замечания.НомерКартинки КАК НомерКартинки,
		|	Замечания.НомерЭтапа КАК НомерЭтапа,
		|	Замечания.Отработано КАК Отработано,
		|	Замечания.РеальныйАвтор КАК РеальныйАвтор,
		|	Замечания.СсылкиУтеряны КАК СсылкиУтеряны,
		|	Замечания.СтатусПринятия КАК СтатусПринятия,
		|	Замечания.ТипЗамечания КАК ТипЗамечания,
		|	Замечания.Цикл КАК Цикл,
		|	Замечания.ЧтоМеняем КАК ЧтоМеняем,
		|	Замечания.ЭтоЗамечаниеWord КАК ЭтоЗамечаниеWord,
		|	Замечания.ЭтоОтличиеОтШаблона КАК ЭтоОтличиеОтШаблона,
		|	Замечания.Предопределенный КАК Предопределенный,
		|	Замечания.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
		|	Замечания.НомерБлока КАК НомерБлока
		|ИЗ
		|	Справочник.Замечания КАК Замечания
		|ГДЕ
		|	Замечания.Ссылка = &СсылкаЗамечания
		|	И Замечания.ПометкаУдаления = ЛОЖЬ");
	   
	Запрос.УстановитьПараметр("Владелец", ФайлHTML);
	Запрос.УстановитьПараметр("Документ", Документ);
	
	Запрос.УстановитьПараметр("СсылкаЗамечания", Справочники.Замечания.ПолучитьСсылку(СсылкаЗамечания));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗагрузитьПравку = Истина;
		
		Если Не ПоказыватьПравкиДругихСогласующих И Выборка.Автор <> ТекПользователь Тогда
			ЗагрузитьПравку = Ложь;
		КонецЕсли;	
			
		// В Исполнение (дочернем процессе) видны правки всех этапов Исполнения 
		//  (ЗначениеЗаполнено(ГлавнаяЗадача)=Истина)
		Если Не ЗначениеЗаполнено(ГлавнаяЗадача) Тогда
			
			Если Не ПоказыватьПравкиДругихЭтапов И Выборка.НомерЭтапа <> НомерИтерации Тогда
				ЗагрузитьПравку = Ложь;
			КонецЕсли;	
			
		КонецЕсли;	
		
		Если ЗагрузитьПравку Тогда
		
			НовСтрока = Правки.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
			
			НовСтрока.УникальныйИдентификатор = Выборка.Ссылка.УникальныйИдентификатор();
			
			НовСтрока.СделанаТекущимПользователем = (НовСтрока.Автор = ТекПользователь);
			НовСтрока.ЗамечаниеДругогоЭтапа = (НовСтрока.НомерЭтапа <> НомерИтерации);
			
			Если НовСтрока.СтатусПринятия = ПредопределенноеЗначение("Перечисление.СтатусыПринятияЗамечаний.НеПринята") Тогда
				НовСтрока.НомерКартинкиСтатуса = 2;
			ИначеЕсли НовСтрока.СтатусПринятия = ПредопределенноеЗначение("Перечисление.СтатусыПринятияЗамечаний.Принята") Тогда
				НовСтрока.НомерКартинкиСтатуса = 1;
			ИначеЕсли НовСтрока.СтатусПринятия = ПредопределенноеЗначение("Перечисление.СтатусыПринятияЗамечаний.ПринятаЧастично") Тогда
				НовСтрока.НомерКартинкиСтатуса = 3;
			Иначе
				НовСтрока.НомерКартинкиСтатуса = 0;
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЦикла;	
	
	ПравкиТаблица = ДанныеФормыВЗначение(Правки, Тип("ТаблицаЗначений"));
	СогласованиеВРежимеЗамечанийHTMLСервер.СортироватьПравки(ПравкиТаблица, ТекстHTML);
	ЗначениеВДанныеФормы(ПравкиТаблица, Правки);
	
КонецПроцедуры

&НаСервере
Процедура ПодсветитьПравки()
	
	ПравкиТаблица = Новый ТаблицаЗначений;
	
	КЧ = Новый КвалификаторыЧисла(10, 0);
	ТипЧисло = Новый ОписаниеТипов("Число",,, КЧ);
	ТипБулево = Новый ОписаниеТипов("Булево");
	
	ПравкиТаблица.Колонки.Добавить("ИдНачала", ТипЧисло);
	ПравкиТаблица.Колонки.Добавить("ИдКонца", ТипЧисло);
	ПравкиТаблица.Колонки.Добавить("Отработано", ТипБулево);
	ПравкиТаблица.Колонки.Добавить("ЗамечаниеИнициатора", ТипБулево);
	ПравкиТаблица.Колонки.Добавить("ЭтоЗамечаниеWord", ТипБулево);
	ПравкиТаблица.Колонки.Добавить("ЭтоОтличиеОтШаблона", ТипБулево);
	ПравкиТаблица.Колонки.Добавить("НомерБлока", ТипЧисло);
	
	ТекПользователь = СотрудникиВызовСервера.ОсновнойСотрудникПользователя(
		ПользователиКлиентСервер.ТекущийПользователь());
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Замечания.ВладелецЗамечания КАК ВладелецЗамечания,
		|	Замечания.Документ КАК Документ,
		|	Замечания.Автоматическая КАК Автоматическая,
		|	Замечания.Автор КАК Автор,
		|	Замечания.ВерсияHTML КАК ВерсияHTML,
		|	Замечания.Дата КАК Дата,
		|	Замечания.ИдКонца КАК ИдКонца,
		|	Замечания.ИдНачала КАК ИдНачала,
		|	Замечания.Комментарий КАК Комментарий,
		|	Замечания.НаЧтоМеняем КАК НаЧтоМеняем,
		|	Замечания.НомерКартинки КАК НомерКартинки,
		|	Замечания.НомерЭтапа КАК НомерЭтапа,
		|	Замечания.Отработано КАК Отработано,
		|	Замечания.ВеткаОбработки КАК ВеткаОбработки,
		|	Замечания.СтатусПринятия КАК СтатусПринятия,
		|	Замечания.ЗамечаниеИнициатора КАК ЗамечаниеИнициатора,
		|	Замечания.ТипЗамечания КАК ТипЗамечания,
		|	Замечания.ЧтоМеняем КАК ЧтоМеняем,
		|	Замечания.ЭтоЗамечаниеWord КАК ЭтоЗамечаниеWord,
		|	Замечания.ЭтоОтличиеОтШаблона КАК ЭтоОтличиеОтШаблона,
		|	Замечания.ИмяПоля КАК ИмяПоля,
		|	Замечания.Номер КАК Номер,
		|	Замечания.ИдентификаторЭтапа КАК ИдентификаторЭтапа,
		|	Замечания.Цикл КАК Цикл,
		|	Замечания.НомерБлока КАК НомерБлока
		|ИЗ
		|	Справочник.Замечания КАК Замечания
		|ГДЕ
		|	Замечания.ВладелецЗамечания = &Владелец
		|	И Замечания.СсылкиУтеряны = ЛОЖЬ
		|	И Замечания.ПометкаУдаления = ЛОЖЬ");
	
	Запрос.УстановитьПараметр("Владелец", ФайлHTML);
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.УстановитьПараметр("УникальныйИдентификатор", УникальныйИдентификаторПравки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НовСтрока = ПравкиТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
		
	КонецЦикла;	
	
	ТекстHTML = СогласованиеВРежимеЗамечанийHTMLСервер.ПодсветитьЦветомФонаПравки(
		ПравкиТаблица, ТекстHTMLПриОткрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СогласованиеВРежимеЗамечанийКлиент.ОткрытьСсылку(ДанныеСобытия.Href, ДанныеСобытия.Element, Элемент.Документ,
		ФайлHTML, ЭтаФорма.УникальныйИдентификатор);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд_Правки

&НаКлиенте
Процедура ПравкиПриАктивизацииСтроки(Элемент)
	
	Если ИдентификаторТекущейПравки <> Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ПодключитьОбработчикОжидания("ОбработчикСписокПриАктивизацииСтроки", 0.5, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСписокПриАктивизацииСтроки()
	
	ВыделитьПравкуВHTML();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПравкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПравкиПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПравкиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Правки.ТекущиеДанные;
	
	ПараметрыОткрытия = Новый Структура("ЧтоМеняем, НаЧтоМеняем, ТипПравки, Автор, Комментарий, РеальныйАвтор, Замечание", 
		ТекущиеДанные.ЧтоМеняем, ТекущиеДанные.НаЧтоМеняем, 
		ТекущиеДанные.ТипЗамечания, ТекущиеДанные.Автор,
		ТекущиеДанные.Комментарий, ТекущиеДанные.РеальныйАвтор,
	ТекущиеДанные.Замечание);
	
	ОткрытьФорму("ОбщаяФорма.ФормаПросмотраПравки",
		ПараметрыОткрытия,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьПравкуВHTML()
	
	ТекущиеДанные = Элементы.Правки.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	HTMLДокумент = Элементы.ТекстHTML.Документ; 
	
	НайденныйУзелНачало = Неопределено;
	НайденныйУзелКонец = Неопределено;
	НайтиУзлыНачалаИКонцаВыделения(НайденныйУзелНачало, НайденныйУзелКонец, ТекущиеДанные);	
	
	ВыделитьТекстПоУзлам(НайденныйУзелНачало, НайденныйУзелКонец);
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиУзлыНачалаИКонцаВыделения(НайденныйУзелНачало, НайденныйУзелКонец, ТекущиеДанные)
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	НайтиУзлыНачалаИКонцаВыделенияПоНомерам(ТекущиеДанные.ИдНачала, ТекущиеДанные.ИдКонца,
		НайденныйУзелНачало, НайденныйУзелКонец);	
		
КонецПроцедуры

&НаКлиенте
Процедура НайтиУзлыНачалаИКонцаВыделенияПоНомерам(ИдНачалаЧисло, ИдКонцаЧисло,
	НайденныйУзелНачало, НайденныйУзелКонец)
	
	ИдНачала = "do_" + СогласованиеВРежимеЗамечанийHTMLКлиент.ПолучитьСтрокаИзIdЧисло(ИдНачалаЧисло);
	ИдКонца = "do_" + СогласованиеВРежимеЗамечанийHTMLКлиент.ПолучитьСтрокаИзIdЧисло(ИдКонцаЧисло);
	
	HTMLДокумент = Элементы.ТекстHTML.Документ; 
	
	НайденныйУзелНачало = Неопределено;
	НайденныйУзелКонец = Неопределено;
	
	
	Попытка
		
		НайденныйУзелНачало = HTMLДокумент.getElementById(ИдНачала);
		УзелКонец = HTMLДокумент.getElementById(ИдКонца);
		
		// Ищем последнее выделенное
		НайденныйУзел = Неопределено;
		
		СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиПервыйУзелПослеУзла(УзелКонец, НайденныйУзел);
		
		Если НайденныйУзел <> Неопределено Тогда
			НайденныйУзелКонец = НайденныйУзел;
		КонецЕсли;	
		
	Исключение
		// не бросаем исключение - иногда HTMLДокумент дает ошибку
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьТекстПоУзлам(НайденныйУзелНачало, НайденныйУзелКонец)
	
	HTMLДокумент = Элементы.ТекстHTML.Документ; 
	
	Попытка
		
		Если НайденныйУзелНачало <> Неопределено Тогда
			
			Диапазон = HTMLДокумент.createRange();
			Диапазон.setStart(НайденныйУзелНачало, 0);
			Диапазон.setEnd(НайденныйУзелКонец, 0);
			
			Выделение = HTMLДокумент.getSelection();
			Выделение.removeAllRanges();
			Выделение.addRange(Диапазон);
			
			НайденныйУзелНачало.scrollIntoView(true);
			HTMLДокумент.documentElement.scrollLeft = 0;
			
		КонецЕсли;	
	
	Исключение
		// не бросаем исключение - иногда HTMLДокумент дает ошибку
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти