&НаКлиенте
Перем ИдентификаторТекущейПравки;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьПредпросмотрФайловОбщая = ПолучитьФункциональнуюОпцию("ИспользоватьПредпросмотрФайлов");
	ИспользоватьПредпросмотрФайловЛичная =
		ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "ИспользоватьПредпросмотрФайлов");
		
	Если ИспользоватьПредпросмотрФайловЛичная = Неопределено Тогда
		ИспользоватьПредпросмотрФайловЛичная = Истина;
	КонецЕсли;              
	
	ПолеPDFРаботаетВВебКлиенте = РаботаСPDFПовтИсп.ПолеPDFРаботаетВВебКлиенте();
	МаксимальноеЧислоСтраницДляПредпросмотра = ОбзорФайловСервер.МаксимальноеЧислоСтраницДляПредпросмотра();
	
	ИспользоватьПредпросмотрФайлов = 
		ИспользоватьПредпросмотрФайловОбщая И ИспользоватьПредпросмотрФайловЛичная;
	
	Если Параметры.Свойство("Документ") Тогда
		Документ = Параметры.Документ;
	КонецЕсли;	
	
	Если Параметры.Свойство("Исполнитель") Тогда
		Исполнитель = Параметры.Исполнитель;
	КонецЕсли;	
	
	Если Параметры.Свойство("БизнесПроцесс") Тогда
		БизнесПроцесс = Параметры.БизнесПроцесс;
	КонецЕсли;	
	
	Если Параметры.Свойство("ГлавнаяЗадача") Тогда
		ГлавнаяЗадача = Параметры.ГлавнаяЗадача;
	КонецЕсли;	
	
	Если Параметры.Свойство("Действие") Тогда
		
		Действие = Параметры.Действие;
		ВеткаОбработки = СогласованиеВРежимеЗамечанийСервер.НайтиВеткуОбработки(Действие);
		НомерИтерации = РегистрыСведений.ИтерацииДействий.НомерИтерации(Действие);
		Элементы.РежимПоказаЗамечаний.Видимость 
			= ДействияСервер.ДействиеЗавершеноОтрицательноИЕстьЗамечания(Действие);
			
	КонецЕсли;	
	
	ТочкаМаршрута = Неопределено;
	Если Параметры.Свойство("Задача") Тогда
		Задача = Параметры.Задача;
		Если ЗначениеЗаполнено(Задача) Тогда
			ТочкаМаршрута = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Задача, "ТочкаМаршрута");
		КонецЕсли;	
	КонецЕсли;	
	
	Если ТочкаМаршрута = ПредопределенноеЗначение("БизнесПроцесс.Согласование.ТочкаМаршрута.Ознакомиться") Тогда
		Элементы.Закрыть.Видимость = Ложь;
	КонецЕсли;	
	
	ЭтаФорма.Заголовок = Строка(Документ) + НСтр("ru = ' (согласование документа)'");
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	СоздатьКнопкиПорционногоПредпросмотра();
	
	НомерБлока = 1;
	ВсегоПорцийПредпросмотра = 1;
	ОбновитьКнопкиДинамическогоСписка();
		
	ПоказыватьПравкиДругихСогласующих = Истина;
	
	ПоказыватьПравкиДругихЭтапов = Истина;
	
	ПоказыватьПравкиТолькоОдногоПрошлогоЭтапа = Ложь;
	
	МассивФайлов = СогласованиеВРежимеЗамечанийСервер.ПолучитьВсеПриложенныеФайлы(Документ);
	ТаблицаФайлов = СогласованиеВРежимеЗамечанийСервер.ПолучитьПараметрыФайлов(Документ, МассивФайлов);
	
	Строка = Файлы.Добавить();
	Если ЭтоКомплект Тогда
		Строка.Наименование = НСтр("ru = 'Комплект'");
	Иначе
		Строка.Наименование = НСтр("ru = 'Документ'");
	КонецЕсли;	
	Строка.Ссылка = Документ;
	Строка.ИндексКартинки = 10;
	ПрочитатьПравки(Строка);
	Строка.ЧислоЗамечаний = Строка.Правки.Количество();
	
	Для Каждого Выборка Из ТаблицаФайлов Цикл
		
		Строка = Файлы.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, Выборка);
		
		ИмяИРасширение = Строка(Выборка.Наименование) + "." + Выборка.Расширение;
		Если ЗначениеЗаполнено(Выборка.Роль) Тогда
			ИмяИРасширение = ИмяИРасширение + " (" + Строка(Выборка.Роль) + ")";
		КонецЕсли;	
		
		Если ЭтоКомплект Тогда
			Строка.Наименование = ИмяИРасширение + " (" + Строка(Выборка.ВладелецФайла) +  ")";
		Иначе
			Строка.Наименование = ИмяИРасширение;
		КонецЕсли;	
		
		ПрочитатьHTML(Строка);
		ПрочитатьПравки(Строка);
		Строка.ЧислоЗамечаний = Строка.Правки.Количество();
		
		Если ИдПервогоWordФайла = 0 
			И СогласованиеВРежимеЗамечанийСерверПовтИсп.ЭтоФайлДляСогласованияВРежимеЗамечаний(Строка.Расширение) Тогда
			ИдПервогоWordФайла = Строка.ПолучитьИдентификатор();
		КонецЕсли;	
		
	КонецЦикла;
	
	ЗаполнитьУсловноеОформлениеСпискаПравок();
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	ЗадачиМнеТекущийИсполнитель = 
		Сотрудники.ЛюбойПользовательСотрудника(
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Задача, "Исполнитель"));
		
	ПоказыватьPdfСредствами1С = РаботаСФайламиСлужебныйПовтИсп.ПоказыватьPdfСредствами1С();
	
	ЭтоВебКлиент = ОбщегоНазначения.ЭтоВебКлиент();
	ЭтоТонкийКлиент = ОбщегоНазначенияДокументооборот.ЭтоТонкийКлиент();
	
	// Pdf
	Если ЭтоТонкийКлиент Или (ЭтоВебКлиент И ПолеPDFРаботаетВВебКлиенте) Тогда
		Если ПоказыватьPdfСредствами1С Тогда
			ВывестиPDFДокументНаСервере();
		КонецЕсли;
	КонецЕсли;
	//Конец Pdf
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ИдПервогоWordФайла <> 0 Тогда
		Элементы.Файлы.ТекущаяСтрока = ИдПервогоWordФайла;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
// Строка - строка табличной части Файлы
Процедура ПрочитатьHTML(Строка)
	
	Если СогласованиеВРежимеЗамечанийСерверПовтИсп.ЭтоФайлДляСогласованияВРежимеЗамечаний(Строка.Расширение) Тогда
		
		Строка.ФайлHTML = РегистрыСведений.СлужебныеФайлыДокументов.ПолучитьСлужебныйФайл(
			Строка.ВладелецФайла, Строка.Ссылка, Перечисления.ОтношенияСлужебныхФайлов.HTMLСодержание,,,,
			Строка.ВсегоПорцийПредпросмотра, НомерБлока - 1);     // НомерБлока  -с 1, но из СУБД читаем с 0
			
		Если ЗначениеЗаполнено(Строка.ФайлHTML) Тогда
			
			РеквизитыHTML = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Строка.ФайлHTML, 
				"ТекущаяВерсия, ТекущаяВерсияРазмер, ТекущаяВерсияДатаСоздания");
			
			Строка.ВерсияHTML = РеквизитыHTML.ТекущаяВерсия;
			Строка.ФайлHTMLРазмер = РеквизитыHTML.ТекущаяВерсияРазмер;
			
			ТекущаяВерсияДатаСоздания = РеквизитыHTML.ТекущаяВерсияДатаСоздания;
			ДатаНачалаUTF = СогласованиеВРежимеЗамечанийСервер.ПолучитьДатуНачалаИспользованияКодировкиUTF();
			
			ДвоичныеДанные = РаботаСФайламиВызовСервера.ПолучитьДвоичныеДанныеФайла(Строка.ФайлHTML);
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("html");
			ДвоичныеДанные.Записать(ИмяВременногоФайла);
			
			ЧтениеТекста = Неопределено;
			Если ТекущаяВерсияДатаСоздания < ДатаНачалаUTF Тогда // старый файл
				ЧтениеТекста = Новый ЧтениеТекста(ИмяВременногоФайла);
			Иначе
				ЧтениеТекста = Новый ЧтениеТекста(ИмяВременногоФайла, СогласованиеВРежимеЗамечанийHTMLКлиентСервер.КодировкаЧтенияЗаписиHtml());
			КонецЕсли;	
			Строка.ТекстHTML = ЧтениеТекста.Прочитать();
			ЧтениеТекста.Закрыть();
			
			Если Найти(Строка.ТекстHTML, "contentEditable") <> 0  Тогда
			
				Строка.ТекстHTML = СтрЗаменить(Строка.ТекстHTML, "contentEditable=true", "");
					
			КонецЕсли;
			
			СогласованиеВРежимеЗамечанийСервер.ВставитьКартинкиВТекстHTML(
				Строка.ТекстHTML, Строка.ВладелецФайла, Строка.ФайлHTML, УникальныйИдентификатор);
			
			Строка.ТекстHTMLПриОткрытии = Строка.ТекстHTML;
			
			ПодсветитьПравки(Строка);
			
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПеречитатьПравки()
	
	ТекущаяСтрока = Неопределено;
	Если Элементы.Файлы.ТекущиеДанные <> Неопределено Тогда
		ТекущаяСтрока = Элементы.Файлы.ТекущаяСтрока;
	КонецЕсли;	
	
	ПеречитатьПравкиСервер(ТекущаяСтрока);
	
КонецПроцедуры	

&НаСервере
Процедура ПеречитатьПравкиСервер(ТекущаяСтрока = Неопределено)
	
	Для Каждого Строка Из Файлы Цикл
		
		Если Не ДелопроизводствоКлиентСервер.ЭтоДокументПредприятия(Строка.Ссылка) Тогда
			ПрочитатьHTML(Строка);
		КонецЕсли;
		
		ПрочитатьПравки(Строка);
		Строка.ЧислоЗамечаний = Строка.Правки.Количество();
		
	КонецЦикла;

	Если ТекущаяСтрока <> Неопределено Тогда
		УстановитьДанныеИзТекущейСтроки(ТекущаяСтрока);
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
// Строка - строка табличной части Файлы
Процедура ПрочитатьПравки(Строка)
	
	ПрочитатьПравкиСвои(Строка);
	
КонецПроцедуры

&НаСервере
// Строка - строка табличной части Файлы
Функция МаксимальныйНомерИтерацииЗамечания()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(Замечания.НомерЭтапа), 0) КАК НомерЭтапа
		|ИЗ
		|	Справочник.Замечания КАК Замечания
		|ГДЕ
		|	Замечания.ВеткаОбработки = &ВеткаОбработки
		|	И Замечания.ПометкаУдаления = ЛОЖЬ");
		
	Запрос.УстановитьПараметр("ВеткаОбработки", ВеткаОбработки);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.НомерЭтапа;	
	
КонецФункции	

&НаСервере
// Строка - строка табличной части Файлы
Процедура ПрочитатьПравкиСвои(Строка)
	
	ТекПользователь = СотрудникиВызовСервера.ОсновнойСотрудникПользователя(
		ПользователиКлиентСервер.ТекущийПользователь());
	
	Строка.Правки.Очистить();
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Замечания.Документ КАК Документ,
		|	Замечания.Ссылка КАК Ссылка,
		|	Замечания.ВерсияДанных КАК ВерсияДанных,
		|	Замечания.ПометкаУдаления КАК ПометкаУдаления,
		|	Замечания.Код КАК Код,
		|	Замечания.Автоматическая КАК Автоматическая,
		|	Замечания.Автор КАК Автор,
		|	Замечания.ВерсияHTML КАК ВерсияHTML,
		|	Замечания.ВеткаОбработки КАК ВеткаОбработки,
		|	Замечания.ВладелецЗамечания КАК ВладелецЗамечания,
		|	Замечания.Дата КАК Дата,
		|	Замечания.Замечание КАК Замечание,
		|	Замечания.ЗамечаниеИнициатора КАК ЗамечаниеИнициатора,
		|	Замечания.ИдентификаторАвтора КАК ИдентификаторАвтора,
		|	Замечания.ИдентификаторЭтапа КАК ИдентификаторЭтапа,
		|	Замечания.ИдКонца КАК ИдКонца,
		|	Замечания.ИдНачала КАК ИдНачала,
		|	Замечания.ИмяПоля КАК ИмяПоля,
		|	Замечания.Комментарий КАК Комментарий,
		|	Замечания.НаЧтоМеняем КАК НаЧтоМеняем,
		|	Замечания.Номер КАК Номер,
		|	Замечания.НомерКартинки КАК НомерКартинки,
		|	Замечания.НомерЭтапа КАК НомерЭтапа,
		|	Замечания.Отработано КАК Отработано,
		|	Замечания.РеальныйАвтор КАК РеальныйАвтор,
		|	Замечания.СсылкиУтеряны КАК СсылкиУтеряны,
		|	Замечания.СтатусПринятия КАК СтатусПринятия,
		|	Замечания.ТипЗамечания КАК ТипЗамечания,
		|	Замечания.Цикл КАК Цикл,
		|	Замечания.ЧтоМеняем КАК ЧтоМеняем,
		|	Замечания.ЭтоЗамечаниеWord КАК ЭтоЗамечаниеWord,
		|	Замечания.ЭтоОтличиеОтШаблона КАК ЭтоОтличиеОтШаблона,
		|	Замечания.Предопределенный КАК Предопределенный,
		|	Замечания.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
		|	Замечания.Представление,
		|	Замечания.ПринятаяРедакция,
		|	Замечания.НомерБлока КАК НомерБлока
		|ИЗ
		|	Справочник.Замечания КАК Замечания
		|ГДЕ
		|	Замечания.ВладелецЗамечания В(&ВладелецЗамечанияМассив)
		|	И Замечания.ВеткаОбработки = &ВеткаОбработки
		|	И Замечания.ПометкаУдаления = ЛОЖЬ");
		
	Если ПоказатьТолькоЗамечанияПротоколаРазногласий Тогда
		
		МаксимальныйНомерИтерации = МаксимальныйНомерИтерацииЗамечания();
		Запрос.Текст = Запрос.Текст + " И Замечания.НомерЭтапа = &НомерЭтапа"
		 + " И Замечания.ТипЗамечания = &ТипЗамечания"
		 + " И СтатусПринятия = &СтатусПринятия";
		
		Запрос.УстановитьПараметр("НомерЭтапа", МаксимальныйНомерИтерации);
		Запрос.УстановитьПараметр("ТипЗамечания", Перечисления.ТипыЗамечаний.Замечание);
		Запрос.УстановитьПараметр("СтатусПринятия", Перечисления.СтатусыПринятияЗамечаний.НеПринята);
		
	КонецЕсли;	
	   
	ВладелецЗамечанияМассив = Новый Массив;
	
	Если ДелопроизводствоКлиентСервер.ЭтоДокументПредприятия(Строка.Ссылка) Тогда
		
		ВладелецЗамечанияМассив.Добавить(Строка.Ссылка);
		
	ИначеЕсли ТипЗнч(Строка.Ссылка) = Тип("СправочникСсылка.Файлы") Тогда
		
		Если ЗначениеЗаполнено(Строка.ФайлHTML) Тогда
			
			ВладелецЗамечанияМассив = РегистрыСведений.СлужебныеФайлыДокументов.ПолучитьВсеСлужебныеФайлы(
				Строка.ВладелецФайла, Строка.Ссылка, Перечисления.ОтношенияСлужебныхФайлов.HTMLСодержание);
			
		Иначе	
			ВладелецЗамечанияМассив.Добавить(Строка.Ссылка);
		КонецЕсли; 
	КонецЕсли; 
	Запрос.УстановитьПараметр("ВладелецЗамечанияМассив", ВладелецЗамечанияМассив);
	
	Запрос.УстановитьПараметр("ВеткаОбработки", ВеткаОбработки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗагрузитьПравку = Истина;
		
		Если Не ЗначениеЗаполнено(Исполнитель) Тогда
			
			Если Не ПоказыватьПравкиДругихСогласующих И Выборка.Автор <> ТекПользователь Тогда
				ЗагрузитьПравку = Ложь;
			КонецЕсли;	
			
			Если Выборка.НомерЭтапа <> НомерИтерации Тогда // если =   то всегда загрузим
				
				Если ПоказыватьПравкиДругихЭтапов Тогда
					// все ок, загрузим - все этапы
				ИначеЕсли ПоказыватьПравкиТолькоОдногоПрошлогоЭтапа Тогда
					Если Выборка.НомерЭтапа <> НомерИтерации - 1 Тогда
						ЗагрузитьПравку = Ложь;
					КонецЕсли;	
				Иначе	
					ЗагрузитьПравку = Ложь; // выключено и ПоказыватьПравкиДругихЭтапов и ПоказыватьПравкиТолькоОдногоПрошлогоЭтапа
				КонецЕсли;	
				
			КонецЕсли;	
			
		Иначе
			
			Если Выборка.Автор <> Исполнитель Тогда
				ЗагрузитьПравку = Ложь;
			КонецЕсли;	
			
		КонецЕсли;
		
		Если ЗагрузитьПравку Тогда
		
			НовСтрока = Строка.Правки.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
			
			НовСтрока.УникальныйИдентификатор = Выборка.Ссылка.УникальныйИдентификатор();
			
			НовСтрока.СделанаТекущимПользователем = (НовСтрока.Автор = ТекПользователь);
			НовСтрока.ПравкаДругогоЭтапа = (НовСтрока.НомерЭтапа <> НомерИтерации);
			
			Если НовСтрока.СтатусПринятия = ПредопределенноеЗначение("Перечисление.СтатусыПринятияЗамечаний.НеПринята") Тогда
				НовСтрока.НомерКартинкиСтатуса = 2;
			ИначеЕсли НовСтрока.СтатусПринятия = ПредопределенноеЗначение("Перечисление.СтатусыПринятияЗамечаний.Принята") Тогда
				НовСтрока.НомерКартинкиСтатуса = 1;
			ИначеЕсли НовСтрока.СтатусПринятия = ПредопределенноеЗначение("Перечисление.СтатусыПринятияЗамечаний.ПринятаЧастично") Тогда
				НовСтрока.НомерКартинкиСтатуса = 3;
			Иначе
				НовСтрока.НомерКартинкиСтатуса = 0;
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЦикла;	
	
	ПравкиТаблица = ДанныеФормыВЗначение(Строка.Правки, Тип("ТаблицаЗначений"));
	СогласованиеВРежимеЗамечанийHTMLСервер.СортироватьПравки(ПравкиТаблица, Строка.ТекстHTML);
	ЗначениеВДанныеФормы(ПравкиТаблица, Строка.Правки);
	
КонецПроцедуры

&НаСервере
Процедура ПодсветитьПравки(Строка)
	
	ПравкиТаблица = Новый ТаблицаЗначений;
	
	КЧ = Новый КвалификаторыЧисла(10, 0);
	ТипЧисло = Новый ОписаниеТипов("Число",,, КЧ);
	ТипБулево = Новый ОписаниеТипов("Булево");
	
	ПравкиТаблица.Колонки.Добавить("ИдНачала", ТипЧисло);
	ПравкиТаблица.Колонки.Добавить("ИдКонца", ТипЧисло);
	ПравкиТаблица.Колонки.Добавить("Отработано", ТипБулево);
	ПравкиТаблица.Колонки.Добавить("ЗамечаниеИнициатора", ТипБулево);
	ПравкиТаблица.Колонки.Добавить("ЭтоЗамечаниеWord", ТипБулево);
	ПравкиТаблица.Колонки.Добавить("ЭтоОтличиеОтШаблона", ТипБулево);
	ПравкиТаблица.Колонки.Добавить("НомерБлока", ТипЧисло);
	
	ТекПользователь = СотрудникиВызовСервера.ОсновнойСотрудникПользователя(
		ПользователиКлиентСервер.ТекущийПользователь());
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Замечания.ВладелецЗамечания КАК ВладелецЗамечания,
		|	Замечания.Документ КАК Документ,
		|	Замечания.Автоматическая КАК Автоматическая,
		|	Замечания.Автор КАК Автор,
		|	Замечания.ВерсияHTML КАК ВерсияHTML,
		|	Замечания.Дата КАК Дата,
		|	Замечания.ИдКонца КАК ИдКонца,
		|	Замечания.ИдНачала КАК ИдНачала,
		|	Замечания.Комментарий КАК Комментарий,
		|	Замечания.НаЧтоМеняем КАК НаЧтоМеняем,
		|	Замечания.НомерКартинки КАК НомерКартинки,
		|	Замечания.НомерЭтапа КАК НомерЭтапа,
		|	Замечания.Отработано КАК Отработано,
		|	Замечания.ВеткаОбработки КАК ВеткаОбработки,
		|	Замечания.СтатусПринятия КАК СтатусПринятия,
		|	Замечания.ЗамечаниеИнициатора КАК ЗамечаниеИнициатора,
		|	Замечания.ТипЗамечания КАК ТипЗамечания,
		|	Замечания.ЧтоМеняем КАК ЧтоМеняем,
		|	Замечания.ЭтоЗамечаниеWord КАК ЭтоЗамечаниеWord,
		|	Замечания.ЭтоОтличиеОтШаблона КАК ЭтоОтличиеОтШаблона,
		|	Замечания.ИмяПоля КАК ИмяПоля,
		|	Замечания.Номер КАК Номер,
		|	Замечания.ИдентификаторЭтапа КАК ИдентификаторЭтапа,
		|	Замечания.Цикл КАК Цикл,
		|	Замечания.НомерБлока КАК НомерБлока
		|ИЗ
		|	Справочник.Замечания КАК Замечания
		|ГДЕ
		|	Замечания.ВладелецЗамечания = &Владелец
		|	И Замечания.ВеткаОбработки = &ВеткаОбработки
		|	И Замечания.СсылкиУтеряны = ЛОЖЬ
		|	И Замечания.ПометкаУдаления = ЛОЖЬ");
	   
	ФайлHTMLПараметр = Неопределено;
	   
	Если ДелопроизводствоКлиентСервер.ЭтоДокументПредприятия(Строка.Ссылка) Тогда
		ФайлHTMLПараметр = Строка.Ссылка;
	ИначеЕсли ТипЗнч(Строка.Ссылка) = Тип("СправочникСсылка.Файлы") Тогда
		Если ЗначениеЗаполнено(Строка.ФайлHTML) Тогда
			ФайлHTMLПараметр = Строка.ФайлHTML;
		Иначе	
			ФайлHTMLПараметр = Строка.Ссылка;
		КонецЕсли; 
	КонецЕсли; 
	   
	Запрос.УстановитьПараметр("Владелец", ФайлHTMLПараметр);
	Запрос.УстановитьПараметр("ВеткаОбработки", ВеткаОбработки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗагрузитьПравку = Истина;
		
		// Автору процесса Исполнение видны правки всех пользователей.
		// В Исполнение (дочернем процессе) видны правки всех этапов Исполнения 
		
		Если Не ЗначениеЗаполнено(Исполнитель) Тогда
			
			Если Выборка.НомерЭтапа <> НомерИтерации Тогда // если =   то всегда загрузим
				
				Если ПоказыватьПравкиДругихЭтапов Тогда
					// все ок, загрузим - все этапы
				ИначеЕсли ПоказыватьПравкиТолькоОдногоПрошлогоЭтапа Тогда
					Если Выборка.НомерЭтапа <> НомерИтерации - 1 Тогда
						ЗагрузитьПравку = Ложь;
					КонецЕсли;	
				Иначе	
					ЗагрузитьПравку = Ложь; // выключено и ПоказыватьПравкиДругихЭтапов и ПоказыватьПравкиТолькоОдногоПрошлогоЭтапа
				КонецЕсли;	
				
			КонецЕсли;	
			
		Иначе
			
			Если Выборка.Автор <> Исполнитель Тогда
				ЗагрузитьПравку = Ложь;
			КонецЕсли;	
			
		КонецЕсли;

			
		Если ЗагрузитьПравку Тогда
		
			НовСтрока = ПравкиТаблица.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
		
		КонецЕсли;
		
	КонецЦикла;	
	
	Строка.ТекстHTML = СогласованиеВРежимеЗамечанийHTMLСервер.ПодсветитьЦветомФонаПравки(
		ПравкиТаблица, Строка.ТекстHTMLПриОткрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлДляПросмотра(Команда)
	
	Если Элементы.Файлы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Ссылка = Элементы.Файлы.ТекущиеДанные.Ссылка;
	
	Если ДелопроизводствоКлиентСервер.ЭтоДокумент(Ссылка) Тогда
		ПоказатьЗначение(, Ссылка);
		Возврат;
	КонецЕсли;	
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Файлы") Тогда
		
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляОткрытия(
			Ссылка, 
			Неопределено, 
			ЭтаФорма.УникальныйИдентификатор, 
			Неопределено);
			
		КомандыРаботыСФайламиКлиент.Открыть(ДанныеФайла);
		
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДляСтаройВерсииФайла(Команда)
	
	ТекущиеДанные = Элементы.Правки.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанныеФайлы = Элементы.Файлы.ТекущиеДанные;
	Если ТекущиеДанныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	// открыть для просмотра только одной правки - в старой версии HTML файла
	ПараметрыОткрытияФормы = Новый Структура(
		"Документ, ВерсияHTML, УникальныйИдентификатор", 
		ТекущиеДанныеФайлы.ВладелецФайла, ТекущиеДанные.ВерсияHTML, ТекущиеДанные.УникальныйИдентификатор);
		
	ОткрытьФорму("ОбщаяФорма.СогласованиеВРежимеЗамечанийСтаройВерсииФайла", ПараметрыОткрытияФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Найти(ДанныеСобытия.Href, "ShowLinks") Тогда
		
		ОбзорСпискаДокументовКлиент.ПоказатьСвязи(ДанныеСобытия.Href);
		
		Возврат;
		
	КонецЕсли;	
	
	ТекущиеДанныеФайлы = Элементы.Файлы.ТекущиеДанные;
	Если ТекущиеДанныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	СогласованиеВРежимеЗамечанийКлиент.ОткрытьСсылку(ДанныеСобытия.Href, ДанныеСобытия.Element, Элемент.Документ,
		ТекущиеДанныеФайлы.ФайлHTML, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура Страница1(Команда)
	
	СтраницаВыбор(Команда);
	
КонецПроцедуры	

&НаКлиенте
Процедура Страница2(Команда)      
	
	СтраницаВыбор(Команда);
	
КонецПроцедуры	

&НаКлиенте
Процедура Страница3(Команда)
	
	СтраницаВыбор(Команда);
	
КонецПроцедуры	

&НаКлиенте
Процедура Страница4(Команда)
	
	СтраницаВыбор(Команда);
	
КонецПроцедуры	

&НаКлиенте         
Процедура Страница5(Команда)
	
	СтраницаВыбор(Команда);
	
КонецПроцедуры	      

&НаКлиенте
Процедура Страница6(Команда)
	
	СтраницаВыбор(Команда);
	
КонецПроцедуры	  

&НаКлиенте
Процедура Страница7(Команда)
	
	СтраницаВыбор(Команда);
	
КонецПроцедуры	 

&НаКлиенте
Процедура Страница8(Команда)
	
	СтраницаВыбор(Команда);
	
КонецПроцедуры	   

&НаКлиенте
Процедура Страница9(Команда)
	
	СтраницаВыбор(Команда);
	
КонецПроцедуры	

&НаКлиенте
Процедура Назад(Команда)
	
	НомерБлока = НомерБлока - 1;
	ЧастьВыбор(НомерБлока);
	
КонецПроцедуры

&НаКлиенте
Процедура Вперед(Команда)
	
	НомерБлока = НомерБлока + 1;
	ЧастьВыбор(НомерБлока);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаВыбор(Команда)
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("СтраницаВыборЗавершение", ЭтотОбъект);
	ОбзорФайловКлиент.ВыбратьСтраницуДинамическогоСписка(
		ЭтотОбъект,
		Команда,
		НомерБлока,
		ВсегоПорцийПредпросмотра,
		ОповещениеОЗавершении);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_МасштабПлюс(Команда)
	
	Элементы["ДокументPdfПоле"].Масштаб = Элементы["ДокументPdfПоле"].Масштаб + 10;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_МасштабМинус(Команда)                                 
	
	Если Элементы["ДокументPdfПоле"].Масштаб <= 10 Тогда
		Возврат;
	КонецЕсли;	
	
	Элементы["ДокументPdfПоле"].Масштаб = Элементы["ДокументPdfПоле"].Масштаб - 10;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПоворотЛево(Команда)
	
	Элементы["ДокументPdfПоле"].Ориентация = Элементы["ДокументPdfПоле"].Ориентация - 90;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПоворотПраво(Команда)
	
	Элементы["ДокументPdfПоле"].Ориентация = Элементы["ДокументPdfПоле"].Ориентация + 90;

КонецПроцедуры

&НаКлиенте
Процедура ЧастьВыбор(НоваяСтраница)
	
	Если НоваяСтраница = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НомерБлока = НоваяСтраница;    
	
	ПоказыватьПолеHTML = ЗначениеЗаполнено(Элементы.Файлы.ТекущиеДанные.ФайлHTML);
	
	Если ПоказыватьПолеHTML Тогда
	
		ИдСтроки = Элементы.Файлы.ТекущиеДанные.ПолучитьИдентификатор();
		ПрочитатьHTMLСервер(ИдСтроки, НомерБлока - 1);

	Иначе       
		
		ТекущиеДанные = Элементы.Файлы.ТекущиеДанные; 
		ТекущийФайлСтрока = ТекущиеДанные.Ссылка;
		
		ДокументPDF = Неопределено;
		
		ПараметрыHTMLПредставление = ОбзорФайловКлиентСервер.СтруктураПараметровHTMLПредставлениеФайла(); 
		ПараметрыHTMLПредставление.МаксимальноеЧислоСтраницДляПредпросмотра = МаксимальноеЧислоСтраницДляПредпросмотра;
		ПараметрыHTMLПредставление.Расширение = ТекущиеДанные.Расширение;
		ПараметрыHTMLПредставление.Размер = ТекущиеДанные.ТекущаяВерсияРазмер;
		ПараметрыHTMLПредставление.УникальныйИдентификатор = УникальныйИдентификатор;   
		
		ПараметрыHTMLПредставление.НомерПорции = НомерБлока - 1; // номера для пользователя - с 1, в СУБД - с 0
		
		ДанныеОбзора = ОбзорФайловКлиент.HTMLПредставлениеФайла(
			ТекущийФайлСтрока, 
			ПараметрыHTMLПредставление,
			ДокументPDF);
			
		ОбзорФайловКлиент.ЗаполнитьРеквизитыОбзора(ДанныеОбзора, ТекстHTML);
		
		Элементы.ГруппаПредпросмотрУрезан.Видимость = ПараметрыHTMLПредставление.ПредпросмотрУрезан;
		МасштабироватьPDFИКартинки = ПараметрыHTMLПредставление.МасштабироватьPDFИКартинки;
		
		Если ДокументPDF = Неопределено Тогда
			Элементы.ГруппаПредпросмотрСтраницы.ТекущаяСтраница = Элементы.ГруппаHtml;
		Иначе
			Элементы.ГруппаПредпросмотрСтраницы.ТекущаяСтраница = Элементы.ГруппаPdf;
			ЭтотОбъект["ДокументPdfРеквизит"] = ДокументPDF;
			Элементы["ДокументPdfПоле"].НомерТекущейСтраницы = 1;
		КонецЕсли;
		
	КонецЕсли;
		
	ОбновитьКнопкиДинамическогоСпискаКлиент();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд_Файлы

&НаКлиенте
Процедура ФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.Файлы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Ссылка = Элементы.Файлы.ТекущиеДанные.Ссылка;
	
	Если ДелопроизводствоКлиентСервер.ЭтоДокумент(Ссылка) Тогда
		ПоказатьЗначение(, Ссылка);
		Возврат;
	КонецЕсли;	
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Файлы") Тогда
		
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляОткрытия(
			Ссылка, 
			Неопределено, 
			ЭтаФорма.УникальныйИдентификатор, 
			Неопределено);
			
		КомандыРаботыСФайламиКлиент.Открыть(ДанныеФайла);
		
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Файлы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если Элементы.Файлы.ТекущиеДанные.Ссылка = ТекущийФайл Тогда // та же строка, ничего не делаем
		Возврат;
	КонецЕсли;	
	
	ПодключитьОбработчикОжидания("ОбработчикФайлыПриАктивизацииСтроки", 0.5, Истина);
	
	Если ИспользоватьПредпросмотрФайлов Тогда
		
		ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;

		ПоказыватьПолеHTML = ЗначениеЗаполнено(ТекущиеДанные.ФайлHTML);
		ПревышенРазмер = Ложь;
		
		Если Не ПоказыватьПолеHTML И ТипЗнч(ТекущиеДанные.Ссылка) = Тип("СправочникСсылка.Файлы") Тогда
					
			Если ОбзорФайловКлиент.ЭтоФайлСДолгойОбработкой(ТекущиеДанные.Расширение)
				И Не ТекущиеДанные.ПредпросмотрЕстьВБазе Тогда
					
				ТекстHTML = ОбзорФайловКлиент.HTMLПредставлениеСДолгойОбработкой();
				Элементы.ГруппаПредпросмотрУрезан.Видимость = Ложь;
				Элементы.ГруппаПредпросмотрСтраницы.ТекущаяСтраница = Элементы.ГруппаHtml; 
				Элементы.ПереключениеСтраниц.Видимость = Ложь;
				
			КонецЕсли;		

		КонецЕсли;		
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикФайлыПриАктивизацииСтроки()
	
	Если Элементы.Файлы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	
	Если Элементы.Файлы.ТекущиеДанные.Ссылка = ТекущийФайл И ЗначениеЗаполнено(ТекущийФайл) Тогда // та же строка, ничего не делаем
		Возврат;
	КонецЕсли;	

	НомерБлока = 1;
	ВсегоПорцийПредпросмотра = 1;
	ОбновитьКнопкиДинамическогоСписка();
	
	ОбработчикФайлыПриАктивизацииСтрокиСервер(Элементы.Файлы.ТекущаяСтрока);
	
	ТекущийФайл = Элементы.Файлы.ТекущиеДанные.Ссылка;
	
	ПоказыватьПолеHTML = ЗначениеЗаполнено(ТекущиеДанные.ФайлHTML);
	ПревышенРазмер = Ложь;
	
	Если ПоказыватьПолеHTML Тогда
		Элементы.ОткрытьФайлДляПросмотра.Видимость = Ложь;  
		Элементы.ГруппаПредпросмотрСтраницы.ТекущаяСтраница = Элементы.ГруппаHtml;
	Иначе
		Элементы.ОткрытьФайлДляПросмотра.Видимость = Истина;
		ПоказатьОбзорТекущегоФайла();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОбзорТекущегоФайла()
	
	Если Не ИспользоватьПредпросмотрФайлов Тогда
		
		ТекстHTML = "<html><body>
		|<p>Отключена настройка предпросмотра файлов.</p>
		|</body></html>";
		
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.ГруппаПредпросмотрУрезан.Видимость = Ложь;
		Элементы.ГруппаПредпросмотрСтраницы.ТекущаяСтраница = Элементы.ГруппаHtml;
		Элементы.ПереключениеСтраниц.Видимость = Ложь;
		Возврат;
	КонецЕсли;

	ТекущийФайлСтрока = ТекущиеДанные.Ссылка;
	РедактируетТекущийПользователь = Ложь;
	ЭтоДокумент = ДелопроизводствоКлиентСервер.ЭтоДокумент(ТекущийФайлСтрока);
	
	Если ЭтоДокумент Тогда
		
		ДанныеМиникарточки = ОбзорСпискаДокументов.ПолучитьДанныеМиникарточки(ТекущийФайлСтрока);
		ТекстHTML = ДанныеМиникарточки.Обзор;
		
		Элементы.ГруппаПредпросмотрУрезан.Видимость = Ложь;
		Элементы.ГруппаПредпросмотрСтраницы.ТекущаяСтраница = Элементы.ГруппаHtml;
		Элементы.ПереключениеСтраниц.Видимость = Ложь;
		Возврат;
		
	КонецЕсли;	
	
	Если РедактируетТекущийПользователь Тогда
		 
		ТекстHTML = ОбзорФайловКлиентСервер.HTMLПредставлениеПриРедактировании();
		Элементы.ГруппаПредпросмотрУрезан.Видимость = Ложь;
		Элементы.ГруппаПредпросмотрСтраницы.ТекущаяСтраница = Элементы.ГруппаHtml;       
		Элементы.ПереключениеСтраниц.Видимость = Ложь;
		
	Иначе 
		
		Если ЗначениеЗаполнено(ТекущийФайлСтрока) Тогда   
			
			ДокументPDF = Неопределено;
			
			ПараметрыHTMLПредставление = ОбзорФайловКлиентСервер.СтруктураПараметровHTMLПредставлениеФайла();
			ПараметрыHTMLПредставление.МаксимальноеЧислоСтраницДляПредпросмотра = МаксимальноеЧислоСтраницДляПредпросмотра;
			ПараметрыHTMLПредставление.Расширение = ТекущиеДанные.Расширение;
			ПараметрыHTMLПредставление.Размер = ТекущиеДанные.ТекущаяВерсияРазмер;
			ПараметрыHTMLПредставление.УникальныйИдентификатор = УникальныйИдентификатор;
			
			ДанныеОбзора = ОбзорФайловКлиент.HTMLПредставлениеФайла(
				ТекущийФайлСтрока, 
				ПараметрыHTMLПредставление,
				ДокументPDF);
				
			НомерБлока = 1;	
			ВсегоПорцийПредпросмотра = ПараметрыHTMLПредставление.ВсегоПорцийПредпросмотра;
			ОбновитьКнопкиДинамическогоСпискаКлиент();
				
			ОбзорФайловКлиент.ЗаполнитьРеквизитыОбзора(ДанныеОбзора, ТекстHTML);
			
			Элементы.ГруппаПредпросмотрУрезан.Видимость = ПараметрыHTMLПредставление.ПредпросмотрУрезан;
			МасштабироватьPDFИКартинки = ПараметрыHTMLПредставление.МасштабироватьPDFИКартинки;
			
			Если ДокументPDF = Неопределено Тогда
				Элементы.ГруппаПредпросмотрСтраницы.ТекущаяСтраница = Элементы.ГруппаHtml;
			Иначе
				Элементы.ГруппаПредпросмотрСтраницы.ТекущаяСтраница = Элементы.ГруппаPdf;
				ЭтотОбъект["ДокументPdfРеквизит"] = ДокументPDF;
				Элементы["ДокументPdfПоле"].НомерТекущейСтраницы = 1;
			КонецЕсли;
			
			ТекущиеДанные.ПредпросмотрЕстьВБазе = Истина;
				
		Иначе
			ТекстHTML = "<html><body></body></html>";
			Элементы.ГруппаПредпросмотрУрезан.Видимость = Ложь;
			Элементы.ГруппаПредпросмотрСтраницы.ТекущаяСтраница = Элементы.ГруппаHtml;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработчикФайлыПриАктивизацииСтрокиСервер(ТекущаяСтрока)
	
	// запоминаем для предыдущей строки - только Правки и ПравкиУдаленные.
	Для Каждого Строка Из Файлы Цикл
		
		Если Строка.Ссылка = ТекущийФайл Тогда // нашли
			
			ПравкиТаблица = РеквизитФормыВЗначение("Правки");
			ЗначениеВДанныеФормы(ПравкиТаблица, Строка.Правки);
			
			ПравкиУдаленныеТаблица = РеквизитФормыВЗначение("ПравкиУдаленные");
			ЗначениеВДанныеФормы(ПравкиУдаленныеТаблица, Строка.ПравкиУдаленные);
			
			Прервать;
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	УстановитьДанныеИзТекущейСтроки(ТекущаяСтрока);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеИзТекущейСтроки(ТекущаяСтрока)
	
	// ставим данные новой строки
	ТекущиеДанные = Файлы[ТекущаяСтрока];
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ВерсияHTML) Тогда
		ТекстHTML = ТекущиеДанные.ТекстHTML;
	КонецЕсли;

	ВсегоПорцийПредпросмотра = ТекущиеДанные.ВсегоПорцийПредпросмотра;
	НомерБлока = 1;
	ОбновитьКнопкиДинамическогоСписка();
	
	ТекстHTMLПриОткрытии = ТекущиеДанные.ТекстHTMLПриОткрытии;
	
	ПравкиТаблица = ДанныеФормыВЗначение(ТекущиеДанные.Правки, Тип("ТаблицаЗначений"));
	ЗначениеВРеквизитФормы(ПравкиТаблица, "Правки");
	
	ПравкиУдаленныеТаблица = ДанныеФормыВЗначение(ТекущиеДанные.ПравкиУдаленные, Тип("ТаблицаЗначений"));
	ЗначениеВРеквизитФормы(ПравкиУдаленныеТаблица, "ПравкиУдаленные");
	
	ФайлHTML  = ТекущиеДанные.ФайлHTML;
	ВерсияHTML = ТекущиеДанные.ВерсияHTML;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд_Правки

&НаКлиенте
Процедура ПравкиПриАктивизацииСтроки(Элемент)
	
	Если ИдентификаторТекущейПравки <> Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ПодключитьОбработчикОжидания("ОбработчикСписокПриАктивизацииСтроки", 0.5, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСписокПриАктивизацииСтроки()
	
	ВыделитьПравкуВHTML();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовШапки

&НаКлиенте
Процедура РежимПоказаЗамечанийПриИзменении(Элемент)
	
	ПоказатьТолькоЗамечанияПротоколаРазногласий = (РежимПоказаЗамечаний <> 0);
	ПеречитатьПравки();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПравкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПравкиПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПравкиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Правки.ТекущиеДанные;
	
	ПараметрыОткрытия = Новый Структура("ЧтоМеняем, НаЧтоМеняем, ТипПравки, Автор, Комментарий, РеальныйАвтор, Замечание", 
		ТекущиеДанные.ЧтоМеняем, ТекущиеДанные.НаЧтоМеняем, 
		ТекущиеДанные.ТипПравки, ТекущиеДанные.Автор,
		ТекущиеДанные.Комментарий, ТекущиеДанные.РеальныйАвтор,
		ТекущиеДанные.Замечание);
	
	ОткрытьФорму("ОбщаяФорма.ФормаПросмотраПравки",
		ПараметрыОткрытия,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьПравкуВHTML()
	
	ТекущиеДанные = Элементы.Правки.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	

	ТекущиеДанныеФайлы = Элементы.Файлы.ТекущиеДанные;
	Если ТекущиеДанныеФайлы <> Неопределено И ТекущиеДанные.НомерБлока <> ТекущиеДанныеФайлы.НомерБлока Тогда
		
		ЧастьВыбор(ТекущиеДанные.НомерБлока + 1);
		
		ПодключитьОбработчикОжидания("ОбработчикСписокПриАктивизацииСтроки", 0.5, Истина); // тут уже спозиционируем в ПолеHtml
		
		Возврат;
	КонецЕсли;	
	
	HTMLДокумент = Элементы.ТекстHTML.Документ; 
	
	НайденныйУзелНачало = Неопределено;
	НайденныйУзелКонец = Неопределено;
	НайтиУзлыНачалаИКонцаВыделения(НайденныйУзелНачало, НайденныйУзелКонец, ТекущиеДанные);	
	
	ВыделитьТекстПоУзлам(НайденныйУзелНачало, НайденныйУзелКонец);
	
	Элементы.ПравкиКонтекстноеМенюПоказатьДляСтаройВерсииФайла.Доступность
	 = (ТекущиеДанные.ПозицияВHtml = 0 И ЗначениеЗаполнено(ВерсияHTML));
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиУзлыНачалаИКонцаВыделения(НайденныйУзелНачало, НайденныйУзелКонец, ТекущиеДанные)
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	НайтиУзлыНачалаИКонцаВыделенияПоНомерам(ТекущиеДанные.ИдНачала, ТекущиеДанные.ИдКонца,
		НайденныйУзелНачало, НайденныйУзелКонец);	
		
КонецПроцедуры

&НаКлиенте
Процедура НайтиУзлыНачалаИКонцаВыделенияПоНомерам(ИдНачалаЧисло, ИдКонцаЧисло,
	НайденныйУзелНачало, НайденныйУзелКонец)
	
	ИдНачала = "do_" + СогласованиеВРежимеЗамечанийHTMLКлиент.ПолучитьСтрокаИзIdЧисло(ИдНачалаЧисло);
	ИдКонца = "do_" + СогласованиеВРежимеЗамечанийHTMLКлиент.ПолучитьСтрокаИзIdЧисло(ИдКонцаЧисло);
	
	HTMLДокумент = Элементы.ТекстHTML.Документ; 
	
	НайденныйУзелНачало = Неопределено;
	НайденныйУзелКонец = Неопределено;
	
	
	Попытка
		
		НайденныйУзелНачало = HTMLДокумент.getElementById(ИдНачала);
		УзелКонец = HTMLДокумент.getElementById(ИдКонца);
		
		// Ищем последнее выделенное
		НайденныйУзел = Неопределено;
		
		СогласованиеВРежимеЗамечанийHTMLКлиент.НайтиПервыйУзелПослеУзла(УзелКонец, НайденныйУзел);
		
		Если НайденныйУзел <> Неопределено Тогда
			НайденныйУзелКонец = НайденныйУзел;
		КонецЕсли;	
		
	Исключение
		// не бросаем исключение - иногда HTMLДокумент дает ошибку
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьТекстПоУзлам(НайденныйУзелНачало, НайденныйУзелКонец)
	
	HTMLДокумент = Элементы.ТекстHTML.Документ; 
	
	Попытка
		
		Если НайденныйУзелНачало <> Неопределено Тогда
			
			Диапазон = HTMLДокумент.createRange();
			Диапазон.setStart(НайденныйУзелНачало, 0);
			Диапазон.setEnd(НайденныйУзелКонец, 0);
			
			Выделение = HTMLДокумент.getSelection();
			Выделение.removeAllRanges();
			Выделение.addRange(Диапазон);
			
			НайденныйУзелНачало.scrollIntoView(true);
			HTMLДокумент.documentElement.scrollLeft = 0;
			
		КонецЕсли;	
	
	Исключение
		// не бросаем исключение - иногда HTMLДокумент дает ошибку
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУсловноеОформлениеСпискаПравок()
	
	// Выделять правки, у которых нет привязки к HTML (удален текст)
	ЭлементУсловногоОформления = ЭтаФорма.УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Использование = Истина;
	
	ПредставлениеЭлемента = НСтр("ru = 'Выделять правки, у которых нет привязки к HTML (стандартная настройка)'");
	ЭлементУсловногоОформления.Представление = ПредставлениеЭлемента;
	
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Правки.ПозицияВHtml");
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = 0;
	ЭлементОтбораДанных.Использование = Истина;
	
	ЭлементЦветаОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("TextColor");
	ЭлементЦветаОформления.Значение = ЦветаСтиля.ЦветНеизвестногоАдресата;
	ЭлементЦветаОформления.Использование = Истина;
	
	Поле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	Поле.Поле = Новый ПолеКомпоновкиДанных("ПравкиЧтоМеняем");
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаСервере
Процедура ВывестиPDFДокументНаСервере()
	
	СведенияОДокументеPDF = РаботаСPDFПовтИсп.НовыеСведенияОPDFДокументеНаФорме();
	СведенияОДокументеPDF.ИмяРодителяКоманды = "ГруппаКомандPdf";	
	
	РаботаСPDF.ВывестиPDFДокументНаФорму(ЭтотОбъект, СведенияОДокументеPDF);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКнопкиДинамическогоСписка()
	
	ОбзорФайловКлиентСервер.ОбновитьКнопкиДинамическогоСписка(
		ЭтотОбъект,
		НомерБлока,
		ВсегоПорцийПредпросмотра);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКнопкиДинамическогоСпискаКлиент()
	
	ОбзорФайловКлиентСервер.ОбновитьКнопкиДинамическогоСписка(
		ЭтотОбъект,
		НомерБлока,
		ВсегоПорцийПредпросмотра);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьКнопкиПорционногоПредпросмотра()
	
	ИмяРодителяКоманды = "ГруппаСтраницыКнопкиПеремотки";
	ОбзорФайловСервер.СоздатьКнопкиПорционногоПредпросмотра(ЭтотОбъект, ИмяРодителяКоманды);
	
КонецПроцедуры	

&НаКлиенте
Процедура СтраницаВыборЗавершение(НоваяСтраница, ДополнительныеПараметры) Экспорт
	
	ЧастьВыбор(НоваяСтраница);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьHTMLСервер(ИдСтроки, НомерБлока) 
	
	Строка = Файлы.НайтиПоИдентификатору(ИдСтроки);
	Если Строка = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Строка.НомерБлока = НомерБлока;
	
	ПрочитатьHTML(Строка);

	ФайлHTML  = Строка.ФайлHTML;
	ТекстHTML = Строка.ТекстHTML;     
	ВерсияHTML = Строка.ВерсияHTML;
	
КонецПроцедуры	

#КонецОбласти