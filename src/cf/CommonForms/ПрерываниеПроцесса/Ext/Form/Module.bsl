////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("БизнесПроцесс", БизнесПроцесс);
	
	Если Не ЗначениеЗаполнено(БизнесПроцесс) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.БизнесПроцесс.Видимость = Параметры.ПоказатьСсылкуНаПроцесс;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЧислоЗадач = БизнесПроцессыИЗадачиВызовСервера.ПолучитьЧислоНевыполненныхЗадачБизнесПроцесса(
		БизнесПроцесс);
		
	ЧислоПодчиненныхПроцессов = 
		БизнесПроцессыИЗадачиВызовСервера.ПолучитьЧислоНевыполненныхПодчиненныхПроцессовБизнесПроцесса(
			БизнесПроцесс);

	УстановитьПривилегированныйРежим(Ложь);
	
	Если ЧислоПодчиненныхПроцессов > 0 Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Будет выполнено прерывание процесса, его невыполненных задач (%1) и подчиненных процессов (%2).
				 |Внимание! Все внесенные изменения будут необратимыми.'"),
			ЧислоЗадач,
			ЧислоПодчиненныхПроцессов);
	Иначе
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Будет выполнено прерывание процесса, его невыполненных задач (%1).
				 |Внимание! Все внесенные изменения будут необратимыми.'"),
			ЧислоЗадач);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПрерватьПроцесс(Команда)
	
	Результат = Новый Структура;
	
	Результат.Вставить(
		"ПричинаПрерывания", 
		СтрЗаменить(ПричинаПрерывания, Символы.ПС, " "));
		
	Результат.Вставить(
		"ВладелецФормы",
		ВладелецФормы);
	
	Закрыть(Результат);
	
	Оповестить("Процесс_ВводПричиныПрерывания", Результат, ЭтаФорма);
	
КонецПроцедуры