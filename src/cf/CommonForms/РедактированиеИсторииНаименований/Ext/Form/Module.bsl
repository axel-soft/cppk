
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Если Не Параметры.Свойство("ИсторияНаименований")
			Или Не Параметры.Свойство("АктуальноеНаименование")
			Или Не Параметры.Свойство("АктуальноеНаименованиеПолное") Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ИсторияНаименований.Загрузить(Параметры.ИсторияНаименований.Выгрузить());
	Если ИсторияНаименований.Количество() = 0 Тогда
		АктуальнаяСтрока = ИсторияНаименований.Добавить();
		АктуальнаяСтрока.Период				= '19900101';
		АктуальнаяСтрока.Наименование		= Параметры.АктуальноеНаименование;
		АктуальнаяСтрока.НаименованиеПолное	= Параметры.АктуальноеНаименованиеПолное;
	КонецЕсли;
	
	Если ТолькоПросмотр Тогда
		Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	УстановитьПризнакПервоначальногоЗначения(ИсторияНаименований);
	
	Если ИсторияНаименований.Количество() > 0 Тогда
		Элементы.ИсторияНаименований.ТекущаяСтрока = ИсторияНаименований[ИсторияНаименований.Количество()-1].ПолучитьИдентификатор();
	КонецЕсли;
	
	Элементы.ДекорацияПодсказка.Заголовок = Юрлица.ПодсказкаПроИсторию();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИсторияНаименований

&НаКлиенте
Процедура ИсторияНаименованийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ТекДанные = Элемент.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			
			НовыйПериод = НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
			
			// Получим максимальный период в таблице
			ПоследнийПериод = '19900101';
			Для Каждого ЗаписьИстории ИЗ ИсторияНаименований Цикл
				Если ЗаписьИстории.Период > ПоследнийПериод Тогда
					ПоследнийПериод = ЗаписьИстории.Период;
				КонецЕсли;
			КонецЦикла;
			
			Если НовыйПериод <= ПоследнийПериод Тогда
				НовыйПериод = НачалоДня(ПоследнийПериод + 86400);
			КонецЕсли;
			
			ТекДанные.Период = НовыйПериод;
			ТекДанные.ПервоначальноеЗначение = Ложь;
			
			ТекущийЭлемент = Элементы.ИсторияНаименованийНаименование;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияНаименованийПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПризнакПервоначальногоЗначения(ИсторияНаименований);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияНаименованийПередУдалением(Элемент, Отказ)
	
	Если ИсторияНаименований.Индекс(Элемент.ТекущиеДанные) = 0 Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияНаименованийНаименованиеПриИзменении(Элемент)
	
	ТекДанные = Элементы.ИсторияНаименований.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекДанные.Наименование) И Не ЗначениеЗаполнено(ТекДанные.НаименованиеПолное) Тогда
			ТекДанные.НаименованиеПолное = ТекДанные.Наименование;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Отказ = Ложь;
	
	ПроверитьЗаполнениеИстории(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ИсторияНаименований.Сортировать("Период");
	РезультатВыбора = Новый Структура;
	РезультатВыбора.Вставить("ИсторияНаименований", ИсторияНаименований);
	
	Оповестить("ОтредактированаИсторияНаименований", РезультатВыбора);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПризнакПервоначальногоЗначения(ТаблицаИстории)
	
	ТаблицаИстории.Сортировать("Период");
	// Первая строка должна быть первоначальным значением
	Если ТаблицаИстории.Количество() > 0 Тогда
		ПерваяСтрока = ТаблицаИстории[0];
		ПерваяСтрока.ПервоначальноеЗначение = Истина;
		ПерваяСтрока.Период = '19900101';
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеИстории(Отказ)
	
	ПериодыСтрок = Новый Массив;
	
	Для Каждого Запись Из ИсторияНаименований Цикл
		
		ИндексСтроки = ИсторияНаименований.Индекс(Запись);
		ПрефиксСообщенияСтроки = СтрШаблон("ИсторияНаименований[%1].", Формат(ИндексСтроки, "ЧЦ=; ЧДЦ=; ЧГ="));
		
		Если НЕ ЗначениеЗаполнено(Запись.Период) И ИндексСтроки > 0 Тогда
			СообщениеОбОшибке = НСтр("ru = 'Нужно указать дату начала действия'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки + "Период", , Отказ);
		КонецЕсли;
		
		Если ПериодыСтрок.Найти(Запись.Период) = Неопределено Тогда
			Если ЗначениеЗаполнено(Запись.Период) Тогда
				ПериодыСтрок.Добавить(Запись.Период);
			КонецЕсли;
		Иначе
			// Строка с такой датой уже была раньше, это ошибка.
			// Не может быть 2 строки с одинаковой датой.
			СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанной датой сведений'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки + "Период", , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Запись.Наименование) Тогда
			СообщениеОбОшибке = НСтр("ru = 'Поле ""Наименование"" не заполнено'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки + "Наименование",  , Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти