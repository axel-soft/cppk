///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отправить(Команда)
	
	Результат = ОтправитьНаСервере();
	Если Не Результат.Отправлено Тогда
		ВызватьИсключение НСтр("ru = 'Не удалось отправить жалобу, пожалуйста повторите...'");
	КонецЕсли;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОтправитьНаСервере()
	
	Возврат ЗарегистрироватьЖалобу(Имя, Телефон, АдресEmail, Сообщение, Параметры.СписокФайлов);
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗарегистрироватьЖалобу(Имя, Телефон, АдресEmail, Сообщение, Файлы)
	
	УстановитьПривилегированныйРежим(Истина);
	ПараметрыРаспознавания = РаботаСРечьюБМОСервер.ПолучитьПараметрыВнешнегоПодключенияИнформационнойБазы();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ПараметрыРаспознавания = Неопределено Тогда
		Возврат РезультатРегистрацииЖалобы(Ложь);
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПолучениеФайловИзИнтернета
	Прокси = ПолучениеФайловИзИнтернетаКлиентСервер.ПолучитьПрокси("https");
	// Конец СтандартныеПодсистемы.ПолучениеФайловИзИнтернета
	
	Информация = Новый Структура;
	Информация.Вставить("email", АдресEmail);
	Информация.Вставить("tel", Телефон);
	
	Данные = Новый Структура;
	Данные.Вставить("client_name", Имя);
	Данные.Вставить("message", Сообщение);
	Данные.Вставить("info", Информация);
	Данные.Вставить("scope", ОбластьАвторизации());
	
	Таймаут = 60;
	
	Соединение = Новый HTTPСоединение("speech.1c.ai", , , , Прокси, Таймаут,
		Новый ЗащищенноеСоединениеOpenSSL());
	
	Запрос = Новый HTTPЗапрос("1c/feedback/");
	Запрос.Заголовки.Вставить("accept", "application/json");
	Запрос.Заголовки.Вставить("Content-Type", "application/json");
	Запрос.Заголовки.Вставить("authorization", "Bearer " + ПараметрыРаспознавания.Токен);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Данные);
	Запрос.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
	
	Ответ = Соединение.ВызватьHTTPМетод("POST", Запрос);
	
	Если Ответ.КодСостояния <> 200 Тогда
		Возврат РезультатРегистрацииЖалобы(Ложь);
	КонецЕсли;
	
	ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ТелоОтвета);
	РезультатРегистрации = ПрочитатьJSON(ЧтениеJSON);
	
	ИдентификаторЖалобы = РезультатРегистрации["feedback_id"];
	
	Для каждого Файл Из Файлы Цикл
		
		Запрос = Новый HTTPЗапрос(СтрЗаменить("1c/feedback/file/{feedback_id}", "{feedback_id}", ИдентификаторЖалобы));
		Запрос.Заголовки.Вставить("accept", "application/json");
		Запрос.Заголовки.Вставить("Content-Type", "application/json");
		Запрос.Заголовки.Вставить("authorization", "Bearer " + ПараметрыРаспознавания.Токен);
		
		Запрос.Заголовки.Вставить("file-name", Файл.Представление);
		
		Запрос.УстановитьТелоИзДвоичныхДанных(ПолучитьИзВременногоХранилища(Файл.АдресВоВременномХранилище));
		
		Ответ = Соединение.ВызватьHTTPМетод("POST", Запрос);
		
		Если Ответ.КодСостояния <> 200 Тогда
			Возврат РезультатРегистрацииЖалобы(Ложь);
		КонецЕсли;
	КонецЦикла;
	
	Возврат РезультатРегистрацииЖалобы(Истина);
	
КонецФункции

&НаСервереБезКонтекста
Функция РезультатРегистрацииЖалобы(Отправлено)
	
	Результат = Новый Структура;
	Результат.Вставить("Отправлено", Отправлено);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОбластьАвторизации()
	
	НастройкиРаботыСРечью = Константы.НастройкиРаботыСРечью.ПолучитьБезопасно();
	
	Попытка
		ОписаниеМоделейРаспознавания = РаботаСРечьюБМОСервер.ПолучитьОписаниеМоделейРаспознавания();
	Исключение
		ОписаниеМоделейРаспознавания = Новый Массив;
	КонецПопытки;
	
	ЛокальныеМодели = Новый Массив;
	
	Для Каждого ОписаниеМодели Из ОписаниеМоделейРаспознавания Цикл
		Если ОписаниеМодели.ДоступнаВЛокальномВарианте Тогда
			ПолучитьПараметры = ОписаниеМодели.ПолучитьПараметры();
			
			Модель = Новый Структура;
			Модель.Вставить("Идентификатор", Строка(ОписаниеМодели.ИдентификаторМодели));
			Модель.Вставить("Акустика", ПолучитьПараметры.Акустика);
			Модель.Вставить("Версия", ПолучитьПараметры.Версия);
			Модель.Вставить("Грамматика", ПолучитьПараметры.Грамматика);
			Модель.Вставить("КодЯзыка", ПолучитьПараметры.КодЯзыка);
			
			ЛокальныеМодели.Добавить(Модель);
		КонецЕсли;
	КонецЦикла;
	
	ИнформацияМоделиСервиса = Новый Структура;
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеАутентификации = ИнтернетПоддержкаПользователей.ДанныеАутентификацииПользователяИнтернетПоддержки();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ДанныеАутентификации <> Неопределено Тогда
		ЛогинПользователяИТС  = ДанныеАутентификации.Логин;
	Иначе
		ЛогинПользователяИТС = "<Неопределено>";
	КонецЕсли;
	
	ИнформацияИТС = Новый Структура;
	ИнформацияИТС.Вставить("ЛогинПользователяИТС", ЛогинПользователяИТС);
	
	УстановитьПривилегированныйРежим(Истина);
	ИдентификаторИнформационнойБазы = СтандартныеПодсистемыСервер.ИдентификаторИнформационнойБазы();
	УстановитьПривилегированныйРежим(Ложь);
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	Результат = Новый Структура;
	Результат.Вставить("Конфигурация", Метаданные.Имя);
	Результат.Вставить("ВерсияКонфигурации", Метаданные.Версия);
	Результат.Вставить("ВерсияБиблиотеки", РаботаСРечьюБМОСервер.ВерсияБиблиотеки());
	Результат.Вставить("ВерсияПлатформы", СистемнаяИнформация.ВерсияПриложения);
	Результат.Вставить("ИнформацияМоделиСервиса", ИнформацияМоделиСервиса);
	Результат.Вставить("ИнформацияИТС", ИнформацияИТС);
	Результат.Вставить("ТекущаяУниверсальнаяДата", ЗаписатьДатуJSON(ТекущаяУниверсальнаяДата(), ФорматДатыJSON.ISO));
	Результат.Вставить("ИдентификаторИнформационнойБазы", ИдентификаторИнформационнойБазы);
	Результат.Вставить("ЛокальныеМодели", ЛокальныеМодели);
	Результат.Вставить("ЗапретитьОблачноеРаспознавание", НастройкиРаботыСРечью.ЗапретитьОблачноеРаспознавание);
	Результат.Вставить("СеансоваяАвторизация", Ложь);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
