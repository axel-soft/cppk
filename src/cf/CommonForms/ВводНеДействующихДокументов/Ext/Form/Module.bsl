
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ВидыОтменяемыхДокументов") Тогда
		ВидыОтменяемыхДокументов.ЗагрузитьЗначения(Параметры.ВидыОтменяемыхДокументов);
	КонецЕсли;	
	
	Если Параметры.Свойство("ЗапретитьМенятьСписокОтменяемыхДокументов") Тогда
		ЗапретитьМенятьСписокОтменяемыхДокументов = Параметры.ЗапретитьМенятьСписокОтменяемыхДокументов;
	КонецЕсли;	
	
	ДатаРегистрации = Неопределено;
	ВидДокумента = Неопределено;
	РегистрационныйНомер = "";
	
	Если Параметры.Свойство("Документ") Тогда
		
		Документ = Параметры.Документ;
		
		РеквДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, 
			"ДатаРегистрации, РегистрационныйНомер, ВидДокумента");
		
		ДатаРегистрации = РеквДокумента.ДатаРегистрации;
		РегистрационныйНомер = РеквДокумента.РегистрационныйНомер;
		ВидДокумента = РеквДокумента.ВидДокумента;
		
	КонецЕсли;	
	
	МассивДокументов = Новый Массив;
	Если Параметры.Свойство("ТаблицаДокументов") Тогда
		
		Для Каждого СтрокаДокумент Из Параметры.ТаблицаДокументов Цикл 
			МассивДокументов.Добавить(СтрокаДокумент.Документ);
		КонецЦикла;
		
	Иначе // нет списка, все читаем сами по ссылке на документ
		
		ОткрытИзФормыЗадачи = Истина;
		
		СвязиОбъектов.ПрочитатьНеДействующие(Документ, РегистрационныйНомер, СписокНеДействующихДокументов);
		
		ВремТабл = СписокНеДействующихДокументов.Выгрузить();
		СписокНеДействующихДокументовНачальное.Загрузить(ВремТабл);
		
		Для Каждого СтрокаДокумент Из СписокНеДействующихДокументов Цикл
			МассивДокументов.Добавить(СтрокаДокумент.Документ);
		КонецЦикла;	
		
		ВидыОтменяемыхДокументовМассив = Делопроизводство.ПолучитьВидыОтменяемыхДокументов(ВидДокумента);		
		ВидыОтменяемыхДокументов.ЗагрузитьЗначения(ВидыОтменяемыхДокументовМассив);
		
		// доступность переключателя Это оригинал
		Если Константы.ОграничиватьДоступностьПолейПоСостоянию.Получить()
			И Не РольДоступна("ПолныеПрава") Тогда 
			ДоступныеПоля = Новый Массив; 
			НедоступныеПоля = Новый Массив; 
		
			Делопроизводство.ПолучитьДоступныеИНедоступныеПоСостояниюПоля(
				Документ.ПолучитьОбъект(),
				ДоступныеПоля, НедоступныеПоля);
			
			ДоступностьПоляОтменяет = (ДоступныеПоля.Найти("ОтменяетДокументы") <> Неопределено);
			ЗапретитьМенятьСписокОтменяемыхДокументов = Не ДоступностьПоляОтменяет;
				
		КонецЕсли;
		
	КонецЕсли;          
	
	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ 
		|	ДанныеДокументовПредприятия.Документ КАК Документ,
		|	ДанныеДокументовПредприятия.Наименование КАК Наименование,
		|	ДанныеДокументовПредприятия.РегистрационныйНомерИДата КАК РегистрационныйНомерИДата,
		|	ДанныеДокументовПредприятия.ВидДокумента КАК ВидДокумента,
		|	ДанныеДокументовПредприятия.Подготовил КАК Подготовил,
		|	ДанныеДокументовПредприятия.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
		|	ДанныеДокументовПредприятия.Подразделение КАК Подразделение
		|ИЗ
		|	РегистрСведений.ДанныеДокументовПредприятия КАК ДанныеДокументовПредприятия
		|ГДЕ
		|	ДанныеДокументовПредприятия.Документ В(&Документы)";
		
	Запрос.УстановитьПараметр("Документы", МассивДокументов);	
	ТаблицаЗапрос = Запрос.Выполнить().Выгрузить();      
	
	УстановитьПривилегированныйРежим(Ложь);

	Для Каждого Строка Из ТаблицаЗапрос Цикл 
		
		НоваяСтрока = ТаблицаДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		
		Если Параметры.Свойство("ТаблицаДокументов") Тогда
			Для Каждого ТекСтрока Из Параметры.ТаблицаДокументов Цикл
				Если ТекСтрока.Документ = НоваяСтрока.Документ Тогда
					
					НоваяСтрока.ДатаОтмены = ТекСтрока.ДатаОтмены;
					НоваяСтрока.УжеУстановлен = ТекСтрока.УжеУстановлен;
					НоваяСтрока.Источник = ТекСтрока.Источник;
					
					НоваяСтрока.Наименование = Строка(ТекСтрока.Документ);
					
					Если НоваяСтрока.УжеУстановлен И ЗначениеЗаполнено(ДатаРегистрации) Тогда
						НоваяСтрока.ДатаОтмены = Строка.ДатаОкончанияДействия;
					КонецЕсли;	
					
				КонецЕсли;	
			КонецЦикла;	
		Иначе	
			
			Для Каждого ТекСтрока Из СписокНеДействующихДокументов Цикл
				
				Если ТекСтрока.Документ = НоваяСтрока.Документ Тогда
					
					НоваяСтрока.ДатаОтмены = ТекСтрока.ДатаОтмены;
					НоваяСтрока.УжеУстановлен = ТекСтрока.УжеУстановлен;
					НоваяСтрока.Источник = ТекСтрока.Источник;  
					
					НоваяСтрока.Наименование = Строка(ТекСтрока.Документ);
					
					Если НоваяСтрока.УжеУстановлен И ЗначениеЗаполнено(ДатаРегистрации) Тогда
						НоваяСтрока.ДатаОтмены = Строка.ДатаОкончанияДействия;
					КонецЕсли;	
					
				КонецЕсли;	
				
			КонецЦикла;	
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Если ЗапретитьМенятьСписокОтменяемыхДокументов Тогда
		Элементы.ФормаДобавить.Доступность = Ложь;
		Элементы.ФормаПодбор.Доступность = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	Если ЗапретитьМенятьСписокОтменяемыхДокументов Тогда	
		Закрыть();
		Возврат;
	КонецЕсли;	
	
	Если ОткрытИзФормыЗадачи Тогда
		
		ЗаписатьНаСервере();
		
		Закрыть();	
		Возврат;	
		
	КонецЕсли;	
	
	МассивДокументов = Новый Массив;
	Для Каждого Строка Из ТаблицаДокументов Цикл 
		
		Если ЗначениеЗаполнено(Строка.Документ) Тогда 
			
			НужноДобавить = Истина;
			Для Каждого ТекСтрока Из МассивДокументов Цикл
				Если ТекСтрока.Документ = Строка.Документ Тогда
					НужноДобавить = Ложь;
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
			
			Если НужноДобавить Тогда
				
				ОписаниеДок = Новый Структура("Документ, ДатаОтмены, Источник, УжеУстановлен", 
					Строка.Документ, Строка.ДатаОтмены, Строка.Источник, Строка.УжеУстановлен);
				
				Если Строка.УжеУстановлен Тогда
					ОписаниеДок.ДатаОтмены = Дата('00010101');
				КонецЕсли;	
				
				МассивДокументов.Добавить(ОписаниеДок);	
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Закрыть(МассивДокументов);
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	Если ВидыОтменяемыхДокументов.Количество() <> 0 Тогда
		ПараметрыФормы.Вставить("Отбор", 
			Новый Структура("ВидДокумента, НеДействует", ВидыОтменяемыхДокументов, Ложь));
	Иначе		
		ПараметрыФормы.Вставить("Отбор", 
			Новый Структура("НеДействует", Ложь));
	КонецЕсли;	
		
	ПараметрыФормы.Вставить("ТолькоЗарегистрированные", Истина);
	ПараметрыФормы.Вставить("ИспользоватьИерархию", Ложь);
	
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	
	ПараметрыФормы.Вставить("ПоказыватьКомандуСоздать", Ложь);
	
	МассивДокументов = Новый Массив;
	Для Каждого Строка Из ТаблицаДокументов Цикл 
		
		Если ЗначениеЗаполнено(Строка.Документ) Тогда 
			
			МассивДокументов.Добавить(Строка.Документ);	
				
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыФормы.Вставить("ВыбранныеЗначения", МассивДокументов);
	
	ОткрытьФорму("Справочник.ДокументыПредприятия.ФормаВыбора", ПараметрыФормы, 
		Элементы.ТаблицаДокументов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиТаблицаДокументов

&НаКлиенте
Процедура ТаблицаДокументовНаименованиеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Элементы.ТаблицаДокументов.ТекущиеДанные.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовНаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Элементы.ТаблицаДокументов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	

	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = Документ Тогда
		Элементы.ТаблицаДокументов.ТекущиеДанные.Наименование = "";
		Возврат;
	КонецЕсли;	
	
	Элементы.ТаблицаДокументов.ТекущиеДанные.Документ = ВыбранноеЗначение;
	ОбновитьДанные(Элементы.ТаблицаДокументов.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		
		Если ВыбранноеЗначение.Количество() <> 0 Тогда
			ДобавитьНовыеДанные(ВыбранноеЗначение);
		КонецЕсли;
		
	ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоДокументПредприятия(ВыбранноеЗначение) Тогда
		
		МассивДок = Новый Массив;
		МассивДок.Добавить(ВыбранноеЗначение);
		ДобавитьНовыеДанные(МассивДок);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ТаблицаДокументов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если Элементы.ТаблицаДокументов.ТекущиеДанные.УжеУстановлен
		Или ЗапретитьМенятьСписокОтменяемыхДокументов Тогда
		Элементы.ТаблицаДокументовДатаОтмены.ТолькоПросмотр = Истина;
		Элементы.ТаблицаДокументовНаименование.КнопкаВыбора = Ложь;
		Элементы.ТаблицаДокументовНаименование.РедактированиеТекста = Ложь;
	Иначе
		Элементы.ТаблицаДокументовДатаОтмены.ТолькоПросмотр = Ложь;
		Элементы.ТаблицаДокументовНаименование.КнопкаВыбора = Истина;
		Элементы.ТаблицаДокументовНаименование.РедактированиеТекста = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовПередУдалением(Элемент, Отказ)
	
	Если ЗапретитьМенятьСписокОтменяемыхДокументов Тогда	
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
		
	Если Элементы.ТаблицаДокументов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если Элементы.ТаблицаДокументов.ТекущиеДанные.УжеУстановлен Тогда
		Отказ = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если ЗапретитьМенятьСписокОтменяемыхДокументов Тогда	
		Отказ = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовНаименованиеОчистка(Элемент, СтандартнаяОбработка)
	
	Если ЗапретитьМенятьСписокОтменяемыхДокументов Тогда	
		СтандартнаяОбработка = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элементы.ТаблицаДокументов.ТекущиеДанные.Документ = 
			ПредопределенноеЗначение("Справочник.ДокументыПредприятия.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаписатьНаСервере()

	СписокНеДействующихДокументов.Очистить();
	Для Каждого Строка Из ТаблицаДокументов Цикл
		
		НовСтр = СписокНеДействующихДокументов.Добавить();
		НовСтр.Документ = Строка.Документ;
		НовСтр.ДатаОтмены = Строка.ДатаОтмены;
		НовСтр.УжеУстановлен = Строка.УжеУстановлен;
		НовСтр.Источник = Строка.Источник;
		
	КонецЦикла;	
	
	ДокументЗарегистрированАргумент = ЗначениеЗаполнено(РегистрационныйНомер);
	
	ЭтоРегистрация = Ложь;
	СвязиОбъектов.УстановитьДелаетНеДействующим(
		Документ, 
		СписокНеДействующихДокументовНачальное, СписокНеДействующихДокументов, 
		ПредопределенноеЗначение("Справочник.ТипыСвязей.ДелаетНеДействующим"),,,,
		ЭтоРегистрация, ДокументЗарегистрированАргумент);
		
	
КонецПроцедуры	

&НаКлиенте
Процедура ДокументНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.ТаблицаДокументов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если Элементы.ТаблицаДокументов.ТекущиеДанные.УжеУстановлен Тогда
		Возврат;
	КонецЕсли;	
	
	ПараметрыФормы = Новый Структура;
		
	Если ВидыОтменяемыхДокументов.Количество() <> 0 Тогда
		ПараметрыФормы.Вставить("Отбор", 
			Новый Структура("ВидДокумента, НеДействует", ВидыОтменяемыхДокументов, Ложь));
	Иначе		
		ПараметрыФормы.Вставить("Отбор", 
			Новый Структура("НеДействует", Ложь));
	КонецЕсли;	
		
	ПараметрыФормы.Вставить("ТолькоЗарегистрированные", Истина);
	ПараметрыФормы.Вставить("ИспользоватьИерархию", Ложь);
	
	ПараметрыФормы.Вставить("ТекущаяСтрока", Элементы.ТаблицаДокументов.ТекущаяСтрока);
	
	ПараметрыФормы.Вставить("ПоказыватьКомандуСоздать", Ложь);
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВводНеДействующихДокументов", ЭтаФорма);
	
	ОткрытьФорму("Справочник.ДокументыПредприятия.ФормаВыбора", ПараметрыФормы, Элементы.ТаблицаДокументовНаименование,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВводНеДействующихДокументов(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Если Элементы.ТаблицаДокументов.ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
			
		Если Результат = Документ Тогда
			Элементы.ТаблицаДокументов.ТекущиеДанные.Наименование = "";
			Возврат;
		КонецЕсли;		
		
		Элементы.ТаблицаДокументов.ТекущиеДанные.Документ = Результат;
		ОбновитьДанные(Элементы.ТаблицаДокументов.ТекущаяСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		
		СтандартнаяОбработка = Ложь;
		МассивВидов = ВидыОтменяемыхДокументов.ВыгрузитьЗначения();
		ДанныеВыбора = ПолучитьДокументыКоторыеДелаемНедействующими(Текст, МассивВидов);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДокументыКоторыеДелаемНедействующими(ВОтветНаСтрока, МассивВидов)
	
	ДанныеВыбора = Новый СписокЗначений;

	Если Лев(ВОтветНаСтрока, 1) = "№" Тогда
		ВОтветНаСтрока = СокрЛП(Прав(ВОтветНаСтрока, СтрДлина(ВОтветНаСтрока)-1));
	КонецЕсли;	

	Если Не ЗначениеЗаполнено(ВОтветНаСтрока)Тогда
		Возврат ДанныеВыбора;
	КонецЕсли;
	
	// Заполнение "в ответ на". Поиск по номеру или наименованию
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПредприятия.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДокументыПредприятия КАК ДокументыПредприятия
	|ГДЕ
	|	(ДокументыПредприятия.РегистрационныйНомер ПОДОБНО &СтрокаПоиска
	|			ИЛИ ДокументыПредприятия.Заголовок ПОДОБНО &СтрокаПоиска)
	|	И ДокументыПредприятия.ВидДокумента В(&ВидДокумента)
	|	И ДокументыПредприятия.РегистрационныйНомер <> &РегистрационныйНомер
	|	И ДокументыПредприятия.НеДействует = ЛОЖЬ";
	
	Запрос.Параметры.Вставить("СтрокаПоиска", ВОтветНаСтрока + "%");
	Запрос.Параметры.Вставить("ВидДокумента", МассивВидов);
	Запрос.Параметры.Вставить("РегистрационныйНомер", "");
	
	Если МассивВидов.Количество() = 0 Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ДокументыПредприятия.ВидДокумента В(&ВидДокумента)", "");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда 

		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДанныеВыбора.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЕсли;	
	
	Возврат ДанныеВыбора;
	
КонецФункции

&НаСервере
Процедура ДобавитьНовыеДанные(МассивДок)
	
	МассивДокументов = Новый Массив;
	
	НовыйСоставДокументов = Новый Массив;
	
	Для Каждого ТекДокумент Из МассивДок Цикл
		
		ДобавитьДокумент = Истина;
		Если ТекДокумент = Документ Тогда
			Продолжить;
		КонецЕсли;	
		
		Для Каждого Строка Из ТаблицаДокументов Цикл
			Если Строка.Документ = ТекДокумент Тогда
				ДобавитьДокумент = Ложь; // дубль не допускаем
				НовыйСоставДокументов.Добавить(ТекДокумент);
				Прервать;
			КонецЕсли;	
		КонецЦикла;		
		
		Если ДобавитьДокумент Тогда
			МассивДокументов.Добавить(ТекДокумент);
		КонецЕсли;	
		
	КонецЦикла;		
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДанныеДокументовПредприятия.Документ КАК Документ,
		|	ДанныеДокументовПредприятия.Наименование КАК Наименование,
		|	ДанныеДокументовПредприятия.РегистрационныйНомерИДата КАК РегистрационныйНомерИДата,
		|	ДанныеДокументовПредприятия.ВидДокумента КАК ВидДокумента,
		|	ДанныеДокументовПредприятия.Подготовил КАК Подготовил,
		|	ДанныеДокументовПредприятия.Подразделение КАК Подразделение
		|ИЗ
		|	РегистрСведений.ДанныеДокументовПредприятия КАК ДанныеДокументовПредприятия
		|ГДЕ
		|	ДанныеДокументовПредприятия.Документ В(&Документы)";
		
	Запрос.УстановитьПараметр("Документы", МассивДокументов);	
	ТаблицаЗапрос = Запрос.Выполнить().Выгрузить();

	Для Каждого Строка Из ТаблицаЗапрос Цикл 
		
		НоваяСтрока = ТаблицаДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		
		НовыйСоставДокументов.Добавить(НоваяСтрока.Документ);
		
	КонецЦикла;
	
	КоличествоСтрок = ТаблицаДокументов.Количество();
	Для Порядок = 0 По КоличествоСтрок - 1 Цикл
		
		Индекс = КоличествоСтрок - 1 - Порядок;
		Строка = ТаблицаДокументов[Индекс];
		
		Если НовыйСоставДокументов.Найти(Строка.Документ) = Неопределено
			И Не Строка.УжеУстановлен Тогда // надо удалить
			ТаблицаДокументов.Удалить(Индекс);
		КонецЕсли;	
		
	КонецЦикла;		
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьДанные(ТекущаяСтрока)
	
	ТекСтрока = ТаблицаДокументов.НайтиПоИдентификатору(ТекущаяСтрока);
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого Строка Из ТаблицаДокументов Цикл
		Если Строка <> ТекСтрока И ТекСтрока.Документ = Строка.Документ Тогда
			ТекСтрока.Документ = Неопределено; // дубль не допускаем
			Возврат;
		КонецЕсли;	
	КонецЦикла;		
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДанныеДокументовПредприятия.Документ КАК Документ,
		|	ДанныеДокументовПредприятия.Наименование КАК Наименование,
		|	ДанныеДокументовПредприятия.РегистрационныйНомерИДата КАК РегистрационныйНомерИДата,
		|	ДанныеДокументовПредприятия.ВидДокумента КАК ВидДокумента,
		|	ДанныеДокументовПредприятия.Подразделение КАК Подразделение,
		|	ДанныеДокументовПредприятия.Подготовил КАК Подготовил
		|ИЗ
		|	РегистрСведений.ДанныеДокументовПредприятия КАК ДанныеДокументовПредприятия
		|ГДЕ
		|	ДанныеДокументовПредприятия.Документ = &Документ";
		
	Запрос.УстановитьПараметр("Документ", ТекСтрока.Документ);	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
		
	ЗаполнитьЗначенияСвойств(ТекСтрока, Выборка);
	
КонецПроцедуры

#КонецОбласти