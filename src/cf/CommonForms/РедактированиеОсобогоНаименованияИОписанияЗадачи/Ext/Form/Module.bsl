
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Наименование = Параметры.Наименование;
	Описание = Параметры.Описание;
	ОписаниеОсобое = Параметры.ОписаниеОсобое;
	Элементы.ОписаниеОсобое.Видимость = ЗначениеЗаполнено(ОписаниеОсобое);
	
	Если ТолькоПросмотр Тогда
		
		Элементы.Наименование.ТолькоПросмотр = ТолькоПросмотр;
		Элементы.Описание.ТолькоПросмотр = ТолькоПросмотр;
		Элементы.ОписаниеОсобое.ТолькоПросмотр = ТолькоПросмотр;
		
		Элементы.Готово.Видимость = Ложь;
		Элементы.Отмена.Заголовок = НСтр("ru = 'Закрыть'");
		Элементы.Отмена.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоОписание") Тогда 
		Элементы.Наименование.Видимость = Ложь;
		Заголовок = НСтр("ru = 'Особое описание задачи'");
	КонецЕсли;
	
	// РаспознаваниеРечи
	РаспознаваниеРечи_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	// Конец РаспознаваниеРечи
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// РаспознаваниеРечи
	РаспознаваниеРечи_ИзменитьСостояниеФормы();
	// Конец РаспознаваниеРечи
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// РаспознаваниеРечи
	РаботаСРечьюБМОКлиент.ОстановитьПотоковоеРаспознавание(УникальныйИдентификатор);
	РаботаСРечьюЖурналированиеКлиент.ОчиститьЖурнал(УникальныйИдентификатор);
	// Конец РаспознаваниеРечи
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	Результат = Новый Структура;
	Результат.Вставить("Наименование", Наименование);
	Результат.Вставить("Описание", Описание);
	Результат.Вставить("ОписаниеОсобое", ОписаниеОсобое);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

#Область РаспознаваниеРечи

&НаКлиенте
Процедура РаспознаваниеРечи(Команда)
	
	Если ЭтотОбъект["РаспознаваниеРечи_ВыполняетсяРаспознавание"] Тогда
		РаботаСРечьюБМОКлиент.ОстановитьПотоковоеРаспознавание(УникальныйИдентификатор);
	Иначе
		РаспознаваниеРечи_НачатьРаспознавание();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыРаспознавания(Команда)
	
	ТекущиеПараметры = ЭтотОбъект["РаспознаваниеРечи_ПараметрыРаспознавания"];
	ПараметрыРаспознаванияРечиКлиент.ПоказатьВыборПараметровРаспознаванияРечи(ЭтотОбъект, ТекущиеПараметры, 
		Новый ОписаниеОповещения("ПриВыбореПараметровРаспознаванияРечи", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура Пожаловаться(Команда)
	
	РаботаСРечьюЖурналированиеКлиент.СформироватьПисьмо(УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#Область РаспознаваниеРечи

&НаСервере
Процедура РаспознаваниеРечи_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("РаспознаваниеРечи_РаспознаваниеДоступно", Новый ОписаниеТипов("Булево")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("РаспознаваниеРечи_ВыполняетсяРаспознавание", Новый ОписаниеТипов("Булево")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("РаспознаваниеРечи_РаспознаваниеФразыЗавершено", Новый ОписаниеТипов("Булево")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("РаспознаваниеРечи_ВремяНачалаРаспознавания", Новый ОписаниеТипов("Число")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("РаспознаваниеРечи_ПараметрыРаспознавания", Новый ОписаниеТипов)); // Произвольный
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("РаспознаваниеРечи_ПерезапускРаспознавания", Новый ОписаниеТипов("Булево")));
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	//
	
	ТекущиеПараметры = ПараметрыРаспознаванияРечи.ТекущиеПараметры(ЭтотОбъект);
	
	ЭтотОбъект["РаспознаваниеРечи_ПараметрыРаспознавания"] = ТекущиеПараметры;
	ЭтотОбъект["РаспознаваниеРечи_РаспознаваниеДоступно"] =
		ПараметрыРаспознаванияРечи.РаспознаваниеДоступно(ТекущиеПараметры);
	
	Элементы.ГруппаРаспознаваниеРечи.Видимость = ЭтотОбъект["РаспознаваниеРечи_РаспознаваниеДоступно"];
	
	ЭтотОбъект["РаспознаваниеРечи_РаспознаваниеФразыЗавершено"] = Истина;
	
	//
	
	Константы.ОбщаяГрамматикаРаботыСРечью.УстановитьГрамматикуСеанса();
	
КонецПроцедуры

&НаКлиенте
Процедура РаспознаваниеРечи_НачатьРаспознавание()
	
	ТекущиеПараметры = ЭтотОбъект["РаспознаваниеРечи_ПараметрыРаспознавания"];
	ПараметрыМодели = ПараметрыРаспознаванияРечиКлиент.ПараметрыМодели(ТекущиеПараметры);
	ВариантИспользования = ПараметрыРаспознаванияРечиКлиент.ВариантИспользования(ТекущиеПараметры);
	ПараметрыРаспознавания = ПараметрыРаспознаванияРечиКлиент.ПараметрыПотоковогоРаспознаванияРечи(ТекущиеПараметры,
		Новый ОписаниеОповещения("ПриОстановкеАудиозаписи", ЭтотОбъект));
	
	Элемент = Элементы.Описание;
		
	Контекст = Новый Структура;
	Контекст.Вставить("Форма", ЭтотОбъект);
	Контекст.Вставить("Элемент", Элемент);
	Контекст.Вставить("ИмяРеквизита", "Описание");
	
	Попытка
		РаботаСРечьюБМОКлиент.НачатьПотоковоеРаспознавание(
			УникальныйИдентификатор,
			Новый ОписаниеОповещения(
				"ПриПолученииРезультатаРаспознавания", ЭтотОбъект, Контекст,
				"ПриОбработкеОшибкиРаспознавания", ЭтотОбъект),
			ПараметрыМодели,
			ВариантИспользования,
			ПараметрыРаспознавания
		);
		
		ЭтотОбъект["РаспознаваниеРечи_ВыполняетсяРаспознавание"] = Истина;
		ЭтотОбъект["РаспознаваниеРечи_ВремяНачалаРаспознавания"] = ТекущаяУниверсальнаяДатаВМиллисекундах();
		
	Исключение
		ПриОбработкеОшибкиРаспознавания(ИнформацияОбОшибке(), Истина, Контекст);
	КонецПопытки;
	
	РаспознаваниеРечи_ИзменитьСостояниеФормы();
	ТекущийЭлемент = Элементы.Описание;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспознаваниеРечи_ИзменитьСостояниеФормы()
	
	Если ЭтотОбъект["РаспознаваниеРечи_ВыполняетсяРаспознавание"] Тогда
			
		Элементы.РаспознаваниеРечи.Картинка = БиблиотекаКартинок.КрасныйМикрофон;
		
		Если ЭтотОбъект["РаспознаваниеРечи_РаспознаваниеФразыЗавершено"] Тогда
			Элементы.РаспознаваниеРечи.ЦветФона = Новый Цвет(255, 204, 0);
		Иначе
			Элементы.РаспознаваниеРечи.ЦветФона = Новый Цвет(225, 154, 0);
		КонецЕсли;
		
	Иначе
		
		Элементы.РаспознаваниеРечи.Картинка = БиблиотекаКартинок.ЧерныйМикрофон;
		Элементы.РаспознаваниеРечи.ЦветФона = Новый Цвет;
		
	КонецЕсли;
	
	Элементы.ГруппаРаспознаваниеРечи.Видимость = ЭтотОбъект["РаспознаваниеРечи_РаспознаваниеДоступно"]
		И РаботаСРечьюБМОКлиент.ПоддерживаетсяПотоковоеРаспознавание();
	
	Элементы.Описание.Доступность = ЭтотОбъект["РаспознаваниеРечи_РаспознаваниеФразыЗавершено"];
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПолученииРезультатаРаспознавания(РезультатРаспознавания, ПродолжитьРаспознавание, Контекст) Экспорт 
	
	ВремяНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	ПоляВводаКлиент.ВставитьРезультатРаспознаванияПоКурсору(
		Контекст.Форма,
		Контекст.Элемент,
		Контекст.ИмяРеквизита,
		РезультатРаспознавания
	);
	
	ВремяКонца = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	РаботаСРечьюЖурналированиеКлиент.ДобавитьРезультатРаспознавания(
		УникальныйИдентификатор,
		РезультатРаспознавания,
		ВремяНачала,
		ВремяКонца
	);
	
	ЭтотОбъект["РаспознаваниеРечи_РаспознаваниеФразыЗавершено"] = РезультатРаспознавания.РаспознаваниеФразыЗавершено;
	РаспознаваниеРечи_ИзменитьСостояниеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОбработкеОшибкиРаспознавания(ИнформацияОбОшибке, СтандартнаяОбработка, Контекст) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	РаботаСРечьюЖурналированиеКлиент.ДобавитьИсключение(УникальныйИдентификатор, ИнформацияОбОшибке);
	
	ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке);
	
	ЭтотОбъект["РаспознаваниеРечи_РаспознаваниеФразыЗавершено"] = Истина;
	РаспознаваниеРечи_ИзменитьСостояниеФормы();
	ТекущийЭлемент = Элементы.Описание;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОстановкеАудиозаписи(РезультатАудиозаписи, Контекст) Экспорт 
	
	ЭтотОбъект["РаспознаваниеРечи_ВыполняетсяРаспознавание"] = Ложь;
	ЭтотОбъект["РаспознаваниеРечи_РаспознаваниеФразыЗавершено"] = Истина;
	РаспознаваниеРечи_ИзменитьСостояниеФормы();
	ТекущийЭлемент = Элементы.Описание;
	
	ВремяКонца = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	ТекущиеПараметры = ЭтотОбъект["РаспознаваниеРечи_ПараметрыРаспознавания"];
	ПараметрыМодели = ПараметрыРаспознаванияРечиКлиент.ПараметрыМодели(ТекущиеПараметры);
	ВариантИспользования = ПараметрыРаспознаванияРечиКлиент.ВариантИспользования(ТекущиеПараметры);
	
	РаботаСРечьюЖурналированиеКлиент.ДобавитьАудио(
		УникальныйИдентификатор,
		РезультатАудиозаписи,
		ПараметрыМодели,
		ВариантИспользования,
		ЭтотОбъект["РаспознаваниеРечи_ВремяНачалаРаспознавания"],
		ВремяКонца
	);
	
	Если ЭтотОбъект["РаспознаваниеРечи_ПерезапускРаспознавания"] Тогда
		РаспознаваниеРечи_НачатьРаспознавание();
		ЭтотОбъект["РаспознаваниеРечи_ПерезапускРаспознавания"] = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореПараметровРаспознаванияРечи(Результат, Контекст) Экспорт
	
	ЭтотОбъект["РаспознаваниеРечи_ПараметрыРаспознавания"] = Результат;
	РаботаСРечьюБМОКлиент.ОстановитьПотоковоеРаспознавание(УникальныйИдентификатор);
	ЭтотОбъект["РаспознаваниеРечи_ПерезапускРаспознавания"] = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолученияРезультата(Результат, Контекст) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Свойство("Текст") Тогда
		ПоляВводаКлиент.ВставитьТекстПоКурсору(
			ЭтотОбъект, Элементы.Описание, "Описание", Результат.Текст);	
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти
