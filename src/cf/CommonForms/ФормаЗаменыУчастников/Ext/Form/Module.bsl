
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДопустимыеТипыСведений = Новый ОписаниеТипов("Массив, СписокЗначений");
	
	Если Параметры.Свойство("ВсеДействительны") И Параметры.ВсеДействительны Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("Сведения") Или Не ДопустимыеТипыСведений.СодержитТип(ТипЗнч(Параметры.Сведения)) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Для Каждого Элемент Из Параметры.Сведения Цикл
		
		КлючиСтруктурыПолей = "Участник, УчастникЗаменитьНа";
		
		СтруктураПолей = Новый Структура(КлючиСтруктурыПолей);
		СтруктураПолей.Участник = Элемент.Сотрудник;
		Если Элемент.Замены.Количество() <> 0 Тогда
			СтруктураПолей.УчастникЗаменитьНа = Элемент.Замены[0];
		КонецЕсли;
		
		Для Каждого КонтекстУчастника Из Элемент.КонтекстыУчастника Цикл
			
			УчастникПодЗамену = УчастникиПодЗамену.Добавить();
			ЗаполнитьЗначенияСвойств(УчастникПодЗамену, СтруктураПолей, КлючиСтруктурыПолей);
			ЗаполнитьЗначенияСвойств(УчастникПодЗамену, КонтекстУчастника);
			
			ЗаполнитьПорядокДляСортировки(УчастникПодЗамену);
				
		КонецЦикла;
		
	КонецЦикла;
	
	УчастникиПодЗамену.Сортировать("ПорядокДляСортировки");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Не предумотрено открытие формы без владельца.
	Если ВладелецФормы = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУчастникиПодЗамену

&НаКлиенте
Процедура УчастникиПодЗаменуУчастникЗаменитьНаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.УчастникиПодЗамену.ТекущиеДанные;
	
	ПараметрыПолученияДанных.Вставить("КонтролироватьСотрудниковБезПользователя", Истина);
	
	ДополнитьПараметрыПравиламиКоммуникаций(Элемент, ТекущиеДанные, ПараметрыПолученияДанных);
	
	РаботаСАдреснойКнигойКлиент.ПодобратьУчастника(
		ЭтотОбъект,
		Элемент,
		Текст,
		ДанныеВыбора,
		ПараметрыПолученияДанных,
		Ожидание,
		СтандартнаяОбработка,
		ТекущиеДанные.УчастникЗаменитьНа,
		Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиПодЗаменуУчастникЗаменитьНаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.УчастникиПодЗамену.ТекущиеДанные;
	
	ПараметрыПолученияДанных.Вставить("КонтролироватьСотрудниковБезПользователя", Истина);
	
	ДополнитьПараметрыПравиламиКоммуникаций(Элемент, ТекущиеДанные, ПараметрыПолученияДанных);
	
	РаботаСАдреснойКнигойКлиент.ПодобратьУчастника(
		ЭтотОбъект,
		Элемент,
		Текст,
		ДанныеВыбора,
		ПараметрыПолученияДанных,
		0,
		СтандартнаяОбработка,
		ТекущиеДанные.УчастникЗаменитьНа,
		Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиПодЗаменуУчастникЗаменитьНаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.УчастникиПодЗамену.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийУчастник = ТекущиеДанные.УчастникЗаменитьНа;
	
	ПараметрыПолученияДанных = Новый Структура;
	ПараметрыПолученияДанных.Вставить("КонтролироватьСотрудниковБезПользователя", Истина);
	ПараметрыПолученияДанных.Вставить("ДоступныеТипы", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	
	ДополнитьПараметрыПравиламиКоммуникаций(Элемент, ТекущиеДанные, ПараметрыПолученияДанных);
	
	РаботаСАдреснойКнигойКлиент.ВыбратьУчастника(
		ЭтотОбъект,
		Элемент,
		СтандартнаяОбработка,
		ТекущийУчастник, Ложь, ,
		ПараметрыПолученияДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиПодЗаменуУчастникЗаменитьНаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не РаботаСАдреснойКнигойКлиент.ОбработатьВыборУчастника(ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли; 
	
	СотрудникиКлиент.СотрудникОбработкаВыбора(
		Элементы.УчастникиПодЗамену.ТекущиеДанные, "УчастникЗаменитьНа", ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Новый Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	
	РезультатЗакрытия = Новый Массив;
	
	Для Каждого СтрокаЗамены Из УчастникиПодЗамену Цикл
		Если ЗначениеЗаполнено(СтрокаЗамены.УчастникЗаменитьНа) Тогда
			
			КлючиСтруктуры = "ВидУчастника, ФункцияУчастника, НаименованиеЭтапа, Участник, УчастникЗаменитьНа";
			ЭлементЗамены = Новый Структура(КлючиСтруктуры);
			
			ЗаполнитьЗначенияСвойств(ЭлементЗамены, СтрокаЗамены, КлючиСтруктуры);
			
			РезультатЗакрытия.Добавить(ЭлементЗамены);
			
		КонецЕсли;
	КонецЦикла;

	Закрыть(РезультатЗакрытия);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДополнитьПараметрыПравиламиКоммуникаций(Элемент, ТекущиеДанные, ПараметрыПолученияДанных)
	
	Если Не Параметры.УчитыватьПравилаКоммуникаций Тогда
		ПараметрыПолученияДанных.Вставить("ПравилаКоммуникаций", Ложь);
		Возврат;
	КонецЕсли;
	
	Контекст = Неопределено;
	
	ФункцияУчастника = ?(ЗначениеЗаполнено(ТекущиеДанные.ФункцияУчастника),
		ТекущиеДанные.ФункцияУчастника,
		ТекущиеДанные.ВидУчастника);
	
	// Для случая когда форма открывается из формы Действии, нужно самостоятельно строить контекст.
	Если Параметры.ВладелецФормыДействия Тогда
		
		Объект = ВладелецФормы.Объект;
		
		Контекст = Новый Структура;
		Контекст.Вставить("Ссылка", Объект.Ссылка);
		Контекст.Вставить("ИмяПоля", "ПредставлениеСтроки");
		Контекст.Вставить("ФункцияУчастника", ФункцияУчастника);
		Контекст.Вставить("Действие", Объект.Ссылка);
		Если ЗначениеЗаполнено(ТекущиеДанные.НаименованиеЭтапа) Тогда
			Контекст.Вставить("Этап", ТекущиеДанные.НаименованиеЭтапа);
		КонецЕсли;
		Если ВладелецФормы.Объект.Свойство("Предмет") Тогда
			Контекст.Вставить("Ссылка", Объект.Предмет);
		КонецЕсли;
		Если  ВладелецФормы.Объект.Свойство("Автор") Тогда
			Контекст.Вставить("Инициатор", Объект.Автор);
		ИначеЕсли ВладелецФормы.Объект.Свойство("Создал") Тогда
			Контекст.Вставить("Инициатор", Объект.Создал);
		КонецЕсли;
		
	Иначе
	
		Контекст = ПравилаКоммуникацийКлиентСервер.КонтекстВыбора(ВладелецФормы, Элемент,
			ФункцияУчастника);
	
	КонецЕсли;
	
	ПараметрыПолученияДанных.Вставить("ПравилаКоммуникаций", Контекст);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПорядокДляСортировки(УчастникПодЗамену)

	ЭлементыСортировки = Новый Массив;
	СтрокаЭтап = УчастникПодЗамену.ПорядокЭтапа;
	СтрокаФункция = СортировкаПоФункцииУчастника(УчастникПодЗамену.ФункцияУчастника);
	СтрокаВида = СортировкаПоВидуУчастника(УчастникПодЗамену.ВидУчастника);
	
	УчастникПредставление = Строка(УчастникПодЗамену.Участник);
	Если Не ЗначениеЗаполнено(УчастникПредставление) Тогда
		УчастникПредставление = "яя"; // для сортировки  -чтобы был в конце
	КонецЕсли;	
	
	ЭлементыСортировки.Добавить(СтрокаЭтап);
	ЭлементыСортировки.Добавить(СтрокаФункция);
	ЭлементыСортировки.Добавить(СтрокаВида);
	ЭлементыСортировки.Добавить(УчастникПредставление);

	УчастникПодЗамену.ПорядокДляСортировки = СтрСоединить(ЭлементыСортировки, "-");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СортировкаПоВидуУчастника(ВидУчастника)
	
	Результат = "";
	Если ВидУчастника = Справочники.ВидыУчастниковЗадач.Ответственный Тогда
		Результат = "1";
	ИначеЕсли ВидУчастника = Справочники.ВидыУчастниковЗадач.Исполнитель Тогда
		Результат = "2";
	ИначеЕсли ВидУчастника = Справочники.ВидыУчастниковЗадач.Проверяющий Тогда
		Результат = "4";
	Иначе
		Результат = "3";
	КонецЕсли;
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СортировкаПоФункцииУчастника(ФункцияУчастника)
	
	Результат = "";
	Если ТипЗнч(ФункцияУчастника) = Тип("ПеречислениеСсылка.ФункцииУчастниковИсполнения") Тогда
		
		Если ФункцияУчастника = Перечисления.ФункцииУчастниковИсполнения.Рассматривающий Тогда
			Результат = "1";
		ИначеЕсли ФункцияУчастника = Перечисления.ФункцииУчастниковИсполнения.ОбрабатывающийРезолюцию Тогда
			Результат = "2";
		ИначеЕсли ФункцияУчастника = Перечисления.ФункцииУчастниковИсполнения.Исполнитель Тогда
			Результат = "3";
		ИначеЕсли ФункцияУчастника = Перечисления.ФункцииУчастниковИсполнения.ОбрабатывающийРезультат Тогда
			Результат = "4";
		Иначе
			Результат = "5";
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ФункцияУчастника) = Тип("ПеречислениеСсылка.ФункцииУчастниковПодписания") Тогда
		
		Если ФункцияУчастника = Перечисления.ФункцииУчастниковПодписания.Подписывающий Тогда
			Результат = "1";
		ИначеЕсли ФункцияУчастника = Перечисления.ФункцииУчастниковПодписания.ОбеспечивающийПодписание Тогда
			Результат = "2";
		ИначеЕсли ФункцияУчастника = Перечисления.ФункцииУчастниковПодписания.ОбрабатывающийРезультат Тогда
			Результат = "3";
		Иначе
			Результат = "4";
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ФункцияУчастника) = Тип("ПеречислениеСсылка.ФункцииУчастниковРегистрации") Тогда
		
		Если ФункцияУчастника = Перечисления.ФункцииУчастниковРегистрации.Регистратор Тогда
			Результат = "1";
		ИначеЕсли ФункцияУчастника = Перечисления.ФункцииУчастниковРегистрации.ОбрабатывающийРезультат Тогда
			Результат = "2";
		Иначе
			Результат = "3";
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ФункцияУчастника) = Тип("ПеречислениеСсылка.ФункцииУчастниковСогласования") Тогда
		
		Если ФункцияУчастника = Перечисления.ФункцииУчастниковСогласования.Согласующий Тогда
			Результат = "1";
		ИначеЕсли ФункцияУчастника = Перечисления.ФункцииУчастниковСогласования.ОбеспечивающийСогласование Тогда
			Результат = "2";
		ИначеЕсли ФункцияУчастника = Перечисления.ФункцииУчастниковСогласования.ПодготавливающийОбработкуРезультата Тогда
			Результат = "3";
		ИначеЕсли ФункцияУчастника = Перечисления.ФункцииУчастниковСогласования.ОбрабатывающийРезультат Тогда
			Результат = "4";
		ИначеЕсли ФункцияУчастника = Перечисления.ФункцииУчастниковСогласования.ПодготавливающийЗавершение Тогда
			Результат = "5";
		Иначе
			Результат = "6";
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ФункцияУчастника) = Тип("ПеречислениеСсылка.ФункцииУчастниковУтверждения") Тогда
		
		Если ФункцияУчастника = Перечисления.ФункцииУчастниковУтверждения.Утверждающий Тогда
			Результат = "1";
		ИначеЕсли ФункцияУчастника = Перечисления.ФункцииУчастниковУтверждения.ОбрабатывающийРезультат Тогда
			Результат = "2";
		Иначе
			Результат = "3";
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ФункцияУчастника) = Тип("ПеречислениеСсылка.ФункцииУчастниковОзнакомления") Тогда
		
		Если ФункцияУчастника = Перечисления.ФункцииУчастниковОзнакомления.Ознакомляемый Тогда
			Результат = "1";
		ИначеЕсли ФункцияУчастника = Перечисления.ФункцииУчастниковОзнакомления.Ознакомляющий Тогда
			Результат = "2";
		Иначе
			Результат = "3";
		КонецЕсли;
	
	Иначе
		
		Результат = "9";
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура УчастникиПодЗаменуУчастникОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	
	СотрудникиКлиент.СотрудникОбработкаВыбора(
		Элементы.УчастникиПодЗамену.ТекущиеДанные, "Участник", ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

