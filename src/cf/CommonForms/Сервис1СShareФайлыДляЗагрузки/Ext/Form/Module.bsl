
#Область ОбработчикиСобытийФормы

// Код процедур и функций

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресХранилищаРезультата = Параметры.АдресХранилищаРезультата;
	ВыбратьШаблонДокумента = Параметры.ВыбратьШаблонДокумента;
	
	ИдентификаторКлиента = Параметры.ИдентификаторКлиента;

	ПредпросмотрОфисныхФайлов = ХранилищеОбщихНастроек.Загрузить(
			"НастройкиРаботыСДокументами/ПредпросмотрОфисныхФайлов", ИдентификаторКлиента);

	Если Не ЗначениеЗаполнено(ПредпросмотрОфисныхФайлов) Тогда
		ПредпросмотрОфисныхФайлов = Перечисления.ПредпросмотрОфисныхФайлов.ПустаяСсылка();
	КонецЕсли;
	
	ПоказыватьPdfСредствами1С = РаботаСФайламиСлужебныйПовтИсп.ПоказыватьPdfСредствами1С();
	ПолеPDFРаботаетВВебКлиенте = РаботаСPDFПовтИсп.ПолеPDFРаботаетВВебКлиенте();
	ЭтоВебКлиент = ОбщегоНазначения.ЭтоВебКлиент();
	ЭтоТонкийКлиент = ОбщегоНазначенияДокументооборот.ЭтоТонкийКлиент();
	ИспользоватьLibreOffice = ФайловыеФункцииПовтИсп.ИспользоватьLibreOffice();	
	// Pdf
	Если ЭтоТонкийКлиент Или (ЭтоВебКлиент И ПолеPDFРаботаетВВебКлиенте) Тогда
		Если ПоказыватьPdfСредствами1С Тогда
			ВывестиPDFДокументНаСервере();
		КонецЕсли;
	КонецЕсли;
	//Конец Pdf
	
	ШаблонДокумента = Параметры.ШаблонДокумента;
	
	ЗаполнитьФайлыИЗаголовок();
	Если Файлы.Количество() = 1 Тогда
		Элементы.Файлы.Видимость = Ложь;
	КонецЕсли;
	
	Если Не ВыбратьШаблонДокумента Тогда
		Элементы.Далее.Заголовок = НСтр("ru = 'Выбрать'");
		Элементы.Загрузить.Видимость = Истина;
		НаименованиеШаблона = ОбщегоНазначенияДокументооборот.
			ЗначениеРеквизитаОбъектаВПривилегированномРежиме(ШаблонДокумента, "Наименование");
		Элементы.Загрузить.Заголовок = СтрШаблон(НСтр("ru = 'Загрузить как ""%1""'"), НаименованиеШаблона);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Заголовок = ТекстЗаголовка;	
	
	Если Файлы.Количество() = 1 Тогда
		ПодключитьОбработчикОжидания("ОбновитьПревьюФайла", 0.2, Истина);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Для Каждого СтрокаФайл Из Файлы Цикл
		Если ЗначениеЗаполнено(СтрокаФайл.ПутьНаДиске) Тогда
			Файл = Новый Файл(СтрокаФайл.ПутьНаДиске);
			Если Файл.Существует() Тогда
				УдалитьФайлыАсинх(СтрокаФайл.ПутьНаДиске);
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПолеHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Не ЗначениеЗаполнено(ДанныеСобытия.Href) Тогда 
		Возврат;
	КонецЕсли;	
	
	Если СтрНайти(ДанныеСобытия.Href, "ShowInReplyTo") Тогда	
		РаботаС_HTMLКлиент.ОткрытьСсылку(Элемент, ДанныеСобытия, СтандартнаяОбработка, ЭтотОбъект);
		Возврат;
	ИначеЕсли СтрНайти(ДанныеСобытия.Href, "OpenForView") Тогда		
		ОткрытьФайл();
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыФайлы

&НаКлиенте
Процедура ФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьФайл();
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ОбзорФайловКлиент.ЭтоФайлСДолгойОбработкой(ТекущиеДанные.Расширение) Тогда
		ПредставлениеHTML = ОбзорФайловКлиент.HTMLПредставлениеСДолгойОбработкой();
	КонецЕсли;				
	
	ПодключитьОбработчикОжидания("ОбновитьПревьюФайла", 0.2, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	СохранитьДанныеДокумента();
	Закрыть("Далее");
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть("Отмена");
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	СохранитьДанныеДокумента();
	Закрыть("Загрузить");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьФайлыИЗаголовок()
	
	ДанныеДокумента = ПолучитьИзВременногоХранилища(АдресХранилищаРезультата);
	Если ДанныеДокумента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеРазбора = ДанныеДокумента.ДанныеРазбора;
	ПредставлениеДокумента = ДанныеДокумента.ПредставлениеДокумента;
	Сумма = 0;
	Валюта = Неопределено;
		
	Если ДанныеДокумента.ТипДокумента = Перечисления.ТипыДокументовЭДО.ДокументПредприятия Тогда
		ИнформацияДокумента = ДанныеРазбора.НовыйЭД.ЗначениеРеквизита.ИнформацияДокумента;
		ПредставлениеДокумента = ?(Не ЗначениеЗаполнено(ПредставлениеДокумента), ИнформацияДокумента[0].Наименование,
			ПредставлениеДокумента);	
		Сумма = ИнформацияДокумента[0].Сумма;
		Если ИнформацияДокумента[0].Валюта <> Неопределено Тогда
			Валюта = Справочники.Валюты.НайтиПоКоду(ИнформацияДокумента[0].Валюта.Код);
		КонецЕсли;			
	Иначе	
		ПредставлениеДокумента = ?(Не ЗначениеЗаполнено(ПредставлениеДокумента), ДанныеРазбора.ИмяСоздания,
			ПредставлениеДокумента);
		Сумма = ДанныеРазбора.СуммаДокумента;
		Валюта = ДанныеРазбора.Валюта;
	КонецЕсли;		
	
	ТекстЗаголовка = СтрШаблон(Нстр("ru = '%1 делится документом %2'"), ДанныеДокумента.Контрагент,
		ПредставлениеДокумента);
	Если ЗначениеЗаполнено(Сумма) Тогда
		ТекстЗаголовка = СтрШаблон(Нстр("ru = '%1 на сумму %2 %3.'"), ТекстЗаголовка, Сумма, Валюта);
	КонецЕсли;
	
	ДанныеОсновногоФайла = ДанныеДокумента.ДанныеОсновногоФайла;
	ДополнительныеФайлы = ДанныеДокумента.ДополнительныеФайлыДокумента.Получить();
	
	СтрокаФайла = Файлы.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаФайла, ДанныеОсновногоФайла);
	СтрокаФайла.ЭтоДокумент = Истина;
	СтрокаФайла.ИмяФайла = НСтр("ru = 'Документ'");
	СтрокаФайла.ДвоичныеДанные = ДанныеОсновногоФайла.ДвоичныеДанные;
	СтрокаФайла.Расширение = "xml";
	СтрокаФайла.КартинкаРасширения = ИнтеграцияShareКлиентСервер.ПолучитьИндексПиктограммыФайла("txt");
	
	Для Каждого ДопФайл Из ДополнительныеФайлы Цикл
		СтрокаФайла = Файлы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаФайла, ДопФайл);
		СтрокаФайла.Расширение = СтрЗаменить(ДопФайл.РасширениеБезТочки, ".", "");
		СтрокаФайла.КартинкаРасширения = ИнтеграцияShareКлиентСервер.ПолучитьИндексПиктограммыФайла(
			СтрокаФайла.Расширение);
		СтрокаФайла.ДвоичныеДанные = ДопФайл.ДвоичныеДанныеФайла;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеДокумента()
	
	ДанныеДокумента = ПолучитьИзВременногоХранилища(АдресХранилищаРезультата);
	Если ДанныеДокумента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеФайлы = ДанныеДокумента.ДополнительныеФайлыДокумента.Получить(); // ТаблицаЗначений
	
	ФайлВизуализация = Новый Соответствие; // Соответствие Из КлючИЗначение: Ключ - УникальныйИдентификатор, Значение - Строка
	Для Каждого Файл Из Файлы Цикл
		Если Файл.ЭтоФайл Тогда
			ФайлВизуализация.Вставить(Файл.Идентификатор, Файл.ДанныеВизуализации);
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого ДопФайл Из ДополнительныеФайлы Цикл
		ДопФайл.ДанныеВизуализации = ФайлВизуализация[ДопФайл.Идентификатор];
	КонецЦикла;	
	
	ДанныеДокумента.ДополнительныеФайлыДокумента = Новый ХранилищеЗначения(ДополнительныеФайлы);
	
	ПоместитьВоВременноеХранилище(ДанныеДокумента);
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбновитьПревьюФайла()
	
	ПоказатьОбзорТекущегоФайла();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОбзорТекущегоФайла()
	
	ТекущиеДанные = ПолучитьТекущиеДанныеФайла();
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТабличныйДокументЭДО = Новый ТабличныйДокумент;

	Элементы.ГруппаПредпросмотрСтраницы.ТекущаяСтраница = Элементы.ГруппаHtml;

	ДвоичныеДанныеФайла  = ТекущиеДанные.ДвоичныеДанные;

	ПараметрыПолученияПредставления = ОбзорФайловКлиентСервер.ПараметрыПолученияПредставления();

	СистемнаяИнформация = Новый СистемнаяИнформация;
	ИдентификаторКлиента = СистемнаяИнформация.ИдентификаторКлиента;

	ПараметрыПолученияПредставления.ТребуетсяСоздатьВизуализациюЭП = Ложь;
	ПараметрыПолученияПредставления.МаксимальноеЧислоСтраницДляПредпросмотра = 10;
	ПараметрыПолученияПредставления.ПредпросмотрУрезан = Ложь;
	ПараметрыПолученияПредставления.УникальныйИдентификатор = УникальныйИдентификатор;
	ПараметрыПолученияПредставления.Расширение = ТекущиеДанные.Расширение;
	ПараметрыПолученияПредставления.ПредпросмотрОфисныхФайлов = ПредпросмотрОфисныхФайлов;
	ПараметрыПолученияПредставления.ИдентификаторКлиента = ИдентификаторКлиента;
	ПараметрыПолученияПредставления.ПоддерживаемыеТипы = ОбзорФайловКлиентСервер.ПоддерживаемыеТипыПредпросмотра();
	ПараметрыПолученияПредставления.МасштабироватьPDFИКартинки = Ложь;
	ПараметрыПолученияПредставления.ЭтоСлужебноеСообщение = Ложь;
	ПараметрыПолученияПредставления.ИспользоватьLibreOffice = ИспользоватьLibreOffice;
	
	ПараметрыПолученияПредставления.Вставить("ДвоичныеДанные", ДвоичныеДанныеФайла);

	РеквизитыФайла = Новый Структура;
	РеквизитыФайла.Вставить("ТекущаяВерсияРасширение", ТекущиеДанные.Расширение);
	РеквизитыФайла.Вставить("Зашифрован", Ложь);
	РеквизитыФайла.Вставить("ТекущаяВерсияРазмер", ДвоичныеДанныеФайла.Размер());
	РеквизитыФайла.Вставить("Наименование", ТекущиеДанные.ИмяФайла);
		
	ДанныеФайла = Неопределено;
	ПредпросмотрУрезан = Ложь;
	ДокументPDF = Неопределено;
	
	ДанныеОбзора = ТекущиеДанные.ДанныеВизуализации;	
	Если Не ЗначениеЗаполнено(ДанныеОбзора) Тогда
		ДанныеОбзора = ОбзорФайловКлиент.СформироватьHTMLПредставление(ПараметрыПолученияПредставления, РеквизитыФайла,
			ДанныеФайла, ПредпросмотрУрезан, ДокументPDF);
	КонецЕсли;
	
	ОбзорФайловКлиент.ЗаполнитьРеквизитыОбзора(ДанныеОбзора, ПредставлениеHTML, ТаймлистАвтопротоколHTML,
		РаспознанныйТекстHTML);
	
	Если ДокументPDF = Неопределено Тогда
		Элементы.ГруппаПредпросмотрСтраницы.ТекущаяСтраница = Элементы.ГруппаHtml;
	Иначе
		Элементы.ГруппаПредпросмотрСтраницы.ТекущаяСтраница = Элементы.ГруппаPdf;
		ЭтотОбъект["ДокументPdfРеквизит"] = ДокументPDF;
		Элементы.ДокументPdfПоле.НомерТекущейСтраницы = 1;
	КонецЕсли;
	
	Если ТекущиеДанные.ЭтоФайл И Не ЗначениеЗаполнено(ТекущиеДанные.ДанныеВизуализации)
		И ЗначениеЗаполнено(ПредставлениеHTML) Тогда
		ТекущиеДанные.ДанныеВизуализации = ПредставлениеHTML;
	КонецЕсли;	
						
КонецПроцедуры	

&НаКлиенте
Функция ПолучитьТекущиеДанныеФайла()
	
	ТекущиеДанные = Неопределено;
	Если Файлы.Количество() > 1 Тогда
		ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	ИначеЕсли Файлы.Количество() = 1 Тогда
		ТекущиеДанные = Файлы[0];
	КонецЕсли;
	
	Возврат ТекущиеДанные;
	
КонецФункции	

&НаСервере
Процедура ВывестиPDFДокументНаСервере()
	
	СведенияОДокументеPDF = РаботаСPDFПовтИсп.НовыеСведенияОPDFДокументеНаФорме();
	СведенияОДокументеPDF.ИмяРодителяЭлемента = "ГруппаPdf";
	СведенияОДокументеPDF.ИмяРодителяКоманды = "ГруппаОбзорФайлаКоманды";	
	РаботаСPDF.ВывестиPDFДокументНаФорму(ЭтотОбъект, СведенияОДокументеPDF);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_МасштабПлюс(Команда)
	
	Элементы["ДокументPdfПоле"].Масштаб = Элементы["ДокументPdfПоле"].Масштаб + 10;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_МасштабМинус(Команда)
	
	Если Элементы["ДокументPdfПоле"].Масштаб <= 10 Тогда
		Возврат;
	КонецЕсли;	
	
	Элементы["ДокументPdfПоле"].Масштаб = Элементы["ДокументPdfПоле"].Масштаб - 10;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПоворотЛево(Команда)
	
	Элементы["ДокументPdfПоле"].Ориентация = Элементы["ДокументPdfПоле"].Ориентация - 90;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПоворотПраво(Команда)
	
	Элементы["ДокументPdfПоле"].Ориентация = Элементы["ДокументPdfПоле"].Ориентация + 90;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл()

	ТекущиеДанные = ПолучитьТекущиеДанныеФайла();
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	#Если ВебКлиент Тогда
		ПоказатьПредупреждение( , НСтр("ru = 'В Веб-клиенте открытие файлов не поддерживается.'"));
		Возврат;
	#Иначе
		ПолноеИмяФайла = РабочийКаталогДанныхПользователя() + ТекущиеДанные.ИмяФайла;
		ДвоичныеДанные = ТекущиеДанные.ДвоичныеДанные;
		ДвоичныеДанные.Записать(ПолноеИмяФайла);
		ЗапуститьПриложение(ПолноеИмяФайла);
		ТекущиеДанные.ПутьНаДиске = ПолноеИмяФайла;
	#КонецЕсли

КонецПроцедуры	

#КонецОбласти
