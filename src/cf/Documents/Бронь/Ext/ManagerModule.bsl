#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Помещение");
	Поля.Добавить("ДатаНачала");
	Поля.Добавить("ДатаОкончания");
	Поля.Добавить("ВесьДень");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПредставлениеДаты = БронированиеПомещенийКлиентСервер.СформироватьДатыБрони(
		Данные.ДатаНачала, Данные.ДатаОкончания, Данные.ВесьДень);
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1 - %2'"),
		Данные.Помещение,
		ПредставлениеДаты);
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Проверяет, подходит ли объект к шаблону бизнес-процесса
Функция ШаблонПодходитДляАвтозапускаБизнесПроцессаПоОбъекту(ШаблонСсылка, ПредметСсылка, Подписчик, ВидСобытия, Условие) Экспорт
	
	Возврат БизнесСобытияВызовСервера.ШаблонПодходитДляАвтозапускаБизнесПроцессаПоПредмету(ШаблонСсылка, 
		ПредметСсылка, Подписчик, ВидСобытия, Условие);
	
КонецФункции

// Возвращает имя предмета процесса по умолчанию.
//
Функция ПолучитьИмяПредметаПоУмолчанию(Ссылка) Экспорт
	
	Возврат НСтр("ru='Бронь'");
	
КонецФункции

// Определяет, какие брони ожидают подтверждения.
//
// Параметры:
//  Помещения - Массив Из СправочникСсылка.ТерриторииИПомещения - Помещения, по которым проверяются брони.
// 
// Возвращаемое значение:
//  Массив из ДокументСсылка.Бронь - Брони помещений, ожидающие подтверждения.
//
Функция ОжидающиеПодтвержденияБрони(Помещения) Экспорт
	
	ОжидающиеПодтвержденияБрони = Новый Массив;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Бронь.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Бронь КАК Бронь
		|ГДЕ
		|	Бронь.СостояниеБрони = ЗНАЧЕНИЕ(Перечисление.СостоянияБроней.ОжидаетПодтверждения)
		|	И Бронь.Помещение В(&Помещения)
		|	И НЕ Бронь.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Бронь.Дата УБЫВ");
	
	Запрос.УстановитьПараметр("Помещения", Помещения);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаРезультата = РезультатЗапроса.Выгрузить();
	ОжидающиеПодтвержденияБрони = ТаблицаРезультата.ВыгрузитьКолонку("Ссылка");
	
	Возврат ОжидающиеПодтвержденияБрони;
	
КонецФункции

// Ищет повторяющася бронь по исключению.
//
// Параметры:
//  БроньИсключение - ДокументСсылка.Бронь - Исключение повторяющейся брони.
// 
// Возвращаемое значение:
//  Структура, Неопределено - Данные повторящейся бронь, Если не найдена - возвращает Неопределено:
//   * ПовторяющаясяБронь - ДокументСсылка.Бронь - Повторяющася бронь, к которой относится бронь исключение.
//   * ДатаИсключения    - Дата                 - Дата повторения, к которой относится бронь исключение.
//
Функция НайтиПоИсключениюПовторения(БроньИсключение) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	БроньИсключенияПовторения.Ссылка КАК ПовторяющаясяБронь,
		|	БроньИсключенияПовторения.ДатаИсключения КАК ДатаИсключения
		|ИЗ
		|	Документ.Бронь.ИсключенияПовторения КАК БроньИсключенияПовторения
		|ГДЕ
		|	БроньИсключенияПовторения.ЗаписьИсключения = &БроньИсключение");
	
	Запрос.УстановитьПараметр("БроньИсключение", БроньИсключение);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаРезультата = РезультатЗапроса.Выбрать();
	Если Не ВыборкаРезультата.Следующий() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеПоИсключениюПовторения = Новый Структура("ПовторяющаясяБронь, ДатаИсключения");
	ДанныеПоИсключениюПовторения.ПовторяющаясяБронь = ВыборкаРезультата.ПовторяющаясяБронь;
	ДанныеПоИсключениюПовторения.ДатаИсключения = ВыборкаРезультата.ДатаИсключения;
	
	Возврат ДанныеПоИсключениюПовторения;
	
КонецФункции

// Возвращает структуру правила повторения брони.
//
// Параметры:
//  Бронь - ДокументСсылка.Бронь - Бронь, для которого необходимо получить правило повторения.
// 
// Возвращаемое значение:
//  Структура - Структура правила повторения:
//   * ДатаНачалаПовторения - Дата - Дата, с которой повторяется бронь.
//   * ДатаОкончанияПовторения - Дата - Дата, по которую повторяется бронь.
//   * ИнтервалПовторения - Число - Интервал с которым повторяется бронь.
//   * КоличествоПовторов - Число - Количество повторов брони.
//   * ПовторениеПоДнямМесяца - Число - Дни месяца, по которым повторяется бронь
//   * ПовторениеПоМесяцам - Число - Месяца, по которым повторяется бронь.
//   * ПравилоОкончанияПовторения - ПеречислениеСсылка.ПравилаОкончанияПовторения - Правило окончания повторения.
//   * ТипЗаписиКалендаря - ПеречислениеСсылка.ТипЗаписиКалендаря - Тип брони (обычная / повторяющаяся / исключение повторения).
//   * ЧастотаПовторения - ПеречислениеСсылка.ЧастотаПовторения - Частота повторения брони.
//   * ИсключенияПовторения - ТаблицаЗначений - Даты, по которым бронь не повторяется:
//      ** ДатаИсключения - Дата - Дата, по которой бронь не повторяется.
//      ** ЗаписьИсключения - СправочникСсылка.ЗаписиРабочегоКалендаря - Бронь, которая заменяет бронь на данную дату.
//   * ПовторениеПоДням - ТаблицаЗначений - Дни недели, по которым повторяется бронь:
//      ** ДеньНедели - Число - День недели, в который повторяется бронь.
//      ** НомерВхождения - Число - Номер дня недели, в который повторяется бронь.
//
Функция ПравилоПовторения(Бронь) Экспорт
	
	БроньОбъект = Бронь.ПолучитьОбъект();
	
	Возврат БроньОбъект.ПравилоПовторения();
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// Возвращает отслеживаемые реквизиты для дополнительного свойства ПредыдущиеЗначенияРеквизитов.
//
// Возвращаемое значение:
//  Строка - Отслеживаемые реквизиты.
//
Функция ОтслеживаемыеРеквизиты() Экспорт
	
	ОтслеживаемыеРеквизиты =
		"Дата, Номер, ПометкаУдаления,
		|Автор, ВесьДень, ДатаНачала, ДатаНачалаПовторения, ДатаОкончания, ДатаОкончанияПовторения,
		|ИнтервалПовторения, КоличествоПовторов, КоличествоЧеловек, Комментарий, ПовторениеПоДнямМесяца,
		|ПовторениеПоМесяцам, Помещение, ПравилоОкончанияПовторения, Предмет, СостояниеБрони, Сотрудник,
		|СпособСозданияБрони, ТехническоеОбеспечение, ТипЗаписи, ХозяйственноеОбеспечение, ЧастотаПовторения,
		|ИсключенияПовторения, ПовторениеПоДням";
	
	Возврат ОтслеживаемыеРеквизиты;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
