#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	Ответственный = МЭДОПереопределяемый.ТекущийОтветственный();
	ДанныеКонверта = Новый ХранилищеЗначения(Неопределено);
	ДанныеСообщения = Новый ХранилищеЗначения(Неопределено);
	ИдентификаторУведомления = "";
	ИдентификаторДокумента = "";
	ИдентификаторСообщенияДокумента = "";
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МЭДО.ПрисвоитьЗаполненное(Ответственный, МЭДОПереопределяемый.ТекущийОтветственный());
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если Не ПометкаУдаления Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	КонецЕсли;
	
	Комментарий = СокрЛП(Комментарий);
	Если СтрДлина(Комментарий) > 2047 Тогда // по требованию xsd-схемы
		Комментарий = Лев(Комментарий, 2047);
	КонецЕсли;

	ВзятьПоляИзДокумента();

	Если Не ЗначениеЗаполнено(ВерсияМЭДО) Тогда
		// Версия может быть невидима для пользователя, надо заполнить принудительно:
		Если ЗначениеЗаполнено(Контрагент) Тогда
			ДанныеОтвета = МЭДОСтруктурыДанных.НовыйЛегкийОтвет();
			Настройки = РегистрыСведений.НастройкиКонтрагентовМЭДО.НастройкиКонтрагента(Контрагент, ДанныеОтвета);
			Если Не ДанныеОтвета.Успех И Не ПометкаУдаления Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			ВерсияМЭДО = Настройки.ВерсияФорматаМЭДО;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ВерсияМЭДО) Тогда
			ВерсияМЭДО = Перечисления.ВерсииФорматаМЭДО.ПоследняяВерсия();
		КонецЕсли;
	КонецЕсли;
	
	Если Не МЭДОПереопределяемый.ЭтоМиграция() Тогда
		ОчиститьИПроверитьТабличныеЧасти(Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Для исходящих уведомлений дата совпадает с датой создания:
	Если Не ЗначениеЗаполнено(ИсходящаяДата) И Направление = Перечисления.НаправленияСообщенийМЭДО.Исходящее Тогда
		ИсходящаяДата = Дата;
	КонецЕсли;
	
	// Идентификаторы, если не присвоены:
	Если Не ЗначениеЗаполнено(ИдентификаторДокумента) Или Не ЗначениеЗаполнено(ИдентификаторУведомления)
		Или Не ЗначениеЗаполнено(ИдентификаторСообщенияДокумента) Тогда
		
		НаправлениеДокумента = Перечисления.НаправленияСообщенийМЭДО.НаправлениеДокумента(Документ);
		Если НаправлениеДокумента = Перечисления.НаправленияСообщенийМЭДО.Входящее Тогда
			
			// Исходящее уведомление:
			Если Не ЗначениеЗаполнено(ИдентификаторДокумента)
				Или Не ЗначениеЗаполнено(ИдентификаторСообщенияДокумента) Тогда
				// Берем из входящего документа, по РС состояний:
				СтруктураСостояния = РегистрыСведений.СостоянияДокументовМЭДО.СостояниеДокумента(
					Документ,
					Перечисления.СостоянияДокументовМЭДО.ДокументПолучен,
					"ИдентификаторДокумента, ИдентификаторСообщения",
					Дата);
				Если Не ЗначениеЗаполнено(ИдентификаторДокумента) Тогда
					ИдентификаторДокумента = СтруктураСостояния.ИдентификаторДокумента;
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ИдентификаторСообщенияДокумента) Тогда
					ИдентификаторСообщенияДокумента = СтруктураСостояния.ИдентификаторСообщения;
				КонецЕсли;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ИдентификаторУведомления) Тогда
				СсылкаНового = МЭДОПереопределяемый.СсылкаНовогоОбъекта(ЭтотОбъект);
				ИдентификаторУведомления = НРег("" + СсылкаНового.УникальныйИдентификатор());
			КонецЕсли;
			
		ИначеЕсли НаправлениеДокумента = Перечисления.НаправленияСообщенийМЭДО.Исходящее Тогда 
			
			// Входящее уведомление:
			Если Не ЗначениеЗаполнено(ИдентификаторДокумента)
				Или Не ЗначениеЗаполнено(ИдентификаторСообщенияДокумента) Тогда
				// Берем из исходящего документа, по РС состояний:
				СтруктураСостояния = РегистрыСведений.СостоянияДокументовМЭДО.СостояниеДокумента(
					Документ,
					Перечисления.СостоянияДокументовМЭДО.ИсходящийДокументЕщеНеОтправлен,
					"ИдентификаторДокумента, ИдентификаторСообщения",
					Дата);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ИдентификаторДокумента) Тогда
				ИдентификаторДокумента = СтруктураСостояния.ИдентификаторДокумента;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ИдентификаторСообщенияДокумента) Тогда
				ИдентификаторСообщенияДокумента = СтруктураСостояния.ИдентификаторСообщения;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.СостоянияДокументовМЭДО.Записывать = Истина;
	
	Движение = Движения.СостоянияДокументовМЭДО.Добавить();
	Движение.Период = Дата;
	Движение.ПредметСообщения = Ссылка;
	Движение.Документ = Документ;
	Движение.ИдентификаторДокумента = ИдентификаторДокумента;
	Движение.Направление = Перечисления.НаправленияСообщенийМЭДО.НаправлениеДокумента(Движение.Документ);
	
	Если Направление = Перечисления.НаправленияСообщенийМЭДО.Исходящее Тогда // Исходящее уведомление:

		Если Отправлено Тогда
			Движение.Состояние = Перечисления.СостоянияДокументовМЭДО.ОтправленоУведомление;
		ИначеЕсли ГотовоКОтправке Тогда
			Движение.Состояние = Перечисления.СостоянияДокументовМЭДО.СозданоИсходящееУведомление;
		Иначе
			Движение.Состояние = Перечисления.СостоянияДокументовМЭДО.ИсходящееУведомлениеЕщеНеОтправлено;
		КонецЕсли;
		Движение.ИдентификаторСообщения = ИдентификаторУведомления;
		
	ИначеЕсли Направление = Перечисления.НаправленияСообщенийМЭДО.Входящее Тогда // Входящее уведомление:
	
		Движение.Состояние = Перечисления.СостоянияДокументовМЭДО.ПолученоУведомление;
		Движение.ИдентификаторСообщения = ИдентификаторСообщенияДокумента;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Некоторые поля, если не заполнены - взять из документа
Процедура ВзятьПоляИзДокумента()
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат;
	КонецЕсли;
	
	Если Направление = Перечисления.НаправленияСообщенийМЭДО.Входящее Тогда
		
		Если Не ЗначениеЗаполнено(Организация) Тогда
			ПоляДокумента = МЭДОПереопределяемый.ТребуемыеДанныеИсходящегоДокумента(Документ, "Организация");
			ВзятьОрганизациюИзДокумента(ПоляДокумента.Организация);
		КонецЕсли;
		
	ИначеЕсли Направление = Перечисления.НаправленияСообщенийМЭДО.Исходящее Тогда
		
		Если Не ЗначениеЗаполнено(Организация) Или Не ЗначениеЗаполнено(Контрагент) Тогда
			ПоляДокумента = МЭДОПереопределяемый.ТребуемыеДанныеВходящегоДокумента(Документ, "Организация, Контрагент");
			ВзятьОрганизациюИзДокумента(ПоляДокумента.Организация);
			Если ЗначениеЗаполнено(ПоляДокумента.Контрагент) И ПоляДокумента.Контрагент <> Контрагент Тогда
				Текст = СтрШаблон(
					НСтр("ru = 'Контрагент в уведомлении и в документе не совпадает.
					|Принудительно установлено значение из документа: ""%1""'"),
					ПоляДокумента.Контрагент);
				ОбщегоНазначения.СообщитьПользователю(Текст);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ВзятьОрганизациюИзДокумента(ОрганизацияИзДокумента)
	
	Если Не ЗначениеЗаполнено(ОрганизацияИзДокумента) Тогда
		Возврат; // Для ситуаций, когда создаем исходящие уведомления на документ, который не удалось получить
				// (например входящий контейнер не прошел валидацию по схеме XSD, не смог загрузиться).
	КонецЕсли;
	
	Если ОрганизацияИзДокумента <> Организация Тогда
		Текст = СтрШаблон(
			НСтр("ru = '""%1"" в уведомлении и ""%1"" в документе не совпадает.
			|Принудительно установлено значение из документа: ""%2""'"),
			МЭДОПереопределяемый.Организация(), ОрганизацияИзДокумента);
		ОбщегоНазначения.СообщитьПользователю(Текст);
		Организация = ОрганизацияИзДокумента;
	КонецЕсли;
	
КонецПроцедуры

#Область ПроверкиТабличныхЧастейПоТипамУведомлений

// Очистить табличные части от все типов уведомлений, кроме того, который выбран.
Процедура ОчиститьИПроверитьТабличныеЧасти(Отказ)

	ЭтоИсходящее = (Направление = Перечисления.НаправленияСообщенийМЭДО.Исходящее);

	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(ПостановкаНаКонтроль);
	МассивТЧ.Добавить(ПостановкаНаКонтроль_КонтрольныеПунктыДокумента);
	МассивТЧ.Добавить(Регистрация);
	МассивТЧ.Добавить(ОтказВРегистрации);
	МассивТЧ.Добавить(ПринятиеКИсполнению);
	МассивТЧ.Добавить(ПодготовкаДоклада);
	МассивТЧ.Добавить(НаправлениеДоклада);
	МассивТЧ.Добавить(ХодИсполнения);
	МассивТЧ.Добавить(Опубликование);
	
	Если ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОПостановкеНаКонтроль Тогда
		
		МассивТЧ.Удалить(МассивТЧ.Найти(ПостановкаНаКонтроль));
		МассивТЧ.Удалить(МассивТЧ.Найти(ПостановкаНаКонтроль_КонтрольныеПунктыДокумента));
		Если ЭтоИсходящее Тогда
			СинонимТЧ = НСтр("ru = 'Постановка на контроль'");
			ПроверитьЗаполнениеТабличнойЧасти(ПостановкаНаКонтроль, СинонимТЧ, Отказ);
			Если Не Отказ Тогда
				СтрокаТЧ = ПостановкаНаКонтроль[0];
				Если Не СтрокаТЧ.ТребуетсяИсполнение И Не СтрокаТЧ.ТребуетсяПубликация
					И Не СтрокаТЧ.ТребуетсяРегистрация Тогда
					ОбщегоНазначения.СообщитьПользователю(
						СтрШаблон(НСтр("ru = 'В разделе ""%1"" нужно отметить хотя один флажок контроля из трех'"),
							СинонимТЧ), , , , Отказ);
				КонецЕсли;
				
				СинонимТЧ = НСтр("ru = 'Постановка на контроль - контрольные пункты'");
				// Сама ТЧ не обязательна, но если уж она заполнена, то нужны обязательные поля:
				Для Каждого СтрокаТЧ Из ПостановкаНаКонтроль_КонтрольныеПунктыДокумента Цикл
					ПроверитьЗаполнениеПоля(
						СтрокаТЧ.ИдентификаторПункта, СинонимТЧ, НСтр("ru = 'Идентификатор пункта'"), Отказ);
					ПроверитьЗаполнениеПоля(СтрокаТЧ.Ответственный, СинонимТЧ, НСтр("ru = 'Ответственный'"), Отказ);
					ПроверитьЗаполнениеПоля(СтрокаТЧ.Юрлицо, СинонимТЧ, НСтр("ru = 'Юрлицо'"), Отказ);
				КонецЦикла;
			КонецЕсли;
			
			Если ВерсияМЭДО <> Перечисления.ВерсииФорматаМЭДО.Версия271 Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = 'Уведомление типа %1 можно создать только для версии МЭДО 2.7.1'"), СинонимТЧ),
					, , , Отказ);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОРегистрации Тогда
		
		МассивТЧ.Удалить(МассивТЧ.Найти(Регистрация));
		Если ЭтоИсходящее Тогда
			СинонимТЧ = НСтр("ru = 'Регистрация'");
			ПроверитьЗаполнениеТабличнойЧасти(Регистрация, СинонимТЧ, Отказ);
			Если Не Отказ Тогда
				СтрокаТЧ = Регистрация[0];
				ПроверитьЗаполнениеПоля(СтрокаТЧ.ДатаРегистрации, СинонимТЧ, НСтр("ru = 'Дата регистрации'"), Отказ);
				ПроверитьЗаполнениеПоля(СтрокаТЧ.РегистрационныйНомер, СинонимТЧ, НСтр("ru = 'Рег. №'"), Отказ);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОбОтказеВРегистрации Тогда
		
		МассивТЧ.Удалить(МассивТЧ.Найти(ОтказВРегистрации));
		Если ЭтоИсходящее Тогда
			СинонимТЧ = НСтр("ru = 'Отказ в регистрации'");
			СинонимПоля =  НСтр("ru = 'Причина отказа'");
			ПроверитьЗаполнениеТабличнойЧасти(ОтказВРегистрации, СинонимТЧ, Отказ);
			Если Не Отказ Тогда
				СтрокаТЧ = ОтказВРегистрации[0];
				ПроверитьЗаполнениеПоля(СтрокаТЧ.ПричинаОтказа, СинонимТЧ, СинонимПоля, Отказ);
			КонецЕсли;
			
			
			Если Не Отказ Тогда
				ПричинаОтказа = ОтказВРегистрации[0].ПричинаОтказа;
				ВерсииПричины = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПричинаОтказа, "ВерсияОт, ВерсияДо");
				
				ОшибкаФормата = Ложь;
				Если ВерсияМЭДО = Перечисления.ВерсииФорматаМЭДО.Версия27
					Или ВерсияМЭДО = Перечисления.ВерсииФорматаМЭДО.Версия25 Тогда
					Если ВерсииПричины.ВерсияОт = Перечисления.ВерсииФорматаМЭДО.Версия271
						Или ВерсииПричины.ВерсияДо = Перечисления.ВерсииФорматаМЭДО.Версия25 Тогда
						ОшибкаФормата = Истина;
					КонецЕсли;
				ИначеЕсли ВерсияМЭДО = Перечисления.ВерсииФорматаМЭДО.Версия271 Тогда
					Если ВерсииПричины.ВерсияДо = Перечисления.ВерсииФорматаМЭДО.Версия27
						Или ВерсииПричины.ВерсияДо = Перечисления.ВерсииФорматаМЭДО.Версия25 Тогда
						ОшибкаФормата = Истина;
					КонецЕсли;
				КонецЕсли;
				
				Если ОшибкаФормата Тогда
					ОбщегоНазначения.СообщитьПользователю(
						СтрШаблон(НСтр("ru = 'В поле ""%1"" указана причина с некорректной версией формата МЭДО.
						|Укажите причину отказа корректного формата. Уведомление отправляется в версии %2
						|(Версия перед отправкой может скорректироваться по настройкам контрагента)'"),
						СинонимПоля, ВерсияМЭДО), , , , Отказ);
				КонецЕсли;
				
				
				// Причину "Не распознана" выбирать нельзя:
				Если ПричинаОтказа = Справочники.ПричиныОтказаВРегистрацииМЭДО.НеРаспознана Тогда
					ОбщегоНазначения.СообщитьПользователю(
						СтрШаблон(НСтр("ru = 'В поле ""%1"" для исходящего уведомления нельзя выбирать причину ""%2""'"),
						СинонимПоля, ПричинаОтказа), , , , Отказ);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОПринятииКИсполнению Тогда
		
		МассивТЧ.Удалить(МассивТЧ.Найти(ПринятиеКИсполнению));
		Если ЭтоИсходящее Тогда
			СинонимТЧ = НСтр("ru = 'Принятие к исполнению'");
			ПроверитьЗаполнениеТабличнойЧасти(ПринятиеКИсполнению, СинонимТЧ, Отказ);
			Если Не Отказ Тогда
				СтрокаТЧ = ПринятиеКИсполнению[0];
				ПроверитьЗаполнениеПоля(
					СтрокаТЧ.Юрлицо, СинонимТЧ, НСтр("ru = 'Юрлицо исполнителя по документу'"), Отказ);
				ПроверитьЗаполнениеПоля(
					СтрокаТЧ.Исполнитель, СинонимТЧ, НСтр("ru = 'Исполнитель'"), Отказ);
				ПроверитьЗаполнениеПоля(
					СтрокаТЧ.РуководительПодразделения, СинонимТЧ, НСтр("ru = 'Руководитель подразделения'"), Отказ);
				ПроверитьЗаполнениеПоля(
					СтрокаТЧ.РуководительСекретарь, СинонимТЧ, НСтр("ru = 'Руководитель/секретарь ведомства'"), Отказ);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОПодготовкеДоклада Тогда
		
		МассивТЧ.Удалить(МассивТЧ.Найти(ПодготовкаДоклада));
		Если ЭтоИсходящее Тогда
			СинонимТЧ = НСтр("ru = 'Подготовка доклада'");
			ПроверитьЗаполнениеТабличнойЧасти(ПодготовкаДоклада, СинонимТЧ, Отказ);
			Если Не Отказ Тогда
				СтрокаТЧ = ПодготовкаДоклада[0];
				ПроверитьЗаполнениеПоля(СтрокаТЧ.ДатаПодписания, СинонимТЧ, НСтр("ru = 'Дата подписания'"), Отказ);
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОНаправленииДоклада Тогда
		
		МассивТЧ.Удалить(МассивТЧ.Найти(НаправлениеДоклада));
		Если ЭтоИсходящее Тогда
			СинонимТЧ = НСтр("ru = 'Направление доклада'");
			ПроверитьЗаполнениеТабличнойЧасти(НаправлениеДоклада, СинонимТЧ, Отказ);
			Если Не Отказ Тогда
				СтрокаТЧ = НаправлениеДоклада[0];
				ПроверитьЗаполнениеПоля(СтрокаТЧ.ДатаРегистрации, СинонимТЧ, НСтр("ru = 'Дата регистрации'"), Отказ);
				ПроверитьЗаполнениеПоля(СтрокаТЧ.РегистрационныйНомер, СинонимТЧ, НСтр("ru = 'Рег. №'"), Отказ);
			КонецЕсли;
		КонецЕсли;
	
	ИначеЕсли ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОХодеИсполнения Тогда
		
		МассивТЧ.Удалить(МассивТЧ.Найти(ХодИсполнения));
		Если ЭтоИсходящее Тогда
			СинонимТЧ = НСтр("ru = 'Ход исполнения'");
			ПроверитьЗаполнениеТабличнойЧасти(ХодИсполнения, СинонимТЧ, Отказ);
			Если Не Отказ Тогда
				СтрокаТЧ = ХодИсполнения[0];
				ПроверитьЗаполнениеПоля(
					СтрокаТЧ.ОписаниеХодаИсполнения, СинонимТЧ, НСтр("ru = 'Описание хода исполнения'"), Отказ);
				Если ЗначениеЗаполнено(СтрокаТЧ.Юрлицо) Или ЗначениеЗаполнено(СтрокаТЧ.Ответственный)
					Или ЗначениеЗаполнено(СтрокаТЧ.Комментарий) Тогда
					ПроверитьЗаполнениеПоля(СтрокаТЧ.ДатаРегистрации, СинонимТЧ, НСтр("ru = 'Дата регистрации'"), Отказ);
					ПроверитьЗаполнениеПоля(СтрокаТЧ.РегистрационныйНомер, СинонимТЧ, НСтр("ru = 'Рег. №'"), Отказ);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОбОпубликовании Тогда
		
		МассивТЧ.Удалить(МассивТЧ.Найти(Опубликование));
		Если ЭтоИсходящее Тогда
			СинонимТЧ = НСтр("ru = 'Опубликование'");
			ПроверитьЗаполнениеТабличнойЧасти(Опубликование, СинонимТЧ, Отказ);
			Если Не Отказ Тогда
				СтрокаТЧ = Опубликование[0];
				ПроверитьЗаполнениеПоля(СтрокаТЧ.ДатаРегистрации, СинонимТЧ, НСтр("ru = 'Дата регистрации'"), Отказ);
				ПроверитьЗаполнениеПоля(СтрокаТЧ.РегистрационныйНомер, СинонимТЧ, НСтр("ru = 'Рег. №'"), Отказ);
				ПроверитьЗаполнениеПоля(СтрокаТЧ.ПечатныйОрган, СинонимТЧ, НСтр("ru = 'Печатный орган'"), Отказ);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ЭлементТЧ Из МассивТЧ Цикл
		ЭлементТЧ.Очистить();
	КонецЦикла;

КонецПроцедуры

Процедура ПроверитьЗаполнениеТабличнойЧасти(ТчОтТипаУведомления, СинонимТЧ, Отказ)
	
	Если ТчОтТипаУведомления.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'Не заполнен раздел %1'"), СинонимТЧ), , , , Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПоля(Поле, СинонимТЧ, СинонимПоля, Отказ)
	
	Если Не ЗначениеЗаполнено(Поле) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'В разделе ""%1"" не заполнено поле ""%2""'"), СинонимТЧ, СинонимПоля), , , , Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Иначе

#Область Инициализация
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецОбласти

#КонецЕсли