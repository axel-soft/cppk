// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Обработка получения полей представления.
// 
// Параметры:
//  Поля - Массив из Строка -
//  СтандартнаяОбработка - Булево -
Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Дата");
	Поля.Добавить("ИдентификаторУведомления");
	Поля.Добавить("ИдентификаторДокумента");
	Поля.Добавить("Направление");
	
КонецПроцедуры


// Обработка получения представления.
// 
// Параметры:
//  Данные - Структура - Данные:
//   * Дата - Дата -
//   * Направление - ПеречислениеСсылка.НаправленияСообщенийМЭДО -
//   * ИдентификаторУведомления - Строка -
//   * ИдентификаторДокумента - Строка -
//  Представление - Строка - Представление
//  СтандартнаяОбработка - Булево - Стандартная обработка
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Представление = СтрШаблон(
		НСтр("ru = '%1 уведомление МЭДО от %2 (id=%3 на документ id=%4)'"), 
		Данные.Направление,
		Данные.Дата,
		Данные.ИдентификаторУведомления,
		Данные.ИдентификаторДокумента);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Записать уведомление, при ошибке сделать запись в журнал событий. Для автоматически создаваемых уведомлений.
// 
// Параметры:
//  УведомлениеОбъект - ДокументОбъект.УведомлениеМЭДО -
// 
// Возвращаемое значение:
//  ДокументСсылка.УведомлениеМЭДО - Ссылка на записанное уведомление, или в слчае неудачи пустая ссылка
Функция ЗаписатьУведомление(УведомлениеОбъект) Экспорт
	
	Попытка
		УведомлениеОбъект.Записать();
		Возврат УведомлениеОбъект.Ссылка;
	Исключение
		СтекОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ТекстКратко = НСтр("ru = 'Ошибка записи уведомления'");
		МЭДО.ЗаписьВЖурналСобытий(
			Перечисления.УровниСобытийМЭДО.Ошибка,
			УведомлениеОбъект.Документ,
			ТекстКратко,
			СтрШаблон(НСтр("ru = '%1 %2: %3'"), ТекстКратко, НРег("" + УведомлениеОбъект.ТипУведомления), СтекОшибки),
			МЭДОСтруктурыДанных.НовыйЛегкийОтвет());
		Возврат ПустаяСсылка();
	КонецПопытки;
	
КонецФункции

// Снять признак "Готово к отправке" - с исходящего уведомления - в случае неуспешной отправки.
// 
// Параметры:
//  УведомлениеСсылка - ДокументСсылка.УведомлениеМЭДО
//  ДанныеОтвета - см. МЭДОСтруктурыДанных.НовыйОтвет.
Процедура СнятьПризнакГотовоКОтправке(УведомлениеСсылка, ДанныеОтвета) Экспорт
	
	Уведомление = УведомлениеСсылка.ПолучитьОбъект();
	Если Не Уведомление.ГотовоКОтправке Тогда
		Возврат; // перестраховка, флаг должен стоять.
	КонецЕсли;
	Уведомление.ГотовоКОтправке = Ложь;
	Уведомление.Отправлено = Ложь;
	Попытка
		Уведомление.Записать();
		МЭДО.ЗаписьВЖурналСобытий(
			Перечисления.УровниСобытийМЭДО.Предупреждение,
			УведомлениеСсылка,
			МЭДО.Текст_НеуспешнаяОтправка(),
			МЭДО.Текст_СнятиеПризнакаГотовностиКОтправке(),
			ДанныеОтвета);
	Исключение
		ТекстКратко = НСтр("ru = 'Ошибка записи исходящего уведомления'");
		МЭДО.ЗаписьВЖурналСобытий(
			Перечисления.УровниСобытийМЭДО.Ошибка,
			УведомлениеСсылка,
			ТекстКратко,
			СтрШаблон("%1: %2", ТекстКратко, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())),
			ДанныеОтвета);
	КонецПопытки;
	
КонецПроцедуры

// Создать исходящее уведомление, заполнить общие поля. Для автоматически создаваемых уведомлений.
// Заполняет общие поля, чтобы в дальнейшем заполнить конкретные поля, зависящие от типа уведомления.
// 
// Параметры:
//  ОбщиеПоля - См. МЭДОСтруктурыДанных.НовыйОбщиеПоляУведомления
//  ТипУведомления - ПеречислениеСсылка.ТипыУведомленийМЭДО -
// 
// Возвращаемое значение:
//  ДокументОбъект.УведомлениеМЭДО - Объект, еще не записанный.
Функция СоздатьИсходящееУведомление_ЗаполнитьОбщиеПоля(ОбщиеПоля, ТипУведомления) Экспорт
	
	УведомлениеОбъект = СоздатьДокумент();
	
	УведомлениеОбъект.Дата = ТекущаяДатаСеанса();
	УведомлениеОбъект.Направление = Перечисления.НаправленияСообщенийМЭДО.Исходящее;
	УведомлениеОбъект.ТипУведомления = ТипУведомления;
	УведомлениеОбъект.Заполнить(Неопределено);
	ЗаполнитьЗначенияСвойств(
		УведомлениеОбъект, ОбщиеПоля,
		"Документ, Организация, Контрагент, ВерсияМЭДО, ИдентификаторДокумента");
	
	УведомлениеОбъект.ИдентификаторСообщенияДокумента = ОбщиеПоля.ИдентификаторСообщенияДокумента;
	УведомлениеОбъект.Отправлено = Ложь;
	Если МЭДОПовтИсп.ВариантАвтосозданияУведомленийМЭДО()
		= Перечисления.ВариантыАвтосозданияУведомленийМЭДО.СоздаватьИОтправлять Тогда
		УведомлениеОбъект.ГотовоКОтправке = Истина;
		УведомлениеОбъект.Комментарий = СтрШаблон(
			НСтр("ru = '%1. Помечено как готовое к отправке'"), ОбщиеПоля.Комментарий);
	Иначе
		УведомлениеОбъект.ГотовоКОтправке = Ложь;
		УведомлениеОбъект.Комментарий = ОбщиеПоля.Комментарий;
	КонецЕсли;
	
	// ВерсияМЭДО и ИдентификаторДокумента - будут заполнены ПередЗаписью.
	
	Возврат УведомлениеОбъект;
	
КонецФункции

#КонецОбласти

#КонецЕсли