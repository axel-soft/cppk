#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДелаХраненияДокументов.Ссылка КАК Дело,
		|	ДелаХраненияДокументов.Организация КАК Организация,
		|	ДелаХраненияДокументов.Подразделение КАК Подразделение,
		|	ДелаХраненияДокументов.ДелоЗакрыто КАК ДелоЗакрыто,
		|	НоменклатураДелСпр.ФормаДокументов КАК ФормаДокументов,
		|	НоменклатураДелСпр.ГрифДоступа КАК ГрифДоступа
		|ИЗ
		|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураДел КАК НоменклатураДелСпр
		|		ПО ДелаХраненияДокументов.НоменклатураДел = НоменклатураДелСпр.Ссылка
		|ГДЕ
		|	ДелаХраненияДокументов.Ссылка В(&Дела)");
	
	Запрос.УстановитьПараметр("Дела", ДелаХраненияДокументов.ВыгрузитьКолонку("ДелоХраненияДокументов"));
	ЗначенияРеквизитовДел = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураРеквизитов = Новый Структура(
			"Организация, Подразделение, ФормаДокументов, ДелоЗакрыто, ГрифДоступа");
		ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, Выборка);
		ЗначенияРеквизитовДел[Выборка.Дело] = СтруктураРеквизитов;
	КонецЦикла;
	
	ИспользоватьУчетПоОрганизациям = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям");
	ВключенаИнтеграцияСАрхивом = ПолучитьФункциональнуюОпцию("ИнтеграцияС1САрхивом");
		
	Для Каждого Строка Из ДелаХраненияДокументов Цикл
		
		Если Не ЗначениеЗаполнено(Строка.ДелоХраненияДокументов) Тогда
			Продолжить;
		КонецЕсли;
		
		РеквизитыДела = ЗначенияРеквизитовДел[Строка.ДелоХраненияДокументов];
		
		Если ИспользоватьУчетПоОрганизациям И РеквизитыДела.Организация <> Организация Тогда 
			ТекстСообщения = СтрШаблон(РедакцииКонфигурацииКлиентСервер.ОшибкаПередачаДелВАрхив(),
				Строка.ДелоХраненияДокументов, Организация);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
				"ДелаХраненияДокументов[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].ДелоХраненияДокументов",, 
				Отказ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Подразделение) И РеквизитыДела.Подразделение <> Подразделение Тогда 
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Дело ""%1"" не относится к подразделению ""%2"".'"),
				Строка.ДелоХраненияДокументов, Подразделение);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
				"ДелаХраненияДокументов[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].ДелоХраненияДокументов",, 
				Отказ);
		КонецЕсли;
		
		Если РеквизитыДела.ФормаДокументов <> ФормаДокументов Тогда 
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Дело ""%1"" не соответствует выбранной форме ""%2"".'"),
				Строка.ДелоХраненияДокументов, ФормаДокументов);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
				"ДелаХраненияДокументов[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].ДелоХраненияДокументов",, 
				Отказ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ГрифДоступа) И РеквизитыДела.ГрифДоступа <> ГрифДоступа Тогда 
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Дело ""%1"" не соответствует выбранному грифу ""%2"".'"),
				Строка.ДелоХраненияДокументов, ГрифДоступа);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
				"ДелаХраненияДокументов[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].ДелоХраненияДокументов",, 
				Отказ);
		КонецЕсли;
		
		Если РеквизитыДела.ДелоЗакрыто = Ложь Тогда 
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Дело ""%1"" не закрыто.'"),
				Строка.ДелоХраненияДокументов);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
				"ДелаХраненияДокументов[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].ДелоХраненияДокументов",, 
				Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ВключенаИнтеграцияСАрхивом И СтатусВыгрузкиВАрхив = Перечисления.СтатусыОбменаСАрхивом.ГотовКВыгрузке Тогда
		ЛимитКоличестваСообщений = 10;
		Сообщений = 0;
		ОшибкиЗаполненияВДокументах = ПроверитьЗаполнениеДокументовДляВыгрузкиВАрхив();
		Для Каждого ТекстОшибки Из ОшибкиЗаполненияВДокументах Цикл
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект,,, Отказ);
			Сообщений = Сообщений + 1;
			Если Сообщений = ЛимитКоличестваСообщений Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = '... еще %1 ошибок в документах'"),
					Формат(ОшибкиЗаполненияВДокументах.Количество() - ЛимитКоличестваСообщений, "ЧГ="));
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Сообщений = 0;
		ОшибкиЭП = ПроверитьЭПДокументовДляВыгрузкиВАрхив();
		Для Каждого ТекстОшибки Из ОшибкиЭП Цикл
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект,,, Отказ);
			Сообщений = Сообщений + 1;
			Если Сообщений = ЛимитКоличестваСообщений Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = '... еще %1 ошибок в электронных подписях документов'"),
					Формат(ОшибкиЭП.Количество() - ЛимитКоличестваСообщений, "ЧГ="));
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
			
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда 
		Дата = ТекущаяДатаСеанса();
		ДатаСоздания = ТекущаяДатаСеанса();
		Создал = Сотрудники.ОсновнойСотрудник();
		Если Не ЗначениеЗаполнено(Организация) Тогда 
			Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
		КонецЕсли;
		Если ПолучитьФункциональнуюОпцию("ИнтеграцияС1САрхивом") = Истина Тогда
			СтатусВыгрузкиВАрхив = Перечисления.СтатусыОбменаСАрхивом.НеГотовКВыгрузке;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Массив") Тогда
		
		ЗначенияРеквизитовДел = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
			ДанныеЗаполнения, "ФормаДокументов, Организация, Подразделение");
		
		ФормаДокументовДел = Неопределено;
		ОрганизацияДел = Неопределено;
		ПодразделениеДел = Неопределено;
		НесколькоПодразделений = Ложь;
		
		Для Каждого ДелоТом Из ДанныеЗаполнения Цикл
			
			РеквизитыДела = ЗначенияРеквизитовДел[ДелоТом];
			
			Если ФормаДокументовДел = Неопределено Тогда
				ФормаДокументовДел = РеквизитыДела.ФормаДокументов;
			КонецЕсли;
			Если ОрганизацияДел = Неопределено Тогда
				ОрганизацияДел = РеквизитыДела.Организация;
			КонецЕсли;
			Если РеквизитыДела.ФормаДокументов <> ФормаДокументовДел
				Или РеквизитыДела.Организация <> ОрганизацияДел Тогда
				Продолжить;
			КонецЕсли;
			
			Если ПодразделениеДел = Неопределено Тогда
				ПодразделениеДел = РеквизитыДела.Подразделение;
			ИначеЕсли ПодразделениеДел <> РеквизитыДела.Подразделение Тогда
				НесколькоПодразделений = Истина;
			КонецЕсли;
			
			НоваяСтрока = ДелаХраненияДокументов.Добавить();
			НоваяСтрока.ДелоХраненияДокументов = ДелоТом;
			
		КонецЦикла;
		
		ФормаДокументов = ФормаДокументовДел;
		Организация = ОрганизацияДел;
		Если Не НесколькоПодразделений Тогда
			Подразделение = ПодразделениеДел;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.СостоянияДелХраненияДокументов.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДелаТабЧасть.НомерСтроки КАК НомерСтроки,
		|	&ДатаДокумента КАК Период,
		|	ДелаСпр.Ссылка КАК Дело,
		|	ДелаСпр.МестоХраненияДел КАК МестоХранения,
		|	ЗНАЧЕНИЕ(Перечисление.СостоянияДелХраненияДокументов.ПереданоВАрхив) КАК Состояние,
		|	СостоянияСрезПоследних.Состояние КАК СостояниеРанее
		|ИЗ
		|	Документ.ПередачаДелВАрхив.ДелаХраненияДокументов КАК ДелаТабЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДелаХраненияДокументов КАК ДелаСпр
		|		ПО ДелаТабЧасть.ДелоХраненияДокументов = ДелаСпр.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияДелХраненияДокументов.СрезПоследних(&Период, ДелоХраненияДокументов В
		|			(&ПереданныеДела)) КАК СостоянияСрезПоследних
		|		ПО ДелаТабЧасть.ДелоХраненияДокументов = СостоянияСрезПоследних.ДелоХраненияДокументов
		|ГДЕ
		|	ДелаТабЧасть.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("Период", Новый Граница(МоментВремени(), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ПереданныеДела",
		ДелаХраненияДокументов.ВыгрузитьКолонку("ДелоХраненияДокументов"));
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.СостояниеРанее = Перечисления.СостоянияДелХраненияДокументов.ПереданоВАрхив Тогда 
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Дело ""%1"" было передано в архив ранее.'"),
				Выборка.Дело);
			
			ОбщегоНазначения.СообщитьПользователю(
				ТекстСообщения,
				ЭтотОбъект,
				"ДелаХраненияДокументов[" + Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].ДелоХраненияДокументов",, 
				Отказ);
		ИначеЕсли Выборка.СостояниеРанее = Перечисления.СостоянияДелХраненияДокументов.Уничтожено Тогда 
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Дело ""%1"" было уничтожено ранее.'"),
				Выборка.Дело);
			
			ОбщегоНазначения.СообщитьПользователю(
				ТекстСообщения,
				ЭтотОбъект,
				"ДелаХраненияДокументов[" + Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].ДелоХраненияДокументов",, 
				Отказ);
		КонецЕсли;	
		
		Движение = Движения.СостоянияДелХраненияДокументов.Добавить();
		Движение.Период = Выборка.Период;
		Движение.ДелоХраненияДокументов = Выборка.Дело;
		Движение.Состояние = Выборка.Состояние;
		Движение.Активность = Не Ссылка.ПометкаУдаления;
		
		// Зафиксируем состояние передачи в архив для всех документов в делах.
		Делопроизводство.ЗаписатьСостояниеДелаВДокументы(Выборка.Дело, Выборка.Состояние);
		
		// Очистка места хранения.
		Если ЗначениеЗаполнено(Выборка.МестоХранения) Тогда
			ЗаблокироватьДанныеДляРедактирования(Выборка.Дело);
			ДелоОбъект = Выборка.Дело.ПолучитьОбъект();
			ДелоОбъект.МестоХраненияДел = Неопределено;
			ДелоОбъект.Записать();
			РазблокироватьДанныеДляРедактирования(Выборка.Дело);
		КонецЕсли;
		
		Если ПолучитьФункциональнуюОпцию("ИнтеграцияС1САрхивом") = Истина Тогда
			АрхивныеОперацииСервер.ОбработатьПередачуДокументовВАрхив(Выборка.Дело, Дата);
		КонецЕсли;
		
	КонецЦикла;
	
	Делопроизводство.УстановитьИспользуетсяПередачаДелХранения();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИнтеграцияС1САрхивом") = Истина Тогда
		Если Не ДополнительныеСвойства.Свойство("ИнтеграцияДокументаСАрхивом") Тогда
			ТекстСообщения = НСтр("ru = 'Включена интеграция с 1С:Архивом. Отменить проведение невозможно.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
				ЭтотОбъект, "СтатусВыгрузкиВАрхив",, Отказ);
			Возврат;
		КонецЕсли;
		АрхивныеОперацииСервер.ОтменитьПередачуДокументовВАрхив(Ссылка);
	КонецЕсли;
	
	// Отменим состояние передачи в архив для всех документов в делах.
	Для Каждого СтрДело Из ДелаХраненияДокументов Цикл
		Делопроизводство.ЗаписатьСостояниеДелаВДокументы(СтрДело.ДелоХраненияДокументов, Неопределено);
	КонецЦикла;
	
	Делопроизводство.СнятьИспользуетсяПередачаДелХранения(Ссылка);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИнтеграцияС1САрхивом") = Истина
		И Не ДополнительныеСвойства.Свойство("ИнтеграцияДокументаСАрхивом")
		И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ТекстСообщения = НСтр("ru = 'Включена интеграция с 1С:Архивом. Проведение невозможно.'");
		ОбщегоНазначения.СообщитьПользователю(
			ТекстСообщения,
			ЭтотОбъект,
			"СтатусВыгрузкиВАрхив",,
			Отказ);
		КонецЕсли;
		
	ВключенаИнтеграцияСАрхивом = ПолучитьФункциональнуюОпцию("ИнтеграцияС1САрхивом");
	Если ВключенаИнтеграцияСАрхивом И СтатусВыгрузкиВАрхив = Перечисления.СтатусыОбменаСАрхивом.ГотовКВыгрузке Тогда
		Передал = Сотрудники.ОсновнойСотрудник();
		ДатаПередачи = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаСоздания) Тогда
		ДатаСоздания = ТекущаяДатаСеанса();
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьЗаполнениеДокументовДляВыгрузкиВАрхив()
	
	МассивОшибок = Новый Массив; 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДокументыПредприятия.ДатаРегистрации КАК ДатаРегистрации,
		|	ДокументыПредприятия.РегистрационныйНомер КАК РегистрационныйНомер,
		|	ДокументыПредприятия.Организация КАК Организация,
		|	ДокументыПредприятия.Ссылка КАК Документ,
		|	ДокументыПредприятия.Дело КАК Дело,
		|	ДокументыПредприятия.ФормаДокумента КАК ФормаДокумента,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Файлы.Ссылка) - КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СлужебныеФайлыДокументов.Файл) КАК КоличествоФайлов
		|ИЗ
		|	Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
		|		ПО ДокументыПредприятия.Ссылка = Файлы.ВладелецФайла
		|			И (НЕ Файлы.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеФайлыДокументов КАК СлужебныеФайлыДокументов
		|		ПО (СлужебныеФайлыДокументов.Файл = Файлы.Ссылка)
		|ГДЕ
		|	ДокументыПредприятия.Дело В(&ПереданныеДела)
		|	И ДокументыПредприятия.Дело <> ЗНАЧЕНИЕ(Справочник.ДелаХраненияДокументов.ПустаяСсылка)
		|	И ДокументыПредприятия.ПометкаУдаления = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументыПредприятия.ДатаРегистрации,
		|	ДокументыПредприятия.РегистрационныйНомер,
		|	ДокументыПредприятия.Организация,
		|	ДокументыПредприятия.Ссылка,
		|	ДокументыПредприятия.Дело,
		|	ДокументыПредприятия.ФормаДокумента";
	
	Запрос.УстановитьПараметр("ПереданныеДела",
		ДелаХраненияДокументов.ВыгрузитьКолонку("ДелоХраненияДокументов"));
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ИспользоватьУчетПоОрганизациям = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям");
		
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.ДатаРегистрации) Тогда
			МассивОшибок.Добавить(
				СтрШаблон(НСтр("ru = 'Не заполнена дата регистрации документа ""%1"" в деле ""%2""'"),
					Выборка.Документ, Выборка.Дело));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Выборка.РегистрационныйНомер) Тогда
			МассивОшибок.Добавить(
				СтрШаблон(НСтр("ru = 'Не заполнен регистрационный номер документа ""%1"" в деле ""%2""'"),
					Выборка.Документ, Выборка.Дело));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Выборка.Организация) И ИспользоватьУчетПоОрганизациям Тогда
			МассивОшибок.Добавить(
				СтрШаблон(НСтр("ru = 'Не заполнена организация документа ""%1"" в деле ""%2""'"),
					Выборка.Документ, Выборка.Дело));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Выборка.ФормаДокумента) Тогда
			МассивОшибок.Добавить(
				СтрШаблон(НСтр("ru = 'Не заполнена форма документа ""%1"" в деле ""%2""'"),
					Выборка.Документ, Выборка.Дело));
		КонецЕсли;
		Если Выборка.ФормаДокумента = Перечисления.ВариантыФормДокументов.Электронная Тогда
			Если Выборка.КоличествоФайлов = 0 Тогда
				МассивОшибок.Добавить(
					СтрШаблон(НСтр("ru = 'Отсутствуют файлы в электронном документе ""%1""'"), Выборка.Документ));
			КонецЕсли;
		КонецЕсли; 	
	КонецЦикла;
	
	Возврат МассивОшибок;
	
КонецФункции 

Функция ПроверитьЭПДокументовДляВыгрузкиВАрхив()
	
	МассивОшибок = Новый Массив; 
	
	// Документы ДО.
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументыПредприятия.Ссылка КАК Документ,
		|	ДокументыПредприятия.Дело КАК Дело
		|ИЗ
		|	Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|ГДЕ
		|	ДокументыПредприятия.Дело В(&Дела)");
	Запрос.УстановитьПараметр("Дела", ДелаХраненияДокументов.ВыгрузитьКолонку("ДелоХраненияДокументов"));
	
	ДокументыДО = Новый Массив;
	ДелаДокументов = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДокументыДО.Добавить(Выборка.Документ);
		ДелаДокументов[Выборка.Документ] = Выборка.Дело;
	КонецЦикла;
	
	// Проверка ЭП файлов, кроме ЭДО.
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Файлы.ВладелецФайла КАК Документ,
		|	Файлы.Ссылка КАК Файл,
		|	ЭП.КомуВыданСертификат КАК КомуВыданСертификат
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭлектронныеПодписи КАК ЭП
		|		ПО Файлы.ТекущаяВерсия = ЭП.ПодписанныйОбъект
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеФайлыДокументов КАК СлужебныеФайлыДокументов
		|		ПО (СлужебныеФайлыДокументов.Файл = Файлы.Ссылка)
		|ГДЕ
		|	Файлы.ВладелецФайла В (&ДокументыДО)
		|	И СлужебныеФайлыДокументов.Файл ЕСТЬ NULL
		|	И НЕ ЭП.ПодписьВерна
		|	И ЭП.ДатаПроверкиПодписи <> ДАТАВРЕМЯ(1, 1, 1)");
	Запрос.Параметры.Вставить("ДокументыДО", ДокументыДО);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивОшибок.Добавить(СтрШаблон(НСтр("ru = 'Недействительная подпись файла ""%1"" документа ""%2"" в деле ""%3"", подписал ""%4""'"),
			Выборка.Файл, Выборка.Документ, ДелаДокументов[Выборка.Документ], Выборка.КомуВыданСертификат));
	КонецЦикла;
	
	// Документы ЭДО.
	ДокументыЭДОПоДокументамДО = ОбменЭДОДокументооборот.ДокументыЭДОДокументовДО(ДокументыДО);
	ВсеДокументыЭДО = Новый Массив;
	ДокументыДОПоДокументамЭДО = Новый Соответствие;
	Для Каждого КлючИЗначение Из ДокументыЭДОПоДокументамДО Цикл
		ДокументДО = КлючИЗначение.Ключ;
		МассивЭДО = КлючИЗначение.Значение;
		Для Каждого ДокументЭДО Из МассивЭДО Цикл
			ВсеДокументыЭДО.Добавить(ДокументЭДО);
			ДокументыДОПоДокументамЭДО[ДокументЭДО] = ДокументДО;
		КонецЦикла;
	КонецЦикла;
	
	Если ВсеДокументыЭДО.Количество() = 0 Тогда
		Возврат МассивОшибок;
	КонецЕсли;
	
	ТаблицаФайловЭДО = ЭлектронныеДокументыЭДО.ПрисоединенныеФайлыЭлектронныхДокументов(ВсеДокументыЭДО);
	ФайлыЭДО = ТаблицаФайловЭДО.ВыгрузитьКолонку("ПрисоединенныйФайл");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЭП.ПодписанныйОбъект КАК Файл,
		|	ЭП.КомуВыданСертификат КАК КомуВыданСертификат
		|ИЗ
		|	РегистрСведений.ЭлектронныеПодписи КАК ЭП
		|ГДЕ
		|	ЭП.ПодписанныйОбъект В (&ФайлыЭДО)
		|	И НЕ ЭП.ПодписьВерна
		|	И ЭП.ДатаПроверкиПодписи <> ДАТАВРЕМЯ(1, 1, 1)";
	Запрос.Параметры.Вставить("ФайлыЭДО", ФайлыЭДО);	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НайденнаяСтрока = ТаблицаФайловЭДО.Найти(Выборка.Файл, "ПрисоединенныйФайл");
		Если НайденнаяСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ДокументДО = ДокументыДОПоДокументамЭДО[НайденнаяСтрока.ЭлектронныйДокумент];
		МассивОшибок.Добавить(СтрШаблон(НСтр("ru = 'Недействительная подпись файла ""%1"" документа ""%2"" в деле ""%3"", подписал ""%4""'"),
			Выборка.Файл, ДокументДО, ДелаДокументов[ДокументДО], Выборка.КомуВыданСертификат));
	КонецЦикла;
	
	Возврат МассивОшибок;
	
КонецФункции 

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли