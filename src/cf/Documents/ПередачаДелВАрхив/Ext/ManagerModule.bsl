#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Печать итоговой записи
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ПередачаДелВАрхив";
	КомандаПечати.Идентификатор = "Опись";
	КомандаПечати.Представление = НСтр("ru = 'Опись дел'");
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ФормаДокументов", Перечисления.ВариантыФормДокументов.Бумажная);
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ПередачаДелВАрхив";
	КомандаПечати.Идентификатор = "ОписьЭлектронныхДокументов";
	КомандаПечати.Представление = НСтр("ru = 'Опись электронных документов'");
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ФормаДокументов", Перечисления.ВариантыФормДокументов.Электронная);
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Опись") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Опись", НСтр("ru = 'Опись дел'"),
			ПечатьОписи(МассивОбъектов, ОбъектыПечати), , "Документ.ПередачаДелВАрхив.ПФ_MXL_Опись");
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОписьЭлектронныхДокументов") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ОписьЭлектронныхДокументов", НСтр("ru = 'Опись электронных документов'"),
			ПечатьОписиЭлектронныхДокументов(МассивОбъектов, ОбъектыПечати), , "Документ.ПередачаДелВАрхив.ПФ_MXL_ОписьЭлектронныхДокументов");
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьОписи(МассивОбъектов, ОбъектыПечати) 
	
	// Создаем табличный документ и устанавливаем имя параметров печати
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ОписьПередачиДелВАрхив";
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	// Получаем запросом необходимые данные
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПередачаДелВАрхив.Ссылка КАК Ссылка,
	|	ПередачаДелВАрхив.Организация КАК Организация,
	|	ПередачаДелВАрхив.Дата КАК Дата,
	|	ПередачаДелВАрхив.Номер КАК Номер,
	|	ПередачаДелВАрхив.ФормаДокументов,
	|	ПередачаДелВАрхив.Подразделение,
	|	ПередачаДелВАрхив.ДатаПередачи,
	|	ПередачаДелВАрхив.ДатаПриемки,
	|	ПередачаДелВАрхив.Передал,
	|	ПередачаДелВАрхив.Создал,
	|	ПередачаДелВАрхив.Принял
	|ИЗ
	|	Документ.ПередачаДелВАрхив КАК ПередачаДелВАрхив
	|ГДЕ
	|	ПередачаДелВАрхив.Ссылка В (&МассивОбъектов)";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ВыборкаСсылка = Запрос.Выполнить().Выбрать();
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НоменклатураСпр.Индекс КАК Индекс,
	|	НоменклатураСпр.Раздел КАК Раздел,
	|	НоменклатураСпр.СрокХранения КАК СрокХранения,
	|	НоменклатураСпр.ОтметкаЭПК КАК ОтметкаЭПК,
	|	НоменклатураСпр.КатегорияДела КАК КатегорияДела,
	|	ДелаСпр.Комментарий КАК Примечание,
	|	ДелаСпр.ДатаНачала КАК ДатаНачала,
	|	ДелаСпр.ДатаОкончания КАК ДатаОкончания,
	|	ДелаСпр.КоличествоЛистов КАК КоличествоЛистов,
	|	ТабличнаяЧасть.Ссылка КАК Ссылка,
	|	ДелаСпр.Ссылка КАК Дело,
	|	ДелаСпр.ПолноеНаименование КАК Наименование
	|ИЗ
	|	Документ.ПередачаДелВАрхив.ДелаХраненияДокументов КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДелаХраненияДокументов КАК ДелаСпр
	|		ПО ТабличнаяЧасть.ДелоХраненияДокументов = ДелаСпр.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураДел КАК НоменклатураСпр
	|		ПО ДелаСпр.НоменклатураДел = НоменклатураСпр.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РазделыНоменклатурыДел КАК РазделыСпр
	|		ПО НоменклатураСпр.Раздел = РазделыСпр.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка В (&МассивОбъектов)
	|	И ТабличнаяЧасть.ДелоХраненияДокументов <> ЗНАЧЕНИЕ(Справочник.ДелаХраненияДокументов.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Индекс,
	|	Раздел
	|ИТОГИ
	|ПО
	|	Ссылка,
	|	Раздел ИЕРАРХИЯ";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ВыборкаДетали = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПередачаДелВАрхив.ПФ_MXL_Опись");
	ОбластьОрганизация = Макет.ПолучитьОбласть("Организация");
	ОбластьПодразделение = Макет.ПолучитьОбласть("Подразделение");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка 	 = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока 	 = Макет.ПолучитьОбласть("Строка");
	ОбластьРаздел 	 = Макет.ПолучитьОбласть("Раздел");
	ОбластьПодвал 	 = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвалПринял 	 = Макет.ПолучитьОбласть("ПодвалПринял");
	ОбластьПодвалПередал 	 = Макет.ПолучитьОбласть("ПодвалПередал");
	
	ПервыйДокумент = Истина;
	Пока ВыборкаСсылка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки с которой начали выводить текущий документ
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Организация и подразделение
		ОбластьОрганизация.Параметры.НаименованиеПредприятия = Справочники.Организации.ПредставлениеОрганизацииНаДату(
			ВыборкаСсылка.Организация, ВыборкаСсылка.Дата);
		ТабличныйДокумент.Вывести(ОбластьОрганизация);
		
		Если ЗначениеЗаполнено(ВыборкаСсылка.Подразделение) Тогда
			ОбластьПодразделение.Параметры.НаименованиеПодразделения = ВыборкаСсылка.Подразделение;
			ТабличныйДокумент.Вывести(ОбластьПодразделение);
		КонецЕсли;
		
		// заголовок
		ОбластьЗаголовок.Параметры.НомерДок = ВыборкаСсылка.Номер;
		ОбластьЗаголовок.Параметры.ОтчетныйГод = Формат(Год(ТекущаяДатаСеанса()), "ЧГ=0");
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// шапка
		ТабличныйДокумент.Вывести(ОбластьШапка);
		Номер = 0;
		
		// разделы
		Если ВыборкаДетали.НайтиСледующий(ВыборкаСсылка.Ссылка, "Ссылка") Тогда
			
			ВыборкаРазделы = ВыборкаДетали.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаРазделы.Следующий() Цикл
				
				СвойстваРаздела = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВыборкаРазделы.Раздел, "Индекс, Наименование");
				
				ОбластьРаздел.Параметры.Индекс = СвойстваРаздела.Индекс;
				ОбластьРаздел.Параметры.Наименование = СвойстваРаздела.Наименование;
				ТабличныйДокумент.Вывести(ОбластьРаздел);
				
				ВыборкаСтроки = ВыборкаРазделы.Выбрать();
				Пока ВыборкаСтроки.Следующий() Цикл
					Номер = Номер + 1;
					
					ОбластьСтрока.Параметры.Заполнить(ВыборкаСтроки);
					ОбластьСтрока.Параметры.Номер = Номер;
					ОбластьСтрока.Параметры.КрайниеДаты = 
						Формат(ВыборкаСтроки.ДатаНачала, "ДЛФ=D") + " - " +
							Формат(ВыборкаСтроки.ДатаОкончания, "ДЛФ=D");
					
					СрокХранения = ВыборкаСтроки.СрокХранения;
					ОтметкаЭПК = ВыборкаСтроки.ОтметкаЭПК;
					Если ВыборкаСтроки.КатегорияДела = Перечисления.КатегорииДел.Постоянное Тогда
						ОбластьСтрока.Параметры.СрокХранения = "";
					ИначеЕсли ТипЗнч(СрокХранения) = Тип("Число") Тогда 
						ОбластьСтрока.Параметры.СрокХранения =
							Строка(СрокХранения) + " " + ДелопроизводствоКлиентСервер.ПодписьЛет(СрокХранения) +
								?(ОтметкаЭПК, " ЭПК", "");
					Иначе
						ОбластьСтрока.Параметры.СрокХранения = Строка(СрокХранения) + ?(ОтметкаЭПК, " ЭПК", "");
					КонецЕсли;
					ТабличныйДокумент.Вывести(ОбластьСтрока);
				КонецЦикла;
			КонецЦикла;
			
		КонецЕсли;
		
		// подвал
		КоличествоДелСтрокой = СокрЛП(НРег(ЧислоПрописью(Номер, , ",,,с,,,,,0")));
		ОбластьПодвал.Параметры.КоличествоДел = 
			Формат(Номер, "ЧГ=") + " (" + КоличествоДелСтрокой + ")"
			+ "" + СтрЗаменить(СокрЛП(НРег(ЧислоПрописью(Номер, , "дело,дела,дел,с,,,,,0"))), КоличествоДелСтрокой, "");
		ОбластьПодвал.Параметры.НачальныйНомер = 1;
		ОбластьПодвал.Параметры.КонечныйНомер = Номер;
		ОбластьПодвал.Параметры.ДатаДок = Формат(ВыборкаСсылка.Дата, "ДЛФ=D");
		
		РуководительДОУ = Справочники.Организации.ОтветственноеЛицо(
			"РуководительСлужбыДОУ", ВыборкаСсылка.Организация, ВыборкаСсылка.Дата); 
		ОтветственныйЗаДокумент = Сотрудники.ЗаменитьПользователяСотрудником(
			Пользователи.ТекущийПользователь());
		РуководительАрхива = Справочники.Организации.ОтветственноеЛицо(
				"РуководительАрхива", ВыборкаСсылка.Организация, ВыборкаСсылка.Дата);
		Передал = ВыборкаСсылка.Передал;
		Принял = ВыборкаСсылка.Принял;
		МассивДляПолученияФИО = Новый Массив;
		МассивДляПолученияФИО.Добавить(ОтветственныйЗаДокумент);
		МассивДляПолученияФИО.Добавить(РуководительАрхива);
		МассивДляПолученияФИО.Добавить(РуководительДОУ);
		МассивДляПолученияФИО.Добавить(Передал);
		Если ТипЗнч(Принял) = Тип("СправочникСсылка.Сотрудники") Тогда
			МассивДляПолученияФИО.Добавить(Принял);
		КонецЕсли;
		
		ФИОСотрудниковНаДату = 
			Сотрудники.ПредставленияВДокументахСотрудниковНаДату(МассивДляПолученияФИО, ВыборкаСсылка.Дата);
		
		Если ЗначениеЗаполнено(РуководительДОУ) Тогда
			ОбластьПодвал.Параметры.РуководительДОУ = ФИОСотрудниковНаДату[РуководительДОУ];
		Иначе
			ОбластьПодвал.Параметры.РуководительДОУ = НСтр("ru = '<ФИО руководителя ДОУ>'");
		КонецЕсли;
		
		ДолжностьРуководителяДОУ = Сотрудники.ДолжностьСотрудника(РуководительДОУ);
		ОбластьПодвал.Параметры.ДолжностьРуководителяДОУ =
			?(ЗначениеЗаполнено(ДолжностьРуководителяДОУ), ДолжностьРуководителяДОУ, НСтр("ru = '<Должность руководителя ДОУ>'"));
		
		Если ЗначениеЗаполнено(РуководительДОУ) Тогда
			ОбластьПодвал.Параметры.Составитель = ФИОСотрудниковНаДату[ОтветственныйЗаДокумент];
		Иначе
			ОбластьПодвал.Параметры.Составитель = НСтр("ru = '<ФИО руководителя ДОУ>'");
		КонецЕсли;
		
		ДолжностьСоставителя = Сотрудники.ДолжностьСотрудника(ОтветственныйЗаДокумент);
		ОбластьПодвал.Параметры.ДолжностьСоставителя = 
			?(ЗначениеЗаполнено(ДолжностьСоставителя), ДолжностьСоставителя, НСтр("ru = '<Должность составителя>'"));
		
		Если ЗначениеЗаполнено(РуководительАрхива) Тогда
			ОбластьПодвал.Параметры.РуководительАрхива = ФИОСотрудниковНаДату[РуководительАрхива];
		Иначе
			ОбластьПодвал.Параметры.РуководительАрхива = НСтр("ru = '<ФИО руководителя архива>'");
		КонецЕсли;
		
		ДолжностьРуководителяАрхива = Сотрудники.ДолжностьСотрудника(РуководительАрхива);
		ОбластьПодвал.Параметры.ДолжностьРуководителяАрхива = 
			?(ЗначениеЗаполнено(ДолжностьРуководителяАрхива), ДолжностьРуководителяАрхива, НСтр("ru = '<Должность руководителя архива>'"));
			
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		КоличествоЕдиницСтрокой = Формат(Номер, "ЧГ=") + " (" + СокрЛП(НРег(ЧислоПрописью(Номер, , ",,,ж,,,,,0"))) + ")";
		
		Если ЗначениеЗаполнено(РуководительАрхива) Тогда
			ОбластьПодвалПередал.Параметры.Передал = ФИОСотрудниковНаДату[Передал];
		Иначе
			ОбластьПодвалПередал.Параметры.Передал = НСтр("ru = '<ФИО работника подразделения>'");
		КонецЕсли;
		
		ДолжностьПередал = Сотрудники.ДолжностьСотрудника(Передал);
		ОбластьПодвалПередал.Параметры.ДолжностьПередал = 
			?(ЗначениеЗаполнено(ДолжностьПередал), ДолжностьПередал, НСтр("ru = '<Должность работника подразделения>'"));
		ОбластьПодвалПередал.Параметры.ДатаПередачи = 
			?(ЗначениеЗаполнено(ВыборкаСсылка.ДатаПередачи), Формат(ВыборкаСсылка.ДатаПередачи, "ДЛФ=D"),
				НСтр("ru = '<Дата передачи>'"));
		ОбластьПодвалПередал.Параметры.КоличествоДел = КоличествоЕдиницСтрокой;
		ТабличныйДокумент.Вывести(ОбластьПодвалПередал);
		
		Если ТипЗнч(Принял) = Тип("Строка") Тогда
			ОбластьПодвалПринял.Параметры.Принял =
				?(ЗначениеЗаполнено(Принял), СокрЛП(Принял), НСтр("ru = '<ФИО работника архива>'"));
			ОбластьПодвалПринял.Параметры.ДолжностьПринял = НСтр("ru = '<Должность работника архива>'");
		Иначе 
			
			Если ЗначениеЗаполнено(РуководительАрхива) Тогда
				ОбластьПодвалПринял.Параметры.Принял = ФИОСотрудниковНаДату[Принял];
			Иначе
				ОбластьПодвалПринял.Параметры.Принял = НСтр("ru = '<ФИО работника архива>'");
			КонецЕсли;
			
			ДолжностьПринял = Сотрудники.ДолжностьСотрудника(Принял);
			ОбластьПодвалПринял.Параметры.ДолжностьПринял = 
				?(ЗначениеЗаполнено(ДолжностьПринял), ДолжностьПринял, НСтр("ru = '<Должность работника архива>'"));
		КонецЕсли;
		ОбластьПодвалПринял.Параметры.ДатаПриемки = 
			?(ЗначениеЗаполнено(ВыборкаСсылка.ДатаПриемки), Формат(ВыборкаСсылка.ДатаПриемки, "ДЛФ=D"),
				НСтр("ru = '<Дата приемки>'"));
		ОбластьПодвалПринял.Параметры.КоличествоДел = КоличествоЕдиницСтрокой;
		ТабличныйДокумент.Вывести(ОбластьПодвалПринял);
		
		// В табличном документе зададим имя области в которую был 
		// выведен объект. Нужно для возможности печати по-комплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаСсылка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

Функция ПечатьОписиЭлектронныхДокументов(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ОписьЭлектронныхДокументов";
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	ВидыОписей = ВидОписиПоНоменклатуреДел(МассивОбъектов);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПередачаДелВАрхив.Ссылка КАК Ссылка,
		|	ПередачаДелВАрхив.Дата,
		|	ПередачаДелВАрхив.Номер,
		|	ПередачаДелВАрхив.Передал,
		|	ПередачаДелВАрхив.Создал,
		|	ПередачаДелВАрхив.ДатаПередачи,
		|	ПередачаДелВАрхив.ДатаПриемки,
		|	ПередачаДелВАрхив.Принял,
		|	ПередачаДелВАрхив.Организация КАК Организация,
		|	ПередачаДелВАрхив.Подразделение,
		|	ПередачаДелВАрхив.ФормаДокументов,
		|	ПередачаДелВАрхив.СтатусВыгрузкиВАрхив,
		|	Номенклатура.Индекс КАК Индекс,
		|	Номенклатура.СрокХранения КАК СрокХранения,
		|	Номенклатура.КатегорияДела,
		|	ВЫРАЗИТЬ(ДелаТома.ПолноеНаименование КАК СТРОКА(100)) КАК Наименование,
		|	ДокументыПредприятия.Ссылка КАК Документ,
		|	ДокументыПредприятия.РегистрационныйНомер КАК НомерДокумента,
		|	НАЧАЛОПЕРИОДА(ДокументыПредприятия.ДатаРегистрации, ДЕНЬ) КАК ДатаДокумента,
		|	ДокументыПредприятия.Заголовок КАК ЗаголовокДокумента,
		|	ДокументыПредприятия.ВидДокумента,
		|	Файлы.Наименование КАК ИмяФайла,
		|	Файлы.ТекущаяВерсияДатаСоздания КАК ДатаИзменения,
		|	Файлы.ТекущаяВерсияРазмер КАК Размер,
		|	Файлы.ТекущаяВерсияРасширение КАК Расширение,
		|	ЕСТЬNULL(КОЛИЧЕСТВО(ФайлыДокумента.Ссылка), 0) КАК КоличествоФайлов,
		|	ЕСТЬNULL(СУММА(ФайлыДокумента.ТекущаяВерсияРазмер), 0) КАК Объем
		|ИЗ
		|	Документ.ПередачаДелВАрхив КАК ПередачаДелВАрхив
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаДелВАрхив.ДелаХраненияДокументов КАК ТабличнаяЧасть
		|		ПО ТабличнаяЧасть.Ссылка = ПередачаДелВАрхив.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|		ПО ТабличнаяЧасть.ДелоХраненияДокументов = ДокументыПредприятия.Дело
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДелаХраненияДокументов КАК ДелаТома
		|		ПО ТабличнаяЧасть.ДелоХраненияДокументов = ДелаТома.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураДел КАК Номенклатура
		|		ПО ДелаТома.НоменклатураДел = Номенклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК ФайлыДокумента
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеФайлыДокументов КАК СлужебныеФайлыДокументов
		|			ПО (СлужебныеФайлыДокументов.Файл = ФайлыДокумента.Ссылка)
		|		ПО ДокументыПредприятия.Ссылка = ФайлыДокумента.ВладелецФайла
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеФайлыДокументов КАК СлужебныеФайлы
		|			ПО (СлужебныеФайлы.Файл = Файлы.Ссылка)
		|		ПО ДокументыПредприятия.Ссылка = Файлы.ВладелецФайла
		|ГДЕ
		|	ПередачаДелВАрхив.Ссылка В (&МассивОбъектов)
		|	И СлужебныеФайлыДокументов.Файл ЕСТЬ NULL
		|	И СлужебныеФайлы.Файл ЕСТЬ NULL
		|СГРУППИРОВАТЬ ПО
		|	ПередачаДелВАрхив.Ссылка,
		|	ПередачаДелВАрхив.Номер,
		|	ПередачаДелВАрхив.ФормаДокументов,
		|	ПередачаДелВАрхив.Организация,
		|	ПередачаДелВАрхив.Дата,
		|	ПередачаДелВАрхив.Передал,
		|	ПередачаДелВАрхив.Создал,
		|	ПередачаДелВАрхив.ДатаПередачи,
		|	ПередачаДелВАрхив.ДатаПриемки,
		|	ПередачаДелВАрхив.Принял,
		|	ПередачаДелВАрхив.Подразделение,
		|	ПередачаДелВАрхив.СтатусВыгрузкиВАрхив,
		|	Номенклатура.Индекс,
		|	Номенклатура.СрокХранения,
		|	Номенклатура.КатегорияДела,
		|	ВЫРАЗИТЬ(ДелаТома.ПолноеНаименование КАК СТРОКА(100)),
		|	ДокументыПредприятия.Ссылка,
		|	ДокументыПредприятия.РегистрационныйНомер,
		|	ДокументыПредприятия.Заголовок,
		|	ДокументыПредприятия.ВидДокумента,
		|	Файлы.Наименование,
		|	Файлы.ТекущаяВерсияДатаСоздания,
		|	Файлы.ТекущаяВерсияРазмер,
		|	Файлы.ТекущаяВерсияРасширение,
		|	Файлы.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Индекс,
		|	ДатаДокумента,
		|	НомерДокумента
		|АВТОУПОРЯДОЧИВАНИЕ
		|ИТОГИ
		|ПО
		|	Ссылка,
		|	Индекс,
		|	Документ";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ВыборкаДетали = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПередачаДелВАрхив.ПФ_MXL_ОписьЭлектронныхДокументов");
	ОбластьОрганизация = Макет.ПолучитьОбласть("Организация");
	ОбластьПодразделение = Макет.ПолучитьОбласть("Подразделение");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	НачальныйНомер = Неопределено;
	ПервыйДокумент = Истина; 
	Пока ВыборкаДетали.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		ВыводитьРеестрФайлов = Истина;
		Если ПолучитьФункциональнуюОпцию("ИнтеграцияС1САрхивом")
			И ВыборкаДетали.СтатусВыгрузкиВАрхив = Перечисления.СтатусыОбменаСАрхивом.ПринятВАрхив Тогда
				ВыводитьРеестрФайлов = Ложь;
		КонецЕсли;
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
						
		// Номер строки с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Организация и подразделение
		ОбластьОрганизация.Параметры.НаименованиеОрганизации = 
			Справочники.Организации.ПредставлениеОрганизацииНаДату(ВыборкаДетали.Организация, ВыборкаДетали.Дата);
		ТабличныйДокумент.Вывести(ОбластьОрганизация);
		
		Если ЗначениеЗаполнено(ВыборкаДетали.Подразделение) Тогда
			ОбластьПодразделение.Параметры.НаименованиеПодразделения = ВыборкаДетали.Подразделение;
			ТабличныйДокумент.Вывести(ОбластьПодразделение);
		КонецЕсли;
		
		// Заголовок.
		ОбластьЗаголовок.Параметры.ФормаДокументов = НСтр("ru = 'электронных документов'");
		ОбластьЗаголовок.Параметры.НомерОписи = ВыборкаДетали.Номер;
		ОбластьЗаголовок.Параметры.ВидОписи = ВидыОписей.Получить(ВыборкаДетали.Ссылка);
		
		СписокПериодовДокумента = ПериодыДокументовПоСдаточнойОписи(ВыборкаДетали.Ссылка);
		Если СписокПериодовДокумента.Количество() = 1 Тогда
			ОтчетныйГод = СписокПериодовДокумента[0];
		ИначеЕсли СписокПериодовДокумента.Количество() > 1 Тогда
			ОтчетныйГод = СтрСоединить(СписокПериодовДокумента, "-");
		Иначе
			ОтчетныйГод = Формат(Год(ТекущаяДатаСеанса()), "ЧГ=0");
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.ОтчетныйГод = СтрШаблон("%1 %2", ОтчетныйГод,
			?(СписокПериодовДокумента.Количество() > 1, "годы", "год"));
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		// Документы.
		Номер = 0;
		ОбщийОбъемФайлов = 0;
		
		ВыборкаИндексНоменклатуры = ВыборкаДетали.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаИндексНоменклатуры.Следующий() Цикл

			ВыборкаДокументы = ВыборкаИндексНоменклатуры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДокументы.Следующий() Цикл
				
				Если Не ЗначениеЗаполнено(ВыборкаДокументы.Документ) Тогда
					Продолжить;
				КонецЕсли;
				
				// Строки.
				ВыборкаСтроки = ВыборкаДокументы.Выбрать();
				Пока ВыборкаСтроки.Следующий() Цикл
					
					Номер = Номер + 1; 
					
					ОбластьСтрока.Параметры.Заполнить(ВыборкаСтроки);
					ОбластьСтрока.Параметры.Номер = Номер;
					ОбластьСтрока.Параметры.ЗаголовокДокумента = СтрШаблон(НСтр("ru = '%1
					|%2'"),
						ВыборкаСтроки.ВидДокумента, ВыборкаСтроки.ЗаголовокДокумента);
						
					СрокХранения = ВыборкаСтроки.СрокХранения;
					Если ТипЗнч(СрокХранения) = Тип("Число") Тогда 
						ОбластьСтрока.Параметры.СрокХранения =
							Строка(СрокХранения) + " " + ДелопроизводствоКлиентСервер.ПодписьЛет(СрокХранения);
					Иначе
						ОбластьСтрока.Параметры.СрокХранения = СрокХранения;
					КонецЕсли;
					
					ОбщийОбъемФайлов = ОбщийОбъемФайлов + ВыборкаСтроки.Объем;
					ТабличныйДокумент.Вывести(ОбластьСтрока);
					
					Если Не ЗначениеЗаполнено(НачальныйНомер) Тогда
						НачальныйНомер = Номер;
					КонецЕсли;
					Прервать;
				КонецЦикла;
			КонецЦикла;
		
		КонецЦикла;
		КонечныйНомер = Номер;
		
		// Подвал.
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.ОбъемФайлов = ОбщийОбъемФайлов;
				
		КоличествоДокументовСтрокой = СокрЛП(НРег(ЧислоПрописью(Номер, , ",,,м,,,,,0")));
		ПредставлениеКоличестваДокументов = 
			Формат(Номер, "ЧГ=") + " (" + КоличествоДокументовСтрокой + ")"
				+ "" + СтрЗаменить(СокрЛП(НРег(ЧислоПрописью(Номер, , "электронный документ,электронных документа,электронных документов,м,,,,,0"))), КоличествоДокументовСтрокой, "");
		
		Если Не ЗначениеЗаполнено(Номер) Тогда
			ОбластьПодвал.Параметры.КоличествоДокументов = "- ( - )";
			ОбластьПодвал.Параметры.НачальныйНомер = "-";
			ОбластьПодвал.Параметры.КонечныйНомер = "-";
		Иначе
			КоличествоДокументовСтрокой = СокрЛП(НРег(ЧислоПрописью(Номер, , ",,,м,,,,,0")));
			ОбластьПодвал.Параметры.КоличествоДокументов = ПредставлениеКоличестваДокументов;
			ОбластьПодвал.Параметры.НачальныйНомер = НачальныйНомер;
			ОбластьПодвал.Параметры.КонечныйНомер = КонечныйНомер;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		ОбластьПодписи = Макет.ПолучитьОбласть("Подписи"); 
		ОтветственныйЗаДокумент = Сотрудники.ЗаменитьПользователяСотрудником(
			Пользователи.ТекущийПользователь()); 
		РуководительАрхива = Справочники.Организации.ОтветственноеЛицо(
			"РуководительАрхива", ВыборкаДетали.Организация, ВыборкаДетали.Дата); 
		РуководительДОУ = Справочники.Организации.ОтветственноеЛицо(
			"РуководительСлужбыДОУ", ВыборкаДетали.Организация, ВыборкаДетали.Дата);
		Передал = ВыборкаДетали.Передал;
		Принял = ВыборкаДетали.Принял;
		
		МассивДляПолученияФИО = Новый Массив;
		МассивДляПолученияФИО.Добавить(ОтветственныйЗаДокумент);
		МассивДляПолученияФИО.Добавить(РуководительАрхива);
		МассивДляПолученияФИО.Добавить(РуководительДОУ);
		МассивДляПолученияФИО.Добавить(Передал);
		Если ТипЗнч(Принял) = Тип("СправочникСсылка.Сотрудники") Тогда
			МассивДляПолученияФИО.Добавить(Принял);
		КонецЕсли;
		
		ФИОСотрудниковНаДату = 
			Сотрудники.ПредставленияВДокументахСотрудниковНаДату(МассивДляПолученияФИО, ВыборкаДетали.Дата);
		
		ОбластьПодписи.Параметры.Составитель = ФИОСотрудниковНаДату[ОтветственныйЗаДокумент];
		
		ДолжностьСоставителя = Сотрудники.ДолжностьСотрудника(ОтветственныйЗаДокумент);
		ОбластьПодписи.Параметры.ДолжностьСоставителя = 
			?(ЗначениеЗаполнено(ДолжностьСоставителя), ДолжностьСоставителя, НСтр("ru = '<Должность составителя>'"));
		
		Если ЗначениеЗаполнено(РуководительАрхива) Тогда
			ОбластьПодписи.Параметры.РуководительАрхива = ФИОСотрудниковНаДату[РуководительАрхива];
		Иначе
			ОбластьПодписи.Параметры.РуководительАрхива = НСтр("ru = '<ФИО руководителя архива>'");
		КонецЕсли;
		
		ДолжностьРуководителяАрхива = Сотрудники.ДолжностьСотрудника(РуководительАрхива);
		ОбластьПодписи.Параметры.ДолжностьРуководителяАрхива = 
			?(ЗначениеЗаполнено(ДолжностьРуководителяАрхива), ДолжностьРуководителяАрхива, НСтр("ru = '<Должность руководителя архива>'"));
		ОбластьПодписи.Параметры.ДатаДок = Формат(ВыборкаДетали.Дата, "ДЛФ=D");
		
		Если ЗначениеЗаполнено(РуководительДОУ) Тогда
			ОбластьПодписи.Параметры.РуководительДОУ = ФИОСотрудниковНаДату[РуководительДОУ];
		Иначе
			ОбластьПодписи.Параметры.РуководительДОУ = НСтр("ru = '<ФИО руководителя ДОУ>'");
		КонецЕсли;
		
		ДолжностьРуководителяДОУ = Сотрудники.ДолжностьСотрудника(РуководительДОУ);
		ОбластьПодписи.Параметры.ДолжностьРуководителяДОУ = 
			?(ЗначениеЗаполнено(ДолжностьРуководителяДОУ), ДолжностьРуководителяДОУ, НСтр("ru = '<Должность руководителя ДОУ>'"));
		
		ТабличныйДокумент.Вывести(ОбластьПодписи);
		
		ОбластьКоличествоПередал = Макет.ПолучитьОбласть("КоличествоПередал");
		ОбластьКоличествоПередал.Параметры.КоличествоДокументов = ПредставлениеКоличестваДокументов;
		ОбластьКоличествоПередал.Параметры.ОбщийОбъемФайлов = ОбщийОбъемФайлов;
		ТабличныйДокумент.Вывести(ОбластьКоличествоПередал);
		
		ОбластьПодписиПередал = Макет.ПолучитьОбласть("ПодписиПередал");
		
		Если ЗначениеЗаполнено(Передал) Тогда
			ОбластьПодписиПередал.Параметры.Передал = ФИОСотрудниковНаДату[Передал];
		Иначе
			ОбластьПодписиПередал.Параметры.Передал = НСтр("ru = '<ФИО работника подразделения>'");
		КонецЕсли;
		
		ДолжностьПередал = Сотрудники.ДолжностьСотрудника(Передал);
		ОбластьПодписиПередал.Параметры.ДолжностьПередал = 
			?(ЗначениеЗаполнено(ДолжностьПередал), ДолжностьПередал, НСтр("ru = '<Должность работника подразделения>'"));
		ОбластьПодписиПередал.Параметры.ДатаПередачи = 
			?(ЗначениеЗаполнено(ВыборкаДетали.ДатаПередачи), Формат(ВыборкаДетали.ДатаПередачи, "ДЛФ=D"), 
				НСтр("ru = '<Дата передачи>'"));
		ТабличныйДокумент.Вывести(ОбластьПодписиПередал);
			
		ОбластьКоличествоПринял = Макет.ПолучитьОбласть("КоличествоПринял");
		ОбластьКоличествоПринял.Параметры.КоличествоДокументов = ПредставлениеКоличестваДокументов;
		ОбластьКоличествоПринял.Параметры.ОбщийОбъемФайлов = ОбщийОбъемФайлов;
		ТабличныйДокумент.Вывести(ОбластьКоличествоПринял);
		
		ОбластьПодписиПринял = Макет.ПолучитьОбласть("ПодписиПринял");
		
		Если ТипЗнч(Принял) = Тип("Строка") Тогда
			ОбластьПодписиПринял.Параметры.Принял =
				?(ЗначениеЗаполнено(Принял), СокрЛП(Принял), НСтр("ru = '<ФИО работника архива>'"));
			ОбластьПодписиПринял.Параметры.ДолжностьПринял = НСтр("ru = '<Должность работника архива>'");
		Иначе 
			
			Если ЗначениеЗаполнено(Принял) Тогда
				ОбластьПодписиПринял.Параметры.Принял = ФИОСотрудниковНаДату[Принял];
			Иначе
				ОбластьПодписиПринял.Параметры.Принял = НСтр("ru = '<ФИО работника архива>'");
			КонецЕсли;
			
			ДолжностьПринял = Сотрудники.ДолжностьСотрудника(Принял);
			ОбластьПодписиПринял.Параметры.ДолжностьПринял = 
				?(ЗначениеЗаполнено(ДолжностьПринял), ДолжностьПринял, НСтр("ru = '<Должность работника архива>'"));
			
		КонецЕсли;
		ОбластьПодписиПринял.Параметры.ДатаПриемки = 
			?(ЗначениеЗаполнено(ВыборкаДетали.ДатаПриемки), Формат(ВыборкаДетали.ДатаПриемки, "ДЛФ=D"), 
				НСтр("ru = '<Дата приемки>'"));
				
		ТабличныйДокумент.Вывести(ОбластьПодписиПринял);
		
		Если ВыводитьРеестрФайлов Тогда
			// Реестр файлов документов
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц(); 
			
			ОбластьЗаголовокРеестра = Макет.ПолучитьОбласть("ЗаголовокРеестраФайлов");
			ТабличныйДокумент.Вывести(ОбластьЗаголовокРеестра);
			
			ОбластьШапкаРеестра = Макет.ПолучитьОбласть("ШапкаРеестраФайлов");
			ТабличныйДокумент.Вывести(ОбластьШапкаРеестра);
			
			ВыборкаДокументы.Сбросить();
			Номер = 0;
			НомерДокументаПоОписи = 0;
			
			ВыборкаИндексНоменклатуры.Сбросить();
			Пока ВыборкаИндексНоменклатуры.Следующий() Цикл
				ВыборкаДокументы = ВыборкаИндексНоменклатуры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаДокументы.Следующий() Цикл
					Если Не ЗначениеЗаполнено(ВыборкаДокументы.Документ) Тогда
						Продолжить;
					КонецЕсли;
					НомерДокументаПоОписи = НомерДокументаПоОписи + 1;
					ОбластьСтрокаРеестра = Макет.ПолучитьОбласть("СтрокаРеестраФайлов");
					ВыборкаСтроки = ВыборкаДокументы.Выбрать();
					Пока ВыборкаСтроки.Следующий() Цикл 
						Если Не ЗначениеЗаполнено(ВыборкаСтроки.ИмяФайла) Тогда
							Продолжить;
						КонецЕсли;
						Номер = Номер + 1;
						ОбластьСтрокаРеестра.Параметры.Номер = Номер;
						ОбластьСтрокаРеестра.Параметры.НомерДокументаПоОписи = НомерДокументаПоОписи;
						ОбластьСтрокаРеестра.Параметры.НаименованиеФайла  =  ВыборкаСтроки.ИмяФайла;
						ОбластьСтрокаРеестра.Параметры.ДатаИзменения = ВыборкаСтроки.ДатаИзменения;
						ОбластьСтрокаРеестра.Параметры.Объем = ВыборкаСтроки.Размер;
						ОбластьСтрокаРеестра.Параметры.Формат =  ВыборкаСтроки.Расширение;
						ТабличныйДокумент.Вывести(ОбластьСтрокаРеестра);
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
			
		// В табличном документе зададим имя области в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДетали.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
КонецПроцедуры

// Возвращает массив возможных статусов обмена с 1С:Архив для документа Передача дел в Архив.
//
// Параметры:
//  Документ - ДокументСсылка.ПередачаДелВАрхив - документ, по которому определяются возможные статусы.
//
// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.СтатусыОбменаСАрхивом - возможные статусы обмена с 1С:Архив для документа.
//
Функция ПолучитьСписокВыбораСтатусовВыгрузкиВАрхив(ВыбранныеДокументы) Экспорт
	
	СтатусыОбмена = Перечисления.СтатусыОбменаСАрхивом;
	СписокВыбораСтатусов = Новый Массив;
	
	Для Каждого Документ Из ВыбранныеДокументы Цикл	
		Если Документ.СтатусВыгрузкиВАрхив = СтатусыОбмена.ПустаяСсылка()
			Или Документ.СтатусВыгрузкиВАрхив = СтатусыОбмена.НеГотовКВыгрузке
			Или Документ.СтатусВыгрузкиВАрхив = СтатусыОбмена.ГотовКВыгрузке Тогда
			ДобавитьСтатусВыгрузкиВАрхивВСписок(СтатусыОбмена.НеГотовКВыгрузке, СписокВыбораСтатусов);
			ДобавитьСтатусВыгрузкиВАрхивВСписок(СтатусыОбмена.ГотовКВыгрузке, СписокВыбораСтатусов); 
		ИначеЕсли Документ.СтатусВыгрузкиВАрхив = СтатусыОбмена.ОбнаруженыОшибкиПриЗагрузкеВАрхив Тогда  
			ДобавитьСтатусВыгрузкиВАрхивВСписок(СтатусыОбмена.ГотовКВыгрузке, СписокВыбораСтатусов);
		ИначеЕсли Документ.СтатусВыгрузкиВАрхив = СтатусыОбмена.ОбнаруженыОшибкиПриПроверкеВАрхиве Тогда 
			ДобавитьСтатусВыгрузкиВАрхивВСписок(СтатусыОбмена.ГотовКВыгрузке, СписокВыбораСтатусов);
		КонецЕсли;
		ИндексСтатуса = СписокВыбораСтатусов.Найти(Документ.СтатусВыгрузкиВАрхив);
		Если ИндексСтатуса <> Неопределено Тогда
			СписокВыбораСтатусов.Удалить(ИндексСтатуса);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокВыбораСтатусов;
	
КонецФункции 

Процедура ДобавитьСтатусВыгрузкиВАрхивВСписок(СтатусОбмена, Список)
	
	Если Список.Найти(СтатусОбмена) = Неопределено Тогда
		Список.Добавить(СтатусОбмена);	
	КонецЕсли;
		
КонецПроцедуры 

Функция ВидОписиПоНоменклатуреДел(МассивДокументов)
	
	Результат = Новый Соответствие();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НоменклатураДел.КатегорияДела КАК КатегорияДела,
		|	НоменклатураДел.ПоЛичномуСоставу,
		|	ПередачаДелВАрхивДелаХраненияДокументов.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПередачаДелВАрхив.ДелаХраненияДокументов КАК ПередачаДелВАрхивДелаХраненияДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураДел КАК НоменклатураДел
		|		ПО ПередачаДелВАрхивДелаХраненияДокументов.ДелоХраненияДокументов.НоменклатураДел = НоменклатураДел.Ссылка
		|ГДЕ
		|	ПередачаДелВАрхивДелаХраненияДокументов.Ссылка В (&МассивДокументов)
		|ИТОГИ
		|ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ВыборкаСтроки = Выборка.Выбрать();
		Если ВыборкаСтроки.Следующий() И ВыборкаСтроки.Количество() = 1 Тогда
			Если ВыборкаСтроки.ПоЛичномуСоставу = Истина Тогда
				Результат.Вставить(ВыборкаСтроки.Ссылка, НСтр("ru = 'по личному составу'"));
			ИначеЕсли ВыборкаСтроки.КатегорияДела = Перечисления.КатегорииДел.ВременноеСвыше10 Тогда
				Результат.Вставить(ВыборкаСтроки.Ссылка, НСтр("ru = 'временного (свыше 10 лет) хранения'"));
			ИначеЕсли ВыборкаСтроки.КатегорияДела = Перечисления.КатегорииДел.ВременноеДо10 Тогда
				Результат.Вставить(ВыборкаСтроки.Ссылка, НСтр("ru = 'временного (до 10 лет) хранения'"));
			Иначе
				Результат.Вставить(ВыборкаСтроки.Ссылка, НСтр("ru = 'постоянного хранения'"));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	Возврат Результат;
	
КонецФункции

Функция ПериодыДокументовПоСдаточнойОписи(Документ)
	
	АктуальныеПериоды = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МИНИМУМ(ГОД(ДокументыПредприятия.ДатаРегистрации)) КАК ГодНачала,
		|	МАКСИМУМ(ГОД(ДокументыПредприятия.ДатаРегистрации)) КАК ГодОкончания
		|ИЗ
		|	Документ.ПередачаДелВАрхив.ДелаХраненияДокументов КАК ПередачаДелВАрхивДелаХраненияДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|		ПО ПередачаДелВАрхивДелаХраненияДокументов.ДелоХраненияДокументов = ДокументыПредприятия.Дело
		|ГДЕ
		|	ПередачаДелВАрхивДелаХраненияДокументов.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		АктуальныеПериоды.Добавить(Формат(Выборка.ГодНачала, "ЧГ=0"));
		Если Выборка.ГодНачала <> Выборка.ГодОкончания Тогда
			АктуальныеПериоды.Добавить(Формат(Выборка.ГодОкончания, "ЧГ=0"));
		КонецЕсли;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат АктуальныеПериоды;
	
КонецФункции

#КонецЕсли