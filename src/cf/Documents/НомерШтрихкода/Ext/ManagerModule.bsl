#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Удаляет порцию устаревших данных.
// 
// Возвращаемое значение
//  Булево - Истина, если были найдены устаревшие данные, в противном случае Ложь.
// 
Функция УдалитьПорциюУстаревшихДанных() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЕстьДанныеКУдалению = Ложь;                     
	
	МаксНомер = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(МАКСИМУМ(НомерШтрихкода.Номер), 0) КАК МаксНомер
	               |ИЗ
	               |	Документ.НомерШтрихкода КАК НомерШтрихкода";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		МаксНомер = Выборка.МаксНомер;
		
	КонецЕсли;   
	
	Если МаксНомер = 0 Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 5000
		|	НомерШтрихкода.Ссылка КАК Ссылка,
		|	НомерШтрихкода.Дата КАК Дата
		|ИЗ
		|	Документ.НомерШтрихкода КАК НомерШтрихкода
		|ГДЕ
		|	НомерШтрихкода.Номер <> &Номер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	Запрос.УстановитьПараметр("Номер", МаксНомер);

	РезультатЗапроса = Запрос.Выполнить();
	ЕстьДанныеКУдалению = Не РезультатЗапроса.Пустой();
	
	Если Не ЕстьДанныеКУдалению Тогда
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru='Удаление устаревших данных'"), 
			УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.НомерШтрихкода,, 
			СтрШаблон(
				НСтр("ru = 'Процедура удаления документов НомерШтрихкода завершена успешно, обработано %1 записей'"), 0));
		
		Возврат ЕстьДанныеКУдалению;
		
	КонецЕсли;
	
	Попытка
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ДокументСсылка = Выборка.Ссылка;
			ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
			ДокументОбъект.Удалить();
			
		КонецЦикла;
		
	Исключение
		
		// Записать ошибку в журнал регистрации
		СообщениеОбОшибке = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(НСтр("ru='Ошибка удаления документов НомерШтрихкода'"), 
		УровеньЖурналаРегистрации.Ошибка, 
		, , СообщениеОбОшибке);
		
	КонецПопытки;
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Удаление устаревших данных'"), 
		УровеньЖурналаРегистрации.Информация,
		Метаданные.Документы.НомерШтрихкода,, 
		СтрШаблон(
			НСтр("ru = 'Процедура удаления документов НомерШтрихкода завершена успешно, обработано %1 записей'"), Выборка.Количество()));
	
	Возврат ЕстьДанныеКУдалению;
	
КонецФункции


#КонецОбласти

#КонецЕсли
