#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получить все или часть данных для МЭДО по документу. Ищется только актуальный документ, предыдущие отправки
// хранятся просто для истории.
// 
// Параметры:
//  Документ - ОпределяемыйТип.ПредметМЭДО - Документ
//  Поля - Строка - Поля документа, через запятую, которые нужно получить, можно указать * - т.е. все, включая Ссылка.
//  				Можно получать поля через точку, т.е. передавать Поля, как часть запроса для ВЫБРАТЬ.
//  ДанныеОтвета - см. МЭДОСтруктурыДанных.НовыйОтвет.
// 
// Возвращаемое значение:
//  Структура - Поля зависят переданного параметра Поля, полный состав полей см. ДокументОбъект.ДанныеДокументаМЭДО
Функция ДанныеДокументаМЭДО(Документ, Поля, ДанныеОтвета) Экспорт
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		МЭДО.ЗаписьВЖурналСобытий(
			Перечисления.УровниСобытийМЭДО.Ошибка, 
			НСтр("ru = 'Пустой документ'"),
			НСтр("ru = 'Не указан документ'"),
			НСтр("ru = 'Для получения данных МЭДО по документу не указан сам документ'"),
			ДанныеОтвета);
		Возврат Новый Структура();
	КонецЕсли;
	
	Результат = РезультатЗапросаДанныеДокументаМЭДО(Документ, Поля, Истина);
	Возврат МЭДОСтруктурыДанных.РезультатЗапросаВСтруктуру(Результат);
	
КонецФункции

// Получить все или часть данных для МЭДО по документу, либо только актуальные, либо всю историю.
// 
// Параметры:
//  Документ - ОпределяемыйТип.ПредметМЭДО - Документ
//  Поля - Строка - Поля документа, через запятую, которые нужно получить, можно указать * - т.е. все, включая Ссылка.
//  				Можно получать поля через точку, т.е. передавать Поля, как часть запроса для ВЫБРАТЬ.
//  ТолькоАктуальные - Булево - Учитывать только актуальные данные или всю историю, включая предыдущие отправки.
// 
// Возвращаемое значение:
//  РезультатЗапроса -  Поля результата зависят переданного параметра Поля
Функция РезультатЗапросаДанныеДокументаМЭДО(Документ, Поля, ТолькоАктуальные) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	*
		|ИЗ
		|	Документ.ДанныеДокументаМЭДО КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Документ = &Документ
		|УПОРЯДОЧИТЬ ПО Дата УБЫВ");
	Если Не ТолькоАктуальные Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ ПЕРВЫЕ 1", "ВЫБРАТЬ");
	КонецЕсли;
	
	Если Поля <> "*" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "*", Поля);
	КонецЕсли;
	Запрос.УстановитьПараметр("Документ", Документ);
	Возврат Запрос.Выполнить();
	
КонецФункции

// Обертка - Получить объект данных документа, если он есть. Ищется только актуальный документ, предыдущие отправки
// хранятся просто для истории. Если актуального нет, то создается новый. 
// 
// Параметры:
//  Документ - ОпределяемыйТип.ПредметМЭДО - Документ
//  ДанныеОтвета - см. МЭДОСтруктурыДанных.НовыйОтвет.
// 
// Возвращаемое значение:
//  ДокументОбъект.ДанныеДокументаМЭДО
Функция ОбъектДанныхДокумента(Документ, ДанныеОтвета) Экспорт
	
	ДанныеДокументаВИБ = ДанныеДокументаМЭДО(Документ, "Ссылка", ДанныеОтвета);
	Если Не ДанныеОтвета.Успех Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеДокументаВИБ.Ссылка) Тогда
		Возврат ДанныеДокументаВИБ.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	ДанныеОбъект = СоздатьДокумент();
	ДанныеОбъект.Документ = Документ;
	Если Не ЗначениеЗаполнено(ДанныеОбъект.Дата) Тогда
		ДанныеОбъект.Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Возврат ДанныеОбъект;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Снять признак "Готов к отправке" с исходящего документа - в случае неуспешной отправки.
// 
// Параметры:
//  Документ - ОпределяемыйТип.ПредметМЭДО
//  ДанныеОтвета - см. МЭДОСтруктурыДанных.НовыйЛегкийОтвет.
Процедура СнятьПризнакГотовКОтправке(Документ, ДанныеОтвета) Экспорт
	
	ДанныеМЭДО = ДанныеДокументаМЭДО(Документ, "Ссылка", ДанныеОтвета);
	Если Не ЗначениеЗаполнено(ДанныеМЭДО.Ссылка) Тогда
		Возврат; // на данном этапе отправки ДанныеДокументаМЭДО даже не существует, ничего не надо делать.
	КонецЕсли;
	
	ДанныеОбъект = ДанныеМЭДО.Ссылка.ПолучитьОбъект();
	Если Не ДанныеОбъект.ГотовКОтправке Тогда
		Возврат; // перестраховка, флаг должен стоять.
	КонецЕсли;
	ДанныеОбъект.ГотовКОтправке = Ложь;
	ДанныеОбъект.Отправлен = Ложь;
	Попытка
		ДанныеОбъект.Записать();
	Исключение
		СтекОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()); //@skip-check bsl-legacy-check-static-feature-access
		МЭДО.ЗаписьВЖурналСобытий(
			Перечисления.УровниСобытийМЭДО.Ошибка,
			ДанныеОбъект.Документ,
			Текст_ОшибкаЗаписиДанныхДокумента(),
			СтрШаблон("%1: %2", Текст_ОшибкаЗаписиДанныхДокумента(), СтекОшибки),
			ДанныеОтвета);
	КонецПопытки;
	МЭДО.ЗаписьВЖурналСобытий(
		Перечисления.УровниСобытийМЭДО.Предупреждение,
		Документ,
		МЭДО.Текст_НеуспешнаяОтправка(),
		МЭДО.Текст_СнятиеПризнакаГотовностиКОтправке(),
		ДанныеОтвета);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция Текст_ОшибкаЗаписиДанныхДокумента()
	
	Возврат НСтр("ru = 'Ошибка записи ""Данных документа МЭДО""'");
	
КонецФункции

#КонецОбласти

#КонецЕсли
