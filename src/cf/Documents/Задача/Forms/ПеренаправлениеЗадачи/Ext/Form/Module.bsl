#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗадачиИлиДействия.ЗагрузитьЗначения(Параметры.ЗадачиИлиДействия);
	Если ЗадачиИлиДействия.Количество() > 1 Тогда
		Заголовок = СтрШаблон(
			НСтр("ru = 'Перенаправление задач (%1 шт)'"),
			Параметры.ЗадачиИлиДействия.Количество());
	Конецесли;
	
	ПроверитьПравоПеренаправления();
	
	ЕстьОтКого = Ложь;
	ОтКогоДоступноПеренаправление = Новый Массив;
	Для Каждого ЗадачаИлиДействие Из ЗадачиИлиДействия.ВыгрузитьЗначения() Цикл
		
		Если ТипЗнч(ЗадачаИлиДействие) <> Тип("ДокументСсылка.Задача") Тогда
			Продолжить;
		КонецЕсли;
		
		УчастникиЗадачи = Новый Массив;
		ТаблицаУчастники = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗадачаИлиДействие, "Участники");
		ТаблицаУчастники = ТаблицаУчастники.Выгрузить();
		Для Каждого СтрокаУчастника Из ТаблицаУчастники Цикл
			
			РеквизитыДействия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
				СтрокаУчастника.ДействиеУчастника,
				"Исполнитель, СостояниеУчастникаЗадачи");
			Если Не ЗначениеЗаполнено(РеквизитыДействия.Исполнитель) Тогда
				Продолжить;
			КонецЕсли;
			
			ВидСостояния = РаботаСЗадачамиПовтИсп.ВидСостоянияУчастниковЗадач(
				РеквизитыДействия.СостояниеУчастникаЗадачи);
			
			ЭтоОжидаемоеДействие = Перечисления.ВидыСостоянийУчастниковЗадач.ЭтоОжидаемоеДействие(
				ВидСостояния);
			Если Не ЭтоОжидаемоеДействие Тогда
				Продолжить;
			КонецЕсли;
			
			УчастникиЗадачи.Добавить(РеквизитыДействия.Исполнитель);
			
		КонецЦикла;
		
		Если Не ЕстьОтКого Тогда
			
			ЕстьОтКого = Истина;
			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
				ОтКогоДоступноПеренаправление,
				УчастникиЗадачи);
			
			Продолжить;
			
		КонецЕсли;
		
		ОтКогоДоступноПеренаправление = ОбщегоНазначенияДокументооборотКлиентСервер.ПересечениеМассивов(
			ОтКогоДоступноПеренаправление,
			УчастникиЗадачи);
		
	КонецЦикла;
	
	ОтКого = Справочники.Сотрудники.ПустаяСсылка();
	Кому = Справочники.Сотрудники.ПустаяСсылка();
	
	Если ЕстьОтКого И ОтКогоДоступноПеренаправление.Количество() = 0 Тогда
		
		КлючНазначенияИспользования = "НедоступноеПеренаправление";
		КлючСохраненияПоложенияОкна = "НедоступноеПеренаправление";
		
		ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Нет;
		Элементы.Кому.Видимость = Ложь;
		Элементы.Комментарий.Видимость = Ложь;
		Элементы.ИгнорироватьПредупреждения.Видимость = Ложь;
		
		Элементы.ДекорацияНеНайденыПомещения.Видимость = Истина;
		
	ИначеЕсли ЕстьОтКого И ОтКогоДоступноПеренаправление.Количество() = 1 Тогда
		
		КлючНазначенияИспользования = "ПеренаправлениеАвтора";
		КлючСохраненияПоложенияОкна = "ПеренаправлениеАвтора";
		
		Элементы.ОтКого.Видимость = Истина;
		Элементы.ОтКого.ТолькоПросмотр = Истина;
		ОтКого = ОтКогоДоступноПеренаправление[0];
		
		Элементы.Кому.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
		Элементы.Кому.ПодсказкаВвода = "";
		
	ИначеЕсли ЕстьОтКого И ОтКогоДоступноПеренаправление.Количество() > 1 Тогда
		
		КлючНазначенияИспользования = "ПеренаправлениеАвтора";
		КлючСохраненияПоложенияОкна = "ПеренаправлениеАвтора";
		
		Элементы.ОтКого.Видимость = Истина;
		Элементы.ОтКого.ТолькоПросмотр = Ложь;
		ОтКого = ОтКогоДоступноПеренаправление[0];
		
		Элементы.ОтКого.РежимВыбораИзСписка = Истина;
		Элементы.ОтКого.СписокВыбора.ЗагрузитьЗначения(ОтКогоДоступноПеренаправление);
		
		Элементы.Кому.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
		Элементы.Кому.ПодсказкаВвода = "";
		
	КонецЕсли;
	
	Справочники.ПравилаКоммуникаций.НастроитьПоляПредмета(ЭтаФорма, Элементы.Кому);
	
	ЭтоМобильныйКлиент = ПараметрыСеанса.ЭтоМобильныйКлиент;
	Если ЭтоМобильныйКлиент Тогда
		МК_НастроитьЭлементыФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// Проверка заполнения от кого перенаправить.
	Если ЕстьОтКого Тогда
		ПроверяемыеРеквизиты.Добавить("ОтКого");
	КонецЕсли;
	
	// Проверка заполнения кому перенаправить.
	ПроверяемыеРеквизиты.Добавить("Кому");
	
	// Проверка, что есть исполнители роли, кому перенаправляем.
	Если ТипЗнч(Кому) = Тип("СправочникСсылка.ПолныеРоли")
		И Не ИгнорироватьПредупреждения 
		И Не БизнесПроцессыИЗадачиСервер.ЕстьИсполнителиРоли(Кому) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'На указанную роль не назначено ни одного исполнителя. (Чтобы проигнорировать это предупреждение, установите флажок.)'"),,,
			"Кому",
			Отказ);
		Элементы.ИгнорироватьПредупреждения.Видимость = Истина;
	КонецЕсли;
	
	// Проверки, специфичные для источников задач.
	СообщенияОбОшибках = ИнтеграцияЗадач.ДоступноПеренаправлениеЗадачи(
		ЗадачиИлиДействия.ВыгрузитьЗначения(),
		Кому);
	Для Каждого СообщениеОбОшибке Из СообщенияОбОшибках Цикл
		ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке, , "Кому", , Отказ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РаботаСАдреснойКнигойКлиент.ВыбратьУчастника(ЭтотОбъект, Элемент, СтандартнаяОбработка, Кому);
	
КонецПроцедуры

&НаКлиенте
Процедура КомуОчистка(Элемент, СтандартнаяОбработка)
	
	Кому = ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка");
	
КонецПроцедуры

&НаКлиенте
Процедура КомуОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не РаботаСАдреснойКнигойКлиент.ОбработатьВыборУчастника(
		ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	СотрудникиКлиент.ОбработкаВыбораКонтейнера(
		Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КомуАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	РаботаСАдреснойКнигойКлиент.ПодобратьУчастника(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных,
		Ожидание, СтандартнаяОбработка, Кому);
	
КонецПроцедуры

&НаКлиенте
Процедура КомуОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	КомуАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, 0, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Перенаправить(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПеренаправитьЗавершение", ЭтотОбъект);
	ОтсутствийНет =
		ОтсутствияКлиент.ПроверитьОтсутствиеПоЗадачам(
			ЗадачиИлиДействия.ВыгрузитьЗначения(),
			Кому,
			ОписаниеОповещения);
	Если Не ОтсутствийНет Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПеренаправитьЗавершение(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПеренаправления = Новый Структура("ОтКого, Кому, Комментарий");
	ПараметрыПеренаправления.ОтКого = ОтКого;
	ПараметрыПеренаправления.Кому = Кому;
	ПараметрыПеренаправления.Комментарий = Комментарий;
	
	Закрыть(ПараметрыПеренаправления);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьПравоПеренаправления()
	
	Если Не ДокументооборотПраваДоступаПовтИсп.ВключеноИспользованиеПравДоступа() Тогда
		Возврат;
	КонецЕсли;
	
	ПраваНаЗадачиИлиДействия = ДокументооборотПраваДоступа.ПраваПользователейПоОбъектам(
		ЗадачиИлиДействия.ВыгрузитьЗначения(),
		Истина,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
			Пользователи.ТекущийПользователь()));
	Для Каждого ЗадачаИлиДействие Из ЗадачиИлиДействия.ВыгрузитьЗначения() Цикл
		
		ПраваПоОбъекту = ПраваНаЗадачиИлиДействия.Найти(ЗадачаИлиДействие, "ОбъектДоступа");
		Если ПраваПоОбъекту = Неопределено Или ПраваПоОбъекту.Изменение <> Истина Тогда
			ВызватьИсключение СтрШаблон(
				НСтр("ru = 'Недостаточно прав для перенаправления %1'"),
				ПолучитьНавигационнуюСсылку(ЗадачаИлиДействие));
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции_МобильныйКлиент

&НаСервере
Процедура МК_НастроитьЭлементыФормы()
	
	СворачиваниеЭлементовПоВажности = СворачиваниеЭлементовФормыПоВажности.НеИспользовать;
	ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	
	Элементы.МК_НижнийБлок.Видимость = Истина;
	Элементы.Переместить(Элементы.Перенаправить, Элементы.МК_НижнийБлок);
	Элементы.Переместить(Элементы.Отмена, Элементы.МК_НижнийБлок);
	
	МК.ОформитьАкцентнуюКнопку(Элементы.Перенаправить);
	МК.ОформитьАкцентнуюКнопку(Элементы.Отмена);
	
	Элементы.Отмена.ЦветФона = ЦветаСтиля.ОтметкаОтрицательногоВыполненияЗадачи;
	Элементы.Отмена.ЦветРамки = ЦветаСтиля.ОтметкаОтрицательногоВыполненияЗадачи;
	
	МК.ВыровнятьЭлементФормы(Элементы.ОтКого);
	МК.ВыровнятьЭлементФормы(Элементы.Кому);
	
	Элементы.ИгнорироватьПредупреждения.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	Элементы.ИгнорироватьПредупреждения.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	
	Элементы.Комментарий.РастягиватьПоВертикали = Истина;

КонецПроцедуры
	
#КонецОбласти

#КонецОбласти