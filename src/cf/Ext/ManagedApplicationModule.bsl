///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// СтандартныеПодсистемы

// Хранилище глобальных переменных.
//
// ПараметрыПриложения - Соответствие из КлючИЗначение:
//   * Ключ - Строка - имя переменной в формате "ИмяБиблиотеки.ИмяПеременной";
//   * Значение - Произвольный - значение переменной.
//
// Пример инициализации:
//   ИмяПараметра = "СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации";
//   Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
//     ПараметрыПриложения.Вставить(ИмяПараметра, Новый СписокЗначений);
//   КонецЕсли;
//  
// Пример использования:
//   ПараметрыПриложения["СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации"].Добавить(...);
//   ПараметрыПриложения["СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации"] = ...;
Перем ПараметрыПриложения Экспорт;
// Конец СтандартныеПодсистемы

#Область ГлобальныеПеременныхДляНагрузочногоТестирования

// Сценарии пользователя для проведения нагрузочного теста:
Перем НТТекущиеСценарии Экспорт; // Массив Из Строка

// Порядковый номер выполняемого сценария:
Перем НТИндексТекущегоСценария Экспорт; // Число

// Выполняемый сценарий:
Перем НТТекущийСценарий Экспорт; // Массив из См. НагрузочноеТестирование.НовыйШагСценария

// Порядковый номер выполняемого шага текущего сценария:
Перем НТИндексТекущегоШагаСценария Экспорт; // Число

#КонецОбласти

Перем СотрудникиТекущегоПользователя Экспорт;
Перем РолиТекущегоПользователя Экспорт;
Перем ОсновнойСотрудник Экспорт;

// РаботаСФайлами
Перем КомпонентаПолученияКартинкиИзБуфера Экспорт; // компонента получения картинки из буфера обмена
// Конец РаботаСФайлами

// Почта
Перем ВыполненаПроверкаНаличияНесохраненныхПисем Экспорт; // Выполнен поиск на диске несохраненных писем
Перем НеУдалятьАвтосохраненныеФайлы Экспорт; // Если Истина, то при выходе не будут удаляться автосохраненные файлы
Перем ПараметрыПроверкиОрфографииТекст Экспорт;
// Почта

Перем ДрайверСканераШтрихкодов Экспорт; // Сканер штрихкодов
Перем КомпонентаРаспознаванияШтрихкодов Экспорт; // Компонента распознавания штрихкодов

// Переменные общего обработчика ожидания
Перем ДатаПоследнейПроверкиПочты Экспорт;
Перем ДатаПоследнегоСохраненияЗамеров Экспорт;
Перем ИнтервалПроверкиПочты Экспорт;
Перем ИнтервалСохраненияЗамеров Экспорт;
Перем ДатаПоследнейЗаписиЖурналаРегистрации Экспорт;
Перем ДатаПоследнейПроверкиОчисткиКешаФайлов Экспорт;
Перем ДатаПоследнегоАвтопомещенияФайлов Экспорт;

Перем ПараметрыФормыНастройкиОтложенногоСтарта Экспорт;

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередНачаломРаботыСистемы()
	
#Если МобильныйКлиент Тогда
	Если ОсновнойСерверДоступен() = Ложь Тогда
		Возврат;
	КонецЕсли;
#КонецЕсли
	
	// СтандартныеПодсистемы
#Если МобильныйКлиент Тогда
	Выполнить("СтандартныеПодсистемыКлиент.ПередНачаломРаботыСистемы()");
#Иначе
	СтандартныеПодсистемыКлиент.ПередНачаломРаботыСистемы();
#КонецЕсли
	// Конец СтандартныеПодсистемы
	
	СотрудникиСобытияКлиент.ПередНачаломРаботыСистемы();

КонецПроцедуры

Процедура ПриНачалеРаботыСистемы()
	
	// СтандартныеПодсистемы
#Если МобильныйКлиент Тогда
	Выполнить("СтандартныеПодсистемыКлиент.ПриНачалеРаботыСистемы()");
#Иначе
	СтандартныеПодсистемыКлиент.ПриНачалеРаботыСистемы();
#КонецЕсли
	// Конец СтандартныеПодсистемы
	
	// НагрузочноеТестирование
	#Если Не ВебКлиент Тогда
		НагрузочноеТестированиеКлиент.ЗапуститьВыполнениеСценариев(ПараметрЗапуска);
	#КонецЕсли
	// Конец НагрузочноеТестирование
	
КонецПроцедуры

Процедура ПриВыбореДействияСообщенияСистемыВзаимодействия(Сообщение, Действие)
	
	РаботаСЧатБотомКлиент.ОбработкаДействияСообщения(Сообщение, Действие, Неопределено);
	
КонецПроцедуры

Процедура ПередЗавершениемРаботыСистемы(Отказ, ТекстПредупреждения)
	
	// СтандартныеПодсистемы
#Если МобильныйКлиент Тогда
	Выполнить("СтандартныеПодсистемыКлиент.ПередЗавершениемРаботыСистемы(Отказ, ТекстПредупреждения)");
#Иначе
	СтандартныеПодсистемыКлиент.ПередЗавершениемРаботыСистемы(Отказ, ТекстПредупреждения);
#КонецЕсли
	// Конец СтандартныеПодсистемы
	
	Если Не Отказ Тогда
		РаботаСТорговымОборудованием.ОтключитьСканерШтрихкодов();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормыВыбораПользователейСистемыВзаимодействия(
			НазначениеВыбора, Форма, ИдентификаторОбсуждения, Параметры, ВыбраннаяФорма, СтандартнаяОбработка)
			
	ОбсужденияДокументооборотКлиент.ОбработкаПолученияФормыВыбораПользователейСистемыВзаимодействия(
			НазначениеВыбора, Форма, ИдентификаторОбсуждения, Параметры, ВыбраннаяФорма, СтандартнаяОбработка)
	
КонецПроцедуры

Процедура ОбработкаВнешнегоСобытия(Источник, Событие, Данные)
	
	Если Источник = "ПоискДокументовПоШтрихкоду" Тогда
		ШтрихкодированиеКлиент.ПоискПоШтрихкоду(Данные, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗавершенииРаботыСистемы()
	
	ВстроеннаяПочтаКлиент.УдалитьАвтосохраненныеФайлы();
	
КонецПроцедуры

Процедура АвтоПодборПользователейСистемыВзаимодействия(Текст, ДанныеВыбора, НазначениеВыбора, Форма, ИдентификаторОбсуждения)
	
	ОбсужденияДокументооборотКлиент.АвтоПодборПользователейСистемыВзаимодействия(
		Текст, ДанныеВыбора, НазначениеВыбора, Форма, ИдентификаторОбсуждения)
	
КонецПроцедуры

Процедура ОбработкаПереходаПоНавигационнойСсылке(ДанныеПереходаПоНавигационнойСсылке, СтандартнаяОбработка)
	
#Если Не ТолстыйКлиентУправляемоеПриложение Тогда
	СсылкаДляПерехода = ДанныеПереходаПоНавигационнойСсылке.ОтносительнаяНавигационнаяСсылка;
	БазоваяСсылкаДляПерехода = ДанныеПереходаПоНавигационнойСсылке.БазоваяНавигационнаяСсылка;
	ПараметрыСсылки = ДанныеПереходаПоНавигационнойСсылке.ПараметрыНавигационнойСсылки;
#Иначе
	СсылкаДляПерехода = "";
	БазоваяСсылкаДляПерехода = "";
	ПараметрыСсылки = Новый Соответствие;
#КонецЕсли
	
	ТипСсылки = РаботаС_HTMLКлиент.ОпределитьТипСсылки1СДокументооборота(СсылкаДляПерехода);
	
	Если СтрНайти(СсылкаДляПерехода, "ДействиеЗадачи") И ПараметрыСсылки["ref"] <> Неопределено Тогда
		
		КарточкаОткрыта = РаботаСЗадачамиКлиент.ОткрытьКарточкуИсполнителяЗадачи(СсылкаДляПерехода);
		
		Если КарточкаОткрыта Тогда
			
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
	
	ИначеЕсли ПараметрыСсылки[ИнтеграцияShareДокументооборотКлиентСервер.ПараметрОшибкиПравДоступа()]
		<> Неопределено Тогда
		
		СтандартнаяОбработка = Ложь;
		СсылкаДляПерехода = СтрЗаменить(СсылкаДляПерехода,
				ИнтеграцияShareДокументооборотКлиентСервер.УсловиеОшибкиПравДоступа(), "");
		ИнтеграцияShareДокументооборотКлиент.ВывестиОписаниеОшибкиДоступа(Неопределено, СсылкаДляПерехода);
		
	ИначеЕсли РаботаС_HTMLКлиент.СсылкуМожноОбработать(ТипСсылки, ПараметрыСсылки) Тогда
		
		СтандартнаяОбработка = Ложь;
		РаботаС_HTMLКлиент.ОбработатьСсылку1СДокументооборотаБезСхемы(СсылкаДляПерехода,,
			БазоваяСсылкаДляПерехода);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаФормированияКомандВходящегоЗапросаПоделиться(ДанныеЗапросаПоделиться, Команды)

#Если МобильныйКлиент Тогда
	МК_Клиент.ДобавитьКомандыПоделиться(ДанныеЗапросаПоделиться, Команды);
#КонецЕсли

КонецПроцедуры

Процедура ПриГлобальномПоиске(СтрокаПоиска, ПланПоиска)
	
	// СервисShare
	ИнтеграцияShareКлиент.ПриГлобальномПоиске(СтрокаПоиска, ПланПоиска);
	// Конец СервисShare

КонецПроцедуры

Процедура ПриВыбореРезультатаГлобальногоПоиска(ЭлементРезультата, СтандартнаяОбработка)
	
	// СервисShare
	ИнтеграцияShareКлиент.ПриВыбореРезультатаГлобальногоПоиска(ЭлементРезультата, СтандартнаяОбработка);
	// Конец СервисShare

КонецПроцедуры
#КонецОбласти