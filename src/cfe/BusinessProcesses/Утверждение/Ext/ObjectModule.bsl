
&ИзменениеИКонтроль("ОбработкаЗаполнения")
Процедура ЦППК_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ЭтоНовый() Тогда 
		Дата = ТекущаяДатаСеанса();
		Если Не ЗначениеЗаполнено(Автор) Тогда
			Автор = Сотрудники.ОсновнойСотрудник();
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОбрабатывающийРезультат) Тогда
			ОбрабатывающийРезультат = Сотрудники.ОсновнойСотрудник();
		КонецЕсли;
		Важность = Перечисления.ВариантыВажностиОбъектов.Обычная;
		НомерИтерации = 0;

		Если Не ЗначениеЗаполнено(Проект) Тогда 
			Проект = РаботаСПроектами.ПолучитьПроектПоУмолчанию();
		КонецЕсли;
	КонецЕсли;

	Если ДанныеЗаполнения <> Неопределено И ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Тогда
		Мультипредметность.ПередатьПредметыПроцессу(ЭтотОбъект, ДанныеЗаполнения, Ложь, Истина);
	КонецЕсли;

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		ЗадачаСсылка = ДанныеЗаполнения;
		ЗаполнитьБизнесПроцессПоЗадаче(ЗадачаСсылка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда

		Если ДанныеЗаполнения.Свойство("ВедущаяЗадача") Тогда
			ВедущаяЗадача = ДанныеЗаполнения.ВедущаяЗадача;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("Важность") Тогда
			Важность = ДанныеЗаполнения.Важность;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("Наименование") Тогда
			Наименование = ДанныеЗаполнения.Наименование;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("Описание") Тогда
			Описание = ДанныеЗаполнения.Описание;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("Исполнитель") Тогда
			Исполнитель = ДанныеЗаполнения.Исполнитель;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("ИдентификаторИсполнителя") Тогда
			ИдентификаторИсполнителя = ДанныеЗаполнения.ИдентификаторИсполнителя;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("ВариантУстановкиСрокаИсполнения") Тогда
			ВариантУстановкиСрокаИсполнения = ДанныеЗаполнения.ВариантУстановкиСрокаИсполнения;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("СрокИсполнения") Тогда
			СрокИсполнения = ДанныеЗаполнения.СрокИсполнения;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("СрокИсполненияДни") Тогда
			СрокИсполненияДни = ДанныеЗаполнения.СрокИсполненияДни;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("СрокИсполненияЧасы") Тогда
			СрокИсполненияЧасы = ДанныеЗаполнения.СрокИсполненияЧасы;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("СрокИсполненияЧасы") Тогда
			СрокИсполненияЧасы = ДанныеЗаполнения.СрокИсполненияЧасы;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("СрокИсполненияМинуты") Тогда
			СрокИсполненияМинуты = ДанныеЗаполнения.СрокИсполненияМинуты;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("Автор") Тогда
			Автор = ДанныеЗаполнения.Автор;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("ИдентификаторОбрабатывающегоРезультат") Тогда
			ИдентификаторОбрабатывающегоРезультат = ДанныеЗаполнения.ИдентификаторОбрабатывающегоРезультат;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("ВариантУстановкиСрокаОбработкиРезультатов") Тогда
			ВариантУстановкиСрокаОбработкиРезультатов = ДанныеЗаполнения.ВариантУстановкиСрокаОбработкиРезультатов;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("СрокОбработкиРезультатов") Тогда
			СрокОбработкиРезультатов = ДанныеЗаполнения.СрокОбработкиРезультатов;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("СрокОбработкиРезультатовДни") Тогда
			СрокОбработкиРезультатовДни = ДанныеЗаполнения.СрокОбработкиРезультатовДни;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("СрокОбработкиРезультатовЧасы") Тогда
			СрокОбработкиРезультатовЧасы = ДанныеЗаполнения.СрокОбработкиРезультатовЧасы;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("СрокОбработкиРезультатовМинуты") Тогда
			СрокОбработкиРезультатовМинуты = ДанныеЗаполнения.СрокОбработкиРезультатовМинуты;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("КоличествоИтераций") Тогда
			КоличествоИтераций = ДанныеЗаполнения.КоличествоИтераций;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("ТрудозатратыПланИсполнителя") Тогда
			ТрудозатратыПланИсполнителя = ДанныеЗаполнения.ТрудозатратыПланИсполнителя;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("ТрудозатратыПланОбрабатывающегоРезультат") Тогда
			ТрудозатратыПланОбрабатывающегоРезультат = ДанныеЗаполнения.ТрудозатратыПланОбрабатывающегоРезультат;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("Шаблон") Тогда
			Мультипредметность.ЗаполнитьПредметыПроцессаПоШаблону(ДанныеЗаполнения.Шаблон, ЭтотОбъект);
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("Предметы") Тогда
			Мультипредметность.ПередатьПредметыПроцессу(ЭтотОбъект, ДанныеЗаполнения.Предметы, Ложь, Истина);
			Проект = МультипредметностьПереопределяемый.ПолучитьОсновнойПроектПоПредметам(ДанныеЗаполнения.Предметы);
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("АвторСобытия") Тогда
			Автор = ДанныеЗаполнения.АвторСобытия;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("Шаблон") Тогда
			ЗаполнитьПоШаблону(ДанныеЗаполнения.Шаблон);
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("ЗадачаИсполнителя") Тогда
			ЗадачаСсылка = ДанныеЗаполнения.ЗадачаИсполнителя;
			ЗаполнитьБизнесПроцессПоЗадаче(ЗадачаСсылка);
			#Вставка
			//+ЦППК САНФ-023288 31.01.2024			
			ТипыПредметов = Новый Массив;
			ТипыПредметов.Добавить(Тип("СправочникСсылка.ДокументыПредприятия"));
			ОбрабатываемыеПредметы = МультипредметностьКлиентСервер.ПолучитьМассивПредметовОбъекта(ЭтотОбъект, ТипыПредметов, Истина);
			СрокИсполнения = ЦППК_ОбщийМодульВызовСервера.ЗаполнитьСрокИсполнения(ОбрабатываемыеПредметы, ДанныеЗаполнения.ЗадачаИсполнителя);
			
			Если ЗначениеЗаполнено(СрокИсполнения) Тогда
				
				ВариантУстановкиСрокаИсполнения = Перечисления.ВариантыУстановкиСрокаИсполнения.ТочныйСрок;
				ВариантУстановкиСрокаОбработкиРезультатов = Перечисления.ВариантыУстановкиСрокаИсполнения.ТочныйСрок;
				
				СрокИсполненияПроцесса = СрокИсполнения;
				
				СрокИсполнения = СрокИсполнения;
				СрокИсполненияДни = (НачалоДня(СрокИсполнения) - НачалоДня(Дата)) / (60 * 60 * 24);
				СрокИсполненияМинуты = Минута(СрокИсполнения);   
				СрокИсполненияЧасы = Час(СрокИсполнения);
				
				СрокОбработкиРезультатов = СрокИсполнения;
				СрокОбработкиРезультатовДни = (НачалоДня(СрокИсполнения) - НачалоДня(Дата)) / (60 * 60 * 24);
				СрокОбработкиРезультатовМинуты = Минута(СрокИсполнения);   
				СрокОбработкиРезультатовЧасы = Час(СрокИсполнения);
				
			КонецЕсли;
			//-ЦППК 31.01.2024					
			#КонецВставки
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("ПроектнаяЗадача") Тогда
			ЗаполнитьПоПроектнойЗадаче(ДанныеЗаполнения.ПроектнаяЗадача);
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("Проект") Тогда
			Проект = ДанныеЗаполнения.Проект;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("Исполнители") Тогда
			Исполнитель = ДанныеЗаполнения.Исполнители[0];
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("ОбрабатывающийРезультат") Тогда
			ОбрабатывающийРезультат = ДанныеЗаполнения.ОбрабатывающийРезультат;
		КонецЕсли;

		ТипыПисем = МультипредметностьПереопределяемый.ПолучитьТипыПисем();
		ОсновныеПисьма = МультипредметностьКлиентСервер.ПолучитьМассивПредметовОбъекта(ЭтотОбъект, ТипыПисем, Истина);
		Для Каждого Письмо Из ОсновныеПисьма Цикл
			Тема = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Письмо, "Тема");
			Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Письмо, "Проект");
			Если Не ЗначениеЗаполнено(Наименование) Тогда
				Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Утвердить ""%1""'"),
				Тема);
			КонецЕсли;
			Прервать;
		КонецЦикла;

	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ПроектныеЗадачи") Тогда 

		ЗаполнитьПоПроектнойЗадаче(ДанныеЗаполнения);

	КонецЕсли;

	Если Не ЗначениеЗаполнено(Наименование) И Предметы.Количество() > 0 Тогда
		МультипредметностьКлиентСервер.ЗаполнитьНаименованиеПроцесса(ЭтотОбъект, НСтр("ru = 'Утвердить'"));
	КонецЕсли;
	
	#Вставка
	//++МельниченкоНН 16.08.2024 САНФ-027815
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Наименование) И ДанныеЗаполнения.Свойство("ЗадачаИсполнителя") Тогда
		ЦППК_ОбщийМодульВызовСервера.СформироватьНаименованиеБП_ПоПриложениямЗадачи(ЭтотОбъект, ДанныеЗаполнения.ЗадачаИсполнителя);
	КонецЕсли;
	//--МельниченкоНН 16.08.2024 САНФ-027815
	#КонецВставки
	
	БизнесПроцессыИЗадачиСервер.ЗаполнитьГлавнуюЗадачу(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры
