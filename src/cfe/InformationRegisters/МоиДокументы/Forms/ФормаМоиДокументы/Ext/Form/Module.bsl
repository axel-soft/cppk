
&НаСервере
&ИзменениеИКонтроль("ЗаполнитьСписок")
Процедура ЦППК_ЗаполнитьСписок()
	
	Список.Очистить(); СписокПолный.Очистить();
	ПричиныДобавления.Очистить();
	ТипыДокументов.Очистить();
	Проекты.Очистить();
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МоиДокументы.Документ КАК Документ,
#Вставка
		|	ПРЕДСТАВЛЕНИЕ(МоиДокументы.Документ) КАК Наименование,
#КонецВставки
		|	МоиДокументы.СрокИсполнения КАК СрокИсполнения,
		|	МоиДокументы.Причина,
		|	МоиДокументы.Просрочен,
		|	МоиДокументы.ВидДокумента,
		|	МоиДокументы.Контрагент,
		|	МоиДокументы.ДатаДокумента,
		|	МоиДокументы.Проект,
		|	МоиДокументы.Представление,
		|	МоиДокументы.Прочтен,
		|	МоиДокументы.Сотрудник,
		|	МоиДокументы.ВидКорреспонденции,
		|	МоиДокументы.ПредставлениеДокумента
		|ИЗ
		|	МоиДокументы КАК МоиДокументы
		|ГДЕ
		|	&УсловиеОтбора
		|
		|ИТОГИ ПО
		|	Документ");
	
	ЧастьТекстаЗапросаУсловиеОтбора =
		"ГДЕ
		|	&УсловиеОтбора";
	Если Не СтрНайти(Запрос.Текст, ЧастьТекстаЗапросаУсловиеОтбора) Тогда
		// Запрос всегда должен быть в консистентном состоянии с данной частью текста запроса.
		ВызватьИсключение НСтр("ru = 'Не найден текста запроса условия отбора.'");
	КонецЕсли;
	Если КлючНазначенияИспользования = "ОтображениеПросроченныхДокументов" Тогда
		УсловиеОтбора =
			"ГДЕ
			|	МоиДокументы.Просрочен";
	ИначеЕсли КлючНазначенияИспользования = "ОтображениеИстекающихДокументов" Тогда
		УсловиеОтбора =
			"ГДЕ
			|	МоиДокументы.Истекает";
	Иначе
		УсловиеОтбора = "";
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, ЧастьТекстаЗапросаУсловиеОтбора, УсловиеОтбора);
	
	Причины = ОтмеченныеПричины.ВыгрузитьЗначения();
	
	Запрос.МенеджерВременныхТаблиц = МоиДокументы.ВременнаяТаблицаМоиДокументы(Причины);
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	
	Пока ВыборкаДокумент.Следующий() Цикл
		Документ = ВыборкаДокумент.Документ;
		Причина = ""; ДатаДокумента = Дата(1, 1, 1);
		ПредставлениеДокумента = "";
		Просрочен = Ложь;
		Прочтен = Истина;
		ВидДокумента = Неопределено;
		Контрагент = Неопределено;
		Проект = Неопределено; ПроектУчтен = Ложь;
		Представление = "";
		Сотрудник = Неопределено;
		ВидКорреспонденции = Неопределено;
		
		ВыборкаДетали = ВыборкаДокумент.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			СтрокаПричина = Строка(ВыборкаДетали.Причина);
			Если СтрНайти(Причина, СтрокаПричина) = 0 Тогда
				Причина = Причина + СтрокаПричина + Символы.ПС;
			КонецЕсли;
			
			Если ВыборкаДетали.Просрочен Тогда 
				Просрочен = Истина;
			КонецЕсли;
			
			Если ВыборкаДетали.Прочтен = Ложь Тогда 
				Прочтен = Ложь;
			КонецЕсли;
			
			ПредставлениеДокумента = ВыборкаДетали.ПредставлениеДокумента;
			ВидДокумента = ВыборкаДетали.ВидДокумента;
			Контрагент = ВыборкаДетали.Контрагент;
			ДатаДокумента = ВыборкаДетали.ДатаДокумента;
			Проект = ВыборкаДетали.Проект;
			Представление = ВыборкаДетали.Представление;
			Сотрудник = ВыборкаДетали.Сотрудник;
			ВидКорреспонденции = ВыборкаДетали.ВидКорреспонденции;
			Если ВидГруппировки = "ПричинаДобавления" Тогда
				СтрПричина = ПричиныДобавления.НайтиСтроки(
					Новый Структура("Причина", СтрокаПричина));
				
				Если СтрПричина.Количество() = 0 Тогда 
					НовСтрока = ПричиныДобавления.Добавить();
					НовСтрока.Причина = СтрокаПричина;
					НовСтрока.Количество = 1;
				Иначе 
					СтрПричина[0].Количество = СтрПричина[0].Количество + 1;
				КонецЕсли;
				
			ИначеЕсли ВидГруппировки = "Проект" И Не ПроектУчтен Тогда
				СтрПроект = Проекты.НайтиСтроки(Новый Структура("Проект", Проект));
				ПроектУчтен = Истина; 
				
				Если СтрПроект.Количество() = 0 Тогда 
					НовСтрока = Проекты.Добавить();
					НовСтрока.Проект = Проект;
					НовСтрока.Количество = 1;
					НовСтрока.Представление = Представление;
				Иначе 
					СтрПроект[0].Количество = СтрПроект[0].Количество + 1;
				КонецЕсли;
			
			КонецЕсли;
		КонецЦикла;
		
		ТипДокумента = СокрЛП(ТипЗнч(ВыборкаДокумент.Документ));
		
		Если ВидГруппировки = "ТипДокумента" И ДоступныхТиповДокументов > 1 Тогда
			СтрТипы = ТипыДокументов.НайтиСтроки(Новый Структура("Тип", ТипДокумента));
			
			Если СтрТипы.Количество() = 0 Тогда 
				НовСтрока = ТипыДокументов.Добавить();
				НовСтрока.Тип = ТипДокумента;
				НовСтрока.Количество = 1;
			Иначе 
				СтрТипы[0].Количество = СтрТипы[0].Количество + 1;
			КонецЕсли;
		КонецЕсли;
		
		Причина = Лев(Причина, СтрДлина(Причина)-1);
		
		НоваяСтрока = Список.Добавить();
		НоваяСтрока.Документ = Документ;
		НоваяСтрока.Наименование = ПредставлениеДокумента;
		НоваяСтрока.Причина = Причина;
		НоваяСтрока.Просрочен = Просрочен;
		НоваяСтрока.Прочтен = Прочтен;
		НоваяСтрока.ВидДокумента = ВидДокумента;
		НоваяСтрока.Контрагент = Контрагент;
		НоваяСтрока.ДатаДокумента = ДатаДокумента;
		НоваяСтрока.ТипДокумента = ТипДокумента;
		НоваяСтрока.Проект = Проект;
		НоваяСтрока.Сотрудник = Сотрудник;
		НоваяСтрока.ВидКорреспонденции = ВидКорреспонденции;
		
		СтрокаПолный = СписокПолный.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПолный, НоваяСтрока);
	КонецЦикла;
	
	Элементы.ФормаОтборДобавленВручную.Пометка = Ложь;
	Элементы.ФормаОтборНазначенаЗадачаМне.Пометка = Ложь;
	Элементы.ФормаОтборОтправленаЗадачаОтМеня.Пометка = Ложь;
	Элементы.ФормаОтборЯвляюсьАвторомДокумента.Пометка = Ложь;
	Элементы.ФормаОтборЯвляюсьОтветственнымЗаДокумент.Пометка = Ложь;
	Элементы.ФормаОтборЯвляюсьПодписантомДокумента.Пометка = Ложь;
	Элементы.ФормаОтборЯвляюсьАвторомУтверждения.Пометка = Ложь;
	
	Если ОтмеченныеПричины.НайтиПоЗначению(
			Перечисления.ПричиныДобавленияВМоиДокументы.ДобавленВручную) <> Неопределено Тогда 
		Элементы.ФормаОтборДобавленВручную.Пометка = Истина;
	КонецЕсли;	
	Если ОтмеченныеПричины.НайтиПоЗначению(
			Перечисления.ПричиныДобавленияВМоиДокументы.НазначенаЗадачаМне) <> Неопределено Тогда 
		Элементы.ФормаОтборНазначенаЗадачаМне.Пометка = Истина;
	КонецЕсли;	
	Если ОтмеченныеПричины.НайтиПоЗначению(
			Перечисления.ПричиныДобавленияВМоиДокументы.ОтправленаЗадачаОтМеня) <> Неопределено Тогда 
		Элементы.ФормаОтборОтправленаЗадачаОтМеня.Пометка = Истина;
	КонецЕсли;	
	Если ОтмеченныеПричины.НайтиПоЗначению(
			Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомДокумента) <> Неопределено Тогда 
		Элементы.ФормаОтборЯвляюсьАвторомДокумента.Пометка = Истина;
	КонецЕсли;	
	Если ОтмеченныеПричины.НайтиПоЗначению(
			Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьОтветственнымЗаДокумент) <> Неопределено Тогда 
		Элементы.ФормаОтборЯвляюсьОтветственнымЗаДокумент.Пометка = Истина;
	КонецЕсли;
	Если ОтмеченныеПричины.НайтиПоЗначению(
			Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьПодписантомДокумента) <> Неопределено Тогда 
		Элементы.ФормаОтборЯвляюсьПодписантомДокумента.Пометка = Истина;
	КонецЕсли;
	Если ОтмеченныеПричины.НайтиПоЗначению(
			Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомУтвержденияДокумента) <> Неопределено Тогда 
		Элементы.ФормаОтборЯвляюсьАвторомУтверждения.Пометка = Истина;
	КонецЕсли;
	
	КоличествоСтрок = Список.Количество();
	Если КоличествоСтрок > 0 Тогда
		
		Если КлючНазначенияИспользования = "ОтображениеПросроченныхДокументов" Тогда
			Заголовок = НСтр("ru = 'Просроченные документы (%1)'");
		ИначеЕсли КлючНазначенияИспользования = "ОтображениеИстекающихДокументов" Тогда
			Заголовок = НСтр("ru = 'Документы с истекающим сроком действия/исполнения (%1)'");
		Иначе
			Заголовок = НСтр("ru = 'Мои документы (%1)'");
		КонецЕсли;
		
		Заголовок = СтрШаблон(Заголовок, КоличествоСтрок);
	Иначе
		Если КлючНазначенияИспользования = "ОтображениеПросроченныхДокументов" Тогда
			Заголовок = НСтр("ru = 'Просроченные документы'");
		ИначеЕсли КлючНазначенияИспользования = "ОтображениеИстекающихДокументов" Тогда
			Заголовок = НСтр("ru = 'Документы с истекающим сроком действия/исполнения'");
		Иначе
			Заголовок = НСтр("ru = 'Мои документы'");
		КонецЕсли;
	КонецЕсли;
	
	ТипыДокументов.Сортировать("Тип");
	ПричиныДобавления.Сортировать("Причина");
	Проекты.Сортировать("Представление");
	Список.Сортировать(СортироватьПо + " " + НаправлениеСортировки);
	СписокПолный.Сортировать(СортироватьПо + " " + НаправлениеСортировки);
	УстановитьПараметрыГруппировокСервер(ЭтотОбъект);
	
КонецПроцедуры
