
&ИзменениеИКонтроль("ВыполнитьЗадачуСПараметрамиНемедленно")
Процедура ЦППК_ВыполнитьЗадачуСПараметрамиНемедленно(Задача, ПараметрыВыполнения, ОтключитьОбновлениеЗадач, ОтключитьПроверкуВыполнения)

	НачатьТранзакцию();
	Попытка

		Если ТипЗнч(Задача) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
			ЗаблокироватьДанныеДляРедактирования(Задача);
			ЗадачаОбъект = Задача.ПолучитьОбъект();
			РазблокироватьЗадачу = Истина;
		Иначе
			ЗадачаОбъект = Задача;
			РазблокироватьЗадачу = Ложь;
		КонецЕсли;

		БизнесПроцессМенеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ЗадачаОбъект.БизнесПроцесс);

		Если ПараметрыВыполнения <> Неопределено Тогда

			БизнесПроцессМенеджер.ОбработкаПередВыполнениемЗадачи(Задача.Ссылка, ЗадачаОбъект.БизнесПроцесс,
			ЗадачаОбъект.ТочкаМаршрута, ПараметрыВыполнения);

			Если ПараметрыВыполнения.Свойство("РезультатВыполнения") Тогда
				ЗадачаОбъект.РезультатВыполнения = ПараметрыВыполнения.РезультатВыполнения;
			КонецЕсли;

			Если ПараметрыВыполнения.Свойство("ДатаИсполнения") Тогда
				ЗадачаОбъект.ДатаИсполнения = ПараметрыВыполнения.ДатаИсполнения;
			КонецЕсли;

			Если ПараметрыВыполнения.Свойство("ИсполнительЗадачи") Тогда
				ЗадачаОбъект.Исполнитель= ПараметрыВыполнения.ИсполнительЗадачи;
			КонецЕсли;

			Если ПараметрыВыполнения.Свойство("ИсполнительЗадачиПоПочте") Тогда
				ЗадачаОбъект.Исполнитель= ПараметрыВыполнения.ИсполнительЗадачиПоПочте;
			КонецЕсли;

			Если ПараметрыВыполнения.Свойство("ФактическийИсполнительЗадачи") Тогда
				ЗадачаОбъект.ДополнительныеСвойства.Вставить(
				"ФактическийИсполнительЗадачи", ПараметрыВыполнения.ФактическийИсполнительЗадачи);
			КонецЕсли;

			Если ПараметрыВыполнения.Свойство("ОснованиеФактическогоИсполнителя") Тогда
				ЗадачаОбъект.ДополнительныеСвойства.Вставить(
				"ОснованиеФактическогоИсполнителя", ПараметрыВыполнения.ОснованиеФактическогоИсполнителя);
			КонецЕсли;

			Если ПараметрыВыполнения.Свойство("ПользовательИсполнитель") Тогда

				ПользователиДокументооборот.УстановитьОлицетворяемогоПользователя(
				ПараметрыВыполнения.ПользовательИсполнитель);

				ЗадачаОбъект.ДополнительныеСвойства.Вставить(
				"ПользовательИсполнитель", ПараметрыВыполнения.ПользовательИсполнитель);

			КонецЕсли;

			Если ПараметрыВыполнения.Свойство("ФактическийИсполнительПолный") Тогда
				ЗадачаОбъект.ДополнительныеСвойства.Вставить(
				"ФактическийИсполнительПолный", ПараметрыВыполнения.ФактическийИсполнительПолный);
			КонецЕсли;

			Если ПараметрыВыполнения.Свойство("ПереносСрока") Тогда
				ЗадачаОбъект.ДополнительныеСвойства.Вставить(
				"ПереносСрока", ПараметрыВыполнения.ПереносСрока);
			КонецЕсли;
#Вставка
			Если ПараметрыВыполнения.Свойство("ПереносСрока") Тогда
				ЗадачаОбъект.ДополнительныеСвойства.Вставить(
					"ПереносСрока", ПараметрыВыполнения.ПереносСрока);
			КонецЕсли;
#КонецВставки
		КонецЕсли;

		Если ОтключитьПроверкуВыполнения = Ложь Тогда
			РезультатПроверки = БизнесПроцессыИЗадачиСервер.ПроверитьУсловияЗапретаВыполнения(Задача.Ссылка, ПараметрыВыполнения);
			Если РезультатПроверки.ЗапретВыполнения Тогда
				ВызватьИсключение РезультатПроверки.ТекстПредупреждения;
			КонецЕсли;
		КонецЕсли;

		Если ОтключитьОбновлениеЗадач Тогда
			ЗадачаОбъект.ДополнительныеСвойства.Вставить("ОтключитьОбновлениеЗадач", Истина);
		КонецЕсли;

		ЗадачаОбъект.ВыполнитьЗадачу();

		Если ПараметрыВыполнения <> Неопределено Тогда
			БизнесПроцессМенеджер.ОбработкаПослеВыполненияЗадачи(Задача.Ссылка, ЗадачаОбъект.БизнесПроцесс,
			ЗадачаОбъект.ТочкаМаршрута, ПараметрыВыполнения);
		КонецЕсли;

		Если РазблокироватьЗадачу Тогда
			РазблокироватьДанныеДляРедактирования(ЗадачаОбъект.Ссылка);
		КонецЕсли;

		ПротоколированиеРаботыСотрудников.ЗаписатьИзменение(ЗадачаОбъект.Ссылка);

		ПользователиДокументооборот.ОчиститьОлицетворяемогоПользователя();

		ЗафиксироватьТранзакцию();

	Исключение

		ОтменитьТранзакцию();

		ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Выполнение задачи'", ОбщегоНазначения.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Ошибка,
		ЗадачаОбъект.Ссылка.Метаданные(),
		ПолучитьНавигационнуюСсылку(ЗадачаОбъект.Ссылка),
		ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));

		ПользователиДокументооборот.ОчиститьОлицетворяемогоПользователя();

		ВызватьИсключение;

	КонецПопытки;

КонецПроцедуры
