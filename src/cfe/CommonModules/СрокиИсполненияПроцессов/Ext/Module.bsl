
&ИзменениеИКонтроль("СрокиУчастниковПроцессаКорректны")
Функция ЦППК_СрокиУчастниковПроцессаКорректны(Объект, УчитыватьСрокОбработкиРезультата)

	НарушенаПоследовательностьСроков = Ложь;
	ЕстьУчастникиБезСрокаИсполнения = Ложь;

	МетаданныеПроцесса = Объект.Ссылка.Метаданные();

	ЕстьСрокИсполненияВТалицеИсполнители = 
	(МетаданныеПроцесса.ТабличныеЧасти.Найти("Исполнители") <> Неопределено)
	И (МетаданныеПроцесса.ТабличныеЧасти.Исполнители.Реквизиты.Найти("СрокИсполнения") <> Неопределено);

	ЕстьСрокИсполнения = 
	(МетаданныеПроцесса.Реквизиты.Найти("СрокИсполнения") <> Неопределено);

	ЕстьСрокОбработкиРезультатов = 
	(МетаданныеПроцесса.Реквизиты.Найти("СрокОбработкиРезультатов") <> Неопределено);

	СрокИсполненияУчастников = Дата(1,1,1);

	Если ЕстьСрокИсполненияВТалицеИсполнители Тогда

		ИмяРеквизитаВариантИсполнения = "";
		Если МетаданныеПроцесса.Реквизиты.Найти("ВариантИсполнения") <> Неопределено Тогда
			ИмяРеквизитаВариантИсполнения = "ВариантИсполнения";
		ИначеЕсли МетаданныеПроцесса.Реквизиты.Найти("ВариантСогласования") <> Неопределено Тогда
			ИмяРеквизитаВариантИсполнения = "ВариантСогласования";
		КонецЕсли;

		ВариантИсполнения = Перечисления.ВариантыМаршрутизацииЗадач.Параллельно;
		Если ЗначениеЗаполнено(ИмяРеквизитаВариантИсполнения) Тогда
			ВариантИсполнения = Объект[ИмяРеквизитаВариантИсполнения];
		КонецЕсли;

		Если ВариантИсполнения = Перечисления.ВариантыМаршрутизацииЗадач.Последовательно Тогда

			ПредыдущийСрокИсполнения = Дата(1,1,1);

			Для Каждого СтрокИсполнитель Из Объект.Исполнители Цикл

				Если Не СрокиИсполненияПроцессовКлиентСервер.ЭтоСтрокаОтветственного(СтрокИсполнитель)Тогда

					Если Не ЗначениеЗаполнено(СтрокИсполнитель.СрокИсполнения) Тогда
						ЕстьУчастникиБезСрокаИсполнения = Истина;
					КонецЕсли;

					Если СтрокИсполнитель.СрокИсполнения < ПредыдущийСрокИсполнения Тогда
						НарушенаПоследовательностьСроков = Истина;
						Прервать;
					КонецЕсли;

					ПредыдущийСрокИсполнения = СтрокИсполнитель.СрокИсполнения;

				КонецЕсли;

				СрокИсполненияУчастников = Макс(СрокИсполненияУчастников, СтрокИсполнитель.СрокИсполнения);

			КонецЦикла;

		ИначеЕсли ВариантИсполнения = Перечисления.ВариантыМаршрутизацииЗадач.Смешанно Тогда

			ИмяРеквизитаПорядокИсполнения = "";
			Если МетаданныеПроцесса.ТабличныеЧасти.Исполнители.Реквизиты.Найти("ПорядокИсполнения") <> Неопределено Тогда
				ИмяРеквизитаПорядокИсполнения = "ПорядокИсполнения";
			ИначеЕсли МетаданныеПроцесса.ТабличныеЧасти.Исполнители.Реквизиты.Найти("ПорядокСогласования") <> Неопределено Тогда
				ИмяРеквизитаПорядокИсполнения = "ПорядокСогласования";
			КонецЕсли;

			СрокИсполненияПредыдущегоЭтапа = Дата(1,1,1);
			СрокИсполненияТекущегоЭтапа = Дата(1,1,1);

			Для Каждого СтрокИсполнитель Из Объект.Исполнители Цикл

				Если Не СрокиИсполненияПроцессовКлиентСервер.ЭтоСтрокаОтветственного(СтрокИсполнитель)Тогда

					Если СтрокИсполнитель[ИмяРеквизитаПорядокИсполнения] = 
						Перечисления.ПорядокВыполненияЗадач.ПослеПредыдущего Тогда

						СрокИсполненияПредыдущегоЭтапа = СрокИсполненияТекущегоЭтапа;
						СрокИсполненияТекущегоЭтапа = Дата(1,1,1);
					КонецЕсли;

					Если Не ЗначениеЗаполнено(СтрокИсполнитель.СрокИсполнения) Тогда
						ЕстьУчастникиБезСрокаИсполнения = Истина;
					КонецЕсли;

					Если СтрокИсполнитель.СрокИсполнения < СрокИсполненияПредыдущегоЭтапа Тогда

						НарушенаПоследовательностьСроков = Истина;
						Прервать;
					КонецЕсли;

					СрокИсполненияТекущегоЭтапа = Макс(СрокИсполненияТекущегоЭтапа, СтрокИсполнитель.СрокИсполнения);

				КонецЕсли;

				СрокИсполненияУчастников = Макс(СрокИсполненияУчастников, СтрокИсполнитель.СрокИсполнения);

			КонецЦикла;

		Иначе

			Для Каждого СтрокИсполнитель Из Объект.Исполнители Цикл

				Если Не СрокиИсполненияПроцессовКлиентСервер.ЭтоСтрокаОтветственного(СтрокИсполнитель)Тогда

					Если Не ЗначениеЗаполнено(СтрокИсполнитель.СрокИсполнения) Тогда
						ЕстьУчастникиБезСрокаИсполнения = Истина;
					КонецЕсли;

					Если Не ЗначениеЗаполнено(СтрокИсполнитель.СрокИсполнения) Тогда
						НарушенаПоследовательностьСроков = Истина;
						Прервать;
					КонецЕсли;

				КонецЕсли;

				СрокИсполненияУчастников = Макс(СрокИсполненияУчастников, СтрокИсполнитель.СрокИсполнения);
			КонецЦикла;

		КонецЕсли;

	ИначеЕсли ЕстьСрокИсполнения Тогда
		СрокИсполненияУчастников = Объект.СрокИсполнения;

		Если Не ЗначениеЗаполнено(Объект.СрокИсполнения) Тогда
			ЕстьУчастникиБезСрокаИсполнения = Истина;
		КонецЕсли;

	КонецЕсли;

	Если Не НарушенаПоследовательностьСроков
		И ЕстьСрокОбработкиРезультатов
		И УчитыватьСрокОбработкиРезультата Тогда

 		НарушенаПоследовательностьСроков =
		(Объект.СрокОбработкиРезультатов < СрокИсполненияУчастников);

		#Вставка
		//++AxelSoft Шарапова 30.10.2024 САНФ-029233
		Если НарушенаПоследовательностьСроков Тогда	   
			Объект.СрокОбработкиРезультатов = СрокИсполненияУчастников;
			НарушенаПоследовательностьСроков = Ложь;
		КонецЕсли;
		//--AxelSoft Шарапова 30.10.2024 САНФ-029233
		#КонецВставки
		
		Если Не ЗначениеЗаполнено(Объект.СрокОбработкиРезультатов) Тогда
			ЕстьУчастникиБезСрокаИсполнения = Истина;
		КонецЕсли;
 	КонецЕсли;

	СрокиИсполненияКорректны = 
	Не НарушенаПоследовательностьСроков И Не ЕстьУчастникиБезСрокаИсполнения;

	Возврат СрокиИсполненияКорректны;

КонецФункции
