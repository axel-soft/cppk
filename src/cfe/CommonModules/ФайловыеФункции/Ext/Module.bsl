
&ИзменениеИКонтроль("ПроверитьУсловиеВРежимеКонструктора")
Функция ЦППК_ПроверитьУсловиеВРежимеКонструктора(Предмет, Настройки, ЕстьПараметры = Истина)

	#Удаление
	СхемаКомпоновкиДанных = Справочники.ПравилаРазмещенияФайловВТомах.ПолучитьМакет("Версии");
	#КонецУдаления   
	
	#Вставка
	СхемаКомпоновкиДанных = Справочники.ПравилаРазмещенияФайловВТомах.ПолучитьМакет("ЦППК_Версии");
	#КонецВставки
	
	Компоновщик = Новый КомпоновщикНастроекКомпоновкиДанных;
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы);
	Компоновщик.Инициализировать(ИсточникНастроек);
	Компоновщик.ЗагрузитьНастройки(Настройки);

	Если ЕстьПараметры Тогда
		ПараметрПредмет = Компоновщик.Настройки.ПараметрыДанных.Элементы[0];
		ПараметрПредмет.Значение = Предмет.Ссылка;
		ПараметрПредмет.Использование = Истина; 
		
		#Вставка 
		Попытка
			ПараметрВладелецПредмета = Компоновщик.Настройки.ПараметрыДанных.Элементы[1];
			ПараметрВладелецПредмета.Значение = Предмет.Владелец.Ссылка;
			ПараметрВладелецПредмета.Использование = Истина;
		Исключение
		КонецПопытки;
		#КонецВставки
	КонецЕсли;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, 
	Компоновщик.ПолучитьНастройки()
	,
	,
	, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ТаблицаРезультата = Новый ТаблицаЗначений;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаРезультата);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

	Результат = ТаблицаРезультата.Количество() > 0;

	Возврат Результат;

КонецФункции
