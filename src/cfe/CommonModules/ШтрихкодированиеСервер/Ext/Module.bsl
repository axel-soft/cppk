
&ИзменениеИКонтроль("ВставитьРегистрационныйШтампВФайлDocxСУказаниемПоложения")
Функция ЦППК_ВставитьРегистрационныйШтампВФайлDocxСУказаниемПоложения(
	Расширение, 
	ТекстНадписи, 
	ДвоичныеДанныеФайла, 
	ДвоичныеДанныеКартинки, 
	ДанныеОПоложении, 
	ВставлятьШтрихкод) Экспорт
	
	Если ДвоичныеДанныеФайла.Размер() = 0 Тогда
		Возврат ДвоичныеДанныеФайла;
	КонецЕсли;
	
	СтарыйПутьКФайлу = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанныеФайла.Записать(СтарыйПутьКФайлу);
	НовыйПутьКФайлу = ПолучитьИмяВременногоФайла(Расширение);
	
	КопироватьФайл(СтарыйПутьКФайлу, СтрЗаменить(СтарыйПутьКФайлу, Расширение, "zip"));
	ИмяФайлаСПутемZIP = СтрЗаменить(СтарыйПутьКФайлу, Расширение, "zip");

	ВременнаяПапкаДляРазархивирования = ПолучитьИмяВременногоФайла("");
	ВременныйZIPФайл = ПолучитьИмяВременногоФайла("zip"); 

	Архив = Новый ЧтениеZipФайла();
	Архив.Открыть(ИмяФайлаСПутемZIP);
	Архив.ИзвлечьВсе(ВременнаяПапкаДляРазархивирования, РежимВосстановленияПутейФайловZIP.Восстанавливать);
	Архив.Закрыть();

	//Заполнение полей в теле документа
	ЧтениеXML = Новый ЧтениеXML();
	ЧтениеXML.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/word/document.xml");
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/word/document_update.xml");
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	
	//получение макета для вставки регштампа
	Если ЗначениеЗаполнено(ТекстНадписи) Тогда
		Если ПолучитьФункциональнуюОпцию("ИспользоватьШтрихкоды") Тогда
#Удаление
			МакетДляВставки = ПолучитьОбщийМакет("ВставкаРегистрационногоШтампаВDocx");
#КонецУдаления
#Вставка
			МакетДляВставки = ПолучитьОбщийМакет("ЦППК_ВставкаРегистрационногоШтампаВDocxБезШтрихкодаИзм");	
#КонецВставки
		Иначе
			МакетДляВставки = ПолучитьОбщийМакет("ВставкаРегистрационногоШтампаВDocxБезШтрихкода");
	    КонецЕсли;
	Иначе
		МакетДляВставки = ПолучитьОбщийМакет("ВставкаШтрихкодаСУказаниемПоложенияDocx");	
	КонецЕсли;
	ТекстДляВставкиШтампа = МакетДляВставки.ПолучитьТекст();
		
	//установка положения и прочих параметров
	СмещениеПоГоризонтали = 0;
	СмещениеПоВертикали = 0;
	ГоризонтальноеВыравнивание = "";
	ОтносительночегоСчитатьГоризонтальноеВыравнивание = "margin";
	ВертикальноеВыравнивание = "";
	ОтносительноЧегоСчитатьВертикальноеВыравнивание = "margin";
	
	Если ЗначениеЗаполнено(ТекстНадписи) Тогда
		ИмяКомпании = ТекстНадписи.НазваниеОрганизации;
		РегистрационныйНомер = ТекстНадписи.РегНомер;
		ДатаРегистрации = ТекстНадписи.Регдата;
#Вставка
		Если ТекстНадписи.Свойство("Зарегистрировал") Тогда
			Зарегистрировал = ТекстНадписи.Зарегистрировал;
		КонецЕсли;
#КонецВставки
	КонецЕсли;
	ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ИмяКомпании_", ИмяКомпании);
	ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_РегистрационныйНомер_", РегистрационныйНомер);
	ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ДатаРегистрации_", ДатаРегистрации);
#Вставка
	ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_Зарегистрировал_", Зарегистрировал);
#КонецВставки

	//Высота штрихкода в EMU (English Metrick Units)
	ВысотаШтрихкода = (ДанныеОПоложении.ВысотаШК / 25.4) * 914400;
	
	ПоложениеНаСтранице = ДанныеОПоложении.ПоложениеНаСтранице;
	Если ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ПравыйНижний") Тогда
		СмещениеПоГоризонтали = "MAX";
		СмещениеПоВертикали = "MAX";
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ПравыйВерхний") Тогда
		СмещениеПоГоризонтали = "MAX";
		СмещениеПоВертикали = "MIN";
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ЛевыйВерхний") Тогда
		СмещениеПоГоризонтали = "MIN";
		СмещениеПоВертикали = "MIN";
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ЛевыйНижний") Тогда
		СмещениеПоГоризонтали = "MIN";
		СмещениеПоВертикали = "MAX";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстНадписи) Тогда
		Если СмещениеПоГоризонтали = "MAX" Тогда
			//выравнивание к правому краю
			ГоризонтальноеВыравнивание = "mso-position-horizontal:right";
		ИначеЕсли СмещениеПоГоризонтали = "MIN" Тогда
			//выравнивание к левому краю
			ГоризонтальноеВыравнивание = "mso-position-horizontal:left";
		Иначе
			//если задано произвольное расположение, то переведем смещение по горизонтали из миллиметров в Point'ы
			//1 д = 1/72"
			ОтносительночегоСчитатьГоризонтальноеВыравнивание = "page";
			СмещениеПоГоризонтали = (ДанныеОПоложении.СмещениеПоГоризонтали / 25.4) * 72;
		КонецЕсли;
		
		Если СмещениеПоВертикали = "MAX" Тогда
			//выравнивание по нижнему краю
			ВертикальноеВыравнивание = "mso-position-vertical:bottom";
		ИначеЕсли СмещениеПоВертикали = "MIN" Тогда
			//выравнивание по верхнему краю
			ВертикальноеВыравнивание = "mso-position-vertical:top";
		Иначе
			//если задано произвольное расположение, то переведем смещение по горизонтали из миллиметров в Point'ы
			ОтносительноЧегоСчитатьВертикальноеВыравнивание = "page";
			СмещениеПоВертикали =(ДанныеОПоложении.СмещениеПоВертикали / 25.4) * 72;
		КонецЕсли;

		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_СмещениеПоГоризонтали_", Формат(СмещениеПоГоризонтали,"ЧДЦ=0; ЧГ=0") + "pt");
		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_СмещениеПоВертикали_", Формат(СмещениеПоВертикали,"ЧДЦ=0; ЧГ=0") + "pt");
		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ГоризонтальноеВыравнивание_", ГоризонтальноеВыравнивание);
		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ВертикальноеВыравнивание_", ВертикальноеВыравнивание);
	Иначе
		
		Если СмещениеПоГоризонтали = "MAX" Тогда
			//выравнивание к правому краю
#Удаление
			СмещениеПоГоризонтали = "<wp:align>right</wp:align>";
#КонецУдаления
#Вставка
			ОтносительночегоСчитатьГоризонтальноеВыравнивание = "page";
			СмещениеПоГоризонталиЗначение = (167 / 25.4) * 914400;
			СмещениеПоГоризонтали = "<wp:posOffset>" + Формат(СмещениеПоГоризонталиЗначение,"ЧДЦ=0; ЧГ=0") + "</wp:posOffset>";
#КонецВставки
		ИначеЕсли СмещениеПоГоризонтали = "MIN" Тогда
			//выравнивание к левому краю
#Удаление
			СмещениеПоГоризонтали = "<wp:align>left</wp:align>";
#КонецУдаления
#Вставка
			ОтносительночегоСчитатьГоризонтальноеВыравнивание = "page";
			СмещениеПоГоризонталиЗначение = (1 / 25.4) * 914400;
			СмещениеПоГоризонтали = "<wp:posOffset>" + Формат(СмещениеПоГоризонталиЗначение,"ЧДЦ=0; ЧГ=0") + "</wp:posOffset>";
#КонецВставки
		Иначе
			//если задано произвольное расположение, то переведем смещение по горизонтали из миллиметров в EMU
			//1 д = 1/72"
			ОтносительночегоСчитатьГоризонтальноеВыравнивание = "page";
			СмещениеПоГоризонталиЗначение = (ДанныеОПоложении.СмещениеПоГоризонтали / 25.4) * 914400;
			СмещениеПоГоризонтали = "<wp:posOffset>" + Формат(СмещениеПоГоризонталиЗначение,"ЧДЦ=0; ЧГ=0") + "</wp:posOffset>";
		КонецЕсли;
		
		Если СмещениеПоВертикали = "MAX" Тогда
			//выравнивание по нижнему краю
#Удаление
			СмещениеПоВертикали = "<wp:align>bottom</wp:align>";
#КонецУдаления
#Вставка
			ОтносительноЧегоСчитатьВертикальноеВыравнивание = "page";
			СмещениеПоВертикалиЗначение =(285 / 25.4) * 914400;
			СмещениеПоВертикали = "<wp:posOffset>" + Формат(СмещениеПоВертикалиЗначение,"ЧДЦ=0; ЧГ=0") + "</wp:posOffset>";
#КонецВставки
		ИначеЕсли СмещениеПоВертикали = "MIN" Тогда
			//выравнивание по верхнему краю
#Удаление
			СмещениеПоВертикали = "<wp:align>top</wp:align>";
#КонецУдаления
#Вставка
			ОтносительноЧегоСчитатьВертикальноеВыравнивание = "page";
			СмещениеПоВертикалиЗначение =(1 / 25.4) * 914400;
			СмещениеПоВертикали = "<wp:posOffset>" + Формат(СмещениеПоВертикалиЗначение,"ЧДЦ=0; ЧГ=0") + "</wp:posOffset>";
#КонецВставки
		Иначе
			//если задано произвольное расположение, то переведем смещение по горизонтали из миллиметров в EMU
			ОтносительноЧегоСчитатьВертикальноеВыравнивание = "page";
			СмещениеПоВертикалиЗначение =(ДанныеОПоложении.СмещениеПоВертикали / 25.4) * 914400;
			СмещениеПоВертикали = "<wp:posOffset>" + Формат(СмещениеПоВертикалиЗначение,"ЧДЦ=0; ЧГ=0") + "</wp:posOffset>";
		КонецЕсли;

		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_СмещениеПоГоризонтали_", Формат(СмещениеПоГоризонтали,"ЧДЦ=0; ЧГ=0"));
		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_СмещениеПоВертикали_", Формат(СмещениеПоВертикали,"ЧДЦ=0; ЧГ=0"));
		
	КонецЕсли;
	
	ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ОтносительноЧегоСчитатьВертикальноеСмещение_", ОтносительноЧегоСчитатьВертикальноеВыравнивание);
	ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ОтносительноЧегоСчитатьГоризонтальноеСмещение_", ОтносительночегоСчитатьГоризонтальноеВыравнивание);
	
	ИДкартинки = 0;
	Если ВставлятьШтрихкод Тогда
		СчетчикСвязей = 0;
		СохранитьИзображениеВоВнутреннейСтруктуреDocx(ВременнаяПапкаДляРазархивирования, ДвоичныеДанныеКартинки, ИДкартинки, СчетчикСвязей);
		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ИДКартинкиВоВнутреннейПапке_", "rId" + Строка(СчетчикСвязей + 1));
		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ВысотаШтрихкода_", Формат(ВысотаШтрихкода,"ЧДЦ=0; ЧГ=0"));
	КонецЕсли;
	
	// Обязательно нужно ставить Ложь, иначе будут пропадать пробелы
	ЧтениеXML.ИгнорироватьПробелы = Ложь;
#Вставка
	ВставитьШтампСледТег = Ложь;
#КонецВставки
	
	//вставка разметки для регштампа в файл
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ВставитьШтамп = Ложь;
			Если ЧтениеXML.Имя = "w:body" Тогда
				ВставитьШтамп = Истина;
			КонецЕсли;
#Вставка
			Если ВставлятьШтрихкод Тогда 
				Если  ТипЗнч(ТекстНадписи) = Тип("Строка") Тогда 
					Если ЧтениеXML.Имя = "w:lastRenderedPageBreak" Тогда
						ВставитьШтампСледТег = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
#КонецВставки
			ЗаписьXML.ЗаписатьНачалоЭлемента(ЧтениеXML.Имя);
			Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
				ЗаписьXML.ЗаписатьАтрибут(ЧтениеXML.Имя,ЧтениеXML.Значение); 
			КонецЦикла;
			Если ВставитьШтамп Тогда
				ЗаписьXML.ЗаписатьБезОбработки(ТекстДляВставкиШтампа);
				ВставитьШтамп = Ложь;
			КонецЕсли;
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			ЗаписьXML.ЗаписатьТекст(ЧтениеXML.Значение);
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			
			ЗаписьXML.ЗаписатьКонецЭлемента();
#Вставка
			Если ВставлятьШтрихкод Тогда 
				Если  ТипЗнч(ТекстНадписи) = Тип("Строка") Тогда 
				Если ЧтениеXML.Имя = "w:p" И ВставитьШтампСледТег Тогда
					ЗаписьXML.ЗаписатьБезОбработки(ТекстДляВставкиШтампа);
					ВставитьШтампСледТег = Ложь;
				КонецЕсли; 
					КонецЕсли; 
			КонецЕсли;
#КонецВставки
		КонецЕсли;
	КонецЦикла;
	
	ЧтениеXML.Закрыть();
	ЗаписьXML.Закрыть();     
	
	ИмяФайлаДокументаНовый = ВременнаяПапкаДляРазархивирования + "/word/document_update.xml";
	
	ЧтениеТекста = Новый ЧтениеТекста(
		ИмяФайлаДокументаНовый,
		КодировкаТекста.UTF8);
	ТекстXml = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	
	// проверим наличие namespace
	ПозицияNamespace = СтрНайти(ТекстXml, "http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing");
	ПозицияNamespaceWP = СтрНайти(ТекстXml, "xmlns:wp=");
	Если ПозицияNamespace = 0 И ПозицияNamespaceWP = 0 Тогда // вставим его
	
		СтрокаДок = "<w:document";
		ПозицияДок = СтрНайти(ТекстXml, СтрокаДок);
		
		Если ПозицияДок <> 0 Тогда // вставим его
		
			ПозицияКонцаДок = ПозицияДок + СтрДлина(СтрокаДок);
	
			ТекстXml = Лев(ТекстXml, ПозицияКонцаДок - 1)
			 + " xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing"" "
			  + Сред(ТекстXml, ПозицияКонцаДок);
			  
		КонецЕсли;  
		
	КонецЕсли;	

	ЗаписьТекста = Новый ЗаписьТекста(
		ИмяФайлаДокументаНовый,
		КодировкаТекста.UTF8);
	ЗаписьТекста.Записать(ТекстXml);
	ЗаписьТекста.Закрыть();
	
	
	АвтозаполнениеШаблоновФайловКлиентСервер.ЗаменитьПространствоИменR(
		ВременнаяПапкаДляРазархивирования + "/word/document_update.xml");
	
	ПереместитьФайл(ВременнаяПапкаДляРазархивирования + "/word/document_update.xml", ВременнаяПапкаДляРазархивирования + "/word/document.xml");
	УдалитьФайлы(ВременнаяПапкаДляРазархивирования + "/word/document_update.xml");
	
	Архиватор = Новый ЗаписьZipФайла(ВременныйZIPФайл, "", "");
	Архиватор.Добавить(ВременнаяПапкаДляРазархивирования + "\*.*", РежимСохраненияПутейZIP.СохранятьОтносительныеПути, РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);
	Архиватор.Записать();

	ПереместитьФайл(ВременныйZIPФайл, НовыйПутьКФайлу);
	УдалитьФайлы(ВременнаяПапкаДляРазархивирования);	
	УдалитьФайлы(СтарыйПутьКФайлу);
	УдалитьФайлы(ВременныйZIPФайл);
	
	ДвоичныеДанныеЗаполненногоФайла = Новый ДвоичныеДанные(НовыйПутьКФайлу);
	УдалитьФайлы(НовыйПутьКФайлу);
	Возврат ДвоичныеДанныеЗаполненногоФайла;
	
КонецФункции

&ИзменениеИКонтроль("ПолучитьДанныеДляВставкиШтрихкодаВОбъект")
Функция ЦППК_ПолучитьДанныеДляВставкиШтрихкодаВОбъект(Знач Объект, Знач НеобходимоПередаватьСодержимоеФайла, Знач ВызовСКлиента, Знач ВставкаВPdf, Знач ПоказыватьЦифры)

	Ссылка = Объект.Ссылка;
	ДанныеШК = Новый Структура;

	//Получаем и вставляем персональные настройки окна положения ШК
	НастройкиШтрихкода = ШтрихкодированиеСервер.ПолучитьПерсональныеНастройкиПоложенияШтрихкодаНаСтранице();

	Если ПоказыватьЦифры <> Неопределено Тогда 
		НастройкиШтрихкода.ПоказыватьЦифры = ПоказыватьЦифры;
	КонецЕсли;	

	ШиринаШтрихкода = 0;
	Если ВставкаВPdf Тогда

		НастройкиШтрихкода.ВысотаШК = 20;
		Если НастройкиШтрихкода.ПоказыватьЦифры Тогда
			НастройкиШтрихкода.ВысотаШК = 30;
		КонецЕсли;	
		ШиринаШтрихкода = 200;

		СпособВставкиШтампаЭПВPDF = РаботаСФайламиВызовСервера.ПолучитьСпособВставкиШтампаЭПВPDF();
		Если СпособВставкиШтампаЭПВPDF = Перечисления.СпособыВставкиШтампаЭПВPDF.Встроенный Тогда

			НастройкиШтрихкода.ВысотаШК = 40;
			Если НастройкиШтрихкода.ПоказыватьЦифры Тогда
				НастройкиШтрихкода.ВысотаШК = 50;
			КонецЕсли;	

			ШиринаШтрихкода = 400;

		КонецЕсли;	

	КонецЕсли;	

	ДанныеШК.Вставить("НастройкиШтрихкода", НастройкиШтрихкода);
	ДанныеШК.Вставить("ДвоичныеДанныеИзображения", Неопределено);

	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Файлы") Тогда
		Если НЕ (АвтозаполнениеШаблоновФайловКлиентСервер.ФорматMSWord(Ссылка.ТекущаяВерсияРасширение) ИЛИ Ссылка.ТекущаяВерсиярасширение = "odt")
			И НеобходимоПередаватьСодержимоеФайла Тогда
			ТекстОшибки = НСтр("ru = 'Вставка штрихкодов осуществляется только в файлы Microsoft Word или Open Office Writer.'");
			ДанныеШК.Вставить("СообщениеОбОшибке", ТекстОшибки);	
			Возврат ДанныеШК;
		КонецЕсли;
		ДанныеШК.Вставить("ФайлРедактируется", ЗначениеЗаполнено(Ссылка.Редактирует));
		//Получаем и вставляем значения констант, определяющих, где выполняется работа с файлами при вставке ШК
		ИзменениеФайловMSWordТолькоНаСервере = Константы.ИзменениеФайловMSWordТолькоНаСервере.Получить();
		ДанныеШК.Вставить("ИзменениеФайловMSWordТолькоНаСервере", ИзменениеФайловMSWordТолькоНаСервере);

		ДанныеШК.Вставить("Расширение", Ссылка.ТекущаяВерсияРасширение);

		//Получаем и вставляем, если необходимо, двоичные данные файла - для обработки на стороне клиента
		ДвоичныеДанныеФайла = АвтозаполнениеШаблоновФайловВызовСервера.ПолучитьДвоичныеДанныеФайла(Ссылка);
#Удаление
		Если НеобходимоПередаватьСодержимоеФайла И Ссылка.ТекущаяВерсияРасширение = "doc"
#КонецУдаления
#Вставка
// Добавление ШК в колонтитул для docx через COM объект / 23.01.2024г. / Князев Д.С.
		Если НеобходимоПередаватьСодержимоеФайла И (Ссылка.ТекущаяВерсияРасширение = "doc" Или Ссылка.ТекущаяВерсияРасширение = "docx")
#КонецВставки	
			ИЛИ НРег(Ссылка.ТекущаяВерсияРасширение) <> "doc" И НЕ ВызовСКлиента Тогда
			ДанныеШК.Вставить("ДвоичныеДанныеФайла", ДвоичныеДанныеФайла);
		КонецЕсли;
	КонецЕсли;

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьШтрихкоды") Тогда	
		Возврат ДанныеШК;
	КонецЕсли;

	НеобходимостьВставкиВместоТэга = Ложь;
	Штрихкод = Неопределено;	
	//Пытаемся найти штрихкод у объекта
	ЗначениеШтрихкода = ШтрихкодированиеСервер.ПолучитьШтрихКод(Ссылка);
	Если ЗначениеШтрихкода = Неопределено
		ИЛИ ПустаяСтрока(ЗначениеШтрихкода) Тогда
		//если штрихкод не найден и Объект - это файл
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Файлы") И НЕ Ссылка.ТекущаяВерсия.Пустая() Тогда
			Если ТипЗнч(Ссылка.ВладелецФайла) = Тип("СправочникСсылка.ПапкиФайлов")
				И АвтозаполнениеШаблоновФайловВызовСервера.ФайлНаходитсяВИерархииПапокШаблонов(Ссылка) Тогда				
				ТекстОшибки = НСтр("ru = 'Для файлов, находящихся в папке ""Шаблоны файлов"", штрихкод не формируется.'");
				ДанныеШК.Вставить("СообщениеОбОшибке", ТекстОшибки);
				Возврат ДанныеШК;
			ИначеЕсли ТипЗнч(Ссылка.ВладелецФайла) = Тип("СправочникСсылка.ДокументыПредприятия") Тогда
				//если файл хранится в документе, то ему присваивается штрихкод документа
				Штрихкод = ШтрихкодированиеСервер.ПолучитьШтрихКод(Ссылка.ВладелецФайла);
			ИначеЕсли Не ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(Ссылка.ВладелецФайла) Тогда
				Штрихкод = ШтрихкодированиеСервер.СформироватьШтрихКод();
				//сформированный штрихкод присваивается Объекту
				ШтрихкодированиеСервер.ПрисвоитьШтрихКод(Ссылка, Штрихкод);
			КонецЕсли;

			//т.к. штрихкод только что сформирован, необходимо выполнить попытку вставить его изображение вместо тэга в файле
			НеобходимостьВставкиВместоТэга = Истина;

		ИначеЕсли  ТипЗнч(Ссылка) = Тип("СправочникСсылка.ДокументыПредприятия")
			И ЗначениеЗаполнено(Ссылка) Тогда
			//если Объект - это документ, то ему присваивается персональный штрихкод
			Штрихкод = ШтрихкодированиеСервер.СформироватьШтрихКод();
			ШтрихкодированиеСервер.ПрисвоитьШтрихКод(Ссылка, Штрихкод);
		КонецЕсли;
	Иначе
		Штрихкод = ЗначениеШтрихкода;
	КонецЕсли;
#Вставка
// Если ШК для файла не сформирован, то присваиваем персональный штрихкод / 23.01.2024г. / Князев Д.С.
	Если Штрихкод = Неопределено И ТипЗнч(Ссылка) = Тип("СправочникСсылка.Файлы") Тогда
		Штрихкод = ШтрихкодированиеСервер.СформироватьШтрихКод();
		ШтрихкодированиеСервер.ПрисвоитьШтрихКод(Ссылка, Штрихкод);	
	КонецЕсли;
#КонецВставки
	Если НЕ Штрихкод = Неопределено Тогда

		//Вставим значение ШК
		ДанныеШК.Вставить("Штрихкод", Штрихкод);		

		//Если Идет вызов с клиента, но штрихкодирование выполняется только на сервере, то возвращаем только часть данных
		Если ВызовСКлиента И ИзменениеФайловMSWordТолькоНаСервере И Ссылка.ТекущаяВерсияРасширение = "doc" Тогда
			Возврат ДанныеШК;
		КонецЕсли;

		//получаем изображение штрихкода
		ДвоичныеДанныеИзображения = ПолучитьКартинкуШтрихкода(Штрихкод,, НастройкиШтрихкода.ВысотаШК, 
		НастройкиШтрихкода.ПоказыватьЦифры, ШиринаШтрихкода).ПолучитьДвоичныеДанные();
		ДанныеШК.ДвоичныеДанныеИзображения = ДвоичныеДанныеИзображения;

		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Файлы") Тогда						
			ДанныеШК.Вставить("НеобходимостьВставкиВместоТэга", НеобходимостьВставкиВместоТэга);
		Конецесли;

		Возврат ДанныеШК;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция НанестиШтампНаСканКопиюОригина(ТекущийФайл, ДвоичныеДанныеШтрихкода) Экспорт
	
	ТипХраненияФайла = ТекущийФайл.ТекущаяВерсия.ТипХраненияФайла;
	ИмяФайлаСПутем = ПолучитьИмяВременногоФайла(ТекущийФайл.ТекущаяВерсияРасширение);		
	
	Если ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе Тогда
		
		ХранилищеФайла = РаботаСФайламиВызовСервера.ПолучитьХранилищеФайлаИзИнформационнойБазы(ТекущийФайл.ТекущаяВерсия);
		ДвоичныеДанныеФайла = ХранилищеФайла.Получить();
		ДвоичныеДанныеФайла.Записать(ИмяФайлаСПутем);
		
	Иначе 
		
		Если НЕ ТекущийФайл.ТекущаяВерсия.Том.Пустая() Тогда
			ИмяФайлаСПутемВТоме = ФайловыеФункции.ПолныйПутьТома(ТекущийФайл.ТекущаяВерсия.Том) + ТекущийФайл.ТекущаяВерсия.ПутьКФайлу; 
			КопироватьФайл(ИмяФайлаСПутемВТоме, ИмяФайлаСПутем);
			Файл = Новый Файл(ИмяФайлаСПутем);
			Файл.УстановитьТолькоЧтение(Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
	ИмяФайлаРезультатаШтрихкод = ПолучитьИмяВременногоФайла("png");
	ДвоичныеДанныеШтрихкода.Записать(ИмяФайлаРезультатаШтрихкод);
	ИмяФайлаРезультата = ПолучитьИмяВременногоФайла(ТекущийФайл.ТекущаяВерсия.Расширение);
	ИмяФайлаРезультата2 = ПолучитьИмяВременногоФайла(ТекущийФайл.ТекущаяВерсия.Расширение);
    
	
	//установка штампа на первой странице
	ПутьКфайлуСПараметрами = "convert -density 150 -quality 100 " + ИмяФайлаСПутем + "[0] ";
	//ПутьЗапуска = СтрШаблон("convert -density 150 -quality 100 %1 %2 %3", ИмяФайлаРезультатаШтрихкод, ПутьКфайлуСПараметрами, ИмяФайлаРезультата);
	//ПутьЗапуска = ПутьКфайлуСПараметрами + " -font Times-New-Roman-Bold -pointsize 12 -fill rgb(0,64,119) -draw ""gravity SouthEast text 90,40 'Рег. №  от '"" " + ИмяФайлаРезультата;
	ПутьЗапуска = ПутьКфайлуСПараметрами + " " + ИмяФайлаРезультата;
	
	РаботаСКартинками.ЗапуститьImageMagick(ПутьЗапуска);

	//объединение первой страницы с остальными
	ПутьКфайлуСПараметрами2 = " -density 150 -quality 100 " + ИмяФайлаСПутем + "[1-10000] ";
	ПутьЗапуска = СтрШаблон("convert -density 150 -quality 100 %1 %2 %3", ИмяФайлаРезультата, ПутьКфайлуСПараметрами2, ИмяФайлаРезультата2);
	
	ФайлыКУдалению = Новый Массив;
	ФайлыКУдалению.Добавить(ИмяФайлаСПутем);
	ФайлыКУдалению.Добавить(ИмяФайлаРезультата);

	РаботаСКартинками.ЗапуститьImageMagick(ПутьЗапуска, ФайлыКУдалению);
		
	ДвоичныеДанныеРезультата = Новый ДвоичныеДанные(ИмяФайлаРезультата2);
	АвтозаполнениеШаблоновФайловВызовСервера.ОбновитьВерсиюИзДвоичныхДанных(ДвоичныеДанныеРезультата, ТекущийФайл, "Вставка штампа");
	
	УдалитьФайлы(ИмяФайлаРезультата2);
	
	
	Возврат Истина;
	
КонецФункции
