
&ИзменениеИКонтроль("ВставитьРегистрационныйШтампСИспользованиемНастроек")
Функция ЦППК_ВставитьРегистрационныйШтампСИспользованиемНастроек(
	Объект, 
	НастройкиПоложения, 
	НаКлиенте, 
	ТекстНадписи, 
	ДвоичныеДанныеФайла, 
	ДвоичныеДанныеИзображения, 
	Расширение, 
	ФайлРедактируется, 
	ИзменениеФайловMSWordТолькоНаСервере, 
	УникальныйИдентификатор = Неопределено)

	Результат = Ложь;
	ВозможностьВыполнитьВставку = ПроверитьВозможностьВставкиКартинкиНаКлиентеНаСервере(Объект,
	НаКлиенте,
	ИзменениеФайловMSWordТолькоНаСервере,
	Расширение,
	ФайлРедактируется);

	Если НЕ ВозможностьВыполнитьВставку Тогда
		СисИнфо = Новый СистемнаяИнформация;
		Если (СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86 
			ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86_64)
			И НРег(Расширение) = "doc" Тогда
			ВызватьИсключение(НСтр("ru = 'Вставка штрихкода в файл doc возможна только в Windows. Обратитесь к администратору.'"));	
		КонецЕсли;
		Возврат Результат;
	КонецЕсли;

	Если НастройкиПоложения = Неопределено Тогда
		НастройкиПоложения = ШтрихкодированиеСервер.ПолучитьПерсональныеНастройкиПоложенияШтрихкодаНаСтранице();
	КонецЕсли;

	Попытка
		Расширение = ?(НаКлиенте, НРег(Объект.ТекущаяВерсияРасширение), НРег(Объект.ТекущаяВерсия.Расширение));
	Исключение
		Расширение =  ШтрихкодированиеСервер.ПолучитьРасширениеФайла(Объект);
	КонецПопытки;
    #Вставка
	//ЖуковДС++
	Если ТекстНадписи.Свойство("ЭтоВходящийДокумент") Тогда 
		Если ТекстНадписи.ЭтоВходящийДокумент Тогда 
			ВставлятьШтрихкод = Ложь;
		Иначе	
			ВставлятьШтрихкод = ШтрихкодированиеСервер.ПолучитьИспользованиеШтрихкодов();
		КонецЕсли;
	Иначе
		ВставлятьШтрихкод = ШтрихкодированиеСервер.ПолучитьИспользованиеШтрихкодов();
	КонецЕсли;  
	//ЖуковДС--
    #КонецВставки
	#Удаление
	ВставлятьШтрихкод = ШтрихкодированиеСервер.ПолучитьИспользованиеШтрихкодов();
    #КонецУдаления
	Если Расширение = "odt" Тогда
		ДвоичныеДанныеКартинки = Неопределено;
		ДвоичныеДанныеФайлаЗаполненогоФайла = ШтрихкодированиеOpenOfficeСервер.ВставитьРегистрационныйШтампВфайлODTСУказаниемПоложения(ТекстНадписи, ДвоичныеДанныеФайла, ДвоичныеДанныеИзображения, НастройкиПоложения, ВставлятьШтрихкод);
		АвтозаполнениеШаблоновФайловВызовСервера.ОбновитьВерсиюИзДвоичныхДанных(ДвоичныеДанныеФайлаЗаполненогоФайла, Объект, "Вставка регистрационного штампа", УникальныйИдентификатор);
		Результат = Истина;
	ИначеЕсли АвтозаполнениеШаблоновФайловКлиентСервер.ФорматMSWord(Расширение) Тогда
		Если Расширение = "doc" Тогда
			ИмяФайла = ВставитьРегистрационныйШтампВФайлDocСУказаниемПоложения(Расширение, ТекстНадписи, ДвоичныеДанныеФайла, ДвоичныеДанныеИзображения, НастройкиПоложения, ВставлятьШтрихкод);	
			ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ИмяФайла);
			АвтозаполнениеШаблоновФайловВызовСервера.ОбновитьВерсиюИзДвоичныхДанных(ДвоичныеДанныеФайла, Объект, "Вставка регистрационного штампа", УникальныйИдентификатор);
			Результат = Истина;
		ИначеЕсли Расширение = "docx" Тогда
			ДвоичныеДанныеЗаполненногоФайла = ШтрихкодированиеСервер.ВставитьРегистрационныйШтампВФайлDocxСУказаниемПоложения(Расширение, ТекстНадписи, ДвоичныеДанныеФайла, ДвоичныеДанныеИзображения, НастройкиПоложения, ВставлятьШтрихкод);	
			АвтозаполнениеШаблоновФайловВызовСервера.ОбновитьВерсиюИзДвоичныхДанных(ДвоичныеДанныеЗаполненногоФайла, Объект, "Вставка регистрационного штампа", УникальныйИдентификатор);
			Результат = Истина;
		КонецЕсли;
	Иначе
		ВызватьИсключение(НСтр("ru = 'Вставка регистрационного штампа осуществляется только в файлы форматов Microsoft Word и OpenOffice Writer'"));
	КонецЕсли;

	Возврат Результат;

КонецФункции

&ИзменениеИКонтроль("ВставитьШтрихкодСИспользованиемНастроек")
Функция ЦППК_ВставитьШтрихкодСИспользованиемНастроек(Объект, НастройкиПоложения, НаКлиенте, ДвоичныеДанныеИзображения, ДвоичныеДанныеФайла, Расширение, ФайлРедактируется, ИзменениеФайловMSWordТолькоНаСервере, УникальныйИдентификатор)

	Результат = Ложь;
	ВозможностьВыполнитьВставку = ПроверитьВозможностьВставкиКартинкиНаКлиентеНаСервере(Объект,
	НаКлиенте,
	ИзменениеФайловMSWordТолькоНаСервере,
	Расширение, 
	ФайлРедактируется);

	Если НЕ ВозможностьВыполнитьВставку Тогда
		СисИнфо = Новый СистемнаяИнформация;

		Если (СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86 
			ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86_64)
			И НРег(Расширение) = "doc" Тогда
			ВызватьИсключение(НСтр("ru = 'Вставка штрихкода в файл doc возможна только в Windows. Обратитесь к администратору.'"));	
		КонецЕсли;

		Возврат Результат;
	КонецЕсли;

	Если НастройкиПоложения = Неопределено Тогда
		НастройкиПоложения = ШтрихкодированиеСервер.ПолучитьПерсональныеНастройкиПоложенияШтрихкодаНаСтранице();
	КонецЕсли;

	Если Расширение = "odt" Тогда 
		ДвоичныеДанныеЗаполненногоФайла = ШтрихкодированиеOpenOfficeСервер.ВставитьШтрихкодВФайлODTСУказаниемПоложения(ДвоичныеДанныеИзображения, ДвоичныеДанныеФайла, НастройкиПоложения);
		АвтозаполнениеШаблоновФайловВызовСервера.ОбновитьВерсиюИзДвоичныхДанных(ДвоичныеДанныеЗаполненногоФайла, Объект, 
		НСтр("ru = 'Вставка штрихкода'"), УникальныйИдентификатор);
		Результат = Истина;
	ИначеЕсли АвтозаполнениеШаблоновФайловКлиентСервер.ФорматMSWord(Расширение) Тогда
#Удаление
		Если Расширение = "doc" Тогда 
#КонецУдаления
#Вставка
// Добавление ШК в колонтитул для docx через COM объект / 23.01.2024г. / Князев Д.С.
		Если Расширение = "doc" Или Расширение = "docx" Тогда
#КонецВставки
			ИмяФайла = ВставитьКартинкуВФайлDocСУказаниемПоложения(Расширение, ДвоичныеДанныеФайла, ДвоичныеДанныеИзображения, НастройкиПоложения);
			ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ИмяФайла);
			АвтозаполнениеШаблоновФайловВызовСервера.ОбновитьВерсиюИзДвоичныхДанных(ДвоичныеДанныеФайла, Объект, 
			НСтр("ru = 'Вставка штрихкода'"), УникальныйИдентификатор);
			Результат = Истина;
		ИначеЕсли Расширение = "docx" Тогда
			ДвоичныеДанныеЗаполненногоФайла = ШтрихкодированиеСервер.ВставитьРегистрационныйШтампВФайлDocxСУказаниемПоложения(Расширение, "", ДвоичныеДанныеФайла, ДвоичныеДанныеИзображения, НастройкиПоложения, Истина);
			АвтозаполнениеШаблоновФайловВызовСервера.ОбновитьВерсиюИзДвоичныхДанных(ДвоичныеДанныеЗаполненногоФайла, Объект, 
			НСтр("ru = 'Вставка штрихкода'"), УникальныйИдентификатор);
			Результат = Истина;
		КонецЕсли;
	Иначе
		ВызватьИсключение(НСтр("ru = 'Вставка штрихкодов осуществляется только в файлы форматов Microsoft Word и OpenOffice Writer'"));
	КонецЕсли;

	Возврат Результат;

КонецФункции

&ИзменениеИКонтроль("ВставитьКартинкуВФайлDocСУказаниемПоложения")
Функция ЦППК_ВставитьКартинкуВФайлDocСУказаниемПоложения(Расширение, ДвоичныеДанныеФайла, ДвоичныеДанныеКартинки, ДанныеОПоложении)
			
#Вставка
	// Вставка штрихкода в колонтитул документа в Word через COM объект / 23.01.2024г. / Князев Д.С.
	Возврат ЦППК_ВставитьКартинкуВКолонтитулФайлаDocСУказаниемПоложения(Расширение, ДвоичныеДанныеФайла, ДвоичныеДанныеКартинки, ДанныеОПоложении);
#КонецВставки

	СисИнфо = Новый СистемнаяИнформация;
	Если СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86 ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		Попытка
			WordApp = Новый COMОбъект("Word.Application");
		Исключение
			ВызватьИсключение(НСтр("ru = 'Ошибка работы с приложением MS Word. Необходимо проверить правильность установки приложения.'"));
		КонецПопытки;
	Иначе
		ВызватьИсключение(НСтр("ru = 'Вставка штрихкода в файл MS Word возможна только в Windows. Обратитесь к администратору.'"));	
	КонецЕсли;
	
	WordApp.WordBasic.DisableAutoMacros(1);
	ВерсияСтрока = WordApp.Build;
	МассивСтр = СтрРазделить(ВерсияСтрока, ".", Ложь);
	ВерсияЧисло = 0;
	Попытка
		ВерсияЧисло = Число(МассивСтр[0]);
	Исключение
		ВерсияЧисло = 0;
	КонецПопытки;		
	
	ИмяВременногоФайлаOffice = ПолучитьИмяВременногоФайла(Расширение);
	НовыйПутьКФайлу = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайлаOffice);
	
	ИмяВременногоФайлаКартинки = ПолучитьИмяВременногоФайла("JPG");
	ДвоичныеДанныеКартинки.Записать(ИмяВременногоФайлаКартинки);
	
	Док = WordApp.Documents.Add(ИмяВременногоФайлаOffice);
	   
	oGraphicObject = Док.Shapes.AddTextBox(1, 100, 100, 100, 50);
	
	//устанавливаем привязку положения к печатной области
	oGraphicObject.RelativeHorizontalPosition = 0;
	oGraphicObject.RelativeVerticalPosition = 0;  
	
	ПоложениеНаСтранице = ДанныеОПоложении.ПоложениеНаСтранице;
	Если ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ПравыйНижний") Тогда
		СмещениеПоГоризонтали = "MAX";
		СмещениеПоВертикали = "MAX";
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ПравыйВерхний") Тогда
		СмещениеПоГоризонтали = "MAX";
		СмещениеПоВертикали = "MIN";
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ЛевыйВерхний") Тогда
		СмещениеПоГоризонтали = "MIN";
		СмещениеПоВертикали = "MIN";
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ЛевыйНижний") Тогда
		СмещениеПоГоризонтали = "MIN";
		СмещениеПоВертикали = "MAX";
	КонецЕсли;
	
	Если СмещениеПоГоризонтали = "MAX" Тогда
		//выравнивание к правому краю
		oGraphicObject.Left = -999996; // wdShapeRight
	ИначеЕсли СмещениеПоГоризонтали = "MIN" Тогда
		//выравнивание к левому краю
		oGraphicObject.left = -999998; // wdShapeLeft
	Иначе
		//если задано произвольное расположение, то переведем смещение по горизонтали из миллиметров в point'ы
		//1 point = 1/72"
		oGraphicObject.RelativeHorizontalPosition = 1;
		Если НЕ ЗначениеЗаполнено(ДанныеОПоложении.СмещениеПоГоризонтали) Тогда
			ДанныеОПоложении.СмещениеПоГоризонтали = 0;
		КонецЕсли;
		oGraphicObject.left = (ДанныеОПоложении.СмещениеПоГоризонтали / 25.4) * 72;
	КонецЕсли;
	
	Если СмещениеПоВертикали = "MAX" Тогда
		//выравнивание по нижнему краю
		oGraphicObject.Top = -999997; // wdShapeBottom
	ИначеЕсли СмещениеПоВертикали = "MIN" Тогда
		//выравнивание по верхнему краю
		oGraphicObject.Top = -999999; // wdShapeTop
	Иначе
		//если задано произвольное расположение, то переведем смещение по горизонтали из миллиметров в point'ы
		oGraphicObject.RelativeVerticalPosition = 1;
		Если НЕ ЗначениеЗаполнено(ДанныеОПоложении.СмещениеПоВертикали) Тогда
			ДанныеОПоложении.СмещениеПоВертикали = 0;
		КонецЕсли;
		oGraphicObject.Top =(ДанныеОПоложении.СмещениеПоВертикали / 25.4) * 72;
	КонецЕсли;

	oGraphicObject.Select();

	WordApp.Selection.ShapeRange.Line.Visible = Ложь;
	
	//WordApp.Selection.InlineShapes.AddPicture(ИмяВременногоФайлаКартинки);
	Если ВерсияЧисло < 12 Тогда  // ниже word 2007 - т.е. 2003 и ниже
	
		WordApp.Selection.InlineShapes.AddPicture(ИмяВременногоФайлаКартинки);
	
	Иначе	
	
	    range = WordApp.Selection.Range;
        КартинкаWord = WordApp.Selection.InlineShapes.AddPicture(
			ИмяВременногоФайлаКартинки, False, True, range);
			
	КонецЕсли;	
	
	WordApp.Selection.ShapeRange.TextFrame.AutoSize = Истина;
	WordApp.Selection.ShapeRange.Fill.Visible = Ложь;
	WordApp.Selection.Font.Bold = Истина;
	
	//Если ДанныеОПоложении.СмещениеПоГоризонтали = "MAX" ИЛИ ДанныеОПоложении.СмещениеПоГоризонтали = "MIN" Тогда 
	//	oGraphicObject.ConvertToFrame();		
	//КонецЕсли;
	

	ВерсияСтрока = WordApp.Build;
	МассивСтр = СтрРазделить(ВерсияСтрока, ".", Ложь);
	ВерсияЧисло = 0;
	Попытка
		ВерсияЧисло = Число(МассивСтр[0]);
	Исключение
		ВерсияЧисло = 0;
	КонецПопытки;		
	
	Если ВерсияЧисло >= 12 Тогда
		
		Если Расширение = "docx" Тогда
			Док.SaveAs(НовыйПутьКФайлу, 12);                        
		Иначе
			Док.SaveAs(НовыйПутьКФайлу, 0);
		КонецЕсли;
	Иначе
	    Если Расширение = "docx" Тогда
			Док.SaveAs(НовыйПутьКФайлу, 109);                        
		Иначе
			Док.SaveAs(НовыйПутьКФайлу);
		КонецЕсли;
	КонецЕсли;
	Док.Saved = Истина;	
	Док.Close(); 
	WordApp.Quit();
	WordApp = Неопределено;
	
	УдалитьФайлы(ИмяВременногоФайлаOffice);
	
	Возврат НовыйПутьКФайлу;
	
КонецФункции

// Вставка ШК в колонтитул документа в Word
//
Функция ЦППК_ВставитьКартинкуВКолонтитулФайлаDocСУказаниемПоложения(Расширение, ДвоичныеДанныеФайла, ДвоичныеДанныеКартинки, ДанныеОПоложении)
			
	СисИнфо = Новый СистемнаяИнформация;
	Если СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86 ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		Попытка
			WordApp = Новый COMОбъект("Word.Application");
		Исключение
			ВызватьИсключение(НСтр("ru = 'Ошибка работы с приложением MS Word. Необходимо проверить правильность установки приложения.'"));
		КонецПопытки;
	Иначе
		ВызватьИсключение(НСтр("ru = 'Вставка штрихкода в файл MS Word возможна только в Windows. Обратитесь к администратору.'"));	
	КонецЕсли;

	ИмяВременногоФайлаOffice = ПолучитьИмяВременногоФайла(Расширение);
	НовыйПутьКФайлу = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайлаOffice);

	ИмяВременногоФайлаКартинки = ПолучитьИмяВременногоФайла("JPG");
	ДвоичныеДанныеКартинки.Записать(ИмяВременногоФайлаКартинки);

	Док = WordApp.Documents.Add(ИмяВременногоФайлаOffice);		
	
	ПоложениеНаСтранице = ДанныеОПоложении.ПоложениеНаСтранице;
	Если ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ПравыйНижний") Тогда
		СмещениеПоГоризонтали 	= "MAX";
		СмещениеПоВертикали 	= "MAX";
		
		Колонтитул = Док.Sections.item(1).Footers.item(1).Range;
		
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ПравыйВерхний") Тогда
		СмещениеПоГоризонтали 	= "MAX";
		СмещениеПоВертикали 	= "MIN";
		
		Колонтитул = Док.Sections.item(1).Headers.item(1).Range;
		
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ЛевыйВерхний") Тогда
		СмещениеПоГоризонтали 	= "MIN";
		СмещениеПоВертикали 	= "MIN";
		
		Колонтитул = Док.Sections.item(1).Headers.item(1).Range;
		
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ЛевыйНижний") Тогда
		СмещениеПоГоризонтали 	= "MIN";
		СмещениеПоВертикали 	= "MAX";
		
		Колонтитул = Док.Sections.item(1).Footers.item(1).Range;
		
	Иначе // нижний колонтитул
		Колонтитул = Док.Sections.item(1).Footers.item(1).Range;
	КонецЕсли;				
	
	Картинка = Колонтитул.InlineShapes.AddPicture(ИмяВременногоФайлаКартинки, False, True);
	Картинка.Select();
	
	Shape = Картинка.ConvertToShape(); // сконвертировать картинку в фигуру
	
	Если СмещениеПоГоризонтали = "MAX" Тогда
		//выравнивание к правому краю
		Shape.Left = -999996;
	ИначеЕсли СмещениеПоГоризонтали = "MIN" Тогда
		//выравнивание к левому краю
		Shape.left = -999998;
	Иначе
		//если задано произвольное расположение, то переведем смещение по горизонтали из миллиметров в point'ы
		//1 point = 1/72"		
		Если НЕ ЗначениеЗаполнено(ДанныеОПоложении.СмещениеПоГоризонтали) Тогда
			ДанныеОПоложении.СмещениеПоГоризонтали = 0;
		КонецЕсли;
		Shape.left = (ДанныеОПоложении.СмещениеПоГоризонтали / 25.4) * 72;
	КонецЕсли;

	Если СмещениеПоВертикали = "MAX" Тогда
		//выравнивание по нижнему краю
		Shape.Top = -999997;
	ИначеЕсли СмещениеПоВертикали = "MIN" Тогда
		//выравнивание по верхнему краю
		Shape.Top = -999999;
	Иначе
		//если задано произвольное расположение, то переведем смещение по горизонтали из миллиметров в point'ы		
		Если НЕ ЗначениеЗаполнено(ДанныеОПоложении.СмещениеПоВертикали) Тогда
			ДанныеОПоложении.СмещениеПоВертикали = 0;
		КонецЕсли;
		Shape.Top =(ДанныеОПоложении.СмещениеПоВертикали / 25.4) * 72;
	КонецЕсли;
	
	// устанавливаем привязку положения относительно страницы
	Shape.RelativeHorizontalPosition 	= 1;
	Shape.RelativeVerticalPosition 		= 1; 
	
	ВерсияСтрока = WordApp.Build;
	МассивСтр = СтрРазделить(ВерсияСтрока, ".", Ложь);
	ВерсияЧисло = 0;
	Попытка
		ВерсияЧисло = Число(МассивСтр[0]);
	Исключение
		ВерсияЧисло = 0;
	КонецПопытки;		

	Если ВерсияЧисло >= 12 Тогда

		Если Расширение = "docx" Тогда
			Док.SaveAs(НовыйПутьКФайлу, 12);                        
		Иначе
			Док.SaveAs(НовыйПутьКФайлу, 0);
		КонецЕсли;
	Иначе
		Если Расширение = "docx" Тогда
			Док.SaveAs(НовыйПутьКФайлу, 109);                        
		Иначе
			Док.SaveAs(НовыйПутьКФайлу);
		КонецЕсли;
	КонецЕсли;
	Док.Saved = Истина;	
	Док.Close(); 
	WordApp.Quit();
	WordApp = Неопределено;

	УдалитьФайлы(ИмяВременногоФайлаOffice);

	Возврат НовыйПутьКФайлу;		
	
КонецФункции
