
&После("УстановитьОтборСписка")
Процедура ЦППК_УстановитьОтборСписка(Список, ПараметрыОтбора)

	//Zayc + 27.05.2016 Устанавииваем отбор по билетному кассиру в заявках на возврат
	// ФИОБК_ТТС 
	ФИОБК_ТТС = ПараметрыОтбора.Получить("ФИОБК_ТТС");
	Если ФИОБК_ТТС <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(ФИОБК_ТТС) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"ДокументФИОБК_ТТС");
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"ДокументФИОБК_ТТС",
				ФИОБК_ТТС,
				ВидСравненияКомпоновкиДанных.ВИерархии);
		КонецЕсли;
	КонецЕсли; 
	
	// ФИОЗаявителяРС   Устанавииваем отбор по заявителю  в заявках на возврат
	ФИОЗаявителя_ТТС = ПараметрыОтбора.Получить("ФИОЗаявителя_ТТС");
	Если ФИОЗаявителя_ТТС <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(ФИОЗаявителя_ТТС) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"ДокументФИОЗаявителя_ТТС");
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"ДокументФИОЗаявителя_ТТС",
				ФИОЗаявителя_ТТС,
				ВидСравненияКомпоновкиДанных.ВИерархии);
		КонецЕсли;
	КонецЕсли;
	
	//++AxelSoft Шарапова 11.11.2024 САНФ-029223
	ЦППК_ФИОЗаявителя = ПараметрыОтбора.Получить("ЦППК_ФИОЗаявителя");
	Если ЦППК_ФИОЗаявителя <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(ЦППК_ФИОЗаявителя) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"ЦППК_ФИОЗаявителя");
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"ЦППК_ФИОЗаявителя",
				ЦППК_ФИОЗаявителя,
				ВидСравненияКомпоновкиДанных.НачинаетсяС);
		КонецЕсли;
	КонецЕсли;
	//--AxelSoft Шарапова 11.11.2024 САНФ-029223
	//Zayc - 27.05.2016 
	
// { *Андрей Анохин (Ресурс-Сервис) [01.08.2015]
	
	МестоРассмотренияТекст = ПараметрыОтбора.Получить("МестоРассмотренияТекст");
	Если МестоРассмотренияТекст <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(МестоРассмотренияТекст) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"МестоРассмотренияТекст");
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"МестоРассмотренияТекст",
				МестоРассмотренияТекст,
				ВидСравненияКомпоновкиДанных.ВИерархии);
		КонецЕсли;
	КонецЕсли;
// }	

// { *Александр Грошев (ТТС) [10.11.2016]
	МестоРассмотрения = ПараметрыОтбора.Получить("МестоРассмотрения");
	Если МестоРассмотрения <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(МестоРассмотрения) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"ДокументМестоРассмотрения");
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"ДокументМестоРассмотрения",
				МестоРассмотрения);
		КонецЕсли;
	КонецЕсли;	
// }

КонецПроцедуры

&ИзменениеИКонтроль("УстановитьОтборСписка")
Процедура ЦППК_УстановитьОтборСписка1(Список, ПараметрыОтбора) Экспорт
	
	// вид документа 
	ВидДокумента = ПараметрыОтбора.Получить("ВидДокумента");
	Если ВидДокумента <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(ВидДокумента) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"ВидДокумента");
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"ВидДокумента",
				ВидДокумента,
				ВидСравненияКомпоновкиДанных.ВИерархии);
		КонецЕсли;
	КонецЕсли;
	
	// Тематика 
	Тематика = ПараметрыОтбора.Получить("Тематика");
	Если Тематика <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Тематика) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Тематика");
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"Тематика",
				Тематика,
				ВидСравненияКомпоновкиДанных.Равно);
		КонецЕсли;
	КонецЕсли;
	
	// папка 
	Папка = ПараметрыОтбора.Получить("Папка");
	Если Папка <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Папка) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Папка");
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"Папка",
				Папка,
				ВидСравненияКомпоновкиДанных.ВИерархии);
		КонецЕсли;
	КонецЕсли;
	
	// организация 
	Организация = ПараметрыОтбора.Получить("Организация");
	Если Организация <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Организация) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Организация");
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"Организация",
				Организация);
		КонецЕсли;
	КонецЕсли;
	
	// сторона 1 
	Сторона1 = ПараметрыОтбора.Получить("Сторона1");
	Если Сторона1 <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Сторона1) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Сторона1");
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"Сторона1",
				Сторона1);
		КонецЕсли;
	КонецЕсли;
	
	// контрагент  
	Контрагент = ПараметрыОтбора.Получить("Контрагент");
	Если Контрагент <> Неопределено Тогда 
		#Удаление
		Если Не ЗначениеЗаполнено(Контрагент) Тогда	
			Список.Параметры.УстановитьЗначениеПараметра("ОтборПоКонтрагенту", Ложь);
			Список.Параметры.УстановитьЗначениеПараметра("КонтрагентОтбор", Неопределено);
		Иначе			
			Список.Параметры.УстановитьЗначениеПараметра("ОтборПоКонтрагенту", Истина);
			Список.Параметры.УстановитьЗначениеПараметра("КонтрагентОтбор", Контрагент);
		КонецЕсли;
		#КонецУдаления
	КонецЕсли;
	
	// сторона 1 
	Сторона2 = ПараметрыОтбора.Получить("Сторона2");
	Если Сторона2 <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Сторона2) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Сторона2");
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"Сторона2",
				Сторона2);
		КонецЕсли;
	КонецЕсли;
	
	// проект 
	Проект = ПараметрыОтбора.Получить("Проект");
	Если Проект <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Проект) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Проект");
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"Проект",
				Проект,
				ВидСравненияКомпоновкиДанных.ВИерархии);
		КонецЕсли;
	КонецЕсли;
	
	// Период 
	ПериодВыборки = ПараметрыОтбора.Получить("ПериодВыборки");
	Если ПериодВыборки <> Неопределено Тогда 
		
		Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтборПериодНачало"));
		Параметр.Использование = Ложь;
		Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтборПериодОкончание"));
		Параметр.Использование = Ложь;
		
		Если ЗначениеЗаполнено(ПериодВыборки.ДатаНачала) Тогда
			Список.Параметры.УстановитьЗначениеПараметра("ОтборПериодНачало", ПериодВыборки.ДатаНачала);
		КонецЕсли;
		Если ЗначениеЗаполнено(ПериодВыборки.ДатаОкончания) Тогда
			Список.Параметры.УстановитьЗначениеПараметра("ОтборПериодОкончание", ПериодВыборки.ДатаОкончания);
		КонецЕсли;
		
	КонецЕсли;
	
	// состояние
	Состояние = ПараметрыОтбора.Получить("Состояние");
	Если Состояние <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Состояние) Тогда 
			Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Состояние"));
			Параметр.Использование = Ложь;
		Иначе
			Список.Параметры.УстановитьЗначениеПараметра("Состояние", Состояние);
		КонецЕсли;	
	КонецЕсли;
	
	// категория
	Категория = ПараметрыОтбора.Получить("Категория");
	Если Категория <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Категория) Тогда 
			Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Категория"));
			Параметр.Использование = Ложь;
		Иначе
			Список.Параметры.УстановитьЗначениеПараметра("Категория", Категория);
		КонецЕсли;	
	КонецЕсли;
	
	// Прочитанность
	ПрочитанностьОтбор = ПараметрыОтбора.Получить("Прочитанность");
	Если ПрочитанностьОтбор <> Неопределено Тогда 
		
		Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтборПоНепрочтенные"));
		Параметр.Использование = Ложь;
		
		Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтборПоПрочтенные"));
		Параметр.Использование = Ложь;
		
		Если ЗначениеЗаполнено(ПрочитанностьОтбор) Тогда 
			
			Если ПрочитанностьОтбор = "Непрочтенные" Тогда
				Список.Параметры.УстановитьЗначениеПараметра("ОтборПоНепрочтенные", Истина);
			ИначеЕсли ПрочитанностьОтбор = "Прочтенные" Тогда	
				Список.Параметры.УстановитьЗначениеПараметра("ОтборПоПрочтенные", Истина);
			КонецЕсли;	
			
		КонецЕсли;	
	КонецЕсли;
	
	// Важность
	ВажностьОтбор = ПараметрыОтбора.Получить("Важность");
	Если ВажностьОтбор <> Неопределено Тогда
		Если Не ЗначениеЗаполнено(ВажностьОтбор) Тогда 
			Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Важность"));
			Параметр.Использование = Ложь;
		Иначе
			Список.Параметры.УстановитьЗначениеПараметра("Важность", ВажностьОтбор);
		КонецЕсли;
	КонецЕсли;
	
	// СостояниеМЭДО
	СостояниеМЭДООтбор = ПараметрыОтбора.Получить("СостояниеМЭДО");
	Если СостояниеМЭДООтбор <> Неопределено Тогда
		Если Не ЗначениеЗаполнено(СостояниеМЭДООтбор) Тогда 
			Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СостояниеМЭДО"));
			Параметр.Использование = Ложь;
		Иначе
			Список.Параметры.УстановитьЗначениеПараметра("СостояниеМЭДО", СостояниеМЭДООтбор);
		КонецЕсли;
	КонецЕсли; 
	
	// СостоянияЭДО
	СостояниеЭДООтбор = ПараметрыОтбора.Получить("СостоянияЭДО");
	Если СостояниеЭДООтбор <> Неопределено Тогда
		Список.Параметры.УстановитьЗначениеПараметра("СостоянияЭДО", СостояниеЭДООтбор);
	КонецЕсли;
	
	// Форма и шаблон документа
	// Параметр объединен, потому что в РС ДанныеДокументовПредприятия нет информации по форме и шаблону
	// Для отбора по этим параметрам приходится делать запрос в условии
	// Поэтому сделал объединенный параметр, иначе бы выполнялось 2 разных запроса
	//
	ФормаОтбор = ПараметрыОтбора.Получить("ФормаДокумента"); 
	ШаблонОтбор = ПараметрыОтбора.Получить("ШаблонДокумента");
	Если ФормаОтбор <> Неопределено И ШаблонОтбор <> Неопределено Тогда 
		Список.Параметры.УстановитьЗначениеПараметра("ОтборДляСвязиСДокументомЭДО", Истина);
		Список.Параметры.УстановитьЗначениеПараметра("ФормаОтбор", ФормаОтбор); 
		Список.Параметры.УстановитьЗначениеПараметра("ШаблонОтбор", ШаблонОтбор);
	КонецЕсли;
	
КонецПроцедуры
