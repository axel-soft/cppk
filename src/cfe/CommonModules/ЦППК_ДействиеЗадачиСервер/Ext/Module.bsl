// Процедура записывает в РС ДействияЗадачи признак
// ЦППК_ЕстьВыполненныеПодзадачи, булево      
// Параметры:
//			Источник - ДокументСсылкаДействиеЗадачи - ссылка 
Процедура ЗаписатьВыполненыеПодзадачи(Источник, Отказ)  Экспорт

	Возврат;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ДействиеЗадачи") Тогда
		
		ВышестоящаяЗадача = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Ссылка, "Задача.ВышестоящаяЗадача");
		ЗадачаВыполнена = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Ссылка, "ДатаВыполнения");	
		Если ЗначениеЗаполнено(ВышестоящаяЗадача)
			И ЗначениеЗаполнено(ЗадачаВыполнена) Тогда
	
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ДействияЗадач.Регистратор КАК Регистратор
				|ИЗ
				|	РегистрСведений.ДействияЗадач КАК ДействияЗадач
				|ГДЕ
				|	ДействияЗадач.Задача = &Задача";
			
			Запрос.УстановитьПараметр("Задача", ВышестоящаяЗадача);
			
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				
				НачатьТранзакцию();
				Попытка
					Блокировка = Новый БлокировкаДанных;
					ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ДействияЗадач.НаборЗаписей");
					ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
					ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаДетальныеЗаписи.Регистратор);
					Блокировка.Заблокировать();
					
					НаборЗаписей = РегистрыСведений.ДействияЗадач.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
					
					НаборЗаписей.Прочитать(); 
					Для каждого ЗаписьДействияЗадач  Из  НаборЗаписей Цикл
						ЗаписьДействияЗадач.ЦППК_ЕстьВыполненныеПодзадачи = Истина;	
					КонецЦикла; 
					
                    				НаборЗаписей.Записать();	
					ЗафиксироватьТранзакцию();
				Исключение
					ОтменитьТранзакцию();
				КонецПопытки;
			КонецЕсли;
		
		КонецЕсли;
		
	
	КонецЕсли;	
КонецПроцедуры

Функция ПолучитьВышестоящуюЗадачу(Источник)

	

КонецФункции // ()
