
#Область ПрограммныйИнтерфейс

&ИзменениеИКонтроль("РезультатыВариантовВыполнения")
Функция ЦППК_РезультатыВариантовВыполнения(ДействиеЗадачи, ВидЗадачи, ВидДействия, КешДанных = Неопределено) Экспорт
	
	РезультатыВариантовВыполнения = Новый Соответствие;
	Если Не ЗначениеЗаполнено(ВидДействия) Тогда
		Возврат РезультатыВариантовВыполнения;
	КонецЕсли;
	
	Если ВидДействия = Справочники.ВидыДействийЗадач.ОзнакомитьсяСРезультатом
		И (ВидЗадачи = Справочники.ВидыЗадач.Подписание
			Или ВидЗадачи = Справочники.ВидыЗадач.Регистрация
			Или ВидЗадачи = Справочники.ВидыЗадач.Согласование
			Или ВидЗадачи = Справочники.ВидыЗадач.Утверждение) Тогда
		
		РезультатыВариантовВыполнения.Вставить(
			1,
			Справочники.РезультатыДействийЗадач.Ознакомился);
		
	ИначеЕсли ВидДействия = Справочники.ВидыДействийЗадач.ОбработатьРезультат
		И (ВидЗадачи = Справочники.ВидыЗадач.Подписание
			Или ВидЗадачи = Справочники.ВидыЗадач.Регистрация
			Или ВидЗадачи = Справочники.ВидыЗадач.Согласование
			Или ВидЗадачи = Справочники.ВидыЗадач.Утверждение) Тогда
		
		РезультатыВариантовВыполнения.Вставить(
			1,
			Справочники.РезультатыДействийЗадач.ОтправленоПовторно);
		РезультатыВариантовВыполнения.Вставить(
			2,
			Справочники.РезультатыДействийЗадач.Завершил);
		
	Иначе
		
		НастроитьНаправитьАвторуПомощнику = ДействияСерверПовтИсп.НастроитьНаправитьАвторуПомощнику(ВидДействия, ВидЗадачи);
				
		ЕстьПомощники = Ложь;
		Если НастроитьНаправитьАвторуПомощнику Тогда
			АктуальныеПомощники = ЗамещающиеИПомощники.ПодходящиеЗамещения(
				ДействиеЗадачи, Перечисления.ВидыЗамещения.Помощники, КешДанных);
			ЕстьПомощники = (АктуальныеПомощники.Количество() > 0);
		КонецЕсли;
		
		ТекущийНомерРезультата = 1;
		ДанныеНабораСостояний = РаботаСЗадачамиПовтИсп.ДанныеНабораСостояний(ВидЗадачи);
		Для Каждого КлючИЗначение Из ДанныеНабораСостояний.ПорядокРезультатов Цикл
			
			ВидУчастника = КлючИЗначение.Ключ;
			ПорядокРезультатов = КлючИЗначение.Значение;
			
			ОчереднойВидДействия = ВидДействияПоВидуУчастника(ВидЗадачи, ВидУчастника);
			Если ОчереднойВидДействия <> ВидДействия Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого РезультатДействия Из ПорядокРезультатов Цикл
				
				Если НастроитьНаправитьАвторуПомощнику Тогда
					Если (ЕстьПомощники И РезультатДействия = Справочники.РезультатыДействийЗадач.НаправленоАвтору)
						Или (Не ЕстьПомощники И РезультатДействия = Справочники.РезультатыДействийЗадач.НаправленоПомощнику) Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
#Вставка
				Если НастроитьНаправитьАвторуПомощнику Тогда
					Если (ЕстьПомощники И РезультатДействия = Справочники.РезультатыДействийЗадач.НаправленоПомощнику) Тогда
						РезультатДействия = Справочники.РезультатыДействийЗадач.НаправленоАвтору;
					КонецЕсли;
				КонецЕсли;
#КонецВставки
				
				РезультатыВариантовВыполнения.Вставить(ТекущийНомерРезультата, РезультатДействия);
				
				ТекущийНомерРезультата = ТекущийНомерРезультата + 1;
				
			КонецЦикла;
			
			Прервать;
			
		КонецЦикла;
		
		Если РезультатыВариантовВыполнения.Количество() = 0 Тогда
			
			ВызватьИсключение СтрШаблон(
				НСтр("ru = 'Неизвестны варианты выполнения для вида действия %1 (%2).'"),
				ВидЗадачи,
				ВидДействия);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат РезультатыВариантовВыполнения;
	
КонецФункции

&ИзменениеИКонтроль("ДанныеСоисполнителей")
Функция ЦППК_ДанныеСоисполнителей(Задача, ДействиеЗадачи, КлючНазначения, КешДанных)

	ДанныеСоисполнителей = РаботаСЗадачамиКлиентСервер.НовыйДанныеСоисполнителей();
	Если Не ЗначениеЗаполнено(Задача) Тогда
		Возврат ДанныеСоисполнителей;
	КонецЕсли;

	Если ТипЗнч(ДействиеЗадачи) = Тип("СтрокаТаблицыЗначений") Тогда
		ДействиеЗадачиСсылка = ДействиеЗадачи.Ссылка;
	Иначе
		ДействиеЗадачиСсылка = ДействиеЗадачи;
	КонецЕсли;

	ПраваПоОбъекту = ДокументооборотПраваДоступа.ПраваПользователяПоОбъекту(Задача,, КешДанных);
	Если Не ПраваПоОбъекту.Чтение Тогда
		ВызватьИсключение СтрШаблон(
		НСтр("ru = 'Не достаточно прав для просмотра данных о соисполнителях по задаче %1.'"),
		ДействиеЗадачиСсылка);
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);

	Если КлючНазначения <> "Дерево"
		И КлючНазначения <> "ОписаниеHTML"
		И КлючНазначения <> "ОписаниеПростойТекст" Тогда
		ВызватьИсключение
		СтрШаблон(
		НСтр("ru = 'Неизвестный ключ назначения %1.'"),
		КлючНазначения);
	КонецЕсли;

	// Рассчитаем вспомогательные данные.
	КэшОбластиПросмотра = КэшиНаВремяВызоваПовтИсп.КэшЗадачаОбластьПросмотра();

	Если КэшОбластиПросмотра.Заполнен И КэшОбластиПросмотра.Задача = Задача Тогда
		РеквизитыЗадачи = КэшОбластиПросмотра.ЗадачаОбъект;
		Участники = КэшОбластиПросмотра.ЗадачаОбъект.Участники;
	Иначе
		РеквизитыЗадачи = Неопределено;
		Если КешДанных <> Неопределено И КешДанных.Свойство("ДанныеДокументовЗадача") Тогда
			РеквизитыЗадачи = КешДанных.ДанныеДокументовЗадача[Задача];
		КонецЕсли;
		Если РеквизитыЗадачи = Неопределено Тогда
			РеквизитыЗадачи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Задача,
			"Источник, Участники");
		КонецЕсли;
		Участники = РеквизитыЗадачи.Участники.Выгрузить();
		Участники.Сортировать("НомерСтроки Возр");
	КонецЕсли;

	ДанныеПодчиненныхУчастников = Новый Соответствие;

	ВидДействия = Справочники.ВидыДействийЗадач.ПустаяСсылка();

	Если ЗначениеЗаполнено(ДействиеЗадачиСсылка) Тогда

		КэшОбластиПросмотра = КэшиНаВремяВызоваПовтИсп.КэшЗадачаОбластьПросмотра();

		Если КэшОбластиПросмотра.Заполнен И КэшОбластиПросмотра.ДействиеЗадачи = ДействиеЗадачиСсылка Тогда
			РеквизитыДействияЗадачи = КэшОбластиПросмотра.РеквизитыДействияЗадачи;
		ИначеЕсли ТипЗнч(ДействиеЗадачи) = Тип("СтрокаТаблицыЗначений") Тогда
			РеквизитыДействияЗадачи = ДействиеЗадачи;
		Иначе
			РеквизитыДействияЗадачи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ДействиеЗадачи,
			"ВидДействия");
		КонецЕсли;

		КешНСИЗадач = РаботаСЗадачамиПовтИсп.КешНСИЗадач();
		РеквизитыВидаДействия = КешНСИЗадач.РеквизитыВидовДействий[РеквизитыДействияЗадачи.ВидДействия];
		ВидДействия = РеквизитыДействияЗадачи.ВидДействия;

		ДанныеСоисполнителей.Представление = РеквизитыВидаДействия.ТерминСоисполнители;

	Иначе

		ДанныеСоисполнителей.Представление =
		Метаданные.Документы.Задача.ТабличныеЧасти.Участники.Синоним;

	КонецЕсли;

	РежимОтображения = "Автор";
	Для Каждого СтрокаУчастника Из Участники Цикл

		Если СтрокаУчастника.ВидУчастника = Справочники.ВидыУчастниковЗадач.ОбеспечивающийПодписание Тогда
			СтрокаУчастника.ВидУчастника = Справочники.ВидыУчастниковЗадач.Подписывающий;
		КонецЕсли;

		Если Не ЗначениеЗаполнено(ДействиеЗадачиСсылка) Или СтрокаУчастника.ДействиеУчастника <> ДействиеЗадачиСсылка Тогда
			Продолжить;
		КонецЕсли;

		Если РаботаСЗадачамиПовтИсп.ЭтоИсполнитель(СтрокаУчастника.ВидУчастника) Тогда
			РежимОтображения = "Исполнитель";
		ИначеЕсли РаботаСЗадачамиПовтИсп.ЭтоПроверяющий(СтрокаУчастника.ВидУчастника) Тогда
			РежимОтображения = "Проверяющий";
		КонецЕсли;

	КонецЦикла;

	// Для исполнителя в HTML описании не показываем соисполнителей.
	Если РежимОтображения = "Исполнитель" И КлючНазначения = "ОписаниеHTML" Тогда
		Возврат ДанныеСоисполнителей;
	КонецЕсли;

	// Для ознакомления при выполнении задач по почте не показываем соисполнителей.
	Если РежимОтображения = "Исполнитель"
		И КлючНазначения = "ОписаниеПростойТекст"
		И ВидДействия = Справочники.ВидыДействийЗадач.Ознакомиться Тогда
		Возврат ДанныеСоисполнителей;
	КонецЕсли;

	ДанныеОсобыхУчастников = ИнтеграцияЗадач.ОсобыеУчастникиДляСоисполнителей(
	РежимОтображения,
	РеквизитыЗадачи.Источник);
	Если ДанныеОсобыхУчастников <> Неопределено Тогда
		Участники = ДанныеОсобыхУчастников.Участники;
		ДанныеТекущегоЦикла = ДанныеОсобыхУчастников.ДанныеТекущегоЦикла;
		ДанныеПодчиненныхУчастников = ДанныеОсобыхУчастников.ДанныеПодчиненныхУчастников;
	Иначе
		ДанныеТекущегоЦикла = ИнтеграцияЗадач.ДанныеТекущегоЦикла(РеквизитыЗадачи.Источник);
	КонецЕсли;

	ВсеДействия = Новый Массив;
	Для Каждого СтрокаУчастника Из Участники Цикл

		Если ЗначениеЗаполнено(СтрокаУчастника.ДействиеУчастника) Тогда
			ВсеДействия.Добавить(СтрокаУчастника.ДействиеУчастника);
		КонецЕсли;

	КонецЦикла;

	Для Каждого КлючИЗначение Из ДанныеПодчиненныхУчастников Цикл

		ДанныеПодчиненныхУчастника = КлючИЗначение.Значение;

		Для Каждого СтрокаУчастника Из ДанныеПодчиненныхУчастника Цикл

			Если ЗначениеЗаполнено(СтрокаУчастника.ДействиеУчастника) Тогда
				ВсеДействия.Добавить(СтрокаУчастника.ДействиеУчастника);
			КонецЕсли;

		КонецЦикла;

	КонецЦикла;

	РеквизитыВсехДействий = Неопределено;
	СписокРеквизитов = "ДатаВыполнения, Исполнитель, Источник, Проведен,
	|ЕстьПриложения, РезультатДействия, РезультатДействияТекстом, ФактическийИсполнитель";
	Если КешДанных <> Неопределено И КешДанных.Свойство("ДанныеДокументовДействиеЗадачи") Тогда
		РеквизитыВсехДействий = КешДанных.ДанныеДокументовДействиеЗадачи;
		НедостающиеДействия = Новый Массив;
		Для Каждого Действие Из ВсеДействия Цикл
			Если РеквизитыВсехДействий[Действие] = Неопределено И НедостающиеДействия.Найти(Действие) = Неопределено Тогда
				НедостающиеДействия.Добавить(Действие);
			КонецЕсли;
		КонецЦикла;
		Если НедостающиеДействия.Количество() > 0 Тогда
			РеквизитыНедостающихДействий = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(НедостающиеДействия, СписокРеквизитов);
			ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(РеквизитыВсехДействий, РеквизитыНедостающихДействий, Истина);
		КонецЕсли;
	КонецЕсли;
	Если РеквизитыВсехДействий = Неопределено Тогда
		РеквизитыВсехДействий = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ВсеДействия, СписокРеквизитов);
	КонецЕсли;

	ДанныеВсехДействий = ДанныеДействийЗадач(ВсеДействия);
	ДанныеВсехДействий.Индексы.Добавить("ДействиеЗадачи");

	ДействияДругихЭтапов = Новый Соответствие;
	ТекущийИсполнительЕдинственный = Истина;
	ВидыУчастников = Новый Массив;
	КоличествоУчастниковПоВидам = Новый Соответствие;
	ОтображаемыеУчастники = Новый Массив;
	ОтображаемыеПодчиненныеУчастников = Новый Соответствие;
	Для Каждого СтрокаУчастника Из Участники Цикл

		РеквизитыДействияУчастника = РеквизитыВсехДействий[СтрокаУчастника.ДействиеУчастника];

		// Для исполнителя и проверяющего отображаем только исполнителей.
		// Для автора отображаем всех.
		Если (РежимОтображения = "Исполнитель" Или РежимОтображения = "Проверяющий")
			И Не РаботаСЗадачамиПовтИсп.ЭтоИсполнитель(СтрокаУчастника.ВидУчастника) Тогда
			Продолжить;
		КонецЕсли;

		Если ДанныеТекущегоЦикла <> Неопределено Тогда

			ЗадачаПроцессаЭтапа = Неопределено;
			Если ЗначениеЗаполнено(СтрокаУчастника.ВнешнийИдентификатор) Тогда
				ЗадачаПроцессаЭтапа = ДанныеТекущегоЦикла[СтрокаУчастника.ВнешнийИдентификатор];
			КонецЕсли;

			// Для "Обрабатывающий результат" и "Ознакомляемый с результатом" требуется чтобы они были этого цикла.
			Если (СтрокаУчастника.ВидУчастника = Справочники.ВидыУчастниковЗадач.ОбрабатывающийРезультат
				Или СтрокаУчастника.ВидУчастника = Справочники.ВидыУчастниковЗадач.ОзнакомляемыйСРезультатом)
				И (РеквизитыДействияУчастника = Неопределено
				Или ЗадачаПроцессаЭтапа = Неопределено
				Или РеквизитыДействияУчастника.Источник <> ЗадачаПроцессаЭтапа) Тогда
				Продолжить;
			КонецЕсли;

			// Для ссылки на действие исполнителя требуется чтобы они были этого цикла.
			Если ЗначениеЗаполнено(СтрокаУчастника.ДействиеУчастника)
				И (РеквизитыДействияУчастника = Неопределено
				Или РеквизитыДействияУчастника.Источник <> ЗадачаПроцессаЭтапа) Тогда
				ДействияДругихЭтапов[СтрокаУчастника.ДействиеУчастника] = Истина;
			КонецЕсли;

		КонецЕсли;

		Если Не ЗначениеЗаполнено(ДействиеЗадачиСсылка) Или СтрокаУчастника.ДействиеУчастника <> ДействиеЗадачиСсылка Тогда
			ТекущийИсполнительЕдинственный = Ложь;
		КонецЕсли;

		ОтображаемыеУчастники.Добавить(СтрокаУчастника);

		ВидУчастникаДляЭтапа = СтрокаУчастника.ВидУчастника;
		Если ВидУчастникаДляЭтапа = Справочники.ВидыУчастниковЗадач.Ответственный Тогда
			ВидУчастникаДляЭтапа = Справочники.ВидыУчастниковЗадач.Исполнитель;
		КонецЕсли;

		Если ВидыУчастников.Найти(ВидУчастникаДляЭтапа) = Неопределено Тогда

			ВидыУчастников.Добавить(ВидУчастникаДляЭтапа);

		КонецЕсли;

		Если КоличествоУчастниковПоВидам[ВидУчастникаДляЭтапа] = Неопределено Тогда
			КоличествоУчастниковПоВидам[ВидУчастникаДляЭтапа] = 0;
		КонецЕсли;
		КоличествоУчастниковПоВидам[ВидУчастникаДляЭтапа] =
		КоличествоУчастниковПоВидам[ВидУчастникаДляЭтапа] + 1;

		ОтображаемыеПодчиненныеУчастника = Новый Массив;
		ДанныеПодчиненныхУчастника = ДанныеПодчиненныхУчастников[СтрокаУчастника.ВнешнийИдентификатор];
		Если ДанныеПодчиненныхУчастника <> Неопределено Тогда

			Для Каждого СтрокаПодчиненногоУчастника Из ДанныеПодчиненныхУчастника Цикл

				РеквизитыПодчиненногоУчастника = РеквизитыВсехДействий[
				СтрокаПодчиненногоУчастника.ДействиеУчастника];

				Если ДанныеТекущегоЦикла <> Неопределено Тогда

					ЗадачаПроцессаЭтапа = Неопределено;
					Если ЗначениеЗаполнено(СтрокаПодчиненногоУчастника.ВнешнийИдентификатор) Тогда
						ЗадачаПроцессаЭтапа = ДанныеТекущегоЦикла[СтрокаПодчиненногоУчастника.ВнешнийИдентификатор];
					КонецЕсли;

					// Для "Обрабатывающий результат" и "Ознакомляемый с результатом" требуется чтобы они были этого цикла.
					Если (СтрокаПодчиненногоУчастника.ВидУчастника = Справочники.ВидыУчастниковЗадач.ОбрабатывающийРезультат
						Или СтрокаПодчиненногоУчастника.ВидУчастника = Справочники.ВидыУчастниковЗадач.ОзнакомляемыйСРезультатом)
						И (РеквизитыПодчиненногоУчастника = Неопределено
						Или ЗадачаПроцессаЭтапа = Неопределено
						Или РеквизитыДействияУчастника.Источник <> ЗадачаПроцессаЭтапа) Тогда
						Продолжить;
					КонецЕсли;

					// Для ссылки на действие исполнителя требуется чтобы они были этого цикла.
					Если ЗначениеЗаполнено(СтрокаПодчиненногоУчастника.ДействиеУчастника)
						И (РеквизитыПодчиненногоУчастника = Неопределено
						Или РеквизитыПодчиненногоУчастника.Источник <> ЗадачаПроцессаЭтапа) Тогда
						ДействияДругихЭтапов[СтрокаПодчиненногоУчастника.ДействиеУчастника] = Истина;
					КонецЕсли;

				КонецЕсли;

				Если Не ЗначениеЗаполнено(ДействиеЗадачиСсылка)
					Или СтрокаПодчиненногоУчастника.ДействиеУчастника <> ДействиеЗадачиСсылка Тогда
					ТекущийИсполнительЕдинственный = Ложь;
				КонецЕсли;

				ОтображаемыеПодчиненныеУчастника.Добавить(СтрокаПодчиненногоУчастника);

			КонецЦикла;

		КонецЕсли;

		ОтображаемыеПодчиненныеУчастников[СтрокаУчастника.ВнешнийИдентификатор] = ОтображаемыеПодчиненныеУчастника;

	КонецЦикла;

	// Определим данные этапов.
	КешНСИЗадач = РаботаСЗадачамиПовтИсп.КешНСИЗадач();
	РеквизитыВидовУчастников = КешНСИЗадач.РеквизитыВидовУчастниковЗадач;

	Если (РежимОтображения = "Автор" И КлючНазначения = "Дерево")
		Или КлючНазначения = "ОписаниеHTML"
		Или КлючНазначения = "ОписаниеПростойТекст"
		Или (ДанныеОсобыхУчастников <> Неопределено И ВидыУчастников.Количество() > 1) Тогда
		РежимЭтапов = "ВидыУчастников";
	ИначеЕсли (РежимОтображения = "Исполнитель" Или РежимОтображения = "Проверяющий")
		И КлючНазначения = "Дерево" Тогда
		РежимЭтапов = "БезЭтапов";
	Иначе
		ВызватьИсключение НСтр("ru = 'Неизвестный способ формирования этапов.'");
	КонецЕсли;

	ВнешниеДанныеЭтапов = ИнтеграцияЗадач.ВнешниеДанныеЭтапов(РеквизитыЗадачи.Источник, РежимЭтапов);
	Если ВнешниеДанныеЭтапов.Этапы.Количество() > 0 Тогда
		РежимЭтапов = "ВнешниеЭтапы";
	КонецЕсли;

	Если РежимЭтапов = "ВнешниеЭтапы" Тогда

		ДанныеСоисполнителей.Этапы = ВнешниеДанныеЭтапов.Этапы;
		Для Каждого ДанныеЭтапа Из ДанныеСоисполнителей.Этапы Цикл
			ДанныеСоисполнителейЭтапа = Новый Массив;
			ДанныеСоисполнителей.СоисполнителиПоЭтапам[ДанныеЭтапа.Этап] = ДанныеСоисполнителейЭтапа;
		КонецЦикла;

	ИначеЕсли РежимЭтапов = "БезЭтапов" Тогда

		Этап = УникальныйИдентификаторПустой();
		ДанныеСоисполнителейЭтапа = Новый Массив;
		ДанныеСоисполнителей.СоисполнителиПоЭтапам[Этап] = ДанныеСоисполнителейЭтапа;

	ИначеЕсли РежимЭтапов = "ВидыУчастников" Тогда

		Для Каждого ВидУчастника Из ВидыУчастников Цикл

			РеквизитыВидаУчастника = РеквизитыВидовУчастников[ВидУчастника];
			КоличествоУчастниковВида = КоличествоУчастниковПоВидам[ВидУчастника];

			ДанныеЭтапа = РаботаСЗадачамиКлиентСервер.НовыйДанныеЭтапа();
			ДанныеЭтапа.Этап = ВидУчастника.УникальныйИдентификатор();
			ДанныеЭтапа.Представление =
			?(КоличествоУчастниковВида > 1,
			РеквизитыВидаУчастника.МножественноеЧисло,
			РеквизитыВидаУчастника.Наименование);
			ДанныеЭтапа.ЭтоИсполнитель =
			РаботаСЗадачамиПовтИсп.ЭтоИсполнитель(ВидУчастника);

			ДанныеСоисполнителей.Этапы.Добавить(ДанныеЭтапа);

			ДанныеСоисполнителейЭтапа = Новый Массив;
			ДанныеСоисполнителей.СоисполнителиПоЭтапам[ДанныеЭтапа.Этап] =
			ДанныеСоисполнителейЭтапа;

		КонецЦикла;

	Иначе

		ВызватьИсключение НСтр("ru = 'Неизвестный способ формирования этапов.'");

	КонецЕсли;

	// Определим данные участников.
	ВсеУчастникиДляОтображения = Новый Массив;
	УчастникиДляОтображения = Новый Соответствие;
	КоличествоЭлементов = ОтображаемыеУчастники.Количество();
	Для Индекс = 1 По КоличествоЭлементов Цикл

		ОбратныйИндекс = КоличествоЭлементов - Индекс;
		СтрокаУчастника = ОтображаемыеУчастники[ОбратныйИндекс];

		РеквизитыДействия = РеквизитыВсехДействий[СтрокаУчастника.ДействиеУчастника];

		Если РеквизитыДействия <> Неопределено Тогда

			УточнениеИсполнителя = ИнтеграцияЗадач.УточнениеИсполнителя(
			РеквизитыЗадачи.Источник,
			СтрокаУчастника.ВнешнийИдентификатор,
			РеквизитыДействия.Источник);
			Если УточнениеИсполнителя <> Неопределено Тогда
				УчастникДляОтображения = УточнениеИсполнителя.Исполнитель;
			ИначеЕсли ЗначениеЗаполнено(РеквизитыДействия.ФактическийИсполнитель)
				И ДействияДругихЭтапов[СтрокаУчастника.ДействиеУчастника] <> Истина Тогда
				УчастникДляОтображения = РеквизитыДействия.ФактическийИсполнитель;
			Иначе
				УчастникДляОтображения = РеквизитыДействия.Исполнитель;
			КонецЕсли;

		Иначе

			УчастникДляОтображения = СтрокаУчастника.Участник;

		КонецЕсли;

		Если Не ЗначениеЗаполнено(УчастникДляОтображения) Тогда
			ОтображаемыеУчастники.Удалить(ОбратныйИндекс);
			Продолжить;
		КонецЕсли;

		УчастникиДляОтображения.Вставить(
		СтрокаУчастника.ДействиеУчастника,
		УчастникДляОтображения);
		ВсеУчастникиДляОтображения.Добавить(УчастникДляОтображения);

	КонецЦикла;

	ПредставленияУчастников = Новый Соответствие;
	РеквизитыУчастников = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
	ВсеУчастникиДляОтображения, "Представление");
	Для Каждого КлючИЗначение Из УчастникиДляОтображения Цикл

		ДействиеУчастника = КлючИЗначение.Ключ;
		УчастникДляОтображения = КлючИЗначение.Значение;

		РеквизитыУчастника = РеквизитыУчастников.Получить(УчастникДляОтображения);
		Если РеквизитыУчастника <> Неопределено Тогда
			ПредставлениеУчастника = РеквизитыУчастника.Представление;
		Иначе
			ПредставлениеУчастника = Строка(УчастникДляОтображения);
		КонецЕсли;
		ПредставленияУчастников.Вставить(ДействиеУчастника, ПредставлениеУчастника);

	КонецЦикла;

	Для Каждого СтрокаУчастника Из ОтображаемыеУчастники Цикл

		ВидУчастникаДляЭтапа = СтрокаУчастника.ВидУчастника;
		Если ВидУчастникаДляЭтапа = Справочники.ВидыУчастниковЗадач.Ответственный Тогда
			ВидУчастникаДляЭтапа = Справочники.ВидыУчастниковЗадач.Исполнитель;
		КонецЕсли;

		ДанныеСоисполнителя = РаботаСЗадачамиКлиентСервер.НовыйДанныеСоисполнителя();

		ДанныеСоисполнителя.КлючИсполнителя =
		?(ЗначениеЗаполнено(СтрокаУчастника.ДействиеУчастника),
		СтрокаУчастника.ДействиеУчастника,
		СтрокаУчастника.ВнешнийИдентификатор);
		ДанныеСоисполнителя.ЭтоОтветственный =
		РаботаСЗадачамиПовтИсп.ЭтоОтветственный(СтрокаУчастника.ВидУчастника);

		МассивПредставлениеРезультата = Новый Массив;

		РеквизитыДействия = РеквизитыВсехДействий[СтрокаУчастника.ДействиеУчастника];
		ДанныеДействия = ДанныеВсехДействий.Найти(
		СтрокаУчастника.ДействиеУчастника,
		"ДействиеЗадачи");

		ПредставлениеУчастника = ПредставленияУчастников[СтрокаУчастника.ДействиеУчастника];

		МассивПредставлениеРезультата.Добавить(ПредставлениеУчастника);
		#Вставка     
		ДанныеСоисполнителя.ЦППК_Исполнитель = ПредставлениеУчастника;
		#КонецВставки

		Если РеквизитыДействия <> Неопределено
			И ДанныеДействия <> Неопределено
			И ДействияДругихЭтапов[СтрокаУчастника.ДействиеУчастника] <> Истина
			И РеквизитыДействия.Проведен Тогда

			ДанныеСоисполнителя.ДействиеЗадачи = СтрокаУчастника.ДействиеУчастника;
			ДанныеСоисполнителя.РезультатДействия = РеквизитыДействия.РезультатДействия;
			ДанныеСоисполнителя.ХарактерРезультата =
			РаботаСЗадачамиПовтИсп.ХарактерРезультата(РеквизитыДействия.РезультатДействия);

			Если ЗначениеЗаполнено(РеквизитыДействия.РезультатДействия) Тогда

				ДанныеСоисполнителя.ИндексКартинкиСостояния =
				Перечисления.ХарактерыРезультатов.ИндексКартинкиСостояния(
				ДанныеСоисполнителя.ХарактерРезультата);

			Иначе

				ДанныеСоисполнителя.ИндексКартинкиСостояния = 
				Перечисления.ВидыСостоянийУчастниковЗадач.ИндексКартинкиСостояния(
				ДанныеДействия.ВидСостоянияУчастниковЗадач);

			КонецЕсли;
			Если ДанныеСоисполнителя.ИндексКартинкиСостояния = -1 Тогда
				ДанныеСоисполнителя.ИндексКартинкиСостояния = 1;
			КонецЕсли;

			ДанныеСоисполнителя.ЕстьПриложения = РеквизитыДействия.ЕстьПриложения;

			Если ЗначениеЗаполнено(РеквизитыДействия.РезультатДействия) Тогда

				ПредставлениеРезультата =
				СтрШаблон(
				", %1 (%2)",
				Строка(РеквизитыДействия.РезультатДействия),
				Формат(
				РеквизитыДействия.ДатаВыполнения,
				Метаданные.Документы.ДействиеЗадачи.Реквизиты.ДатаВыполнения));

				МассивПредставлениеРезультата.Добавить(ПредставлениеРезультата);
				#Вставка     
				ПредставлениеРезультата =
				СтрШаблон(
				"%1 (%2)",
				Строка(РеквизитыДействия.РезультатДействия),
				Формат(
				РеквизитыДействия.ДатаВыполнения,
				Метаданные.Документы.ДействиеЗадачи.Реквизиты.ДатаВыполнения));

				ДанныеСоисполнителя.ЦППК_Результат = ПредставлениеРезультата;
				#КонецВставки
			КонецЕсли;

			Если ЗначениеЗаполнено(РеквизитыДействия.РезультатДействияТекстом) Тогда

				ПредставлениеРезультата =
				СтрШаблон(
				", %1",
				Строка(РеквизитыДействия.РезультатДействияТекстом));
				
				МассивПредставлениеРезультата.Добавить(ПредставлениеРезультата);
				#Вставка     
				ДанныеСоисполнителя.ЦППК_Представление = Строка(РеквизитыДействия.РезультатДействияТекстом);
				#КонецВставки
			КонецЕсли;

		КонецЕсли;

		ДанныеСоисполнителя.Представление = СтрСоединить(МассивПредставлениеРезультата, "");

		Если РежимЭтапов = "ВнешниеЭтапы" Тогда

			Этап = ВнешниеДанныеЭтапов.ЭтапыУчастников[СтрокаУчастника.ВнешнийИдентификатор];

		ИначеЕсли РежимЭтапов = "БезЭтапов" Тогда

			Этап = УникальныйИдентификаторПустой();

		ИначеЕсли РежимЭтапов = "ВидыУчастников" Тогда

			Этап = ВидУчастникаДляЭтапа.УникальныйИдентификатор()

		Иначе

			ВызватьИсключение НСтр("ru = 'Неизвестный способ формирования этапов.'");

		КонецЕсли;

		ОтображаемыеПодчиненныеУчастника = 
		ОтображаемыеПодчиненныеУчастников[СтрокаУчастника.ВнешнийИдентификатор];
		Для Каждого СтрокаПодчиненногоУчастника Из ОтображаемыеПодчиненныеУчастника Цикл

			ДанныеПодчиненного = РаботаСЗадачамиКлиентСервер.НовыйДанныеСоисполнителя();

			ДанныеПодчиненного.КлючИсполнителя =
			?(ЗначениеЗаполнено(СтрокаПодчиненногоУчастника.ДействиеУчастника),
			СтрокаПодчиненногоУчастника.ДействиеУчастника,
			СтрокаПодчиненногоУчастника.ВнешнийИдентификатор);
			ДанныеПодчиненного.ЭтоОтветственный =
			РаботаСЗадачамиПовтИсп.ЭтоОтветственный(СтрокаПодчиненногоУчастника.ВидУчастника);

			МассивПредставлениеРезультата = Новый Массив;

			РеквизитыПодчиненногоДействия = РеквизитыВсехДействий[СтрокаПодчиненногоУчастника.ДействиеУчастника];
			ДанныеПодчиненногоДействия = ДанныеВсехДействий.Найти(
			СтрокаПодчиненногоУчастника.ДействиеУчастника,
			"ДействиеЗадачи");

			Если РеквизитыПодчиненногоДействия <> Неопределено Тогда

				УточнениеИсполнителя = ИнтеграцияЗадач.УточнениеИсполнителя(
				РеквизитыЗадачи.Источник,
				СтрокаПодчиненногоУчастника.ВнешнийИдентификатор,
				РеквизитыПодчиненногоДействия.Источник);
				Если УточнениеИсполнителя <> Неопределено Тогда
					УчастникДляОтображения = УточнениеИсполнителя.Исполнитель;
				ИначеЕсли ЗначениеЗаполнено(РеквизитыПодчиненногоДействия.ФактическийИсполнитель)
					И ДействияДругихЭтапов[СтрокаПодчиненногоУчастника.ДействиеУчастника] <> Истина Тогда
					УчастникДляОтображения = РеквизитыПодчиненногоДействия.ФактическийИсполнитель;
				Иначе
					УчастникДляОтображения = РеквизитыПодчиненногоДействия.Исполнитель;
				КонецЕсли;
				ПредставлениеУчастника = УчастникДляОтображения;

			Иначе

				ПредставлениеУчастника = СтрокаПодчиненногоУчастника.Участник;

			КонецЕсли;

			Если СтрокаПодчиненногоУчастника.ВидУчастника = Справочники.ВидыУчастниковЗадач.Ответственный
				И ОтображаемыеПодчиненныеУчастника.Количество() > 1 Тогда

				ПредставлениеУчастника =
				СтрШаблон(
				"%1 (%2)",
				ПредставлениеУчастника,
				НСтр("ru = 'отв.'"));

			ИначеЕсли СтрокаПодчиненногоУчастника.ВидУчастника = Справочники.ВидыУчастниковЗадач.Проверяющий Тогда

				ПредставлениеУчастника =
				СтрШаблон(
				"%1 (%2)",
				ПредставлениеУчастника,
				НСтр("ru = 'проверяющий'"));

			КонецЕсли;

			МассивПредставлениеРезультата.Добавить(ПредставлениеУчастника);

			Если РеквизитыПодчиненногоДействия <> Неопределено
				И ДанныеПодчиненногоДействия <> Неопределено
				И ДействияДругихЭтапов[СтрокаПодчиненногоУчастника.ДействиеУчастника] <> Истина
				И РеквизитыПодчиненногоДействия.Проведен Тогда

				ДанныеПодчиненного.ДействиеЗадачи = СтрокаПодчиненногоУчастника.ДействиеУчастника;
				ДанныеПодчиненного.РезультатДействия = РеквизитыПодчиненногоДействия.РезультатДействия;
				ДанныеПодчиненного.ХарактерРезультата =
				РаботаСЗадачамиПовтИсп.ХарактерРезультата(РеквизитыПодчиненногоДействия.РезультатДействия);

				Если ЗначениеЗаполнено(РеквизитыДействия.РезультатДействия) Тогда

					ДанныеПодчиненного.ИндексКартинкиСостояния =
					Перечисления.ХарактерыРезультатов.ИндексКартинкиСостояния(
					ДанныеПодчиненного.ХарактерРезультата);

				Иначе

					ДанныеПодчиненного.ИндексКартинкиСостояния = 
					Перечисления.ВидыСостоянийУчастниковЗадач.ИндексКартинкиСостояния(
					ДанныеПодчиненногоДействия.ВидСостоянияУчастниковЗадач);

				КонецЕсли;
				Если ДанныеПодчиненного.ИндексКартинкиСостояния = -1 Тогда
					ДанныеПодчиненного.ИндексКартинкиСостояния = 1;
				КонецЕсли;

				ДанныеПодчиненного.ЕстьПриложения = РеквизитыПодчиненногоДействия.ЕстьПриложения;

				Если ЗначениеЗаполнено(РеквизитыПодчиненногоДействия.РезультатДействия) Тогда

					ПредставлениеРезультата =
					СтрШаблон(
					", %1 (%2)",
					Строка(РеквизитыПодчиненногоДействия.РезультатДействия),
					Формат(
					РеквизитыПодчиненногоДействия.ДатаВыполнения,
					Метаданные.Документы.ДействиеЗадачи.Реквизиты.ДатаВыполнения));

					МассивПредставлениеРезультата.Добавить(ПредставлениеРезультата);

				КонецЕсли;

				Если ЗначениеЗаполнено(РеквизитыПодчиненногоДействия.РезультатДействияТекстом) Тогда

					ПредставлениеРезультата =
					СтрШаблон(
					", %1",
					Строка(РеквизитыПодчиненногоДействия.РезультатДействияТекстом));

					МассивПредставлениеРезультата.Добавить(ПредставлениеРезультата);

				КонецЕсли;

			КонецЕсли;

			ДанныеПодчиненного.Представление = СтрСоединить(МассивПредставлениеРезультата, "");

			ДанныеСоисполнителя.ДанныеПодчиненных.Добавить(ДанныеПодчиненного);

		КонецЦикла;

		ДанныеСоисполнителейЭтапа = ДанныеСоисполнителей.СоисполнителиПоЭтапам[Этап];
		Если ДанныеСоисполнителейЭтапа = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ДанныеСоисполнителейЭтапа.Добавить(ДанныеСоисполнителя);

	КонецЦикла;

	// Рассчитаем итоги этапов.
	ХарактерОбщегоРезультата = Неопределено;
	ПредставлениеОбщегоРезультата = Неопределено;
	Для Каждого ДанныеЭтапа Из ДанныеСоисполнителей.Этапы Цикл

		ДанныеЭтапа.ИндексКартинкиСостояния = Неопределено;

		ДанныеСоисполнителейЭтапа = ДанныеСоисполнителей.СоисполнителиПоЭтапам[ДанныеЭтапа.Этап];

		Для Каждого ДанныеСоисполнителя Из ДанныеСоисполнителейЭтапа Цикл

			Если ДанныеЭтапа.ИндексКартинкиСостояния = Неопределено Тогда
				ДанныеЭтапа.ИндексКартинкиСостояния =
				ДанныеСоисполнителя.ИндексКартинкиСостояния;
			Иначе
				ДанныеЭтапа.ИндексКартинкиСостояния = Мин(
				ДанныеЭтапа.ИндексКартинкиСостояния,
				ДанныеСоисполнителя.ИндексКартинкиСостояния);
			КонецЕсли;

			Если ДанныеЭтапа.ЭтоИсполнитель
				И ЗначениеЗаполнено(ДанныеСоисполнителя.РезультатДействия) Тогда

				Если ХарактерОбщегоРезультата = Неопределено Тогда

					ХарактерОбщегоРезультата = ДанныеСоисполнителя.ХарактерРезультата;
					ПредставлениеОбщегоРезультата = Строка(ДанныеСоисполнителя.РезультатДействия);

				ИначеЕсли ХарактерОбщегоРезультата = Перечисления.ХарактерыРезультатов.Положительный
					И (ДанныеСоисполнителя.ХарактерРезультата = Перечисления.ХарактерыРезультатов.ПоложительныйСЗамечаниями
					Или ДанныеСоисполнителя.ХарактерРезультата = Перечисления.ХарактерыРезультатов.Отрицательный) Тогда

					ХарактерОбщегоРезультата = ДанныеСоисполнителя.ХарактерРезультата;
					ПредставлениеОбщегоРезультата = Строка(ДанныеСоисполнителя.РезультатДействия);

				ИначеЕсли ХарактерОбщегоРезультата = Перечисления.ХарактерыРезультатов.ПоложительныйСЗамечаниями
					И ДанныеСоисполнителя.ХарактерРезультата = Перечисления.ХарактерыРезультатов.Отрицательный Тогда

					ХарактерОбщегоРезультата = ДанныеСоисполнителя.ХарактерРезультата;
					ПредставлениеОбщегоРезультата = Строка(ДанныеСоисполнителя.РезультатДействия);

				КонецЕсли;

			ИначеЕсли ДанныеЭтапа.ЭтоИсполнитель
				И Не ЗначениеЗаполнено(ДанныеСоисполнителя.РезультатДействия) Тогда

				ХарактерОбщегоРезультата = Перечисления.ХарактерыРезультатов.ПустаяСсылка();
				ПредставлениеОбщегоРезультата = "";

			КонецЕсли;

			Для Каждого ДанныеПодчиненного Из ДанныеСоисполнителя.ДанныеПодчиненных Цикл

				ДанныеЭтапа.ИндексКартинкиСостояния = Мин(
				ДанныеЭтапа.ИндексКартинкиСостояния,
				ДанныеПодчиненного.ИндексКартинкиСостояния);

			КонецЦикла;

		КонецЦикла;

		Если ДанныеЭтапа.ИндексКартинкиСостояния = Неопределено Тогда
			ДанныеЭтапа.ИндексКартинкиСостояния = -1;
		КонецЕсли;

	КонецЦикла;

	Если ХарактерОбщегоРезультата = Неопределено Тогда
		ХарактерОбщегоРезультата = Перечисления.ХарактерыРезультатов.ПустаяСсылка();
	КонецЕсли;

	Если ПредставлениеОбщегоРезультата = Неопределено Тогда
		ПредставлениеОбщегоРезультата = "";
	КонецЕсли;

	// Для проверяющего и автора:
	// - Одного участника на этап показываем в HTML описании.
	// - Более одного участника на этап показываем в дереве, а в HTML описании результат общий.
	ТолькоОдинУчастникНаЭтап = Истина;
	Для Каждого КлючИЗначение Из ДанныеСоисполнителей.СоисполнителиПоЭтапам Цикл

		ДанныеСоисполнителейЭтапа = КлючИЗначение.Значение;
		Если ДанныеСоисполнителейЭтапа.Количество() > 1 Тогда
			ТолькоОдинУчастникНаЭтап = Ложь;
			Прервать;
		КонецЕсли;

		Для Каждого ДанныеСоисполнителя Из ДанныеСоисполнителейЭтапа Цикл

			Если ДанныеСоисполнителя.ДанныеПодчиненных.Количество() > 0 Тогда
				ТолькоОдинУчастникНаЭтап = Ложь;
				Прервать;
			КонецЕсли;

		КонецЦикла;

	КонецЦикла;

	Если (РежимОтображения = "Проверяющий" Или РежимОтображения = "Автор")
		И КлючНазначения = "Дерево"
		И ТолькоОдинУчастникНаЭтап Тогда

		ДанныеСоисполнителей.Этапы = Новый Массив;
		ДанныеСоисполнителей.СоисполнителиПоЭтапам = Новый Соответствие;

	ИначеЕсли (РежимОтображения = "Проверяющий" Или РежимОтображения = "Автор")
		И КлючНазначения = "ОписаниеHTML"
		И Не ТолькоОдинУчастникНаЭтап Тогда

		ДанныеСоисполнителей.Этапы = Новый Массив;
		ДанныеСоисполнителей.СоисполнителиПоЭтапам = Новый Соответствие;

		ДанныеСоисполнителей.ПредставлениеОбщегоРезультата = ПредставлениеОбщегоРезультата;
		ДанныеСоисполнителей.ХарактерОбщегоРезультата = ХарактерОбщегоРезультата;

	ИначеЕсли РежимОтображения = "Исполнитель" И ТекущийИсполнительЕдинственный Тогда

		ДанныеСоисполнителей.Этапы = Новый Массив;
		ДанныеСоисполнителей.СоисполнителиПоЭтапам = Новый Соответствие;

	КонецЕсли;

	КоличествоЭлементов = ДанныеСоисполнителей.Этапы.Количество();
	Для Индекс = 1 По КоличествоЭлементов Цикл

		ОбратныйИндекс = КоличествоЭлементов - Индекс;
		ДанныеЭтапа = ДанныеСоисполнителей.Этапы[ОбратныйИндекс];

		СоисполнителиЭтапа = ДанныеСоисполнителей.СоисполнителиПоЭтапам[ДанныеЭтапа.Этап];
		Если СоисполнителиЭтапа <> Неопределено И СоисполнителиЭтапа.Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;

		ДанныеСоисполнителей.Этапы.Удалить(ОбратныйИндекс);
		ДанныеСоисполнителей.СоисполнителиПоЭтапам.Удалить(ДанныеЭтапа.Этап);

	КонецЦикла;

	Возврат ДанныеСоисполнителей;

КонецФункции

#КонецОбласти