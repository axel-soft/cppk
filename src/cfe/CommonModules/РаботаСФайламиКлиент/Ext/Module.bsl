
&ИзменениеИКонтроль("РедактироватьФайлСРасширениемПослеПолученияФайлаВРабочийКаталог")
Процедура ЦППК_РедактироватьФайлСРасширениемПослеПолученияФайлаВРабочийКаталог(Результат, ПараметрыВыполнения)
	
	#Вставка
	Если ПараметрыПриложения["Замер_ОткрытьФайлДляРедактирования"] <> Неопределено Тогда
		ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(ПараметрыПриложения["Замер_ОткрытьФайлДляРедактирования"]);
		ПараметрыПриложения.Удалить("Замер_ОткрытьФайлДляРедактирования");
	КонецЕсли;
	#КонецВставки
	Если Результат.ФайлПолучен Тогда
		ОткрытьФайлПриложением(ПараметрыВыполнения.ДанныеФайла, Результат.ПолноеИмяФайла);
	КонецЕсли;
	#Вставка
	Если ПараметрыПриложения["Замер_ОткрытьФайлДляРедактированияСПриложением"] <> Неопределено Тогда
		ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(ПараметрыПриложения["Замер_ОткрытьФайлДляРедактированияСПриложением"]);
		ПараметрыПриложения.Удалить("Замер_ОткрытьФайлДляРедактированияСПриложением");
	КонецЕсли;
	#КонецВставки

	ВернутьРезультат(ПараметрыВыполнения.ОбработчикРезультата, Истина);

КонецПроцедуры

&ИзменениеИКонтроль("РедактироватьФайлПоСсылке")
Процедура ЦППК_РедактироватьФайлПоСсылке(ОбработчикРезультата, ОбъектСсылка, УникальныйИдентификатор, РабочийКаталогВладельца, ПоказыватьОповещения, ОткрыватьPdfВWord)

	#Вставка
	УИДЗамера = ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытьФайлДляРедактирования");
	ПараметрыПриложения.Вставить("Замер_ОткрытьФайлДляРедактирования", УидЗамера);

	УИДЗамера = ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытьФайлДляРедактированияСПриложением");
	ПараметрыПриложения.Вставить("Замер_ОткрытьФайлДляРедактированияСПриложением", УидЗамера);	
	#КонецВставки	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ОбработчикРезультата", ОбработчикРезультата);
	ПараметрыОбработчика.Вставить("ОбъектСсылка", ОбъектСсылка);
	ПараметрыОбработчика.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	ПараметрыОбработчика.Вставить("РабочийКаталогВладельца", РабочийКаталогВладельца);
	ПараметрыОбработчика.Вставить("ПоказыватьОповещения", ПоказыватьОповещения);
	ПараметрыОбработчика.Вставить("ОткрыватьPdfВWord", ОткрыватьPdfВWord);

	Обработчик = Новый ОписаниеОповещения("РедактироватьФайлПоСсылкеПослеУстановкиРасширения", ЭтотОбъект, ПараметрыОбработчика);

	ФайловыеФункцииСлужебныйКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Обработчик);

КонецПроцедуры

&ИзменениеИКонтроль("РедактироватьФайлПоСсылкеСРасширениемПослеПолученияФайлаВРабочийКаталог")
Процедура ЦППК_РедактироватьФайлПоСсылкеСРасширениемПослеПолученияФайлаВРабочийКаталог(Результат, ПараметрыВыполнения)

	#Вставка
	Если ПараметрыПриложения["Замер_ОткрытьФайлДляРедактирования"] <> Неопределено Тогда
		ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(ПараметрыПриложения["Замер_ОткрытьФайлДляРедактирования"]);
		ПараметрыПриложения.Удалить("Замер_ОткрытьФайлДляРедактирования");
	КонецЕсли;
	#КонецВставки
	
	Если Результат.ФайлПолучен = Истина Тогда
		ОткрытьФайлПриложением(ПараметрыВыполнения.ДанныеФайла, Результат.ПолноеИмяФайла,
		ПараметрыВыполнения.УникальныйИдентификатор, ПараметрыВыполнения);
	КонецЕсли;
	
	#Вставка
	Если ПараметрыПриложения["Замер_ОткрытьФайлДляРедактированияСПриложением"] <> Неопределено Тогда
		ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(ПараметрыПриложения["Замер_ОткрытьФайлДляРедактированияСПриложением"]);
		ПараметрыПриложения.Удалить("Замер_ОткрытьФайлДляРедактированияСПриложением");
	КонецЕсли;
	#КонецВставки
	

	ПараметрыВыполнения.ОбработчикРезультата.ДополнительныеПараметры.Вставить("ДанныеФайла", 
	ПараметрыВыполнения.ДанныеФайла);

	ВернутьРезультат(ПараметрыВыполнения.ОбработчикРезультата, Истина);

КонецПроцедуры

&ИзменениеИКонтроль("РедактироватьФайл")
Процедура ЦППК_РедактироватьФайл(ОбработчикРезультата, ДанныеФайла, УникальныйИдентификатор)

	ИсполняемыеБинарныеФайлы = ФайловыеФункцииКлиентСервер.ИсполняемыеБинарныеФайлы();
	ЭтоИсполняемыйФайлБинарный = ФайловыеФункцииКлиентСервер.РасширениеФайлаВСписке(ИсполняемыеБинарныеФайлы, ДанныеФайла.Расширение);
	Если ЭтоИсполняемыйФайлБинарный Тогда
		ПредложитьСохранитьФайл(ДанныеФайла, УникальныйИдентификатор);
		Возврат;
	КонецЕсли;	

	#Вставка
	УИДЗамера = ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытьФайлДляРедактирования");
	ПараметрыПриложения.Вставить("Замер_ОткрытьФайлДляРедактирования", УидЗамера);

	УИДЗамера = ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытьФайлДляРедактированияСПриложением");
	ПараметрыПриложения.Вставить("Замер_ОткрытьФайлДляРедактированияСПриложением", УидЗамера);	
	#КонецВставки
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ОбработчикРезультата", ОбработчикРезультата);
	ПараметрыОбработчика.Вставить("ДанныеФайла", ДанныеФайла);
	ПараметрыОбработчика.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);

	Обработчик = Новый ОписаниеОповещения("РедактироватьФайлПослеУстановкиРасширения", ЭтотОбъект, ПараметрыОбработчика);

	ФайловыеФункцииСлужебныйКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Обработчик);

КонецПроцедуры

&ИзменениеИКонтроль("ДобавитьИзФайловойСистемыСРасширениемСинхронно")
Функция ЦППК_ДобавитьИзФайловойСистемыСРасширениемСинхронно(ПараметрыВыполнения) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ФайлДобавлен", Ложь);
	Результат.Вставить("ФайлСсылка",   Неопределено);
	Результат.Вставить("ТекстОшибки",  "");
	СписокВсехРасширенийСканКопийОригиналов = 
		ФайловыеФункцииСлужебныйКлиентСервер.ОбщиеНастройкиРаботыСФайлами().СписокРасширенийСканКопийОригиналов;
	ЭтоДобавлениеОригинала = Ложь;

	Если Не ПараметрыВыполнения.Свойство("ПолноеИмяФайла") Тогда
		// Загрузить из файловой системы с расширением работы с файлами.
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогВыбораФайла.МножественныйВыбор = Истина;
		
		Если ПараметрыВыполнения.Свойство("ДополнительныеПараметры")
			И ПараметрыВыполнения.ДополнительныеПараметры.Свойство("МожноДобавитьТолькоОдинФайл")
			И ПараметрыВыполнения.ДополнительныеПараметры.МожноДобавитьТолькоОдинФайл Тогда
			
			ДиалогВыбораФайла.МножественныйВыбор = Ложь; // Можно добавить только один файл	
			
		КонецЕсли;
		
		Если ПараметрыВыполнения.ДобавлениеОригинала Тогда 
			ЭтоДобавлениеОригинала = Истина; 
			СтрокаРасширений = ""; ФильтрПоРасширениям = "";
			СписокРасширенийСканКопийОригиналов = СписокВсехРасширенийСканКопийОригиналов;
			СписокРасширенийСканКопийОригиналов = СтрЗаменить(СписокРасширенийСканКопийОригиналов, " ", ",");
			СписокРасширенийСканКопийОригиналов = СтрЗаменить(СписокРасширенийСканКопийОригиналов, ";", ",");
			МассивРасширенийСканКопий = СтрРазделить(СписокРасширенийСканКопийОригиналов, ",", Ложь);
			
			Для Каждого РасширениеСтр Из МассивРасширенийСканКопий Цикл
				СтрокаРасширений = СтрокаРасширений + РасширениеСтр + ", ";
				ФильтрПоРасширениям = ФильтрПоРасширениям + "*." + РасширениеСтр + ";";
			КонецЦикла;
			
			ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выбор скан-копии оригинала документа'");
			
			Если ЗначениеЗаполнено(СтрокаРасширений) Тогда 
				СтрокаРасширений = Лев(СтрокаРасширений, СтрДлина(СтрокаРасширений) - 2);
				ФильтрПоРасширениям = Лев(ФильтрПоРасширениям, СтрДлина(ФильтрПоРасширениям) - 1);
				ДиалогВыбораФайла.Фильтр = СтрШаблон(НСтр("ru = 'Скан-копии (%1)|%2|Все файлы (*.*)|*.*'"),
					СтрокаРасширений, ФильтрПоРасширениям);
			Иначе 
				ДиалогВыбораФайла.Фильтр = ПолучитьФильтрДляДиалогаВыбораФайла();
			КонецЕсли;
		Иначе	
			ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выбор файла'");
			ДиалогВыбораФайла.Фильтр = ПолучитьФильтрДляДиалогаВыбораФайла();
		КонецЕсли;	
		
		ДиалогВыбораФайла.Каталог = РаботаСФайламиВызовСервера.РабочийКаталогПапки(ПараметрыВыполнения.ВладелецФайла);
		Если НЕ ДиалогВыбораФайла.Выбрать() Тогда
			Возврат Результат;
		КонецЕсли;
		
		Если ДиалогВыбораФайла.ВыбранныеФайлы.Количество() = 1 Тогда
			
			ПолноеИмяФайла = ДиалогВыбораФайла.ВыбранныеФайлы[0];
			
		Иначе
			
			МассивИменФайлов = Новый Массив;
			
			МассивФайлов = ДиалогВыбораФайла.ВыбранныеФайлы;
			Для Каждого ИмяФайла Из МассивФайлов Цикл
				МассивИменФайлов.Добавить(ИмяФайла);
			КонецЦикла;
			
			ПараметрыИмпорта = Новый Структура;
			ПараметрыИмпорта.Вставить("ПапкаДляДобавления", ПараметрыВыполнения.ВладелецФайла);
			ПараметрыИмпорта.Вставить("МассивИменФайлов", МассивИменФайлов);
			ПараметрыИмпорта.Вставить("РольФайла", ПараметрыВыполнения.РольФайла);
			ПараметрыИмпорта.Вставить("ЭтоДобавлениеОригинала", ЭтоДобавлениеОригинала);
			Если ПараметрыВыполнения.Свойство("ДополнительныеПараметры")
				И ПараметрыВыполнения.ДополнительныеПараметры.Свойство("ДоступнаОтметкаОригинала") Тогда
				
				ПараметрыИмпорта.Вставить("ДоступнаОтметкаОригинала",
					ПараметрыВыполнения.ДополнительныеПараметры.ДоступнаОтметкаОригинала);
			КонецЕсли;
			
			Если ПараметрыВыполнения.ФормаВладелец.ИмяФормы = "Справочник.Проекты.Форма.ФайлыПоПроекту" Тогда 
				ПараметрыИмпорта.Вставить("Проект", ПараметрыВыполнения.ФормаВладелец.Параметры.Проект);
			КонецЕсли;
			
			ОткрытьФорму("Справочник.Файлы.Форма.ФормаИмпортаФайлов", ПараметрыИмпорта);
			Возврат Результат;
			
		КонецЕсли;	
		
		ПараметрыВыполнения.Вставить("ПолноеИмяФайла", ПолноеИмяФайла);
	КонецЕсли;
	
	Если Не ПараметрыВыполнения.Свойство("ИмяСоздаваемогоФайла") Тогда
		ПараметрыВыполнения.Вставить("ИмяСоздаваемогоФайла", Неопределено);
	КонецЕсли;
	
	ФайлКлиента = Новый Файл(ПараметрыВыполнения.ПолноеИмяФайла);

#Если Не МобильныйКлиент Тогда
	РасширениеФайла = ФайлКлиента.Расширение;
#Иначе
	СведенияОЗагружаемомКонтенте = МК_Клиент.СведенияОЗагружаемомКонтенте(ФайлКлиента);
	РасширениеФайла = СведенияОЗагружаемомКонтенте.Расширение;
#КонецЕсли
	
	Если ЭтоДобавлениеОригинала Тогда
		КоличествоРасширенийСканКопий = 0;
		ЭтоРасширениеСканКопии = ДелопроизводствоКлиентСервер.ЭтоРасширениеСканКопии(
			РасширениеФайла, КоличествоРасширенийСканКопий);
		Если Не ЭтоРасширениеСканКопии И КоличествоРасширенийСканКопий > 0 Тогда 
			ПоказатьПредупреждение(, СтрШаблон(
				НСтр("ru = 'Выбранный файл не является скан-копией. Выберите файл с расширением: %1.'"),
				СписокВсехРасширенийСканКопийОригиналов));
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	
	ФайловыеФункцииСлужебныйКлиентСервер.ПроверитьВозможностьЗагрузкиФайла(ФайлКлиента);
	
	ОбщиеНастройки = ФайловыеФункцииСлужебныйКлиентСервер.ОбщиеНастройкиРаботыСФайлами();
	ИзвлекатьТекстыФайловНаКлиенте = НЕ ОбщиеНастройки.ИзвлекатьТекстыФайловНаСервере;
	Если ИзвлекатьТекстыФайловНаКлиенте Тогда
		АдресВременногоХранилищаТекста = ФайловыеФункцииСлужебныйКлиентСервер.ИзвлечьТекстВоВременноеХранилище(
			ФайлКлиента.ПолноеИмя,
			ПараметрыВыполнения.ФормаВладелец.УникальныйИдентификатор);
	Иначе
		АдресВременногоХранилищаТекста = "";
	КонецЕсли;
	
	Если ПараметрыВыполнения.ИмяСоздаваемогоФайла <> Неопределено Тогда
		ИмяСоздания = ПараметрыВыполнения.ИмяСоздаваемогоФайла;
	Иначе
		
#Если Не МобильныйКлиент Тогда
		ИмяСоздания = ФайлКлиента.ИмяБезРасширения;
#Иначе
		ИмяСоздания = СведенияОЗагружаемомКонтенте.Имя;
#КонецЕсли

	КонецЕсли;
	
	ИмяФайла  = ИмяСоздания + РасширениеФайла;
	РазмерВМб = ФайлКлиента.Размер() / (1024 * 1024);
	
	ТекстСостояния = СтрШаблон(
		НСтр("ru = 'Идет сохранение файла ""%1"" (%2 Мб).
		           |Пожалуйста, подождите...'"),
		ИмяФайла,
		ФайловыеФункцииСлужебныйКлиентСервер.ПолучитьСтрокуСРазмеромФайла(РазмерВМб));
	Состояние(ТекстСостояния);
	
#Вставка
	УИДЗамера = ОценкаПроизводительностиКлиент.ЗамерВремени("ДобавитьФайлКДокументу");
#КонецВставки

	// Помещение файла во временное хранилище.
	АдресВременногоХранилищаФайла = "";
	
	ПомещаемыеФайлы = Новый Массив;
	Описание = Новый ОписаниеПередаваемогоФайла(ФайлКлиента.ПолноеИмя, "");
	ПомещаемыеФайлы.Добавить(Описание);
	
	ПомещенныеФайлы = Новый Массив;
	ФайлыПомещены = ПоместитьФайлы(ПомещаемыеФайлы, ПомещенныеФайлы, , Ложь, ПараметрыВыполнения.ФормаВладелец.УникальныйИдентификатор);
	Если НЕ ФайлыПомещены Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ПомещенныеФайлы.Количество() = 1 Тогда
		АдресВременногоХранилищаФайла = ПомещенныеФайлы[0].Хранение;
	КонецЕсли;
	
	ПараметрыРаспознавания = Неопределено;
	Если ПараметрыВыполнения.Свойство("ПараметрыРаспознавания") Тогда
		ПараметрыРаспознавания = ПараметрыВыполнения.ПараметрыРаспознавания;
	КонецЕсли;	
	
	СписокКатегорий = Неопределено;
	Если ПараметрыВыполнения.Свойство("СписокКатегорий") Тогда
		СписокКатегорий = ПараметрыВыполнения.СписокКатегорий;
	КонецЕсли;	
	
	ДополнительныеПараметры = Новый Структура;
	
	Если ПараметрыВыполнения.Свойство("РольФайла") Тогда
		ДополнительныеПараметры.Вставить("РольФайла", ПараметрыВыполнения.РольФайла);	
	КонецЕсли;	
	Если ПараметрыВыполнения.Свойство("ДоступноТолькоДобавлениеОригинала") Тогда
		ДополнительныеПараметры.Вставить("ДоступноТолькоДобавлениеОригинала", 
			ПараметрыВыполнения.ДоступноТолькоДобавлениеОригинала);	
	КонецЕсли;	
	
	Если ПараметрыВыполнения.ФормаВладелец.ИмяФормы = "Справочник.Проекты.Форма.ФайлыПоПроекту" Тогда 
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Проект", ПараметрыВыполнения.ФормаВладелец.Параметры.Проект);
	КонецЕсли;	
	
	ДанныеПоФайлуЭД = Неопределено;
	
	// Заполним имя по файлу ЭД, если это файл ЭД
	Если ОбщегоНазначенияБЭДКлиентПовтИсп.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД")
		И Нрег(РасширениеФайла) = ".xml" 
		И ПараметрыВыполнения.ФормаВладелец.ИмяФормы = "Справочник.ДокументыПредприятия.Форма.ФормаЭлемента" Тогда 
		
		ДанныеПоФайлуЭД = ОбменСКонтрагентамиДОВызовСервера.СведенияОЭДИзФайла(АдресВременногоХранилищаФайла);
		
		Если ТипЗнч(ДанныеПоФайлуЭД) = Тип("Структура")
			И ДанныеПоФайлуЭД.Свойство("ИмяСоздания") Тогда
			
			ИмяСоздания = ДанныеПоФайлуЭД.ИмяСоздания;
		КонецЕсли;
		
	КонецЕсли;
	
	// Создание карточки Файла в БД.
	Попытка
		
		СведенияОФайле = РаботаСФайламиКлиентСервер.СведенияОФайле("ФайлСВерсией", ФайлКлиента);
		СведенияОФайле.АдресВременногоХранилищаФайла = АдресВременногоХранилищаФайла;
		СведенияОФайле.АдресВременногоХранилищаТекста = АдресВременногоХранилищаТекста;
		СведенияОФайле.ЗаписатьВИсторию = Истина;
		СведенияОФайле.ИмяБезРасширения = ИмяСоздания;
		СведенияОФайле.ПараметрыРаспознавания = ПараметрыРаспознавания;
		СведенияОФайле.СписокКатегорий = СписокКатегорий;
		СведенияОФайле.ДополнительныеПараметры = ДополнительныеПараметры;
		
		Если ДополнительныеПараметры.Свойство("ОригинальноеИмя") Тогда
			СведенияОФайле.ОригинальноеИмя = ДополнительныеПараметры.ОригинальноеИмя;
		ИначеЕсли ПараметрыВыполнения.Свойство("ОригинальноеИмя") Тогда
			СведенияОФайле.ОригинальноеИмя = ПараметрыВыполнения.ОригинальноеИмя;
		КонецЕсли;  
		
#Если МобильныйКлиент Тогда
		СведенияОФайле.РасширениеБезТочки = СведенияОЗагружаемомКонтенте.РасширениеБезТочки;
#КонецЕсли

		Результат.ФайлСсылка = РаботаСФайламиВызовСервера.СоздатьФайлСВерсией(
			ПараметрыВыполнения.ВладелецФайла, СведенияОФайле);
			
		Результат.ФайлДобавлен = Истина;
	Исключение
		Результат.ТекстОшибки = ФайловыеФункцииСлужебныйКлиентСервер.ОшибкаСозданияНовогоФайла(ИнформацияОбОшибке());
	КонецПопытки;
	Состояние();
	
#Вставка
	ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(УИДЗамера);
#КонецВставки

	Если Результат.ТекстОшибки <> "" Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Владелец", ПараметрыВыполнения.ВладелецФайла);
	ПараметрыОповещения.Вставить("Файл",     Результат.ФайлСсылка);
	ПараметрыОповещения.Вставить("Событие",  "СозданФайл");
	
	Если ТипЗнч(ДанныеПоФайлуЭД) = Тип("Структура") Тогда
		Если ДанныеПоФайлуЭД.Свойство("СуммаДокумента")
			И ЗначениеЗаполнено(ДанныеПоФайлуЭД.СуммаДокумента) Тогда
			ПараметрыОповещения.Вставить("СуммаДокумента",ДанныеПоФайлуЭД.СуммаДокумента);
		КонецЕсли;
		Если ДанныеПоФайлуЭД.Свойство("Валюта")
			И ЗначениеЗаполнено(ДанныеПоФайлуЭД.Валюта) Тогда
			ПараметрыОповещения.Вставить("Валюта",ДанныеПоФайлуЭД.Валюта);
		КонецЕсли;
	КонецЕсли;
	
	ИдентификаторРодительскойФормы = ПараметрыВыполнения.ФормаВладелец.УникальныйИдентификатор;
	Если ПараметрыВыполнения.ФормаВладелец.ИмяФормы = "Справочник.Файлы.Форма.РезультатСканирования" Тогда
		ИдентификаторРодительскойФормы = ПараметрыВыполнения.ФормаВладелец.ИдентификаторРодительскойФормы;
	КонецЕсли;
	
	ПараметрыОповещения.Вставить("ИдентификаторРодительскойФормы", ИдентификаторРодительскойФормы);
		
	Оповестить("Запись_Файл", ПараметрыОповещения);
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Создание:'"),
		ПолучитьНавигационнуюСсылку(Результат.ФайлСсылка),
		Результат.ФайлСсылка,
		БиблиотекаКартинок.Информация32);
	
	Возврат Результат;
	
КонецФункции

#Если Не ВебКлиент И Не МобильныйКлиент Тогда
&ИзменениеИКонтроль("СоздатьВизуализациюЭПВФайлеDocXls")
Функция ЦППК_СоздатьВизуализациюЭПВФайлеDocXls(ДанныеФайла, ИдентификаторФормы)

	ВизуализацияСсылка = Неопределено;
#Вставка
	Если ДанныеФайла.ПодписанЭП = Ложь Тогда
		Возврат ВизуализацияСсылка;
	КонецЕсли;
#КонецВставки

	Состояние(НСтр("ru = 'Вставка штампа ЭП...'"));

	ШтампыПодписейЭП = ДанныеФайла.ШтампыПодписейЭП;

	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(ДанныеФайла.Расширение);
	ПолучитьФайл(ДанныеФайла.НавигационнаяСсылкаТекущейВерсии, ИмяВременногоФайла, Ложь);
	ДвДанныеФайлаDoc = Новый ДвоичныеДанные(ИмяВременногоФайла);

	Использовать1СШтампПрежний = ДанныеФайла.НастройкиШтампаЭП.Использовать1СШтамп;

	ДвоичныеДанныеНовые = ВизуализацияЭПКлиентСервер.ВставитьВизуализациюЭПВместоТэга(
	ДвДанныеФайлаDoc, 
	ДанныеФайла.Расширение,
	ШтампыПодписейЭП, 
	ДанныеФайла.НастройкиШтампаЭП);

	Если ТипЗнч(ДвоичныеДанныеНовые) = Тип("ДвоичныеДанные") Тогда

		ВизуализацияСсылка = РаботаСФайламиВызовСервера.СоздатьВизуализациюИЗаполнитьДанныеФайла(
		ДанныеФайла, ДвоичныеДанныеНовые, ИдентификаторФормы);	 

	ИначеЕсли ДвоичныеДанныеНовые = Неопределено 
		И Использовать1СШтампПрежний И Не ДанныеФайла.НастройкиШтампаЭП.Использовать1СШтамп Тогда

		ДвоичныеДанныеНовые = ВизуализацияЭПКлиентСервер.ВставитьВизуализациюЭПВместоТэга(
		ДвДанныеФайлаDoc, 
		ДанныеФайла.Расширение,
		ШтампыПодписейЭП, 
		ДанныеФайла.НастройкиШтампаЭП);

		Если ТипЗнч(ДвоичныеДанныеНовые) = Тип("ДвоичныеДанные") Тогда
			ВизуализацияСсылка = РаботаСФайламиВызовСервера.СоздатьВизуализациюИЗаполнитьДанныеФайла(
			ДанныеФайла, ДвоичныеДанныеНовые, ИдентификаторФормы);	 
		КонецЕсли;			

	КонецЕсли;	

	Состояние();

	ИтоговыйФорматФайлаСоШтампомЭП = ДанныеФайла.НастройкиШтампаЭП.ИтоговыйФорматФайлаСоШтампомЭП;
	Если ИтоговыйФорматФайлаСоШтампомЭП = ПредопределенноеЗначение("Перечисление.ИтоговыйФорматФайлаСоШтампомЭП.PDFA") 
		И ДанныеФайла.ТекущаяВерсия = ДанныеФайла.Версия Тогда

		Если Не ДанныеФайла.НастройкиШтампаЭП.Использовать1СШтамп
			И ОбщегоНазначенияКлиентСервер.ЭтоLinuxКлиент()
			И НРег(ДанныеФайла.Расширение) = "doc" Тогда
			// тут не меняем расщирение
		Иначе	

			ДанныеФайла.Вставить("РасширениеОригинальное", ДанныеФайла.Расширение);	
			ДанныеФайла.Расширение = "pdf";		

		КонецЕсли;	

	КонецЕсли;	

	Возврат ВизуализацияСсылка;

КонецФункции
#КонецЕсли

&ИзменениеИКонтроль("ПолучитьССервераИЗарегистрироватьВЛокальномКэшеФайловЗавершение")
Процедура ЦППК_ПолучитьССервераИЗарегистрироватьВЛокальномКэшеФайловЗавершение(ПараметрыВыполнения)

	// Установим время изменения файла таким, как оно стоит в текущей версии.
	ФайлНаДиске = Новый Файл(ПараметрыВыполнения.ПолноеИмяФайла);
	ФайлНаДиске.УстановитьУниверсальноеВремяИзменения(ПараметрыВыполнения.ВремяИзмененияУниверсальное);

	// Т.к. размер на диске может отличаться от размера в базе (при добавлении из веб клиента).
	РазмерФайла = ФайлНаДиске.Размер();

	ФайлНаДиске.УстановитьТолькоЧтение(ПараметрыВыполнения.НаЧтение);

	ПараметрыВыполнения.ИмяКаталога = ФайловыеФункцииСлужебныйКлиент.РабочийКаталогПользователя();

	КоличествоЗанятыхФайлов = 0;

	РаботаСФайламиВызовСервера.ЗанестиИнформациюФайлаВРегистр(
	ПараметрыВыполнения.ДанныеФайла.Версия,
	ПараметрыВыполнения.ПолноеИмяФайла,
	ПараметрыВыполнения.ИмяКаталога,
	ПараметрыВыполнения.НаЧтение,
	РазмерФайла,
	ПараметрыВыполнения.ВРабочемКаталогеВладельца,
	КоличествоЗанятыхФайлов);

	Если КоличествоЗанятыхФайлов <> -1 Тогда
		СтандартныеПодсистемыКлиент.УстановитьПараметрКлиента(
		"КоличествоЗанятыхФайлов", 
		КоличествоЗанятыхФайлов);
	КонецЕсли;	

	Если ПараметрыВыполнения.ДанныеФайла.Размер <> РазмерФайла Тогда
		// При обновлении из файла на диске коррекция не нужна.
		Если Не ПараметрыВыполнения.ДанныеФайла.Свойство("ПутьОбновленияИзФайлаНаДиске") Тогда

			Если Не ПараметрыВыполнения.ДанныеФайла.ВизуализацияЭПДобавлена Тогда

				РаботаСФайламиВызовСервера.ОбновитьРазмерФайлаИВерсии(
				ПараметрыВыполнения.ДанныеФайла, РазмерФайла, ПараметрыВыполнения.ИдентификаторФормы);

				ОповеститьОбИзменении(ПараметрыВыполнения.ДанныеФайла.Ссылка);
				ОповеститьОбИзменении(ПараметрыВыполнения.ДанныеФайла.Версия);

				Оповестить("Запись_Файл",
				Новый Структура("Событие, ИдентификаторРодительскойФормы", 
				"ДанныеФайлаИзменены", Неопределено),
				ПараметрыВыполнения.ДанныеФайла.Ссылка);

			КонецЕсли;	
		КонецЕсли;
#Вставка
	// ЦППК Горбачев А.В. 06.08.2024
	// Добавляем оповещение при записи версии файла, когда вставляется картинка подписи
	// и делается преобразование в PDF, после которой необходимо обновить пиктограмму
	// файла в списке.
	ИначеЕсли ПараметрыВыполнения.ДанныеФайла.Свойство("ВизуализацияЭПДобавлена") Тогда

		Если Не ПараметрыВыполнения.ДанныеФайла.ВизуализацияЭПДобавлена Тогда
			
			Оповестить("Запись_Файл",
			Новый Структура("Событие, ИдентификаторРодительскойФормы", 
			"ДанныеФайлаИзменены", Неопределено),
			ПараметрыВыполнения.ДанныеФайла.Ссылка);
			
		КонецЕсли;
#КонецВставки
	КонецЕсли;

	ПараметрыВыполнения.ФайлПолучен = Истина;
	ВернутьРезультат(ПараметрыВыполнения.ОбработчикРезультата, ПараметрыВыполнения);

КонецПроцедуры
