
Функция ПолучитьДокументПредприятияПоЗадачеИсполнителя(ЗадачаИсполнителя) Экспорт //+ЦППК САНФ-023288 31.01.2024
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗадачаИсполнителяПредметы.Предмет КАК Предмет
	|ИЗ
	|	Задача.ЗадачаИсполнителя.Предметы КАК ЗадачаИсполнителяПредметы
	|ГДЕ
	|	ЗадачаИсполнителяПредметы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ЗадачаИсполнителя);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Предмет;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции //-ЦППК 31.01.2024

Функция ПолучитьДокументПредприятияПоЗадаче(Задача) Экспорт //+ЦППК САНФ-023288 31.01.2024
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗадачаПриложения.Приложение КАК Приложение
	|ИЗ
	|	Документ.Задача.Приложения КАК ЗадачаПриложения
	|ГДЕ
	|	ЗадачаПриложения.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Задача);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Приложение;
	КонецЦикла;
	
	Возврат Неопределено;

КонецФункции //-ЦППК 31.01.2024

Функция ПолучитьСрокИсполненияНаСервере(ЗадачаИсполнителя) Экспорт //+ЦППК САНФ-023288 31.01.2024
	
	//ДокументПредприятия = ПолучитьДокументПредприятияПоЗадачеИсполнителя(ЗадачаИсполнителя);
	//Если ЗначениеЗаполнено(ДокументПредприятия) Тогда 
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗадачаИсполнителя, "СрокИсполнения");
	//КонецЕсли;  
	
	Возврат Дата(1,1,1,0,0,0);
	
КонецФункции //-ЦППК 31.01.2024

Функция ЗаполнитьСрокИсполнения(ОбрабатываемыеПредметы, ГлавнаяЗадача) Экспорт

	//++AxelSoft Шарапова 06.01.2024 САНФ-029987
	// Смена времени исполнения на данные в константе ЦППК_ГраницаВремениСрокаИсполнения
	//--AxelSoft Шарапова 06.01.2024 САНФ-029987

	СрокИсполненияДокумента = Дата('00010101');
	Для каждого Предмет из ОбрабатываемыеПредметы Цикл
        РевизитыВидаДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Предмет.ВидДокумента, "ЯвляетсяВходящейКорреспонденцией, ЯвляетсяЗаявкойНаВозврат");
        РевизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Предмет, "СрокИсполнения");
		Если РевизитыВидаДокумента.ЯвляетсяВходящейКорреспонденцией И НЕ РевизитыВидаДокумента.ЯвляетсяЗаявкойНаВозврат Тогда
			СрокИсполненияДокумента = РевизитыДокумента.СрокИсполнения;
		КонецЕсли;  				
	КонецЦикла;
	
	Если ЗначениеЗаполнено(СрокИсполненияДокумента) Тогда
		СрокИсполнения = ОбновитьСрокПоДаннымГраницыВремениСрокаИсполнения(СрокИсполненияДокумента);	
		Возврат СрокИсполнения;
	КонецЕсли;
		РевизитыЗадачи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ГлавнаяЗадача, "СрокИсполнения");
	Если ЗначениеЗаполнено(РевизитыЗадачи.СрокИсполнения) Тогда
		СрокИсполнения = ОбновитьСрокПоДаннымГраницыВремениСрокаИсполнения(РевизитыЗадачи.СрокИсполнения);	
		Возврат СрокИсполнения;
	КонецЕсли;
	
	Возврат Дата('00010101');
	
КонецФункции

Функция ПолучитьДанныеИзКлючаЗаписи(КлючЗаписи, ИмяРеквизита) Экспорт
	
	Если НЕ ТипЗнч(КлючЗаписи) = Тип("РегистрСведенийКлючЗаписи.ДанныеДокументовПредприятия") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если КлючЗаписи.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат КлючЗаписи[ИмяРеквизита];
	
КонецФункции

Функция ДанныеПоКлючуЗаписи(КлючЗаписи, Реквизиты) Экспорт
	
	Результат = Новый Структура; 
	Если КлючЗаписи.Пустой() ИЛИ ПустаяСтрока(Реквизиты) Тогда
		Возврат Результат;
	КонецЕсли;
		
	Реквизиты = СтрРазделить(Реквизиты, ",", Ложь);
	Для Индекс = 0 По Реквизиты.ВГраница() Цикл
		Реквизит = СокрЛП(Реквизиты[Индекс]);
		Результат.Вставить(Реквизит, КлючЗаписи[Реквизит]);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ГлавныйИсполнительЗадачи(Задача, АвторРезолюции, КоличествоДублей) Экспорт //+ЦППК САНФ-027028 25.07.2024
	
	Если КоличествоДублей < 2 Тогда
		Возврат Истина;
	КонецЕсли;
   
	БизнесПроцесс = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Задача, "БизнесПроцесс");
  	ИсполнительЗадачи =  Исполнитель(БизнесПроцесс);
	Если ЗначениеЗаполнено(ИсполнительЗадачи) Тогда
	   	Возврат ИсполнительЗадачи = АвторРезолюции;
	Иначе 
			
	КонецЕсли;

КонецФункции    

Функция Исполнитель(БизнесПроцесс)
	
	ГлавнаяЗадача = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БизнесПроцесс, "ГлавнаяЗадача");
	БизнесПроцессЗадачи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ГлавнаяЗадача, "БизнесПроцесс");	
	
	Если Не ЗначениеЗаполнено(ГлавнаяЗадача) Тогда
		
		Если Не ОбщегоНазначения.ЕстьРеквизитОбъекта("Исполнитель", БизнесПроцесс.Метаданные())  Тогда
			Возврат Неопределено;	
		КонецЕсли;
						
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БизнесПроцесс, "Исполнитель");
		
	Иначе
		Возврат Исполнитель(БизнесПроцессЗадачи);
	КонецЕсли;
	
КонецФункции

//++МельниченкоНН 16.08.2024 САНФ-027815
Процедура СформироватьНаименованиеБП_ПоПриложениямЗадачи(БП_Объект, ЗадачаИсполнителяСсылка) Экспорт

	Если ТипЗнч(БП_Объект) = Тип("БизнесПроцессОбъект.Исполнение") Тогда
		ТекстДействияБП = "Исполнить";
	ИначеЕсли ТипЗнч(БП_Объект) = Тип("БизнесПроцессОбъект.Ознакомление") Тогда 	
		ТекстДействияБП = "Ознакомиться";
	ИначеЕсли ТипЗнч(БП_Объект) = Тип("БизнесПроцессОбъект.Подписание") Тогда 	
		ТекстДействияБП = "Подписать";
	ИначеЕсли ТипЗнч(БП_Объект) = Тип("БизнесПроцессОбъект.Приглашение") Тогда 	
		ТекстДействияБП = "Пригласить";
	ИначеЕсли ТипЗнч(БП_Объект) = Тип("БизнесПроцессОбъект.Рассмотрение") Тогда 	
		ТекстДействияБП = "Рассмотреть";
	ИначеЕсли ТипЗнч(БП_Объект) = Тип("БизнесПроцессОбъект.Регистрация") Тогда 	
		ТекстДействияБП = "Зарегистрировать";
	ИначеЕсли ТипЗнч(БП_Объект) = Тип("БизнесПроцессОбъект.Согласование") Тогда 	
		ТекстДействияБП = "Согласовать";
	ИначеЕсли ТипЗнч(БП_Объект) = Тип("БизнесПроцессОбъект.Утверждение") Тогда 	
		ТекстДействияБП = "Утвердить";
	Иначе
		Возврат;
	КонецЕсли;
	
	Попытка
		ДействиеЗадачи = Документы.ДействиеЗадачи.НайтиПоИсточнику(ЗадачаИсполнителяСсылка);
		ПриложенияЗадачи = РаботаСЗадачами.ПриложенияЗадачи(ДействиеЗадачи.Задача, ДействиеЗадачи);
		Если ПриложенияЗадачи.Количество() > 0 Тогда
			БП_Объект.Наименование = ТекстДействияБП + " """ + ПриложенияЗадачи[0].Приложение.Наименование + """";
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры
//--МельниченкоНН 16.08.2024 САНФ-027815

//++AxelSoft Шарапова 30.10.2024 САНФ-029987
Функция ПолучитьГраницуВремениСрокаИсполнения() Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Константы.ЦППК_ГраницаВремениСрокаИсполнения.Получить();
	
КонецФункции

Функция ОбновитьСрокПоДаннымГраницыВремениСрокаИсполнения(СрокИсполнения) Экспорт

	ЦППК_ГраницаСрокаИсполнения = ЦППК_ОбщийМодульВызовСервера.ПолучитьГраницуВремениСрокаИсполнения();
	
	ЦППК_СрокИсполнения = НачалоДня(СрокИсполнения)
	+ Час(ЦППК_ГраницаСрокаИсполнения) * 3600
	+ Минута(ЦППК_ГраницаСрокаИсполнения) * 60
	+ Секунда(ЦППК_ГраницаСрокаИсполнения);
	
	Возврат ЦППК_СрокИсполнения;	
	
КонецФункции 

//--AxelSoft Шарапова 30.10.2024 САНФ-029987
