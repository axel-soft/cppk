
&ИзменениеИКонтроль("ВставитьВизуализациюЭПВместоТэга")
Функция ЦППК_ВставитьВизуализациюЭПВместоТэга(
	Знач ДвоичныеДанныеФайла, 
	Знач Расширение,
	Знач ШтампыПодписейЭП,
	НастройкиШтампаЭП) Экспорт

	МассивТегов = Новый Массив;
	Для Каждого КлючИЗначение Из ШтампыПодписейЭП Цикл
		МассивТегов.Добавить(КлючИЗначение.Ключ);
	КонецЦикла;	 
	
	ВсеДанныеОтметок = ШтампыПодписейЭП[ТегВсеПодписи()];
	
	Результат = Ложь;
	
	СтраницаВставкиШтампаЭП = НастройкиШтампаЭП.СтраницаВставкиШтампаЭП;
	ИтоговыйФорматФайлаСоШтампомЭП = НастройкиШтампаЭП.ИтоговыйФорматФайлаСоШтампомЭП;
	
	ВставкаНаКлиенте = 
		НРег(Расширение) = "doc"
		Или ( (НРег(Расширение) = "xls" Или НРег(Расширение) = "xlsx") И Не НастройкиШтампаЭП.Использовать1СШтамп)
		Или (НРег(Расширение) = "docx" 
		И СтраницаВставкиШтампаЭП = ПредопределенноеЗначение("Перечисление.СтраницаВставкиКартинки.Каждая")
		И Не НастройкиШтампаЭП.Использовать1СШтамп);
 #Вставка	
	//MDK 
	ВставкаНаКлиенте = 
	НРег(Расширение) = "doc"
	Или (НРег(Расширение) = "docx" 
	И СтраницаВставкиШтампаЭП = ПредопределенноеЗначение("Перечисление.СтраницаВставкиКартинки.Каждая"))
	Или (НРег(Расширение) = "docx" 
	И НастройкиШтампаЭП.ПравыйНижнийСНаложением);	
	//MDK
#КонецВставки

	НадоПреобразоватьВPdf = 
		(НРег(Расширение) <> "pdf" 
		И ИтоговыйФорматФайлаСоШтампомЭП = ПредопределенноеЗначение("Перечисление.ИтоговыйФорматФайлаСоШтампомЭП.PDFA"));
	
	WordApp = Неопределено;
	
	СисИнфо = Новый СистемнаяИнформация;   
	ЭтоLinux = Ложь;
	Если (СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86 
		Или СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86_64) Тогда
		ЭтоLinux = Истина;
	КонецЕсли;	
	
	Если ЭтоLinux
		И ВставкаНаКлиенте 
		И Не НастройкиШтампаЭП.Использовать1СШтамп Тогда
		Возврат ДвоичныеДанныеФайла; // вернем что было, без штампа 	
	КонецЕсли;  
	
	#Если ВебКлиент Тогда

		Если ВставкаНаКлиенте 
			И НадоПреобразоватьВPdf 
			И Не НастройкиШтампаЭП.Использовать1СШтамп Тогда
			Возврат ДвоичныеДанныеФайла; // вернем что было, без штампа 	
		КонецЕсли;  
		
	#КонецЕсли	
	
	ЭтоТонкийКлиент = Ложь;
	#Если ТонкийКлиент Тогда
		
		ЭтоТонкийКлиент = Истина;

	#КонецЕсли	
	
	НеИщемТеги = Ложь;
	Если (ОбщегоНазначенияКлиентСервер.ЭтоLinuxКлиент() Или ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент()) 
		И НастройкиШтампаЭП.Использовать1СШтамп Тогда
		ВставкаНаКлиенте = Ложь; // вставки по тегам не будет.
		НеИщемТеги = Истина;
	КонецЕсли;     
	
	ВысотаКартинки = 22;
		
	Если Расширение = "odt" Тогда
		
	    НайденТэгШтрихкода = НайтиТэгДляВставкиКартинки(ДвоичныеДанныеФайла, Расширение, МассивТегов); 
		Если НайденТэгШтрихкода Тогда
			
			
			ДвоичныеДанныеЗаполненногоФайла 
				= ВизуализацияЭПOpenOfficeВызовСервера.ВставитьВизуализациюВФайлODTВместоТэга(
				МассивТегов, ШтампыПодписейЭП, ДвоичныеДанныеФайла, ВысотаКартинки, НастройкиШтампаЭП);
			
		Иначе
			
			Если НастройкиШтампаЭП.Использовать1СШтамп Тогда
				
				Возврат ВизуализацияЭПВызовСервера.ДвоичныеДанныеФайлаСШтампомИспользуя1СШтамп(
					Расширение, ДвоичныеДанныеФайла, ВсеДанныеОтметок, НастройкиШтампаЭП);
					
			КонецЕсли;	
			
			ДвоичныеДанныеЗаполненногоФайла 
				= ВизуализацияЭПOpenOfficeВызовСервера.ВставитьИзображениеЭПВФайлODTСУказаниемПоложения(
					ВсеДанныеОтметок, ДвоичныеДанныеФайла, НастройкиШтампаЭП, 
					ВысотаКартинки);
			
		КонецЕсли;
		
		Если НадоПреобразоватьВPdf И ЭтоТонкийКлиент Тогда
			// на клиенте в pdf преобразуем
			ДвоичныеДанныеЗаполненногоФайла = ПреобразоватьOpenOfficeВPdf(
				ДвоичныеДанныеЗаполненногоФайла, Расширение);
		КонецЕсли;			

		Возврат ДвоичныеДанныеЗаполненногоФайла;       

	ИначеЕсли Расширение = "xls" Или Расширение = "xlsx" Тогда	
		
		Если НастройкиШтампаЭП.Использовать1СШтамп Тогда
			
			Возврат ВизуализацияЭПВызовСервера.ДвоичныеДанныеФайлаСШтампомИспользуя1СШтамп(
				Расширение, ДвоичныеДанныеФайла, ВсеДанныеОтметок, НастройкиШтампаЭП);
				
		КонецЕсли;	
		
		ИмяФайла = ВставитьКартинкуВФайлXlsСУказаниемПоложения(Расширение, ДвоичныеДанныеФайла, 
			ВсеДанныеОтметок, НастройкиШтампаЭП);
			
	  	ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ИмяФайла);
		УдалитьФайлы(ИмяФайла);
				
		Возврат ДвоичныеДанныеФайла;       

	ИначеЕсли АвтозаполнениеШаблоновФайловКлиентСервер.ФорматMSWord(Расширение) Тогда	
		
		Если ВставкаНаКлиенте Тогда
			Попытка
				СисИнфо = Новый СистемнаяИнформация;
				Если СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86 ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
					WordApp = Новый COMОбъект("Word.Application");
				КонецЕсли;
			Исключение
				ВызватьИсключение(НСтр("ru = 'Ошибка работы с приложением MS Word. Необходимо проверить правильность установки приложения.'"));
			КонецПопытки;
		КонецЕсли;
		
		НайденТэгШтрихкода = Ложь;
		Если НеИщемТеги Или (ЭтоLinux И Расширение = "doc") Тогда
			НайденТэгШтрихкода = Ложь;
		Иначе	
			НайденТэгШтрихкода = НайтиТэгДляВставкиКартинки(ДвоичныеДанныеФайла, 
				Расширение, МассивТегов, WordApp); 
		КонецЕсли;	
			
		Если НайденТэгШтрихкода Тогда
			
			// вместо тега - тут docx всегда на сервере
			Если Расширение = "doc" Тогда 
				
				ИмяФайла = ВставитьШтампВФайлMSWordВместоТэга(Расширение, 
					МассивТегов, ШтампыПодписейЭП, ДвоичныеДанныеФайла, 
					НастройкиШтампаЭП, WordApp);
			  	ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ИмяФайла);
				УдалитьФайлы(ИмяФайла);
					
				Если WordApp <> Неопределено Тогда
					WordApp.Quit();
					WordApp = Неопределено;
				КонецЕсли;
				
				Возврат ДвоичныеДанныеФайла;
			ИначеЕсли Расширение = "docx" Тогда
				
				ДвоичныеДанныеЗаполненногоФайла 
					= ВизуализацияЭПВызовСервера.ВставитьВизуализациюВместоТэгаВФайлDocx(
					МассивТегов, ШтампыПодписейЭП, ДвоичныеДанныеФайла, Расширение, ВысотаКартинки,
					НастройкиШтампаЭП);
					
				Если НадоПреобразоватьВPdf И ЭтоТонкийКлиент Тогда
					// на клиенте в pdf преобразуем
					ДвоичныеДанныеЗаполненногоФайла = ПреобразоватьWordВPdf(
						ДвоичныеДанныеЗаполненногоФайла, Расширение);
				КонецЕсли;			
					
				Возврат ДвоичныеДанныеЗаполненногоФайла;
					
			КонецЕсли;
		Иначе
			
			Если НастройкиШтампаЭП.Использовать1СШтамп Тогда
				
				Если WordApp <> Неопределено Тогда
					WordApp.Quit();
					WordApp = Неопределено;
				КонецЕсли;
				
				Возврат ВизуализацияЭПВызовСервера.ДвоичныеДанныеФайлаСШтампомИспользуя1СШтамп(
					Расширение, ДвоичныеДанныеФайла, ВсеДанныеОтметок, НастройкиШтампаЭП);
					
			КонецЕсли;	
			
			// нет тега - по положению вставка - тут docx могут быть и на клиенте
			Если ВставкаНаКлиенте Тогда
				
				Если ВсеДанныеОтметок.Количество() > 1 Тогда
					ВсеДанныеОтметок = РаботаСФайламиВызовСервера.СобратьВсеШтампыВОдин(ВсеДанныеОтметок);
				КонецЕсли;	
				
				ИмяФайла = ВставитьКартинкуВФайлDocСУказаниемПоложения(Расширение, ДвоичныеДанныеФайла, 
					ВсеДанныеОтметок, НастройкиШтампаЭП);
					
			  	ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ИмяФайла);
				УдалитьФайлы(ИмяФайла);
					
				Если WordApp <> Неопределено Тогда
					WordApp.Quit();
					WordApp = Неопределено;
				КонецЕсли;
				
				Возврат ДвоичныеДанныеФайла;
				
			ИначеЕсли Расширение = "docx" Тогда	    
				
				ДвоичныеДанныеФайла 
					= ВизуализацияЭПВызовСервера.ВставитьИзображениеЭПВФайлDocxСУказаниемПоложения(
					Расширение, "", ДвоичныеДанныеФайла, ВсеДанныеОтметок, 
					НастройкиШтампаЭП, ВысотаКартинки);
					
				Если НадоПреобразоватьВPdf И ЭтоТонкийКлиент Тогда
					// на клиенте в pdf преобразуем
					ДвоичныеДанныеФайла = ПреобразоватьWordВPdf(
						ДвоичныеДанныеФайла, Расширение);
				КонецЕсли;			
					
				Возврат ДвоичныеДанныеФайла;	
				
					
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если WordApp <> Неопределено Тогда
		WordApp.Quit();
		WordApp = Неопределено;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&ИзменениеИКонтроль("ВставитьКартинкуВФайлDocСУказаниемПоложения")
Функция ЦППК_ВставитьКартинкуВФайлDocСУказаниемПоложения(
	Знач Расширение, 
	Знач ДвоичныеДанныеФайла, 
	Знач ДанныеОтметок, 
	НастройкиШтампаЭП)
	
	ПоложениеНаСтранице = НастройкиШтампаЭП.РасположениеШтампаЭП;
	СтраницаВставкиШтампаЭП = НастройкиШтампаЭП.СтраницаВставкиШтампаЭП;
	ИтоговыйФорматФайлаСоШтампомЭП = НастройкиШтампаЭП.ИтоговыйФорматФайлаСоШтампомЭП;
	
	НадоПреобразоватьВPdf = 
		(НРег(Расширение) <> "pdf" 
		И ИтоговыйФорматФайлаСоШтампомЭП = ПредопределенноеЗначение("Перечисление.ИтоговыйФорматФайлаСоШтампомЭП.PDFA"));
			
	СисИнфо = Новый СистемнаяИнформация;
	Если СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86 ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		Попытка
			WordApp = Новый COMОбъект("Word.Application");
		Исключение
			ВызватьИсключение(НСтр("ru = 'Ошибка работы с приложением MS Word. Необходимо проверить правильность установки приложения.'"));
		КонецПопытки;
	Иначе
		ВызватьИсключение(НСтр("ru = 'Вставка штампа в файл MS Word(doc) возможна только в Windows. Обратитесь к администратору.'"));	
	КонецЕсли;
	
	WordApp.WordBasic.DisableAutoMacros(1);
	
	ВерсияСтрока = WordApp.Build;
	МассивСтр = СтрРазделить(ВерсияСтрока, ".", Ложь);
	ВерсияЧисло = ОбщегоНазначенияДокументооборотКлиентСервер.СтрокаВЧисло(МассивСтр[0]);
	
	РасширениеДляЗаписи = Расширение;
	Если НадоПреобразоватьВPdf Тогда
		РасширениеДляЗаписи = "pdf";
	КонецЕсли;	
	
	ИмяВременногоФайлаOffice = ПолучитьИмяВременногоФайла(Расширение);
	НовыйПутьКФайлу = ПолучитьИмяВременногоФайла(РасширениеДляЗаписи);
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайлаOffice);
	
	Док = WordApp.Documents.Add(ИмяВременногоФайлаOffice); 
	WordApp.ActiveWindow.ActivePane.View.Type = 3; // wdPrintView = 3
	
	Если СтраницаВставкиШтампаЭП = ПредопределенноеЗначение("Перечисление.СтраницаВставкиКартинки.Последняя") Тогда
		
	   //переходим на последнюю страницу	
		wdStatisticPages = 2;
		ЧислоСтраниц = Док.ComputeStatistics(wdStatisticPages);
		
		// wdGoToPage 1  wdGoToAbsolute 1
		Range1 = Док.GoTo(1, 1, ЧислоСтраниц);
		Range1.Select();
		
	КонецЕсли;

	Если ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ПравыйНижний") Тогда
		СмещениеПоГоризонтали = "MAX";
		СмещениеПоВертикали = "MAX";
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ПравыйВерхний") Тогда
		СмещениеПоГоризонтали = "MAX";
		СмещениеПоВертикали = "MIN";
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ЛевыйВерхний") Тогда
		СмещениеПоГоризонтали = "MIN";
		СмещениеПоВертикали = "MIN";
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ЛевыйНижний") Тогда
		СмещениеПоГоризонтали = "MIN";
		СмещениеПоВертикали = "MAX";
#Вставка
 		СмещениеПоГоризонтали = "MAX";
		СмещениеПоВертикали = "MAX";
#КонецВставки
	КонецЕсли;

	ШиринаКартинкиШаблон = 240;// ширина картинки в пикселях.
	ВысотаКартинки = 65; // высота картинки в пикселях.        
	
	Если СтраницаВставкиШтампаЭП = ПредопределенноеЗначение("Перечисление.СтраницаВставкиКартинки.Каждая") Тогда
		
		ШиринаКартинкиШаблон = 120;// ширина картинки в пикселях.
		ВысотаКартинки = 33; // высота картинки в пикселях.        
		
	КонецЕсли;	
	
	//СмещениеПоYНаОднуПодпись = 10;
	СмещениеПоYНакопленное = 0;

	НомерПодписи = 0;
	Для Каждого ДанныеОтметки Из ДанныеОтметок Цикл
		
		ДвоичныеДанныеКартинки = ДанныеОтметки.ДвоичныеДанныеОтметки;
		
		ТипЭП = ДанныеОтметки.ТипЭП;    
		ЭтоВизуализацияПЭП = (ТипЭП = "ПЭП");
		
		Если ЭтоВизуализацияПЭП Тогда
			ШиринаКартинки = Цел(ШиринаКартинкиШаблон * 3 / 4);
		Иначе	
			ШиринаКартинки = ШиринаКартинкиШаблон;
		КонецЕсли;	
		
		ТекКартинка = Новый Картинка(ДвоичныеДанныеКартинки);
		ТекВысота = ТекКартинка.Высота();
#Вставка
		ТекВысота = Цел(ТекВысота * 0.8);
		ШиринаКартинки = Цел(ШиринаКартинки * 0.8); 
#КонецВставки
		
		ТекВысотаКартинки = Цел(ТекВысота * ВысотаКартинки / 310);  // перевод из старого значения ВысотаКартинки 65 (для высоты картинки в пикселах 310)
		//СмещениеПоYНаОднуПодпись = ТекВысота * 7.5 / 310;// перевод из старого значения 8 (для высоты картинки в пикселах 310)
		СмещениеПоYНаОднуПодпись = ТекВысотаКартинки + 2;// перевод из старого значения 8 (для высоты картинки в пикселах 310)
		
		ИмяВременногоФайлаКартинки = ПолучитьИмяВременногоФайла("png");
		ДвоичныеДанныеКартинки.Записать(ИмяВременногоФайлаКартинки);
		
		Если СтраницаВставкиШтампаЭП = ПредопределенноеЗначение("Перечисление.СтраницаВставкиКартинки.Каждая") Тогда

		    wdHeaderFooterEvenPages = 3; // — Все к-тулы, даже на пронумерованных статьях.
		    wdHeaderFooterFirstPage = 2; // — Первый к-тул в документе или разделе.
		    wdHeaderFooterPrimary   = 1; // — Возвращает к-тулы на всех, кроме первой страницы документа или раздела.
			
			НомерСекции = 1;     
			ВсегоСекций = Док.Sections.Count;
			
			Для Каждого Секция Из Док.Sections Цикл
				
				Если НомерСекции = 1 Тогда
					ВставитьВКолонтитул(Секция, wdHeaderFooterFirstPage,
						ИмяВременногоФайлаКартинки, СмещениеПоВертикали,
						ВерсияЧисло,
						ШиринаКартинки,
						ТекВысотаКартинки,
						WordApp,
						СмещениеПоГоризонтали);
				КонецЕсли;	

				Если НомерСекции = 2 Или (ВсегоСекций = 1)  Тогда
					ВставитьВКолонтитул(Секция, wdHeaderFooterPrimary,
						ИмяВременногоФайлаКартинки, СмещениеПоВертикали,
						ВерсияЧисло,
						ШиринаКартинки,
						ТекВысотаКартинки,
						WordApp,
						СмещениеПоГоризонтали); 
				КонецЕсли;	
					
				НомерСекции = НомерСекции + 1;
					
			КонецЦикла;	
#Вставка
		ИначеЕсли НастройкиШтампаЭП.ПравыйНижнийСНаложением Тогда
			//MDK
			wdStatisticPages = 2;
			ЧислоСтраниц = Док.Content.ComputeStatistics(wdStatisticPages);
			
			Range1 = Док.GoTo(1, 1, ЧислоСтраниц);
			Range1.Select(); 
			
			Если ВерсияЧисло < 12 Тогда  // ниже word 2007 - т.е. 2003 и ниже

				WordApp.Selection.InlineShapes.AddPicture(ИмяВременногоФайлаКартинки);

			Иначе	

				range = WordApp.Selection.Range;
				КартинкаWord = WordApp.Selection.InlineShapes.AddPicture(
				ИмяВременногоФайлаКартинки, False, True, range);

				КартинкаWord = КартинкаWord.ConvertToShape();
				КартинкаWord.ZOrder(5);
				
				КартинкаWord.ScaleWidth(0.25, 1);
				КартинкаWord.ScaleHeight(0.25, 1);
				
				КартинкаWord.RelativeHorizontalPosition = 0;
			  	КартинкаWord.Left = -999996;                
				
				КартинкаWord.RelativeVerticalPosition = 0; //  1 wdRelativeVerticalPositionPage
				КартинкаWord.Top = -999997; 				

			КонецЕсли;	
#КонецВставки
			
		Иначе	
		
			oGraphicObject = Док.Shapes.AddTextBox(1, 10, 10, ШиринаКартинки, ТекВысотаКартинки);
			
			//устанавливаем привязку положения к печатной области
			oGraphicObject.RelativeHorizontalPosition = 0; // 0 -wdRelativeVerticalPositionMargin
			oGraphicObject.RelativeVerticalPosition = 0;  
			
			Если СмещениеПоГоризонтали = "MAX" Тогда
				
				//выравнивание к правому краю
				oGraphicObject.Left = -999996; // wdShapeRight
	
			ИначеЕсли СмещениеПоГоризонтали = "MIN" Тогда
				//выравнивание к левому краю
				oGraphicObject.left = -999998; // wdShapeLeft
			КонецЕсли;
			
			Если СмещениеПоВертикали = "MAX" Тогда
				
	//			//выравнивание по нижнему краю
	
				oGraphicObject.RelativeVerticalPosition = 1; //  1 wdRelativeVerticalPositionPage
				oGraphicObject.TopRelative = 83 - Цел(СмещениеПоYНакопленное); 
				
			ИначеЕсли СмещениеПоВертикали = "MIN" Тогда
				
	//			//выравнивание по верхнему краю
	
				oGraphicObject.RelativeVerticalPosition = 1; //  1 wdRelativeVerticalPositionPage
				oGraphicObject.TopRelative = 0 + Цел(СмещениеПоYНакопленное); 
				
			КонецЕсли;  
			
			СмещениеПоYНакопленное = СмещениеПоYНакопленное + СмещениеПоYНаОднуПодпись;
			
			oGraphicObject.Select();
			   
			
			WordApp.Selection.ShapeRange.Line.Visible = Ложь;
			
			Если ВерсияЧисло < 12 Тогда  // ниже word 2007 - т.е. 2003 и ниже
			
				WordApp.Selection.InlineShapes.AddPicture(ИмяВременногоФайлаКартинки);
			
			Иначе	
			
			    range = WordApp.Selection.Range;
	            КартинкаWord = WordApp.Selection.InlineShapes.AddPicture(
					ИмяВременногоФайлаКартинки, False, True, range);
					
			КонецЕсли;	
			
			WordApp.Selection.ShapeRange.TextFrame.AutoSize = Истина;
			WordApp.Selection.ShapeRange.Fill.Visible = Ложь;
			WordApp.Selection.Font.Bold = Истина;
			
		КонецЕсли;
		
		НомерПодписи = НомерПодписи + 1;
		
	КонецЦикла;
	
	Если НадоПреобразоватьВPdf Тогда
		
		wdExportFormatPDF = 17;
		UseISO19005_1 = Истина;
		Док.ExportAsFixedFormat(НовыйПутьКФайлу, wdExportFormatPDF,,,,,,,,,,,,UseISO19005_1);
		
		Док.Close(0);  // 0 -закрыть без сохранения
		
	Иначе	
		
		// 12 - word 2007. 15 - word 2013

		
		Если ВерсияЧисло >= 12 Тогда
		
			Если Расширение = "docx" Тогда
				Док.SaveAs(НовыйПутьКФайлу, 12);                        
			Иначе
				Док.SaveAs(НовыйПутьКФайлу, 0);
			КонецЕсли;
		Иначе
		    Если Расширение = "docx" Тогда
				Док.SaveAs(НовыйПутьКФайлу, 109);                        
			Иначе
				Док.SaveAs(НовыйПутьКФайлу);
			КонецЕсли;
		КонецЕсли;
		
		Док.Saved = Истина;	
		Док.Close(); 
		
	КонецЕсли;
	
	WordApp.Quit();
	WordApp = Неопределено;
	
	УдалитьФайлы(ИмяВременногоФайлаOffice);
	
	Возврат НовыйПутьКФайлу;
	
КонецФункции
