
&ИзменениеИКонтроль("ДобавитьОбзорЛистаПодписанияДокумента")
Процедура ЦППК_ДобавитьОбзорЛистаПодписанияДокумента(HTMLТекст, Документ, ВсеДействия)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВсеВизыПодписания = ПодписантыИлиУтвердившиеДокументСРезультатамиДляОбзора(Документ, ВсеДействия);
	
	Если ВсеВизыПодписания.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + "<p>";

	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<table border=""0"" bordercolor = ""white"" style=""border-collapse: collapse;"" >";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td align=center colspan=""6"">";
	
	HTMLТекст = HTMLТекст + СтрШаблон(
		"<B>%1</B>",
		НСтр("ru = 'Лист подписания'"));
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	HTMLТекст = HTMLТекст + "</table>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<table border=""1"" bordercolor = ""black"" style=""border-collapse: collapse;"" >";
	HTMLТекст = HTMLТекст + "<tr>";
	
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'ФИО, Должность'"), "30%",, "black");
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Результат'"), "20%",, "black");
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Дата'"), "20%",, "black");
	ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Комментарий'"), "30%",, "black");
	
	HTMLТекст = HTMLТекст + "</tr>";

	Для Каждого СтрокаИсполнитель Из ВсеВизыПодписания Цикл

		ТекстПодписи = "";	ФИОДолжность = ""; РезультатВыполнения = "";		
		ПредставленияПравок = Новый Массив;
		ПодписыватьУЭП = Ложь;	
		Если ЗначениеЗаполнено(СтрокаИсполнитель.Результат) Тогда
			
			СпособПодписания = Перечисления.СпособыПодписанияПредметаДействия.НаБумаге;
			Если ТипЗнч(СтрокаИсполнитель.Действие) = Тип("СправочникСсылка.ДействияПодписания") Тогда
				
				СпособПодписания = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
					СтрокаИсполнитель.Действие, "СпособПодписания");	
			КонецЕсли;	
			
			Если СпособПодписания = Перечисления.СпособыПодписанияПредметаДействия.НаБумаге Тогда
				
				ТекстПодписи = НСтр("ru='На бумаге'");
				
			ИначеЕсли СпособПодписания = Перечисления.СпособыПодписанияПредметаДействия.УЭП
				И СтрокаИсполнитель.Результат <> Перечисления.СостоянияДокументов.Отклонен Тогда
				
				УстановилПодпись = Неопределено;
				Если ТипЗнч(СтрокаИсполнитель.Подписант) = Тип("СправочникСсылка.ФактическиеИсполнители") Тогда
					УстановилПодпись = Сотрудники.ПользовательСотрудника(
						ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаИсполнитель.Подписант, "Отметил"));
				Иначе
					УстановилПодпись = Сотрудники.ПользовательСотрудника(СтрокаИсполнитель.Подписант);
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(СтрокаИсполнитель.ПравилоЭскалации) Тогда
					ПодписыватьУЭП = Истина;
					ТекстПодписи = РаботаСЭП.ТекстПодписиУЭПДляВывода(Документ, УстановилПодпись);
				Иначе
					СтрокаИсполнитель.Комментарий = НСТр("ru = 'Подписано автоматически'"); 
				КонецЕсли;
				
			Иначе
				
				ТекстПодписанта = СтрокаИсполнитель.ПредставлениеФактическогоИсполнителя;
				
				Если Не ЗначениеЗаполнено(СтрокаИсполнитель.ПравилоЭскалации) Тогда
					
					ТекстПодписи = НСтр("ru = 'ПРОСТАЯ ЭЛЕКТРОННАЯ ПОДПИСЬ'")
						+ Символы.ПС 
						+ ТекстПодписанта;
					
				Иначе
					
					СтрокаИсполнитель.Комментарий = НСТр("ru = 'Подписано автоматически'");
					
				КонецЕсли;
				 
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаИсполнитель.Комментарий) Тогда 
			ПредставленияПравок.Добавить(СтрокаИсполнитель.Комментарий);
		КонецЕсли;
		
		Если ПредставленияПравок.Количество() > 0 Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПредставленияПравок, "");
			РезультатВыполнения = СтрСоединить(ПредставленияПравок, Символы.ПС);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаИсполнитель.Подписант) Тогда
			
			ФИОДолжность = ""; 
			Если ЗначениеЗаполнено(СтрокаИсполнитель.ПредставлениеФактическогоИсполнителя) Тогда
				// Подписание завершено
				ФИОДолжность = СтрокаИсполнитель.ПредставлениеФактическогоИсполнителя;
			Иначе
				// Подписание не завершено
				ФИОДолжность = Строка(СтрокаИсполнитель.Подписант);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаИсполнитель.РольИсполнителя) Тогда
				
				ФИОДолжность = СтрШаблон("%1 (%2)",
					СтрокаИсполнитель.ПредставлениеФактическогоИсполнителя,
					СтрокаИсполнитель.РольИсполнителя);
				
			КонецЕсли;
			
		КонецЕсли;
		
#Удаление
		Если ЗначениеЗаполнено(СтрокаИсполнитель.Результат) И ЗначениеЗаполнено(ТекстПодписи) Тогда
			HTMLТекст = HTMLТекст + "<tr>";
			
			HTMLТекст = HTMLТекст + "<td width=""30%"" Rowspan = ""2"" align=left bordercolor = ""black"" >";
			ФИОДолжность = СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(ФИОДолжность), Символы.ПС, "<br>");
			ДобавитьРеквизит(HTMLТекст, ФИОДолжность, "");
			HTMLТекст = HTMLТекст + "</td>";
			
			ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаИсполнитель.Результат, "20%");
			ДобавитьЯчейкуТаблицы(HTMLТекст, Формат(СтрокаИсполнитель.ДатаИсполнения, "ДФ='dd.MM.yyyy ЧЧ:мм'"), "20%", "left");
			
			HTMLТекст = HTMLТекст + "<td width=""30%"" Rowspan = ""2"" align=left bordercolor = ""black"" >";
			РезультатВыполнения = СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(РезультатВыполнения), Символы.ПС, "<br>");
			ДобавитьРеквизит(HTMLТекст, РезультатВыполнения, "");
			HTMLТекст = HTMLТекст + "</td>";
			
			HTMLТекст = HTMLТекст + "</tr>";
			
			// Строка с подписью
			HTMLТекст = HTMLТекст + "<tr>";
			HTMLТекст = HTMLТекст + "<td colspan=""2"" align=left bordercolor = ""black"" >";
			
			Если ПодписыватьУЭП Тогда
				HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A>",
				"DigitalSignature",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(ТекстПодписи));
			Иначе
				ДобавитьПодписьСЦветом(HTMLТекст, ТекстПодписи, "#006699");
			КонецЕсли;
			
			HTMLТекст = HTMLТекст + "</td>";
			HTMLТекст = HTMLТекст + "</tr>";
			
		Иначе
				
			HTMLТекст = HTMLТекст + "<tr>";
			
			ДобавитьЯчейкуТаблицы(HTMLТекст, ФИОДолжность, "30%", "left");
			ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаИсполнитель.Результат, "20%");
			ДобавитьЯчейкуТаблицы(HTMLТекст, 
				Формат(СтрокаИсполнитель.ДатаИсполнения, "ДФ='dd.MM.yyyy ЧЧ:мм'"), "20%", "left");
			ДобавитьЯчейкуТаблицы(HTMLТекст, РезультатВыполнения, "30%", "left");
							
			HTMLТекст = HTMLТекст + "</tr>";
			
		КонецЕсли;
#КонецУдаления
#Вставка
		HTMLТекст = HTMLТекст + "<tr>";

		ДобавитьЯчейкуТаблицы(HTMLТекст, ФИОДолжность, "30%", "left");
		ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаИсполнитель.Результат, "20%");
		ДобавитьЯчейкуТаблицы(HTMLТекст, 
		Формат(СтрокаИсполнитель.ДатаИсполнения, "ДФ='dd.MM.yyyy ЧЧ:мм'"), "20%", "left");
		ДобавитьЯчейкуТаблицы(HTMLТекст, РезультатВыполнения, "30%", "left");

		HTMLТекст = HTMLТекст + "</tr>";
#КонецВставки
	КонецЦикла;
	
	HTMLТекст = HTMLТекст + "</table>";
	HTMLТекст = HTMLТекст + "</tr>";
	
КонецПроцедуры

&ИзменениеИКонтроль("ДобавитьОбзорЛистаСогласованияДокумента")
Процедура ЦППК_ДобавитьОбзорЛистаСогласованияДокумента(HTMLТекст, Документ)  
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = РаботаСВизамиСогласования.ТекстЗапросаДляЛистаСогласования();
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Документ);
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Действие = Неопределено;
	
	ДействияСоответствие = Новый Соответствие;
	ВсеВизыСогласования = Новый Массив;
	// сперва найдем все Действия
	Для Каждого СтрокаСсылка Из Результат.Строки Цикл
		Для Каждого СтрокаИсполнитель Из СтрокаСсылка.Строки Цикл
			
			Действие = СтрокаИсполнитель.Источник;
			Ветка = СогласованиеВРежимеЗамечанийСервер.НайтиВеткуОбработки(Действие);
			Если ЗначениеЗаполнено(Ветка) Тогда
				ДействияСоответствие[Действие] = Ветка;
			Иначе
				ДействияСоответствие[Действие] = 1;
			КонецЕсли;
			
			Если ВсеВизыСогласования.Найти(СтрокаИсполнитель.ВизаСогласования) = Неопределено Тогда
				ВсеВизыСогласования.Добавить(СтрокаИсполнитель.ВизаСогласования);
			КонецЕсли;
			
		КонецЦикла;	
	КонецЦикла;	
	ВеткиМассив = Новый Массив;
	Для Каждого КлючИЗначение Из ДействияСоответствие Цикл
		ВеткиМассив.Добавить(КлючИЗначение.Значение);
	КонецЦикла;	
	Замечания = РаботаСВизамиСогласования.ЗамечанияПоВеткам(ВеткиМассив);
	
	НомерИтерации = РегистрыСведений.ИтерацииДействий.НомерИтерации(Действие);
	Разногласия = РаботаСВизамиСогласования.ВсеРазногласия(Действие, НомерИтерации);
	ВерсииСогласованныхФайлов = РегистрыСведений.ВерсииСогласованныхФайлов.ВсеВерсииПоСпискуВиз(
		ВсеВизыСогласования);
	
	Если ВсеВизыСогласования.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + "<p>";
		
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""4"" align=center>";
	
	HTMLТекст = HTMLТекст + СтрШаблон(
		"<B>%1</B>",
		НСтр("ru = 'Лист согласования'"));
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + "</td>";
	
	Для Каждого СтрокаСсылка Из Результат.Строки Цикл
		HTMLТекст = HTMLТекст + "<table border=""1"" bordercolor = ""black"" style=""border-collapse: collapse;"" >";
		HTMLТекст = HTMLТекст + "<tr>";
		
		ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'ФИО, Должность'"), "30%",, "black");
		ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Результат'"), "20%",, "black");
		ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Дата'"), "20%",, "black");
		ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Замечания, комментарии'"), "30%",, "black");
		
		HTMLТекст = HTMLТекст + "</tr>";
	
		Для Каждого СтрокаИсполнитель Из СтрокаСсылка.Строки Цикл

			ТекстПодписи = "";	ФИОДолжность = ""; РезультатВыполнения = "";
			ПодписыватьУЭП = Ложь;
			Если ЗначениеЗаполнено(СтрокаИсполнитель.ФактическийИсполнитель) Тогда
				
				ПредставленияПравок = Новый Массив;
				
				ДанныеОбИзмененииФайлов = РаботаСВизамиСогласования.ДанныеОбИзмененииФайловПоВизеСогласования(
					ВерсииСогласованныхФайлов, СтрокаИсполнитель.ВизаСогласования);
				ВерсииИзменились = ДанныеОбИзмененииФайлов.ВерсииОтличаются; 
				ОтслеживаниеВерсийПроизводилось = ДанныеОбИзмененииФайлов.ОтслеживаниеВерсийПроизводилось;
				
				Ветка = ДействияСоответствие.Получить(СтрокаИсполнитель.Источник);
				
				Если ЗначениеЗаполнено(СтрокаИсполнитель.РезультатСогласования) 
					И ЗначениеЗаполнено(СтрокаИсполнитель.Источник)
					И Не ЗначениеЗаполнено(СтрокаИсполнитель.ПравилоЭскалации) Тогда
					
					Если ТипЗнч(СтрокаИсполнитель.Источник) = Тип("СправочникСсылка.ДействияСогласования") Тогда
						
						ПодписыватьУЭП = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
							СтрокаИсполнитель.Источник, "ПодписыватьУЭП");
							
					ИначеЕсли ТипЗнч(СтрокаИсполнитель.Источник) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда		
							
						БизнесПроцесс = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
							СтрокаИсполнитель.Источник, "БизнесПроцесс");
							
						Если ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Согласование") Тогда	
							ПодписыватьУЭП = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
								БизнесПроцесс, "ПодписыватьЭП");
						КонецЕсли;	
						
					КонецЕсли;
					
#Удаление
					ТекстПодписи = РаботаСВизамиСогласования.ТекстШтампаЛистаСогласования(СтрокаИсполнитель, ПодписыватьУЭП); 
#КонецУдаления
				
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Ветка)
					И ТипЗнч(Ветка) = Тип("СправочникСсылка.ВеткиОбработки") Тогда // это согл в режиме замечаний
					
					СтруктураПоиска = Новый Структура("ВеткаОбработки, ТипЗамечания, НомерЭтапа",
						Ветка,
						Неопределено,
						СтрокаИсполнитель.НомерИтерации);
						
					СтруктураПоиска.Вставить("ИдентификаторАвтора", СтрокаИсполнитель.ИдентификаторУчастника);
					
					// Замечания.
					СтруктураПоиска.ТипЗамечания = Перечисления.ТипыЗамечаний.Замечание;
					ЗамечанияСтроки = Замечания.НайтиСтроки(СтруктураПоиска);
					
					Для Каждого Замечание Из ЗамечанияСтроки Цикл 
						ПредставленияПравок.Добавить(РаботаСВизамиСогласования.ПредставлениеЗамечания(Замечание));
					КонецЦикла;
					
					// Комментарии.
					СтруктураПоиска.ТипЗамечания = Перечисления.ТипыЗамечаний.Комментарий;
					КомментарииСтроки = Замечания.НайтиСтроки(СтруктураПоиска);
					
					ВыделятьКомментарий = 
						СтрокаИсполнитель.РезультатСогласования = Перечисления.РезультатыСогласования.НеСогласовано;
					
					Для Каждого Комментарий Из КомментарииСтроки Цикл 
						ПредставленияПравок.Добавить(РаботаСВизамиСогласования.ПредставлениеЗамечания(Комментарий, ВыделятьКомментарий));
					КонецЦикла;
				
				ИначеЕсли ЗначениеЗаполнено(СтрокаИсполнитель.РезультатВыполнения) Тогда 
					ПредставленияПравок.Добавить(СтрокаИсполнитель.РезультатВыполнения);	
				КонецЕсли;		
				
				Если ПредставленияПравок.Количество() > 0 Тогда
					ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПредставленияПравок, "");
					РезультатВыполнения = СтрСоединить(ПредставленияПравок, Символы.ПС);
				Иначе 
					РезультатВыполнения = СтрокаИсполнитель.РезультатВыполнения;
				КонецЕсли;
			КонецЕсли;
			
#Удаление
			ФИОДолжность = СтрокаИсполнитель.ПредставлениеФактическогоИсполнителя; 
			Если Не ЗначениеЗаполнено(ФИОДолжность) Тогда
				ФИОДолжность = Строка(СтрокаИсполнитель.ФактическийИсполнитель); 
			КонецЕсли;
#КонецУдаления
#Вставка 					
			ФИОДолжность = Строка(СтрокаИсполнитель.ФактическийИсполнитель); 
#КонецВставки 					
			
			Если Не ЗначениеЗаполнено(СтрокаИсполнитель.Исполнитель) Тогда 
				
				Если ЗначениеЗаполнено(СтрокаИсполнитель.ФактическийИсполнитель) Тогда 
					ФИОДолжность = 
						СтрШаблон("%1 (%2)", 
						ФИОДолжность, 
						СтрокаИсполнитель.РольИсполнителя);
#Вставка 					
					РезультатВыполнения = СтрокаИсполнитель.РезультатВыполнения;
					ФИОДолжность = СтрокаИсполнитель.ФактическийИсполнитель;
					
					Если СтрНайти(ФИОДолжность, "Отметил(а):") > 0 Тогда
						ФИОДолжность = СтрокаИсполнитель.ФактическийИсполнитель.Факт;	 
					КонецЕсли;
					
					Если СтрокаИсполнитель.ФактическийИсполнитель.Факт.Должность.Наименование = СтрокаИсполнитель.ФактическийИсполнитель.Факт.Подразделение.Наименование Тогда
						ПодстрокаПоиска = СтрШаблон(", %1", СтрокаИсполнитель.ФактическийИсполнитель.Факт.Должность.Наименование); 
						ФИОДолжность = СтрЗаменить(ФИОДолжность, ПодстрокаПоиска, ", Руководство");	 
					КонецЕсли;
									
#КонецВставки
				Иначе
					ФИОДолжность = СтрокаИсполнитель.РольИсполнителя;
				КонецЕсли;
				
			Иначе
				
				Если Не ЗначениеЗаполнено(СтрокаИсполнитель.ФактическийИсполнитель) Тогда
					ФИОДолжность = СтрокаИсполнитель.Исполнитель;
#Вставка 
					РезультатВыполнения = СтрокаИсполнитель.РезультатВыполнения;
					Если СтрНайти(ФИОДолжность, "Отметил(а):") > 0 Тогда
						ФИОДолжностьФИОДолжность = СтрокаИсполнитель.Исполнитель;	 
					КонецЕсли; 
					
					Если СтрокаИсполнитель.Исполнитель.Должность.Наименование = СтрокаИсполнитель.Исполнитель.Подразделение.Наименование Тогда
						ПодстрокаПоиска = СтрШаблон(", %1", СтрокаИсполнитель.Исполнитель.Должность.Наименование); 
						ФИОДолжность = СтрЗаменить(СтрокаИсполнитель.Исполнитель, ПодстрокаПоиска, ", Руководство");	 
					КонецЕсли;
#КонецВставки
				КонецЕсли;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаИсполнитель.РезультатСогласования) И ЗначениеЗаполнено(ТекстПодписи) Тогда
				
				HTMLТекст = HTMLТекст + "<tr>";
				HTMLТекст = HTMLТекст + "<td width=""30%"" Rowspan = ""3"" align=left bordercolor = ""black"" >";
				ФИОДолжность = СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(ФИОДолжность), Символы.ПС, "<br>");
				ДобавитьРеквизит(HTMLТекст, ФИОДолжность, "");
				HTMLТекст = HTMLТекст + "</td>";
				
				ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаИсполнитель.РезультатСогласования, "20%");
				ДобавитьЯчейкуТаблицы(HTMLТекст, Формат(СтрокаИсполнитель.ДатаИсполнения, "ДФ='dd.MM.yyyy ЧЧ:мм'"), "20%", "left");
				
				HTMLТекст = HTMLТекст + "<td width=""30%"" Rowspan = ""3"" align=left bordercolor = ""black"" >";
				РезультатВыполнения = СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(РезультатВыполнения), Символы.ПС, "<br>");
				
				HTMLТекст = HTMLТекст + СтрШаблон(
					"<A color=""black"" href=v8doc:%1><FONT color=""black"">%2</FONT></A>",
					СтрШаблон("v8doc:MXLDetails/ShowApprovedFileVersions/%1",
						ПолучитьНавигационнуюСсылку(СтрокаИсполнитель.ВизаСогласования)),
					РезультатВыполнения);
				HTMLТекст = HTMLТекст + "<br>";
				HTMLТекст = HTMLТекст + "</td>";
				
				HTMLТекст = HTMLТекст + "</tr>";
				
				// Строка с подписью
				HTMLТекст = HTMLТекст + "<tr>";
				HTMLТекст = HTMLТекст + "<td style =""border-bottom:0px"" colspan=""2"" align=left bordercolor = ""black"" >";
				Если ПодписыватьУЭП Тогда
											
					HTMLТекст = HTMLТекст + СтрШаблон(
						"<A href=v8doc:%1>%2</A>",
						ПолучитьНавигационнуюСсылку(СтрокаИсполнитель.ВизаСогласования),
						РаботаС_HTML.ЗаменитьСпецСимволыHTML(ТекстПодписи));
				
				Иначе
					ДобавитьПодписьСЦветом(HTMLТекст, ТекстПодписи, "#006699");
				КонецЕсли;
				
				HTMLТекст = HTMLТекст + "</td>";
				HTMLТекст = HTMLТекст + "</tr>";
				
				HTMLТекст = HTMLТекст + "<tr>";
				HTMLТекст = HTMLТекст + "<td style =""border-top:0px"" colspan=""2"" align=left bordercolor = ""black"" >";
				
				Если ВерсииИзменились Тогда
					
					ДобавитьПодписьСЦветом(HTMLТекст, РаботаСВизамиСогласования.ТекстЗамечанияОбИзмененииВерсии(), 
						"#FF0000");
					
				Иначе
					
					HTMLТекст = HTMLТекст + "<br/>";
					
				КонецЕсли;
				
				HTMLТекст = HTMLТекст + "</td>";
				HTMLТекст = HTMLТекст + "</tr>";
				
			Иначе
					
				HTMLТекст = HTMLТекст + "<tr>";
				
				ДобавитьЯчейкуТаблицы(HTMLТекст, ФИОДолжность, "30%", "left");
				ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаИсполнитель.РезультатСогласования, "20%");
				ДобавитьЯчейкуТаблицы(HTMLТекст, 
					Формат(СтрокаИсполнитель.ДатаИсполнения, "ДФ='dd.MM.yyyy ЧЧ:мм'"), "20%", "left");
				ДобавитьЯчейкуТаблицы(HTMLТекст, РезультатВыполнения, "30%", "left");
								
				HTMLТекст = HTMLТекст + "</tr>";
				
			КонецЕсли;
		КонецЦикла;
		
		HTMLТекст = HTMLТекст + "</table>";
		HTMLТекст = HTMLТекст + "</tr>";
		
		// Выведем протокол разногласий, если есть разногласия
		Если Разногласия.Количество() > 0 Тогда
			HTMLТекст = HTMLТекст + "<p>";
			HTMLТекст = HTMLТекст + "<p>";

			HTMLТекст = HTMLТекст + "<tr>";
			HTMLТекст = HTMLТекст + "<table border=""0"" bordercolor = ""white"" style=""border-collapse: collapse;"" >";
			
			HTMLТекст = HTMLТекст + "<tr>";
		    HTMLТекст = HTMLТекст + "<td align=center colspan=""6"">";
			
			HTMLТекст = HTMLТекст + СтрШаблон(
				"<B>%1</B>",
				НСтр("ru = 'Протокол разногласий'"));
			
			HTMLТекст = HTMLТекст + "<p>";
			HTMLТекст = HTMLТекст + "</td>";
			HTMLТекст = HTMLТекст + "</tr>";
			HTMLТекст = HTMLТекст + "</table>";
			HTMLТекст = HTMLТекст + "</tr>";
			
			HTMLТекст = HTMLТекст + "<tr>";
			HTMLТекст = HTMLТекст + "<table border=""1"" bordercolor = ""black"" style=""border-collapse: collapse;"" >";
			
			HTMLТекст = HTMLТекст + "<tr>";

			ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = '№'"), "5%",, "black");
			ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Автор'"), "25%",, "black");
			ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Замечание'"), "20%",, "black");
			ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Комментарий инициатора'"), "20%",, "black");
			ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Принятая редакция'"), "20%",, "black");
			ДобавитьЯчейкуТаблицы(HTMLТекст, НСтр("ru = 'Дата'"), "10%",, "black");
			
			HTMLТекст = HTMLТекст + "</tr>";
			
			Номер = 1;
			
			ИДУчастникаИРолиСоответствие = Новый Соответствие;
			Для Каждого СтрокаИсполнитель Из ВсеВизыСогласования Цикл  
				ИДУчастникаИРолиСоответствие[СтрокаИсполнитель.ИдентификаторУчастника]= СтрокаИсполнитель.РольИсполнителя;
			КонецЦикла;
			
			Для Каждого СтрокаРазногласия Из Разногласия Цикл
				HTMLТекст = HTMLТекст + "<tr>";
				
				ДобавитьЯчейкуТаблицы(HTMLТекст, Номер, "5%");
				
				РольИсполнителя = ИДУчастникаИРолиСоответствие[СтрокаРазногласия.ИдентификаторАвтора];
				Если ЗначениеЗаполнено(РольИсполнителя) Тогда
					АвторСРольюПредставление = СтрШаблон("%1 (%2)",
						СтрокаИсполнитель.Автор,
						РольИсполнителя);
					ДобавитьЯчейкуТаблицы(HTMLТекст, АвторСРольюПредставление, "25%", "Left");
				Иначе
					ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаРазногласия.Автор, "25%", "Left");
				КонецЕсли;
				
				ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаРазногласия.Замечание, "20%", "Left");
				ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаРазногласия.Комментарий, "20%", "Left");
				ДобавитьЯчейкуТаблицы(HTMLТекст, СтрокаРазногласия.ПринятаяРедакция, "20%", "Left");
				ДобавитьЯчейкуТаблицы(HTMLТекст, Формат(СтрокаРазногласия.Дата, "ДФ=dd.MM.yyyy;"), "10%");
				
				HTMLТекст = HTMLТекст + "</tr>";
				
				Номер = Номер + 1;
			КонецЦикла;

			HTMLТекст = HTMLТекст + "</table>";
			HTMLТекст = HTMLТекст + "</tr>";
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&ИзменениеИКонтроль("ТекстЗапросаДляПечатиКарточекДокументов")
Функция ЦППК_ТекстЗапросаДляПечатиКарточекДокументов()

	Возврат "ВЫБРАТЬ
	|	Документы.Ссылка КАК Ссылка,
	|	// Параметры вида документа
	|	ЕСТЬNULL(ВидыДокументов.ЯвляетсяВходящейКорреспонденцией, ЛОЖЬ) КАК ЭтоВходящийДокумент,
	|	ЕСТЬNULL(ВидыДокументов.ЯвляетсяИсходящейКорреспонденцией, ЛОЖЬ) КАК ЭтоИсходящийДокумент,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетСторон, ЛОЖЬ) КАК ВестиУчетСторон,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетПоКонтрагентам, ЛОЖЬ) КАК ВестиУчетПоКонтрагентам,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетПоНоменклатуреДел, ЛОЖЬ) КАК ВестиУчетПоНоменклатуреДел,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетПоОрганизациям, ЛОЖЬ) КАК ВестиУчетПоОрганизациям,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетПоТематикам, ЛОЖЬ) КАК ВестиУчетПоТематикам,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетТоваровИУслуг, ЛОЖЬ) КАК ВестиУчетТоваровИУслуг,
	|	ЕСТЬNULL(ВидыДокументов.ВестиУчетПоСтатьямДДС, ЛОЖЬ) КАК ВестиУчетПоСтатьямДДС,
	|	ЕСТЬNULL(ВидыДокументов.ИспользоватьВременныеНомера, ЛОЖЬ) КАК ИспользоватьВременныеНомера,
	|	ЕСТЬNULL(ВидыДокументов.ИспользоватьСрокИсполнения, ЛОЖЬ) КАК ИспользоватьСрокИсполнения,
	|	ЕСТЬNULL(ВидыДокументов.КонтролироватьНаличиеОригинала, ЛОЖЬ) КАК КонтролироватьНаличиеОригинала,
	|	ЕСТЬNULL(ВидыДокументов.СрокИсполненияУказанВРабочихДнях, ЛОЖЬ) КАК СрокИсполненияУказанВРабочихДнях,
	|	ЕСТЬNULL(ВидыДокументов.УчитыватьНедействующиеДокументы, ЛОЖЬ) КАК УчитыватьНедействующиеДокументы,
#Вставка
    |	ЕСТЬNULL(ВидыДокументов.ЦППК_УчитыватьВноситИзменения, ЛОЖЬ) КАК ЦППК_УчитыватьВноситИзменения,    
#КонецВставки	
	|	ЕСТЬNULL(ВидыДокументов.УчитыватьСрокДействия, ЛОЖЬ) КАК УчитыватьСрокДействия,
	|	ЕСТЬNULL(ВидыДокументов.УчитыватьСуммуДокумента, ЛОЖЬ) КАК УчитыватьСуммуДокумента,
	|	ЕСТЬNULL(ВидыДокументов.УчитыватьМестоХранения, ЛОЖЬ) КАК УчитыватьМестоХранения,
	|	ЕСТЬNULL(ВидыДокументов.УчитыватьОтветственногоЗаХранение, ЛОЖЬ) КАК УчитыватьОтветственногоЗаХранение,
	|	ЕСТЬNULL(ВидыДокументов.ЯвляетсяЗаявкойНаОплату, ЛОЖЬ) КАК ЯвляетсяЗаявкойНаОплату,
	|	// Реквизиты документа
	|	ВЫБОР
	|		КОГДА Документы.ДатаРегистрации = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Документы.ДатаСоздания
	|		ИНАЧЕ Документы.ДатаРегистрации
	|	КОНЕЦ КАК ДатаУчетаДокумента,
	|	Документы.ДатаСоздания КАК ДатаСоздания,
	|	Документы.Организация КАК Организация,
	|	Документы.Контрагент КАК Контрагент,
	|	Документы.Контрагенты.(
	|		Контрагент КАК Контрагент,
	|		КонтактноеЛицо КАК КонтактноеЛицо,
	|		ПодписалОтКонтрагента КАК ПодписалОтКонтрагента
	|	) КАК Контрагенты,
	|	Документы.Стороны КАК Стороны,
	|	Документы.ВидДокумента КАК ВидДокумента,
	|	Документы.Тематика КАК Тематика,
	|	Документы.Адресат КАК Адресат,
	|	Документы.Подразделение КАК Подразделение,
	|	Документы.ДатаРегистрации КАК ДатаРегистрации,
	|	Документы.РегистрационныйНомер КАК РегистрационныйНомер,
	|	Документы.ВременныйНомер КАК ВременныйНомер,
	|	Документы.Заголовок КАК Заголовок,
	|	Документы.Содержание КАК Содержание,
	|	Документы.СрокИсполнения КАК СрокИсполнения,
	|	Документы.Сумма КАК Сумма,
	|	Валюты.Наименование КАК ВалютаНаименование,
	|	Документы.Подготовил КАК Подготовил,
	|	Документы.Подписал КАК Подписал,
	|	Документы.ПодписалОтКонтрагента КАК ПодписалОтКонтрагента,
	|	Документы.НоменклатураДел КАК НоменклатураДел,
	|	Документы.Дело КАК Дело,
	|	Документы.Ответственный КАК Ответственный,
	|	Документы.ОтветственныйЗаХранение КАК ОтветственныйЗаХранение,
	|	Документы.МестоХранения КАК МестоХранения,
	|	Документы.ФормаДокумента КАК ФормаДокумента,
	|	Документы.Проект КАК Проект,
	|	Документы.ГрифДоступа КАК ГрифДоступа,
	|	Документы.ВопросДеятельности КАК ВопросДеятельности,
	|	Документы.Комментарий КАК Комментарий,
	|	Документы.НеДействует КАК НеДействует,
	|	Документы.Папка КАК Папка,
	|	//Корреспонденция
	|	ЕСТЬNULL(Корреспонденция.НомерКонтрагента, """") КАК НомерКонтрагента,
	|	ЕСТЬNULL(Корреспонденция.ДатаКонтрагента, ДАТАВРЕМЯ(1,1,1)) КАК ДатаКонтрагента,	
	|	Корреспонденция.Корреспонденты.(
	|		Корреспондент КАК Корреспондент,
	|		Адресат КАК Адресат
	|	) КАК Корреспонденты
	|ИЗ
	|	Справочник.ДокументыПредприятия КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыДокументов КАК ВидыДокументов
	|			ПО ВидыДокументов.Ссылка = Документы.ВидДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Корреспонденция КАК Корреспонденция
	|			ПО Корреспонденция.Основание = Документы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК Валюты
	|			ПО Валюты.Ссылка = Документы.Валюта
	|ГДЕ
	|	Документы.Ссылка В (&Ссылки)
	|ИТОГИ
	|ПО
	|	Ссылка";

КонецФункции

&ИзменениеИКонтроль("ВывестиОбзорДокументаСКонтрагентом")
Процедура ЦППК_ВывестиОбзорДокументаСКонтрагентом(ТабличныйДокумент, Макет, РеквизитыДокумента, СведенияОПолученииОригинала, СтатьиДДС)

	ОбластьГоризонтальныйРазделитель = Макет.ПолучитьОбласть("ГоризонтальныйРазделитель");
	ОбластьРеквизитШапки = Макет.ПолучитьОбласть("ШапкаДокументаРеквизит");
	ОбластьРеквизитШапкиПЖ = Макет.ПолучитьОбласть("ШапкаДокументаРеквизитПолужирным");
	ОбластьРеквизит = Макет.ПолучитьОбласть("Реквизит");
	ОбластьРеквизитПЖ = Макет.ПолучитьОбласть("РеквизитПолужирным");
	ОбластьРеквизиты60На40 = Макет.ПолучитьОбласть("Реквизиты60На40");

	ДатаНачалаОтсчета = РеквизитыДокумента.ДатаУчетаДокумента;

	// Вид или Вид-тематика документа + номер, дата.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ВидДокумента) Тогда
		ВидТематикаДокументаПредставление = ВидТематикаДокументаПредставление(
		РеквизитыДокумента.ВидДокумента,
		РеквизитыДокумента.ВестиУчетПоТематикам,
		РеквизитыДокумента.Тематика);
		Если ЗначениеЗаполнено(ВидТематикаДокументаПредставление) Тогда
			ТекстНомер = ?(ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер),
			РеквизитыДокумента.РегистрационныйНомер, 
			?(РеквизитыДокумента.ИспользоватьВременныеНомера И ЗначениеЗаполнено(РеквизитыДокумента.ВременныйНомер),
			РеквизитыДокумента.ВременныйНомер, "_____"));
			ТекстДатаРегистрации = ?(ЗначениеЗаполнено(РеквизитыДокумента.ДатаРегистрации),
			" от " + Формат(РеквизитыДокумента.ДатаРегистрации, "ДЛФ=D"), "");
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитШапки, "", 
			СтрШаблон("%1 №%2%3",
			ВРег(ВидТематикаДокументаПредставление),
			ТекстНомер,
			ТекстДатаРегистрации));
		КонецЕсли;
	КонецЕсли;

	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);
	ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитШапкиПЖ, "", РеквизитыДокумента.Заголовок);

	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);

	// Содержание.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Содержание) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", РеквизитыДокумента.Содержание);
	КонецЕсли;

	// Связи.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСвязиОбъектов") Тогда

		КраткиеСведенияОСвязях = СвязиОбъектов.КраткиеСведенияОСвязях(РеквизитыДокумента.Ссылка);

		Если Не ЗначениеЗаполнено(КраткиеСведенияОСвязях) Тогда	
			КраткиеСведенияОСвязях = НСтр("ru = 'Связи: не заданы'");
		КонецЕсли;
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитПЖ, "", КраткиеСведенияОСвязях);
	КонецЕсли;

	// Срок исполнения.
	ВывестиНадписьОСроке(ТабличныйДокумент, РеквизитыДокумента, ДатаНачалаОтсчета, 
	ОбластьРеквизит, НСтр("ru = 'Срок исполнения:'"));

	// Сумма и статьи ДДС.
	Если РеквизитыДокумента.УчитыватьСуммуДокумента Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
		НСтр("ru = 'Сумма:'"),
		Формат(РеквизитыДокумента.Сумма, "ЧДЦ=2; ЧН=0") + " " + РеквизитыДокумента.ВалютаНаименование);
		Если РеквизитыДокумента.ВестиУчетТоваровИУслуг И РеквизитыДокумента.Товары.Количество() > 0 Тогда
			КоличествоПозиций = РеквизитыДокумента.Товары.Количество();
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Товары и услуги:'"),
			Формат(КоличествоПозиций, "ЧГ=") + " "
			+ ПользователиСлужебныйКлиентСервер.ПредметЦелогоЧисла(КоличествоПозиций,
			"Л = ru_RU", НСтр("ru = 'позиция,позиции,позиций,,,,,,0'")));
		КонецЕсли;
		Если РеквизитыДокумента.ВестиУчетПоСтатьямДДС Тогда
			КоличествоСтатей = СтатьиДДС.Количество();
			Если КоличествоСтатей = 1 Тогда
				ЗаголовокРеквизита = НСтр("ru = 'Статья ДДС:'");
			Иначе
				ЗаголовокРеквизита = НСтр("ru = 'Статьи ДДС:'");
			КонецЕсли;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, ЗаголовокРеквизита, СтрСоединить(СтатьиДДС, "; "));
		КонецЕсли;
	КонецЕсли;

	// Срок действия.
	Если РеквизитыДокумента.УчитыватьСрокДействия Тогда
		ИсторияСрока = РегистрыСведений.ИсторияСроковДействияДокументов.ИсторияСрокаДействия(РеквизитыДокумента.Ссылка);
		СрокДействияКомментарий = ИсторияСрока.Комментарий;
		СрокДействияСтрока = ДелопроизводствоКлиентСервер.СформироватьПредставлениеСрокаДействия(
		РеквизитыДокумента.Ссылка, СрокДействияКомментарий);
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Срок действия:'"),
		?(ЗначениеЗаполнено(СрокДействияСтрока), СрокДействияСтрока, НСтр("ru = 'не указан'")));
	КонецЕсли;

	// Не действует.
	Если РеквизитыДокумента.УчитыватьНедействующиеДокументы Тогда
		Если РеквизитыДокумента.НеДействует Тогда
			НеДействуетВСоответствии = СвязиОбъектов.ПолучитьСвязанныйОбъект(
			РеквизитыДокумента.Ссылка, Справочники.ТипыСвязей.НеДействуетВСоответствии);
			Если ЗначениеЗаполнено(НеДействуетВСоответствии) Тогда 
				Ответ = СтрШаблон(НСтр("ru = 'В соответствии с ""%1""'"), НеДействуетВСоответствии);
			Иначе 
				Ответ = НСтр("ru = 'Да'");
			КонецЕсли;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Не действует:'"), Ответ);
		КонецЕсли;
	КонецЕсли;
	
#Вставка
	// Изменен.
	Если РеквизитыДокумента.ЦППК_УчитыватьВноситИзменения Тогда
		Если РеквизитыДокумента.ЦППК_Изменен Тогда
			ИзмененВСоответствии = СвязиОбъектов.ПолучитьСвязанныйОбъект(
			РеквизитыДокумента.Ссылка, Справочники.ТипыСвязей.ЦППК_ИзмененДокументом);
			Если ЗначениеЗаполнено(НеДействуетВСоответствии) Тогда 
				Ответ = СтрШаблон(НСтр("ru = 'В соответствии с ""%1""'"), ИзмененВСоответствии);
			Иначе 
				Ответ = НСтр("ru = 'Да'");
			КонецЕсли;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Изменен:'"), Ответ);
		КонецЕсли;
	КонецЕсли;
#КонецВставки
	

	// Готовится к отмене.
	Если Делопроизводство.ЭтотВидДокументаМожноОтменить(РеквизитыДокумента.ВидДокумента) Тогда
		ГотовитсяКОтменеДокументы =
		РегистрыСведений.ОтменяемыеДокументы.ПрочитатьНовыеДокументы(РеквизитыДокумента.Ссылка);
		Если ГотовитсяКОтменеДокументы.Количество() <> 0 Тогда
			МассивДокументы = Новый Массив;
			Для Каждого Строка Из ГотовитсяКОтменеДокументы Цикл
				МассивДокументы.Добавить(Строка.Документ);
			КонецЦикла;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Готовится к отмене документом:'"), СтрСоединить(МассивДокументы, Символы.НПП));
		КонецЕсли;
	КонецЕсли;

	РеквизитыСлева = Новый Массив;
	РеквизитыСправа = Новый Массив;
	// Контрагенты документа.
	Если РеквизитыДокумента.ВестиУчетПоКонтрагентам 
		И (ЗначениеЗаполнено(РеквизитыДокумента.Контрагент) 
		Или РеквизитыДокумента.Контрагенты.Количество()
		Или РеквизитыДокумента.ЯвляетсяЗаявкойНаОплату) Тогда

		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям")
			И Не РеквизитыДокумента.ВестиУчетПоОрганизациям Тогда
			РеквизитыСлева.Добавить(РедакцииКонфигурацииКлиентСервер.ИмяОрганизацииУчетСторон());
		Иначе
			РеквизитыСлева.Добавить(РедакцииКонфигурацииКлиентСервер.ИмяОрганизации());
			РеквизитыСлева.Добавить(
			Юрлица.ПредставлениеЮрлицаНаДату(РеквизитыДокумента.Организация, ДатаНачалаОтсчета));
		КонецЕсли;

		КоличествоКонтрагентов = РеквизитыДокумента.Контрагенты.Количество();
		Если КоличествоКонтрагентов = 1 Тогда
			РеквизитыСправа.Добавить(НСтр("ru = 'Контрагент:'"));
			ЧастиКонтрагента = Новый Массив;
			Если ЗначениеЗаполнено(РеквизитыДокумента.Контрагент) Тогда
				КонтрагентПредставление = 
				Справочники.Контрагенты.ПредставлениеКонтрагентаНаДату(
				РеквизитыДокумента.Контрагент, ДатаНачалаОтсчета);
				ЧастиКонтрагента.Добавить(КонтрагентПредставление);
			КонецЕсли;

			Если ЗначениеЗаполнено(РеквизитыДокумента.ПодписалОтКонтрагента) Тогда
				ЧастиКонтрагента.Добавить(НСтр("ru = 'Подписал:'") + " " + 
				РеквизитыДокумента.ПодписалОтКонтрагента);
			КонецЕсли;
			Если ЗначениеЗаполнено(РеквизитыДокумента.КонтактноеЛицо) Тогда
				ЧастиКонтрагента.Добавить(НСтр("ru = 'Контакт:'") + " " +
				ПредставлениеКонтактногоЛицаСКонтактами(РеквизитыДокумента.КонтактноеЛицо));
			КонецЕсли;
			РеквизитыСправа.Добавить(СтрСоединить(ЧастиКонтрагента, Символы.ПС));
		Иначе
			РеквизитыСправа.Добавить(НСтр("ru = 'Контрагенты:'"));
			Для Каждого СтрокаКонтрагент Из РеквизитыДокумента.Контрагенты Цикл
				ЧастиКонтрагента = Новый Массив;
				Если ЗначениеЗаполнено(СтрокаКонтрагент.Контрагент) Тогда
					КонтрагентПредставление = Справочники.Контрагенты.ПредставлениеКонтрагентаНаДату(
					СтрокаКонтрагент.Контрагент, ДатаНачалаОтсчета);
					ЧастиКонтрагента.Добавить(КонтрагентПредставление);
				КонецЕсли;

				Если ЗначениеЗаполнено(СтрокаКонтрагент.ПодписалОтКонтрагента) Тогда
					ЧастиКонтрагента.Добавить(НСтр("ru = 'Подписал:'") + " " + 
					СтрокаКонтрагент.ПодписалОтКонтрагента);
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаКонтрагент.КонтактноеЛицо) Тогда
					ЧастиКонтрагента.Добавить(НСтр("ru = 'Контакт:'") + " " +
					ПредставлениеКонтактногоЛицаСКонтактами(СтрокаКонтрагент.КонтактноеЛицо));
				КонецЕсли;
				РеквизитыСправа.Добавить(СтрСоединить(ЧастиКонтрагента, Символы.ПС));
			КонецЦикла;
		КонецЕсли;

		// Стороны документа.
	ИначеЕсли РеквизитыДокумента.ВестиУчетСторон И РеквизитыДокумента.Стороны.Количество() Тогда

		ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");

		Стороны = Новый Массив(2);
		СтрокиОрганизации = Новый Массив;
		СтрокиКонтрагенты = Новый Массив;

		Для Каждого СтрокаТаблицы Из РеквизитыДокумента.Стороны Цикл
			Если РаботаСПодписямиДокументовКлиентСервер.ЭтоОрганизация(СтрокаТаблицы.Сторона) Тогда
				СтрокиОрганизации.Добавить(СтрокаТаблицы);
			Иначе
				СтрокиКонтрагенты.Добавить(СтрокаТаблицы);
			КонецЕсли;
		КонецЦикла;

		Если СтрокиКонтрагенты.Количество() = 0 Тогда
			ИндексПоследнего = СтрокиОрганизации.ВГраница();
			Для Счетчик = 1 По ИндексПоследнего Цикл
				СтрокиКонтрагенты.Добавить(СтрокиОрганизации[Счетчик]);
			КонецЦикла;
			Для Счетчик = 0 По ИндексПоследнего - 1 Цикл
				СтрокиОрганизации.Удалить(ИндексПоследнего - Счетчик);
			КонецЦикла;
		КонецЕсли;

		Стороны[0] = СтрокиОрганизации;
		Стороны[1] = СтрокиКонтрагенты;

		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитШапки, "", НСтр("ru = 'СТОРОНЫ'"));

		ТекущиеРеквизиты = Неопределено;
		Для Каждого Сторона Из Стороны Цикл

			Если ТекущиеРеквизиты = Неопределено Тогда
				ТекущиеРеквизиты = РеквизитыСлева;
			Иначе
				ТекущиеРеквизиты = РеквизитыСправа;
			КонецЕсли;

			СтрокиОписанияТекущейСтороны = Новый Массив;

			Для Каждого ОписаниеСтороны Из Сторона Цикл			
				Если ЗначениеЗаполнено(ОписаниеСтороны.Наименование) Тогда
					СтрокиОписанияТекущейСтороны.Добавить(СокрЛП(ОписаниеСтороны.Наименование) + ":");
				КонецЕсли;

				СведенияОЮрлице = Юрлица.СведенияОЮрлицеНаДату(ОписаниеСтороны.Сторона, ДатаНачалаОтсчета);
				СтрокиОписанияТекущейСтороны.Добавить(СведенияОЮрлице.ПредставлениеПолное);

				Если ОписаниеСтороны.Подписан Тогда
					Подписант = ОписаниеСтороны.Подписал;
					Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОписаниеСтороны.Сторона, "ЮрФизЛицо") = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
						Подписант = ОписаниеСтороны.Сторона;
					КонецЕсли;

					СтрокиОписанияТекущейСтороны.Добавить(НСтр("ru = 'Подписал:'") + " " + Подписант);
				КонецЕсли;

				Если ЗначениеЗаполнено(ОписаниеСтороны.КонтактноеЛицо) Тогда
					СтрокиОписанияТекущейСтороны.Добавить(
					ПредставлениеКонтактногоЛицаСКонтактами(ОписаниеСтороны.КонтактноеЛицо));
				КонецЕсли;

			КонецЦикла;

			ТекущиеРеквизиты.Добавить(СтрСоединить(СтрокиОписанияТекущейСтороны, Символы.ПС));

		КонецЦикла;

	КонецЕсли;

	// Выводим реквизиты сторон.
	Для Индекс = 0 По Макс(РеквизитыСлева.ВГраница(), РеквизитыСправа.ВГраница()) Цикл
		ЗначениеЛевогоРеквизита = ?(Индекс > РеквизитыСлева.ВГраница(), Неопределено,
		РеквизитыСлева[Индекс]);
		ЗначениеПравогоРеквизита = ?(Индекс > РеквизитыСправа.ВГраница(), Неопределено,
		РеквизитыСправа[Индекс]);
		ПараметрыОбласти = ПараметрыОбластиРеквизитыВходящегоДокумента(
		ЗначениеЛевогоРеквизита,
		ЗначениеПравогоРеквизита);
		ОбластьРеквизиты60На40.Параметры.Заполнить(ПараметрыОбласти);
		ТабличныйДокумент.Вывести(ОбластьРеквизиты60На40);
	КонецЦикла;

	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);

	// Подготовил.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Подготовил) Тогда
		ПодготовилПредставление = НСтр("ru = 'Подготовил:'") + " " + Строка(РеквизитыДокумента.Подготовил) + 
		" (" + Формат(РеквизитыДокумента.ДатаСоздания, "ДЛФ=D") + ")";
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", ПодготовилПредставление);
		КонтактнаяИнформация = ПолучитьКонтактнуюИнформациюОбъекта(РеквизитыДокумента.Подготовил);
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", КонтактнаяИнформация.Телефон);
		КонецЕсли;
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'E-mail:'"), КонтактнаяИнформация.Емайл);
		КонецЕсли;
	КонецЕсли;

	// Подразделение.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Подразделение) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
		НСтр("ru = 'Подразделение:'"), РеквизитыДокумента.Подразделение);
	КонецЕсли;

	// Ответственный.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Ответственный) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
		НСтр("ru = 'Ответственный:'"), РеквизитыДокумента.Ответственный);
	КонецЕсли;

	// Оригинал.
	Если РеквизитыДокумента.КонтролироватьНаличиеОригинала Тогда 
		Если ЗначениеЗаполнено(СведенияОПолученииОригинала.ОригиналПолученТекст) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Оригинал:'"), СведенияОПолученииОригинала.ОригиналПолученТекст);
		КонецЕсли;
	КонецЕсли;

	// Форма документа.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
		НСтр("ru = 'Форма:'"), РеквизитыДокумента.ФормаДокумента);
	КонецЕсли;

	// Номенклатура дел, дело, место хранения дела.
	МестоХраненияДокументаИспользуется = РеквизитыХраненияИспользуются(
	РеквизитыДокумента.УчитыватьМестоХранения, РеквизитыДокумента.МестоХранения, РеквизитыДокумента.ФормаДокумента);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел") Тогда
		Если РеквизитыДокумента.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(РеквизитыДокумента.НоменклатураДел) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Номенклатура дел:'"), РеквизитыДокумента.НоменклатураДел);
		КонецЕсли;
		Если ЗначениеЗаполнено(РеквизитыДокумента.Дело) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Помещен в дело:'"), РеквизитыДокумента.Дело);
			СтруктураСостоянияДела =
			РегистрыСведений.СостоянияДелХраненияДокументов.СостояниеДела(РеквизитыДокумента.Дело);
			Если ТипЗнч(СтруктураСостоянияДела) = Тип("Структура")
				И ЗначениеЗаполнено(СтруктураСостоянияДела.Состояние) Тогда
				ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				СтруктураСостоянияДела.Состояние, СтруктураСостоянияДела.ДатаСостояния);
			КонецЕсли;
			МестоХранения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыДокумента.Дело, "МестоХраненияДел");
			Если ЗначениеЗаполнено(МестоХранения) Тогда
				МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(МестоХранения,
				ПолучитьФункциональнуюОпцию("ИспользоватьСхемыПомещений"));
				ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				?(МестоХраненияДокументаИспользуется, 
				НСтр("ru = 'Место хранения дела:'"), НСтр("ru = 'Место хранения:'")),
				МестоХраненияТекст);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	// Место хранения.
	Если РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьМестоХранения, 
		РеквизитыДокумента.МестоХранения, РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
		НСтр("ru = 'Место хранения:'"), РеквизитыДокумента.МестоХранения);
	КонецЕсли;

	// Отв. за хранение.
	Если РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьОтветственногоЗаХранение, 
		РеквизитыДокумента.ОтветственныйЗаХранение, РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Отв. за хранение:'"), РеквизитыДокумента.ОтветственныйЗаХранение);
	КонецЕсли;

	// Кому передан.
	КомуПереданДокумент = Делопроизводство.СтрокаКомуПереданДокумент(РеквизитыДокумента.Ссылка);
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Передан:'"), КомуПереданДокумент);
	КонецЕсли;

	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);

	// Временный номер.
	Если РеквизитыДокумента.ИспользоватьВременныеНомера
		И ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер) Тогда
		// Выводим врем. номер в реквизитах, если заполнен рег. номер, иначе он будет на месте рег. номера
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Врем. №:'"), РеквизитыДокумента.ВременныйНомер);
	КонецЕсли;

	// Папка.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПапкиДокументов") Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Папка:'"),  РеквизитыДокумента.Папка); 
	КонецЕсли;

	// Гриф доступа.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Гриф:'"),  РеквизитыДокумента.ГрифДоступа); 
	КонецЕсли;

	// Вопрос деятельности.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Вопрос:'"),  РеквизитыДокумента.ВопросДеятельности);
	КонецЕсли;

	// Проект.
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(РеквизитыДокумента.Проект) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Проект:'"),  РеквизитыДокумента.Проект); 
	КонецЕсли;

	// Состояние документа.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда 
		СостояниеТекст = Делопроизводство.ПолучитьСтроковоеПредставлениеСостояний(
		РеквизитыДокумента.Ссылка);
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Состояние:'"),  СостояниеТекст);
	КонецЕсли;

	// Состояние ЭДО
	ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
	Если ИспользоватьОбменЭД  Тогда
		СостояниеЭДО = ОбменЭДОДокументооборот.СостояниеДокументаДО(РеквизитыДокумента.Ссылка);
		Если ЗначениеЗаполнено(СостояниеЭДО) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Состояние ЭДО:'"),  СостояниеЭДО);
		КонецЕсли;	
	КонецЕсли;

	// Строка утверждения.
	РезультатУтверждения = Делопроизводство.ПолучитьСтрокуУтверждения(
	РеквизитыДокумента.Ссылка,
	РеквизитыДокумента.ВидДокумента,
	Новый Структура("ВариантДа, ВариантНет", НСтр("ru = 'Да'"), НСтр("ru = 'Нет'")));
	Если ЗначениеЗаполнено(РезультатУтверждения) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Утвержден:'"), РезультатУтверждения);
	КонецЕсли;

	// Строка подписи.
	РезультатПодписания = Делопроизводство.ПолучитьСтрокуПодписи(
	РеквизитыДокумента.Ссылка,
	РеквизитыДокумента.ВидДокумента,
	Новый Структура("ВариантДа, ВариантНет", НСтр("ru = 'Да'"), НСтр("ru = 'Нет'")));
	Если ЗначениеЗаполнено(РезультатПодписания) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Подписан:'"), РезультатПодписания);
	КонецЕсли;

	// Комментарий.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Комментарий) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Комментарий:'"),  РеквизитыДокумента.Комментарий);
	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("ВывестиОбзорДокументаБезКонтрагента")
Процедура ЦППК_ВывестиОбзорДокументаБезКонтрагента(ТабличныйДокумент, Макет, РеквизитыДокумента, СведенияОПолученииОригинала, СтатьиДДС)

	ОбластьГоризонтальныйРазделитель = Макет.ПолучитьОбласть("ГоризонтальныйРазделитель");
	ОбластьРеквизитШапки = Макет.ПолучитьОбласть("ШапкаДокументаРеквизит");
	ОбластьРеквизитШапкиПЖ = Макет.ПолучитьОбласть("ШапкаДокументаРеквизитПолужирным");
	ОбластьРеквизит = Макет.ПолучитьОбласть("Реквизит");
	ОбластьРеквизитПЖ = Макет.ПолучитьОбласть("РеквизитПолужирным");
	ОбластьРеквизитыЛевоПраво = Макет.ПолучитьОбласть("РеквизитыЛевоПраво");

	ДатаНачалаОтсчета = РеквизитыДокумента.ДатаУчетаДокумента;

	Если ЗначениеЗаполнено(РеквизитыДокумента.Организация)
		И (РеквизитыДокумента.ВестиУчетПоОрганизациям
		Или Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям")) Тогда
		ОрганизацияПредставление = Юрлица.ПредставлениеЮрлицаНаДату(РеквизитыДокумента.Организация, ДатаНачалаОтсчета);
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитШапки, "", ОрганизацияПредставление);
	КонецЕсли;

	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);

	// Вид или Вид-тематика документа + номер, дата.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ВидДокумента) Тогда
		ВидТематикаДокументаПредставление = ВидТематикаДокументаПредставление(
		РеквизитыДокумента.ВидДокумента,
		РеквизитыДокумента.ВестиУчетПоТематикам,
		РеквизитыДокумента.Тематика);
		Если ЗначениеЗаполнено(ВидТематикаДокументаПредставление) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитШапки, "", ВРег(ВидТематикаДокументаПредставление));
		КонецЕсли;
	КонецЕсли;

	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);

	Если ЗначениеЗаполнено(РеквизитыДокумента.ДатаРегистрации) Тогда 
		ПредставлениеДатыРегистрации = Формат(РеквизитыДокумента.ДатаРегистрации, "ДЛФ=D");
	Иначе
		ПредставлениеДатыРегистрации = "____________";
	КонецЕсли;
	Если ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер) Тогда
		ПредставлениеНомер = "№ " + РеквизитыДокумента.РегистрационныйНомер;
	Иначе
		Если РеквизитыДокумента.ИспользоватьВременныеНомера И ЗначениеЗаполнено(РеквизитыДокумента.ВременныйНомер) Тогда
			ПредставлениеНомер =  НСтр("ru = 'Врем. №'") + " " + РеквизитыДокумента.ВременныйНомер;
		Иначе
			ПредставлениеНомер = "№___________";
		КонецЕсли;
	КонецЕсли;
	ОбластьРеквизитыЛевоПраво.Параметры.РеквизитЛевый = ПредставлениеДатыРегистрации;
	ОбластьРеквизитыЛевоПраво.Параметры.РеквизитПравый = ПредставлениеНомер;
	ТабличныйДокумент.Вывести(ОбластьРеквизитыЛевоПраво);

	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);

	ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитПЖ, "", РеквизитыДокумента.Заголовок);

	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);

	// Содержание.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Содержание) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", РеквизитыДокумента.Содержание);
	КонецЕсли;

	// Связи.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСвязиОбъектов") Тогда

		КраткиеСведенияОСвязях = СвязиОбъектов.КраткиеСведенияОСвязях(РеквизитыДокумента.Ссылка);			

		Если Не ЗначениеЗаполнено(КраткиеСведенияОСвязях) Тогда	
			КраткиеСведенияОСвязях = НСтр("ru = 'Связи: не заданы'");
		КонецЕсли;
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизитПЖ, "", КраткиеСведенияОСвязях);
	КонецЕсли;

	// Срок исполнения.
	ВывестиНадписьОСроке(ТабличныйДокумент, РеквизитыДокумента, ДатаНачалаОтсчета, 
	ОбластьРеквизит, НСтр("ru = 'Срок исполнения:'"));

	// Сумма и статьи ДДС.
	Если РеквизитыДокумента.УчитыватьСуммуДокумента Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
		НСтр("ru = 'Сумма:'"),
		Формат(РеквизитыДокумента.Сумма, "ЧДЦ=2; ЧН=0") + " " + РеквизитыДокумента.ВалютаНаименование);
		Если РеквизитыДокумента.ВестиУчетТоваровИУслуг И РеквизитыДокумента.Товары.Количество() > 0 Тогда
			КоличествоПозиций = РеквизитыДокумента.Товары.Количество();
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Товары и услуги:'"),
			Формат(КоличествоПозиций, "ЧГ=") + " "
			+ ПользователиСлужебныйКлиентСервер.ПредметЦелогоЧисла(КоличествоПозиций,
			"Л = ru_RU", НСтр("ru = 'позиция,позиции,позиций,,,,,,0'")));
		КонецЕсли;
		Если РеквизитыДокумента.ВестиУчетПоСтатьямДДС Тогда
			КоличествоСтатей = СтатьиДДС.Количество();
			Если КоличествоСтатей = 1 Тогда
				ЗаголовокРеквизита = НСтр("ru = 'Статья ДДС:'");
			Иначе
				ЗаголовокРеквизита = НСтр("ru = 'Статьи ДДС:'");
			КонецЕсли;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, ЗаголовокРеквизита, СтрСоединить(СтатьиДДС, "; "));
		КонецЕсли;
	КонецЕсли;

	// Срок действия.
	Если РеквизитыДокумента.УчитыватьСрокДействия Тогда
		ИсторияСрока = РегистрыСведений.ИсторияСроковДействияДокументов.ИсторияСрокаДействия(РеквизитыДокумента.Ссылка);
		СрокДействияКомментарий = ИсторияСрока.Комментарий;
		СрокДействияСтрока = ДелопроизводствоКлиентСервер.СформироватьПредставлениеСрокаДействия(
		РеквизитыДокумента.Ссылка, СрокДействияКомментарий);
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Срок действия:'"),
		?(ЗначениеЗаполнено(СрокДействияСтрока), СрокДействияСтрока, НСтр("ru = 'не указан'")));
	КонецЕсли;

	// Не действует.
	Если РеквизитыДокумента.УчитыватьНедействующиеДокументы Тогда
		Если РеквизитыДокумента.НеДействует Тогда
			НеДействуетВСоответствии = СвязиОбъектов.ПолучитьСвязанныйОбъект(
			РеквизитыДокумента.Ссылка, Справочники.ТипыСвязей.НеДействуетВСоответствии);
			Если ЗначениеЗаполнено(НеДействуетВСоответствии) Тогда 
				Ответ = СтрШаблон(НСтр("ru = 'В соответствии с ""%1""'"), НеДействуетВСоответствии);
			Иначе 
				Ответ = НСтр("ru = 'Да'");
			КонецЕсли;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Не действует:'"), Ответ);
		КонецЕсли;
	КонецЕсли; 
	
#Вставка
	// Изменен.
	Если РеквизитыДокумента.ЦППК_УчитыватьВноситИзменения Тогда
		Если РеквизитыДокумента.ЦППК_Изменен Тогда
			ИзмененВСоответствии = СвязиОбъектов.ПолучитьСвязанныйОбъект(
			РеквизитыДокумента.Ссылка, Справочники.ТипыСвязей.ЦППК_ИзмененДокументом);
			Если ЗначениеЗаполнено(НеДействуетВСоответствии) Тогда 
				Ответ = СтрШаблон(НСтр("ru = 'В соответствии с ""%1""'"), ИзмененВСоответствии);
			Иначе 
				Ответ = НСтр("ru = 'Да'");
			КонецЕсли;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Изменен:'"), Ответ);
		КонецЕсли;
	КонецЕсли;
#КонецВставки
	

	// Готовится к отмене.
	Если Делопроизводство.ЭтотВидДокументаМожноОтменить(РеквизитыДокумента.ВидДокумента) Тогда
		ГотовитсяКОтменеДокументы =
		РегистрыСведений.ОтменяемыеДокументы.ПрочитатьНовыеДокументы(РеквизитыДокумента.Ссылка);
		Если ГотовитсяКОтменеДокументы.Количество() <> 0 Тогда
			МассивДокументы = Новый Массив;
			Для Каждого Строка Из ГотовитсяКОтменеДокументы Цикл
				МассивДокументы.Добавить(Строка.Документ);
			КонецЦикла;
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Готовится к отмене документом:'"), СтрСоединить(МассивДокументы, Символы.НПП));
		КонецЕсли;
	КонецЕсли; 
	
	

	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);

	// Подготовил.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Подготовил) Тогда
		ПодготовилПредставление = НСтр("ru = 'Подготовил:'") + " " + Строка(РеквизитыДокумента.Подготовил) + 
		" (" + Формат(РеквизитыДокумента.ДатаСоздания, "ДЛФ=D") + ")";
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", ПодготовилПредставление);
		КонтактнаяИнформация = ПолучитьКонтактнуюИнформациюОбъекта(РеквизитыДокумента.Подготовил);
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, "", КонтактнаяИнформация.Телефон);
		КонецЕсли;
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'E-mail:'"), КонтактнаяИнформация.Емайл);
		КонецЕсли;
	КонецЕсли;

	// Подразделение.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Подразделение) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
		НСтр("ru = 'Подразделение:'"), РеквизитыДокумента.Подразделение);
	КонецЕсли;

	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);

	// Ответственный.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Ответственный) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
		НСтр("ru = 'Ответственный:'"), РеквизитыДокумента.Ответственный);
	КонецЕсли;

	// Оригинал.
	Если РеквизитыДокумента.КонтролироватьНаличиеОригинала Тогда 
		Если ЗначениеЗаполнено(СведенияОПолученииОригинала.ОригиналПолученТекст) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Оригинал:'"), СведенияОПолученииОригинала.ОригиналПолученТекст);
		КонецЕсли;
	КонецЕсли;

	// Форма документа.
	Если ЗначениеЗаполнено(РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
		НСтр("ru = 'Форма:'"), РеквизитыДокумента.ФормаДокумента);
	КонецЕсли;

	// Номенклатура дел, дело, место хранения дела.
	МестоХраненияДокументаИспользуется = РеквизитыХраненияИспользуются(
	РеквизитыДокумента.УчитыватьМестоХранения, РеквизитыДокумента.МестоХранения, РеквизитыДокумента.ФормаДокумента);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел") Тогда
		Если РеквизитыДокумента.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(РеквизитыДокумента.НоменклатураДел) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Номенклатура дел:'"), РеквизитыДокумента.НоменклатураДел);
		КонецЕсли;
		Если ЗначениеЗаполнено(РеквизитыДокумента.Дело) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
			НСтр("ru = 'Помещен в дело:'"), РеквизитыДокумента.Дело);
			СтруктураСостоянияДела =
			РегистрыСведений.СостоянияДелХраненияДокументов.СостояниеДела(РеквизитыДокумента.Дело);
			Если ТипЗнч(СтруктураСостоянияДела) = Тип("Структура")
				И ЗначениеЗаполнено(СтруктураСостоянияДела.Состояние) Тогда
				ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				Строка(СтруктураСостоянияДела.Состояние), СтруктураСостоянияДела.ДатаСостояния);
			КонецЕсли;
			МестоХранения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыДокумента.Дело, "МестоХраненияДел");
			Если ЗначениеЗаполнено(МестоХранения) Тогда
				МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(МестоХранения,
				ПолучитьФункциональнуюОпцию("ИспользоватьСхемыПомещений"));
				ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
				?(МестоХраненияДокументаИспользуется, 
				НСтр("ru = 'Место хранения дела:'"), НСтр("ru = 'Место хранения:'")),
				МестоХраненияТекст);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	// Место хранения.
	Если РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьМестоХранения, 
		РеквизитыДокумента.МестоХранения, РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит,
		НСтр("ru = 'Место хранения:'"), РеквизитыДокумента.МестоХранения);
	КонецЕсли;

	// Отв. за хранение.
	Если РеквизитыХраненияИспользуются(
		РеквизитыДокумента.УчитыватьОтветственногоЗаХранение, 
		РеквизитыДокумента.ОтветственныйЗаХранение, РеквизитыДокумента.ФормаДокумента) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Отв. за хранение:'"), РеквизитыДокумента.ОтветственныйЗаХранение);
	КонецЕсли;

	// Кому передан.
	КомуПереданДокумент = Делопроизводство.СтрокаКомуПереданДокумент(РеквизитыДокумента.Ссылка);
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Передан:'"), КомуПереданДокумент);
	КонецЕсли;

	ТабличныйДокумент.Вывести(ОбластьГоризонтальныйРазделитель);

	// Временный номер.
	Если РеквизитыДокумента.ИспользоватьВременныеНомера
		И ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер) Тогда
		// Выводим врем. номер в реквизитах, если заполнен рег. номер, иначе он будет на месте рег. номера
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Врем. №:'"), РеквизитыДокумента.ВременныйНомер);
	КонецЕсли;

	// Папка.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПапкиДокументов") Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Папка:'"),  РеквизитыДокумента.Папка); 
	КонецЕсли;

	// Гриф доступа.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Гриф:'"),  РеквизитыДокумента.ГрифДоступа); 
	КонецЕсли;

	// Вопрос деятельности.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Вопрос:'"),  РеквизитыДокумента.ВопросДеятельности);
	КонецЕсли;

	// Проект.
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(РеквизитыДокумента.Проект) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Проект:'"),  РеквизитыДокумента.Проект); 
	КонецЕсли;

	// Состояние документа.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда 
		СостояниеТекст = Делопроизводство.ПолучитьСтроковоеПредставлениеСостояний(
		РеквизитыДокумента.Ссылка);
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Состояние:'"),  СостояниеТекст);
	КонецЕсли;

	// Состояние ЭДО
	ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
	Если ИспользоватьОбменЭД  Тогда
		СостояниеЭДО = ОбменЭДОДокументооборот.СостояниеДокументаДО(РеквизитыДокумента.Ссылка);
		Если ЗначениеЗаполнено(СостояниеЭДО) Тогда
			ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
			НСтр("ru = 'Состояние ЭДО:'"),  СостояниеЭДО);
		КонецЕсли;	
	КонецЕсли;

	// Строка утверждения.
	РезультатУтверждения = Делопроизводство.ПолучитьСтрокуУтверждения(
	РеквизитыДокумента.Ссылка,
	РеквизитыДокумента.ВидДокумента,
	Новый Структура("ВариантДа, ВариантНет", НСтр("ru = 'Да'"), НСтр("ru = 'Нет'")));
	Если ЗначениеЗаполнено(РезультатУтверждения) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Утвержден:'"), РезультатУтверждения);
	КонецЕсли;

	// Строка подписи.
	РезультатПодписания = Делопроизводство.ПолучитьСтрокуПодписи(
	РеквизитыДокумента.Ссылка,
	РеквизитыДокумента.ВидДокумента,
	Новый Структура("ВариантДа, ВариантНет", НСтр("ru = 'Да'"), НСтр("ru = 'Нет'")));
	Если ЗначениеЗаполнено(РезультатПодписания) Тогда
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, НСтр("ru = 'Подписан:'"), РезультатПодписания);
	КонецЕсли;

	// Комментарий.
	Если ЗначениеЗаполнено(РеквизитыДокумента.Комментарий) Тогда 
		ВывестиРеквизит(ТабличныйДокумент, ОбластьРеквизит, 
		НСтр("ru = 'Комментарий:'"),  РеквизитыДокумента.Комментарий);
	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("ПолучитьОбзорДокументаБезКонтрагента")
Функция ЦППК_ПолучитьОбзорДокументаБезКонтрагента(Форма)

	Объект = Форма.Объект;
	Организация = Объект.Организация;
	Шаблон = ОбщегоНазначенияДокументооборот.ЗначениеРеквизитаОбъектаВПривилегированномРежиме(Объект.Ссылка,
	"Шаблон");
	ДатаНачалаОтсчета = Делопроизводство.ДатаУчетаДокумента(Объект);


	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда 
		КэшДокументыПредприятияФормаЭлемента =
		КэшиНаВремяВызоваПовтИсп.КэшДокументыПредприятияФормаЭлемента();
		Если КэшДокументыПредприятияФормаЭлемента.Инициализирован
			И КэшДокументыПредприятияФормаЭлемента.КэшДокумента.ВидДокумента = Объект.ВидДокумента Тогда
			РеквизитыВида = КэшДокументыПредприятияФормаЭлемента.КэшВидаДокумента;
		Иначе
			РеквизитыВида = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидДокумента,
			"УчитыватьСуммуДокумента, ИспользоватьСрокИсполнения, ВестиУчетПоНоменклатуреДел, УчитыватьСрокДействия,
#Вставка
            |ЦППК_УчитыватьВноситИзменения,
#КонецВставки
			|УчитыватьНедействующиеДокументы, ВестиУчетТоваровИУслуг, ВестиУчетПоСтатьямДДС, ВестиУчетПоОрганизациям,
			|ВестиУчетСторон,
			|УчитыватьМестоХранения, УчитыватьОтветственногоЗаХранение, КонтролироватьНаличиеОригинала, 
			|ВестиУчетПоТематикам, СрокИсполненияУказанВРабочихДнях, ИспользоватьВременныеНомера");
		КонецЕсли;
	Иначе 
		РеквизитыВида = Новый Структура;
		РеквизитыВида.Вставить("УчитыватьСуммуДокумента", Ложь);
		РеквизитыВида.Вставить("ВестиУчетТоваровИУслуг", Ложь);
		РеквизитыВида.Вставить("ИспользоватьСрокИсполнения", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоНоменклатуреДел", Ложь);
		РеквизитыВида.Вставить("УчитыватьСрокДействия", Ложь);
		РеквизитыВида.Вставить("УчитыватьНедействующиеДокументы", Ложь);
#Вставка
        РеквизитыВида.Вставить("ЦППК_УчитыватьВноситИзменения", Ложь);
#КонецВставки
		РеквизитыВида.Вставить("ВестиУчетПоСтатьямДДС", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоОрганизациям", Ложь);
		РеквизитыВида.Вставить("ВестиУчетСторон", Ложь);
		РеквизитыВида.Вставить("УчитыватьМестоХранения", Ложь);
		РеквизитыВида.Вставить("УчитыватьОтветственногоЗаХранение", Ложь);
		РеквизитыВида.Вставить("КонтролироватьНаличиеОригинала", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоТематикам", Ложь);
		РеквизитыВида.Вставить("СрокИсполненияУказанВРабочихДнях", Ложь);
		РеквизитыВида.Вставить("ИспользоватьВременныеНомера", Ложь);
	КонецЕсли;

	// Формируем основное представление документа	
	HTMLТекст = "<html>
	|<head>
	|<style type=""text/css"">
	|	body {
	|		overflow:    auto;
	|		margin-top:  6px; 		 
	|		margin-left: 10px;
	|		margin-bottom: 0px;
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	table {
	|		width:       100%; 
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	td {vertical-align: top;}
	| 	a:link {
	|		color: #006699; text-decoration: none;}
	|	a:visited {
	|		color: #006699; text-decoration: none;}
	|	a:hover {
	|		color: #006699; text-decoration: underline;}
	|	p {
	|		margin-top: 7px;}
	|</style>
	|<body>";

	HTMLТекст = HTMLТекст + "<table>";

	Если ЗначениеЗаполнено(Организация)
		И (РеквизитыВида.ВестиУчетПоОрганизациям
		Или Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям")) Тогда
		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";
		ОрганизацияПредставление = Юрлица.ПредставлениеЮрлицаНаДату(Организация, ДатаНачалаОтсчета);
		ДобавитьРеквизит(HTMLТекст, "", Организация, , ОрганизацияПредставление);
		HTMLТекст = HTMLТекст + "</td>";
		HTMLТекст = HTMLТекст + "</tr>";
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда 
		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";
		HTMLТекст = HTMLТекст + "<p>";

		Если РеквизитыВида.ВестиУчетПоТематикам И ЗначениеЗаполнено(Объект.Тематика) Тогда 
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A> - <A href=v8doc:%3>%4</A>",
			ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
			ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.ВидДокумента)))),
			ПолучитьНавигационнуюСсылку(Объект.Тематика),
			ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.Тематика)))));
		Иначе
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A>",
			ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
			ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.ВидДокумента)))));
		КонецЕсли;

		HTMLТекст = HTMLТекст + "</td>";
		HTMLТекст = HTMLТекст + "</tr>";
	КонецЕсли;

	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td width=""70%"">";
	Если ЗначениеЗаполнено(Объект.ДатаРегистрации) Тогда 
		ДобавитьРеквизит(HTMLТекст, "", Формат(Объект.ДатаРегистрации, "ДЛФ=D"));
	Иначе
		ДобавитьРеквизит(HTMLТекст, "____________", "");
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</td>";

	HTMLТекст = HTMLТекст + "<td>";
	Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда 
		ДобавитьРеквизит(HTMLТекст, "№ ", Объект.РегистрационныйНомер);
	Иначе
		Если РеквизитыВида.ИспользоватьВременныеНомера И ЗначениеЗаполнено(Объект.ВременныйНомер) Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Врем. № '"), Объект.ВременныйНомер);
		Иначе
			ДобавитьРеквизит(HTMLТекст, "№___________", "");
		КонецЕсли;
	КонецЕсли;	
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";

	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td colspan=""2"">";

	HTMLТекст = HTMLТекст + "<p>";
	Заголовок = Объект.Заголовок;
	HTMLТекст = HTMLТекст + СтрШаблон(
	"<B>%1</B>",
	РаботаС_HTML.ЗаменитьСпецСимволыHTML(Заголовок));
	HTMLТекст = HTMLТекст + "<p>";

	HTMLТекст = HTMLТекст + "<p>";	
	Если ЗначениеЗаполнено(Объект.Содержание) Тогда
		Содержание = Объект.Содержание;
		HTMLТекст = HTMLТекст + СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Содержание), Символы.ПС, "<br>");
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьСвязиОбъектов") Тогда                  

		КраткиеСведенияОСвязях = СвязиОбъектов.КраткиеСведенияОСвязях(Объект.Ссылка);

		Если Не ЗначениеЗаполнено(КраткиеСведенияОСвязях) Тогда	
			КраткиеСведенияОСвязях = НСтр("ru = 'Связи: не заданы'");
		КонецЕсли;	

		HTMLТекст = HTMLТекст + СтрШаблон(
		"<b><A href=v8doc:tasks/ShowLinks/%1>%2</A></b> <br>",
		ПолучитьНавигационнуюСсылку(Объект.Ссылка),
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(КраткиеСведенияОСвязях));
	КонецЕсли;	

	ДобавитьНадписьОСроке(HTMLТекст, Объект, РеквизитыВида, ДатаНачалаОтсчета, НСтр("ru = 'Срок исполнения:'"));

	// Сумма и статьи ДДС.
	Если РеквизитыВида.УчитыватьСуммуДокумента Тогда
		Валюта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Валюта, "Наименование");
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Сумма:'"), Формат(Объект.Сумма, "ЧДЦ=2; ЧН=0") + " " + 
		Валюта);

		Если Форма.УчитыватьНДС Тогда 
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Сумма НДС:'"), Формат(Объект.СуммаНДС, "ЧДЦ=2; ЧН=0") + " " + 
			Валюта);
		КонецЕсли;

		Если РеквизитыВида.ВестиУчетТоваровИУслуг И Объект.Товары.Количество() > 0 Тогда
			КоличествоПозиций = Объект.Товары.Количество();
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Товары и услуги:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=%1>%2</A><BR>",
			"v8doc:tasks/goods?ref=" + Строка(Объект.Ссылка.УникальныйИдентификатор()),
			Формат(КоличествоПозиций, "ЧГ=") + " "
			+ ПользователиСлужебныйКлиентСервер.ПредметЦелогоЧисла(КоличествоПозиций,
			"Л = ru_RU", НСтр("ru = 'позиция,позиции,позиций,,,,,,0'")));
		КонецЕсли;

		Если РеквизитыВида.ВестиУчетПоСтатьямДДС Тогда
			СтатьиДДС = Форма.СтатьиДвиженияДенежныхСредств;
			КоличествоСтатей = СтатьиДДС.Количество();
			Если КоличествоСтатей = 1 Тогда
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Статья ДДС:'"), 
				СтатьиДДС[0].СтатьяДвиженияДенежныхСредств);
			ИначеЕсли КоличествоСтатей > 1 Тогда
				ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Статьи ДДС:'"));
				Разделитель = "";
				Для каждого Строка из СтатьиДДС Цикл
					HTMLТекст = HTMLТекст + Разделитель;
					ДобавитьЗначение(HTMLТекст, Строка.СтатьяДвиженияДенежныхСредств, "");
					Разделитель = "; ";
				КонецЦикла;
				HTMLТекст = HTMLТекст + "<br>";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если РеквизитыВида.УчитыватьСрокДействия Тогда
		СрокДействияСтрока = Форма.СрокДействияСтрока;
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Срок действия:'"));

		HTMLТекст = HTMLТекст + СтрШаблон(
		"<A href=v8doc:%1>%2</A><BR>",
		"period",
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(?(ЗначениеЗаполнено(СрокДействияСтрока),
		СрокДействияСтрока, НСтр("ru = 'не указан'"))));
	КонецЕсли;

	Если РеквизитыВида.УчитыватьНедействующиеДокументы Тогда
		Если Объект.НеДействует Тогда

			НеДействуетВСоответствии = СвязиОбъектов.ПолучитьСвязанныйОбъект(
			Объект.Ссылка, Справочники.ТипыСвязей.НеДействуетВСоответствии);

			Если ЗначениеЗаполнено(НеДействуетВСоответствии) Тогда 
				Ответ = СтрШаблон(НСтр("ru = 'В соответствии с ""%1""'"), НеДействуетВСоответствии);
			Иначе 
				Ответ = НСтр("ru = 'Да'");
			КонецЕсли;

			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Не действует:'"), Ответ, "696969");

		КонецЕсли;
	КонецЕсли; 
	
#Вставка 
	Если РеквизитыВида.ЦППК_УчитыватьВноситИзменения Тогда
		Если Объект.ЦППК_Изменен Тогда
			
			ИзмененДокументом = СвязиОбъектов.ПолучитьСвязанныйОбъект(
				Объект.Ссылка, Справочники.ТипыСвязей.ЦППК_ИзмененДокументом);
				
			Если ЗначениеЗаполнено(ИзмененДокументом) Тогда 
				Ответ = СтрШаблон(НСтр("ru = 'В соответствии с ""%1""'"), ИзмененДокументом);
			Иначе 
				Ответ = НСтр("ru = 'Да'");
			КонецЕсли;
			
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Изменен:'"), Ответ, "696969");
			
		КонецЕсли;
	КонецЕсли;
#КонецВставки

	Если Делопроизводство.ЭтотВидДокументаМожноОтменить(Объект.ВидДокумента) Тогда

		ГотовитсяКОтменеДокументы = РегистрыСведений.ОтменяемыеДокументы.ПрочитатьНовыеДокументы(Объект.Ссылка);
		Если ГотовитсяКОтменеДокументы.Количество() <> 0 Тогда

			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Готовится к отмене документом:'"));

			Для Каждого Строка Из ГотовитсяКОтменеДокументы Цикл
				ДобавитьЗначение(HTMLТекст, Строка.Документ); 
				HTMLТекст = HTMLТекст + "&nbsp;";
			КонецЦикла;	

		КонецЕсли;	

	КонецЕсли;	

	ДобавитьОбзорДополнительныхРеквизитов(HTMLТекст, Объект, Форма);

	HTMLТекст = HTMLТекст + "</td></tr>";	

	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td>";

	HTMLТекст = HTMLТекст + "<p>";

	Если ЗначениеЗаполнено(Объект.Подготовил) Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Подготовил:'"));
		ДобавитьЗначение(HTMLТекст, Объект.Подготовил, "");
		ДобавитьЗначение(HTMLТекст, " (" + Формат(Объект.ДатаСоздания, "ДЛФ=D") + ")", "");
		HTMLТекст = HTMLТекст + "<br>";

		КонтактнаяИнформация = ПолучитьКонтактнуюИнформациюОбъекта(Объект.Подготовил);

		Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
			ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформация.Телефон, "696969");
		КонецЕсли;

		Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<FONT color=#696969>%1</FONT>",
			НСтр("ru = 'E-mail:'") + " ");
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
			"message"+КонтактнаяИнформация.Емайл,
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(КонтактнаяИнформация.Емайл));
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подразделение:'"),  Объект.Подразделение);
	КонецЕсли;

	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";


	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td colspan=""2"">";

	HTMLТекст = HTMLТекст + "<p>";

	Если ЗначениеЗаполнено(Объект.Ответственный) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Ответственный:'"),  Объект.Ответственный);
	КонецЕсли;

	Если РеквизитыВида.КонтролироватьНаличиеОригинала И ЗначениеЗаполнено(Форма.ОригиналПолученТекст) Тогда 
		Если Не Форма.ОригиналПолучен И ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда 
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Оригинал:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1><FONT color=#%2>%3</FONT></A><BR>",
			"Original",
			"B22222",
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(Форма.ОригиналПолученТекст));
		Иначе 
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Оригинал:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"Original",
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(Форма.ОригиналПолученТекст));
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.ФормаДокумента) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Форма:'"), Объект.ФормаДокумента);
	КонецЕсли;

	МестоХраненияДокументаИспользуется = РеквизитыХраненияИспользуются(
	РеквизитыВида.УчитыватьМестоХранения, Объект.МестоХранения, Объект.ФормаДокумента);

	СостояниеДела = Неопределено;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел") Тогда 
		Если РеквизитыВида.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(Объект.НоменклатураДел) Тогда
			ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Номенклатура дел:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			ПолучитьНавигационнуюСсылку(Объект.НоменклатураДел),
			Объект.НоменклатураДел);
		КонецЕсли;

		Если ЗначениеЗаполнено(Объект.Дело) Тогда
			ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Помещен в дело:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"dossier",
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(Строка(Объект.Дело)));

			СостояниеДела = Форма.СтруктураСостоянияДела;
			Если ТипЗнч(СостояниеДела) = Тип("Структура")
				И ЗначениеЗаполнено(СостояниеДела.Состояние) Тогда
				HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A><BR></FONT>",
				"DossierStatusRecorder",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(
				СостояниеДела.ПредставлениеСостояния + " " + СостояниеДела.ДатаСостояния));
			КонецЕсли;

			МестоХранения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дело, "МестоХраненияДел");
			Если ЗначениеЗаполнено(МестоХранения) Тогда
				МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(МестоХранения,
				ПолучитьФункциональнуюОпцию("ИспользоватьСхемыПомещений"));
				Если МестоХраненияДокументаИспользуется Тогда
					ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Место хранения дела:'"));
				Иначе
					ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Место хранения:'"));
				КонецЕсли;
				HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A><BR>",
				"storage",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(МестоХраненияТекст));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если МестоХраненияДокументаИспользуется Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Место хранения:'"), Объект.МестоХранения);
	КонецЕсли;

	Если РеквизитыХраненияИспользуются(
		РеквизитыВида.УчитыватьОтветственногоЗаХранение, Объект.ОтветственныйЗаХранение, Объект.ФормаДокумента) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Отв. за хранение:'"), Объект.ОтветственныйЗаХранение);
	КонецЕсли;

	КомуПереданДокумент = Форма.КомуПереданДокумент;
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Передан:'"));
		HTMLТекст = HTMLТекст + СтрШаблон(
		"<A href=v8doc:%1>%2</A><BR>",
		"holder",
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(КомуПереданДокумент));
	КонецЕсли;	

	HTMLТекст = HTMLТекст + "</td></tr>";

	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td colspan=""2"">";

	HTMLТекст = HTMLТекст + "<p>";

	Если РеквизитыВида.ИспользоватьВременныеНомера
		И ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда
		// Выводим врем. номер в реквизитах, если заполнен рег. номер, иначе он будет на месте рег. номера
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Врем. №:'"), Объект.ВременныйНомер);
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьПапкиДокументов")Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Папка:'"), 	Объект.Папка);
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Гриф:'"),  Объект.ГрифДоступа);
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вопрос:'"),  Объект.ВопросДеятельности);
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(Объект.Проект) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Проект:'"),  Объект.Проект);
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние:'"));
		HTMLТекст = HTMLТекст + СтрШаблон(
		"<A href=v8doc:%1>%2</A><BR>",
		"status",
		Форма.СостояниеТекст);
	КонецЕсли;

	ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
	Если ИспользоватьОбменЭД И ЗначениеЗаполнено(Форма.СостояниеЭДО) Тогда  

		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние ЭДО:'"));  

		HTMLТекст = HTMLТекст + СтрШаблон(
		"<A href=v8doc:%1>%2</A><BR>",
		"OpenEDI",
		Форма.СостояниеЭДО);

	КонецЕсли;

	Если ЗначениеЗаполнено(Форма.УтверждениеТекст) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Утвержден:'"), Форма.УтверждениеТекст);
	КонецЕсли;

	Если ЗначениеЗаполнено(Форма.ПодписьТекст) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписан:'"), Форма.ПодписьТекст);
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.Комментарий) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Комментарий:'"),  Объект.Комментарий);
	КонецЕсли;

	HTMLТекст = HTMLТекст + "</td></tr>";	

	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	HTMLТекст = HTMLТекст + "<p>";

	Если ЗначениеЗаполнено(СостояниеДела)
		И ПолучитьФункциональнуюОпцию("ИнтеграцияС1САрхивом")
		И СостояниеДела.Состояние = Перечисления.СостоянияДелХраненияДокументов.ПереданоВАрхив Тогда
		ЭтоЭлектронныйДокумент = Объект.ФормаДокумента = Перечисления.ВариантыФормДокументов.Электронная;
		HTMLТекст = HTMLТекст + "<p>" + " " +  "<p>" + СтрШаблон(
		"<U><B><A href=v8doc:%1>%2</A><BR></B></U>",
		"DownloadContainer",
		СтрШаблон(НСтр("ru = 'Скачать %1 из 1С:Архива'"),
		?(ЭтоЭлектронныйДокумент, НСтр("ru = 'контейнер'"), НСтр("ru = 'файлы'"))));
	КонецЕсли;

	HTMLТекст = HTMLТекст + "</td></tr>";	
	Если Не Форма.НеПоказыватьДанныеОбработки Тогда
		ДобавитьОбзорРезультатов(HTMLТекст, Объект);
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</table>";

	HTMLТекст = HTMLТекст + "</body></html>";

	ОбзорОбъектовКлиентСервер.УдалитьВредоносныйКодИзТекста(HTMLТекст);

	Возврат HTMLТекст;

КонецФункции

&ИзменениеИКонтроль("ПолучитьОбзорДокументаСКонтрагентом")
Функция ЦППК_ПолучитьОбзорДокументаСКонтрагентом(Форма)

	Объект = Форма.Объект;
	Организация = Объект.Организация;
	Шаблон = ОбщегоНазначенияДокументооборот.ЗначениеРеквизитаОбъектаВПривилегированномРежиме(Объект.Ссылка,
	"Шаблон");
	ДатаНачалаОтсчета = Делопроизводство.ДатаУчетаДокумента(Объект);

	ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");

	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда 
		КэшДокументыПредприятияФормаЭлемента =
		КэшиНаВремяВызоваПовтИсп.КэшДокументыПредприятияФормаЭлемента();
		Если КэшДокументыПредприятияФормаЭлемента.Инициализирован
			И КэшДокументыПредприятияФормаЭлемента.КэшДокумента.ВидДокумента = Объект.ВидДокумента Тогда
			РеквизитыВида = КэшДокументыПредприятияФормаЭлемента.КэшВидаДокумента;
		Иначе
			РеквизитыВида = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидДокумента,
			"УчитыватьСуммуДокумента, ИспользоватьСрокИсполнения, ВестиУчетПоНоменклатуреДел, УчитыватьСрокДействия,
#Вставка
            |ЦППК_УчитыватьВноситИзменения,
#КонецВставки			
			|УчитыватьНедействующиеДокументы, ВестиУчетТоваровИУслуг, ВестиУчетПоСтатьямДДС, ВестиУчетПоОрганизациям,
			|ВестиУчетСторон, ВестиУчетПоКонтрагентам, ЯвляетсяЗаявкойНаОплату,
			|УчитыватьМестоХранения, УчитыватьОтветственногоЗаХранение, КонтролироватьНаличиеОригинала,
			|ВестиУчетПоТематикам, СрокИсполненияУказанВРабочихДнях, ИспользоватьВременныеНомера");
		КонецЕсли;
	Иначе 
		РеквизитыВида = Новый Структура;
		РеквизитыВида.Вставить("УчитыватьСуммуДокумента", Ложь);
		РеквизитыВида.Вставить("ВестиУчетТоваровИУслуг", Ложь);
		РеквизитыВида.Вставить("ИспользоватьСрокИсполнения", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоНоменклатуреДел", Ложь);
		РеквизитыВида.Вставить("УчитыватьСрокДействия", Ложь);
		РеквизитыВида.Вставить("УчитыватьНедействующиеДокументы", Ложь);
#Вставка
        РеквизитыВида.Вставить("ЦППК_УчитыватьВноситИзменения", Ложь);
#КонецВставки		
		РеквизитыВида.Вставить("ВестиУчетПоСтатьямДДС", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоОрганизациям", Ложь);
		РеквизитыВида.Вставить("ВестиУчетСторон", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоКонтрагентам", Ложь);
		РеквизитыВида.Вставить("ЯвляетсяЗаявкойНаОплату", Ложь);
		РеквизитыВида.Вставить("УчитыватьМестоХранения", Ложь);
		РеквизитыВида.Вставить("УчитыватьОтветственногоЗаХранение", Ложь);
		РеквизитыВида.Вставить("КонтролироватьНаличиеОригинала", Ложь);
		РеквизитыВида.Вставить("ВестиУчетПоТематикам", Ложь);
		РеквизитыВида.Вставить("СрокИсполненияУказанВРабочихДнях", Ложь);
		РеквизитыВида.Вставить("ИспользоватьВременныеНомера", Ложь);
	КонецЕсли;

	// Формируем основное представление документа	
	HTMLТекст = "<html>
	|<head>
	|<style type=""text/css"">
	|	body {
	|		overflow:    auto;
	|		margin-top:  6px;
	|		margin-left: 10px;
	|		margin-bottom: 0px;
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	table {
	|		width:       100%; 
	|		font-family: Arial, sans-serif;
	|		font-size:   10pt;}
	|	td {vertical-align: top;}
	| 	a:link {
	|		color: #006699; text-decoration: none;}
	|	a:visited {
	|		color: #006699; text-decoration: none;}
	|	a:hover {
	|		color: #006699; text-decoration: underline;}
	|	p {
	|		margin-top: 7px;}
	|</style>
	|<body>";

	HTMLТекст = HTMLТекст + "<table>";

	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";

		Если РеквизитыВида.ВестиУчетПоТематикам И ЗначениеЗаполнено(Объект.Тематика) Тогда 
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A> - <A href=v8doc:%3>%4</A> № %5%6",
			ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
			ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.ВидДокумента)))),
			ПолучитьНавигационнуюСсылку(Объект.Тематика),
			ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.Тематика)))),
			?(ЗначениеЗаполнено(Объект.РегистрационныйНомер), Объект.РегистрационныйНомер,
			?(РеквизитыВида.ИспользоватьВременныеНомера И ЗначениеЗаполнено(Объект.ВременныйНомер),
			Объект.ВременныйНомер, "_____")),
			?(ЗначениеЗаполнено(Объект.ДатаРегистрации), " от " + Формат(Объект.ДатаРегистрации, "ДЛФ=D"), ""));
		Иначе
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A> № %3%4",
			ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
			ВРег(РаботаС_HTML.ЗаменитьСпецСимволыHTML((Строка(Объект.ВидДокумента)))),
			?(ЗначениеЗаполнено(Объект.РегистрационныйНомер), Объект.РегистрационныйНомер,
			?(РеквизитыВида.ИспользоватьВременныеНомера И ЗначениеЗаполнено(Объект.ВременныйНомер),
			Объект.ВременныйНомер, "_____")),
			?(ЗначениеЗаполнено(Объект.ДатаРегистрации), " от " + Формат(Объект.ДатаРегистрации, "ДЛФ=D"), ""));
		КонецЕсли;

		HTMLТекст = HTMLТекст + "</td></tr>";
	КонецЕсли;

	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"" >";

	HTMLТекст = HTMLТекст + "<p>";
	Заголовок = Объект.Заголовок;
	HTMLТекст = HTMLТекст + СтрШаблон(
	"<B>%1</B>",
	РаботаС_HTML.ЗаменитьСпецСимволыHTML(Заголовок));
	HTMLТекст = HTMLТекст + "</td></tr>";	

	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td colspan=""2"" >";

	HTMLТекст = HTMLТекст + "<p>";

	Если ЗначениеЗаполнено(Объект.Содержание) Тогда
		Содержание = Объект.Содержание;
		HTMLТекст = HTMLТекст + СтрЗаменить(РаботаС_HTML.ЗаменитьСпецСимволыHTML(Содержание), Символы.ПС, "<br>");
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьСвязиОбъектов") Тогда

		КраткиеСведенияОСвязях = СвязиОбъектов.КраткиеСведенияОСвязях(Объект.Ссылка);

		Если Не ЗначениеЗаполнено(КраткиеСведенияОСвязях) Тогда	
			КраткиеСведенияОСвязях = НСтр("ru = 'Связи: не заданы'");
		КонецЕсли;	

		HTMLТекст = HTMLТекст + СтрШаблон(
		"<b><A href=v8doc:tasks/ShowLinks/%1>%2</A></b> <br>",
		ПолучитьНавигационнуюСсылку(Объект.Ссылка),
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(КраткиеСведенияОСвязях));
	КонецЕсли;	

	ДобавитьНадписьОСроке(HTMLТекст, Объект, РеквизитыВида, ДатаНачалаОтсчета, НСтр("ru = 'Срок исполнения:'"));

	// Сумма и статьи ДДС.
	Если РеквизитыВида.УчитыватьСуммуДокумента Тогда
		Валюта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Валюта, "Наименование");
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Сумма:'"), Формат(Объект.Сумма, "ЧДЦ=2; ЧН=0") + " " + 
		Валюта);

		Если Форма.УчитыватьНДС Тогда 
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Сумма НДС:'"), Формат(Объект.СуммаНДС, "ЧДЦ=2; ЧН=0") + " " + 
			Валюта);
		КонецЕсли;

		Если РеквизитыВида.ВестиУчетТоваровИУслуг И Объект.Товары.Количество() > 0 Тогда
			КоличествоПозиций = Объект.Товары.Количество();
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Товары и услуги:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=%1>%2</A><BR>",
			"v8doc:tasks/goods?ref=" + Строка(Объект.Ссылка.УникальныйИдентификатор()),
			Формат(КоличествоПозиций, "ЧГ=") + " "
			+ ПользователиСлужебныйКлиентСервер.ПредметЦелогоЧисла(КоличествоПозиций,
			"Л = ru_RU", НСтр("ru = 'позиция,позиции,позиций,,,,,,0'")));
		КонецЕсли;

		Если РеквизитыВида.ВестиУчетПоСтатьямДДС Тогда
			СтатьиДДС = Форма.СтатьиДвиженияДенежныхСредств;
			КоличествоСтатей = СтатьиДДС.Количество();
			Если КоличествоСтатей = 1 Тогда
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Статья ДДС:'"), 
				СтатьиДДС[0].СтатьяДвиженияДенежныхСредств);
			ИначеЕсли КоличествоСтатей > 1 Тогда
				ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Статьи ДДС:'"));
				Разделитель = "";
				Для каждого Строка из СтатьиДДС Цикл
					HTMLТекст = HTMLТекст + Разделитель;
					ДобавитьЗначение(HTMLТекст, Строка.СтатьяДвиженияДенежныхСредств, "");
					Разделитель = "; ";
				КонецЦикла;
				HTMLТекст = HTMLТекст + "<br>";
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

	Если РеквизитыВида.УчитыватьСрокДействия Тогда
		СрокДействияСтрока = Форма.СрокДействияСтрока;
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Срок действия:'"));
		HTMLТекст = HTMLТекст + СтрШаблон(
		"<A href=v8doc:%1>%2</A><BR>",
		"period",
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(?(ЗначениеЗаполнено(СрокДействияСтрока),
		СрокДействияСтрока, НСтр("ru = 'не указан'"))));
	КонецЕсли;

	Если РеквизитыВида.УчитыватьНедействующиеДокументы Тогда
		Если Объект.НеДействует Тогда

			НеДействуетВСоответствии = СвязиОбъектов.ПолучитьСвязанныйОбъект(
			Объект.Ссылка, Справочники.ТипыСвязей.НеДействуетВСоответствии);

			Если ЗначениеЗаполнено(НеДействуетВСоответствии) Тогда 
				Ответ = СтрШаблон(НСтр("ru = 'В соответствии с ""%1""'"), НеДействуетВСоответствии);
			Иначе 
				Ответ = НСтр("ru = 'Да'");
			КонецЕсли;

			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Не действует:'"), Ответ, "696969");

		КонецЕсли;
	КонецЕсли;
	
#Вставка 
	Если РеквизитыВида.ЦППК_УчитыватьВноситИзменения Тогда
		Если Объект.ИзмененДокументом Тогда
			
			ИзмененДокументом = СвязиОбъектов.ПолучитьСвязанныйОбъект(
				Объект.Ссылка, Справочники.ТипыСвязей.ЦППК_ИзмененДокументом);
				
			Если ЗначениеЗаполнено(ИзмененДокументом) Тогда 
				Ответ = СтрШаблон(НСтр("ru = 'В соответствии с ""%1""'"), ИзмененДокументом);
			Иначе 
				Ответ = НСтр("ru = 'Да'");
			КонецЕсли;
			
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Изменен:'"), Ответ, "696969");
			
		КонецЕсли;
	КонецЕсли;
#КонецВставки	

	Если Делопроизводство.ЭтотВидДокументаМожноОтменить(Объект.ВидДокумента) Тогда

		ГотовитсяКОтменеДокументы = РегистрыСведений.ОтменяемыеДокументы.ПрочитатьНовыеДокументы(Объект.Ссылка);
		Если ГотовитсяКОтменеДокументы.Количество() <> 0 Тогда

			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Готовится к отмене документом:'"));

			Для Каждого Строка Из ГотовитсяКОтменеДокументы Цикл
				ДобавитьЗначение(HTMLТекст, Строка.Документ); 
				HTMLТекст = HTMLТекст + "&nbsp;";
			КонецЦикла;	

		КонецЕсли;	

	КонецЕсли;	

	ДобавитьОбзорДополнительныхРеквизитов(HTMLТекст, Объект, Форма);

	HTMLТекст = HTMLТекст + "</td></tr>";	

	Если РеквизитыВида.ВестиУчетПоКонтрагентам 
		И (ЗначениеЗаполнено(Объект.Контрагент) 
		Или Объект.Контрагенты.Количество()
		Или РеквизитыВида.ЯвляетсяЗаявкойНаОплату) Тогда

		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td colspan=""2"" >";
		HTMLТекст = HTMLТекст + "<p>";

		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td width=""70%"">";
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям")
			И Не РеквизитыВида.ВестиУчетПоОрганизациям Тогда
			HTMLТекст = HTMLТекст + "<p>";
			ДобавитьРеквизит(HTMLТекст, РедакцииКонфигурацииКлиентСервер.ИмяОрганизацииУчетСторон(), "");
		Иначе
			HTMLТекст = HTMLТекст + "<p>";
			ДобавитьРеквизит(HTMLТекст, РедакцииКонфигурацииКлиентСервер.ИмяОрганизации(), "");
			HTMLТекст = HTMLТекст + "<p>";
			ДобавитьРеквизит(HTMLТекст, "", Организация, "", Юрлица.ПредставлениеЮрлицаНаДату(Организация, ДатаНачалаОтсчета));
		КонецЕсли;

		Если Не Форма.НесколькоКонтрагентов Тогда
			HTMLТекст = HTMLТекст + "<td>";
			HTMLТекст = HTMLТекст + "<p>";	
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Контрагент:'"), "");
			HTMLТекст = HTMLТекст + "<p>";

			Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
				КонтрагентПредставление = Справочники.Контрагенты.ПредставлениеКонтрагентаНаДату(Объект.Контрагент, ДатаНачалаОтсчета);
				ДобавитьРеквизит(HTMLТекст, "", Объект.Контрагент, "", КонтрагентПредставление);
			КонецЕсли;

			Если ЗначениеЗаполнено(Объект.ПодписалОтКонтрагента) Тогда
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал:'"), Объект.ПодписалОтКонтрагента);
			КонецЕсли;	

			ДобавитьВТекстДанныеКонтактногоЛица(Объект.КонтактноеЛицо, HTMLТекст, НСтр("ru = 'Контакт:'"));
		Иначе		
			HTMLТекст = HTMLТекст + "<td>";
			HTMLТекст = HTMLТекст + "<p>";
			Количество = 0;
			Для Каждого СтрокаКонтрагент Из Объект.Контрагенты Цикл
				Если ЗначениеЗаполнено(СтрокаКонтрагент.Контрагент) Тогда
					Количество = Количество + 1;
				КонецЕсли;
			КонецЦикла;

			Если Количество = 1 Тогда 
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Контрагент:'"), "");
			Иначе 
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Контрагенты:'"), "");
			КонецЕсли;

			HTMLТекст = HTMLТекст + "<p>";

			Для Каждого СтрокаКонтрагент Из Объект.Контрагенты Цикл
				Если ЗначениеЗаполнено(СтрокаКонтрагент.Контрагент) Тогда
					КонтрагентПредставление = Справочники.Контрагенты.ПредставлениеКонтрагентаНаДату(СтрокаКонтрагент.Контрагент, ДатаНачалаОтсчета);
					ДобавитьРеквизит(HTMLТекст, "", СтрокаКонтрагент.Контрагент, , КонтрагентПредставление);
				КонецЕсли;

				Если ЗначениеЗаполнено(СтрокаКонтрагент.ПодписалОтКонтрагента) Тогда
					ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал:'"), СтрокаКонтрагент.ПодписалОтКонтрагента);
				КонецЕсли;	

				ДобавитьВТекстДанныеКонтактногоЛица(СтрокаКонтрагент.КонтактноеЛицо, HTMLТекст, НСтр("ru = 'Контакт:'"));

				HTMLТекст = HTMLТекст + "<p>";	
			КонецЦикла;	

			// Удаление лишнего отступа
			HTMLТекст = Лев(HTMLТекст, СтрДлина(HTMLТекст)-3);
		КонецЕсли;

		HTMLТекст = HTMLТекст + "</td></tr>";
	ИначеЕсли РеквизитыВида.ВестиУчетСторон И Объект.Стороны.Количество() Тогда

		Стороны = Новый Массив(2);
		СтрокиОрганизации = Новый Массив;
		СтрокиКонтрагенты = Новый Массив;

		Для Каждого СтрокаТаблицы Из Объект.Стороны Цикл
			Если РаботаСПодписямиДокументовКлиентСервер.ЭтоОрганизация(СтрокаТаблицы.Сторона) Тогда
				СтрокиОрганизации.Добавить(СтрокаТаблицы);
			Иначе
				СтрокиКонтрагенты.Добавить(СтрокаТаблицы);
			КонецЕсли;
		КонецЦикла;

		Если Не СтрокиКонтрагенты.Количество() Тогда
			ИндексПоследнего = СтрокиОрганизации.ВГраница();
			Для Счетчик = 1 По ИндексПоследнего Цикл
				СтрокиКонтрагенты.Добавить(СтрокиОрганизации[Счетчик]);
			КонецЦикла;
			Для Счетчик = 0 По ИндексПоследнего - 1 Цикл
				СтрокиОрганизации.Удалить(ИндексПоследнего - Счетчик);
			КонецЦикла;
		КонецЕсли;

		Стороны[0] = СтрокиОрганизации;
		Стороны[1] = СтрокиКонтрагенты;

		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'СТОРОНЫ'"), "");
		HTMLТекст = HTMLТекст + "</td></tr>";

		HTMLТекст = HTMLТекст + "<tr>";
		HTMLТекст = HTMLТекст + "<td width=""70%"">";

		Для Каждого Сторона Из Стороны Цикл
			Для Каждого ОписаниеСтороны Из Сторона Цикл			
				Если ЗначениеЗаполнено(ОписаниеСтороны.Наименование) Тогда
					ДобавитьРеквизит(HTMLТекст, СокрЛП(ОписаниеСтороны.Наименование) + ":", "");
				КонецЕсли;

				СведенияОЮрлице = Юрлица.СведенияОЮрлицеНаДату(ОписаниеСтороны.Сторона, ДатаНачалаОтсчета);
				ДобавитьРеквизит(HTMLТекст, "", ОписаниеСтороны.Сторона, "", СведенияОЮрлице.ПредставлениеПолное);

				Если ОписаниеСтороны.Подписан Тогда
					Подписант = ОписаниеСтороны.Подписал;
					Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОписаниеСтороны.Сторона, "ЮрФизЛицо") = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
						Подписант = ОписаниеСтороны.Сторона;
					КонецЕсли;

					ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал:'"), Подписант);
				КонецЕсли;

				Если ЗначениеЗаполнено(ОписаниеСтороны.КонтактноеЛицо) Тогда
					ДобавитьВТекстДанныеКонтактногоЛица(ОписаниеСтороны.КонтактноеЛицо, HTMLТекст, НСтр("ru = 'Контакт:'"));
				КонецЕсли;

				HTMLТекст = HTMLТекст + "<p>";
			КонецЦикла;	
			HTMLТекст = HTMLТекст + "</td><td>";
		КонецЦикла;

		HTMLТекст = HTMLТекст + "</td></tr>";
	КонецЕсли;

	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td colspan=""2"">";

	HTMLТекст = HTMLТекст + "<p>";

	Если ЗначениеЗаполнено(Объект.Подготовил) Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Подготовил:'"));
		ДобавитьЗначение(HTMLТекст, Объект.Подготовил, "");
		ДобавитьЗначение(HTMLТекст, " (" + Формат(Объект.ДатаСоздания, "ДЛФ=D") + ")", "");
		HTMLТекст = HTMLТекст + "<br>";

		КонтактнаяИнформация = ПолучитьКонтактнуюИнформациюОбъекта(Объект.Подготовил);

		Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
			ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформация.Телефон, "696969");
		КонецЕсли;

		Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<FONT color=#696969>%1</FONT>",
			НСтр("ru = 'E-mail:'") + " ");
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
			"message"+КонтактнаяИнформация.Емайл,
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(КонтактнаяИнформация.Емайл));
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подразделение:'"),  Объект.Подразделение);
	КонецЕсли;	

	Если ЗначениеЗаполнено(Объект.Ответственный) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Ответственный:'"),  Объект.Ответственный);
	КонецЕсли;

	Если РеквизитыВида.КонтролироватьНаличиеОригинала И ЗначениеЗаполнено(Форма.ОригиналПолученТекст) Тогда 
		Если Не Форма.ОригиналПолучен И ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда 
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Оригинал:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1><FONT color=#%2>%3</FONT></A><BR>",
			"Original",
			"B22222",
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(Форма.ОригиналПолученТекст));
		Иначе 
			ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Оригинал:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"Original",
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(Форма.ОригиналПолученТекст));
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.ФормаДокумента) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Форма:'"), Объект.ФормаДокумента);
	КонецЕсли;

	МестоХраненияДокументаИспользуется = РеквизитыХраненияИспользуются(
	РеквизитыВида.УчитыватьМестоХранения, Объект.МестоХранения, Объект.ФормаДокумента);

	СостояниеДела = Неопределено;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруДел") Тогда 
		Если РеквизитыВида.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(Объект.НоменклатураДел) Тогда
			ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Номенклатура дел:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			ПолучитьНавигационнуюСсылку(Объект.НоменклатураДел),
			Объект.НоменклатураДел);
		КонецЕсли;

		Если ЗначениеЗаполнено(Объект.Дело) Тогда
			ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Помещен в дело:'"));
			HTMLТекст = HTMLТекст + СтрШаблон(
			"<A href=v8doc:%1>%2</A><BR>",
			"dossier",
			РаботаС_HTML.ЗаменитьСпецСимволыHTML(Строка(Объект.Дело)));

			СостояниеДела = Форма.СтруктураСостоянияДела;
			Если ТипЗнч(СостояниеДела) = Тип("Структура")
				И ЗначениеЗаполнено(СостояниеДела.Состояние) Тогда
				HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A><BR></FONT>",
				"DossierStatusRecorder",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(
				СостояниеДела.ПредставлениеСостояния + " " + СостояниеДела.ДатаСостояния));
			КонецЕсли;

			МестоХранения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Дело, "МестоХраненияДел");
			Если ЗначениеЗаполнено(МестоХранения) Тогда
				МестоХраненияТекст = ДелопроизводствоКлиентСервер.ПолучитьПолныйПутьКМестуХранения(МестоХранения,
				ПолучитьФункциональнуюОпцию("ИспользоватьСхемыПомещений"));
				Если МестоХраненияДокументаИспользуется Тогда
					ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Место хранения дела:'"));
				Иначе
					ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Место хранения:'"));
				КонецЕсли;
				HTMLТекст = HTMLТекст + СтрШаблон(
				"<A href=v8doc:%1>%2</A><BR>",
				"storage",
				РаботаС_HTML.ЗаменитьСпецСимволыHTML(МестоХраненияТекст));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если МестоХраненияДокументаИспользуется Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Место хранения:'"), Объект.МестоХранения);
	КонецЕсли;

	Если РеквизитыХраненияИспользуются(
		РеквизитыВида.УчитыватьОтветственногоЗаХранение, Объект.ОтветственныйЗаХранение, Объект.ФормаДокумента) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Отв. за хранение:'"), Объект.ОтветственныйЗаХранение);
	КонецЕсли;

	КомуПереданДокумент = Форма.КомуПереданДокумент;
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Передан:'"));
		HTMLТекст = HTMLТекст + СтрШаблон(
		"<A href=v8doc:%1>%2</A><BR>",
		"holder",
		РаботаС_HTML.ЗаменитьСпецСимволыHTML(КомуПереданДокумент));
	КонецЕсли;	

	HTMLТекст = HTMLТекст + "</td></tr>";

	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td colspan=""2"">";

	HTMLТекст = HTMLТекст + "<p>";

	Если РеквизитыВида.ИспользоватьВременныеНомера 
		И ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда
		// Выводим врем. номер в реквизитах, если заполнен рег. номер, иначе он будет на месте рег. номера
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Врем. №:'"), Объект.ВременныйНомер);
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьПапкиДокументов") Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Папка:'"), 	Объект.Папка);
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Гриф:'"),  Объект.ГрифДоступа);
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вопрос:'"),  Объект.ВопросДеятельности);
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(Объект.Проект) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Проект:'"),  Объект.Проект);
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние:'"));
		HTMLТекст = HTMLТекст + СтрШаблон(
		"<A href=v8doc:%1>%2</A><BR>",
		"status",
		Форма.СостояниеТекст);
	КонецЕсли;

	Если ИспользоватьОбменЭД И ЗначениеЗаполнено(Форма.СостояниеЭДО) Тогда

		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние ЭДО:'"));  

		HTMLТекст = HTMLТекст + СтрШаблон(
		"<A href=v8doc:%1>%2</A><BR>",
		"OpenEDI",
		Форма.СостояниеЭДО);

	КонецЕсли;

	Если ЗначениеЗаполнено(Форма.УтверждениеТекст) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Утвержден:'"), Форма.УтверждениеТекст);
	КонецЕсли;

	Если ЗначениеЗаполнено(Форма.ПодписьТекст) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписан:'"), Форма.ПодписьТекст);
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.Комментарий) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Комментарий:'"),  Объект.Комментарий);
	КонецЕсли;

	HTMLТекст = HTMLТекст + "</td></tr>";	

	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	HTMLТекст = HTMLТекст + "<p>";

	Если ЗначениеЗаполнено(СостояниеДела)
		И ПолучитьФункциональнуюОпцию("ИнтеграцияС1САрхивом")
		И СостояниеДела.Состояние = Перечисления.СостоянияДелХраненияДокументов.ПереданоВАрхив Тогда
		ЭтоЭлектронныйДокумент = Объект.ФормаДокумента = Перечисления.ВариантыФормДокументов.Электронная;
		HTMLТекст = HTMLТекст + "<p>" + " " +  "<p>" + СтрШаблон(
		"<U><B><A href=v8doc:%1>%2</A><BR></B></U>",
		"DownloadContainer",
		СтрШаблон(НСтр("ru = 'Скачать %1 из 1С:Архива...'"),
		?(ЭтоЭлектронныйДокумент, НСтр("ru = 'контейнер'"), НСтр("ru = 'файлы'"))));
	КонецЕсли;

	Если Не Форма.НеПоказыватьДанныеОбработки Тогда
		ДобавитьОбзорРезультатов(HTMLТекст, Объект);
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</td></tr>";
	HTMLТекст = HTMLТекст + "</table>";

	HTMLТекст = HTMLТекст + "</body></html>";

	ОбзорОбъектовКлиентСервер.УдалитьВредоносныйКодИзТекста(HTMLТекст);

	Возврат HTMLТекст;

КонецФункции
