
&ИзменениеИКонтроль("ВставитьИзображениеЭПВФайлDocxСУказаниемПоложения")
Функция ЦППК_ВставитьИзображениеЭПВФайлDocxСУказаниемПоложения(
	Знач Расширение, 
	Знач ТекстНадписи, 
	Знач ДвоичныеДанныеФайла, 
	Знач ДанныеОтметок, 
	НастройкиШтампаЭП, 
	Знач ВысотаКартинкиШаблон) Экспорт

	ПоложениеНаСтранице = НастройкиШтампаЭП.РасположениеШтампаЭП;
	СтраницаВставкиШтампаЭП = НастройкиШтампаЭП.СтраницаВставкиШтампаЭП;
	
	Если ДвоичныеДанныеФайла.Размер() = 0 Тогда
		Возврат ДвоичныеДанныеФайла;
	КонецЕсли;
	
	СтарыйПутьКФайлу = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанныеФайла.Записать(СтарыйПутьКФайлу);
	НовыйПутьКФайлу = ПолучитьИмяВременногоФайла(Расширение);
	
	КопироватьФайл(СтарыйПутьКФайлу, СтрЗаменить(СтарыйПутьКФайлу, Расширение, "zip"));
	ИмяФайлаСПутемZIP = СтрЗаменить(СтарыйПутьКФайлу, Расширение, "zip");

	ВременнаяПапкаДляРазархивирования = ПолучитьИмяВременногоФайла("");
	ВременныйZIPФайл = ПолучитьИмяВременногоФайла("zip"); 

	Архив = Новый ЧтениеZipФайла();
	Архив.Открыть(ИмяФайлаСПутемZIP);
	Архив.ИзвлечьВсе(ВременнаяПапкаДляРазархивирования, РежимВосстановленияПутейФайловZIP.Восстанавливать);
	Архив.Закрыть();

	//получение макета для вставки регштампа
	МакетДляВставки = ПолучитьОбщийМакет("ВставкаИзображенияЭПСУказаниемПоложенияDocx");
	
	ТекстДляВставкиШтампаШаблон = МакетДляВставки.ПолучитьТекст();
	
	Если СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Каждая Тогда
		
		ВызватьИсключение НСТр("ru = 'Вариант вставки на каждой странице можно использовать только на клиенте, не на сервере'");
		
	КонецЕсли;	
	
	ТекстДляВставкиШтампаИтоговый = "";
	ЧислоШтампов = ДанныеОтметок.Количество();
	НомерПодписиПолный = 0;
	НомерПодписи = 0;
	
	СмещениеПоYНакопленное = 0;
	РасстояниеYНакопленное = 0;	
	
	ЧислоСтолбцов = 1;
	ТекСтолбец = 0;
	ЧислоШтамповВСтолбце = 9;
	СмещениеПоXНакопленное = 0;
	РасстояниеXНакопленное = 0;
	
	ЧислоСтолбцов = Цел(ЧислоШтампов / ЧислоШтамповВСтолбце);
	Остаток = ЧислоШтампов - ЧислоШтамповВСтолбце * ЧислоСтолбцов;
	Если Остаток <> 0 Тогда
		ЧислоСтолбцов = ЧислоСтолбцов + 1;
	КонецЕсли;	
	
	Для Каждого ДанныеОтметки Из ДанныеОтметок Цикл
		
		ДвоичныеДанныеКартинки = ДанныеОтметки.ДвоичныеДанныеОтметки;    
		ТипЭП = ДанныеОтметки.ТипЭП;    
		ЭтоВизуализацияПЭП = (ТипЭП = "ПЭП");
		
		ТекКартинка = Новый Картинка(ДвоичныеДанныеКартинки);
		ТекВысота = ТекКартинка.Высота();
		ТекШирина = ТекКартинка.Ширина();
#Вставка
		ТекВысота = Цел(ТекВысота * 0.8);
		ВысотаКартинкиШаблон = Цел(ВысотаКартинкиШаблон * 0.8);
#КонецВставки		
		ТекВысотаКартинки = Цел(ТекВысота * 22 / 310);  // перевод из старого значения ВысотаКартинки 22 (для высоты картинки в пикселах 310)
		ТекстДляВставкиШтампа = ТекстДляВставкиШтампаШаблон;
		
		НомерКартинки = НомерПодписиПолный * 2;
		НомерРисунок  = НомерПодписиПолный * 2 + 1;
		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, 
			"_ИД_Картинки_", Формат(НомерКартинки + 99000,"ЧДЦ=0; ЧГ=0"));
		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, 
			"_ИД_Рисунок_", Формат(НомерРисунок + 99000,"ЧДЦ=0; ЧГ=0"));
		
		Секция  = "";  // тело документа, или хедер или футер 
			
		//установка положения и прочих параметров
		СмещениеПоГоризонтали = 0;
		СмещениеПоВертикали = 0;
		ГоризонтальноеВыравнивание = "";
#Удаление
		ОтносительночегоСчитатьГоризонтальноеВыравнивание = "page";
		ОтносительноЧегоСчитатьВертикальноеВыравнивание   = "page";
#КонецУдаления
#Вставка
		Если СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Каждая Тогда
			ОтносительночегоСчитатьГоризонтальноеВыравнивание = "page";
			ОтносительноЧегоСчитатьВертикальноеВыравнивание   = "page";
		Иначе
			ОтносительночегоСчитатьГоризонтальноеВыравнивание = "margin";
			ОтносительноЧегоСчитатьВертикальноеВыравнивание   = "margin";			
		КонецЕсли;
#КонецВставки
		
		// конвертация в EMU (English Metrick Units) - openXML его использует
		//Wikipedia: there are 914400 EMUs per inch
		ВысотаШтрихкода = (ТекВысотаКартинки / 25.4) * 914400;
		
		ВысотаКартинки = ВысотаКартинкиШаблон;
		Если ЭтоВизуализацияПЭП Тогда
			ВысотаКартинки = Цел(ВысотаКартинки * 4 / 5);
		КонецЕсли; 	
		
		ШиринаШтрихкода = ВысотаКартинки * 4;
		ШиринаШтрихкодаЗначение = (ШиринаШтрихкода / 25.4) * 914400;
		Если ЭтоВизуализацияПЭП Тогда
			ШиринаШтрихкодаЗначение = ШиринаШтрихкодаЗначение * 1;
		КонецЕсли;	
		
		СмещениеПоYНаОднуПодпись = ТекВысота * 7.5 / 310;  // перевод из старого значения 10 (для высоты картинки в пикселах 310)
		
		СмещениеПоXНаОднуПодпись = ТекШирина * 7.5 / 1200;  // перевод из старого значения 10 (для высоты картинки в пикселах 310)
		
		ПозицияYНаПодпись = Цел(ТекВысота * 75000 / 310);  // перевод из старого значения 100000 (для высоты картинки в пикселах 310)
		ПозицияXНаПодпись = Цел(ТекШирина * 75000 / 310 * 11);  // перевод из старого значения 100000 (для высоты картинки в пикселах 310)
		
		Если ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ПравыйНижний") Тогда
			СмещениеПоГоризонтали = "MAX";
			СмещениеПоВертикали = "MAX";
		ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ПравыйВерхний") Тогда
			СмещениеПоГоризонтали = "MAX";
			СмещениеПоВертикали = "MIN";
		ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ЛевыйВерхний") Тогда
			СмещениеПоГоризонтали = "MIN";
			СмещениеПоВертикали = "MIN";
		ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ЛевыйНижний") Тогда
			СмещениеПоГоризонтали = "MIN";
			СмещениеПоВертикали = "MAX";
		КонецЕсли;
		
		Секция  = "";  // тело документа, или хедер или футер
		Если СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Каждая Тогда
			Если СмещениеПоВертикали = "MAX" Тогда
				Секция = "footer";
			ИначеЕсли СмещениеПоВертикали = "MIN" Тогда
				Секция = "header";
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекстНадписи) Тогда
			Если СмещениеПоГоризонтали = "MAX" Тогда
				//выравнивание к правому краю
				ГоризонтальноеВыравнивание = "mso-position-horizontal:right";
			ИначеЕсли СмещениеПоГоризонтали = "MIN" Тогда
				//выравнивание к левому краю
				ГоризонтальноеВыравнивание = "mso-position-horizontal:left";
			КонецЕсли;
			
			ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_СмещениеПоГоризонтали_", Формат(СмещениеПоГоризонтали,"ЧДЦ=0; ЧГ=0") + "pt");
			ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ГоризонтальноеВыравнивание_", ГоризонтальноеВыравнивание);

#Удаление
			ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_БлокВертикальногоПоложения_", 
					"<wp:positionV relativeFrom=""_ОтносительноЧегоСчитатьВертикальноеСмещение_"">
					|	_СмещениеПоВертикали_
					|</wp:positionV>");
					
			ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_СмещениеПоВертикали_", Формат(СмещениеПоВертикали,"ЧДЦ=0; ЧГ=0") + "pt");
#КонецУдаления
#Вставка
				Если СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Последняя И 
					ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.МестаВставкиКартинки.ПравыйНижний") Тогда
					
					ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_БлокВертикальногоПоложения_", 
						"<mc:AlternateContent><mc:Choice Requires=""wp14""><wp:positionV relativeFrom=""page"">
						|<wp14:pctPosVOffset>_Проценты_</wp14:pctPosVOffset></wp:positionV></mc:Choice>
						|<mc:Fallback><wp:positionV relativeFrom=""page""><wp:posOffset>_СмещениеПоВертикали_</wp:posOffset>
						|</wp:positionV></mc:Fallback></mc:AlternateContent>");	
					
					ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_СмещениеПоВертикали_", 
					Формат(8870000, "ЧДЦ=0; ЧН=0; ЧГ=0;"));
					ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_Проценты_", 
					Формат((90)*1000, "ЧДЦ=0; ЧН=0; ЧГ=0;"));
					
				Иначе
					ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_БлокВертикальногоПоложения_", 
					"<wp:positionV relativeFrom=""_ОтносительноЧегоСчитатьВертикальноеСмещение_"">
					|	_СмещениеПоВертикали_
					|</wp:positionV>");
					
					ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_СмещениеПоВертикали_", 
					Формат(СмещениеПоВертикали,"ЧДЦ=0; ЧГ=0"));					
				КонецЕсли;
#КонецВставки
			
		Иначе
			
			Если СмещениеПоГоризонтали = "MAX" Тогда
				
				Если ЧислоСтолбцов = 1 Тогда
					//выравнивание к правому краю
					СмещениеПоГоризонтали = "<wp:align>right</wp:align>"; 
					
				Иначе
					
					СмещениеПоГоризонтали = СтрШаблон("<wp:posOffset>%1</wp:posOffset>", 
						Формат(4300000 - РасстояниеXНакопленное, "ЧДЦ=0; ЧН=0; ЧГ=0;"));
					
				КонецЕсли;
				
			ИначеЕсли СмещениеПоГоризонтали = "MIN" Тогда  
				
				Если ЧислоСтолбцов = 1 Тогда
					//выравнивание к левому краю
					СмещениеПоГоризонтали = "<wp:align>left</wp:align>";
				Иначе
					
					СмещениеПоГоризонтали = СтрШаблон("<wp:posOffset>%1</wp:posOffset>", 
						Формат(РасстояниеXНакопленное, "ЧДЦ=0; ЧН=0; ЧГ=0;"));
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, 
				"_СмещениеПоГоризонтали_", Формат(СмещениеПоГоризонтали,"ЧДЦ=0; ЧГ=0"));

			Если ЧислоШтампов = 1 Или 
				СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Каждая Тогда
			
				Если СмещениеПоВертикали = "MAX" Тогда
					//выравнивание по нижнему краю
					СмещениеПоВертикали = "<wp:align>bottom</wp:align>";
				ИначеЕсли СмещениеПоВертикали = "MIN" Тогда
					//выравнивание по верхнему краю
					СмещениеПоВертикали = "<wp:align>top</wp:align>";
				КонецЕсли;
		
				ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_БлокВертикальногоПоложения_", 
					"<wp:positionV relativeFrom=""_ОтносительноЧегоСчитатьВертикальноеСмещение_"">
					|	_СмещениеПоВертикали_
					|</wp:positionV>");
					
				ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_СмещениеПоВертикали_", 
					Формат(СмещениеПоВертикали,"ЧДЦ=0; ЧГ=0"));
					
			Иначе

				//_Проценты_   _СмещениеПоВертикали_
				ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_БлокВертикальногоПоложения_", 
					"<mc:AlternateContent xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006"">
					|<mc:Choice Requires=""wp14""><wp:positionV relativeFrom=""page"">
					|<wp14:pctPosVOffset>_Проценты_</wp14:pctPosVOffset></wp:positionV></mc:Choice>
					|<mc:Fallback><wp:positionV relativeFrom=""page""><wp:posOffset>_СмещениеПоВертикали_</wp:posOffset>
					|</wp:positionV></mc:Fallback></mc:AlternateContent>");
					
				Если СмещениеПоВертикали = "MAX" Тогда
					
					ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_СмещениеПоВертикали_", 
						Формат(8870000 - РасстояниеYНакопленное, "ЧДЦ=0; ЧН=0; ЧГ=0;"));
					ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_Проценты_", 
						Формат( (83 - СмещениеПоYНакопленное)*1000, "ЧДЦ=0; ЧН=0; ЧГ=0;"));
					
				Иначе //MIN
				 
					ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_СмещениеПоВертикали_", 
						Формат(РасстояниеYНакопленное, "ЧДЦ=0; ЧН=0; ЧГ=0;"));
					ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_Проценты_", 
						Формат( (СмещениеПоYНакопленное)*1000, "ЧДЦ=0; ЧН=0; ЧГ=0;"));
				 
				КонецЕсли;			
							
			КонецЕсли;			
			
		КонецЕсли;
		
		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ОтносительноЧегоСчитатьВертикальноеСмещение_", ОтносительноЧегоСчитатьВертикальноеВыравнивание);
		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ОтносительноЧегоСчитатьГоризонтальноеСмещение_", ОтносительночегоСчитатьГоризонтальноеВыравнивание);
		
		ИДкартинки = 0;
		СчетчикСвязей = 0;
		СохранитьИзображениеВоВнутреннейСтруктуреDocx(ВременнаяПапкаДляРазархивирования, 
			ДвоичныеДанныеКартинки, ИДкартинки, СчетчикСвязей, Секция);
			
		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ИДКартинкиВоВнутреннейПапке_", "rId" + Строка(СчетчикСвязей + 1));
		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ВысотаШтрихкода_", 
			Формат(ВысотаШтрихкода,"ЧДЦ=0; ЧГ=0"));

		ТекстДляВставкиШтампа = СтрЗаменить(ТекстДляВставкиШтампа, "_ШиринаШтрихкода_", 
			Формат(ШиринаШтрихкодаЗначение,"ЧДЦ=0; ЧГ=0"));
		
		Если ТекстДляВставкиШтампаИтоговый <> "" Тогда
			ТекстДляВставкиШтампаИтоговый = ТекстДляВставкиШтампаИтоговый + " ";
		КонецЕсли;	
		ТекстДляВставкиШтампаИтоговый = ТекстДляВставкиШтампаИтоговый + ТекстДляВставкиШтампа;
		
		НомерПодписиПолный = НомерПодписиПолный + 1;
		СмещениеПоYНакопленное = СмещениеПоYНакопленное + СмещениеПоYНаОднуПодпись;
		РасстояниеYНакопленное = РасстояниеYНакопленное + ПозицияYНаПодпись;
		
		НомерПодписи = НомерПодписи + 1;
		Если НомерПодписи > ЧислоШтамповВСтолбце Тогда
			НомерПодписи = 0;
			ТекСтолбец = ТекСтолбец + 1;
			СмещениеПоXНакопленное = СмещениеПоXНакопленное + СмещениеПоXНаОднуПодпись;
			РасстояниеXНакопленное = РасстояниеXНакопленное + ПозицияXНаПодпись;
			
			СмещениеПоYНакопленное = 0;
			РасстояниеYНакопленное = 0;
			
		КонецЕсли;	
		
	КонецЦикла;

	ИмяФайлаДокумента = ВременнаяПапкаДляРазархивирования + "/word/document.xml";
	ИмяФайлаДокументаНовый = ВременнаяПапкаДляРазархивирования + "/word/document_update.xml";
	
	Если Секция = "header" Тогда

		ИмяФайлаДокумента = ВременнаяПапкаДляРазархивирования + "/word/header2.xml";
		ИмяФайлаДокументаНовый = ВременнаяПапкаДляРазархивирования + "/word/header2_update.xml";
			
	ИначеЕсли Секция = "footer" Тогда

		ИмяФайлаДокумента = ВременнаяПапкаДляРазархивирования + "/word/footer2.xml";
		ИмяФайлаДокументаНовый = ВременнаяПапкаДляРазархивирования + "/word/footer2_update.xml";
			
	КонецЕсли;
	

	ЧтениеТекста = Новый ЧтениеТекста(
		ИмяФайлаДокумента,
		КодировкаТекста.UTF8);
	ТекстXml = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	
	// проверим наличие namespace
	ПозицияNamespace = СтрНайти(ТекстXml, "http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing");
	ПозицияNamespaceWP = СтрНайти(ТекстXml, "xmlns:wp=");
	Если ПозицияNamespace = 0 И ПозицияNamespaceWP = 0 Тогда // вставим его
	
		СтрокаДок = "<w:document";
		ПозицияДок = СтрНайти(ТекстXml, СтрокаДок);
		
		Если ПозицияДок <> 0 Тогда // вставим его
		
			ПозицияКонцаДок = ПозицияДок + СтрДлина(СтрокаДок);
	
			ТекстXml = Лев(ТекстXml, ПозицияКонцаДок - 1)
			 + " xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing"" "
			  + Сред(ТекстXml, ПозицияКонцаДок);
			  
		КонецЕсли;  
		
	КонецЕсли;	

	// проверим наличие namespace
	ПозицияNamespace = СтрНайти(ТекстXml, "http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing");
	ПозицияNamespaceWP = СтрНайти(ТекстXml, "xmlns:wp14=");
	Если ПозицияNamespace = 0 И ПозицияNamespaceWP = 0 Тогда // вставим его
	
		СтрокаДок = "<w:document";
		ПозицияДок = СтрНайти(ТекстXml, СтрокаДок);
		
		Если ПозицияДок <> 0 Тогда // вставим его
		
			ПозицияКонцаДок = ПозицияДок + СтрДлина(СтрокаДок);
	
			ТекстXml = Лев(ТекстXml, ПозицияКонцаДок - 1)
			 + " xmlns:wp14=""http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing"" "
			  + Сред(ТекстXml, ПозицияКонцаДок);
			  
		КонецЕсли;  
		
	КонецЕсли;	

	Если СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Первая Тогда
	
		СтрокаБОДИ = "<w:body>";
		ПозицияТэгаBODY = СтрНайти(ТекстXml, СтрокаБОДИ);
		Если ПозицияТэгаBODY <> 0 Тогда
			
			ПозицияТэгаBODYКонец = ПозицияТэгаBODY + СтрДлина(СтрокаБОДИ);
			
			ТекстXml = Лев(ТекстXml, ПозицияТэгаBODYКонец - 1)
			 + ТекстДляВставкиШтампаИтоговый
			  + Сред(ТекстXml, ПозицияТэгаBODYКонец);
		КонецЕсли;
				
	ИначеЕсли СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Каждая Тогда
		
		// в колонтитул					
		ПозицияНачала = СтрНайти(ТекстXml, "<w:p");
		СтрокаКонца = "</w:hdr>";

		ПозицияТэгаBODY = СтрНайти(ТекстXml, СтрокаКонца);
		Если ПозицияТэгаBODY <> 0 Тогда
			
			ТекстXml = Лев(ТекстXml, ПозицияНачала - 1)
			 + "<w:p w:rsidR=""009C4730"" w:rsidRDefault=""009C4730""><w:pPr><w:pStyle w:val=""a3""/></w:pPr><w:bookmarkStart w:id=""0"" w:name=""_GoBack""/><w:r><w:rPr><w:noProof/><w:lang w:eastAsia=""ru-RU""/></w:rPr>"
			 + ТекстДляВставкиШтампаИтоговый
			 + "</w:r><w:bookmarkEnd w:id=""0""/></w:p><w:p w:rsidR=""009C4730"" w:rsidRDefault=""009C4730""><w:pPr><w:pStyle w:val=""a3""/></w:pPr></w:p>"
			  + Сред(ТекстXml, ПозицияТэгаBODY);
			
		КонецЕсли;	
		
	ИначеЕсли СтраницаВставкиШтампаЭП = Перечисления.СтраницаВставкиКартинки.Последняя Тогда
			
		ПозицияТэгаBODY = СтрНайти(ТекстXml, "</w:body>");
		Если ПозицияТэгаBODY <> 0 Тогда
			
			ТекстXml = Лев(ТекстXml, ПозицияТэгаBODY - 1)
			 + ТекстДляВставкиШтампаИтоговый
			  + Сред(ТекстXml, ПозицияТэгаBODY);
			
		КонецЕсли;	

	КонецЕсли;
	
	ЗаписьТекста = Новый ЗаписьТекста(
		ИмяФайлаДокументаНовый,
		КодировкаТекста.UTF8);
	ЗаписьТекста.Записать(ТекстXml);
	ЗаписьТекста.Закрыть();
	
	
	АвтозаполнениеШаблоновФайловКлиентСервер.ЗаменитьПространствоИменR(
		ИмяФайлаДокументаНовый);
	
	ПереместитьФайл(ИмяФайлаДокументаНовый, 
		ИмяФайлаДокумента);
	УдалитьФайлы(ИмяФайлаДокументаНовый);
	
	Архиватор = Новый ЗаписьZipФайла(ВременныйZIPФайл, "", "");
	Архиватор.Добавить(ВременнаяПапкаДляРазархивирования + "\*.*", РежимСохраненияПутейZIP.СохранятьОтносительныеПути, РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);
	Архиватор.Записать();

	ПереместитьФайл(ВременныйZIPФайл, НовыйПутьКФайлу);
	УдалитьФайлы(ВременнаяПапкаДляРазархивирования);	
	УдалитьФайлы(СтарыйПутьКФайлу);
	УдалитьФайлы(ВременныйZIPФайл);
	
	ДвоичныеДанныеЗаполненногоФайла = Новый ДвоичныеДанные(НовыйПутьКФайлу);
	УдалитьФайлы(НовыйПутьКФайлу);
	Возврат ДвоичныеДанныеЗаполненногоФайла;
	
КонецФункции
