
&ИзменениеИКонтроль("СрокИсполненияПоДлительности")
Функция ЦППК_СрокИсполненияПоДлительности(ПараметрыДлительностиИсполнения)

	СрокИсполнения = Дата(1,1,1);

	Дни = ПараметрыДлительностиИсполнения.Дни;
	Часы = ПараметрыДлительностиИсполнения.Часы;
	Минуты = ПараметрыДлительностиИсполнения.Минуты;
	ДатаОтсчета = ПараметрыДлительностиИсполнения.ДатаОтсчета;
	ГрафикРаботы = ПараметрыДлительностиИсполнения.ГрафикРаботы;

	Если Дни = 0 И Часы = 0 И Минуты = 0 Тогда
		Возврат СрокИсполнения;
	КонецЕсли;

	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ГрафикРаботы", ГрафикРаботы);

	СрокиИсполненияПроцессов.СкорректироватьДатуОтсчета(ДатаОтсчета, ДопПараметры);

	ИспользоватьДатуИВремяВСрокахЗадач = 
	ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");

	Если ЗначениеЗаполнено(ГрафикРаботы) Тогда

		РеквизитыГрафикаРаботы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ГрафикРаботы, "Календарь, КоличествоРабочихЧасовВДне");

		Календарь = РеквизитыГрафикаРаботы.Календарь;
		КоличествоРабочихЧасовВДне = РеквизитыГрафикаРаботы.КоличествоРабочихЧасовВДне;

		Если ИспользоватьДатуИВремяВСрокахЗадач Тогда

			СрокВСекундах = Дни * 3600 * КоличествоРабочихЧасовВДне + Часы * 3600 + Минуты * 60;

			ДатаНачала = ДатаОтсчета;
			ДатаОкончания = КалендарныеГрафики.ПолучитьДатуПоКалендарю(Календарь, ДатаОтсчета, Дни);
			ДатаОкончания = КонецДня(ДатаОкончания);

			Пока СрокВСекундах > 0 Цикл

				ИнтервалыРабочегоВремени = ГрафикиРаботы.СформироватьТаблицуРабочегоВремени(
				ГрафикРаботы, ДатаНачала, ДатаОкончания);

				Для Каждого Интервал Из ИнтервалыРабочегоВремени Цикл

					Если СрокВСекундах = 0 Тогда
						Прервать;
					КонецЕсли;

					Если СрокВСекундах > Интервал.Длительность Тогда
						СрокВСекундах = СрокВСекундах - Интервал.Длительность;
					Иначе
						СрокИсполнения = Интервал.ДатаНачала + СрокВСекундах;
						СрокВСекундах = 0;
					КонецЕсли;

				КонецЦикла;

				Если СрокВСекундах = 0 Тогда
					Прервать;
				КонецЕсли;

				ДатаНачала = ДатаОкончания;
				ДатаОкончания = КалендарныеГрафики.ПолучитьДатуПоКалендарю(
				Календарь, ДатаОкончания, 2);

				ДатаОкончания = КонецДня(ДатаОкончания);

			КонецЦикла;

		Иначе
			// Срок исполнения с учетом того, что время должно равняться концу дня.
			СрокИсполнения = КалендарныеГрафики.ПолучитьДатуПоКалендарю(Календарь, ДатаОтсчета, Дни - 1);
			СрокИсполнения = КонецДня(СрокИсполнения);
		КонецЕсли;

	Иначе

		СрокВСекундах = Дни * 86400;
		Если ИспользоватьДатуИВремяВСрокахЗадач Тогда
			СрокВСекундах = СрокВСекундах + Часы * 3600 + Минуты * 60;
		Иначе
			// Корректировка срока на последнюю секунду дня.
			// Предполагается, что если не используется время в сроках, то оно
			// равно концу дня.
			СрокВСекундах = СрокВСекундах - 1;
		КонецЕсли;

		СрокИсполнения = ДатаОтсчета + СрокВСекундах;

	КонецЕсли;
	
	#Вставка
	//++AxelSoft Шарапова 30.10.2024 САНФ-029987
	Если Дни = 0 И (Часы > 0 ИЛИ Минуты > 0) Тогда		
		Возврат СрокИсполнения;				
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СрокИсполнения) Тогда		
		СрокИсполнения = ЦППК_ОбщийМодульВызовСервера.ОбновитьСрокПоДаннымГраницыВремениСрокаИсполнения(СрокИсполнения);
	КонецЕсли;
	//--AxelSoft Шарапова 30.10.2024 САНФ-029987
	#КонецВставки
	
	Возврат СрокИсполнения;

КонецФункции

&ИзменениеИКонтроль("СкорректироватьДатуОтсчета")
Процедура ЦППК_СкорректироватьДатуОтсчета(ДатаОтсчета, ДопПарметры)

	ГрафикРаботы = ДопПарметры.ГрафикРаботы;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач") Тогда

		// Убираем секунды из даты отсчета
		СрокиИсполненияПроцессовКлиентСервер.УбратьСекундыВДате(ДатаОтсчета);

		// Смещение даты отсчета по графику работ.
		Если ЗначениеЗаполнено(ГрафикРаботы) Тогда

			ВремяДатыОтсчета = Дата(1,1,1) + Час(ДатаОтсчета) * 3600 + Минута(ДатаОтсчета) * 60;

			ВремяНачалаИОкончанияДатыОтсчета = 
			ГрафикиРаботы.ПолучитьНачалоИОкончаниеРабочегоДня(ДатаОтсчета, ГрафикРаботы);

			// Если время даты отсчета совпадает с окончанием рабочего дня, то смещаем дату отсчета
			// на начало следующего дня.
            #Удаление
			Если ВремяДатыОтсчета = ВремяНачалаИОкончанияДатыОтсчета.ОкончаниеДня Тогда
				ДатаОтсчета = ДатаОтсчета + 1;
			КонецЕсли;
            #КонецУдаления
            #Вставка 
			//++AxelSoft Шарапова 29.04.2025 САНФ-033681
			ЦППК_ДатаОтсчета = ДатаОтсчета;
			//--AxelSoft Шарапова 29.04.2025 САНФ-033681
			#КонецВставки
			// Смещаем дату отсчета к первому времени раб. дня.
			ДатаОтсчета = ГрафикиРаботы.ПолучитьПервоеРабочееВремяДня(ГрафикРаботы, ДатаОтсчета);
            #Вставка 
			//++AxelSoft Шарапова 29.04.2025 САНФ-033681
			Если НачалоДня(ЦППК_ДатаОтсчета) = НачалоДня(ДатаОтсчета) Тогда
				// Смещаем дату отсчета к следующему раб. дню.
				ДатаОтсчета = КонецДня(ДатаОтсчета) + 1;
				ДатаОтсчета = ГрафикиРаботы.ПолучитьПервоеРабочееВремяДня(ГрафикРаботы, ДатаОтсчета);
			КонецЕсли;
			//--AxelSoft Шарапова 29.04.2025 САНФ-033681
			#КонецВставки

		КонецЕсли;

	Иначе

		ВремяДатыОтсчета = Дата(1,1,1) + Час(ДатаОтсчета) * 3600 + Минута(ДатаОтсчета) *60;

		Если ЗначениеЗаполнено(ГрафикРаботы) Тогда

			ВремяНачалаИОкончанияДатыОтсчета = 
			ГрафикиРаботы.ПолучитьНачалоИОкончаниеРабочегоДня(ДатаОтсчета, ГрафикРаботы);

			Если ВремяДатыОтсчета > ВремяНачалаИОкончанияДатыОтсчета.НачалоДня Тогда
				ДатаОтсчета = НачалоДня(ДатаОтсчета) + 86400;
			Иначе
				ДатаОтсчета = НачалоДня(ДатаОтсчета);
			КонецЕсли;

			// Смещение даты отсчета по графику работ.
			ДатаОтсчета = ГрафикиРаботы.ПолучитьПервоеРабочееВремяДня(ГрафикРаботы, ДатаОтсчета);
			ДатаОтсчета = НачалоДня(ДатаОтсчета);

		Иначе
			// Смещение даты отсчета на начало следующего дня, если
			// дата отсчета больше начала рабочего дня (9.00).
			Если ВремяДатыОтсчета > Дата(1,1,1) + 9 * 3600 Тогда
				ДатаОтсчета = НачалоДня(ДатаОтсчета) + 86400;
			Иначе
				ДатаОтсчета = НачалоДня(ДатаОтсчета);
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры
