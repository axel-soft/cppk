Процедура ЦППК_ОбработатьОшибкуРелиза(КонтекстВыполненияЗадачи) Экспорт

	Если ТипЗнч(КонтекстВыполненияЗадачи.ДействияЗадач[0]) = Тип("ДокументСсылка.ДействиеЗадачи") Тогда
	
		ДействиеЗадачиОбъект = КонтекстВыполненияЗадачи.ДействияЗадач[0].ПолучитьОбъект();
		ДействиеЗадачиОбъект.РезультатДействия = Справочники.РезультатыДействийЗадач.ПеренесенСрок;
		ДействиеЗадачиОбъект.СостояниеУчастникаЗадачи = Справочники.СостоянияУчастниковЗадач.ПеренесенСрок;
		ДействиеЗадачиОбъект.ОбменДанными.Загрузка = Истина;
		ДействиеЗадачиОбъект.Записать();
		
	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("ОтобразитьВыборПомощникаПриНеобходимости")
Процедура ЦППК_ОтобразитьВыборПомощникаПриНеобходимости(ДействияЗадач, РезультатДействия, ПараметрыВыполнения, ДанныеВыполнения)

	Для Каждого ДействиеЗадачи Из ДействияЗадач Цикл
		Если ДействиеЗадачи.ВидДействия = Справочники.ВидыДействийЗадач.Рассмотреть 
			И РезультатДействия = ПредопределенноеЗначение("Справочник.РезультатыДействийЗадач.НаправленоПомощнику")
			И Не ЗначениеЗаполнено(ПараметрыВыполнения.ОбрабатывающийРезолюцию) Тогда

			АктуальныеПомощники = ЗамещающиеИПомощники.ПодходящиеЗамещения(
			ДействиеЗадачи,
			Перечисления.ВидыЗамещения.Помощники);
			АктуальныхПомощниковБолееОдного = АктуальныеПомощники.Количество() > 1;

            #Удаление
			Если АктуальныхПомощниковБолееОдного Тогда
				ДанныеВыполнения.ВыбратьПомощника = Истина;
				ДанныеВыполнения.ТребуетсяИнтерактивноеДействие = Истина;
			КонецЕсли;
			#КонецУдаления
			Прервать;

		КонецЕсли;
	КонецЦикла;

КонецПроцедуры
