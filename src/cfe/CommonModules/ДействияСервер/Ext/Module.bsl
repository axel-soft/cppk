
&После("ВидОбъектаПриСозданииНаСервере")
Процедура ЦППК_ВидОбъектаПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)

	// +ЦППК "2.2.3"  "24.07.2023"
	// "Программный вывод на форму добавленных реквизитов и команд 
	ЦППК_ПодключаемыеКоманды.ЦППК_ПриСозданииНаСервереВидОбъекта(Форма);
	
КонецПроцедуры

&ИзменениеИКонтроль("УстановитьДополнительныеСвойства")
Процедура ЦППК_УстановитьДополнительныеСвойства(Объект) Экспорт
	
	БылиУчастники = Неопределено;
	ПредыдущаяПометкаУдаления = Ложь;
	ПредыдущееПомещеноВИсторию = Ложь;
	
	Объект.ДополнительныеСвойства.Вставить("ЗаписьВНеродномУзлеКод", Ложь);
	Если ОбщегоНазначенияДокументооборот.ЭтоДокументооборотХолдинга() 
		И ПолучитьФункциональнуюОпцию("ИспользоватьКОД")
		И Не ОбщегоНазначенияДокументооборот.ОбъектЭтогоУзла(Объект) И ЗначениеЗаполнено(Объект.Ссылка) Тогда
			
		Объект.ДополнительныеСвойства.Вставить("ЗаписьВНеродномУзлеКод", Истина);
		Объект.ДополнительныеСвойства.Вставить("ВерсияФормата", КОДСервер.ТекущаяВерсияФормата());
		Объект.ДополнительныеСвойства.Вставить(
		"ХэшСуммаОбъекта", КОДСервер.ХешСуммаMD5СериализованногоОбъекта(Объект.Ссылка, ,
			Объект.ДополнительныеСвойства.ВерсияФормата));
			
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
	Иначе
		РеквизитыПрежние = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Объект.Ссылка,
			"Участники, ПометкаУдаления, ПомещеноВИсторию, ОтложенноеНачалоВыполнения,
			|ОтложенноеВыполнениеДата");
		
		БылиУчастники = РеквизитыПрежние.Участники.Выгрузить();
		ПредыдущаяПометкаУдаления = РеквизитыПрежние.ПометкаУдаления;
		ПредыдущееПомещеноВИсторию = РеквизитыПрежние.ПомещеноВИсторию;
		
		Объект.ДополнительныеСвойства.Вставить(
			"ОтложенноеНачалоВыполнения", 
			РеквизитыПрежние.ОтложенноеНачалоВыполнения);
		Объект.ДополнительныеСвойства.Вставить(
			"ОтложенноеВыполнениеДата", 
			РеквизитыПрежние.ОтложенноеВыполнениеДата);
	КонецЕсли;
	
	Объект.ДополнительныеСвойства.Вставить("БылиУчастники", БылиУчастники);
	Объект.ДополнительныеСвойства.Вставить("ПредыдущаяПометкаУдаления", ПредыдущаяПометкаУдаления);
	Объект.ДополнительныеСвойства.Вставить("ПредыдущееПомещеноВИсторию", ПредыдущееПомещеноВИсторию);

	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			Объект.ДополнительныеСвойства, "БылиУчастники") <> Неопределено Тогда
		
		Удаленные = Новый Массив;
		Добавленные = Новый Массив;
		
		Для Каждого СтараяСтрока Из Объект.ДополнительныеСвойства.БылиУчастники Цикл
			УдаленныеСтроки = Объект.Участники.НайтиСтроки(Новый Структура("Идентификатор, Участник", 
				СтараяСтрока.Идентификатор, СтараяСтрока.Участник));
			Если УдаленныеСтроки.Количество() = 0 Тогда
				Удаленные.Добавить(
					Новый Структура("Идентификатор, Участник, Защищенный",
					СтараяСтрока.Идентификатор, СтараяСтрока.Участник, СтараяСтрока.Защищенный));
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого НоваяСтрока Из Объект.Участники Цикл
			Если ЭтоДействиеСУчетомФункцийУчастников(Объект) Тогда
				ФункцияУчастника = НоваяСтрока.ФункцияУчастника;
			Иначе
				ФункцияУчастника = ФункцияДействияУчастникаПоУмолчанию(Объект);
			КонецЕсли;
			
			#Удаление
			СтараяСтрока =
				Объект.ДополнительныеСвойства.БылиУчастники.Найти(НоваяСтрока.Участник, "Участник");
			Если СтараяСтрока = Неопределено Тогда
				Добавленные.Добавить(Новый Структура("Идентификатор, Участник, ФункцияУчастника",
					НоваяСтрока.Идентификатор, НоваяСтрока.Участник, ФункцияУчастника));
			КонецЕсли;
			#КонецУдаления
			#Вставка
			//++AxelSoft Шарапова 30.10.2024 САНФ-029159
			СтараяСтрока = Объект.ДополнительныеСвойства.БылиУчастники.НайтиСтроки(Новый Структура("Идентификатор, Участник", 
			НоваяСтрока.Идентификатор, НоваяСтрока.Участник));
			Если СтараяСтрока.Количество() = 0 Тогда
				Добавленные.Добавить(Новый Структура("Идентификатор, Участник, ФункцияУчастника",
				НоваяСтрока.Идентификатор, НоваяСтрока.Участник, ФункцияУчастника));
			КонецЕсли;
			//--AxelSoft Шарапова 30.10.2024 САНФ-029159
			#КонецВставки 
		КонецЦикла;
		
		Объект.ДополнительныеСвойства.Вставить("Удаленные", Удаленные);
		Объект.ДополнительныеСвойства.Вставить("Добавленные", Добавленные);
		
	КонецЕсли;
	
	Объект.ДополнительныеСвойства.Вставить("ЭтоДействиеСЭтапами", 
		ДействияКлиентСервер.ЭтоДействиеСЭтапами(Объект.Ссылка));
	
	// Надо проверить права добавленных участников на предмет
	Если Объект.ДополнительныеСвойства.Свойство("Добавленные") Тогда
		Участники = РаботаСРабочимиГруппами.ПолучитьПустуюТаблицуУчастников();
		Для Каждого Добавленный Из Добавленные Цикл
			НовСтр = Участники.Добавить();
			НовСтр.Участник = Добавленный.Участник;
		КонецЦикла;
		ТекстОшибки = РаботаСРабочимиГруппами.ПроверитьПраваУчастниковРабочейГруппыНаОбъект(
			Объект.Предмет, Участники);
		
		Если ЗначениеЗаполнено(ТекстОшибки) Тогда
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&ИзменениеИКонтроль("ИзменениеДействияРазрешено")
Функция ЦППК_ИзменениеДействияРазрешено(Действие, ПредметДействия)

	Если Не ЗначениеЗаполнено(ПредметДействия) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	#Вставка  
	//++AxelSoft Шарапова 25.03.2025 САНФ-032893
	Если РольДоступна("ЦППК_РазрешитьИзменятьНастройкиОбработкиДокумента") Тогда
		Возврат Истина;
	КонецЕсли;
	//--AxelSoft Шарапова 25.03.2025 САНФ-032893
	#КонецВставки

	ПраваДоступа = ДокументооборотПраваДоступа.ПраваПользователяПоОбъекту(ПредметДействия);
	Состояние = РегистрыСведений.СостоянияДействий.СостояниеДействия(Действие);

	Возврат ПраваДоступа.Изменение
	И ((Состояние <> Перечисления.СостоянияВыполненияДействий.Завершено
	И Состояние <> Перечисления.СостоянияВыполненияДействий.Пропущено
	И Состояние <> Перечисления.СостоянияВыполненияДействий.Остановлено)
	Или ДействиеИсполняетсяСНовымиУчастниками(Действие));

КонецФункции

&ИзменениеИКонтроль("РазрешеноИзменятьЗащищенныхУчастников")
Функция ЦППК_РазрешеноИзменятьЗащищенныхУчастников()

	#Вставка  
	//++AxelSoft Шарапова 25.03.2025 САНФ-032893
	Если РольДоступна("ЦППК_РазрешитьИзменятьНастройкиОбработкиДокумента") Тогда
		Возврат Истина;
	КонецЕсли;
	//--AxelSoft Шарапова 25.03.2025 САНФ-032893
	#КонецВставки
	
	Возврат Пользователи.ЭтоПолноправныйПользователь();

КонецФункции
