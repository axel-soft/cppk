
&ИзменениеИКонтроль("ОбработатьМассивФайловИзWordВHtml")
Процедура ЦППК_ОбработатьМассивФайловИзWordВHtml(МассивФайловПараллельногоСогласования,
	ПараметрыВызова) Экспорт      
	
	Если Не ОбщегоНазначенияКлиент.ЭтоWindowsКлиент() Тогда
		Возврат;
	КонецЕсли;	
	
	УникальныйИдентификатор = ПараметрыВызова.УникальныйИдентификатор;
	СоздаватьФайлы = ПараметрыВызова.СоздаватьФайлы;
	ВызовИзОбработкиПараллелРан = ПараметрыВызова.ВызовИзОбработкиПараллелРан;
	Задача = ПараметрыВызова.Задача;
	СпособСогласованияВРежимеЗамечаний = ПараметрыВызова.СпособСогласованияВРежимеЗамечаний;
	 
	ИспользоватьOpenNoRepairDialog = Истина; // только для Word

	ЗаполнитьАвтозаполняемыеФайлы(МассивФайловПараллельногоСогласования, УникальныйИдентификатор);
	
	wdStatisticPages = 2;

	ПороговоеЧислоСтраницФайлаСогласованияДляДолгойОчереди = СогласованиеВРежимеЗамечанийКлиентСерверПереопределяемый.ПороговоеЧислоСтраницФайлаСогласованияДляДолгойОчереди();
	ПредельноеЧислоСтраницФайлаСогласованияДляHtmlОбраза  = СогласованиеВРежимеЗамечанийКлиентСерверПереопределяемый.ПредельноеЧислоСтраницФайлаСогласованияДляHtmlОбраза();
	ЧислоСтраницДляПредпросмотраПорции = ПараметрыВызова.ЧислоСтраницДляПредпросмотраПорции;

	ТипОчереди = ПредопределенноеЗначение("Перечисление.ТипОчередиПодготовкиКСогласованию.Быстрая"); // на всю задачу, а не отдельный файл

	Для Каждого СтруктураФайла Из МассивФайловПараллельногоСогласования Цикл

		ЧислоСтраниц = 0;

		ПутьКаталога = КаталогВременныхФайлов();
		УникИд = Новый УникальныйИдентификатор;
		ПутьКаталога = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ПутьКаталога);
		ПутьКаталога = ПутьКаталога + Строка(УникИд);
		ПутьКаталога = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ПутьКаталога);
		СоздатьКаталог(ПутьКаталога);       
		
		ПутьКаталогаКартинок = "";      
		
		ИмяДляПоказа = СтруктураФайла.Наименование + "." + СтруктураФайла.Расширение;

		ДопустимаяДлинаИмениФайла = 50;
		ИмяБезРасширенияУрезанное = СтруктураФайла.Наименование;

		Если СтрДлина(ИмяБезРасширенияУрезанное) > ДопустимаяДлинаИмениФайла Тогда
			ИмяБезРасширенияУрезанное = Лев(ИмяБезРасширенияУрезанное, ДопустимаяДлинаИмениФайла);
			ИмяБезРасширенияУрезанное = СокрЛП(ИмяБезРасширенияУрезанное);
		КонецЕсли;

		ИмяПростое = "nfile";
		ИмяБезРасширенияУрезанное = ИмяПростое; 
		ИмяФайлаHTML = ИмяПростое + ".htm";
		ПолныйПутьФайлаHTML = ПутьКаталога + ИмяФайлаHTML;
		МаскаФайлаДляOpenOffice = ИмяПростое + "_htm_";

		ПолныйПутьФайла = ПутьКаталога + ИмяБезРасширенияУрезанное + "." + СтруктураФайла.Расширение;
		ИмяФайла = ИмяБезРасширенияУрезанное + "." + СтруктураФайла.Расширение;
		АдресФайла = СтруктураФайла.АдресВременногоХранилищаФайлаDoc;
		
		НовыйПутьКФайлу2 = "";

		ТекстПояснения = СтрШаблон(НСтр("ru = 'Выполняется получение с сервера файла ""%1"".
										|Пожалуйста, подождите...'"), ИмяДляПоказа);
		Состояние(ТекстПояснения);

		Если Не ПолучитьФайл(АдресФайла, ПолныйПутьФайла, Ложь) Тогда
			СогласованиеВРежимеЗамечанийСервер.ЗаписьЖурналаРегистрацииСервер_Информация(
				"Если Не ПолучитьФайл(");
			Продолжить;
		КонецЕсли;

		ТекстПояснения = СтрШаблон(НСтр("ru = 'Выполняется преобразование файла ""%1"" в HTML.
										|Пожалуйста, подождите...'"), ИмяДляПоказа);
		Состояние(ТекстПояснения);

		WordApp = Неопределено;  
		Excel = Неопределено;  
		Книга = Неопределено; 
		ЭтоExcel = Ложь;     
		
		Builder = Неопределено; 
		
		ОбъектServiceManager = Неопределено;
		ИнстансDesktop = Неопределено;
		ПараметрыДокумента = Неопределено;
		
		ПутьКФайлу1 = "";      
		МассивHTMLФайлов = Новый Массив;

		Попытка

			 // основной вариант

					Если СпособСогласованияВРежимеЗамечаний 
						= ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.MicrosoftOfficeWord") Тогда

					#Если ТонкийКлиент Тогда      
						Если СтруктураФайла.Расширение = "doc" Или СтруктураФайла.Расширение = "docx" Или СтруктураФайла.Расширение = "odt" Тогда
							
							WordApp = Новый COMОбъект("Word.Application");
							WordApp.WordBasic.DisableAutoMacros(1);
							
							WordApp.Visible = 1;
							WordApp.Activate();
			
							Если ИспользоватьOpenNoRepairDialog = Ложь Тогда
			
								Документ1 = WordApp.Documents.Open(ПолныйПутьФайла);
			
							Иначе
								OpenAndRepair = Истина; // 13-й аргумент
								Документ1 = WordApp.Documents.OpenNoRepairDialog(
									ПолныйПутьФайла, , , , , , , , , , , , OpenAndRepair);
			
							КонецЕсли;

							WordApp.ActiveWindow.ActivePane.View.Type = 3; // wdPrintView = 3			
							ЧислоСтраниц = Документ1.ComputeStatistics(wdStatisticPages);
			
							
						ИначеЕсли СтруктураФайла.Расширение = "xls" Или СтруктураФайла.Расширение = "xlsx" Или СтруктураФайла.Расширение = "ods" Тогда
							
							Excel = Неопределено;
						#Если ТонкийКлиент Тогда		
							Excel = Новый COMОбъект("Excel.Application"); 
						#КонецЕсли	
						
							Excel.AutomationSecurity = 3; // msoAutomationSecurityForceDisable = 3
							ЭтоExcel = Истина;
							
							Книга = Excel.WorkBooks.Open(ПолныйПутьФайла);
							
							ЧислоСтраниц = 1; // фиктивно
							
						КонецЕсли;
#КонецЕсли
						
					ИначеЕсли СпособСогласованияВРежимеЗамечаний = ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.OpenOfficeOrgWriter")
					 И НРег(СтруктураФайла.Расширение) <> "docx" Тогда
							
#Если ТонкийКлиент Тогда		
						ОбъектServiceManager = Новый COMОбъект("com.sun.star.ServiceManager");
					
						ИнстансDesktop = ОбъектServiceManager.createInstance("com.sun.star.frame.Desktop");
			
						// Параметры открытия: отключение исполнения макросов.
						ПараметрыДокумента = Новый COMSafeArray("VT_VARIANT", 1);
#КонецЕсли	
						
						РежимЗапуска = ПрисвоитьЗначениеСвойству(ОбъектServiceManager,
							"MacroExecutionMode",
							0); // const short NEVER_EXECUTE = 0
						ПараметрыДокумента.SetValue(0, РежимЗапуска);
					
						// Открыть документ OpenOffice.
						Документ1 = ИнстансDesktop.loadComponentFromURL(ПреобразоватьВURL(ПолныйПутьФайла), 
							"_blank", 0, ПараметрыДокумента);
					
						ЧислоСтраниц = Документ1.CurrentController.PageCount;

					ИначеЕсли СпособСогласованияВРежимеЗамечаний 
						= ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.Р7Builder") Тогда
							
#Если ТонкийКлиент Тогда		
						Builder = Новый COMОбъект("R7.Builder");
						
						Builder.Initialize();

						Builder.OpenFile(ПолныйПутьФайла, "");
						
#КонецЕсли	
						
						ЧислоСтраниц = 1;  //Документ1.CurrentController.PageCount;
						
					КонецЕсли;	

			Если ЧислоСтраниц > ПредельноеЧислоСтраницФайлаСогласованияДляHtmlОбраза
				И СпособСогласованияВРежимеЗамечаний <> ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.MicrosoftOfficeWord") 
				Тогда
				
				// пропускаем этот файл
				ТекстСтр = "пропускаем этот файл. " + ПолныйПутьФайла;
				СогласованиеВРежимеЗамечанийСервер.ЗаписьЖурналаРегистрацииСервер_Информация(
					ТекстСтр);

				СтруктураФайла.АдресВременногоХранилищаФайлаHTML = "";

				Если СпособСогласованияВРежимеЗамечаний 
					= ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.MicrosoftOfficeWord") Тогда

					Документ1.Close(0);  // 0 закрыть без сохранения
					WordApp.Quit();
					WordApp = Неопределено;
					
				ИначеЕсли СпособСогласованияВРежимеЗамечаний 
				= ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.OpenOfficeOrgWriter") Тогда	
				
					Документ1.close(-1);        //Закрыть документ без сохранения
					
				 	Документ1     = Неопределено;
				    ИнстансDesktop     = Неопределено;	
				    ОбъектServiceManager = Неопределено;

				ИначеЕсли СпособСогласованияВРежимеЗамечаний 
				= ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.Р7Builder") Тогда	
				
					Builder.CloseFile();
					Builder = Неопределено;
				
				КонецЕсли;

				УдалитьФайлы(ПутьКаталога, ПолучитьМаскуВсеФайлы());
				УдалитьФайлы(ПутьКаталога);

				Продолжить;

			КонецЕсли;

			Если ЧислоСтраниц > ПороговоеЧислоСтраницФайлаСогласованияДляДолгойОчереди Тогда
				ТипОчереди = ПредопределенноеЗначение(
					"Перечисление.ТипОчередиПодготовкиКСогласованию.Долгая");
			КонецЕсли;
			
			
			Если СпособСогласованияВРежимеЗамечаний 
			= ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.MicrosoftOfficeWord") Тогда
			
			
				Если Не ЭтоExcel Тогда  // тут Word
				
					Если ЧислоСтраниц > ЧислоСтраницДляПредпросмотраПорции
						И ЧислоСтраницДляПредпросмотраПорции <> 0 Тогда      
						
						// порционный режим.
						WordApp.Visible = 1;
						WordApp.Activate();
			
						Документ1.WebOptions.Encoding = 1251;//msoEncodingCyrillic
						
						СтраницДробно = ЧислоСтраниц / ЧислоСтраницДляПредпросмотраПорции;
						СтраницЦелое = Цел(СтраницДробно);
						
						ЧислоПорций = СтраницЦелое;
						Если СтраницДробно - СтраницЦелое <> 0 Тогда
							ЧислоПорций = ЧислоПорций + 1;
						КонецЕсли;	
						
						ИмяФайлаСПутемHTML = "";
						
						ВременнаяПапка = ПутьКаталога;  
						
						Для НомерПорции = 0 По ЧислоПорций -1 Цикл
							
							ИмяФайлаСПутемHTMLТекущее = ВременнаяПапка + "doc" + Строка(НомерПорции) + ".htm";  
							
							НомерСтраницыНачало = НомерПорции * ЧислоСтраницДляПредпросмотраПорции + 1;
							
							ЭтоПоследняяСтраница = Ложь;
							Если НомерПорции = ЧислоПорций -1 Тогда
								НомерСтраницыКонец  = ЧислоСтраниц + 1; 
								ЭтоПоследняяСтраница = Истина;  
							Иначе
								НомерСтраницыКонец  = (НомерПорции +1)* ЧислоСтраницДляПредпросмотраПорции + 1;
							КонецЕсли;	
							
							// wdGoToPage 1.  wdGoToAbsolute 1.   1 - номер страницы
							Range1 = Документ1.GoTo(1, 1, НомерСтраницыНачало);
							Range2 = Документ1.GoTo(1, 1, НомерСтраницыКонец);
							
							Если ЭтоПоследняяСтраница Тогда
								Range2.End = Документ1.Content.End;
							КонецЕсли;	
							
							RangeAll = Документ1.Range(Range1.Start, Range2.End);
							RangeAll.Copy();
							
							tmpDoc = WordApp.Documents.Add(,,,Ложь); // видимость = Ложь
							tmpDoc.Range().Paste();
							
							tmpDoc.SaveAs(ИмяФайлаСПутемHTMLТекущее , 10); // wdFormatFilteredHTML = 10	
							tmpDoc.Close(); 	
							
							СконвертироватьHtmlВUtf8ПлюсКартинки(ИмяФайлаСПутемHTMLТекущее, ПутьКаталога);
					
							
							МассивHTMLФайлов.Добавить(ИмяФайлаСПутемHTMLТекущее);
						
						КонецЦикла;     
						
						Документ1.Paragraphs(1).Range.Copy(); // чтобы в буфере не было много
						
						Документ1.Close(0);  // 0 закрыть без сохранения
			
						WordApp.Quit();
						WordApp = Неопределено;
						
					Иначе	
					
						WordApp.Visible = 1;
						WordApp.Activate();
			
						Документ1.WebOptions.Encoding = 1251;//msoEncodingCyrillic
						// wdFormatHTML  8
						Документ1.SaveAs(ПолныйПутьФайлаHTML, 8);
			
						Документ1.Close(0);  // 0 закрыть без сохранения
			
						WordApp.Quit();
						WordApp = Неопределено;                       
						
						СконвертироватьHtmlВUtf8ПлюсКартинки(ПолныйПутьФайлаHTML, ПутьКаталога);
					
					КонецЕсли;
					
				Иначе // Excel
					
					Excel.Visible = Истина;
					
					ВременнаяПапка = ПутьКаталога;  
					
					ОбзорФайловКлиент.HtmlКакФайлИзXls(Книга, ВременнаяПапка, ПолныйПутьФайлаHTML);
					
					Excel.Quit();
					Excel = Неопределено;
					
					СконвертироватьHtmlВUtf8ПлюсКартинки(ПолныйПутьФайлаHTML, ПутьКаталога);
					
				КонецЕсли;
				
			ИначеЕсли СпособСогласованияВРежимеЗамечаний 
			= ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.OpenOfficeOrgWriter") Тогда

				ПараметрыСохранения = Неопределено;
				
#Если ТонкийКлиент Тогда
	
				ПараметрыСохранения = Новый COMSafeArray("VT_VARIANT", 1);
		
				FilterName = ПрисвоитьЗначениеСвойству(ОбъектServiceManager,
					"FilterName",
					"HTML (StarWriter)");
				ПараметрыСохранения.SetValue(0, FilterName);
				
				Документ1.storeToURL(ПреобразоватьВURL(ПолныйПутьФайлаHTML), ПараметрыСохранения);
				
				Документ1.close(-1);        //Закрыть документ без сохранения
				
			 	Документ1     = Неопределено;
			    ИнстансDesktop     = Неопределено;	
			    ОбъектServiceManager = Неопределено;
			    
				СконвертироватьHtmlВUtf8ПлюсКартинки(ПолныйПутьФайлаHTML, ПутьКаталога);
				
#КонецЕсли

			ИначеЕсли СпособСогласованияВРежимеЗамечаний 
			= ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.Р7Builder") Тогда
			
					Builder.SaveFile("html", ПолныйПутьФайлаHTML);
			
					Builder.CloseFile();
					Builder = Неопределено;

			КонецЕсли;

		Исключение

			ПараметрыВызова.БылаОшибкаWord = Истина;
			ПараметрыВызова.ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()) + " " + ПутьКФайлу1;

			Если СпособСогласованияВРежимеЗамечаний 
			= ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.MicrosoftOfficeWord") Тогда
			
#Удаление
				Если WordApp <> Неопределено Тогда
					WordApp.Quit();
				КонецЕсли;
				WordApp = Неопределено;
				
				Если Excel <> Неопределено Тогда				
					Excel.Quit();
				КонецЕсли;	
				Excel = Неопределено;           

				Если Builder <> Неопределено Тогда				
					Builder.CloseFile();
				КонецЕсли;	
				Builder = Неопределено;           
#КонецУдаления
#Вставка
				// ЦППК Горбачев А.В. 24.10.2023
				// Временная обертка под ошибку выхода, необходимо исправить.
				// TODO: Проверить с Атласковой Еленой на ее компьютере.
				Попытка
					
					Если WordApp <> Неопределено Тогда
						WordApp.Quit();
					КонецЕсли;
					WordApp = Неопределено;
					
					Если Excel <> Неопределено Тогда				
						Excel.Quit();
					КонецЕсли;	
					Excel = Неопределено;
					
					Если Builder <> Неопределено Тогда				
						Builder.CloseFile();
					КонецЕсли;	
					Builder = Неопределено;
					
				Исключение
					// Пока нет должной обрабработки исключения.
				КонецПопытки;         
#КонецВставки
				
			КонецЕсли;

			СогласованиеВРежимеЗамечанийСервер.ЗаписьЖурналаРегистрацииСервер(ПараметрыВызова.ТекстОшибки);

			Возврат;

		КонецПопытки;

		МассивКартинок = Новый Массив;
		
		Если СпособСогласованияВРежимеЗамечаний 
			= ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.MicrosoftOfficeWord")
			И МассивHTMLФайлов.Количество() = 0 Тогда
			
			ИмяПодКаталогаКартинок = ИмяБезРасширенияУрезанное;
			ПутьКаталогаКартинок = ПутьКаталога + ИмяПодКаталогаКартинок;
			
			ФайлКаталога = Новый Файл(ПутьКаталогаКартинок);
			Если Не ФайлКаталога.Существует() Тогда
				
				ИмяПодКаталогаКартинок = ИмяБезРасширенияУрезанное + ".files";
				ПутьКаталогаКартинок = ПутьКаталога + ИмяПодКаталогаКартинок;
				
			КонецЕсли;	
			
			МассивКартинок = ПолучитьФайлыКартинокНаДиске(ПутьКаталогаКартинок, СтруктураФайла.Владелец);
			
		ИначеЕсли СпособСогласованияВРежимеЗамечаний 
		= ПредопределенноеЗначение("Перечисление.СпособыСогласованияВРежимеЗамечаний.OpenOfficeOrgWriter") Тогда	
			
			ПутьКаталогаКартинок = ПутьКаталога;
			МассивКартинок = ПолучитьФайлыКартинокНаДиске(
				ПутьКаталогаКартинок, СтруктураФайла.Владелец, МаскаФайлаДляOpenOffice);
			
		КонецЕсли;

		ТекстПояснения = СтрШаблон(НСтр("ru = 'Выполняется передача на сервер файла ""%1"".
										|Пожалуйста, подождите...'"), ИмяФайлаHTML);
		Состояние(ТекстПояснения);

		ПомещаемыеФайлы = Новый Массив;
		
		Если МассивHTMLФайлов.Количество() = 0 Тогда
			МассивHTMLФайлов.Добавить(ПолныйПутьФайлаHTML);
		КонецЕсли;	
		
		Если МассивHTMLФайлов.Количество() <> 0 Тогда
			
			Для Каждого Путь1 Из МассивHTMLФайлов Цикл
				Описание = Новый ОписаниеПередаваемогоФайла(Путь1, "");
				ПомещаемыеФайлы.Добавить(Описание);       
			КонецЦикла;
			
		Иначе	
			Описание = Новый ОписаниеПередаваемогоФайла(ПолныйПутьФайлаHTML, "");
			ПомещаемыеФайлы.Добавить(Описание);          
		КонецЕсли;
		
		ПомещенныеФайлы = Новый Массив;
		ФайлыПомещены = ПоместитьФайлы(
			ПомещаемыеФайлы, ПомещенныеФайлы, , Ложь, //Интерактивно
			УникальныйИдентификатор);

		Если ПомещенныеФайлы.Количество() <> 0 Тогда
			
			НомерБлока = 0;          
			СтруктураФайла.МассивHTMLФайлов = Новый Массив;
			
			Для Каждого Помещенный Из ПомещенныеФайлы Цикл                 
				
				ПутьФайла1 = МассивHTMLФайлов[НомерБлока];
				
				ФайлНаДиске = Новый Файл(ПутьФайла1);
				РазмерHTMLФайла = ФайлНаДиске.Размер();
				ФайлНаДиске = Неопределено;
				
				СтруктПорции = Новый Структура("АдресВременногоХранилищаФайлаHTML, РазмерHTMLФайла, НомерБлока",
					Помещенный.Хранение, РазмерHTMLФайла, НомерБлока);
					
				СтруктураФайла.МассивHTMLФайлов.Добавить(СтруктПорции);
				
				НомерБлока = НомерБлока + 1;
				
			КонецЦикла;
			
		КонецЕсли;

		УдалитьФайлы(ПолныйПутьФайла);
		УдалитьФайлы(ПолныйПутьФайлаHTML);

		Если ЗначениеЗаполнено(НовыйПутьКФайлу2) Тогда
			УдалитьФайлы(НовыйПутьКФайлу2);
		КонецЕсли;

		СтруктураФайла.Вставить("Картинки", Новый Массив);

		Для Каждого ФайлКартинки Из МассивКартинок Цикл

			РасширениеБезТочки = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(
				ФайлКартинки.Расширение);

			СтруктураКартинки = Новый Структура("Имя, Расширение, АдресВременногоХранилища, ИдентификаторВложения, Размер",
				ФайлКартинки.ИмяБезРасширения, РасширениеБезТочки, "", "", ФайлКартинки.Размер());

			Если ЗначениеЗаполнено(ИмяПодКаталогаКартинок) Тогда
				ИдентификаторВложения 
					= СтрЗаменить(ИмяПодКаталогаКартинок, " ", "%20") + "/" + ФайлКартинки.Имя;
			Иначе		
				ИдентификаторВложения = ФайлКартинки.Имя;
			КонецЕсли;		
				
			СтруктураКартинки.ИдентификаторВложения = ИдентификаторВложения;

			ПомещаемыеФайлы = Новый Массив;
			Описание = Новый ОписаниеПередаваемогоФайла(ФайлКартинки.ПолноеИмя, "");
			ПомещаемыеФайлы.Добавить(Описание);

			ПомещенныеФайлы = Новый Массив;
			ФайлыПомещены = ПоместитьФайлы(
				ПомещаемыеФайлы, ПомещенныеФайлы, , Ложь, //Интерактивно

				УникальныйИдентификатор);

			Если ПомещенныеФайлы.Количество() = 1 Тогда
				СтруктураКартинки.АдресВременногоХранилища = ПомещенныеФайлы[0].Хранение;
			КонецЕсли;

			СтруктураФайла.Картинки.Добавить(СтруктураКартинки);

		КонецЦикла;
		
		Если ЗначениеЗаполнено(ПутьКаталогаКартинок) Тогда
			УдалитьФайлы(ПутьКаталогаКартинок, ПолучитьМаскуВсеФайлы());
			УдалитьФайлы(ПутьКаталогаКартинок);
		КонецЕсли;

		УдалитьФайлы(ПутьКаталога, ПолучитьМаскуВсеФайлы());
		УдалитьФайлы(ПутьКаталога);

	КонецЦикла;

	ТекстПояснения = НСтр("ru = 'Выполняется создание на сервере HTML файлов.
						  |Пожалуйста, подождите...'");
	Состояние(ТекстПояснения);
	
	// Тут вызов на сервер, создаем объекты Файл.
	Если СоздаватьФайлы Тогда
		СогласованиеВРежимеЗамечанийСервер.СоздатьHTMLФайлы(МассивФайловПараллельногоСогласования,
			ВызовИзОбработкиПараллелРан, Задача, ТипОчереди);
	Иначе
		СогласованиеВРежимеЗамечанийСервер.ОбновитьHTMLФайлы(МассивФайловПараллельногоСогласования);
	КонецЕсли;

	Состояние();

КонецПроцедуры	
