
&НаСервере
&ИзменениеИКонтроль("ЗаписатьПравилаВБазу")
Функция ЦППК_ЗаписатьПравилаВБазу(ЕстьОшибки)

	// Проверяем что есть правило "ПоУмолчанию" и оно находится в конце списка правил
	ЕстьПравилоПоУмолчанию = Ложь;
	Порядок = -1;
	Для Каждого Строка Из Правила Цикл

		Если Не Строка.ПометкаУдаления И Строка.ПоУмолчанию Тогда
			ЕстьПравилоПоУмолчанию = Истина;
		КонецЕсли;

		Порядок = ?(Порядок > Строка.Порядок, Порядок, Строка.Порядок);

	КонецЦикла;	

	// Проверяется что правил больше одного
	ЧислоПравил = 0;
	Для Каждого Строка Из Правила Цикл
		Если Не Строка.ПометкаУдаления Тогда
			ЧислоПравил = ЧислоПравил + 1;
		КонецЕсли;
	КонецЦикла;	

	Если Не ЕстьПравилоПоУмолчанию И ЧислоПравил <> 0 Тогда

		Строка = Правила.Добавить();
		Строка.Наименование = НСтр("ru = 'По умолчанию'");
		Строка.Комментарий = НСтр("ru = 'Правило создано автоматически и используется для размещения файлов, которые не подходят ни под одно из настроенных правил'");
		Строка.Ответственный = Пользователи.ТекущийПользователь();
		Строка.Порядок = Порядок + 1;
		Строка.ПоУмолчанию = Истина;
		
		#Удаление
		СхемаКомпоновкиДанных = Справочники.ПравилаРазмещенияФайловВТомах.ПолучитьМакет("Версии");
		#КонецУдаления   
		
		#Вставка
		СхемаКомпоновкиДанных = Справочники.ПравилаРазмещенияФайловВТомах.ПолучитьМакет("ЦППК_Версии");
		#КонецВставки
		
		Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
		Строка.НавигационнаяСсылкаНаУсловие = ПоместитьВоВременноеХранилище(Новый ХранилищеЗначения(Настройки), УникальныйИдентификатор);
		
		ЧислоПравил = ЧислоПравил + 1;

	КонецЕсли;

	Если ЧислоПравил = 1 Тогда
		ЕстьОшибки = Истина;
		ТекстОшибки = НСтр("ru = 'Требуется указать минимум 2 правила, либо ни одного.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Правила");
	КонецЕсли;

	// Проверяется, что в группе томов есть хоть один том.
	Для Каждого Строка Из Правила Цикл

		Если Не Строка.ПометкаУдаления Тогда

			Если Не ЗначениеЗаполнено(Строка.ГруппаТомов) Тогда
				ЕстьОшибки = Истина;
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для правила ""%1"" не указана группа томов.'"), Строка.Наименование);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Правила");
			КонецЕсли;	

			ТаблицаТомов = РаботаСФайламиВызовСервера.ПолучитьТаблицуТомов(Строка.ГруппаТомов);
			Если ТаблицаТомов.Количество() = 0 Тогда
				ЕстьОшибки = Истина;
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В группе томов ""%1"" нет ни одного тома'"), Строка.ГруппаТомов);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Правила");
			КонецЕсли;	

		КонецЕсли;

	КонецЦикла;	

	Если ЕстьОшибки Тогда
		Возврат 0;
	КонецЕсли;

	// Удаленные правила пишем отдельно
	Для Каждого Строка Из ПравилаУдаленные Цикл

		// Изменяем существующее правило
		Если Не Строка.Ссылка.Пустая() Тогда 

			Если Строка.Изменен Тогда

				ПравилоОбъект = Строка.Ссылка.ПолучитьОбъект();
				ЗаполнитьЗначенияСвойств(ПравилоОбъект, Строка);

				Если ЗначениеЗаполнено(Строка.НавигационнаяСсылкаНаУсловие) Тогда
					ПравилоОбъект.Условие = ПолучитьИзВременногоХранилища(Строка.НавигационнаяСсылкаНаУсловие);
				КонецЕсли;

				ПравилоОбъект.Записать();

				Строка.Изменен = Ложь;

			КонецЕсли;	

		КонецЕсли;

	КонецЦикла;	

	Для Каждого Строка Из Правила Цикл

		// Создаем новое правило
		Если Строка.Ссылка.Пустая() Тогда 

			ПравилоОбъект = Справочники.ПравилаРазмещенияФайловВТомах.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(ПравилоОбъект, Строка);

			Если ЗначениеЗаполнено(Строка.НавигационнаяСсылкаНаУсловие) Тогда
				ПравилоОбъект.Условие = ПолучитьИзВременногоХранилища(Строка.НавигационнаяСсылкаНаУсловие);
			КонецЕсли;

			ПравилоОбъект.Записать();

		Иначе 

			// Изменяем существующее правило

			Если Строка.Изменен Тогда

				ПравилоОбъект = Строка.Ссылка.ПолучитьОбъект();
				ЗаполнитьЗначенияСвойств(ПравилоОбъект, Строка);

				Если ЗначениеЗаполнено(Строка.НавигационнаяСсылкаНаУсловие) Тогда
					ПравилоОбъект.Условие = ПолучитьИзВременногоХранилища(Строка.НавигационнаяСсылкаНаУсловие);
				КонецЕсли;

				ПравилоОбъект.Записать();

				Строка.Изменен = Ложь;

			КонецЕсли;	

		КонецЕсли;	

	КонецЦикла;	

	Возврат РаботаСФайламиВызовСервера.ПрименитьПравилаДляФормированияОчереди();

КонецФункции
