
&НаСервере
Процедура ЦППК_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)

	//+ЦППК САНФ-023289, 02.02.2023
	// Добавление таблицы прикрепленных файлов и колонки Срок исполнения
	СоздатьДеревоПриложений();
	//-ЦППК
	
КонецПроцедуры

&НаКлиенте
Процедура ЦППК_СписокПриАктивизацииСтрокиПосле(Элемент) //+ЦППК САНФ-023289, 02.02.2023
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		ОбновитьДеревоПриложенияНаСервере(Элементы.Список.ТекущиеДанные.Предмет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПриложенийВыбор(Элемент, СтандартнаяОбработка) //+ЦППК САНФ-023289, 02.02.2023
	
	ТекущиеДанныеСсылка = Элементы["ДеревоПриложений"].ТекущиеДанные.Ссылка;
	Если ТипЗнч(ТекущиеДанныеСсылка) = Тип("СправочникСсылка.Файлы") Тогда		
		
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляОткрытия(ТекущиеДанныеСсылка, Неопределено, 
		УникальныйИдентификатор);
				
		КомандыРаботыСФайламиКлиент.Открыть(ДанныеФайла, УникальныйИдентификатор);
		
		//ПоказатьЗначение(, ПолучитьФайлНаСервере()); 
	ИначеЕсли ТипЗнч(ТекущиеДанныеСсылка) = Тип("СправочникСсылка.ДокументыПредприятия") Тогда	
		ПоказатьЗначение(, ТекущиеДанныеСсылка); 
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьФайлНаСервере(ФайлСсылка) //+ЦППК САНФ-023289, 02.02.2023
	
	Возврат РаботаСФайлами.ДвоичныеДанныеФайла(ФайлСсылка);
	
КонецФункции

&НаСервере
Процедура ОбновитьДеревоПриложенияНаСервере(ДействиеИсполнения) //+ЦППК САНФ-023289, 02.02.2023
	
	ДокументПредприятия = Неопределено;
	
	Если ТипЗнч(ДействиеИсполнения) = Тип("СправочникСсылка.ДокументыПредприятия") Тогда
		ДокументПредприятия = ДействиеИсполнения;
	ИначеЕсли ТипЗнч(ДействиеИсполнения) = Тип("СправочникСсылка.ДействияИсполнения") ИЛИ 
		ТипЗнч(ДействиеИсполнения) = Тип("СправочникСсылка.ДействияОзнакомления") ИЛИ
		ТипЗнч(ДействиеИсполнения) = Тип("СправочникСсылка.ДействияПодписания") ИЛИ
		ТипЗнч(ДействиеИсполнения) = Тип("СправочникСсылка.ДействияРегистрации") ИЛИ
		ТипЗнч(ДействиеИсполнения) = Тип("СправочникСсылка.ДействияСогласования") ИЛИ
		ТипЗнч(ДействиеИсполнения) = Тип("СправочникСсылка.ДействияУтверждения") Тогда
		ДокументПредприятия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДействиеИсполнения, "Предмет");
		
	ИначеЕсли ТипЗнч(ДействиеИсполнения) = Тип("БизнесПроцессСсылка.Исполнение") ИЛИ 
		ТипЗнч(ДействиеИсполнения) = Тип("БизнесПроцессСсылка.КомплексныйПроцесс") ИЛИ
		ТипЗнч(ДействиеИсполнения) = Тип("БизнесПроцессСсылка.Ознакомление") ИЛИ
		ТипЗнч(ДействиеИсполнения) = Тип("БизнесПроцессСсылка.Подписание") ИЛИ
		ТипЗнч(ДействиеИсполнения) = Тип("БизнесПроцессСсылка.Приглашение") ИЛИ
		ТипЗнч(ДействиеИсполнения) = Тип("БизнесПроцессСсылка.Рассмотрение") ИЛИ
		ТипЗнч(ДействиеИсполнения) = Тип("БизнесПроцессСсылка.Регистрация") ИЛИ
		ТипЗнч(ДействиеИсполнения) = Тип("БизнесПроцессСсылка.РешениеВопросовВыполненияЗадач") ИЛИ
		ТипЗнч(ДействиеИсполнения) = Тип("БизнесПроцессСсылка.Согласование") ИЛИ
		ТипЗнч(ДействиеИсполнения) = Тип("БизнесПроцессСсылка.Утверждение") Тогда
		
		ДокументПредприятия_ = ЦППК_ОбщийМодульКлиентСервер.ПолучитьДокументПредприятияПоБизнесПроцессу(Строка(ТипЗнч(ДействиеИсполнения)), ДействиеИсполнения);
		Если ТипЗнч(ДокументПредприятия_) = Тип("СправочникСсылка.ДокументыПредприятия") Тогда
			ДокументПредприятия = ДокументПредприятия_;
		КонецЕсли;
				
	ИначеЕсли ТипЗнч(ДействиеИсполнения) = Тип("ДокументСсылка.Задача") Тогда 
			ДокументПредприятия = ЦППК_ОбщийМодульКлиентСервер.ПолучитьДокументПредприятияПоЗадаче(ДействиеИсполнения);
		
	ИначеЕсли ТипЗнч(ДействиеИсполнения) = Тип("ДокументСсылка.ДействиеЗадачи") Тогда 
			ДокументПредприятия = ЦППК_ОбщийМодульКлиентСервер.ПолучитьДокументПредприятияПоДействиюЗадачи(ДействиеИсполнения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументПредприятия) Тогда
		ТЗ_ДеревоПриложений = РеквизитФормыВЗначение("ДеревоПриложений");
		ТЗ_ДеревоПриложений.Строки.Очистить();
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Файлы.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА Файлы.ТекущаяВерсияРасширение = ""png""
		|			ТОГДА 1
		|		КОГДА Файлы.ТекущаяВерсияРасширение = ""doc""
		|				ИЛИ Файлы.ТекущаяВерсияРасширение = ""docx""
		|			ТОГДА 2
		|		КОГДА Файлы.ТекущаяВерсияРасширение = ""xlsx""
		|				ИЛИ Файлы.ТекущаяВерсияРасширение = ""xls""
		|			ТОГДА 3
		|		КОГДА Файлы.ТекущаяВерсияРасширение = ""csv""
		|			ТОГДА 4
		|		КОГДА Файлы.ТекущаяВерсияРасширение = ""txt""
		|			ТОГДА 5
		|		КОГДА Файлы.ТекущаяВерсияРасширение = ""jpg""
		|				ИЛИ Файлы.ТекущаяВерсияРасширение = ""jpeg""
		|			ТОГДА 6	                                        
		|		КОГДА Файлы.ТекущаяВерсияРасширение = ""pdf""
		|			ТОГДА 7	
		|	КОНЕЦ КАК ТипФайла
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	Файлы.ВладелецФайла = &ВладелецФайла
		|	И (&ОтображатьУдаленные
		|			ИЛИ НЕ Файлы.ПометкаУдаления)";
		
		Запрос.УстановитьПараметр("ВладелецФайла", ДокументПредприятия);
		Запрос.УстановитьПараметр("ОтображатьУдаленные", Ложь);
		
		СтрокаВладелец = ТЗ_ДеревоПриложений.Строки.Добавить();
		СтрокаВладелец.Ссылка = ДокументПредприятия;
		СтрокаВладелец.ТипФайла = ЗаполнитьКартинкуВСтрокуДерева(8);
		
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрокаФайл = СтрокаВладелец.Строки.Добавить();
			СтрокаФайл.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
			СтрокаФайл.ТипФайла = ЗаполнитьКартинкуВСтрокуДерева(ВыборкаДетальныеЗаписи.ТипФайла);
		КонецЦикла;
		
		ЗначениеВРеквизитФормы(ТЗ_ДеревоПриложений, "ДеревоПриложений");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьКартинкуВСтрокуДерева(УсловноеЗначение = Неопределено) //+ЦППК САНФ-023289, 02.02.2023 

	Если УсловноеЗначение = 1 Тогда
		Картинка = БиблиотекаКартинок.ЦППК_PNG;
	ИначеЕсли УсловноеЗначение = 2 Тогда  
		Картинка = БиблиотекаКартинок.ЦППК_DOC;
	ИначеЕсли УсловноеЗначение = 3 Тогда  
		Картинка = БиблиотекаКартинок.ЦППК_XLS;
	ИначеЕсли УсловноеЗначение = 4 Тогда  
		Картинка = БиблиотекаКартинок.ЦППК_CSV;
	ИначеЕсли УсловноеЗначение = 5 Тогда  
		Картинка = БиблиотекаКартинок.ЦППК_TXT;
	ИначеЕсли УсловноеЗначение = 6 Тогда  
		Картинка = БиблиотекаКартинок.ЦППК_JPG;
	ИначеЕсли УсловноеЗначение = 7 Тогда  
		Картинка = БиблиотекаКартинок.ЦППК_PDF;		
	ИначеЕсли УсловноеЗначение = 8 Тогда  
		Картинка = БиблиотекаКартинок.ДокументПроведенКоннекторВерх;
	Иначе
		Картинка = "";
	КонецЕсли;
	
	Возврат Картинка;

КонецФункции

&НаСервере
Процедура СоздатьДеревоПриложений() //+ЦППК САНФ-023289, 02.02.2023

	МассивТипаВыбора = Новый Массив;
	МассивТипаВыбора.Добавить(Тип("ДеревоЗначений"));
	ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ДеревоПриложений", ОписаниеТипаВыбора, "", "ДеревоПриложений"));
	
	МассивТиповТипФайла = Новый Массив;
	МассивТиповТипФайла.Добавить("СправочникСсылка.Файлы");
	МассивТиповТипФайла.Добавить("СправочникСсылка.ДокументыПредприятия");
	
	ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
	ОписаниеТиповДата = Новый ОписаниеТипов("Дата");
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка");
	ОписаниеТиповПользователи = Новый ОписаниеТипов("СправочникСсылка.Пользователи");
	
	ТЗ_ДеревоПриложений = Новый ДеревоЗначений;
	ТЗ_ДеревоПриложений.Колонки.Добавить("ВладелецФайла");
	ТЗ_ДеревоПриложений.Колонки.Добавить("Ссылка", Новый ОписаниеТипов(МассивТиповТипФайла));
	ТЗ_ДеревоПриложений.Колонки.Добавить("ТипФайла", Новый ОписаниеТипов("Картинка"));
	
	Для Каждого Колонка Из ТЗ_ДеревоПриложений.Колонки Цикл
		МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ДеревоПриложений"));
	КонецЦикла;
	
	ИмяКолонки = "ДатаИсполнения";
	//++AxelSoft Шарапова 16.05.2025 САНФ-033999 
	// Переименование колонки Срок исполнения на Дата исполнения
	МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяКолонки, ОписаниеТиповДата, "Исполнители", "Дата исполнения"));
	//--AxelSoft Шарапова 16.05.2025 САНФ-033999
	
	ИзменитьРеквизиты(МассивРеквизитов);      
	
	МассивТЗ = Новый Массив;
	МассивТЗ.Добавить("ИсполнителиБезСостоянияОдин");
	МассивТЗ.Добавить("ИсполнителиБезСостоянияНесколько");
	МассивТЗ.Добавить("ИсполнителиССостояниемОдин");
	МассивТЗ.Добавить("Исполнители");
	
	Для каждого эл Из МассивТЗ Цикл
		НоваяКолонкаТаблицы = Элементы.Добавить(эл + ИмяКолонки, Тип("ПолеФормы"), Элементы[эл]);
		НоваяКолонкаТаблицы.Вид = ВидПоляФормы.ПолеНадписи;
		НоваяКолонкаТаблицы.ПутьКДанным = "Исполнители." + ИмяКолонки;
	КонецЦикла;
	
	элДеревоПриложений = Элементы.Добавить("ДеревоПриложений", Тип("ТаблицаФормы"), Элементы.ГруппаСведенияОКонтроле);
	элДеревоПриложений.ПутьКДанным = "ДеревоПриложений";
	элДеревоПриложений.Отображение = ОтображениеТаблицы.ИерархическийСписок;
	элДеревоПриложений.КоманднаяПанель.Видимость = Ложь;
	элДеревоПриложений.Высота = 1;	
	элДеревоПриложений.ПутьКДаннымКартинкиСтроки = "ДеревоПриложений.ТипФайла";
	
	элПолеДерево = Элементы.Добавить("ДеревоПриложенийСсылка", Тип("ПолеФормы"), элДеревоПриложений);
	элПолеДерево.Вид = ВидПоляФормы.ПолеВвода;
	элПолеДерево.Заголовок = "Прикрепленные файлы";
	элПолеДерево.ПутьКДанным = "ДеревоПриложений.Ссылка";
	элПолеДерево.КартинкаШапки = БиблиотекаКартинок.Скрепка;
	элПолеДерево.ТолькоПросмотр = Истина;
	
	элДеревоПриложений.УстановитьДействие("Выбор","ДеревоПриложенийВыбор");
		
КонецПроцедуры

&НаСервереБезКонтекста
&ИзменениеИКонтроль("ПолучитьДанныеКонтроля")
Функция ЦППК_ПолучитьДанныеКонтроля(КарточкаКонтроля)

	МассивИсполнителей = Новый Массив;

#Удаление
	Для Каждого Строка Из КарточкаКонтроля.Исполнители Цикл
		СтруктураИсполнителя = Новый Структура("Исполнитель, Состояние, Ответственный, Источник, Проконтролировано");
#КонецУдаления
#Вставка
	//Проблема с обновлением карточки контроля, у действий нет источника задачи,
	//поэтому статус возьмем напрямую из действия
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтрольИсполнители.Ссылка КАК Ссылка,
		|	КонтрольИсполнители.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА НЕ ДействиеЗадачи.РезультатДействия ЕСТЬ NULL
		|			ТОГДА ДействиеЗадачи.ДатаВыполнения
		//++AxelSoft Шарапова 29.08.2024 САНФ-028183
		|		КОГДА НЕ дЗадача.РезультатЗадачи ЕСТЬ NULL
		|			ТОГДА дЗадача.ДатаВыполнения
		//--AxelSoft Шарапова 29.08.2024 САНФ-028183
		|		ИНАЧЕ КонтрольИсполнители.ДатаИсполнения
		|	КОНЕЦ КАК ДатаИсполнения,
		|	КонтрольИсполнители.ДатаКонтроля КАК ДатаКонтроля,
		|	КонтрольИсполнители.Идентификатор КАК Идентификатор,
		|	ВЫБОР
		|		КОГДА НЕ ДействиеЗадачи.РезультатДействия ЕСТЬ NULL
		|			ТОГДА ДействиеЗадачи.РезультатДействия = ЗНАЧЕНИЕ(Справочник.РезультатыДействийЗадач.Выполнена)
		//++AxelSoft Шарапова 29.08.2024 САНФ-028183
		|		КОГДА НЕ дЗадача.РезультатЗадачи ЕСТЬ NULL
		|			ТОГДА дЗадача.РезультатЗадачи = ЗНАЧЕНИЕ(Справочник.РезультатыЗадач.Исполнено)
		//--AxelSoft Шарапова 29.08.2024 САНФ-028183
		|		ИНАЧЕ КонтрольИсполнители.Исполнено
		|	КОНЕЦ КАК Исполнено,
		|	КонтрольИсполнители.Исполнитель КАК Исполнитель,
		|	КонтрольИсполнители.Источник КАК Источник,
		|	КонтрольИсполнители.Ответственный КАК Ответственный,
		|	КонтрольИсполнители.Проконтролировано КАК Проконтролировано
		|ИЗ
		|	Справочник.Контроль.Исполнители КАК КонтрольИсполнители
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДействиеЗадачи КАК ДействиеЗадачи
		|		ПО КонтрольИсполнители.Источник = ДействиеЗадачи.Ссылка
		|			И (НЕ КонтрольИсполнители.Исполнено)
		//++AxelSoft Шарапова 29.08.2024 САНФ-028183
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Задача КАК дЗадача
		|		ПО КонтрольИсполнители.Ссылка.Предмет = дЗадача.Ссылка
		|			И (НЕ КонтрольИсполнители.Исполнено)
		//--AxelSoft Шарапова 29.08.2024 САНФ-028183
		|ГДЕ
		|	КонтрольИсполнители.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", КарточкаКонтроля);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Строка = РезультатЗапроса.Выбрать();

	Пока Строка.Следующий() Цикл
		СтруктураИсполнителя = Новый Структура("Исполнитель, Состояние, Ответственный, Источник, Проконтролировано, ДатаИсполнения"); //+ЦППК САНФ-023289, 02.02.2023
#КонецВставки
		СтруктураИсполнителя.Исполнитель = Строка.Исполнитель;
		СтруктураИсполнителя.Ответственный = Строка.Ответственный;
		СтруктураИсполнителя.Источник = Строка.Источник;
		СтруктураИсполнителя.Проконтролировано = Строка.Проконтролировано;
#Вставка
		СтруктураИсполнителя.ДатаИсполнения = Строка.ДатаИсполнения; //+ЦППК САНФ-023289, 02.02.2023
#КонецВставки

		Состояние = "";
		Если ЗначениеЗаполнено(КарточкаКонтроля.Предмет) Тогда 
			Если ТипЗнч(КарточкаКонтроля.Предмет) = Тип("СправочникСсылка.ВеткиПереписки") Тогда 
				Если ТипЗнч(Строка.Источник) = Тип("ДокументСсылка.ВходящееПисьмо") Тогда 
					Состояние = НСтр("ru = 'Ответ получен'");
				ИначеЕсли ТипЗнч(Строка.Источник) = Тип("ДокументСсылка.ИсходящееПисьмо") Тогда 
					Состояние = НСтр("ru = 'Ответ не получен'");
				КонецЕсли;	
			ИначеЕсли ОбщегоНазначения.ЭтоБизнесПроцесс(КарточкаКонтроля.Предмет.Метаданные())
				Или ТипЗнч(КарточкаКонтроля.Предмет) = Тип("ЗадачаСсылка.ЗадачаИсполнителя")
				Или ТипЗнч(КарточкаКонтроля.Предмет) = Тип("ДокументСсылка.ДействиеЗадачи")
				Или ТипЗнч(КарточкаКонтроля.Предмет) = Тип("ДокументСсылка.Задача")
				Или ДействияКлиентСервер.ЭтоДействие(КарточкаКонтроля.Предмет) Тогда
				Если Строка.Исполнено Тогда 
					Состояние = НСтр("ru = 'Исполнено'");
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		СтруктураИсполнителя.Состояние = Состояние;

		МассивИсполнителей.Добавить(СтруктураИсполнителя);
	КонецЦикла;

	Результат = новый Структура;
	Результат.Вставить("МассивИсполнителей", МассивИсполнителей);
	Результат.Вставить("Описание", КарточкаКонтроля.Описание);

	Если ТипЗнч(КарточкаКонтроля.Предмет) = Тип("СправочникСсылка.ВеткиПереписки") Тогда 
		Результат.Вставить("Предмет", КарточкаКонтроля.Предмет.КорневоеПисьмо);
	Иначе
		Результат.Вставить("Предмет", КарточкаКонтроля.Предмет);	
	КонецЕсли;	
	Результат.Вставить("ПредметСтрокой", Контроль.СформироватьПредставлениеПредмета(Результат.Предмет));

	ВыводитьСостояние = Ложь;
	Если ЗначениеЗаполнено(КарточкаКонтроля.Предмет) Тогда 
		Если ТипЗнч(КарточкаКонтроля.Предмет) = Тип("СправочникСсылка.ВеткиПереписки")
			Или ОбщегоНазначения.ЭтоБизнесПроцесс(КарточкаКонтроля.Предмет.Метаданные()) 
			Или ТипЗнч(КарточкаКонтроля.Предмет) = Тип("ЗадачаСсылка.ЗадачаИсполнителя")
			Или ТипЗнч(КарточкаКонтроля.Предмет) = Тип("ДокументСсылка.Задача")
			Или ТипЗнч(КарточкаКонтроля.Предмет) = Тип("ДокументСсылка.ДействиеЗадачи")
			Или ДействияКлиентСервер.ЭтоДействие(КарточкаКонтроля.Предмет) Тогда
			ВыводитьСостояние = Истина; 
		КонецЕсли; 
	КонецЕсли;
	Результат.Вставить("ВыводитьСостояние", ВыводитьСостояние);

	// Хронометраж
	ДополнительныеРеквизиты = Новый Структура;
	СвойстваЭлементов = Новый Структура;

	ДатаНачалаХронометража = Неопределено;
	ДатаКонцаХронометража = Неопределено;
	ВключенХронометраж = Неопределено;
	ОпцияИспользоватьУчетВремени = Неопределено;
	ВидыРабот = Неопределено;
	СпособУказанияВремени = Неопределено;

	ПереключитьХронометражНеМеняяПодсказку = Новый Структура("Имя, Подсказка");

	ПереключитьХронометраж = Новый Структура("Доступность, Пометка");
	ПереключитьХронометраж.Доступность = Истина;

	УказатьТрудозатраты = Новый Структура("Доступность");
	УказатьТрудозатраты.Доступность = Истина;

	УчетВремени.ПроинициализироватьПараметрыУчетаВремени(
	ДатаНачалаХронометража,
	ДатаКонцаХронометража,
	ВключенХронометраж,
	ОпцияИспользоватьУчетВремени,
	КарточкаКонтроля,
	ВидыРабот,
	СпособУказанияВремени,
	ПереключитьХронометражНеМеняяПодсказку,
	ПереключитьХронометраж,
	УказатьТрудозатраты);

	СвойстваЭлементов.Вставить("ПереключитьХронометраж", Новый Соответствие);
	СвойстваЭлементов.Вставить("УказатьТрудозатраты", Новый Соответствие);

	СвойстваЭлементов.ПереключитьХронометраж.Вставить(
	"Доступность",
	ПереключитьХронометраж.Доступность);
	СвойстваЭлементов.ПереключитьХронометраж.Вставить(
	"Пометка",
	ПереключитьХронометраж.Пометка);
	СвойстваЭлементов.УказатьТрудозатраты.Вставить(
	"Доступность",
	УказатьТрудозатраты.Доступность);

	ДополнительныеРеквизиты.Вставить("ДатаНачалаХронометража", ДатаНачалаХронометража);
	ДополнительныеРеквизиты.Вставить("ДатаКонцаХронометража", ДатаКонцаХронометража);
	ДополнительныеРеквизиты.Вставить("ВключенХронометраж", ВключенХронометраж);
	ДополнительныеРеквизиты.Вставить("ОпцияИспользоватьУчетВремени", ОпцияИспользоватьУчетВремени);
	ДополнительныеРеквизиты.Вставить("ВидыРабот", ВидыРабот);
	ДополнительныеРеквизиты.Вставить("СпособУказанияВремени", СпособУказанияВремени);

	Результат.Вставить("ДополнительныеРеквизиты", ДополнительныеРеквизиты);
	Результат.Вставить("СвойстваЭлементов", СвойстваЭлементов);

	Возврат Результат;

КонецФункции
