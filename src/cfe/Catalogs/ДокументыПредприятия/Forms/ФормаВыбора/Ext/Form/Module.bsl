
&НаСервере
&ИзменениеИКонтроль("ПриСозданииНаСервере")
Процедура ЦППК_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// текущая строка по умолчанию
	Если Параметры.Свойство("ТекущаяСтрока") И ЗначениеЗаполнено(Параметры.ТекущаяСтрока) 
	   И ТипЗнч(Параметры.ТекущаяСтрока) = Тип("СправочникСсылка.ДокументыПредприятия") Тогда 
		ТекущаяПапка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ТекущаяСтрока, "Папка");
		Элементы.Папки.ТекущаяСтрока = ТекущаяПапка;
	Иначе
		ТекущаяПапка = Неопределено;
	КонецЕсли;	     
	
	ВестиУчетПоТематикам = Истина;
	
	// вид просмотра
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПапкиДокументов") Тогда
	
		ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.ПоПапкам;
		
	Иначе
		
		ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.Списком;
		Элементы.ВидПросмотраМеню.Видимость = Ложь;
		
	КонецЕсли;
	
	Если Параметры.Свойство("ИспользоватьИерархию") И Не Параметры.ИспользоватьИерархию Тогда
		СвойствоИспользоватьИерархию = Истина;
		ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.Списком;
	КонецЕсли;
	ПереключитьВидПросмотра();
	
	// Комплекты документов
	Если Параметры.Свойство("ЯвляетсяКомплектомДокументов") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ЯвляетсяКомплектомДокументов", Параметры.ЯвляетсяКомплектомДокументов);
	КонецЕсли;
	
	// Виды документов
	Если Параметры.Свойство("ВидДокумента") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ВидДокумента", Параметры.ВидДокумента);
		
		ДоступныеВидыДокументов.Добавить(Параметры.ВидДокумента);
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказыватьКомандуСоздать") Тогда
		Элементы.СписокСоздать.Видимость = (Параметры.ПоказыватьКомандуСоздать = Истина);
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоВходящаяКорреспонденция") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ТолькоВходящаяКорреспонденция",
			Параметры.ТолькоВходящаяКорреспонденция);
			
		Элементы.ИсходящийНомерИДата.Видимость = Истина;
		Элементы.Контрагент.Видимость = Истина;
		Элементы.Контрагент.Заголовок = НСтр("ru = 'Отправитель'"); 
		
		КлючНазначенияИспользования = "ТолькоВходящаяКорреспонденция";
		КлючСохраненияПоложенияОкна = "ТолькоВходящаяКорреспонденция"; 
		
		ТипКорреспонденции = "ЯвляетсяВходящейКорреспонденцией";
	
	ИначеЕсли Параметры.Свойство("ТолькоИсходящаяКорреспонденция") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ТолькоИсходящаяКорреспонденция",
			Параметры.ТолькоИсходящаяКорреспонденция);   
			
		Элементы.Контрагент.Видимость = Истина;
		Элементы.Контрагент.Заголовок = НСтр("ru = 'Получатели'");   
		
		Если ДелопроизводствоПовтИсп.ЕстьИсходящиеВидыДокументовСУчетомВходящегоНомера() Тогда
			Элементы.ИсходящийНомерИДата.Видимость = Истина;
			Элементы.ИсходящийНомерИДата.Заголовок = НСтр("ru = 'Номер и дата получателя'");   
		КонецЕсли;
		
		КлючНазначенияИспользования = "ТолькоИсходящаяКорреспонденция";
		КлючСохраненияПоложенияОкна = "ТолькоИсходящаяКорреспонденция";
		
		ТипКорреспонденции = "ЯвляетсяИсходящейКорреспонденцией";
		
#Вставка
	ИначеЕсли Параметры.Свойство("ЯвляетсяИсходящейКорреспонденцией") Тогда

		Элементы.Контрагент.Видимость = Истина;
		Элементы.Контрагент.Заголовок = НСтр("ru = 'Получатели'");   

		Если ДелопроизводствоПовтИсп.ЕстьИсходящиеВидыДокументовСУчетомВходящегоНомера() Тогда
			Элементы.ИсходящийНомерИДата.Видимость = Истина;
			Элементы.ИсходящийНомерИДата.Заголовок = НСтр("ru = 'Номер и дата получателя'");   
		КонецЕсли;

		КлючНазначенияИспользования = "ТолькоИсходящаяКорреспонденция";
		КлючСохраненияПоложенияОкна = "ТолькоИсходящаяКорреспонденция";

		ТипКорреспонденции = "ЯвляетсяИсходящейКорреспонденцией";
#КонецВставки

	ИначеЕсли Параметры.Свойство("ТолькоНеКорреспонденция") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ТолькоНеКорреспонденция",
			Параметры.ТолькоНеКорреспонденция);      
			
		Элементы.Контрагент.Видимость = Ложь;                         
		КлючНазначенияИспользования = "ТолькоНеКорреспонденция";  
		КлючСохраненияПоложенияОкна = "ТолькоНеКорреспонденция";  
		
	КонецЕсли;
	
	// Только зарегистрированные.
	Если Параметры.ТолькоЗарегистрированные Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ПустойРегистрационныйНомер", "");
	КонецЕсли;
	
	ВыбранныеДокументыНадпись = НСтр("ru = 'Выбранные документы:'");
	
	// Подбор связанного документа
	Если Параметры.Свойство("СвязанныйОбъект") Тогда
		СписокСвязанныхДокументов = ПолучитьСписокСвязанныхДокументов(Параметры.СвязанныйОбъект);
		Список.Параметры.УстановитьЗначениеПараметра("СписокСвязанныхДокументов", СписокСвязанныхДокументов);
	КонецЕсли;
	
	Если Параметры.Свойство("ВыбранныеЗначения") Тогда
		Для каждого Значение Из Параметры.ВыбранныеЗначения Цикл
			ВыбранныеЗначения.Добавить(Значение, ПолучитьПолныйПуть(Значение) + Значение);
		КонецЦикла;
		ОбновитьОтображение();
	КонецЕсли;
	
	Если ЗакрыватьПриВыборе Тогда
		Элементы.ВыбранныеДокументыНадпись.Видимость = Ложь;
		Элементы.ВыбранныеЗначения.Видимость = Ложь;
	КонецЕсли;
	
	//кешируем наличие доступных шаблонов документов
	ЕстьДоступныеШаблоныДокументов = Делопроизводство.ЕстьДоступныеШаблоныДокументов();
	
	ПоказыватьУдаленные = Ложь;
	ПоказатьУдаленные();
	
	// Тематики
	ТематикиИспользуются = РаботаСТематикамиДокументов.ТематикиИспользуются();
	Если ТематикиИспользуются Тогда 
		Элементы.ВидИТематикаТекст.Подсказка = НСтр("ru = 'Вид и тематика документа'");
		Элементы.ВидИТематикаТекст.ПодсказкаВвода = НСтр("ru = 'Вид и тематика документа'");
	Иначе 
		Элементы.ВидИТематикаТекст.Подсказка = НСтр("ru = 'Вид документа'");
		Элементы.ВидИТематикаТекст.ПодсказкаВвода = НСтр("ru = 'Вид документа'");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НавигационнаяСсылка) Тогда
		НавигационнаяСсылка = "e1cib/list/Справочник.ДокументыПредприятия";
	КонецЕсли;
	
	ЭтоМобильныйКлиент = ПараметрыСеанса.ЭтоМобильныйКлиент;
	Если ЭтоМобильныйКлиент Тогда
		МК_НастроитьЭлементыФормы();
	КонецЕсли;
	
	// Открытие в режиме "Обращения граждан":
	ЭтоРежимОбращенияГраждан = (
		КлючНазначенияИспользования = РаботаСОбращениямиКлиентСервер.КлючСписокОбращенийГраждан());
	Если ЭтоРежимОбращенияГраждан Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ЭтоРежимОбращенияГраждан", ЭтоРежимОбращенияГраждан);
		Элементы.ОтборКонтрагент.ПодсказкаВвода = НСтр("ru = 'Гражданин/Организация'");
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.Организация) Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
	Если Параметры.ЗапретитьИзменятьФильтры = Истина Тогда
		
		Элементы.ГруппаБыстрыеОтборы.ТолькоПросмотр = Истина;
		Элементы.ПериодВыборки.Видимость = Ложь;
		
		Если Параметры.Отбор.Свойство("Организация") Тогда
			
			Организация = Параметры.Отбор.Организация;
			
		Иначе
			
			Элементы.ОтборОрганизация.Видимость = Ложь;
			
		КонецЕсли;
		
		Если Параметры.Отбор.Свойство("Контрагент") Тогда
			
			Контрагент = Параметры.Отбор.Контрагент;
			
		Иначе
			
			Элементы.ОтборКонтрагент.Видимость = Ложь;
			
		КонецЕсли;
		
		Если Параметры.Отбор.Свойство("ВидДокумента") Тогда
			
			ВидДокумента = Параметры.Отбор.ВидДокумента;
			Тематика = Неопределено;
			Если Параметры.Отбор.Свойство("Тематика") Тогда
				Тематика = Параметры.Отбор.Тематика;
			КонецЕсли;
			
			ВидИТематикаТекст = РаботаСШаблонамиДокументовКлиентСервер.ПредставлениеШаблона(ВидДокумента, Тематика);
			
		Иначе
			
			Элементы.ВидИТематикаТекст.Видимость = Ложь;
			
		КонецЕсли;
		
		ПараметрыОтбора = Новый Соответствие;
		ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(ПараметрыОтбора, Параметры.Отбор);
		РаботаСоСпискамиДокументовКлиентСервер.УстановитьОтборСписка(Список, ПараметрыОтбора);
		
	КонецЕсли;
	
	#Вставка
    //++AxelSoft NM 15.08.2024 САНФ-027726
	Элементы.ИсходящийНомерИДата.Видимость = Истина;
    //--AxelSoft NM 15.08.2024 САНФ-027726
	#КонецВставки

КонецПроцедуры
