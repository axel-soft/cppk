&НаСервере
&Перед("ПриЗагрузкеДанныхИзНастроекНаСервере")
Процедура ЦППК_ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ПодразделениеСотрудника = Сотрудники.ПодразделениеСотрудника(Сотрудники.ОсновнойСотрудник());
	Если  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПодразделениеСотрудника, "Код") <> "00-000147" Тогда
	
		ПериодВыборки.ДатаНачала = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(), -12));
		ПериодВыборки.ДатаОкончания = КонецМесяца(ТекущаяДата());
		Настройки.Вставить("ПериодВыборки", ПериодВыборки);		
	
	КонецЕсли;
	Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	//Пока не удалять - идея уменьшения полей полнотекстового поиска для ускорения
	//УстановитьОграничениеДинамическогоСписка("Ссылка,Заголовок,РегистрационныйНомер,РегистрационныйНомерИДата,ДатаСортировки");

КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("ОбновитьПараметрыУчетаВремениВФорме")
Процедура ЦППК_ОбновитьПараметрыУчетаВремениВФорме()

#Удаление
	ТекущиеДанные = РаботаСоСпискамиДокументовКлиент.ПолучитьДанныеТекущейСтрокиСписка(
	Элементы.Список, Элементы.Список.ТекущаяСтрока);
#КонецУдаления
#Вставка
	ТекущиеДанные = ЦППК_ОбщийМодульВызовСервера.ПолучитьДанныеИзКлючаЗаписи(Элементы.Список.ТекущаяСтрока, "Документ");
#КонецВставки
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.ПереключитьХронометраж.Доступность = Ложь;
		Элементы.УказатьТрудозатраты.Доступность = Ложь;
		Возврат;
	КонецЕсли;

#Удаление
	ТекущийДокумент = ТекущиеДанные.Ссылка;

	ПараметрыУчетаВремени = ПолучитьПараметрыУчетаВремени(ТекущиеДанные.Ссылка);
#КонецУдаления
#Вставка
	ТекущийДокумент = ТекущиеДанные;
	ПараметрыУчетаВремени = ПолучитьПараметрыУчетаВремени(ТекущиеДанные);
#КонецВставки

	ДатаНачалаХронометража = ПараметрыУчетаВремени.ДатаНачалаХронометража;
	ДатаКонцаХронометража = ПараметрыУчетаВремени.ДатаКонцаХронометража;
	ВключенХронометраж = ПараметрыУчетаВремени.ВключенХронометраж;
	ОпцияИспользоватьУчетВремени = ПараметрыУчетаВремени.ОпцияИспользоватьУчетВремени;
	ВидыРабот = ПараметрыУчетаВремени.ВидыРабот;
	СпособУказанияВремени = ПараметрыУчетаВремени.СпособУказанияВремени;

	Для Каждого СвойствоЭлемента Из ПараметрыУчетаВремени.ПереключитьХронометраж Цикл
		Элементы.ПереключитьХронометраж[СвойствоЭлемента.Ключ] = СвойствоЭлемента.Значение;
	КонецЦикла;

	Для Каждого СвойствоЭлемента Из ПараметрыУчетаВремени.УказатьТрудозатраты Цикл
		Элементы.УказатьТрудозатраты[СвойствоЭлемента.Ключ] = СвойствоЭлемента.Значение;
	КонецЦикла;

КонецПроцедуры

// +ЦППК "2.2.3"  "28.07.2023"
&НаСервере
Функция ЦППК_ОтборЯвляетсяЗаявкойНаВозврат()
	
	Заявка = Ложь;  
	
	Для каждого Отбор Из Список.отбор.элементы Цикл
		Если Отбор.ЛевоеЗначение	= Новый ПолеКомпоновкиДанных("ВидДокумента") Тогда
			
			Если Отбор.Использование  И ТипЗнч(Отбор.ПравоеЗначение) = Тип("Массив") Тогда     
				
				Для каждого СтрокаМассива Из Отбор.ПравоеЗначение Цикл
					Если СтрокаМассива = Справочники.ВидыДокументов.НайтиПоНаименованию("Заявление на возврат денежных средств по претензии") Тогда
						Заявка = Истина;	
					КонецЕсли;					
				КонецЦикла;        
				
			ИначеЕсли Отбор.Использование  И ТипЗнч(Отбор.ПравоеЗначение) = Тип("СправочникСсылка.ВидыДокументов") Тогда 
				
				Если Отбор.ПравоеЗначение = Справочники.ВидыДокументов.НайтиПоНаименованию("Заявление на возврат денежных средств по претензии") Тогда
					Заявка = Истина;	
				КонецЕсли;	     
				
			КонецЕсли;
			//     Список.отбор.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("ВидДокумента"))
		КонецЕсли;
	КонецЦикла;
	
	Возврат Заявка;
	
КонецФункции

Процедура УстановитьОграничениеДинамическогоСписка(РазрешенныеПоляСписком) Экспорт
	
	РазрешенныеПоля = СтрРазделить(РазрешенныеПоляСписком, ",");
	
	НастройкиСписка = Список.КомпоновщикНастроек.ПолучитьНастройки();
	
	Для Каждого ЭлементНастроек Из НастройкиСписка.УсловноеОформление.Элементы Цикл
		Для Каждого ЭлементОтбора Из ЭлементНастроек.Отбор.Элементы Цикл
			РазрешенныеПоля.Добавить(Строка(ЭлементОтбора.ЛевоеЗначение));
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого ЭлементНастроек Из НастройкиСписка.Отбор.Элементы Цикл

		РазрешенныеПоля.Добавить(Строка(ЭлементНастроек.ЛевоеЗначение));

	КонецЦикла;
	
	Для Каждого ЭлементНастроек Из НастройкиСписка.Порядок.Элементы Цикл

		РазрешенныеПоля.Добавить(Строка(ЭлементНастроек.Поле));

	КонецЦикла;
	
    Для каждого ПолеСписка Из Список.Поля Цикл
        Если Не РазрешенныеПоля.Найти(ПолеСписка.Поле) = Неопределено Тогда
            Продолжить;            
        КонецЕсли;
		
		Если ТипЗнч(ПолеСписка) = Тип("ВложенныйНаборДанныхСхемыКомпоновкиДанных") Тогда
			Продолжить;    
		КонецЕсли;                                
            ПолеСписка.ОграничениеИспользования.Группировка  = Истина;
            ПолеСписка.ОграничениеИспользования.Порядок      = Истина;
            ПолеСписка.ОграничениеИспользования.Условие      = Истина;          
       
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
&После("ПриСозданииНаСервере")
Процедура ЦППК_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.ТекстЗапроса = СписокТекстЗапроса();
	
КонецПроцедуры

Функция СписокТекстЗапроса()

	Возврат
	
		"ВЫБРАТЬ
		|	ДокументыПредприятия.Документ КАК Ссылка,
		|	ДокументыПредприятия.ПометкаУдаления КАК ПометкаУдаления,
		|	ДокументыПредприятия.РегистрационныйНомер КАК РегистрационныйНомер,
		|	ДокументыПредприятия.ДатаРегистрации КАК ДатаРегистрации,
		|	ДокументыПредприятия.ДатаСортировки КАК ДатаСортировки,
		|	ДокументыПредприятия.ВидДокумента КАК ВидДокумента,
		|	ДокументыПредприятия.ВидКорреспонденции КАК ВидКорреспонденции,
		|	ДокументыПредприятия.Наименование КАК Наименование,
		|	ВЫРАЗИТЬ(ДокументыПредприятия.Содержание КАК СТРОКА(500)) КАК Содержание,
		|	ВЫРАЗИТЬ(ДокументыПредприятия.КонтрагентыДляСписков КАК СТРОКА(1000)) КАК Контрагенты,
		|	ДокументыПредприятия.Папка КАК Папка,
		|	ДокументыПредприятия.Подготовил КАК Подготовил,
		|	ДокументыПредприятия.Подразделение КАК Подразделение,
		|	ДокументыПредприятия.Утвердил КАК Утвердил,
		|	ДокументыПредприятия.ВопросДеятельности КАК ВопросДеятельности,
		|	ДокументыПредприятия.Дело КАК Дело,
		|	ДокументыПредприятия.СрокИсполнения КАК СрокИсполнения,
		|	ДокументыПредприятия.Зарегистрировал КАК Зарегистрировал,
		|	ДокументыПредприятия.Ответственный КАК Ответственный,
		|	ДокументыПредприятия.ЧисловойНомер КАК ЧисловойНомер,
		|	ДокументыПредприятия.Заголовок КАК Заголовок,
		|	ДокументыПредприятия.Код КАК ВнутреннийНомер,
		|	ДокументыПредприятия.ДатаСоздания КАК ДатаСоздания,
		|	ДокументыПредприятия.Организация КАК Организация,
		|	ДокументыПредприятия.НеДействует КАК НеДействует,
//		|	ДокументыПредприятия.ЦППК_Изменен,
		|	ДокументыПредприятия.НоменклатураДел КАК НоменклатураДел,
		|	ДокументыПредприятия.Сумма КАК Сумма,
		|	ДокументыПредприятия.Валюта КАК Валюта,
		|	ДокументыПредприятия.ДатаНачалаДействия КАК ДатаНачалаДействия,
		|	ДокументыПредприятия.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
		|	ДокументыПредприятия.Проект КАК Проект,
		|	ДокументыПредприятия.ПредставлениеСостояния КАК Состояние,
		|	ДокументыПредприятия.СодержитОригинал КАК СодержитОригинал,
		|	ДокументыПредприятия.РегистрационныйНомерИДата КАК РегистрационныйНомерИДата,
		|	ДокументыПредприятия.ЕстьФайлы КАК ЕстьФайлы,
		|	ВЫБОР
		|		КОГДА ДокументыПредприятия.СостояниеОбработки = ЗНАЧЕНИЕ(Перечисление.СостоянияОбработкиОбъектов.Завершена)
		|			ТОГДА 0
		|		КОГДА ДокументыПредприятия.СостояниеОбработки = ЗНАЧЕНИЕ(Перечисление.СостоянияОбработкиОбъектов.Выполняется)
		|			ТОГДА 1
		|		КОГДА ДокументыПредприятия.СостояниеОбработки = ЗНАЧЕНИЕ(Перечисление.СостоянияОбработкиОбъектов.Остановлена)
		|			ТОГДА 2
		|		КОГДА ДокументыПредприятия.СостояниеОбработки = ЗНАЧЕНИЕ(Перечисление.СостоянияВыполненияДействий.Выполняется)
		|			ТОГДА 1
		|		ИНАЧЕ 3
		|	КОНЕЦ КАК Задачи,
		|	ДокументыПредприятия.ПодписанЭП КАК ПодписанЭП,
		|	ДокументыПредприятия.Исполнен КАК Исполнен,
		|	ДокументыПредприятия.ЕстьКатегории КАК ЕстьКатегорииДанных,
		|	ДокументыПредприятия.СтатусЭП КАК СтатусЭП,
		|	ВЫБОР
		|		КОГДА ДокументыПредприятия.СтатусЭП = ЗНАЧЕНИЕ(Перечисление.СтатусПроверкиЭП.ПодписиНет)
		|			ТОГДА 0
		|		КОГДА ДокументыПредприятия.СтатусЭП = ЗНАЧЕНИЕ(Перечисление.СтатусПроверкиЭП.ПодписьНеПроверена)
		|			ТОГДА 1
		|		КОГДА ДокументыПредприятия.СтатусЭП = ЗНАЧЕНИЕ(Перечисление.СтатусПроверкиЭП.ПодписьДействительна)
		|			ТОГДА 2
		|		КОГДА ДокументыПредприятия.СтатусЭП = ЗНАЧЕНИЕ(Перечисление.СтатусПроверкиЭП.ПодписьНедействительна)
		|			ТОГДА 3
		|		ИНАЧЕ ВЫБОР
		|			КОГДА ДокументыПредприятия.ПодписанЭП
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ
		|	КОНЕЦ КАК СтатусПроверкиЭП,
		|	ВЫБОР
		|		КОГДА ДокументыПредприятия.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.НаКонтроле)
		|			ТОГДА ВЫБОР
		|				КОГДА ДокументыПредприятия.СрокКонтроля = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ ДокументыПредприятия.СрокКонтроля >= &ТекущаяДата
		|					ТОГДА 1
		|				ИНАЧЕ 3
		|			КОНЕЦ
		|		КОГДА ДокументыПредприятия.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СнятсКонтроля)
		|			ТОГДА 4
		|		КОГДА ДокументыПредприятия.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.НаКонтролеНесколько)
		|			ТОГДА ВЫБОР
		|				КОГДА ДокументыПредприятия.СрокКонтроля = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ ДокументыПредприятия.СрокКонтроля >= &ТекущаяДата
		|					ТОГДА 5
		|				КОГДА ДокументыПредприятия.СрокКонтроляОбщий = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ ДокументыПредприятия.СрокКонтроляОбщий >= &ТекущаяДата
		|					ТОГДА 8
		|				ИНАЧЕ 6
		|			КОНЕЦ
		|		КОГДА ДокументыПредприятия.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СнятсКонтроляНесколько)
		|			ТОГДА 7
		|		КОГДА ДокументыПредприятия.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СмешанноНесколько)
		|			ТОГДА ВЫБОР
		|				КОГДА ДокументыПредприятия.СрокКонтроля = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ ДокументыПредприятия.СрокКонтроля >= &ТекущаяДата
		|					ТОГДА 9
		|				ИНАЧЕ 10
		|			КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СостояниеКонтроля,
		|	ДокументыПредприятия.ПодписанВсеми КАК ПодписанВсеми,
		|	ДокументыПредприятия.ПодписанУтвержден КАК ПодписанУтвержден,
		|	ДокументыПредприятия.Создал КАК Создал,
		|	ВЫБОР
		|		КОГДА ДокументыПредприятия.СостояниеЭДО В (ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ПустаяСсылка),
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ЗакрытПринудительно))
		|			ТОГДА 0
		|		КОГДА ДокументыПредприятия.СостояниеЭДО В
		|			(ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ПоставленВОчередьНаОтправку),
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ОжидаетсяОтправка),
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.Отправлен),
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ОбменЗавершен),
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ОбменЗавершенСИсправлением),
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.Подписан),
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ОжидаетСозданияПакетаЭДО))
		|			ТОГДА 1
		|		КОГДА ДокументыПредприятия.СостояниеЭДО В (ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ОтклоненПолучателем),
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ЗакрытСОтклонением),
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ТребуетсяУточнение),
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ОжидаетсяИсправление),
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ОшибкаПередачи))
		|			ТОГДА 2
		|		ИНАЧЕ 3
		|	КОНЕЦ КАК СостояниеЭДО,
		|	ДокументыПредприятия.Сторона1 КАК Сторона1,
		|	ДокументыПредприятия.Сторона2 КАК Сторона2,
		|	ДокументыПредприятия.Тематика КАК Тематика,
		|	ВЫБОР
		|		КОГДА &ИспользоватьПрочтенностьДокументов = ЛОЖЬ
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЕСТЬNULL(СведенияОПрочтении.Прочтен, ЛОЖЬ)
		|	КОНЕЦ КАК Прочтен,
		|	ДокументыПредприятия.ВременныйНомер КАК ВременныйНомер,
		|	0 КАК КоличествоВажныхСвязей,
		|	ВЫБОР
		|		КОГДА ДокументыПредприятия.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.Низкая)
		|			ТОГДА 0
		|		КОГДА ДокументыПредприятия.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиОбъектов.Высокая)
		|			ТОГДА 2
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Важность,
		|	ДокументыПредприятия.Повторное КАК Повторное,
		|	ДокументыПредприятия.Дубликат КАК Дубликат,
		|	ДокументыПредприятия.ИсходящийНомерИДата КАК ИсходящийНомерИДата,
		|	ДокументыПредприятия.ВидОбращения КАК ВидОбращения,
		|	ДокументыПредприятия.СпособПолучения КАК СпособПолучения,
		|	ДокументыПредприятия.Переадресовавший КАК Переадресовавший,
		|	ВЫБОР
		|		КОГДА ДокументыПредприятия.СостояниеДелаХранения = ЗНАЧЕНИЕ(Перечисление.СостоянияДелХраненияДокументов.ПереданоВАрхив)
		|			ТОГДА 1
		|		КОГДА ДокументыПредприятия.СостояниеДелаХранения = ЗНАЧЕНИЕ(Перечисление.СостоянияДелХраненияДокументов.Уничтожено)
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексСостоянияДела,
		|	ДокументыПредприятия.СостояниеМЭДО КАК СостояниеМЭДО,
		|	0 КАК ИндексКартинкиФайлы,
		|	ЛОЖЬ КАК ЯвляетсяКомплектомДокументов,
		|	ЛОЖЬ КАК ПодготовилНедействителен,
		|	ДокументыПредприятия.ОригиналПолучен КАК ОригиналПолучен,
		|	ВЫРАЗИТЬ(ДокументыПредприятия.Документ.Контрагент КАК Справочник.Контрагенты).Ссылка КАК ДокументКонтрагент,
		|	ДокументыПредприятия.АдресатыДляСписков КАК Адресаты
		|ИЗ
		|	РегистрСведений.ДанныеДокументовПредприятия КАК ДокументыПредприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПрочтении КАК СведенияОПрочтении
		|		ПО ДокументыПредприятия.Документ = СведенияОПрочтении.Объект
		|			И (СведенияОПрочтении.Пользователь = &Пользователь)
		|{ГДЕ
		|	(ДокументыПредприятия.ДатаСортировки >= &ОтборПериодНачало),
		|	(ДокументыПредприятия.ДатаСортировки <= &ОтборПериодОкончание),
		|	(ИСТИНА В
		|		(ВЫБРАТЬ
		|			ИСТИНА
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК СведенияОКатегорияхДанных
		|		ГДЕ
		|			ДокументыПредприятия.Документ = СведенияОКатегорияхДанных.ОбъектДанных
		|			И СведенияОКатегорияхДанных.КатегорияДанных В ИЕРАРХИИ (&КатегорияИИЛИ))),
		|	(ИСТИНА В
		|		(ВЫБРАТЬ
		|			ИСТИНА
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК СведенияОКатегорияхДанных
		|		ГДЕ
		|			ДокументыПредприятия.Документ = СведенияОКатегорияхДанных.ОбъектДанных
		|			И СведенияОКатегорияхДанных.КатегорияДанных В (&КатегорияИЛИ))),
		|	(ДокументыПредприятия.Папка = &Папка),
		|	(ДокументыПредприятия.ВидДокумента В ИЕРАРХИИ (&ВидДокумента)),
		|	(ДокументыПредприятия.ВопросДеятельности В ИЕРАРХИИ (&ВопросДеятельности)),
		|	(ДокументыПредприятия.Документ В (&ДокументыОтбор)),
		//|	(ИСТИНА В
		//|		(ВЫБРАТЬ
		//|			ИСТИНА
		//|		ИЗ
		//|			Справочник.ДокументыПредприятия.Контрагенты КАК Контрагенты
		//|		ГДЕ
		//|			Контрагенты.Ссылка = ДокументыПредприятия.Документ
		//|			И Контрагенты.Контрагент В ИЕРАРХИИ (&Контрагент))),
		|	(ДокументыПредприятия.Проект В ИЕРАРХИИ (&Проект)),
		|	(ДокументыПредприятия.Дело = &Дело
		|	ИЛИ ДокументыПредприятия.Дело.НоменклатураДел.Раздел = &Дело),
		|	(НЕ &ОтборПоНепрочтенные
		|	ИЛИ ЕСТЬNULL(СведенияОПрочтении.Прочтен, ЛОЖЬ) = ЛОЖЬ),
		|	(НЕ &ОтборПоПрочтенные
		|	ИЛИ ЕСТЬNULL(СведенияОПрочтении.Прочтен, ЛОЖЬ) = ИСТИНА),
		|	(ДокументыПредприятия.Важность = &Важность),
		//|	(НЕ &ОтборПоКонтрагенту
		//|	ИЛИ ИСТИНА В
		//|		(ВЫБРАТЬ
		//|			ИСТИНА
		//|		ИЗ
		//|			Справочник.ДокументыПредприятия.Контрагенты КАК Контрагенты
		//|		ГДЕ
		//|			Контрагенты.Ссылка = ДокументыПредприятия.Документ
		//|			И Контрагенты.Контрагент В ИЕРАРХИИ (&КонтрагентОтбор))),
		|	(ВЫБОР
		|		КОГДА ДокументыПредприятия.Дело <> ЗНАЧЕНИЕ(Справочник.ДелаХраненияДокументов.ПустаяСсылка)
		|			ТОГДА ДокументыПредприятия.Дело.НоменклатураДел
		|		ИНАЧЕ ДокументыПредприятия.НоменклатураДел
		|	КОНЕЦ = &НоменклатураДел),
		|	(&Категория В
		|		(ВЫБРАТЬ
		|			КатегорииОбъектов.КатегорияДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК КатегорииОбъектов
		|		ГДЕ
		|			КатегорииОбъектов.ОбъектДанных = ДокументыПредприятия.Документ)),
		|	(&Состояние В
		|		(ВЫБРАТЬ
		|			ТекущиеСостоянияДокументов.Состояние
		|		ИЗ
		|			РегистрСведений.ТекущиеСостоянияДокументов КАК ТекущиеСостоянияДокументов
		|		ГДЕ
		|			ТекущиеСостоянияДокументов.Документ = ДокументыПредприятия.Документ)),
		|	(&НаличиеКатегорий В
		|		(ВЫБРАТЬ
		|			КОЛИЧЕСТВО(Регистр.Автор)
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			Регистр.ОбъектДанных = ДокументыПредприятия.Документ)),
		|	(&КатегорияИ1 В
		|		(ВЫБРАТЬ
		|			Регистр.КатегорияДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			ДокументыПредприятия.Документ = Регистр.ОбъектДанных)),
		|	(&КатегорияИ2 В
		|		(ВЫБРАТЬ
		|			Регистр.КатегорияДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			ДокументыПредприятия.Документ = Регистр.ОбъектДанных)),
		|	(&КатегорияИ3 В
		|		(ВЫБРАТЬ
		|			Регистр.КатегорияДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			ДокументыПредприятия.Документ = Регистр.ОбъектДанных)),
		|	(&КатегорияИ4 В
		|		(ВЫБРАТЬ
		|			Регистр.КатегорияДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			ДокументыПредприятия.Документ = Регистр.ОбъектДанных)),
		|	(&КатегорияИ5 В
		|		(ВЫБРАТЬ
		|			Регистр.КатегорияДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			ДокументыПредприятия.Документ = Регистр.ОбъектДанных)),
		|	(&КатегорияИ6 В
		|		(ВЫБРАТЬ
		|			Регистр.КатегорияДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			ДокументыПредприятия.Документ = Регистр.ОбъектДанных)),
		|	(&КатегорияИ7 В
		|		(ВЫБРАТЬ
		|			Регистр.КатегорияДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			ДокументыПредприятия.Документ = Регистр.ОбъектДанных)),
		|	(&КатегорияИ8 В
		|		(ВЫБРАТЬ
		|			Регистр.КатегорияДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			ДокументыПредприятия.Документ = Регистр.ОбъектДанных)),
		|	(&КатегорияИ9 В
		|		(ВЫБРАТЬ
		|			Регистр.КатегорияДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			ДокументыПредприятия.Документ = Регистр.ОбъектДанных)),
		|	(&КатегорияИ10 В
		|		(ВЫБРАТЬ
		|			Регистр.КатегорияДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			ДокументыПредприятия.Документ = Регистр.ОбъектДанных)),
		|	(ДокументыПредприятия.Документ В
		|		(ВЫБРАТЬ
		|			Регистр.ОбъектДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			Регистр.КатегорияДанных В ИЕРАРХИИ (&КатегорияИИ1))),
		|	(ДокументыПредприятия.Документ В
		|		(ВЫБРАТЬ
		|			Регистр.ОбъектДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			Регистр.КатегорияДанных В ИЕРАРХИИ (&КатегорияИИ2))),
		|	(ДокументыПредприятия.Документ В
		|		(ВЫБРАТЬ
		|			Регистр.ОбъектДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			Регистр.КатегорияДанных В ИЕРАРХИИ (&КатегорияИИ3))),
		|	(ДокументыПредприятия.Документ В
		|		(ВЫБРАТЬ
		|			Регистр.ОбъектДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			Регистр.КатегорияДанных В ИЕРАРХИИ (&КатегорияИИ4))),
		|	(ДокументыПредприятия.Документ В
		|		(ВЫБРАТЬ
		|			Регистр.ОбъектДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			Регистр.КатегорияДанных В ИЕРАРХИИ (&КатегорияИИ5))),
		|	(ДокументыПредприятия.Документ В
		|		(ВЫБРАТЬ
		|			Регистр.ОбъектДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			Регистр.КатегорияДанных В ИЕРАРХИИ (&КатегорияИИ6))),
		|	(ДокументыПредприятия.Документ В
		|		(ВЫБРАТЬ
		|			Регистр.ОбъектДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			Регистр.КатегорияДанных В ИЕРАРХИИ (&КатегорияИИ7))),
		|	(ДокументыПредприятия.Документ В
		|		(ВЫБРАТЬ
		|			Регистр.ОбъектДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			Регистр.КатегорияДанных В ИЕРАРХИИ (&КатегорияИИ8))),
		|	(ДокументыПредприятия.Документ В
		|		(ВЫБРАТЬ
		|			Регистр.ОбъектДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			Регистр.КатегорияДанных В ИЕРАРХИИ (&КатегорияИИ9))),
		|	(ДокументыПредприятия.Документ В
		|		(ВЫБРАТЬ
		|			Регистр.ОбъектДанных
		|		ИЗ
		|			РегистрСведений.КатегорииОбъектов КАК Регистр
		|		ГДЕ
		|			Регистр.КатегорияДанных В ИЕРАРХИИ (&КатегорияИИ10))),
		|	(ДокументыПредприятия.СостояниеМЭДО = &СостояниеМЭДО),
		|	(
		|		&ЭтоРежимОбращенияГраждан
		|		И ДокументыПредприятия.ВидОбращения <> ЗНАЧЕНИЕ(Перечисление.ВидыОбращенийГраждан.ПустаяСсылка)
		|	)}";

КонецФункции

&НаСервере
Процедура ОтборКонтрагентПриИзмененииНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДокументыПредприятия.Ссылка КАК Документ
		|ИЗ
		|	Справочник.ДокументыПредприятия КАК ДокументыПредприятия
		|ГДЕ
		|	ДокументыПредприятия.ДатаСоздания МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ДокументыПредприятия.Контрагент = &Контрагент
		|	И НЕ ДокументыПредприятия.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ДатаНачала", ПериодВыборки.ДатаНачала); 
	Запрос.УстановитьПараметр("ДатаОкончания", ?(ЗначениеЗаполнено(ПериодВыборки.ДатаОкончания), ПериодВыборки.ДатаОкончания, ТекущаяДата()) );
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	ДокументыОтбор  =  РезультатЗапроса.ВыгрузитьКолонку("Документ");  
	
	ПараметрыОтбора = Новый Соответствие;
	Параметрыотбора.Вставить("ДокументыОтбор", ДокументыОтбор);
	
	Список.Параметры.УстановитьЗначениеПараметра("ДокументыОтбор", ДокументыОтбор);

КонецПроцедуры 

&НаКлиенте
&ИзменениеИКонтроль("ОткрытьОтчеты")
Процедура ЦППК_ОткрытьОтчеты(Команда)

#Вставка
	// +ЦППК "2.2.3"  "28.07.2023" 
	Если ЦППК_ОтборЯвляетсяЗаявкойНаВозврат() Тогда

		Раздел = ПредопределенноеЗначение("Перечисление.РазделыОтчетов.ЗаявкиНаВозвратСписок_ТТС");
		ЗаголовокФормы = НСтр("ru = 'Отчеты по заявлениям на возврат денежных средств'");

		РазделГипперСсылка = НастройкиВариантовОтчетовДокументооборот.ПолучитьРазделОтчетаПоИмени("ДокументыИФайлы");

		ПараметрыФормы = Новый Структура("Раздел, ЗаголовокФормы, НеОтображатьИерархию, РазделГипперСсылка", 
		Раздел, ЗаголовокФормы, Истина, РазделГипперСсылка);

		ОткрытьФорму(
		"Обработка.ВсеОтчеты.Форма.ФормаПоКатегориям",
		ПараметрыФормы,
		ЭтаФорма, 
		"ЗаявкиНаВозвратСписок_ТТС");

		Возврат;

	КонецЕсли;
	// -ЦППК "2.2.3"  "28.07.2023"  
#КонецВставки
	Раздел = ПредопределенноеЗначение("Перечисление.РазделыОтчетов.ДокументыПредприятияСписок");

	ЗаголовокФормы = НСтр("ru = 'Отчеты по документам'");

	РазделГипперСсылка = НастройкиВариантовОтчетовДокументооборот.ПолучитьРазделОтчетаПоИмени(
	"ДокументыИФайлы");

	ПараметрыФормы = Новый Структура("Раздел, ЗаголовокФормы, НеОтображатьИерархию, РазделГипперСсылка",
	Раздел, ЗаголовокФормы, Истина, РазделГипперСсылка);

	ОткрытьФорму(
	"Обработка.ВсеОтчеты.Форма.ФормаПоКатегориям", ПараметрыФормы, ЭтотОбъект,
	"ДокументыПредприятияСписок");

КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("ОбработкаОповещения")
Процедура ЦППК_ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ДокументИзмененДляСписков" Тогда
		Если ТипЗнч(Источник) = Тип("ФормаКлиентскогоПриложения") И Источник.ВладелецФормы
			= Элементы.Список И Элементы.Список.ТекущаяСтрока <> Параметр Тогда

			КлючЗаписиДляУстановки = Параметр;
			ПодключитьОбработчикОжидания("УстановитьТекущуюСтрокуОтложенно", 0.2, Истина);

		КонецЕсли;
	КонецЕсли;

	Если ИмяСобытия = "РедактироваласьКатегория" И (Источник.ВладелецФормы = Неопределено
		Или Источник.ВладелецФормы.Имя <> "ДеревоКатегорий") Тогда
		ОбновитьДеревоКатегорий(Неопределено);
	КонецЕсли;

	Если ИмяСобытия = "ИмпортФайловВСписокДокументовПредприятияЗавершен" Тогда
		ОбновитьДеревоКатегорий(Неопределено);
	КонецЕсли;

	Если ИмяСобытия = "ЗаписьКонтроля" Тогда
		Если ЗначениеЗаполнено(Параметр.Предмет) И ТипЗнч(Параметр.Предмет) = Тип(
			"СправочникСсылка.ДокументыПредприятия") Тогда
			ДелопроизводствоКлиент.ОповеститьОбИзмененииОбъекта(Параметр.Предмет);
		КонецЕсли;
	КонецЕсли;

	Если ИмяСобытия = "ОбновленоСостояниеЭДДО" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;

	Если ИмяСобытия = "ОтражениеВходящихЭДО" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;

	Если ИмяСобытия = "ПрочтениеОбновитьСписок" Тогда

		ТекущиеДанные = РаботаСоСпискамиДокументовКлиент.ПолучитьДанныеТекущейСтрокиСписка(
			Элементы.Список, Элементы.Список.ТекущаяСтрока);
		Если ТекущиеДанные <> Неопределено Тогда

			ТекущийДокументСписка = ТекущиеДанные.Ссылка;

			Если Параметр = ТекущийДокументСписка Тогда
				ОповеститьОбИзменении(Элементы.Список.ТекущаяСтрока);
			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	Если ПоказыватьОбластьОбзора Тогда
		Если (ИмяСобытия = "ДокументИзменен" Или ИмяСобытия = "Запись_ДокументыПредприятия")
			И Параметр = ТекущийДокумент Тогда
			ОбновитьМиникарточку();
			Если ПоказыватьОбластьОбзора Тогда
				Переписка_УстановитьДоступностьКоманд();
			КонецЕсли;
		КонецЕсли;

		Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "ДанныеФайлаИзменены" Тогда

			Если ТипЗнч(Параметр) = Тип("Структура") И Параметр.Свойство("Владелец")
				И Параметр.Свойство("Файл") И ЗначениеЗаполнено(Параметр.Владелец) Тогда
				ВладелецФайла = Параметр.Владелец;
				ФайлСсылка = Параметр.Файл;
			Иначе
				ВладелецФайла = ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(
					Источник, "ВладелецФайла");
				ФайлСсылка = Источник;
			КонецЕсли;

			Если ВладелецФайла = ТекущийДокумент Тогда
				ОбновитьСтрокуФайла(ФайлСсылка);

				ТекущиеДанные = ТекущиеДанныеСпискаФайлов();
				ОбзорСпискаДокументовКлиент.УстановитьДоступностьКоманд(ТекущиеДанные, ЭтаФорма);
			КонецЕсли;

		КонецЕсли;

		Если ИмяСобытия = "ФайлИзменен" Тогда
			Если ТипЗнч(Параметр) = Тип("Структура") Тогда
				Если Параметр.Владелец = ТекущийДокумент Тогда
					ОбновитьСтрокуФайла(Параметр.Файл);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

		Если ИмяСобытия = "БизнесПроцессСтартован" Тогда
			Если Параметр.Свойство("СсылкаНаПредметБизнесПроцесса")
				И Параметр.СсылкаНаПредметБизнесПроцесса = ТекущийДокумент Тогда
				ОбзорСпискаДокументовКлиент.ЗаполнитьСписокЗадач(ЭтаФорма);
			КонецЕсли;
		КонецЕсли;

		Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "СозданФайл" Тогда

			Если Параметр <> Неопределено И Параметр.Свойство("Владелец") И Параметр.Владелец
				= ТекущийДокумент Тогда

				ОбзорСпискаДокументовКлиент.ЗаполнитьСписокФайлов(ЭтаФорма);

#Удаление
				Если Параметр.Свойство("Файл") Тогда
					УстановитьТекущуюСтрокуФайла(Параметр.Файл);
					ОтметитьПризнакОригиналУНовогоФайла(Параметр.Файл);
				КонецЕсли;
#КонецУдаления
#Вставка     
				ОбрабатыватьПозиционирование = НЕ (Параметр.Свойство("ИдентификаторРодительскойФормы") И 
					Параметр.ИдентификаторРодительскойФормы <> УникальныйИдентификатор);
				Если ОбрабатыватьПозиционирование И Параметр.Свойство("Файл") Тогда
					УстановитьТекущуюСтрокуФайла(Параметр.Файл);
					ОтметитьПризнакОригиналУНовогоФайла(Параметр.Файл);
				КонецЕсли;
#КонецВставки
			КонецЕсли;

		КонецЕсли;

		Если ИмяСобытия = "ИзмененыСвязиДокумента" И Параметр.Документ = ТекущийДокумент Тогда
			ОбзорСпискаДокументовКлиент.ОбновитьСтрокуСвязи(ЭтотОбъект);
		КонецЕсли;

		Если ИмяСобытия = "ИзмененыСвязиПодчиненныхДокументов" И Параметр.Документ
			= ТекущийДокумент Тогда
			ОбзорСпискаДокументовКлиент.ОбновитьСтрокуСвязи(ЭтотОбъект);
		КонецЕсли;

		Если (ИмяСобытия = "ФайлыДокументаПомеченыНаУдаление" И Параметр = ТекущийДокумент)
			Или (ИмяСобытия = "ИмпортФайловЗавершен" И ТипЗнч(Источник) = Тип("Структура")
			И Источник.ВладелецФайлов = ТекущийДокумент) Тогда
			ОбзорСпискаДокументовКлиент.ЗаполнитьСписокФайлов(ЭтотОбъект);
			Элементы.Список.Обновить();
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = ИнтерфейсДокументовЭДОКлиент.ИмяСобытияОбновленияСостоянияЭДО() Тогда
		Элементы.Список.Обновить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("ОтборКонтрагентПриИзменении")
Процедура ЦППК_ОтборКонтрагентПриИзменении(Элемент)

#Удаление
	ПараметрыОтбора = Новый Соответствие;
	Параметрыотбора.Вставить("Контрагент", Контрагент);

	РаботаСоСпискамиДокументовКлиентСервер.УстановитьОтборСписка(Список, ПараметрыОтбора);
#КонецУдаления
#Вставка
	Если ЗначениеЗаполнено(Контрагент) Тогда
		ОтборКонтрагентПриИзмененииНаСервере(); 
	Иначе
		Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДокументыОтбор"));
		Параметр.Использование = Ложь;
	КонецЕсли;   
#КонецВставки

	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент,
	Контрагент);

КонецПроцедуры
