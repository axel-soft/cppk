
&НаСервереБезКонтекста
&ИзменениеИКонтроль("СведенияОВеткеСвязейДокументов")
Функция ЦППК_СведенияОВеткеСвязейДокументов(Знач Объект, Знач ВключатьУдаленныеДокументыИФайлы,
	Знач ТолькоОригиналыФайлов, ТолькоВажные, ПорядокСортировки, КорневойОбъект, Знач ТипСвязиДляОтбора = Неопределено)
	
	#Вставка
	УстановитьПривилегированныйРежим(Истина);
	#КонецВставки

	ТипыСвязейПоПорядку = Новый Массив;
	ТипыСвязейСДокументами = Новый Соответствие;
	ТипыСвязанныхДокументов = Новый Соответствие;
	СведенияОСвязанныхДокументах = Новый Соответствие;
	//сначала нужен запрос к РС с дроблением типов документов из параметра
	
	ЗапросСвязиДокумента = Новый Запрос;
	
	ЗапросСвязиДокумента.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТипыСвязей.Ссылка КАК ТипСвязи,
		|	ТипыСвязей.СокращенноеНаименование КАК ТипСвязиПредставление,
		|	СвязиОбъектов.ДатаУстановки КАК ДатаУстановки,
		|	СвязиОбъектов.СвязанныйОбъект КАК СвязанныйОбъект,
		|	СвязиОбъектов.СвязаннаяСтрока КАК СвязаннаяСтрока,
		|	СвязиОбъектов.Комментарий КАК Комментарий,
		|	1 КАК Приоритет,
		|	ЛОЖЬ КАК Важная,
		|	ЕСТЬNULL(СвязиОбъектов.ДополнительныйОбъектСвязи, НЕОПРЕДЕЛЕНО) КАК ДополнительныйОбъектСвязи,
		|	ПРЕДСТАВЛЕНИЕ(СвязиОбъектов.ДополнительныйОбъектСвязи) КАК ДополнительныйОбъектСвязиПредставление
		|ИЗ
		|	РегистрСведений.СвязиОбъектов КАК СвязиОбъектов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТипыСвязей КАК ТипыСвязей
		|		ПО СвязиОбъектов.ТипСвязи = ТипыСвязей.Ссылка
		|ГДЕ
		|	СвязиОбъектов.Объект = &Документ
		|	И ВЫБОР
		|		КОГДА &ОтборПоСвязям
		|			ТОГДА СвязиОбъектов.ТипСвязи = &ТипСвязи
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		|УПОРЯДОЧИТЬ ПО
		|	ТипыСвязей.СокращенноеНаименование,
		|	СвязиОбъектов.ДатаУстановки УБЫВ";
		
	// добавить настраиваемый порядок
	
	ЗапросСвязиДокумента.УстановитьПараметр("Документ", Объект);
	ЗапросСвязиДокумента.УстановитьПараметр("ОтборПоСвязям", ЗначениеЗаполнено(ТипСвязиДляОтбора));
	ЗапросСвязиДокумента.УстановитьПараметр("ТипСвязи", ТипСвязиДляОтбора);
	
	РезультатЗапросаСвязиДокумента = ЗапросСвязиДокумента.Выполнить();
	Если РезультатЗапросаСвязиДокумента.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДетальныеЗаписиТаблица = РезультатЗапросаСвязиДокумента.Выгрузить();
	
	// заполним признак для сортировки
	Для Каждого ВыборкаДетальныеЗаписи Из ДетальныеЗаписиТаблица Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СвязанныйОбъект)
			И Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СвязаннаяСтрока) Тогда
			Продолжить;
		КонецЕсли;
		
		Настройка = СвязиОбъектов.ПолучитьНастройкуСвязи(
			Объект, ВыборкаДетальныеЗаписи.СвязанныйОбъект, ВыборкаДетальныеЗаписи.ТипСвязи);
			
		Если Настройка <> Неопределено Тогда	
			ВыборкаДетальныеЗаписи.Важная = Настройка.Важная;
			
			Если Настройка.Важная Или Настройка.Обязательная Тогда
				ВыборкаДетальныеЗаписи.Приоритет = 0;
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЦикла;	
	
	ДетальныеЗаписиТаблица.Сортировать("Приоритет, ТипСвязиПредставление, ДатаУстановки УБЫВ");
	
	Для Каждого ВыборкаДетальныеЗаписи Из ДетальныеЗаписиТаблица Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СвязанныйОбъект)
			И Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СвязаннаяСтрока) Тогда
			Продолжить;
		КонецЕсли;
		
		//  сам документ (из которого открыли форму связей) - не добавляем по связям
		Если ВыборкаДетальныеЗаписи.СвязанныйОбъект = КорневойОбъект Тогда
			Продолжить;
		КонецЕсли;
		
		СвязанныйДокументСтрока = ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СвязанныйОбъект),
			ВыборкаДетальныеЗаписи.СвязанныйОбъект,
			ВыборкаДетальныеЗаписи.СвязаннаяСтрока);
			
		Если ТолькоВажные И Не ВыборкаДетальныеЗаписи.Важная Тогда
			Продолжить;
		КонецЕсли;
			
		СведенияОДокументе = Новый Структура();
		СведенияОДокументе.Вставить("Комментарий", ВыборкаДетальныеЗаписи.Комментарий);
		СведенияОДокументе.Вставить("ИндексКартинки", -1);
		СведенияОДокументе.Вставить("СвязаннаяСтрока", Неопределено);
		СведенияОДокументе.Вставить("СвязанныйОбъект", Неопределено);
		СведенияОДокументе.Вставить("ДатаСвязи", ВыборкаДетальныеЗаписи.ДатаУстановки);
		
		СведенияОДокументе.Вставить("Файлы", Новый Массив);
		СведенияОДокументе.Вставить("РолиФайлов", Новый Массив);
		
		СведенияОДокументе.Вставить("ЕстьСвязи", Ложь);
		СведенияОДокументе.Вставить("ЭтоВеткаСвязи", Ложь);
		
		СведенияОДокументе.Вставить("ПометкаУдаления", Ложь);
		СведенияОДокументе.Вставить("Сумма", Неопределено);
		СведенияОДокументе.Вставить("НомерДокумента", Неопределено);
		СведенияОДокументе.Вставить("ДатаДокумента", Неопределено);
		
		СведенияОДокументе.Вставить("ВидДокумента", Неопределено);
		
		СведенияОДокументе.Вставить("ВажнаяСвязь", ВыборкаДетальныеЗаписи.Важная);
		
		
		ПредставлениеСвязанногоДокумента = "";
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СвязанныйОбъект) Тогда
			
			ДокументыОдногоТипа = ТипыСвязанныхДокументов.Получить(
				ТипЗнч(ВыборкаДетальныеЗаписи.СвязанныйОбъект));
			Если ДокументыОдногоТипа = Неопределено Тогда
				ДокументыОдногоТипа = Новый Массив;
			КонецЕсли;
			ДокументыОдногоТипа.Добавить(ВыборкаДетальныеЗаписи.СвязанныйОбъект);
			ТипыСвязанныхДокументов.Вставить(
				ТипЗнч(ВыборкаДетальныеЗаписи.СвязанныйОбъект), ДокументыОдногоТипа);
			
			СведенияОДокументе.СвязанныйОбъект = ВыборкаДетальныеЗаписи.СвязанныйОбъект;
			
		Иначе
			
			СведенияОДокументе.СвязаннаяСтрока = ВыборкаДетальныеЗаписи.СвязаннаяСтрока;
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Комментарий) Тогда
				ПредставлениеСвязанногоДокумента 
					= СтрШаблон(НСтр("ru = '%1 (Внешняя ссылка)'"), ВыборкаДетальныеЗаписи.Комментарий);
			Иначе
				ПредставлениеСвязанногоДокумента = ВыборкаДетальныеЗаписи.СвязаннаяСтрока;
			КонецЕсли;
			
		КонецЕсли;
		
		СведенияОДокументе.Вставить("Представление", ПредставлениеСвязанногоДокумента);
		
		СведенияОСвязанныхДокументах.Вставить(СвязанныйДокументСтрока, СведенияОДокументе);
		
		
		КлючТипаСвязи = СтрШаблон("%1%2",
							XMLСтрока(ВыборкаДетальныеЗаписи.ТипСвязи),
							XMLСтрока(ВыборкаДетальныеЗаписи.ДополнительныйОбъектСвязи));
		
		СведенияОТипеСвязи = ТипыСвязейСДокументами.Получить(КлючТипаСвязи);
		Если СведенияОТипеСвязи = Неопределено Тогда
			
			ТипыСвязейПоПорядку.Добавить(КлючТипаСвязи);
			
			СведенияОТипеСвязи = Новый Структура();
			СведенияОТипеСвязи.Вставить("СвязанныеДокументы", Новый Массив);
			СведенияОТипеСвязи.СвязанныеДокументы.Добавить(СвязанныйДокументСтрока);
			СведенияОТипеСвязи.Вставить("ДополнительныйОбъектСвязи", 
				ВыборкаДетальныеЗаписи.ДополнительныйОбъектСвязиПредставление);
			СведенияОТипеСвязи.Вставить("ТипСвязи", ВыборкаДетальныеЗаписи.ТипСвязи);
			
			ПредставлениеТипаСвязи = "";
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДополнительныйОбъектСвязи) Тогда 
				ПредставлениеТипаСвязи =
					СтрШаблон("%1, %2",
						ВыборкаДетальныеЗаписи.ТипСвязиПредставление,
						ВыборкаДетальныеЗаписи.ДополнительныйОбъектСвязиПредставление);
			Иначе 
				ПредставлениеТипаСвязи = ВыборкаДетальныеЗаписи.ТипСвязиПредставление;
			КонецЕсли;
			СведенияОТипеСвязи.Вставить("Представление", ПредставлениеТипаСвязи);
			
		Иначе
			
			СведенияОТипеСвязи.СвязанныеДокументы.Добавить(СвязанныйДокументСтрока);
			
		КонецЕсли;
		
		ТипыСвязейСДокументами.Вставить(КлючТипаСвязи, СведенияОТипеСвязи);
		
	КонецЦикла;
	
	
	ВыборкаДетальныеЗаписи = Неопределено;
	ВыборкаТипСвязиДопОбъект = Неопределено;
	ВыборкаТипСвязи = Неопределено;
	РезультатЗапросаСвязиДокумента = Неопределено;
	ЗапросСвязиДокумента = Неопределено;
	
	Если ТипыСвязанныхДокументов.Количество() > 0 Тогда
		
		ЗапросФайлы = Новый Запрос;
		ЗапросРеквизиты = Новый Запрос;
		ТекстЗапросаФайлы = Новый Массив;
		ТекстЗапросаРеквизиты = Новый Массив;
		Для Каждого ТипСвязанныхДокументов Из ТипыСвязанныхДокументов Цикл
			
			ОчереднойТип = ТипСвязанныхДокументов.Ключ;
			ОбъектМетаданных = Метаданные.НайтиПоТипу(ОчереднойТип);
			ПолноеИмяМетаданных = ОбъектМетаданных.ПолноеИмя();
			ИмяПараметраСсылки = СтрШаблон("Ссылки%1", СтрЗаменить(ПолноеИмяМетаданных, ".", ""));
			
			// Сформируем запрос получения сведений о файлах связанных документов по каждому типу отдельно.
			ТекстЗапроса = СтрЗаменить(
				"ВЫБРАТЬ
				|	Файлы.ВладелецФайла КАК Объект,
				|	Файлы.Ссылка КАК Ссылка,
				|	Файлы.Наименование КАК Наименование,
				|	Файлы.ПометкаУдаления КАК ПометкаУдаления,
				|	Файлы.ИндексКартинки КАК ИндексКартинки,
				|	Файлы.ТекущаяВерсияРасширение КАК РасширениеФайла,
				|	Файлы.ТекущаяВерсияРазмер / 1024 КАК Размер,
				|	ЕСТЬNULL(СведенияОФайлахДокументооборот.ЯвляетсяОригиналом, ЛОЖЬ) КАК ЯвляетсяОригиналом
				|ИЗ
				|	Справочник.Файлы КАК Файлы
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФайлахДокументооборот КАК СведенияОФайлахДокументооборот
				|		ПО (СведенияОФайлахДокументооборот.Файл = Файлы.Ссылка)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеФайлыДокументов КАК СлужебныеФайлыДокументов
				|		ПО (СлужебныеФайлыДокументов.Файл = Файлы.Ссылка)
				|ГДЕ
				|	Файлы.ВладелецФайла В(&ПараметрСсылки)
				|	И СлужебныеФайлыДокументов.Файл ЕСТЬ NULL",
				"ПараметрСсылки",
				ИмяПараметраСсылки);
			
			ТекстЗапросаФайлы.Добавить("ОБЪЕДИНИТЬ ВСЕ");
			ТекстЗапросаФайлы.Добавить(ТекстЗапроса);
			Если Не ВключатьУдаленныеДокументыИФайлы Тогда
				ТекстЗапросаФайлы.Добавить("И НЕ Файлы.ПометкаУдаления");
			КонецЕсли;
			Если ТолькоОригиналыФайлов Тогда
				ТекстЗапросаФайлы.Добавить("И СведенияОФайлахДокументооборот.ЯвляетсяОригиналом = ИСТИНА");
			КонецЕсли;
			
			// Сформируем запрос получения подробных сведений о связанных документах.
			Если ОчереднойТип = Тип("СправочникСсылка.ДокументыПредприятия") Тогда
				
				ТекстЗапроса = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ДокументыПредприятия.Ссылка КАК Ссылка,
					|	ДокументыПредприятия.ПометкаУдаления КАК ПометкаУдаления,
					|	ДокументыПредприятия.ВидДокумента КАК ВидДокумента,
					|	ДокументыПредприятия.Заголовок КАК Наименование,
					|	ВЫБОР
					|		КОГДА ДокументыПредприятия.РегистрационныйНомер <> """"
					|			ТОГДА ДокументыПредприятия.РегистрационныйНомер
					|		ИНАЧЕ ДокументыПредприятия.ВременныйНомер
					|	КОНЕЦ КАК НомерДокумента,
					|	ВЫБОР
					|		КОГДА ДокументыПредприятия.ДатаРегистрации <> ДАТАВРЕМЯ(1, 1, 1)
					|			ТОГДА ДокументыПредприятия.ДатаРегистрации
					|		ИНАЧЕ ДокументыПредприятия.ДатаСоздания
					|	КОНЕЦ КАК ДатаДокумента,
					|	ДокументыПредприятия.ВидДокумента.УчитыватьСуммуДокумента КАК ВидДокументаУчитыватьСуммуДокумента,
					|	ДокументыПредприятия.Сумма КАК СуммаДокумента,
					|	ДокументыПредприятия.Валюта.Наименование КАК ВалютаНаименование,
					|	1 В
					|		(ВЫБРАТЬ ПЕРВЫЕ 1
					|			1
					|		ИЗ
					|			РегистрСведений.СвязиОбъектов КАК СвязиДокументовВложенные
					|		ГДЕ
					|			СвязиДокументовВложенные.Объект = ДокументыПредприятия.Ссылка) КАК ЕстьСвязи
					|ИЗ
					|	#ДокументыПредприятия КАК ДокументыПредприятия
					|ГДЕ
					|	ДокументыПредприятия.Ссылка В(&ПараметрСсылки)";
				
			Иначе
				
				ТекстЗапроса = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ДокументыПредприятия.Ссылка КАК Ссылка,
					|	ДокументыПредприятия.ПометкаУдаления КАК ПометкаУдаления, 
					|	Неопределено КАК ВидДокумента,
					|	ДокументыПредприятия.Представление КАК Наименование,
					|	"""" КАК НомерДокумента,
					|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаДокумента,
					|	ЛОЖЬ КАК ВидДокументаУчитыватьСуммуДокумента,
					|	0 КАК СуммаДокумента,
					|	"""" КАК ВалютаНаименование,
					|	1 В
					|		(ВЫБРАТЬ ПЕРВЫЕ 1
					|			1
					|		ИЗ
					|			РегистрСведений.СвязиОбъектов КАК СвязиДокументовВложенные
					|		ГДЕ
					|			СвязиДокументовВложенные.Объект = ДокументыПредприятия.Ссылка) КАК ЕстьСвязи
					|ИЗ
					|	#ДокументыПредприятия КАК ДокументыПредприятия
					|ГДЕ
					|	ДокументыПредприятия.Ссылка В(&ПараметрСсылки)";
				
			КонецЕсли;
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПараметрСсылки", ИмяПараметраСсылки);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ДокументыПредприятия", ПолноеИмяМетаданных);
			
			Если ТекстЗапросаРеквизиты.Количество() > 0 Тогда 
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
			КонецЕсли;
			
			ТекстЗапросаРеквизиты.Добавить(ТекстЗапроса);
			
			ЗапросФайлы.УстановитьПараметр(ИмяПараметраСсылки, ТипСвязанныхДокументов.Значение);
			ЗапросРеквизиты.УстановитьПараметр(ИмяПараметраСсылки, ТипСвязанныхДокументов.Значение);
			
		КонецЦикла;
		
		ТекстЗапросаФайлы.Удалить(0); // Удалим первое вхождение "ОБЪЕДИНИТЬ ВСЕ".
		ЗапросФайлы.Текст = СтрСоединить(ТекстЗапросаФайлы, Символы.ПС);
		ТекстЗапросаФайлы.Очистить();
		ТекстЗапросаФайлы = Неопределено;
		
		РезультатЗапросаФайлы = ЗапросФайлы.Выполнить();
		ВыборкаДетальныеЗаписиФайлыТаблица = РезультатЗапросаФайлы.Выгрузить();           
		
		МассивФайлов = Новый Массив;
		Для Каждого ВыборкаДетальныеЗаписиФайлы Из ВыборкаДетальныеЗаписиФайлыТаблица Цикл
			МассивФайлов.Добавить(ВыборкаДетальныеЗаписиФайлы.Ссылка);
		КонецЦикла;	
		
		// Прочитаем РолиФайловДокументов для массива файлов.
		ЗапросРолиФайлов = Новый Запрос(
			"ВЫБРАТЬ
			|	РолиФайловДокументов.Файл КАК Файл,
			|	РолиФайловДокументов.Роль КАК Роль
			|ИЗ
			|	РегистрСведений.РолиФайловДокументов КАК РолиФайловДокументов
			|ГДЕ
			|	РолиФайловДокументов.Файл В(&Файлы)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Файл");
		ЗапросРолиФайлов.УстановитьПараметр("Файлы", МассивФайлов);
		ТаблРоли = ЗапросРолиФайлов.Выполнить().Выгрузить();
		
		Для Каждого ВыборкаДетальныеЗаписиФайлы Из ВыборкаДетальныеЗаписиФайлыТаблица Цикл
			
			СведенияОФайле = Новый Структура(
				"Файл,Представление,ПометкаУдаления,ИндексКартинки,ЯвляетсяОригиналом,РасширениеФайла, Размер, РольФайла");
			ЗаполнитьЗначенияСвойств(СведенияОФайле, ВыборкаДетальныеЗаписиФайлы);
			СведенияОФайле.Представление = ВыборкаДетальныеЗаписиФайлы.Наименование;
			СведенияОФайле.Файл = ВыборкаДетальныеЗаписиФайлы.Ссылка;
			
			ПараметрыОтбора = Новый Структура("Файл", ВыборкаДетальныеЗаписиФайлы.Ссылка);
			СтрокиРолей = ТаблРоли.НайтиСтроки(ПараметрыОтбора);
			Если СтрокиРолей.Количество() <> 0 Тогда
				
				ТекРоль = СтрокиРолей[0].Роль;
				СведенияОФайле.РольФайла = ТекРоль;
				
			КонецЕсли;	
			
			СведенияОДокументе = СведенияОСвязанныхДокументах.Получить(
				ВыборкаДетальныеЗаписиФайлы.Объект);
			СведенияОДокументе.Файлы.Добавить(СведенияОФайле);
			
		КонецЦикла;
		
		ВыборкаДетальныеЗаписиФайлы = Неопределено;
		РезультатЗапросаФайлы = Неопределено;
		ЗапросФайлы = Неопределено;
		
		ЗапросРеквизиты.Текст = СтрСоединить(ТекстЗапросаРеквизиты, " ОБЪЕДИНИТЬ ВСЕ ");
		ТекстЗапросаРеквизиты.Очистить();
		ТекстЗапросаРеквизиты = Неопределено;
		
#Вставка
Попытка
		РезультатЗапросаРеквизиты = ЗапросРеквизиты.Выполнить();		
	
Исключение

			ЗапросФайлы = Новый Запрос;
			ЗапросРеквизиты = Новый Запрос;
			ТекстЗапросаФайлы = Новый Массив;
			ТекстЗапросаРеквизиты = Новый Массив;
			Для Каждого ТипСвязанныхДокументов Из ТипыСвязанныхДокументов Цикл

			ОчереднойТип = ТипСвязанныхДокументов.Ключ;
			ОбъектМетаданных = Метаданные.НайтиПоТипу(ОчереднойТип);
			ПолноеИмяМетаданных = ОбъектМетаданных.ПолноеИмя();
			ИмяПараметраСсылки = СтрШаблон("Ссылки%1", СтрЗаменить(ПолноеИмяМетаданных, ".", ""));

			// Сформируем запрос получения сведений о файлах связанных документов по каждому типу отдельно.
			ТекстЗапроса = СтрЗаменить(
			"ВЫБРАТЬ
			|	Файлы.ВладелецФайла КАК Объект,
			|	Файлы.Ссылка КАК Ссылка,
			|	Файлы.Наименование КАК Наименование,
			|	Файлы.ПометкаУдаления КАК ПометкаУдаления,
			|	Файлы.ИндексКартинки КАК ИндексКартинки,
			|	Файлы.ТекущаяВерсияРасширение КАК РасширениеФайла,
			|	ЕСТЬNULL(СведенияОФайлахДокументооборот.ЯвляетсяОригиналом, ЛОЖЬ) КАК ЯвляетсяОригиналом
			|ИЗ
			|	Справочник.Файлы КАК Файлы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФайлахДокументооборот КАК СведенияОФайлахДокументооборот
			|		ПО (СведенияОФайлахДокументооборот.Файл = Файлы.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеФайлыДокументов КАК СлужебныеФайлыДокументов
			|		ПО (СлужебныеФайлыДокументов.Файл = Файлы.Ссылка)
			|ГДЕ
			|	Файлы.ВладелецФайла В(&ПараметрСсылки)
			|	И СлужебныеФайлыДокументов.Файл ЕСТЬ NULL ",
			"ПараметрСсылки",
			ИмяПараметраСсылки);

			ТекстЗапросаФайлы.Добавить("ОБЪЕДИНИТЬ ВСЕ");
			ТекстЗапросаФайлы.Добавить(ТекстЗапроса);
			Если Не ВключатьУдаленныеДокументыИФайлы Тогда
				ТекстЗапросаФайлы.Добавить("И НЕ Файлы.ПометкаУдаления");
			КонецЕсли;
			Если ТолькоОригиналыФайлов Тогда
				ТекстЗапросаФайлы.Добавить("И СведенияОФайлахДокументооборот.ЯвляетсяОригиналом = ИСТИНА");
			КонецЕсли;

			// Сформируем запрос получения подробных сведений о связанных документах.
			Если ОчереднойТип = Тип("СправочникСсылка.ДокументыПредприятия") Тогда

				ТекстЗапроса = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
				|	ИСТИНА КАК ЕстьСвязь,
				|	СвязиДокументовВложенные.Объект КАК Объект
				|ПОМЕСТИТЬ ВТ_Связи
				|ИЗ
				|	РегистрСведений.СвязиОбъектов КАК СвязиДокументовВложенные
				|ГДЕ
				|	СвязиДокументовВложенные.Объект В (&ПараметрСсылки)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ДокументыПредприятия.Ссылка КАК Ссылка,
				|	ДокументыПредприятия.ПометкаУдаления КАК ПометкаУдаления,
				|	ДокументыПредприятия.Заголовок КАК Наименование,
				|	ВЫБОР
				|		КОГДА ДокументыПредприятия.РегистрационныйНомер <> """"
				|			ТОГДА ДокументыПредприятия.РегистрационныйНомер
				|		ИНАЧЕ ДокументыПредприятия.ВременныйНомер
				|	КОНЕЦ КАК НомерДокумента,
				|	ВЫБОР
				|		КОГДА ДокументыПредприятия.ДатаРегистрации <> ДАТАВРЕМЯ(1, 1, 1)
				|			ТОГДА ДокументыПредприятия.ДатаРегистрации
				|		ИНАЧЕ ДокументыПредприятия.ДатаСоздания
				|	КОНЕЦ КАК ДатаДокумента,
				|	ДокументыПредприятия.ВидДокумента.УчитыватьСуммуДокумента КАК ВидДокументаУчитыватьСуммуДокумента,
				|	ДокументыПредприятия.Сумма КАК СуммаДокумента,
				|	ДокументыПредприятия.Валюта.Наименование КАК ВалютаНаименование,
				|	ЕСТЬNULL(ВТ_Связи.ЕстьСвязь, ЛОЖЬ) КАК ЕстьСвязи
				|ИЗ
				|	#ДокументыПредприятия КАК ДокументыПредприятия
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Связи КАК ВТ_Связи
				|		ПО (ДокументыПредприятия.Ссылка = ВТ_Связи.Объект)
				|ГДЕ
				|	ДокументыПредприятия.Ссылка В(&ПараметрСсылки)";
		
			Иначе

				ТекстЗапроса = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
				|	ИСТИНА КАК ЕстьСвязь,
				|	СвязиДокументовВложенные.Объект КАК Объект
				|ПОМЕСТИТЬ ВТ_Связи
				|ИЗ
				|	РегистрСведений.СвязиОбъектов КАК СвязиДокументовВложенные
				|ГДЕ
				|	СвязиДокументовВложенные.Объект В(&ПараметрСсылки)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ДокументыПредприятия.Ссылка КАК Ссылка,
				|	ДокументыПредприятия.ПометкаУдаления КАК ПометкаУдаления,
				|	ДокументыПредприятия.Представление КАК Наименование,
				|	"""""""" КАК НомерДокумента,
				|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаДокумента,
				|	ЛОЖЬ КАК ВидДокументаУчитыватьСуммуДокумента,
				|	0 КАК СуммаДокумента,
				|	"""""""" КАК ВалютаНаименование,
				|	ЕСТЬNULL(ВТ_Связи.ЕстьСвязь, ЛОЖЬ) КАК ЕстьСвязи
				|ИЗ
				|	#ДокументыПредприятия КАК ДокументыПредприятия
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Связи КАК ВТ_Связи
				|		ПО ДокументыПредприятия.Ссылка = ВТ_Связи.Объект
				|ГДЕ
				|	ДокументыПредприятия.Ссылка В(&ПараметрСсылки)";

			КонецЕсли;

			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПараметрСсылки", ИмяПараметраСсылки);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ДокументыПредприятия", ПолноеИмяМетаданных);
			ТекстЗапросаРеквизиты.Добавить(ТекстЗапроса);

			ЗапросФайлы.УстановитьПараметр(ИмяПараметраСсылки, ТипСвязанныхДокументов.Значение);
			ЗапросРеквизиты.УстановитьПараметр(ИмяПараметраСсылки, ТипСвязанныхДокументов.Значение);

		КонецЦикла;
		
		ЗапросРеквизиты.Текст = СтрСоединить(ТекстЗапросаРеквизиты, " ОБЪЕДИНИТЬ ВСЕ ");
		ТекстЗапросаРеквизиты.Очистить();
		ТекстЗапросаРеквизиты = Неопределено;

        ЗаписьЖурналаРегистрации("Фоорма СвязиОбъектов", УровеньЖурналаРегистрации.Ошибка,, Объект, "Нет доступа к связям документа у пользователя " + Пользователи.ТекущийПользователь());
		
КонецПопытки;
#КонецВставки

		РезультатЗапросаРеквизиты = ЗапросРеквизиты.Выполнить();
		ВыборкаДетальныеЗаписиРеквизиты = РезультатЗапросаРеквизиты.Выбрать();
		Пока ВыборкаДетальныеЗаписиРеквизиты.Следующий() Цикл
			
			Если Не ВключатьУдаленныеДокументыИФайлы И ВыборкаДетальныеЗаписиРеквизиты.ПометкаУдаления Тогда
				СведенияОСвязанныхДокументах.Удалить(ВыборкаДетальныеЗаписиРеквизиты.Ссылка);
				Продолжить;
			КонецЕсли;
			
			СведенияОДокументе = СведенияОСвязанныхДокументах.Получить(ВыборкаДетальныеЗаписиРеквизиты.Ссылка);
			ЗаполнитьЗначенияСвойств(СведенияОДокументе, ВыборкаДетальныеЗаписиРеквизиты);
			
			Если ЗначениеЗаполнено(СведенияОДокументе.ВидДокумента) Тогда
				РолиФайлов = Делопроизводство.РолиФайловДляВидаДокументов(СведенияОДокументе.ВидДокумента);
				СведенияОДокументе.Вставить("РолиФайлов", РолиФайлов.ВыгрузитьКолонку("Роль"));
			Иначе
				СведенияОДокументе.Вставить("РолиФайлов", Новый Массив);
			КонецЕсли;
			
			ИмяПредмета = МультипредметностьВызовСервера.ИмяПредметаСтрокой(
					ВыборкаДетальныеЗаписиРеквизиты.Ссылка);
				
			СведенияОДокументе.Представление =
				СтрШаблон("%1 (%2)", ВыборкаДетальныеЗаписиРеквизиты.Наименование, ИмяПредмета);
				
			Если ВыборкаДетальныеЗаписиРеквизиты.ВидДокументаУчитыватьСуммуДокумента = Истина
				И ВыборкаДетальныеЗаписиРеквизиты.СуммаДокумента > 0 Тогда
				
				Копейки =
					ВыборкаДетальныеЗаписиРеквизиты.СуммаДокумента 
					- Цел(ВыборкаДетальныеЗаписиРеквизиты.СуммаДокумента);
				СведенияОДокументе.Сумма =
					СтрШаблон("%1 %2",
						Формат(ВыборкаДетальныеЗаписиРеквизиты.СуммаДокумента,
							?(Копейки = 0, "ЧДЦ=0; ЧН=0", "ЧДЦ=2; ЧН=0; ЧРД=.")),
						ВыборкаДетальныеЗаписиРеквизиты.ВалютаНаименование);
				
			КонецЕсли;
			
		КонецЦикла;
		
		
	КонецЕсли;
		
	// тут сортируем СвязанныеДокументы
	Для Каждого КлючТипаСвязи Из ТипыСвязейПоПорядку Цикл
		
		СведенияОТипеСвязей = ТипыСвязейСДокументами.Получить(КлючТипаСвязи);
		
		ТаблицаДокументов = Новый ТаблицаЗначений;
		ТаблицаДокументов.Колонки.Добавить("Объект");
		
		КвалифДаты = Новый КвалификаторыДаты(ЧастиДаты.Дата);
		ОписаниеТипов = Новый ОписаниеТипов("Дата", ,,,, КвалифДаты);
		ТаблицаДокументов.Колонки.Добавить("ДатаДокумента", ОписаниеТипов);
		ТаблицаДокументов.Колонки.Добавить("НомерДокумента", Новый ОписаниеТипов("Строка"));
		ТаблицаДокументов.Колонки.Добавить("ВидДокумента");
		
		Для Каждого ТекОбъект Из СведенияОТипеСвязей.СвязанныеДокументы Цикл
			
			НовСтр = ТаблицаДокументов.Добавить();
			НовСтр.Объект = ТекОбъект;
			СведенияОДокументе = СведенияОСвязанныхДокументах.Получить(ТекОбъект);
			Если СведенияОДокументе <> Неопределено Тогда
				НовСтр.ДатаДокумента = СведенияОДокументе.ДатаДокумента;
				НовСтр.НомерДокумента = СведенияОДокументе.НомерДокумента;
				НовСтр.ВидДокумента = СведенияОДокументе.ВидДокумента;
			КонецЕсли;
			
		КонецЦикла;	
		
		ТаблицаДокументов.Сортировать(ПорядокСортировки);
		СвязанныеДокументыНовый = Новый Массив;
		Для Каждого Стр Из ТаблицаДокументов Цикл
			СвязанныеДокументыНовый.Добавить(Стр.Объект);
		КонецЦикла;	
		
		СведенияОТипеСвязей.СвязанныеДокументы = СвязанныеДокументыНовый;
		
	КонецЦикла;	
		
		
	//понять есть ли связи дальше - надо сделать отдельный запрос по связям - сгруппировать по видам документов
	// можно будет переделать на запрос к новому РС где будут содержаться количества связей
	
	ПоказыватьТолькоОригиналыВСвязях = Ложь;
	Если ПолучитьФункциональнуюОпцию("ВестиУчетСканКопийОригиналовДокументов") Тогда 
		ПоказыватьТолькоОригиналыВСвязях = ПоказыватьТолькоОригиналыВСвязях;
	КонецЕсли;	
	
	Результат = Новый Структура(
		"ТипыСвязейПоПорядку,ТипыСвязейСДокументами,ТипыСвязанныхДокументов,СведенияОСвязанныхДокументах",
		ТипыСвязейПоПорядку,
		ТипыСвязейСДокументами,
		ТипыСвязанныхДокументов,
		СведенияОСвязанныхДокументах);
	Возврат Результат;
	
КонецФункции

&НаКлиенте
&ИзменениеИКонтроль("ДеревоСвязейПередНачаломИзменения")
Процедура ЦППК_ДеревоСвязейПередНачаломИзменения(Элемент, Отказ)

	Отказ = Истина;

	ТекущиеДанные = Элементы.ДеревоСвязей.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	

	Если ТекущиеДанные.ЭтоРодитель Тогда

		Если ЗначениеЗаполнено(ТекущиеДанные.ТипСвязи) Тогда

			ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.ТипСвязи);
			ОткрытьФорму(
			"Справочник.ТипыСвязей.Форма.ФормаЭлемента",
			ПараметрыФормы,
			Элементы.ДеревоСвязей);

		КонецЕсли;

	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.Файл) Тогда
		ПоказатьЗначение(, ТекущиеДанные.Файл);

	ИначеЕсли ТекущиеДанные.ЭтоВеткаСвязи Или ТекущиеДанные.ЭтоРольФайла Тогда

		Возврат;

	Иначе
		
#Вставка
	// Котляров 17.07.2025 САНФ-034810
	Если 	ТекущиеДанные.ТипСвязи = ПредопределенноеЗначение("Справочник.ТипыСвязей.ЦППК_ИзмененДокументом") 
		ИЛИ	ТекущиеДанные.ТипСвязи = ПредопределенноеЗначение("Справочник.ТипыСвязей.ЦППК_ИзменяетДокумент") Тогда
			ВызватьИсключение НСтр("ru = 'Этот тип связи можно менять только в карточке документа.'");	
	КонецЕсли;
#КонецВставки

		ПараметрыКлюча = Новый Структура;

		ПараметрыКлюча.Вставить("Объект", ТекущиеДанные.Объект);
		ПараметрыКлюча.Вставить("ТипСвязи", ТекущиеДанные.ТипСвязи);
		ПараметрыКлюча.Вставить("СвязанныйОбъект", ТекущиеДанные.СвязанныйОбъект);
		ПараметрыКлюча.Вставить("СвязаннаяСтрока", ТекущиеДанные.СвязаннаяСтрока);
		ПараметрыКлюча.Вставить("ДополнительныйОбъектСвязи", ТекущиеДанные.ДополнительныйОбъектСвязи);

		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("УникальныйИдентификаторФормыВладельца", ЭтаФорма.УникальныйИдентификатор);
		ПараметрыФормы.Вставить("Ключ", СоздатьКлючЗаписиСвязиДокументов(ПараметрыКлюча));
		Открытьформу(
		"РегистрСведений.СвязиОбъектов.ФормаЗаписи",
		ПараметрыФормы,
		Элементы.ДеревоСвязей);

	КонецЕсли;

КонецПроцедуры


